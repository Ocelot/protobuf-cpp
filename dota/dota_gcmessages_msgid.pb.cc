// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_msgid.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dota_gcmessages_msgid.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace dota {

namespace protobuf_dota_5fgcmessages_5fmsgid_2eproto {


namespace {

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = { ~0u };
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;
namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dota_gcmessages_msgid.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void TableStruct::Shutdown() {
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\033dota_gcmessages_msgid.proto\022\nproto.dot"
      "a*\370\341\001\n\nEDOTAGCMsg\022\025\n\020k_EMsgGCDOTABase\020\3306"
      "\022\034\n\027k_EMsgGCGeneralResponse\020\3316\022\035\n\030k_EMsg"
      "GCGameMatchSignOut\020\3346\022%\n k_EMsgGCGameMat"
      "chSignOutResponse\020\3356\022\034\n\027k_EMsgGCJoinChat"
      "Channel\020\3416\022$\n\037k_EMsgGCJoinChatChannelRes"
      "ponse\020\3426\022\037\n\032k_EMsgGCOtherJoinedChannel\020\345"
      "6\022\035\n\030k_EMsgGCOtherLeftChannel\020\3466\022\035\n\030k_EM"
      "sgGCMatchHistoryList\020\3516\022\"\n\035k_EMsgServerT"
      "oGCRequestStatus\020\3626\022\035\n\030k_EMsgGCGetRecent"
      "Matches\020\3636\022\"\n\035k_EMsgGCRecentMatchesRespo"
      "nse\020\3646\022\036\n\031k_EMsgGCStartFindingMatch\020\3716\022\035"
      "\n\030k_EMsgGCConnectedPlayers\020\3726\022\037\n\032k_EMsgG"
      "CAbandonCurrentGame\020\3736\022\035\n\030k_EMsgGCStopFi"
      "ndingMatch\020\3746\022 \n\033k_EMsgGCPracticeLobbyCr"
      "eate\020\3766\022\037\n\032k_EMsgGCPracticeLobbyLeave\020\2007"
      "\022 \n\033k_EMsgGCPracticeLobbyLaunch\020\2017\022\036\n\031k_"
      "EMsgGCPracticeLobbyList\020\2027\022&\n!k_EMsgGCPr"
      "acticeLobbyListResponse\020\2037\022\036\n\031k_EMsgGCPr"
      "acticeLobbyJoin\020\2047\022$\n\037k_EMsgGCPracticeLo"
      "bbySetDetails\020\2067\022%\n k_EMsgGCPracticeLobb"
      "ySetTeamSlot\020\2077\022)\n$k_EMsgGCInitialQuesti"
      "onnaireResponse\020\2117\022\"\n\035k_EMsgGCPracticeLo"
      "bbyResponse\020\2177\022\"\n\035k_EMsgGCBroadcastNotif"
      "ication\020\2207\022!\n\034k_EMsgGCLiveScoreboardUpda"
      "te\020\2217\022#\n\036k_EMsgGCRequestChatChannelList\020"
      "\2247\022+\n&k_EMsgGCRequestChatChannelListResp"
      "onse\020\2257\022\033\n\026k_EMsgGCRequestMatches\020\2307\022#\n\036"
      "k_EMsgGCRequestMatchesResponse\020\2317\022#\n\036k_E"
      "MsgGCRequestPlayerResources\020\2347\022+\n&k_EMsg"
      "GCRequestPlayerResourcesResponse\020\2357\022\024\n\017k"
      "_EMsgGCReadyUp\020\2367\022\'\n\"k_EMsgGCKickedFromM"
      "atchmakingQueue\020\2377\022\033\n\026k_EMsgGCLeaverDete"
      "cted\020\2407\022\037\n\032k_EMsgGCSpectateFriendGame\020\2417"
      "\022\'\n\"k_EMsgGCSpectateFriendGameResponse\020\242"
      "7\022\032\n\025k_EMsgGCPlayerReports\020\2437\022$\n\037k_EMsgG"
      "CReportsRemainingRequest\020\2447\022%\n k_EMsgGCR"
      "eportsRemainingResponse\020\2457\022\037\n\032k_EMsgGCSu"
      "bmitPlayerReport\020\2467\022\'\n\"k_EMsgGCSubmitPla"
      "yerReportResponse\020\2477\022\036\n\031k_EMsgGCPractice"
      "LobbyKick\020\2517\022 \n\033k_EMsgGCReportCountsRequ"
      "est\020\2527\022!\n\034k_EMsgGCReportCountsResponse\020\253"
      "7\022\035\n\030k_EMsgGCRequestSaveGames\020\2547\022#\n\036k_EM"
      "sgGCRequestSaveGamesServer\020\2557\022%\n k_EMsgG"
      "CRequestSaveGamesResponse\020\2567\022#\n\036k_EMsgGC"
      "LeaverDetectedResponse\020\2577\022\"\n\035k_EMsgGCPla"
      "yerFailedToConnect\020\2607\022\035\n\030k_EMsgGCGCToRel"
      "ayConnect\020\2617\022%\n k_EMsgGCGCToRelayConnect"
      "response\020\2627\022\026\n\021k_EMsgGCWatchGame\020\2637\022\036\n\031k"
      "_EMsgGCWatchGameResponse\020\2647\022\035\n\030k_EMsgGCB"
      "anStatusRequest\020\2657\022\036\n\031k_EMsgGCBanStatusR"
      "esponse\020\2667\022 \n\033k_EMsgGCMatchDetailsReques"
      "t\020\2677\022!\n\034k_EMsgGCMatchDetailsResponse\020\2707\022"
      "\034\n\027k_EMsgGCCancelWatchGame\020\2717\022\033\n\026k_EMsgG"
      "CProfileRequest\020\2727\022\034\n\027k_EMsgGCProfileRes"
      "ponse\020\2737\022\022\n\rk_EMsgGCPopup\020\2767\022,\n\'k_EMsgGC"
      "DOTAClearNotifySuccessfulReport\020\3007\022+\n&k_"
      "EMsgGCFriendPracticeLobbyListRequest\020\3077\022"
      ",\n\'k_EMsgGCFriendPracticeLobbyListRespon"
      "se\020\3107\022&\n!k_EMsgGCPracticeLobbyJoinRespon"
      "se\020\3117\022%\n k_EMsgClientEconNotification_Jo"
      "b\020\3127\022\027\n\022k_EMsgGCCreateTeam\020\3137\022\037\n\032k_EMsgG"
      "CCreateTeamResponse\020\3147\022\025\n\020k_EMsgGCTeamDa"
      "ta\020\3217\022#\n\036k_EMsgGCTeamInvite_InviterToGC\020"
      "\3227\0224\n/k_EMsgGCTeamInvite_GCImmediateResp"
      "onseToInviter\020\3237\022*\n%k_EMsgGCTeamInvite_G"
      "CRequestToInvitee\020\3247\022+\n&k_EMsgGCTeamInvi"
      "te_InviteeResponseToGC\020\3257\022+\n&k_EMsgGCTea"
      "mInvite_GCResponseToInviter\020\3267\022+\n&k_EMsg"
      "GCTeamInvite_GCResponseToInvitee\020\3277\022\033\n\026k"
      "_EMsgGCKickTeamMember\020\3307\022#\n\036k_EMsgGCKick"
      "TeamMemberResponse\020\3317\022\026\n\021k_EMsgGCLeaveTe"
      "am\020\3327\022\036\n\031k_EMsgGCLeaveTeamResponse\020\3337\022#\n"
      "\036k_EMsgGCSuggestTeamMatchmaking\020\3347\022%\n k_"
      "EMsgGCPlayerHeroesFavoritesAdd\020\3357\022(\n#k_E"
      "MsgGCPlayerHeroesFavoritesRemove\020\3367\022\034\n\027k"
      "_EMsgGCSetShowcaseHero\020\3457\022%\n k_EMsgGCApp"
      "lyTeamToPracticeLobby\020\3467\022+\n&k_EMsgGCRequ"
      "estInternatinalTicketEmail\020\3477\022\036\n\031k_EMsgG"
      "CTransferTeamAdmin\020\3507\022\034\n\027k_EMsgRequestLe"
      "agueInfo\020\3537\022\035\n\030k_EMsgResponseLeagueInfo\020"
      "\3547\022.\n)k_EMsgGCPracticeLobbyJoinBroadcast"
      "Channel\020\3557\022!\n\034k_EMsgGC_TournamentItemEve"
      "nt\020\3567\022)\n$k_EMsgGC_TournamentItemEventRes"
      "ponse\020\3577\022\030\n\023k_EMsgCastMatchVote\020\3607\022 \n\033k_"
      "EMsgCastMatchVoteResponse\020\3617\022\034\n\027k_EMsgRe"
      "trieveMatchVote\020\3627\022$\n\037k_EMsgRetrieveMatc"
      "hVoteResponse\020\3637\022\026\n\021k_EMsgTeamFanfare\020\3647"
      "\022\036\n\031k_EMsgResponseTeamFanfare\020\3657\022&\n!k_EM"
      "sgGC_GameServerUploadSaveGame\020\3667\022&\n!k_EM"
      "sgGC_GameServerSaveGameResult\020\3677\022#\n\036k_EM"
      "sgGC_GameServerGetLoadGame\020\3707\022)\n$k_EMsgG"
      "C_GameServerGetLoadGameResult\020\3717\022\034\n\027k_EM"
      "sgGCEditTeamDetails\020\3767\022$\n\037k_EMsgGCEditTe"
      "amDetailsResponse\020\3777\022\037\n\032k_EMsgGCProTeamL"
      "istRequest\020\2008\022 \n\033k_EMsgGCProTeamListResp"
      "onse\020\2018\022\032\n\025k_EMsgGCReadyUpStatus\020\2028\022\027\n\022k"
      "_EMsgGCHallOfFame\020\2038\022\036\n\031k_EMsgGCHallOfFa"
      "meRequest\020\2048\022\037\n\032k_EMsgGCHallOfFameRespon"
      "se\020\2058\022&\n!k_EMsgGCGenerateDiretidePrizeLi"
      "st\020\2068\022!\n\034k_EMsgGCRewardDiretidePrizes\020\2108"
      "\022+\n&k_EMsgGCDiretidePrizesRewardedRespon"
      "se\020\2118\022&\n!k_EMsgGCHalloweenHighScoreReque"
      "st\020\2128\022\'\n\"k_EMsgGCHalloweenHighScoreRespo"
      "nse\020\2138\022.\n)k_EMsgGCGenerateDiretidePrizeL"
      "istResponse\020\2148\022#\n\036k_EMsgGCStorePromoPage"
      "sRequest\020\2168\022$\n\037k_EMsgGCStorePromoPagesRe"
      "sponse\020\2178\022\037\n\032k_EMsgGCToGCMatchCompleted\020"
      "\2228\022!\n\034k_EMsgGCBalancedShuffleLobby\020\2248\022&\n"
      "!k_EMsgGCToGCCheckLeaguePermission\020\2258\022.\n"
      ")k_EMsgGCToGCCheckLeaguePermissionRespon"
      "se\020\2268\022$\n\037k_EMsgGCMatchmakingStatsRequest"
      "\020\2358\022%\n k_EMsgGCMatchmakingStatsResponse\020"
      "\2368\022\032\n\025k_EMsgGCBotGameCreate\020\2378\022\"\n\035k_EMsg"
      "GCSetMatchHistoryAccess\020\2408\022*\n%k_EMsgGCSe"
      "tMatchHistoryAccessResponse\020\2418\022\034\n\027k_EMsg"
      "UpgradeLeagueItem\020\2438\022$\n\037k_EMsgUpgradeLea"
      "gueItemResponse\020\2448\022%\n k_EMsgGCTeamMember"
      "ProfileRequest\020\2458\022\"\n\035k_EMsgGCWatchDownlo"
      "adedReplay\020\2468\022 \n\033k_EMsgGCSetMapLocationS"
      "tate\020\2478\022(\n#k_EMsgGCSetMapLocationStateRe"
      "sponse\020\2508\022\036\n\031k_EMsgGCResetMapLocations\020\251"
      "8\022&\n!k_EMsgGCResetMapLocationsResponse\020\252"
      "8\022\035\n\030k_EMsgGCSetFeaturedItems\020\2548\022\032\n\025k_EM"
      "sgGCFeaturedItems\020\2578\022$\n\037k_EMsgRefreshPar"
      "tnerAccountLink\020\2608\022$\n\037k_EMsgClientsRejoi"
      "nChatChannels\020\2618\022 \n\033k_EMsgGCToGCGetUserC"
      "hatInfo\020\2628\022(\n#k_EMsgGCToGCGetUserChatInf"
      "oResponse\020\2638\022%\n k_EMsgGCToGCLeaveAllChat"
      "Channels\020\2648\022%\n k_EMsgGCToGCUpdateAccount"
      "ChatBan\020\2658\022\037\n\032k_EMsgGCGuildCreateRequest"
      "\020\2668\022 \n\033k_EMsgGCGuildCreateResponse\020\2678\022\'\n"
      "\"k_EMsgGCGuildSetAccountRoleRequest\020\2708\022("
      "\n#k_EMsgGCGuildSetAccountRoleResponse\020\2718"
      "\022\035\n\030k_EMsgGCRequestGuildData\020\2728\022\026\n\021k_EMs"
      "gGCGuildData\020\2738\022&\n!k_EMsgGCGuildInviteAc"
      "countRequest\020\2748\022\'\n\"k_EMsgGCGuildInviteAc"
      "countResponse\020\2758\022%\n k_EMsgGCGuildCancelI"
      "nviteRequest\020\2768\022&\n!k_EMsgGCGuildCancelIn"
      "viteResponse\020\2778\022&\n!k_EMsgGCGuildUpdateDe"
      "tailsRequest\020\3008\022\'\n\"k_EMsgGCGuildUpdateDe"
      "tailsResponse\020\3018\022$\n\037k_EMsgGCToGCCanInvit"
      "eUserToTeam\020\3028\022,\n\'k_EMsgGCToGCCanInviteU"
      "serToTeamResponse\020\3038\022\034\n\027k_EMsgGCToGCGetU"
      "serRank\020\3048\022$\n\037k_EMsgGCToGCGetUserRankRes"
      "ponse\020\3058\022 \n\033k_EMsgGCToGCUpdateTeamStats\020"
      "\3108\022\034\n\027k_EMsgGCToGCGetTeamRank\020\3118\022$\n\037k_EM"
      "sgGCToGCGetTeamRankResponse\020\3128\022 \n\033k_EMsg"
      "GCPassportDataRequest\020\3208\022!\n\034k_EMsgGCPass"
      "portDataResponse\020\3218\022\033\n\026k_EMsgGCNotInGuil"
      "dData\020\3238\022\034\n\027k_EMsgGCGuildInviteData\020\3268\022\037"
      "\n\032k_EMsgGCToGCGetLeagueAdmin\020\3278\022\'\n\"k_EMs"
      "gGCToGCGetLeagueAdminResponse\020\3308\022#\n\036k_EM"
      "sgGCRequestLeaguePrizePool\020\3328\022+\n&k_EMsgG"
      "CRequestLeaguePrizePoolResponse\020\3338\022,\n\'k_"
      "EMsgGCToGCUpdateOpenGuildPartyRequest\020\3358"
      "\022-\n(k_EMsgGCToGCUpdateOpenGuildPartyResp"
      "onse\020\3368\022-\n(k_EMsgGCToGCDestroyOpenGuildP"
      "artyRequest\020\3378\022.\n)k_EMsgGCToGCDestroyOpe"
      "nGuildPartyResponse\020\3408\022\037\n\032k_EMsgGCGuildU"
      "pdateMessage\020\3418\022%\n k_EMsgGCPartySetOpenG"
      "uildRequest\020\3428\022&\n!k_EMsgGCPartySetOpenGu"
      "ildResponse\020\3438\022\"\n\035k_EMsgGCGuildOpenParty"
      "Refresh\020\3448\022&\n!k_EMsgGCJoinOpenGuildParty"
      "Request\020\3458\022\'\n\"k_EMsgGCJoinOpenGuildParty"
      "Response\020\3468\022\035\n\030k_EMsgGCLeaveChatChannel\020"
      "\3508\022\030\n\023k_EMsgGCChatMessage\020\3518\022\035\n\030k_EMsgGC"
      "GetHeroStandings\020\3528\022%\n k_EMsgGCGetHeroSt"
      "andingsResponse\020\3538\022!\n\034k_EMsgGCGuildEditL"
      "ogoRequest\020\3578\022\"\n\035k_EMsgGCGuildEditLogoRe"
      "sponse\020\3608\022.\n)k_EMsgGCGuildmatePracticeLo"
      "bbyListRequest\020\3618\022/\n*k_EMsgGCGuildmatePr"
      "acticeLobbyListResponse\020\3628\022*\n%k_EMsgGCIt"
      "emEditorReservationsRequest\020\3638\022+\n&k_EMsg"
      "GCItemEditorReservationsResponse\020\3648\022%\n k"
      "_EMsgGCItemEditorReserveItemDef\020\3658\022-\n(k_"
      "EMsgGCItemEditorReserveItemDefResponse\020\366"
      "8\022)\n$k_EMsgGCItemEditorReleaseReservatio"
      "n\020\3678\0221\n,k_EMsgGCItemEditorReleaseReserva"
      "tionResponse\020\3708\022!\n\034k_EMsgGCRewardTutoria"
      "lPrizes\020\3718\022*\n%k_EMsgGCLastHitChallengeHi"
      "ghScorePost\020\3728\022-\n(k_EMsgGCLastHitChallen"
      "geHighScoreRequest\020\3738\022.\n)k_EMsgGCLastHit"
      "ChallengeHighScoreResponse\020\3748\022\'\n\"k_EMsgG"
      "CCreateFantasyLeagueRequest\020\3758\022(\n#k_EMsg"
      "GCCreateFantasyLeagueResponse\020\3768\022%\n k_EM"
      "sgGCFantasyLeagueInfoRequest\020\2019\022&\n!k_EMs"
      "gGCFantasyLeagueInfoResponse\020\2029\022\036\n\031k_EMs"
      "gGCFantasyLeagueInfo\020\2039\022%\n k_EMsgGCCreat"
      "eFantasyTeamRequest\020\2049\022&\n!k_EMsgGCCreate"
      "FantasyTeamResponse\020\2059\022#\n\036k_EMsgGCEditFa"
      "ntasyTeamRequest\020\2069\022$\n\037k_EMsgGCEditFanta"
      "syTeamResponse\020\2079\0224\n/k_EMsgGCFantasyTeam"
      "InfoRequestByFantasyLeagueID\020\2109\0223\n.k_EMs"
      "gGCFantasyTeamInfoRequestByOwnerAccountI"
      "D\020\2119\022$\n\037k_EMsgGCFantasyTeamInfoResponse\020"
      "\2129\022\034\n\027k_EMsgGCFantasyTeamInfo\020\2139\022#\n\036k_EM"
      "sgGCFantasyLivePlayerStats\020\2149\022$\n\037k_EMsgG"
      "CFantasyFinalPlayerStats\020\2159\022\031\n\024k_EMsgGCF"
      "antasyMatch\020\2169\022$\n\037k_EMsgGCFantasyTeamSco"
      "reRequest\020\2209\022%\n k_EMsgGCFantasyTeamScore"
      "Response\020\2219\022(\n#k_EMsgGCFantasyTeamStandi"
      "ngsRequest\020\2229\022)\n$k_EMsgGCFantasyTeamStan"
      "dingsResponse\020\2239\022&\n!k_EMsgGCFantasyPlaye"
      "rScoreRequest\020\2249\022\'\n\"k_EMsgGCFantasyPlaye"
      "rScoreResponse\020\2259\022*\n%k_EMsgGCFantasyPlay"
      "erStandingsRequest\020\2269\022+\n&k_EMsgGCFantasy"
      "PlayerStandingsResponse\020\2279\022\033\n\026k_EMsgGCFl"
      "ipLobbyTeams\020\2309\022\035\n\030k_EMsgGCCustomGameCre"
      "ate\020\2319\022%\n k_EMsgGCFantasyPlayerInfoReque"
      "st\020\2329\022&\n!k_EMsgGCFantasyPlayerInfoRespon"
      "se\020\2339\022-\n(k_EMsgGCToGCProcessPlayerReport"
      "ForTarget\020\2349\022%\n k_EMsgGCToGCProcessRepor"
      "tSuccess\020\2359\022%\n k_EMsgGCNotifyAccountFlag"
      "sChange\020\2369\022\036\n\031k_EMsgGCSetProfilePrivacy\020"
      "\2379\022&\n!k_EMsgGCSetProfilePrivacyResponse\020"
      "\2409\022 \n\033k_EMsgGCSteamProfileRequest\020\2419\022(\n#"
      "k_EMsgGCSteamProfileRequestResponse\020\2429\022+"
      "\n&k_EMsgGCFantasyLeagueCreateInfoRequest"
      "\020\2439\022,\n\'k_EMsgGCFantasyLeagueCreateInfoRe"
      "sponse\020\2449\022+\n&k_EMsgGCFantasyLeagueInvite"
      "InfoRequest\020\2459\022,\n\'k_EMsgGCFantasyLeagueI"
      "nviteInfoResponse\020\2469\022\036\n\031k_EMsgGCClientIg"
      "noredUser\020\2479\022\'\n\"k_EMsgGCFantasyLeagueCre"
      "ateRequest\020\2509\022(\n#k_EMsgGCFantasyLeagueCr"
      "eateResponse\020\2519\022%\n k_EMsgGCFantasyTeamCr"
      "eateRequest\020\2529\022&\n!k_EMsgGCFantasyTeamCre"
      "ateResponse\020\2539\022/\n*k_EMsgGCFantasyLeagueF"
      "riendJoinListRequest\020\2549\0220\n+k_EMsgGCFanta"
      "syLeagueFriendJoinListResponse\020\2559\022\034\n\027k_E"
      "MsgGCClientSuspended\020\2569\022 \n\033k_EMsgGCParty"
      "MemberSetCoach\020\2579\022,\n\'k_EMsgGCFantasyLeag"
      "ueEditInvitesRequest\020\2609\022-\n(k_EMsgGCFanta"
      "syLeagueEditInvitesResponse\020\2619\022\"\n\035k_EMsg"
      "GCPracticeLobbySetCoach\020\2629\022)\n$k_EMsgGCFa"
      "ntasyLeagueEditInfoRequest\020\2639\022*\n%k_EMsgG"
      "CFantasyLeagueEditInfoResponse\020\2649\022,\n\'k_E"
      "MsgGCFantasyLeagueDraftStatusRequest\020\2659\022"
      "%\n k_EMsgGCFantasyLeagueDraftStatus\020\2669\022,"
      "\n\'k_EMsgGCFantasyLeagueDraftPlayerReques"
      "t\020\2679\022-\n(k_EMsgGCFantasyLeagueDraftPlayer"
      "Response\020\2709\022)\n$k_EMsgGCFantasyLeagueMatc"
      "hupsRequest\020\2719\022*\n%k_EMsgGCFantasyLeagueM"
      "atchupsResponse\020\2729\022)\n$k_EMsgGCFantasyTea"
      "mRosterSwapRequest\020\2739\022*\n%k_EMsgGCFantasy"
      "TeamRosterSwapResponse\020\2749\022%\n k_EMsgGCFan"
      "tasyTeamRosterRequest\020\2759\022&\n!k_EMsgGCFant"
      "asyTeamRosterResponse\020\2769\022\037\n\032k_EMsgGCNexo"
      "nPartnerUpdate\020\2779\022*\n%k_EMsgGCToGCProcess"
      "PCBangRewardPoints\020\3009\022,\n\'k_EMsgGCFantasy"
      "TeamRosterAddDropRequest\020\3019\022-\n(k_EMsgGCF"
      "antasyTeamRosterAddDropResponse\020\3029\022&\n!k_"
      "EMsgPresentedClientTerminateDlg\020\3039\022/\n*k_"
      "EMsgGCFantasyPlayerHisoricalStatsRequest"
      "\020\3049\0220\n+k_EMsgGCFantasyPlayerHisoricalSta"
      "tsResponse\020\3059\022%\n k_EMsgGCPCBangTimedRewa"
      "rdMessage\020\3069\022,\n\'k_EMsgGCLobbyUpdateBroad"
      "castChannelInfo\020\3079\022%\n k_EMsgGCFantasyTea"
      "mTradesRequest\020\3109\022&\n!k_EMsgGCFantasyTeam"
      "TradesResponse\020\3119\022*\n%k_EMsgGCFantasyTeam"
      "TradeCancelRequest\020\3129\022+\n&k_EMsgGCFantasy"
      "TeamTradeCancelResponse\020\3139\022$\n\037k_EMsgGCTo"
      "GCGrantTournamentItem\020\3149\022)\n$k_EMsgGCProc"
      "essFantasyScheduledEvent\020\3159\022&\n!k_EMsgGCT"
      "oGCGrantPCBangRewardItem\020\3169\022)\n$k_EMsgGCT"
      "oGCUpgradeTwitchViewerItems\020\3179\022\'\n\"k_EMsg"
      "GCToGCGetLiveMatchAffiliates\020\3209\022/\n*k_EMs"
      "gGCToGCGetLiveMatchAffiliatesResponse\020\3219"
      "\022*\n%k_EMsgGCToGCUpdatePlayerPennantCount"
      "s\020\3229\022\'\n\"k_EMsgGCToGCGetPlayerPennantCoun"
      "ts\020\3239\022/\n*k_EMsgGCToGCGetPlayerPennantCou"
      "ntsResponse\020\3249\022.\n)k_EMsgGCGameMatchSignO"
      "utPermissionRequest\020\3259\022/\n*k_EMsgGCGameMa"
      "tchSignOutPermissionResponse\020\3269\022&\n!k_EMs"
      "gDOTAChatChannelMemberUpdate\020\3279\022\037\n\032k_EMs"
      "gDOTAAwardEventPoints\020\3309\022\035\n\030k_EMsgDOTAGe"
      "tEventPoints\020\3339\022%\n k_EMsgDOTAGetEventPoi"
      "ntsResponse\020\3349\022(\n#k_EMsgGCToGCSignoutAwa"
      "rdEventPoints\020\3369\022!\n\034k_EMsgDOTASendFriend"
      "Recruits\020\3419\022$\n\037k_EMsgDOTAFriendRecruitsR"
      "equest\020\3429\022%\n k_EMsgDOTAFriendRecruitsRes"
      "ponse\020\3439\022/\n*k_EMsgDOTAFriendRecruitInvit"
      "eAcceptDecline\020\3449\022\'\n\"k_EMsgGCPartyLeader"
      "WatchGamePrompt\020\3459\022#\n\036k_EMsgDOTAFrostivu"
      "sTimeElapsed\020\3469\022#\n\036k_EMsgDOTALiveLeagueG"
      "ameUpdate\020\3529\022\036\n\031k_EMsgDOTAChatGetUserLis"
      "t\020\3539\022&\n!k_EMsgDOTAChatGetUserListRespons"
      "e\020\3549\022#\n\036k_EMsgGCCompendiumSetSelection\020\355"
      "9\022\"\n\035k_EMsgGCCompendiumDataRequest\020\3569\022#\n"
      "\036k_EMsgGCCompendiumDataResponse\020\3579\022$\n\037k_"
      "EMsgDOTAGetPlayerMatchHistory\020\3609\022,\n\'k_EM"
      "sgDOTAGetPlayerMatchHistoryResponse\020\3619\022$"
      "\n\037k_EMsgGCToGCMatchmakingAddParty\020\3629\022\'\n\""
      "k_EMsgGCToGCMatchmakingRemoveParty\020\3639\022,\n"
      "\'k_EMsgGCToGCMatchmakingRemoveAllParties"
      "\020\3649\022&\n!k_EMsgGCToGCMatchmakingMatchFound"
      "\020\3659\022+\n&k_EMsgGCToGCUpdateMatchManagement"
      "Stats\020\3669\022\'\n\"k_EMsgGCToGCUpdateMatchmakin"
      "gStats\020\3679\022 \n\033k_EMsgGCToServerPingRequest"
      "\020\3709\022!\n\034k_EMsgGCToServerPingResponse\020\3719\022#"
      "\n\036k_EMsgGCToServerConsoleCommand\020\3729\022)\n$k"
      "_EMsgGCToGCUpdateLiveLeagueGameInfo\020\3749\022\031"
      "\n\024k_EMsgGCMakeOffering\020\3779\022\035\n\030k_EMsgGCReq"
      "uestOfferings\020\200:\022%\n k_EMsgGCRequestOffer"
      "ingsResponse\020\201:\022#\n\036k_EMsgGCToGCProcessMa"
      "tchLeaver\020\202:\022!\n\034k_EMsgGCNotificationsReq"
      "uest\020\203:\022\"\n\035k_EMsgGCNotificationsResponse"
      "\020\204:\022#\n\036k_EMsgGCToGCModifyNotification\020\205:"
      "\022$\n\037k_EMsgGCToGCSetNewNotifications\020\206:\022!"
      "\n\034k_EMsgGCToGCSetIsLeagueAdmin\020\207:\022\035\n\030k_E"
      "MsgGCLeagueAdminState\020\210:\022%\n k_EMsgGCToGC"
      "SendLeagueAdminState\020\211:\022\034\n\027k_EMsgGCLeagu"
      "eAdminList\020\212:\022)\n$k_EMsgGCNotificationsMa"
      "rkReadRequest\020\213:\022\036\n\031k_EMsgGCFantasyMessa"
      "geAdd\020\214:\022#\n\036k_EMsgGCFantasyMessagesReque"
      "st\020\215:\022$\n\037k_EMsgGCFantasyMessagesResponse"
      "\020\216:\022+\n&k_EMsgGCFantasyScheduledMatchesRe"
      "quest\020\217:\022,\n\'k_EMsgGCFantasyScheduledMatc"
      "hesResponse\020\220:\022\"\n\035k_EMsgGCToGCGrantLeagu"
      "eAccess\020\221:\022\034\n\027k_EMsgGCEventGameCreate\020\223:"
      "\022*\n%k_EMsgGCPerfectWorldUserLookupReques"
      "t\020\224:\022+\n&k_EMsgGCPerfectWorldUserLookupRe"
      "sponse\020\225:\022\037\n\032k_EMsgGCFantasyRemoveOwner\020"
      "\230:\022\'\n\"k_EMsgGCFantasyRemoveOwnerResponse"
      "\020\231:\022(\n#k_EMsgGCRequestBatchPlayerResourc"
      "es\020\232:\0220\n+k_EMsgGCRequestBatchPlayerResou"
      "rcesResponse\020\233:\022\"\n\035k_EMsgGCToGCSendUpdat"
      "eLeagues\020\234:\022+\n&k_EMsgGCCompendiumSetSele"
      "ctionResponse\020\235:\022\036\n\031k_EMsgGCPlayerInfoRe"
      "quest\020\236:\022\027\n\022k_EMsgGCPlayerInfo\020\237:\022\035\n\030k_E"
      "MsgGCPlayerInfoSubmit\020\240:\022%\n k_EMsgGCPlay"
      "erInfoSubmitResponse\020\241:\022 \n\033k_EMsgGCToGCG"
      "etAccountLevel\020\242:\022(\n#k_EMsgGCToGCGetAcco"
      "untLevelResponse\020\243:\022\"\n\035k_EMsgGCToGCGetAc"
      "countPartner\020\244:\022*\n%k_EMsgGCToGCGetAccoun"
      "tPartnerResponse\020\245:\022\"\n\035k_EMsgGCToGCGetAc"
      "countProfile\020\246:\022*\n%k_EMsgGCToGCGetAccoun"
      "tProfileResponse\020\247:\022(\n#k_EMsgDOTAGetWeek"
      "endTourneySchedule\020\250:\022%\n k_EMsgDOTAWeeke"
      "ndTourneySchedule\020\251:\022+\n&k_EMsgGCJoinable"
      "CustomGameModesRequest\020\252:\022,\n\'k_EMsgGCJoi"
      "nableCustomGameModesResponse\020\253:\022)\n$k_EMs"
      "gGCJoinableCustomLobbiesRequest\020\254:\022*\n%k_"
      "EMsgGCJoinableCustomLobbiesResponse\020\255:\022!"
      "\n\034k_EMsgGCQuickJoinCustomLobby\020\256:\022)\n$k_E"
      "MsgGCQuickJoinCustomLobbyResponse\020\257:\022&\n!"
      "k_EMsgGCToGCGrantEventPointAction\020\260:\022\037\n\032"
      "k_EMsgServerGetEventPoints\020\261:\022\'\n\"k_EMsgS"
      "erverGetEventPointsResponse\020\262:\022&\n!k_EMsg"
      "ServerGrantSurveyPermission\020\263:\022.\n)k_EMsg"
      "ServerGrantSurveyPermissionResponse\020\264:\022$"
      "\n\037k_EMsgClientProvideSurveyResult\020\265:\022\'\n\""
      "k_EMsgGCToGCSetCompendiumSelection\020\266:\022#\n"
      "\036k_EMsgGCToGCUpdateTI4HeroQuest\020\270:\022\"\n\035k_"
      "EMsgGCCompendiumDataChanged\020\271:\022\'\n\"k_EMsg"
      "DOTAFantasyLeagueFindRequest\020\272:\022(\n#k_EMs"
      "gDOTAFantasyLeagueFindResponse\020\273:\022\031\n\024k_E"
      "MsgGCHasItemQuery\020\274:\022\034\n\027k_EMsgGCHasItemR"
      "esponse\020\275:\022!\n\034k_EMsgGCConsumeFantasyTick"
      "et\020\276:\022(\n#k_EMsgGCConsumeFantasyTicketFai"
      "lure\020\277:\022)\n$k_EMsgGCToGCGrantEventPointAc"
      "tionMsg\020\300:\022&\n!k_EMsgClientToGCTrackDialo"
      "gResult\020\301:\022&\n!k_EMsgGCFantasyLeaveLeague"
      "Request\020\302:\022\'\n\"k_EMsgGCFantasyLeaveLeague"
      "Response\020\303:\022(\n#k_EMsgGCToGCGetCompendium"
      "Selections\020\304:\0220\n+k_EMsgGCToGCGetCompendi"
      "umSelectionsResponse\020\305:\022)\n$k_EMsgServerT"
      "oGCMatchConnectionStats\020\306:\022\'\n\"k_EMsgGCTo"
      "ClientTournamentItemDrop\020\307:\022$\n\037k_EMsgSQL"
      "DelayedGrantLeagueDrop\020\310:\022\'\n\"k_EMsgServe"
      "rGCUpdateSpectatorCount\020\311:\022-\n(k_EMsgGCFa"
      "ntasyPlayerScoreDetailsRequest\020\313:\022.\n)k_E"
      "MsgGCFantasyPlayerScoreDetailsResponse\020\314"
      ":\022\037\n\032k_EMsgGCToGCEmoticonUnlock\020\315:\022\033\n\026k_"
      "EMsgSignOutDraftInfo\020\316:\022(\n#k_EMsgClientT"
      "oGCEmoticonDataRequest\020\317:\022!\n\034k_EMsgGCToC"
      "lientEmoticonData\020\320:\022\?\n:k_EMsgGCPractice"
      "LobbyToggleBroadcastChannelCameramanStat"
      "us\020\321:\022,\n\'k_EMsgGCToGCCreateWeekendTourne"
      "yRequest\020\322:\022-\n(k_EMsgGCToGCCreateWeekend"
      "TourneyResponse\020\323:\022(\n#k_EMsgClientToGCSe"
      "tAdditionalEquips\020\331:\022(\n#k_EMsgClientToGC"
      "GetAdditionalEquips\020\332:\0220\n+k_EMsgClientTo"
      "GCGetAdditionalEquipsResponse\020\333:\022(\n#k_EM"
      "sgServerToGCGetAdditionalEquips\020\334:\0220\n+k_"
      "EMsgServerToGCGetAdditionalEquipsRespons"
      "e\020\335:\022\031\n\024k_EMsgDOTARedeemItem\020\336:\022!\n\034k_EMs"
      "gDOTARedeemItemResponse\020\337:\022(\n#k_EMsgSQLG"
      "CToGCGrantAllHeroProgress\020\340:\022\'\n\"k_EMsgCl"
      "ientToGCGetAllHeroProgress\020\341:\022/\n*k_EMsgC"
      "lientToGCGetAllHeroProgressResponse\020\342:\022#"
      "\n\036k_EMsgGCToGCGetServerForClient\020\343:\022+\n&k"
      "_EMsgGCToGCGetServerForClientResponse\020\344:"
      "\022*\n%k_EMsgSQLProcessTournamentGameOutcom"
      "e\020\345:\022\"\n\035k_EMsgSQLGrantTrophyToAccount\020\346:"
      "\022\"\n\035k_EMsgClientToGCGetTrophyList\020\347:\022*\n%"
      "k_EMsgClientToGCGetTrophyListResponse\020\350:"
      "\022\"\n\035k_EMsgGCToClientTrophyAwarded\020\351:\022 \n\033"
      "k_EMsgGCGameBotMatchSignOut\020\352:\0221\n,k_EMsg"
      "GCGameBotMatchSignOutPermissionRequest\020\353"
      ":\022\031\n\024k_EMsgSignOutBotInfo\020\354:\022#\n\036k_EMsgGC"
      "ToGCUpdateProfileCards\020\355:\022#\n\036k_EMsgClien"
      "tToGCGetProfileCard\020\356:\022+\n&k_EMsgClientTo"
      "GCGetProfileCardResponse\020\357:\022#\n\036k_EMsgSer"
      "verToGCGetProfileCard\020\360:\022+\n&k_EMsgServer"
      "ToGCGetProfileCardResponse\020\361:\022(\n#k_EMsgC"
      "lientToGCSetProfileCardSlots\020\362:\022\'\n\"k_EMs"
      "gGCToClientProfileCardUpdated\020\363:\022\'\n\"k_EM"
      "sgServerToGCVictoryPredictions\020\364:\022-\n(k_E"
      "MsgClientToGCMarkNotificationListRead\020\366:"
      "\022)\n$k_EMsgGCToClientNewNotificationAdded"
      "\020\367:\022\'\n\"k_EMsgServerToGCSuspiciousActivit"
      "y\020\370:\022&\n!k_EMsgSignOutCommunicationSummar"
      "y\020\371:\022+\n&k_EMsgServerToGCRequestStatus_Re"
      "sponse\020\372:\022%\n k_EMsgClientToGCCreateHeroS"
      "tatue\020\373:\022+\n&k_EMsgGCToClientHeroStatueCr"
      "eateResult\020\374:\022&\n!k_EMsgGCGCToLANServerRe"
      "layConnect\020\375:\022\'\n\"k_EMsgServerToGCGetInga"
      "meEventData\020\377:\022/\n*k_EMsgGCToGCUpdateInga"
      "meEventDataBroadcast\020\200;\022-\n(k_EMsgGCToSer"
      "verIngameEventData_OraclePA\020\201;\022(\n#k_EMsg"
      "ServerToGCReportKillSummaries\020\202;\022$\n\037k_EM"
      "sgGCToGCReportKillSummaries\020\203;\022\'\n\"k_EMsg"
      "GCToGCUpdateAssassinMinigame\020\204;\022&\n!k_EMs"
      "gGCToGCFantasySetMatchLeague\020\205;\022*\n%k_EMs"
      "gClientToGCRecordCompendiumStats\020\206;\022(\n#k"
      "_EMsgGCItemEditorRequestLeagueInfo\020\207;\022)\n"
      "$k_EMsgGCItemEditorLeagueInfoResponse\020\210;"
      "\022(\n#k_EMsgGCToGCUpdatePlayerPredictions\020"
      "\211;\022%\n k_EMsgGCToServerPredictionResult\020\212"
      ";\0220\n+k_EMsgServerToGCSignoutAwardAdditio"
      "nalDrops\020\213;\022,\n\'k_EMsgGCToGCSignoutAwardA"
      "dditionalDrops\020\214;\022\'\n\"k_EMsgGCToClientEve"
      "ntStatusChanged\020\215;\022\035\n\030k_EMsgGCHasItemDef"
      "sQuery\020\216;\022 \n\033k_EMsgGCHasItemDefsResponse"
      "\020\217;\022,\n\'k_EMsgGCToGCReplayMonitorValidate"
      "Replay\020\221;\022\033\n\026k_EMsgLobbyEventPoints\020\224;\022%"
      "\n k_EMsgGCToGCGetCustomGameTickets\020\225;\022-\n"
      "(k_EMsgGCToGCGetCustomGameTicketsRespons"
      "e\020\226;\022!\n\034k_EMsgGCToGCCustomGamePlayed\020\230;\022"
      "\'\n\"k_EMsgGCToGCGrantEventPointsToUser\020\231;"
      "\022)\n$k_EMsgGCToGCSetEventMMPanicFlushTime"
      "\020\232;\022 \n\033k_EMsgGameserverCrashReport\020\233;\022(\n"
      "#k_EMsgGameserverCrashReportResponse\020\234;\022"
      "(\n#k_EMsgGCToClientSteamDatagramTicket\020\235"
      ";\022$\n\037k_EMsgGCToGCGrantEventOwnership\020\236;\022"
      "(\n#k_EMsgGCToGCSendAccountsEventPoints\020\237"
      ";\022*\n%k_EMsgClientToGCRerollPlayerChallen"
      "ge\020\240;\022*\n%k_EMsgServerToGCRerollPlayerCha"
      "llenge\020\241;\022*\n%k_EMsgGCRerollPlayerChallen"
      "geResponse\020\242;\022\'\n\"k_EMsgSignOutUpdatePlay"
      "erChallenge\020\243;\022#\n\036k_EMsgClientToGCSetPar"
      "tyLeader\020\244;\022\'\n\"k_EMsgClientToGCCancelPar"
      "tyInvites\020\245;\022$\n\037k_EMsgGCToGCMasterReload"
      "Account\020\246;\022-\n(k_EMsgSQLGrantLeagueMatchT"
      "oTicketHolders\020\250;\0220\n+k_EMsgClientToGCSet"
      "AdditionalEquipsResponse\020\251;\022)\n$k_EMsgGCT"
      "oGCEmoticonUnlockNoRollback\020\252;\022%\n k_EMsg"
      "GCToGCGetCompendiumFanfare\020\253;\022$\n\037k_EMsgS"
      "erverToGCHoldEventPoints\020\254;\022(\n#k_EMsgSig"
      "nOutReleaseEventPointHolds\020\255;\022#\n\036k_EMsgG"
      "CToGCChatNewUserSession\020\256;\022$\n\037k_EMsgClie"
      "ntToGCGetLeagueSeries\020\257;\022,\n\'k_EMsgClient"
      "ToGCGetLeagueSeriesResponse\020\260;\022/\n*k_EMsg"
      "SQLGCToGCSignoutUpdateLeagueSchedule\020\261;\022"
      "*\n%k_EMsgGCToServerUpdateBroadcastCheers"
      "\020\262;\022%\n k_EMsgClientToGCApplyGemCombiner\020"
      "\263;\022+\n&k_EMsgClientToGCDOTACreateStaticRe"
      "cipe\020\264;\0223\n.k_EMsgClientToGCDOTACreateSta"
      "ticRecipeResponse\020\265;\022$\n\037k_EMsgClientToGC"
      "GetAllHeroOrder\020\266;\022,\n\'k_EMsgClientToGCGe"
      "tAllHeroOrderResponse\020\267;\022$\n\037k_EMsgSQLGCT"
      "oGCGrantBadgePoints\020\270;\022&\n!k_EMsgGCToGCGe"
      "tAccountMatchStatus\020\271;\022.\n)k_EMsgGCToGCGe"
      "tAccountMatchStatusResponse\020\272;\022-\n(k_EMsg"
      "GCToGCCheckOwnsEntireEmoticonRange\020\273;\0225\n"
      "0k_EMsgGCToGCCheckOwnsEntireEmoticonRang"
      "eResponse\020\274;\022\031\n\024k_EMsgGCUpdateClippy\020\275;\022"
      "\037\n\032k_EMsgGCUpdateClientClippy\020\276;\022\'\n\"k_EM"
      "sgGCRequestItemRecommendations\020\277;\022/\n*k_E"
      "MsgGCRequestItemRecommendationsResponse\020"
      "\300;\022\035\n\030k_EMsgGCDev_GrantWarKill\020\301>\022%\n k_E"
      "MsgServerToGCLockCharmTrading\020\304>\022\'\n\"k_EM"
      "sgClientToGCPlayerStatsRequest\020\306>\022(\n#k_E"
      "MsgGCToClientPlayerStatsResponse\020\307>\022#\n\036k"
      "_EMsgGCClearPracticeLobbyTeam\020\310>\022)\n$k_EM"
      "sgClientToGCFindTopSourceTVGames\020\311>\0221\n,k"
      "_EMsgGCToClientFindTopSourceTVGamesRespo"
      "nse\020\312>\022\026\n\021k_EMsgGCLobbyList\020\313>\022\036\n\031k_EMsg"
      "GCLobbyListResponse\020\314>\022$\n\037k_EMsgGCPlayer"
      "StatsMatchSignOut\020\315>\0221\n,k_EMsgClientToGC"
      "CustomGamePlayerCountRequest\020\316>\0222\n-k_EMs"
      "gGCToClientCustomGamePlayerCountResponse"
      "\020\317>\0221\n,k_EMsgClientToGCSocialFeedPostCom"
      "mentRequest\020\320>\0222\n-k_EMsgGCToClientSocial"
      "FeedPostCommentResponse\020\321>\0224\n/k_EMsgClie"
      "ntToGCCustomGamesFriendsPlayedRequest\020\322>"
      "\0225\n0k_EMsgGCToClientCustomGamesFriendsPl"
      "ayedResponse\020\323>\0223\n.k_EMsgClientToGCFrien"
      "dsPlayedCustomGameRequest\020\324>\0224\n/k_EMsgGC"
      "ToClientFriendsPlayedCustomGameResponse\020"
      "\325>\022*\n%k_EMsgClientToGCFeaturedHeroesRequ"
      "est\020\326>\022+\n&k_EMsgGCToClientFeaturedHeroes"
      "Response\020\327>\022\037\n\032k_EMsgGCTopCustomGamesLis"
      "t\020\330>\0222\n-k_EMsgClientToGCSocialMatchPostC"
      "ommentRequest\020\331>\0223\n.k_EMsgGCToClientSoci"
      "alMatchPostCommentResponse\020\332>\022.\n)k_EMsgC"
      "lientToGCSocialMatchDetailsRequest\020\333>\022/\n"
      "*k_EMsgGCToClientSocialMatchDetailsRespo"
      "nse\020\334>\022!\n\034k_EMsgClientToGCSetPartyOpen\020\335"
      ">\022%\n k_EMsgClientToGCMergePartyInvite\020\336>"
      "\022*\n%k_EMsgGCToClientMergeGroupInviteRepl"
      "y\020\337>\022\'\n\"k_EMsgClientToGCMergePartyRespon"
      "se\020\340>\022,\n\'k_EMsgGCToClientMergePartyRespo"
      "nseReply\020\341>\022(\n#k_EMsgClientToGCGetProfil"
      "eCardStats\020\342>\0220\n+k_EMsgClientToGCGetProf"
      "ileCardStatsResponse\020\343>\022,\n\'k_EMsgClientT"
      "oGCTopLeagueMatchesRequest\020\344>\022,\n\'k_EMsgC"
      "lientToGCTopFriendMatchesRequest\020\345>\022,\n\'k"
      "_EMsgGCToClientProfileCardStatsUpdated\020\350"
      ">\022\"\n\035k_EMsgServerToGCRealtimeStats\020\351>\022+\n"
      "&k_EMsgGCToServerRealtimeStatsStartStop\020"
      "\352>\022%\n k_EMsgGCToGCGetServersForClients\020\355"
      ">\022-\n(k_EMsgGCToGCGetServersForClientsRes"
      "ponse\020\356>\022&\n!k_EMsgGCPracticeLobbyKickFro"
      "mTeam\020\357>\022!\n\034k_EMsgDOTAChatGetMemberCount"
      "\020\360>\022)\n$k_EMsgDOTAChatGetMemberCountRespo"
      "nse\020\361>\0221\n,k_EMsgClientToGCSocialFeedPost"
      "MessageRequest\020\362>\0222\n-k_EMsgGCToClientSoc"
      "ialFeedPostMessageResponse\020\363>\022/\n*k_EMsgC"
      "ustomGameListenServerStartedLoading\020\364>\022*"
      "\n%k_EMsgCustomGameClientFinishedLoading\020"
      "\365>\022/\n*k_EMsgGCPracticeLobbyCloseBroadcas"
      "tChannel\020\366>\022&\n!k_EMsgGCStartFindingMatch"
      "Response\020\367>\022$\n\037k_EMsgSQLGCToGCGrantAccou"
      "ntFlag\020\371>\022 \n\033k_EMsgGCToGCGetAccountFlags"
      "\020\372>\022(\n#k_EMsgGCToGCGetAccountFlagsRespon"
      "se\020\373>\022\034\n\027k_EMsgSignOutWagerStats\020\374>\022-\n(k"
      "_EMsgGCToClientTopLeagueMatchesResponse\020"
      "\375>\022-\n(k_EMsgGCToClientTopFriendMatchesRe"
      "sponse\020\376>\022*\n%k_EMsgClientToGCMatchesMini"
      "malRequest\020\377>\022+\n&k_EMsgClientToGCMatches"
      "MinimalResponse\020\200\?\022&\n!k_EMsgGCToGCGetPro"
      "fileBadgePoints\020\201\?\022.\n)k_EMsgGCToGCGetPro"
      "fileBadgePointsResponse\020\202\?\022\'\n\"k_EMsgGCTo"
      "ClientChatRegionsEnabled\020\203\?\022\035\n\030k_EMsgCli"
      "entToGCPingData\020\204\?\022(\n#k_EMsgServerToGCMa"
      "tchDetailsRequest\020\205\?\022)\n$k_EMsgGCToServer"
      "MatchDetailsResponse\020\206\?\022%\n k_EMsgGCToGCE"
      "nsureAccountInParty\020\207\?\022-\n(k_EMsgGCToGCEn"
      "sureAccountInPartyResponse\020\210\?\022&\n!k_EMsgC"
      "lientToGCGetProfileTickets\020\211\?\022.\n)k_EMsgC"
      "lientToGCGetProfileTicketsResponse\020\212\?\022\'\n"
      "\"k_EMsgGCToClientMatchGroupsVersion\020\213\?\022$"
      "\n\037k_EMsgClientToGCH264Unsupported\020\214\?\022\'\n\""
      "k_EMsgClientToGCRequestH264Support\020\215\?\022%\n"
      " k_EMsgClientToGCGetQuestProgress\020\216\?\022-\n("
      "k_EMsgClientToGCGetQuestProgressResponse"
      "\020\217\?\022\031\n\024k_EMsgSignOutXPCoins\020\220\?\022#\n\036k_EMsg"
      "GCToClientMatchSignedOut\020\221\?\022 \n\033k_EMsgGCG"
      "etHeroStatsHistory\020\222\?\022(\n#k_EMsgGCGetHero"
      "StatsHistoryResponse\020\223\?\022&\n!k_EMsgClientT"
      "oGCPrivateChatInvite\020\224\?\022$\n\037k_EMsgClientT"
      "oGCPrivateChatKick\020\230\?\022\'\n\"k_EMsgClientToG"
      "CPrivateChatPromote\020\231\?\022&\n!k_EMsgClientTo"
      "GCPrivateChatDemote\020\232\?\022(\n#k_EMsgGCToClie"
      "ntPrivateChatResponse\020\233\?\022+\n&k_EMsgClient"
      "ToGCPrivateChatInfoRequest\020\234\?\022,\n\'k_EMsgG"
      "CToClientPrivateChatInfoResponse\020\235\?\0222\n-k"
      "_EMsgClientToGCLatestConductScorecardReq"
      "uest\020\237\?\022+\n&k_EMsgClientToGCLatestConduct"
      "Scorecard\020\240\?\022!\n\034k_EMsgServerToGCPostMatc"
      "hTip\020\241\?\022)\n$k_EMsgServerToGCPostMatchTipR"
      "esponse\020\242\?\022$\n\037k_EMsgClientToGCWageringRe"
      "quest\020\243\?\022%\n k_EMsgGCToClientWageringResp"
      "onse\020\244\?\022&\n!k_EMsgClientToGCEventGoalsReq"
      "uest\020\247\?\022\'\n\"k_EMsgClientToGCEventGoalsRes"
      "ponse\020\250\?\022&\n!k_EMsgClientToGCLeaguePredic"
      "tions\020\252\?\022.\n)k_EMsgGCToClientLeaguePredic"
      "tionsResponse\020\253\?\022(\n#k_EMsgGCToGCLeaguePr"
      "edictionsUpdate\020\254\?\022\'\n\"k_EMsgClientToGCSu"
      "spiciousActivity\020\255\?\022&\n!k_EMsgGCToGCAddUs"
      "erToPostGameChat\020\256\?\022)\n$k_EMsgClientToGCH"
      "asPlayerVotedForMVP\020\257\?\0221\n,k_EMsgClientTo"
      "GCHasPlayerVotedForMVPResponse\020\260\?\022\037\n\032k_E"
      "MsgClientToGCVoteForMVP\020\261\?\022\'\n\"k_EMsgClie"
      "ntToGCVoteForMVPResponse\020\262\?\022\"\n\035k_EMsgGCT"
      "oGCGetEventOwnership\020\263\?\022*\n%k_EMsgGCToGCG"
      "etEventOwnershipResponse\020\264\?\0223\n.k_EMsgGCT"
      "oClientAutomatedTournamentStateChange\020\265\?"
      "\022\'\n\"k_EMsgClientToGCWeekendTourneyOpts\020\266"
      "\?\022/\n*k_EMsgClientToGCWeekendTourneyOptsR"
      "esponse\020\267\?\022(\n#k_EMsgClientToGCWeekendTou"
      "rneyLeave\020\270\?\0220\n+k_EMsgClientToGCWeekendT"
      "ourneyLeaveResponse\020\271\?\022)\n$k_EMsgClientTo"
      "GCTeammateStatsRequest\020\274\?\022*\n%k_EMsgClien"
      "tToGCTeammateStatsResponse\020\275\?\022\'\n\"k_EMsgC"
      "lientToGCGetGiftPermissions\020\276\?\022/\n*k_EMsg"
      "ClientToGCGetGiftPermissionsResponse\020\277\?\022"
      "\"\n\035k_EMsgClientToGCVoteForArcana\020\300\?\022*\n%k"
      "_EMsgClientToGCVoteForArcanaResponse\020\301\?\022"
      "0\n+k_EMsgClientToGCRequestArcanaVotesRem"
      "aining\020\302\?\0228\n3k_EMsgClientToGCRequestArca"
      "naVotesRemainingResponse\020\303\?\022&\n!k_EMsgGCT"
      "ransferTeamAdminResponse\020\304\?\022\032\n\025k_EMsgGCC"
      "hangeTeamSub\020\305\?\022\"\n\035k_EMsgGCChangeTeamSub"
      "Response\020\306\?\022\035\n\030k_EMsgGCToClientTeamInfo\020"
      "\307\?\022\036\n\031k_EMsgGCToClientTeamsInfo\020\310\?\022&\n!k_"
      "EMsgClientToGCMyTeamInfoRequest\020\311\?\022)\n$k_"
      "EMsgClientToGCRequestEventPointLog\020\312\?\0221\n"
      ",k_EMsgClientToGCRequestEventPointLogRes"
      "ponse\020\313\?\022$\n\037k_EMsgClientToGCPublishUserS"
      "tat\020\314\?\022\"\n\035k_EMsgGCToGCSignoutSpendWager\020"
      "\315\?\022\037\n\032k_EMsgGCSubmitLobbyMVPVote\020\320\?\022\'\n\"k"
      "_EMsgGCSubmitLobbyMVPVoteResponse\020\321\?\022.\n)"
      "k_EMsgClientToGCRequestLinaPlaysRemainin"
      "g\020\322\?\0226\n1k_EMsgClientToGCRequestLinaPlays"
      "RemainingResponse\020\323\?\022*\n%k_EMsgClientToGC"
      "RequestLinaGameResult\020\324\?\0222\n-k_EMsgClient"
      "ToGCRequestLinaGameResultResponse\020\325\?\022\'\n\""
      "k_EMsgSignOutCommunityGoalProgress\020\326\?\022,\n"
      "\'k_EMsgGCToClientLobbyMVPNotifyRecipient"
      "\020\327\?\022$\n\037k_EMsgGCToClientLobbyMVPAwarded\020\330"
      "\?\022)\n$k_EMsgGCToClientQuestProgressUpdate"
      "d\020\331\?\022#\n\036k_EMsgGCToClientWageringUpdate\020\332"
      "\?\022&\n!k_EMsgGCToClientArcanaVotesUpdate\020\333"
      "\?\022\'\n\"k_EMsgClientToGCAddTI6TreeProgress\020"
      "\334\?\022-\n(k_EMsgClientToGCSetSpectatorLobbyD"
      "etails\020\335\?\0225\n0k_EMsgClientToGCSetSpectato"
      "rLobbyDetailsResponse\020\336\?\022)\n$k_EMsgClient"
      "ToGCCreateSpectatorLobby\020\337\?\0221\n,k_EMsgCli"
      "entToGCCreateSpectatorLobbyResponse\020\340\?\022\'"
      "\n\"k_EMsgClientToGCSpectatorLobbyList\020\341\?\022"
      "/\n*k_EMsgClientToGCSpectatorLobbyListRes"
      "ponse\020\342\?\022$\n\037k_EMsgSpectatorLobbyGameDeta"
      "ils\020\343\?\0226\n1k_EMsgServerToGCCompendiumInGa"
      "mePredictionResults\020\346\?\022:\n5k_EMsgServerTo"
      "GCCloseCompendiumInGamePredictionVoting\020"
      "\347\?\022\'\n\"k_EMsgClientToGCOpenPlayerCardPack"
      "\020\350\?\022/\n*k_EMsgClientToGCOpenPlayerCardPac"
      "kResponse\020\351\?\0225\n0k_EMsgClientToGCSelectCo"
      "mpendiumInGamePrediction\020\352\?\022=\n8k_EMsgCli"
      "entToGCSelectCompendiumInGamePredictionR"
      "esponse\020\353\?\0221\n,k_EMsgClientToGCWeekendTou"
      "rneyGetPlayerStats\020\354\?\0229\n4k_EMsgClientToG"
      "CWeekendTourneyGetPlayerStatsResponse\020\355\?"
      "\022&\n!k_EMsgClientToGCRecyclePlayerCard\020\356\?"
      "\022.\n)k_EMsgClientToGCRecyclePlayerCardRes"
      "ponse\020\357\?\022)\n$k_EMsgClientToGCCreatePlayer"
      "CardPack\020\360\?\0221\n,k_EMsgClientToGCCreatePla"
      "yerCardPackResponse\020\361\?\022/\n*k_EMsgClientTo"
      "GCGetPlayerCardRosterRequest\020\362\?\0220\n+k_EMs"
      "gClientToGCGetPlayerCardRosterResponse\020\363"
      "\?\022/\n*k_EMsgClientToGCSetPlayerCardRoster"
      "Request\020\364\?\0220\n+k_EMsgClientToGCSetPlayerC"
      "ardRosterResponse\020\365\?\022B\n=k_EMsgServerToGC"
      "CloseCompendiumInGamePredictionVotingRes"
      "ponse\020\367\?\022>\n9k_EMsgServerToGCCompendiumIn"
      "GamePredictionResultsResponse\020\371\?\022 \n\033k_EM"
      "sgLobbyBattleCupVictory\020\372\?\022\"\n\035k_EMsgGCGe"
      "tPlayerCardItemInfo\020\373\?\022*\n%k_EMsgGCGetPla"
      "yerCardItemInfoResponse\020\374\?\022/\n*k_EMsgClie"
      "ntToGCRequestSteamDatagramTicket\020\375\?\0227\n2k"
      "_EMsgClientToGCRequestSteamDatagramTicke"
      "tResponse\020\376\?\022,\n\'k_EMsgGCToClientBattlePa"
      "ssRollupRequest\020\377\?\022-\n(k_EMsgGCToClientBa"
      "ttlePassRollupResponse\020\200@\022/\n*k_EMsgClien"
      "tToGCTransferSeasonalMMRRequest\020\201@\0220\n+k_"
      "EMsgClientToGCTransferSeasonalMMRRespons"
      "e\020\202@\022+\n&k_EMsgGCToGCPublicChatCommunicat"
      "ionBan\020\203@\022+\n&k_EMsgGCToGCUpdateAccountPu"
      "blicChatBan\020\204@\022!\n\034k_EMsgGCChatReportPubl"
      "icSpam\020\205@\022+\n&k_EMsgClientToGCSetPartyBui"
      "lderOptions\020\206@\0223\n.k_EMsgClientToGCSetPar"
      "tyBuilderOptionsResponse\020\207@\022#\n\036k_EMsgGCT"
      "oClientPlaytestStatus\020\210@\022!\n\034k_EMsgClient"
      "ToGCJoinPlaytest\020\211@\022)\n$k_EMsgClientToGCJ"
      "oinPlaytestResponse\020\212@\022\037\n\032k_EMsgLobbyPla"
      "ytestDetails\020\213@\022\036\n\031k_EMsgDOTASetFavorite"
      "Team\020\214@\0220\n+k_EMsgGCToClientBattlePassRol"
      "lupListRequest\020\215@\0221\n,k_EMsgGCToClientBat"
      "tlePassRollupListResponse\020\216@\022\027\n\022k_EMsgGC"
      "IsProQuery\020\217@\022\032\n\025k_EMsgGCIsProResponse\020\220"
      "@\022\037\n\032k_EMsgDOTAClaimEventAction\020\221@\022\'\n\"k_"
      "EMsgDOTAClaimEventActionResponse\020\222@\022\"\n\035k"
      "_EMsgDOTAGetPeriodicResource\020\223@\022*\n%k_EMs"
      "gDOTAGetPeriodicResourceResponse\020\224@\022&\n!k"
      "_EMsgDOTAPeriodicResourceUpdated\020\225@\022\037\n\032k"
      "_EMsgServerToGCSpendWager\020\226@\022\'\n\"k_EMsgGC"
      "ToGCSignoutSpendWagerToken\020\227@\022%\n k_EMsgS"
      "ubmitTriviaQuestionAnswer\020\230@\022-\n(k_EMsgSu"
      "bmitTriviaQuestionAnswerResponse\020\231@\022\034\n\027k"
      "_EMsgClientToGCGiveTip\020\232@\022$\n\037k_EMsgClien"
      "tToGCGiveTipResponse\020\233@\022\035\n\030k_EMsgStartTr"
      "iviaSession\020\234@\022%\n k_EMsgStartTriviaSessi"
      "onResponse\020\235@\022#\n\036k_EMsgAnchorPhoneNumber"
      "Request\020\236@\022$\n\037k_EMsgAnchorPhoneNumberRes"
      "ponse\020\237@\022%\n k_EMsgUnanchorPhoneNumberReq"
      "uest\020\240@\022&\n!k_EMsgUnanchorPhoneNumberResp"
      "onse\020\241@\022$\n\037k_EMsgGCToClientTipNotificati"
      "on\020\242@\022+\n&k_EMsgClientToGCRequestSlarkGam"
      "eResult\020\243@\0223\n.k_EMsgClientToGCRequestSla"
      "rkGameResultResponse\020\244@\022&\n!k_EMsgGCToGCS"
      "ignoutSpendRankWager\020\245@\022 \n\033k_EMsgGCToGCG"
      "etFavoriteTeam\020\246@\022(\n#k_EMsgGCToGCGetFavo"
      "riteTeamResponse\020\247@\022\037\n\032k_EMsgSignOutEven"
      "tGameData\020\250@\022(\n#k_EMsgGCToClientAllStarV"
      "otesRequest\020\251@\022&\n!k_EMsgGCToClientAllSta"
      "rVotesReply\020\252@\022\'\n\"k_EMsgGCToClientAllSta"
      "rVotesSubmit\020\254@\022,\n\'k_EMsgGCToClientAllSt"
      "arVotesSubmitReply\020\255@\022&\n!k_EMsgClientToG"
      "CQuickStatsRequest\020\256@\022\'\n\"k_EMsgClientToG"
      "CQuickStatsResponse\020\257@\022,\n\'k_EMsgGCToGCSu"
      "btractEventPointsFromUser\020\260@\022)\n$k_EMsgSe"
      "lectionPriorityChoiceRequest\020\261@\022*\n%k_EMs"
      "gSelectionPriorityChoiceResponse\020\262@\0222\n-k"
      "_EMsgGCToGCCompendiumInGamePredictionRes"
      "ults\020\263@\022\036\n\031k_EMsgGameAutographReward\020\264@\022"
      "&\n!k_EMsgGameAutographRewardResponse\020\265@\022"
      "\036\n\031k_EMsgDestroyLobbyRequest\020\266@\022\037\n\032k_EMs"
      "gDestroyLobbyResponse\020\267@\022&\n!k_EMsgPurcha"
      "seItemWithEventPoints\020\270@\022.\n)k_EMsgPurcha"
      "seItemWithEventPointsResponse\020\271@\0223\n.k_EM"
      "sgServerToGCMatchPlayerItemPurchaseHisto"
      "ry\020\272@B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 28972);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dota_gcmessages_msgid.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_dota_5fgcmessages_5fmsgid_2eproto

const ::google::protobuf::EnumDescriptor* EDOTAGCMsg_descriptor() {
  protobuf_dota_5fgcmessages_5fmsgid_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fgcmessages_5fmsgid_2eproto::file_level_enum_descriptors[0];
}
bool EDOTAGCMsg_IsValid(int value) {
  switch (value) {
    case 7000:
    case 7001:
    case 7004:
    case 7005:
    case 7009:
    case 7010:
    case 7013:
    case 7014:
    case 7017:
    case 7026:
    case 7027:
    case 7028:
    case 7033:
    case 7034:
    case 7035:
    case 7036:
    case 7038:
    case 7040:
    case 7041:
    case 7042:
    case 7043:
    case 7044:
    case 7046:
    case 7047:
    case 7049:
    case 7055:
    case 7056:
    case 7057:
    case 7060:
    case 7061:
    case 7064:
    case 7065:
    case 7068:
    case 7069:
    case 7070:
    case 7071:
    case 7072:
    case 7073:
    case 7074:
    case 7075:
    case 7076:
    case 7077:
    case 7078:
    case 7079:
    case 7081:
    case 7082:
    case 7083:
    case 7084:
    case 7085:
    case 7086:
    case 7087:
    case 7088:
    case 7089:
    case 7090:
    case 7091:
    case 7092:
    case 7093:
    case 7094:
    case 7095:
    case 7096:
    case 7097:
    case 7098:
    case 7099:
    case 7102:
    case 7104:
    case 7111:
    case 7112:
    case 7113:
    case 7114:
    case 7115:
    case 7116:
    case 7121:
    case 7122:
    case 7123:
    case 7124:
    case 7125:
    case 7126:
    case 7127:
    case 7128:
    case 7129:
    case 7130:
    case 7131:
    case 7132:
    case 7133:
    case 7134:
    case 7141:
    case 7142:
    case 7143:
    case 7144:
    case 7147:
    case 7148:
    case 7149:
    case 7150:
    case 7151:
    case 7152:
    case 7153:
    case 7154:
    case 7155:
    case 7156:
    case 7157:
    case 7158:
    case 7159:
    case 7160:
    case 7161:
    case 7166:
    case 7167:
    case 7168:
    case 7169:
    case 7170:
    case 7171:
    case 7172:
    case 7173:
    case 7174:
    case 7176:
    case 7177:
    case 7178:
    case 7179:
    case 7180:
    case 7182:
    case 7183:
    case 7186:
    case 7188:
    case 7189:
    case 7190:
    case 7197:
    case 7198:
    case 7199:
    case 7200:
    case 7201:
    case 7203:
    case 7204:
    case 7205:
    case 7206:
    case 7207:
    case 7208:
    case 7209:
    case 7210:
    case 7212:
    case 7215:
    case 7216:
    case 7217:
    case 7218:
    case 7219:
    case 7220:
    case 7221:
    case 7222:
    case 7223:
    case 7224:
    case 7225:
    case 7226:
    case 7227:
    case 7228:
    case 7229:
    case 7230:
    case 7231:
    case 7232:
    case 7233:
    case 7234:
    case 7235:
    case 7236:
    case 7237:
    case 7240:
    case 7241:
    case 7242:
    case 7248:
    case 7249:
    case 7251:
    case 7254:
    case 7255:
    case 7256:
    case 7258:
    case 7259:
    case 7261:
    case 7262:
    case 7263:
    case 7264:
    case 7265:
    case 7266:
    case 7267:
    case 7268:
    case 7269:
    case 7270:
    case 7272:
    case 7273:
    case 7274:
    case 7275:
    case 7279:
    case 7280:
    case 7281:
    case 7282:
    case 7283:
    case 7284:
    case 7285:
    case 7286:
    case 7287:
    case 7288:
    case 7289:
    case 7290:
    case 7291:
    case 7292:
    case 7293:
    case 7294:
    case 7297:
    case 7298:
    case 7299:
    case 7300:
    case 7301:
    case 7302:
    case 7303:
    case 7304:
    case 7305:
    case 7306:
    case 7307:
    case 7308:
    case 7309:
    case 7310:
    case 7312:
    case 7313:
    case 7314:
    case 7315:
    case 7316:
    case 7317:
    case 7318:
    case 7319:
    case 7320:
    case 7321:
    case 7322:
    case 7323:
    case 7324:
    case 7325:
    case 7326:
    case 7327:
    case 7328:
    case 7329:
    case 7330:
    case 7331:
    case 7332:
    case 7333:
    case 7334:
    case 7335:
    case 7336:
    case 7337:
    case 7338:
    case 7339:
    case 7340:
    case 7341:
    case 7342:
    case 7343:
    case 7344:
    case 7345:
    case 7346:
    case 7347:
    case 7348:
    case 7349:
    case 7350:
    case 7351:
    case 7352:
    case 7353:
    case 7354:
    case 7355:
    case 7356:
    case 7357:
    case 7358:
    case 7359:
    case 7360:
    case 7361:
    case 7362:
    case 7363:
    case 7364:
    case 7365:
    case 7366:
    case 7367:
    case 7368:
    case 7369:
    case 7370:
    case 7371:
    case 7372:
    case 7373:
    case 7374:
    case 7375:
    case 7376:
    case 7377:
    case 7378:
    case 7379:
    case 7380:
    case 7381:
    case 7382:
    case 7383:
    case 7384:
    case 7387:
    case 7388:
    case 7390:
    case 7393:
    case 7394:
    case 7395:
    case 7396:
    case 7397:
    case 7398:
    case 7402:
    case 7403:
    case 7404:
    case 7405:
    case 7406:
    case 7407:
    case 7408:
    case 7409:
    case 7410:
    case 7411:
    case 7412:
    case 7413:
    case 7414:
    case 7415:
    case 7416:
    case 7417:
    case 7418:
    case 7420:
    case 7423:
    case 7424:
    case 7425:
    case 7426:
    case 7427:
    case 7428:
    case 7429:
    case 7430:
    case 7431:
    case 7432:
    case 7433:
    case 7434:
    case 7435:
    case 7436:
    case 7437:
    case 7438:
    case 7439:
    case 7440:
    case 7441:
    case 7443:
    case 7444:
    case 7445:
    case 7448:
    case 7449:
    case 7450:
    case 7451:
    case 7452:
    case 7453:
    case 7454:
    case 7455:
    case 7456:
    case 7457:
    case 7458:
    case 7459:
    case 7460:
    case 7461:
    case 7462:
    case 7463:
    case 7464:
    case 7465:
    case 7466:
    case 7467:
    case 7468:
    case 7469:
    case 7470:
    case 7471:
    case 7472:
    case 7473:
    case 7474:
    case 7475:
    case 7476:
    case 7477:
    case 7478:
    case 7480:
    case 7481:
    case 7482:
    case 7483:
    case 7484:
    case 7485:
    case 7486:
    case 7487:
    case 7488:
    case 7489:
    case 7490:
    case 7491:
    case 7492:
    case 7493:
    case 7494:
    case 7495:
    case 7496:
    case 7497:
    case 7499:
    case 7500:
    case 7501:
    case 7502:
    case 7503:
    case 7504:
    case 7505:
    case 7506:
    case 7507:
    case 7513:
    case 7514:
    case 7515:
    case 7516:
    case 7517:
    case 7518:
    case 7519:
    case 7520:
    case 7521:
    case 7522:
    case 7523:
    case 7524:
    case 7525:
    case 7526:
    case 7527:
    case 7528:
    case 7529:
    case 7530:
    case 7531:
    case 7532:
    case 7533:
    case 7534:
    case 7535:
    case 7536:
    case 7537:
    case 7538:
    case 7539:
    case 7540:
    case 7542:
    case 7543:
    case 7544:
    case 7545:
    case 7546:
    case 7547:
    case 7548:
    case 7549:
    case 7551:
    case 7552:
    case 7553:
    case 7554:
    case 7555:
    case 7556:
    case 7557:
    case 7558:
    case 7559:
    case 7560:
    case 7561:
    case 7562:
    case 7563:
    case 7564:
    case 7565:
    case 7566:
    case 7567:
    case 7569:
    case 7572:
    case 7573:
    case 7574:
    case 7576:
    case 7577:
    case 7578:
    case 7579:
    case 7580:
    case 7581:
    case 7582:
    case 7583:
    case 7584:
    case 7585:
    case 7586:
    case 7587:
    case 7588:
    case 7589:
    case 7590:
    case 7592:
    case 7593:
    case 7594:
    case 7595:
    case 7596:
    case 7597:
    case 7598:
    case 7599:
    case 7600:
    case 7601:
    case 7602:
    case 7603:
    case 7604:
    case 7605:
    case 7606:
    case 7607:
    case 7608:
    case 7609:
    case 7610:
    case 7611:
    case 7612:
    case 7613:
    case 7614:
    case 7615:
    case 7616:
    case 8001:
    case 8004:
    case 8006:
    case 8007:
    case 8008:
    case 8009:
    case 8010:
    case 8011:
    case 8012:
    case 8013:
    case 8014:
    case 8015:
    case 8016:
    case 8017:
    case 8018:
    case 8019:
    case 8020:
    case 8021:
    case 8022:
    case 8023:
    case 8024:
    case 8025:
    case 8026:
    case 8027:
    case 8028:
    case 8029:
    case 8030:
    case 8031:
    case 8032:
    case 8033:
    case 8034:
    case 8035:
    case 8036:
    case 8037:
    case 8040:
    case 8041:
    case 8042:
    case 8045:
    case 8046:
    case 8047:
    case 8048:
    case 8049:
    case 8050:
    case 8051:
    case 8052:
    case 8053:
    case 8054:
    case 8055:
    case 8057:
    case 8058:
    case 8059:
    case 8060:
    case 8061:
    case 8062:
    case 8063:
    case 8064:
    case 8065:
    case 8066:
    case 8067:
    case 8068:
    case 8069:
    case 8070:
    case 8071:
    case 8072:
    case 8073:
    case 8074:
    case 8075:
    case 8076:
    case 8077:
    case 8078:
    case 8079:
    case 8080:
    case 8081:
    case 8082:
    case 8083:
    case 8084:
    case 8088:
    case 8089:
    case 8090:
    case 8091:
    case 8092:
    case 8093:
    case 8095:
    case 8096:
    case 8097:
    case 8098:
    case 8099:
    case 8100:
    case 8103:
    case 8104:
    case 8106:
    case 8107:
    case 8108:
    case 8109:
    case 8110:
    case 8111:
    case 8112:
    case 8113:
    case 8114:
    case 8115:
    case 8116:
    case 8117:
    case 8118:
    case 8119:
    case 8120:
    case 8121:
    case 8124:
    case 8125:
    case 8126:
    case 8127:
    case 8128:
    case 8129:
    case 8130:
    case 8131:
    case 8132:
    case 8133:
    case 8134:
    case 8135:
    case 8136:
    case 8137:
    case 8138:
    case 8139:
    case 8140:
    case 8141:
    case 8144:
    case 8145:
    case 8146:
    case 8147:
    case 8148:
    case 8149:
    case 8150:
    case 8151:
    case 8152:
    case 8153:
    case 8154:
    case 8155:
    case 8156:
    case 8157:
    case 8158:
    case 8159:
    case 8160:
    case 8161:
    case 8162:
    case 8163:
    case 8166:
    case 8167:
    case 8168:
    case 8169:
    case 8170:
    case 8171:
    case 8172:
    case 8173:
    case 8174:
    case 8175:
    case 8176:
    case 8177:
    case 8178:
    case 8179:
    case 8180:
    case 8181:
    case 8183:
    case 8185:
    case 8186:
    case 8187:
    case 8188:
    case 8189:
    case 8190:
    case 8191:
    case 8192:
    case 8193:
    case 8194:
    case 8195:
    case 8196:
    case 8197:
    case 8198:
    case 8199:
    case 8200:
    case 8201:
    case 8202:
    case 8203:
    case 8204:
    case 8205:
    case 8206:
    case 8207:
    case 8208:
    case 8209:
    case 8210:
    case 8211:
    case 8212:
    case 8213:
    case 8214:
    case 8215:
    case 8216:
    case 8217:
    case 8218:
    case 8219:
    case 8220:
    case 8221:
    case 8222:
    case 8223:
    case 8224:
    case 8225:
    case 8226:
    case 8227:
    case 8228:
    case 8229:
    case 8230:
    case 8231:
    case 8232:
    case 8233:
    case 8234:
    case 8236:
    case 8237:
    case 8238:
    case 8239:
    case 8240:
    case 8241:
    case 8242:
    case 8243:
    case 8244:
    case 8245:
    case 8246:
    case 8247:
    case 8248:
    case 8249:
    case 8250:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

// @@protoc_insertion_point(global_scope)
