// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_msgid.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dota_gcmessages_msgid.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace dota {

namespace protobuf_dota_5fgcmessages_5fmsgid_2eproto {


namespace {

const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = { ~0u };
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;
namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dota_gcmessages_msgid.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

}  // namespace

void TableStruct::Shutdown() {
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\033dota_gcmessages_msgid.proto\022\nproto.dot"
      "a*\335\336\001\n\nEDOTAGCMsg\022\025\n\020k_EMsgGCDOTABase\020\3306"
      "\022\034\n\027k_EMsgGCGeneralResponse\020\3316\022\035\n\030k_EMsg"
      "GCGameMatchSignOut\020\3346\022%\n k_EMsgGCGameMat"
      "chSignOutResponse\020\3356\022\034\n\027k_EMsgGCJoinChat"
      "Channel\020\3416\022$\n\037k_EMsgGCJoinChatChannelRes"
      "ponse\020\3426\022\037\n\032k_EMsgGCOtherJoinedChannel\020\345"
      "6\022\035\n\030k_EMsgGCOtherLeftChannel\020\3466\022\035\n\030k_EM"
      "sgGCMatchHistoryList\020\3516\022\"\n\035k_EMsgServerT"
      "oGCRequestStatus\020\3626\022\035\n\030k_EMsgGCGetRecent"
      "Matches\020\3636\022\"\n\035k_EMsgGCRecentMatchesRespo"
      "nse\020\3646\022\036\n\031k_EMsgGCStartFindingMatch\020\3716\022\035"
      "\n\030k_EMsgGCConnectedPlayers\020\3726\022\037\n\032k_EMsgG"
      "CAbandonCurrentGame\020\3736\022\035\n\030k_EMsgGCStopFi"
      "ndingMatch\020\3746\022 \n\033k_EMsgGCPracticeLobbyCr"
      "eate\020\3766\022\037\n\032k_EMsgGCPracticeLobbyLeave\020\2007"
      "\022 \n\033k_EMsgGCPracticeLobbyLaunch\020\2017\022\036\n\031k_"
      "EMsgGCPracticeLobbyList\020\2027\022&\n!k_EMsgGCPr"
      "acticeLobbyListResponse\020\2037\022\036\n\031k_EMsgGCPr"
      "acticeLobbyJoin\020\2047\022$\n\037k_EMsgGCPracticeLo"
      "bbySetDetails\020\2067\022%\n k_EMsgGCPracticeLobb"
      "ySetTeamSlot\020\2077\022)\n$k_EMsgGCInitialQuesti"
      "onnaireResponse\020\2117\022\"\n\035k_EMsgGCPracticeLo"
      "bbyResponse\020\2177\022\"\n\035k_EMsgGCBroadcastNotif"
      "ication\020\2207\022!\n\034k_EMsgGCLiveScoreboardUpda"
      "te\020\2217\022#\n\036k_EMsgGCRequestChatChannelList\020"
      "\2247\022+\n&k_EMsgGCRequestChatChannelListResp"
      "onse\020\2257\022\033\n\026k_EMsgGCRequestMatches\020\2307\022#\n\036"
      "k_EMsgGCRequestMatchesResponse\020\2317\022#\n\036k_E"
      "MsgGCRequestPlayerResources\020\2347\022+\n&k_EMsg"
      "GCRequestPlayerResourcesResponse\020\2357\022\024\n\017k"
      "_EMsgGCReadyUp\020\2367\022\'\n\"k_EMsgGCKickedFromM"
      "atchmakingQueue\020\2377\022\033\n\026k_EMsgGCLeaverDete"
      "cted\020\2407\022\037\n\032k_EMsgGCSpectateFriendGame\020\2417"
      "\022\'\n\"k_EMsgGCSpectateFriendGameResponse\020\242"
      "7\022\032\n\025k_EMsgGCPlayerReports\020\2437\022$\n\037k_EMsgG"
      "CReportsRemainingRequest\020\2447\022%\n k_EMsgGCR"
      "eportsRemainingResponse\020\2457\022\037\n\032k_EMsgGCSu"
      "bmitPlayerReport\020\2467\022\'\n\"k_EMsgGCSubmitPla"
      "yerReportResponse\020\2477\022\036\n\031k_EMsgGCPractice"
      "LobbyKick\020\2517\022 \n\033k_EMsgGCReportCountsRequ"
      "est\020\2527\022!\n\034k_EMsgGCReportCountsResponse\020\253"
      "7\022\035\n\030k_EMsgGCRequestSaveGames\020\2547\022#\n\036k_EM"
      "sgGCRequestSaveGamesServer\020\2557\022%\n k_EMsgG"
      "CRequestSaveGamesResponse\020\2567\022#\n\036k_EMsgGC"
      "LeaverDetectedResponse\020\2577\022\"\n\035k_EMsgGCPla"
      "yerFailedToConnect\020\2607\022\035\n\030k_EMsgGCGCToRel"
      "ayConnect\020\2617\022%\n k_EMsgGCGCToRelayConnect"
      "response\020\2627\022\026\n\021k_EMsgGCWatchGame\020\2637\022\036\n\031k"
      "_EMsgGCWatchGameResponse\020\2647\022\035\n\030k_EMsgGCB"
      "anStatusRequest\020\2657\022\036\n\031k_EMsgGCBanStatusR"
      "esponse\020\2667\022 \n\033k_EMsgGCMatchDetailsReques"
      "t\020\2677\022!\n\034k_EMsgGCMatchDetailsResponse\020\2707\022"
      "\034\n\027k_EMsgGCCancelWatchGame\020\2717\022\033\n\026k_EMsgG"
      "CProfileRequest\020\2727\022\034\n\027k_EMsgGCProfileRes"
      "ponse\020\2737\022\022\n\rk_EMsgGCPopup\020\2767\022,\n\'k_EMsgGC"
      "DOTAClearNotifySuccessfulReport\020\3007\022+\n&k_"
      "EMsgGCFriendPracticeLobbyListRequest\020\3077\022"
      ",\n\'k_EMsgGCFriendPracticeLobbyListRespon"
      "se\020\3107\022&\n!k_EMsgGCPracticeLobbyJoinRespon"
      "se\020\3117\022%\n k_EMsgClientEconNotification_Jo"
      "b\020\3127\022\027\n\022k_EMsgGCCreateTeam\020\3137\022\037\n\032k_EMsgG"
      "CCreateTeamResponse\020\3147\022\025\n\020k_EMsgGCTeamDa"
      "ta\020\3217\022#\n\036k_EMsgGCTeamInvite_InviterToGC\020"
      "\3227\0224\n/k_EMsgGCTeamInvite_GCImmediateResp"
      "onseToInviter\020\3237\022*\n%k_EMsgGCTeamInvite_G"
      "CRequestToInvitee\020\3247\022+\n&k_EMsgGCTeamInvi"
      "te_InviteeResponseToGC\020\3257\022+\n&k_EMsgGCTea"
      "mInvite_GCResponseToInviter\020\3267\022+\n&k_EMsg"
      "GCTeamInvite_GCResponseToInvitee\020\3277\022\033\n\026k"
      "_EMsgGCKickTeamMember\020\3307\022#\n\036k_EMsgGCKick"
      "TeamMemberResponse\020\3317\022\026\n\021k_EMsgGCLeaveTe"
      "am\020\3327\022\036\n\031k_EMsgGCLeaveTeamResponse\020\3337\022#\n"
      "\036k_EMsgGCSuggestTeamMatchmaking\020\3347\022%\n k_"
      "EMsgGCPlayerHeroesFavoritesAdd\020\3357\022(\n#k_E"
      "MsgGCPlayerHeroesFavoritesRemove\020\3367\022\034\n\027k"
      "_EMsgGCSetShowcaseHero\020\3457\022%\n k_EMsgGCApp"
      "lyTeamToPracticeLobby\020\3467\022+\n&k_EMsgGCRequ"
      "estInternatinalTicketEmail\020\3477\022\036\n\031k_EMsgG"
      "CTransferTeamAdmin\020\3507\022\034\n\027k_EMsgRequestLe"
      "agueInfo\020\3537\022\035\n\030k_EMsgResponseLeagueInfo\020"
      "\3547\022.\n)k_EMsgGCPracticeLobbyJoinBroadcast"
      "Channel\020\3557\022!\n\034k_EMsgGC_TournamentItemEve"
      "nt\020\3567\022)\n$k_EMsgGC_TournamentItemEventRes"
      "ponse\020\3577\022\030\n\023k_EMsgCastMatchVote\020\3607\022 \n\033k_"
      "EMsgCastMatchVoteResponse\020\3617\022\034\n\027k_EMsgRe"
      "trieveMatchVote\020\3627\022$\n\037k_EMsgRetrieveMatc"
      "hVoteResponse\020\3637\022\026\n\021k_EMsgTeamFanfare\020\3647"
      "\022\036\n\031k_EMsgResponseTeamFanfare\020\3657\022&\n!k_EM"
      "sgGC_GameServerUploadSaveGame\020\3667\022&\n!k_EM"
      "sgGC_GameServerSaveGameResult\020\3677\022#\n\036k_EM"
      "sgGC_GameServerGetLoadGame\020\3707\022)\n$k_EMsgG"
      "C_GameServerGetLoadGameResult\020\3717\022\034\n\027k_EM"
      "sgGCEditTeamDetails\020\3767\022$\n\037k_EMsgGCEditTe"
      "amDetailsResponse\020\3777\022\037\n\032k_EMsgGCProTeamL"
      "istRequest\020\2008\022 \n\033k_EMsgGCProTeamListResp"
      "onse\020\2018\022\032\n\025k_EMsgGCReadyUpStatus\020\2028\022\027\n\022k"
      "_EMsgGCHallOfFame\020\2038\022\036\n\031k_EMsgGCHallOfFa"
      "meRequest\020\2048\022\037\n\032k_EMsgGCHallOfFameRespon"
      "se\020\2058\022&\n!k_EMsgGCGenerateDiretidePrizeLi"
      "st\020\2068\022!\n\034k_EMsgGCRewardDiretidePrizes\020\2108"
      "\022+\n&k_EMsgGCDiretidePrizesRewardedRespon"
      "se\020\2118\022&\n!k_EMsgGCHalloweenHighScoreReque"
      "st\020\2128\022\'\n\"k_EMsgGCHalloweenHighScoreRespo"
      "nse\020\2138\022.\n)k_EMsgGCGenerateDiretidePrizeL"
      "istResponse\020\2148\022#\n\036k_EMsgGCStorePromoPage"
      "sRequest\020\2168\022$\n\037k_EMsgGCStorePromoPagesRe"
      "sponse\020\2178\022\037\n\032k_EMsgGCToGCMatchCompleted\020"
      "\2228\022!\n\034k_EMsgGCBalancedShuffleLobby\020\2248\022&\n"
      "!k_EMsgGCToGCCheckLeaguePermission\020\2258\022.\n"
      ")k_EMsgGCToGCCheckLeaguePermissionRespon"
      "se\020\2268\022\"\n\035k_EMsgGCLeagueScheduleRequest\020\227"
      "8\022#\n\036k_EMsgGCLeagueScheduleResponse\020\2308\022\037"
      "\n\032k_EMsgGCLeagueScheduleEdit\020\2318\022\'\n\"k_EMs"
      "gGCLeagueScheduleEditResponse\020\2328\022\"\n\035k_EM"
      "sgGCLeaguesInMonthRequest\020\2338\022#\n\036k_EMsgGC"
      "LeaguesInMonthResponse\020\2348\022$\n\037k_EMsgGCMat"
      "chmakingStatsRequest\020\2358\022%\n k_EMsgGCMatch"
      "makingStatsResponse\020\2368\022\032\n\025k_EMsgGCBotGam"
      "eCreate\020\2378\022\"\n\035k_EMsgGCSetMatchHistoryAcc"
      "ess\020\2408\022*\n%k_EMsgGCSetMatchHistoryAccessR"
      "esponse\020\2418\022\034\n\027k_EMsgUpgradeLeagueItem\020\2438"
      "\022$\n\037k_EMsgUpgradeLeagueItemResponse\020\2448\022%"
      "\n k_EMsgGCTeamMemberProfileRequest\020\2458\022\"\n"
      "\035k_EMsgGCWatchDownloadedReplay\020\2468\022 \n\033k_E"
      "MsgGCSetMapLocationState\020\2478\022(\n#k_EMsgGCS"
      "etMapLocationStateResponse\020\2508\022\036\n\031k_EMsgG"
      "CResetMapLocations\020\2518\022&\n!k_EMsgGCResetMa"
      "pLocationsResponse\020\2528\022\035\n\030k_EMsgGCSetFeat"
      "uredItems\020\2548\022\032\n\025k_EMsgGCFeaturedItems\020\2578"
      "\022$\n\037k_EMsgRefreshPartnerAccountLink\020\2608\022$"
      "\n\037k_EMsgClientsRejoinChatChannels\020\2618\022 \n\033"
      "k_EMsgGCToGCGetUserChatInfo\020\2628\022(\n#k_EMsg"
      "GCToGCGetUserChatInfoResponse\020\2638\022%\n k_EM"
      "sgGCToGCLeaveAllChatChannels\020\2648\022%\n k_EMs"
      "gGCToGCUpdateAccountChatBan\020\2658\022\037\n\032k_EMsg"
      "GCGuildCreateRequest\020\2668\022 \n\033k_EMsgGCGuild"
      "CreateResponse\020\2678\022\'\n\"k_EMsgGCGuildSetAcc"
      "ountRoleRequest\020\2708\022(\n#k_EMsgGCGuildSetAc"
      "countRoleResponse\020\2718\022\035\n\030k_EMsgGCRequestG"
      "uildData\020\2728\022\026\n\021k_EMsgGCGuildData\020\2738\022&\n!k"
      "_EMsgGCGuildInviteAccountRequest\020\2748\022\'\n\"k"
      "_EMsgGCGuildInviteAccountResponse\020\2758\022%\n "
      "k_EMsgGCGuildCancelInviteRequest\020\2768\022&\n!k"
      "_EMsgGCGuildCancelInviteResponse\020\2778\022&\n!k"
      "_EMsgGCGuildUpdateDetailsRequest\020\3008\022\'\n\"k"
      "_EMsgGCGuildUpdateDetailsResponse\020\3018\022$\n\037"
      "k_EMsgGCToGCCanInviteUserToTeam\020\3028\022,\n\'k_"
      "EMsgGCToGCCanInviteUserToTeamResponse\020\3038"
      "\022\034\n\027k_EMsgGCToGCGetUserRank\020\3048\022$\n\037k_EMsg"
      "GCToGCGetUserRankResponse\020\3058\022 \n\033k_EMsgGC"
      "ToGCUpdateTeamStats\020\3108\022\034\n\027k_EMsgGCToGCGe"
      "tTeamRank\020\3118\022$\n\037k_EMsgGCToGCGetTeamRankR"
      "esponse\020\3128\022 \n\033k_EMsgGCPassportDataReques"
      "t\020\3208\022!\n\034k_EMsgGCPassportDataResponse\020\3218\022"
      "\033\n\026k_EMsgGCNotInGuildData\020\3238\022\034\n\027k_EMsgGC"
      "GuildInviteData\020\3268\022\037\n\032k_EMsgGCToGCGetLea"
      "gueAdmin\020\3278\022\'\n\"k_EMsgGCToGCGetLeagueAdmi"
      "nResponse\020\3308\022#\n\036k_EMsgGCRequestLeaguePri"
      "zePool\020\3328\022+\n&k_EMsgGCRequestLeaguePrizeP"
      "oolResponse\020\3338\022,\n\'k_EMsgGCToGCUpdateOpen"
      "GuildPartyRequest\020\3358\022-\n(k_EMsgGCToGCUpda"
      "teOpenGuildPartyResponse\020\3368\022-\n(k_EMsgGCT"
      "oGCDestroyOpenGuildPartyRequest\020\3378\022.\n)k_"
      "EMsgGCToGCDestroyOpenGuildPartyResponse\020"
      "\3408\022\037\n\032k_EMsgGCGuildUpdateMessage\020\3418\022%\n k"
      "_EMsgGCPartySetOpenGuildRequest\020\3428\022&\n!k_"
      "EMsgGCPartySetOpenGuildResponse\020\3438\022\"\n\035k_"
      "EMsgGCGuildOpenPartyRefresh\020\3448\022&\n!k_EMsg"
      "GCJoinOpenGuildPartyRequest\020\3458\022\'\n\"k_EMsg"
      "GCJoinOpenGuildPartyResponse\020\3468\022\035\n\030k_EMs"
      "gGCLeaveChatChannel\020\3508\022\030\n\023k_EMsgGCChatMe"
      "ssage\020\3518\022\035\n\030k_EMsgGCGetHeroStandings\020\3528\022"
      "%\n k_EMsgGCGetHeroStandingsResponse\020\3538\022!"
      "\n\034k_EMsgGCGuildEditLogoRequest\020\3578\022\"\n\035k_E"
      "MsgGCGuildEditLogoResponse\020\3608\022.\n)k_EMsgG"
      "CGuildmatePracticeLobbyListRequest\020\3618\022/\n"
      "*k_EMsgGCGuildmatePracticeLobbyListRespo"
      "nse\020\3628\022*\n%k_EMsgGCItemEditorReservations"
      "Request\020\3638\022+\n&k_EMsgGCItemEditorReservat"
      "ionsResponse\020\3648\022%\n k_EMsgGCItemEditorRes"
      "erveItemDef\020\3658\022-\n(k_EMsgGCItemEditorRese"
      "rveItemDefResponse\020\3668\022)\n$k_EMsgGCItemEdi"
      "torReleaseReservation\020\3678\0221\n,k_EMsgGCItem"
      "EditorReleaseReservationResponse\020\3708\022!\n\034k"
      "_EMsgGCRewardTutorialPrizes\020\3718\022*\n%k_EMsg"
      "GCLastHitChallengeHighScorePost\020\3728\022-\n(k_"
      "EMsgGCLastHitChallengeHighScoreRequest\020\373"
      "8\022.\n)k_EMsgGCLastHitChallengeHighScoreRe"
      "sponse\020\3748\022\'\n\"k_EMsgGCCreateFantasyLeague"
      "Request\020\3758\022(\n#k_EMsgGCCreateFantasyLeagu"
      "eResponse\020\3768\022%\n k_EMsgGCFantasyLeagueInf"
      "oRequest\020\2019\022&\n!k_EMsgGCFantasyLeagueInfo"
      "Response\020\2029\022\036\n\031k_EMsgGCFantasyLeagueInfo"
      "\020\2039\022%\n k_EMsgGCCreateFantasyTeamRequest\020"
      "\2049\022&\n!k_EMsgGCCreateFantasyTeamResponse\020"
      "\2059\022#\n\036k_EMsgGCEditFantasyTeamRequest\020\2069\022"
      "$\n\037k_EMsgGCEditFantasyTeamResponse\020\2079\0224\n"
      "/k_EMsgGCFantasyTeamInfoRequestByFantasy"
      "LeagueID\020\2109\0223\n.k_EMsgGCFantasyTeamInfoRe"
      "questByOwnerAccountID\020\2119\022$\n\037k_EMsgGCFant"
      "asyTeamInfoResponse\020\2129\022\034\n\027k_EMsgGCFantas"
      "yTeamInfo\020\2139\022#\n\036k_EMsgGCFantasyLivePlaye"
      "rStats\020\2149\022$\n\037k_EMsgGCFantasyFinalPlayerS"
      "tats\020\2159\022\031\n\024k_EMsgGCFantasyMatch\020\2169\022$\n\037k_"
      "EMsgGCFantasyTeamScoreRequest\020\2209\022%\n k_EM"
      "sgGCFantasyTeamScoreResponse\020\2219\022(\n#k_EMs"
      "gGCFantasyTeamStandingsRequest\020\2229\022)\n$k_E"
      "MsgGCFantasyTeamStandingsResponse\020\2239\022&\n!"
      "k_EMsgGCFantasyPlayerScoreRequest\020\2249\022\'\n\""
      "k_EMsgGCFantasyPlayerScoreResponse\020\2259\022*\n"
      "%k_EMsgGCFantasyPlayerStandingsRequest\020\226"
      "9\022+\n&k_EMsgGCFantasyPlayerStandingsRespo"
      "nse\020\2279\022\033\n\026k_EMsgGCFlipLobbyTeams\020\2309\022\035\n\030k"
      "_EMsgGCCustomGameCreate\020\2319\022%\n k_EMsgGCFa"
      "ntasyPlayerInfoRequest\020\2329\022&\n!k_EMsgGCFan"
      "tasyPlayerInfoResponse\020\2339\022-\n(k_EMsgGCToG"
      "CProcessPlayerReportForTarget\020\2349\022%\n k_EM"
      "sgGCToGCProcessReportSuccess\020\2359\022%\n k_EMs"
      "gGCNotifyAccountFlagsChange\020\2369\022\036\n\031k_EMsg"
      "GCSetProfilePrivacy\020\2379\022&\n!k_EMsgGCSetPro"
      "filePrivacyResponse\020\2409\022 \n\033k_EMsgGCSteamP"
      "rofileRequest\020\2419\022(\n#k_EMsgGCSteamProfile"
      "RequestResponse\020\2429\022+\n&k_EMsgGCFantasyLea"
      "gueCreateInfoRequest\020\2439\022,\n\'k_EMsgGCFanta"
      "syLeagueCreateInfoResponse\020\2449\022+\n&k_EMsgG"
      "CFantasyLeagueInviteInfoRequest\020\2459\022,\n\'k_"
      "EMsgGCFantasyLeagueInviteInfoResponse\020\2469"
      "\022\036\n\031k_EMsgGCClientIgnoredUser\020\2479\022\'\n\"k_EM"
      "sgGCFantasyLeagueCreateRequest\020\2509\022(\n#k_E"
      "MsgGCFantasyLeagueCreateResponse\020\2519\022%\n k"
      "_EMsgGCFantasyTeamCreateRequest\020\2529\022&\n!k_"
      "EMsgGCFantasyTeamCreateResponse\020\2539\022/\n*k_"
      "EMsgGCFantasyLeagueFriendJoinListRequest"
      "\020\2549\0220\n+k_EMsgGCFantasyLeagueFriendJoinLi"
      "stResponse\020\2559\022\034\n\027k_EMsgGCClientSuspended"
      "\020\2569\022 \n\033k_EMsgGCPartyMemberSetCoach\020\2579\022,\n"
      "\'k_EMsgGCFantasyLeagueEditInvitesRequest"
      "\020\2609\022-\n(k_EMsgGCFantasyLeagueEditInvitesR"
      "esponse\020\2619\022\"\n\035k_EMsgGCPracticeLobbySetCo"
      "ach\020\2629\022)\n$k_EMsgGCFantasyLeagueEditInfoR"
      "equest\020\2639\022*\n%k_EMsgGCFantasyLeagueEditIn"
      "foResponse\020\2649\022,\n\'k_EMsgGCFantasyLeagueDr"
      "aftStatusRequest\020\2659\022%\n k_EMsgGCFantasyLe"
      "agueDraftStatus\020\2669\022,\n\'k_EMsgGCFantasyLea"
      "gueDraftPlayerRequest\020\2679\022-\n(k_EMsgGCFant"
      "asyLeagueDraftPlayerResponse\020\2709\022)\n$k_EMs"
      "gGCFantasyLeagueMatchupsRequest\020\2719\022*\n%k_"
      "EMsgGCFantasyLeagueMatchupsResponse\020\2729\022)"
      "\n$k_EMsgGCFantasyTeamRosterSwapRequest\020\273"
      "9\022*\n%k_EMsgGCFantasyTeamRosterSwapRespon"
      "se\020\2749\022%\n k_EMsgGCFantasyTeamRosterReques"
      "t\020\2759\022&\n!k_EMsgGCFantasyTeamRosterRespons"
      "e\020\2769\022\037\n\032k_EMsgGCNexonPartnerUpdate\020\2779\022*\n"
      "%k_EMsgGCToGCProcessPCBangRewardPoints\020\300"
      "9\022,\n\'k_EMsgGCFantasyTeamRosterAddDropReq"
      "uest\020\3019\022-\n(k_EMsgGCFantasyTeamRosterAddD"
      "ropResponse\020\3029\022&\n!k_EMsgPresentedClientT"
      "erminateDlg\020\3039\022/\n*k_EMsgGCFantasyPlayerH"
      "isoricalStatsRequest\020\3049\0220\n+k_EMsgGCFanta"
      "syPlayerHisoricalStatsResponse\020\3059\022%\n k_E"
      "MsgGCPCBangTimedRewardMessage\020\3069\022,\n\'k_EM"
      "sgGCLobbyUpdateBroadcastChannelInfo\020\3079\022%"
      "\n k_EMsgGCFantasyTeamTradesRequest\020\3109\022&\n"
      "!k_EMsgGCFantasyTeamTradesResponse\020\3119\022*\n"
      "%k_EMsgGCFantasyTeamTradeCancelRequest\020\312"
      "9\022+\n&k_EMsgGCFantasyTeamTradeCancelRespo"
      "nse\020\3139\022$\n\037k_EMsgGCToGCGrantTournamentIte"
      "m\020\3149\022)\n$k_EMsgGCProcessFantasyScheduledE"
      "vent\020\3159\022&\n!k_EMsgGCToGCGrantPCBangReward"
      "Item\020\3169\022)\n$k_EMsgGCToGCUpgradeTwitchView"
      "erItems\020\3179\022\'\n\"k_EMsgGCToGCGetLiveMatchAf"
      "filiates\020\3209\022/\n*k_EMsgGCToGCGetLiveMatchA"
      "ffiliatesResponse\020\3219\022*\n%k_EMsgGCToGCUpda"
      "tePlayerPennantCounts\020\3229\022\'\n\"k_EMsgGCToGC"
      "GetPlayerPennantCounts\020\3239\022/\n*k_EMsgGCToG"
      "CGetPlayerPennantCountsResponse\020\3249\022.\n)k_"
      "EMsgGCGameMatchSignOutPermissionRequest\020"
      "\3259\022/\n*k_EMsgGCGameMatchSignOutPermission"
      "Response\020\3269\022&\n!k_EMsgDOTAChatChannelMemb"
      "erUpdate\020\3279\022\037\n\032k_EMsgDOTAAwardEventPoint"
      "s\020\3309\022\035\n\030k_EMsgDOTAGetEventPoints\020\3339\022%\n k"
      "_EMsgDOTAGetEventPointsResponse\020\3349\022(\n#k_"
      "EMsgGCToGCSignoutAwardEventPoints\020\3369\022!\n\034"
      "k_EMsgDOTASendFriendRecruits\020\3419\022$\n\037k_EMs"
      "gDOTAFriendRecruitsRequest\020\3429\022%\n k_EMsgD"
      "OTAFriendRecruitsResponse\020\3439\022/\n*k_EMsgDO"
      "TAFriendRecruitInviteAcceptDecline\020\3449\022\'\n"
      "\"k_EMsgGCPartyLeaderWatchGamePrompt\020\3459\022#"
      "\n\036k_EMsgDOTAFrostivusTimeElapsed\020\3469\022#\n\036k"
      "_EMsgDOTALiveLeagueGameUpdate\020\3529\022\036\n\031k_EM"
      "sgDOTAChatGetUserList\020\3539\022&\n!k_EMsgDOTACh"
      "atGetUserListResponse\020\3549\022#\n\036k_EMsgGCComp"
      "endiumSetSelection\020\3559\022\"\n\035k_EMsgGCCompend"
      "iumDataRequest\020\3569\022#\n\036k_EMsgGCCompendiumD"
      "ataResponse\020\3579\022$\n\037k_EMsgDOTAGetPlayerMat"
      "chHistory\020\3609\022,\n\'k_EMsgDOTAGetPlayerMatch"
      "HistoryResponse\020\3619\022$\n\037k_EMsgGCToGCMatchm"
      "akingAddParty\020\3629\022\'\n\"k_EMsgGCToGCMatchmak"
      "ingRemoveParty\020\3639\022,\n\'k_EMsgGCToGCMatchma"
      "kingRemoveAllParties\020\3649\022&\n!k_EMsgGCToGCM"
      "atchmakingMatchFound\020\3659\022+\n&k_EMsgGCToGCU"
      "pdateMatchManagementStats\020\3669\022\'\n\"k_EMsgGC"
      "ToGCUpdateMatchmakingStats\020\3679\022 \n\033k_EMsgG"
      "CToServerPingRequest\020\3709\022!\n\034k_EMsgGCToSer"
      "verPingResponse\020\3719\022#\n\036k_EMsgGCToServerCo"
      "nsoleCommand\020\3729\022)\n$k_EMsgGCToGCUpdateLiv"
      "eLeagueGameInfo\020\3749\022\031\n\024k_EMsgGCMakeOfferi"
      "ng\020\3779\022\035\n\030k_EMsgGCRequestOfferings\020\200:\022%\n "
      "k_EMsgGCRequestOfferingsResponse\020\201:\022#\n\036k"
      "_EMsgGCToGCProcessMatchLeaver\020\202:\022!\n\034k_EM"
      "sgGCNotificationsRequest\020\203:\022\"\n\035k_EMsgGCN"
      "otificationsResponse\020\204:\022#\n\036k_EMsgGCToGCM"
      "odifyNotification\020\205:\022$\n\037k_EMsgGCToGCSetN"
      "ewNotifications\020\206:\022!\n\034k_EMsgGCToGCSetIsL"
      "eagueAdmin\020\207:\022\035\n\030k_EMsgGCLeagueAdminStat"
      "e\020\210:\022%\n k_EMsgGCToGCSendLeagueAdminState"
      "\020\211:\022\034\n\027k_EMsgGCLeagueAdminList\020\212:\022)\n$k_E"
      "MsgGCNotificationsMarkReadRequest\020\213:\022\036\n\031"
      "k_EMsgGCFantasyMessageAdd\020\214:\022#\n\036k_EMsgGC"
      "FantasyMessagesRequest\020\215:\022$\n\037k_EMsgGCFan"
      "tasyMessagesResponse\020\216:\022+\n&k_EMsgGCFanta"
      "syScheduledMatchesRequest\020\217:\022,\n\'k_EMsgGC"
      "FantasyScheduledMatchesResponse\020\220:\022\"\n\035k_"
      "EMsgGCToGCGrantLeagueAccess\020\221:\022\034\n\027k_EMsg"
      "GCEventGameCreate\020\223:\022*\n%k_EMsgGCPerfectW"
      "orldUserLookupRequest\020\224:\022+\n&k_EMsgGCPerf"
      "ectWorldUserLookupResponse\020\225:\022\037\n\032k_EMsgG"
      "CFantasyRemoveOwner\020\230:\022\'\n\"k_EMsgGCFantas"
      "yRemoveOwnerResponse\020\231:\022(\n#k_EMsgGCReque"
      "stBatchPlayerResources\020\232:\0220\n+k_EMsgGCReq"
      "uestBatchPlayerResourcesResponse\020\233:\022\"\n\035k"
      "_EMsgGCToGCSendUpdateLeagues\020\234:\022+\n&k_EMs"
      "gGCCompendiumSetSelectionResponse\020\235:\022\036\n\031"
      "k_EMsgGCPlayerInfoRequest\020\236:\022\027\n\022k_EMsgGC"
      "PlayerInfo\020\237:\022\035\n\030k_EMsgGCPlayerInfoSubmi"
      "t\020\240:\022%\n k_EMsgGCPlayerInfoSubmitResponse"
      "\020\241:\022 \n\033k_EMsgGCToGCGetAccountLevel\020\242:\022(\n"
      "#k_EMsgGCToGCGetAccountLevelResponse\020\243:\022"
      "\"\n\035k_EMsgGCToGCGetAccountPartner\020\244:\022*\n%k"
      "_EMsgGCToGCGetAccountPartnerResponse\020\245:\022"
      "\"\n\035k_EMsgGCToGCGetAccountProfile\020\246:\022*\n%k"
      "_EMsgGCToGCGetAccountProfileResponse\020\247:\022"
      "(\n#k_EMsgDOTAGetWeekendTourneySchedule\020\250"
      ":\022%\n k_EMsgDOTAWeekendTourneySchedule\020\251:"
      "\022+\n&k_EMsgGCJoinableCustomGameModesReque"
      "st\020\252:\022,\n\'k_EMsgGCJoinableCustomGameModes"
      "Response\020\253:\022)\n$k_EMsgGCJoinableCustomLob"
      "biesRequest\020\254:\022*\n%k_EMsgGCJoinableCustom"
      "LobbiesResponse\020\255:\022!\n\034k_EMsgGCQuickJoinC"
      "ustomLobby\020\256:\022)\n$k_EMsgGCQuickJoinCustom"
      "LobbyResponse\020\257:\022&\n!k_EMsgGCToGCGrantEve"
      "ntPointAction\020\260:\022\037\n\032k_EMsgServerGetEvent"
      "Points\020\261:\022\'\n\"k_EMsgServerGetEventPointsR"
      "esponse\020\262:\022&\n!k_EMsgServerGrantSurveyPer"
      "mission\020\263:\022.\n)k_EMsgServerGrantSurveyPer"
      "missionResponse\020\264:\022$\n\037k_EMsgClientProvid"
      "eSurveyResult\020\265:\022\'\n\"k_EMsgGCToGCSetCompe"
      "ndiumSelection\020\266:\022#\n\036k_EMsgGCToGCUpdateT"
      "I4HeroQuest\020\270:\022\"\n\035k_EMsgGCCompendiumData"
      "Changed\020\271:\022\'\n\"k_EMsgDOTAFantasyLeagueFin"
      "dRequest\020\272:\022(\n#k_EMsgDOTAFantasyLeagueFi"
      "ndResponse\020\273:\022\031\n\024k_EMsgGCHasItemQuery\020\274:"
      "\022\034\n\027k_EMsgGCHasItemResponse\020\275:\022!\n\034k_EMsg"
      "GCConsumeFantasyTicket\020\276:\022(\n#k_EMsgGCCon"
      "sumeFantasyTicketFailure\020\277:\022)\n$k_EMsgGCT"
      "oGCGrantEventPointActionMsg\020\300:\022&\n!k_EMsg"
      "ClientToGCTrackDialogResult\020\301:\022&\n!k_EMsg"
      "GCFantasyLeaveLeagueRequest\020\302:\022\'\n\"k_EMsg"
      "GCFantasyLeaveLeagueResponse\020\303:\022(\n#k_EMs"
      "gGCToGCGetCompendiumSelections\020\304:\0220\n+k_E"
      "MsgGCToGCGetCompendiumSelectionsResponse"
      "\020\305:\022)\n$k_EMsgServerToGCMatchConnectionSt"
      "ats\020\306:\022\'\n\"k_EMsgGCToClientTournamentItem"
      "Drop\020\307:\022$\n\037k_EMsgSQLDelayedGrantLeagueDr"
      "op\020\310:\022\'\n\"k_EMsgServerGCUpdateSpectatorCo"
      "unt\020\311:\022-\n(k_EMsgGCFantasyPlayerScoreDeta"
      "ilsRequest\020\313:\022.\n)k_EMsgGCFantasyPlayerSc"
      "oreDetailsResponse\020\314:\022\037\n\032k_EMsgGCToGCEmo"
      "ticonUnlock\020\315:\022\033\n\026k_EMsgSignOutDraftInfo"
      "\020\316:\022(\n#k_EMsgClientToGCEmoticonDataReque"
      "st\020\317:\022!\n\034k_EMsgGCToClientEmoticonData\020\320:"
      "\022\?\n:k_EMsgGCPracticeLobbyToggleBroadcast"
      "ChannelCameramanStatus\020\321:\022,\n\'k_EMsgGCToG"
      "CCreateWeekendTourneyRequest\020\322:\022-\n(k_EMs"
      "gGCToGCCreateWeekendTourneyResponse\020\323:\022("
      "\n#k_EMsgClientToGCSetAdditionalEquips\020\331:"
      "\022(\n#k_EMsgClientToGCGetAdditionalEquips\020"
      "\332:\0220\n+k_EMsgClientToGCGetAdditionalEquip"
      "sResponse\020\333:\022(\n#k_EMsgServerToGCGetAddit"
      "ionalEquips\020\334:\0220\n+k_EMsgServerToGCGetAdd"
      "itionalEquipsResponse\020\335:\022\031\n\024k_EMsgDOTARe"
      "deemItem\020\336:\022!\n\034k_EMsgDOTARedeemItemRespo"
      "nse\020\337:\022(\n#k_EMsgSQLGCToGCGrantAllHeroPro"
      "gress\020\340:\022\'\n\"k_EMsgClientToGCGetAllHeroPr"
      "ogress\020\341:\022/\n*k_EMsgClientToGCGetAllHeroP"
      "rogressResponse\020\342:\022#\n\036k_EMsgGCToGCGetSer"
      "verForClient\020\343:\022+\n&k_EMsgGCToGCGetServer"
      "ForClientResponse\020\344:\022*\n%k_EMsgSQLProcess"
      "TournamentGameOutcome\020\345:\022\"\n\035k_EMsgSQLGra"
      "ntTrophyToAccount\020\346:\022\"\n\035k_EMsgClientToGC"
      "GetTrophyList\020\347:\022*\n%k_EMsgClientToGCGetT"
      "rophyListResponse\020\350:\022\"\n\035k_EMsgGCToClient"
      "TrophyAwarded\020\351:\022 \n\033k_EMsgGCGameBotMatch"
      "SignOut\020\352:\0221\n,k_EMsgGCGameBotMatchSignOu"
      "tPermissionRequest\020\353:\022\031\n\024k_EMsgSignOutBo"
      "tInfo\020\354:\022#\n\036k_EMsgGCToGCUpdateProfileCar"
      "ds\020\355:\022#\n\036k_EMsgClientToGCGetProfileCard\020"
      "\356:\022+\n&k_EMsgClientToGCGetProfileCardResp"
      "onse\020\357:\022#\n\036k_EMsgServerToGCGetProfileCar"
      "d\020\360:\022+\n&k_EMsgServerToGCGetProfileCardRe"
      "sponse\020\361:\022(\n#k_EMsgClientToGCSetProfileC"
      "ardSlots\020\362:\022\'\n\"k_EMsgGCToClientProfileCa"
      "rdUpdated\020\363:\022\'\n\"k_EMsgServerToGCVictoryP"
      "redictions\020\364:\022-\n(k_EMsgClientToGCMarkNot"
      "ificationListRead\020\366:\022)\n$k_EMsgGCToClient"
      "NewNotificationAdded\020\367:\022\'\n\"k_EMsgServerT"
      "oGCSuspiciousActivity\020\370:\022&\n!k_EMsgSignOu"
      "tCommunicationSummary\020\371:\022+\n&k_EMsgServer"
      "ToGCRequestStatus_Response\020\372:\022%\n k_EMsgC"
      "lientToGCCreateHeroStatue\020\373:\022+\n&k_EMsgGC"
      "ToClientHeroStatueCreateResult\020\374:\022&\n!k_E"
      "MsgGCGCToLANServerRelayConnect\020\375:\022\'\n\"k_E"
      "MsgServerToGCGetIngameEventData\020\377:\022/\n*k_"
      "EMsgGCToGCUpdateIngameEventDataBroadcast"
      "\020\200;\022-\n(k_EMsgGCToServerIngameEventData_O"
      "raclePA\020\201;\022(\n#k_EMsgServerToGCReportKill"
      "Summaries\020\202;\022$\n\037k_EMsgGCToGCReportKillSu"
      "mmaries\020\203;\022\'\n\"k_EMsgGCToGCUpdateAssassin"
      "Minigame\020\204;\022&\n!k_EMsgGCToGCFantasySetMat"
      "chLeague\020\205;\022*\n%k_EMsgClientToGCRecordCom"
      "pendiumStats\020\206;\022(\n#k_EMsgGCItemEditorReq"
      "uestLeagueInfo\020\207;\022)\n$k_EMsgGCItemEditorL"
      "eagueInfoResponse\020\210;\022(\n#k_EMsgGCToGCUpda"
      "tePlayerPredictions\020\211;\022%\n k_EMsgGCToServ"
      "erPredictionResult\020\212;\0220\n+k_EMsgServerToG"
      "CSignoutAwardAdditionalDrops\020\213;\022,\n\'k_EMs"
      "gGCToGCSignoutAwardAdditionalDrops\020\214;\022\'\n"
      "\"k_EMsgGCToClientEventStatusChanged\020\215;\022\035"
      "\n\030k_EMsgGCHasItemDefsQuery\020\216;\022 \n\033k_EMsgG"
      "CHasItemDefsResponse\020\217;\022,\n\'k_EMsgGCToGCR"
      "eplayMonitorValidateReplay\020\221;\022\033\n\026k_EMsgL"
      "obbyEventPoints\020\224;\022%\n k_EMsgGCToGCGetCus"
      "tomGameTickets\020\225;\022-\n(k_EMsgGCToGCGetCust"
      "omGameTicketsResponse\020\226;\022!\n\034k_EMsgGCToGC"
      "CustomGamePlayed\020\230;\022\'\n\"k_EMsgGCToGCGrant"
      "EventPointsToUser\020\231;\022)\n$k_EMsgGCToGCSetE"
      "ventMMPanicFlushTime\020\232;\022 \n\033k_EMsgGameser"
      "verCrashReport\020\233;\022(\n#k_EMsgGameserverCra"
      "shReportResponse\020\234;\022(\n#k_EMsgGCToClientS"
      "teamDatagramTicket\020\235;\022$\n\037k_EMsgGCToGCGra"
      "ntEventOwnership\020\236;\022(\n#k_EMsgGCToGCSendA"
      "ccountsEventPoints\020\237;\022*\n%k_EMsgClientToG"
      "CRerollPlayerChallenge\020\240;\022*\n%k_EMsgServe"
      "rToGCRerollPlayerChallenge\020\241;\022*\n%k_EMsgG"
      "CRerollPlayerChallengeResponse\020\242;\022\'\n\"k_E"
      "MsgSignOutUpdatePlayerChallenge\020\243;\022#\n\036k_"
      "EMsgClientToGCSetPartyLeader\020\244;\022\'\n\"k_EMs"
      "gClientToGCCancelPartyInvites\020\245;\022$\n\037k_EM"
      "sgGCToGCMasterReloadAccount\020\246;\022-\n(k_EMsg"
      "SQLGrantLeagueMatchToTicketHolders\020\250;\0220\n"
      "+k_EMsgClientToGCSetAdditionalEquipsResp"
      "onse\020\251;\022)\n$k_EMsgGCToGCEmoticonUnlockNoR"
      "ollback\020\252;\022%\n k_EMsgGCToGCGetCompendiumF"
      "anfare\020\253;\022$\n\037k_EMsgServerToGCHoldEventPo"
      "ints\020\254;\022(\n#k_EMsgSignOutReleaseEventPoin"
      "tHolds\020\255;\022#\n\036k_EMsgGCToGCChatNewUserSess"
      "ion\020\256;\022$\n\037k_EMsgClientToGCGetLeagueSerie"
      "s\020\257;\022,\n\'k_EMsgClientToGCGetLeagueSeriesR"
      "esponse\020\260;\022/\n*k_EMsgSQLGCToGCSignoutUpda"
      "teLeagueSchedule\020\261;\022*\n%k_EMsgGCToServerU"
      "pdateBroadcastCheers\020\262;\022%\n k_EMsgClientT"
      "oGCApplyGemCombiner\020\263;\022+\n&k_EMsgClientTo"
      "GCDOTACreateStaticRecipe\020\264;\0223\n.k_EMsgCli"
      "entToGCDOTACreateStaticRecipeResponse\020\265;"
      "\022$\n\037k_EMsgClientToGCGetAllHeroOrder\020\266;\022,"
      "\n\'k_EMsgClientToGCGetAllHeroOrderRespons"
      "e\020\267;\022$\n\037k_EMsgSQLGCToGCGrantBadgePoints\020"
      "\270;\022&\n!k_EMsgGCToGCGetAccountMatchStatus\020"
      "\271;\022.\n)k_EMsgGCToGCGetAccountMatchStatusR"
      "esponse\020\272;\022-\n(k_EMsgGCToGCCheckOwnsEntir"
      "eEmoticonRange\020\273;\0225\n0k_EMsgGCToGCCheckOw"
      "nsEntireEmoticonRangeResponse\020\274;\022\035\n\030k_EM"
      "sgGCDev_GrantWarKill\020\301>\022%\n k_EMsgServerT"
      "oGCLockCharmTrading\020\304>\022\'\n\"k_EMsgClientTo"
      "GCPlayerStatsRequest\020\306>\022(\n#k_EMsgGCToCli"
      "entPlayerStatsResponse\020\307>\022#\n\036k_EMsgGCCle"
      "arPracticeLobbyTeam\020\310>\022)\n$k_EMsgClientTo"
      "GCFindTopSourceTVGames\020\311>\0221\n,k_EMsgGCToC"
      "lientFindTopSourceTVGamesResponse\020\312>\022\026\n\021"
      "k_EMsgGCLobbyList\020\313>\022\036\n\031k_EMsgGCLobbyLis"
      "tResponse\020\314>\022$\n\037k_EMsgGCPlayerStatsMatch"
      "SignOut\020\315>\0221\n,k_EMsgClientToGCCustomGame"
      "PlayerCountRequest\020\316>\0222\n-k_EMsgGCToClien"
      "tCustomGamePlayerCountResponse\020\317>\0221\n,k_E"
      "MsgClientToGCSocialFeedPostCommentReques"
      "t\020\320>\0222\n-k_EMsgGCToClientSocialFeedPostCo"
      "mmentResponse\020\321>\0224\n/k_EMsgClientToGCCust"
      "omGamesFriendsPlayedRequest\020\322>\0225\n0k_EMsg"
      "GCToClientCustomGamesFriendsPlayedRespon"
      "se\020\323>\0223\n.k_EMsgClientToGCFriendsPlayedCu"
      "stomGameRequest\020\324>\0224\n/k_EMsgGCToClientFr"
      "iendsPlayedCustomGameResponse\020\325>\022*\n%k_EM"
      "sgClientToGCFeaturedHeroesRequest\020\326>\022+\n&"
      "k_EMsgGCToClientFeaturedHeroesResponse\020\327"
      ">\022\037\n\032k_EMsgGCTopCustomGamesList\020\330>\0222\n-k_"
      "EMsgClientToGCSocialMatchPostCommentRequ"
      "est\020\331>\0223\n.k_EMsgGCToClientSocialMatchPos"
      "tCommentResponse\020\332>\022.\n)k_EMsgClientToGCS"
      "ocialMatchDetailsRequest\020\333>\022/\n*k_EMsgGCT"
      "oClientSocialMatchDetailsResponse\020\334>\022!\n\034"
      "k_EMsgClientToGCSetPartyOpen\020\335>\022%\n k_EMs"
      "gClientToGCMergePartyInvite\020\336>\022*\n%k_EMsg"
      "GCToClientMergeGroupInviteReply\020\337>\022\'\n\"k_"
      "EMsgClientToGCMergePartyResponse\020\340>\022,\n\'k"
      "_EMsgGCToClientMergePartyResponseReply\020\341"
      ">\022(\n#k_EMsgClientToGCGetProfileCardStats"
      "\020\342>\0220\n+k_EMsgClientToGCGetProfileCardSta"
      "tsResponse\020\343>\022,\n\'k_EMsgClientToGCTopLeag"
      "ueMatchesRequest\020\344>\022,\n\'k_EMsgClientToGCT"
      "opFriendMatchesRequest\020\345>\022,\n\'k_EMsgGCToC"
      "lientProfileCardStatsUpdated\020\350>\022\"\n\035k_EMs"
      "gServerToGCRealtimeStats\020\351>\022+\n&k_EMsgGCT"
      "oServerRealtimeStatsStartStop\020\352>\022%\n k_EM"
      "sgGCToGCGetServersForClients\020\355>\022-\n(k_EMs"
      "gGCToGCGetServersForClientsResponse\020\356>\022&"
      "\n!k_EMsgGCPracticeLobbyKickFromTeam\020\357>\022!"
      "\n\034k_EMsgDOTAChatGetMemberCount\020\360>\022)\n$k_E"
      "MsgDOTAChatGetMemberCountResponse\020\361>\0221\n,"
      "k_EMsgClientToGCSocialFeedPostMessageReq"
      "uest\020\362>\0222\n-k_EMsgGCToClientSocialFeedPos"
      "tMessageResponse\020\363>\022/\n*k_EMsgCustomGameL"
      "istenServerStartedLoading\020\364>\022*\n%k_EMsgCu"
      "stomGameClientFinishedLoading\020\365>\022/\n*k_EM"
      "sgGCPracticeLobbyCloseBroadcastChannel\020\366"
      ">\022&\n!k_EMsgGCStartFindingMatchResponse\020\367"
      ">\022$\n\037k_EMsgSQLGCToGCGrantAccountFlag\020\371>\022"
      " \n\033k_EMsgGCToGCGetAccountFlags\020\372>\022(\n#k_E"
      "MsgGCToGCGetAccountFlagsResponse\020\373>\022\034\n\027k"
      "_EMsgSignOutWagerStats\020\374>\022-\n(k_EMsgGCToC"
      "lientTopLeagueMatchesResponse\020\375>\022-\n(k_EM"
      "sgGCToClientTopFriendMatchesResponse\020\376>\022"
      "*\n%k_EMsgClientToGCMatchesMinimalRequest"
      "\020\377>\022+\n&k_EMsgClientToGCMatchesMinimalRes"
      "ponse\020\200\?\022&\n!k_EMsgGCToGCGetProfileBadgeP"
      "oints\020\201\?\022.\n)k_EMsgGCToGCGetProfileBadgeP"
      "ointsResponse\020\202\?\022\'\n\"k_EMsgGCToClientChat"
      "RegionsEnabled\020\203\?\022\035\n\030k_EMsgClientToGCPin"
      "gData\020\204\?\022(\n#k_EMsgServerToGCMatchDetails"
      "Request\020\205\?\022)\n$k_EMsgGCToServerMatchDetai"
      "lsResponse\020\206\?\022%\n k_EMsgGCToGCEnsureAccou"
      "ntInParty\020\207\?\022-\n(k_EMsgGCToGCEnsureAccoun"
      "tInPartyResponse\020\210\?\022&\n!k_EMsgClientToGCG"
      "etProfileTickets\020\211\?\022.\n)k_EMsgClientToGCG"
      "etProfileTicketsResponse\020\212\?\022\'\n\"k_EMsgGCT"
      "oClientMatchGroupsVersion\020\213\?\022$\n\037k_EMsgCl"
      "ientToGCH264Unsupported\020\214\?\022\'\n\"k_EMsgClie"
      "ntToGCRequestH264Support\020\215\?\022%\n k_EMsgCli"
      "entToGCGetQuestProgress\020\216\?\022-\n(k_EMsgClie"
      "ntToGCGetQuestProgressResponse\020\217\?\022\031\n\024k_E"
      "MsgSignOutXPCoins\020\220\?\022#\n\036k_EMsgGCToClient"
      "MatchSignedOut\020\221\?\022 \n\033k_EMsgGCGetHeroStat"
      "sHistory\020\222\?\022(\n#k_EMsgGCGetHeroStatsHisto"
      "ryResponse\020\223\?\022&\n!k_EMsgClientToGCPrivate"
      "ChatInvite\020\224\?\022$\n\037k_EMsgClientToGCPrivate"
      "ChatKick\020\230\?\022\'\n\"k_EMsgClientToGCPrivateCh"
      "atPromote\020\231\?\022&\n!k_EMsgClientToGCPrivateC"
      "hatDemote\020\232\?\022(\n#k_EMsgGCToClientPrivateC"
      "hatResponse\020\233\?\022+\n&k_EMsgClientToGCPrivat"
      "eChatInfoRequest\020\234\?\022,\n\'k_EMsgGCToClientP"
      "rivateChatInfoResponse\020\235\?\0222\n-k_EMsgClien"
      "tToGCLatestConductScorecardRequest\020\237\?\022+\n"
      "&k_EMsgClientToGCLatestConductScorecard\020"
      "\240\?\022!\n\034k_EMsgServerToGCPostMatchTip\020\241\?\022)\n"
      "$k_EMsgServerToGCPostMatchTipResponse\020\242\?"
      "\022$\n\037k_EMsgClientToGCWageringRequest\020\243\?\022%"
      "\n k_EMsgGCToClientWageringResponse\020\244\?\022&\n"
      "!k_EMsgClientToGCEventGoalsRequest\020\247\?\022\'\n"
      "\"k_EMsgClientToGCEventGoalsResponse\020\250\?\022&"
      "\n!k_EMsgClientToGCLeaguePredictions\020\252\?\022."
      "\n)k_EMsgGCToClientLeaguePredictionsRespo"
      "nse\020\253\?\022(\n#k_EMsgGCToGCLeaguePredictionsU"
      "pdate\020\254\?\022\'\n\"k_EMsgClientToGCSuspiciousAc"
      "tivity\020\255\?\022&\n!k_EMsgGCToGCAddUserToPostGa"
      "meChat\020\256\?\022)\n$k_EMsgClientToGCHasPlayerVo"
      "tedForMVP\020\257\?\0221\n,k_EMsgClientToGCHasPlaye"
      "rVotedForMVPResponse\020\260\?\022\037\n\032k_EMsgClientT"
      "oGCVoteForMVP\020\261\?\022\'\n\"k_EMsgClientToGCVote"
      "ForMVPResponse\020\262\?\022\"\n\035k_EMsgGCToGCGetEven"
      "tOwnership\020\263\?\022*\n%k_EMsgGCToGCGetEventOwn"
      "ershipResponse\020\264\?\0223\n.k_EMsgGCToClientAut"
      "omatedTournamentStateChange\020\265\?\022\'\n\"k_EMsg"
      "ClientToGCWeekendTourneyOpts\020\266\?\022/\n*k_EMs"
      "gClientToGCWeekendTourneyOptsResponse\020\267\?"
      "\022(\n#k_EMsgClientToGCWeekendTourneyLeave\020"
      "\270\?\0220\n+k_EMsgClientToGCWeekendTourneyLeav"
      "eResponse\020\271\?\022)\n$k_EMsgClientToGCTeammate"
      "StatsRequest\020\274\?\022*\n%k_EMsgClientToGCTeamm"
      "ateStatsResponse\020\275\?\022\'\n\"k_EMsgClientToGCG"
      "etGiftPermissions\020\276\?\022/\n*k_EMsgClientToGC"
      "GetGiftPermissionsResponse\020\277\?\022\"\n\035k_EMsgC"
      "lientToGCVoteForArcana\020\300\?\022*\n%k_EMsgClien"
      "tToGCVoteForArcanaResponse\020\301\?\0220\n+k_EMsgC"
      "lientToGCRequestArcanaVotesRemaining\020\302\?\022"
      "8\n3k_EMsgClientToGCRequestArcanaVotesRem"
      "ainingResponse\020\303\?\022&\n!k_EMsgGCTransferTea"
      "mAdminResponse\020\304\?\022\032\n\025k_EMsgGCChangeTeamS"
      "ub\020\305\?\022\"\n\035k_EMsgGCChangeTeamSubResponse\020\306"
      "\?\022\035\n\030k_EMsgGCToClientTeamInfo\020\307\?\022\036\n\031k_EM"
      "sgGCToClientTeamsInfo\020\310\?\022&\n!k_EMsgClient"
      "ToGCMyTeamInfoRequest\020\311\?\022)\n$k_EMsgClient"
      "ToGCRequestEventPointLog\020\312\?\0221\n,k_EMsgCli"
      "entToGCRequestEventPointLogResponse\020\313\?\022$"
      "\n\037k_EMsgClientToGCPublishUserStat\020\314\?\022\"\n\035"
      "k_EMsgGCToGCSignoutSpendWager\020\315\?\022\037\n\032k_EM"
      "sgGCSubmitLobbyMVPVote\020\320\?\022\'\n\"k_EMsgGCSub"
      "mitLobbyMVPVoteResponse\020\321\?\022.\n)k_EMsgClie"
      "ntToGCRequestLinaPlaysRemaining\020\322\?\0226\n1k_"
      "EMsgClientToGCRequestLinaPlaysRemainingR"
      "esponse\020\323\?\022*\n%k_EMsgClientToGCRequestLin"
      "aGameResult\020\324\?\0222\n-k_EMsgClientToGCReques"
      "tLinaGameResultResponse\020\325\?\022\'\n\"k_EMsgSign"
      "OutCommunityGoalProgress\020\326\?\022,\n\'k_EMsgGCT"
      "oClientLobbyMVPNotifyRecipient\020\327\?\022$\n\037k_E"
      "MsgGCToClientLobbyMVPAwarded\020\330\?\022)\n$k_EMs"
      "gGCToClientQuestProgressUpdated\020\331\?\022#\n\036k_"
      "EMsgGCToClientWageringUpdate\020\332\?\022&\n!k_EMs"
      "gGCToClientArcanaVotesUpdate\020\333\?\022\'\n\"k_EMs"
      "gClientToGCAddTI6TreeProgress\020\334\?\022-\n(k_EM"
      "sgClientToGCSetSpectatorLobbyDetails\020\335\?\022"
      "5\n0k_EMsgClientToGCSetSpectatorLobbyDeta"
      "ilsResponse\020\336\?\022)\n$k_EMsgClientToGCCreate"
      "SpectatorLobby\020\337\?\0221\n,k_EMsgClientToGCCre"
      "ateSpectatorLobbyResponse\020\340\?\022\'\n\"k_EMsgCl"
      "ientToGCSpectatorLobbyList\020\341\?\022/\n*k_EMsgC"
      "lientToGCSpectatorLobbyListResponse\020\342\?\022$"
      "\n\037k_EMsgSpectatorLobbyGameDetails\020\343\?\0225\n0"
      "k_EMsgServerToGCStartCompendiumInGamePre"
      "dictions\020\344\?\0223\n.k_EMsgServerToGCEndCompen"
      "diumInGamePredictions\020\345\?\0226\n1k_EMsgServer"
      "ToGCCompendiumInGamePredictionResults\020\346\?"
      "\022:\n5k_EMsgServerToGCCloseCompendiumInGam"
      "ePredictionVoting\020\347\?\022\'\n\"k_EMsgClientToGC"
      "OpenPlayerCardPack\020\350\?\022/\n*k_EMsgClientToG"
      "COpenPlayerCardPackResponse\020\351\?\0225\n0k_EMsg"
      "ClientToGCSelectCompendiumInGamePredicti"
      "on\020\352\?\022=\n8k_EMsgClientToGCSelectCompendiu"
      "mInGamePredictionResponse\020\353\?\0221\n,k_EMsgCl"
      "ientToGCWeekendTourneyGetPlayerStats\020\354\?\022"
      "9\n4k_EMsgClientToGCWeekendTourneyGetPlay"
      "erStatsResponse\020\355\?\022&\n!k_EMsgClientToGCRe"
      "cyclePlayerCard\020\356\?\022.\n)k_EMsgClientToGCRe"
      "cyclePlayerCardResponse\020\357\?\022)\n$k_EMsgClie"
      "ntToGCCreatePlayerCardPack\020\360\?\0221\n,k_EMsgC"
      "lientToGCCreatePlayerCardPackResponse\020\361\?"
      "\022/\n*k_EMsgClientToGCGetPlayerCardRosterR"
      "equest\020\362\?\0220\n+k_EMsgClientToGCGetPlayerCa"
      "rdRosterResponse\020\363\?\022/\n*k_EMsgClientToGCS"
      "etPlayerCardRosterRequest\020\364\?\0220\n+k_EMsgCl"
      "ientToGCSetPlayerCardRosterResponse\020\365\?\022="
      "\n8k_EMsgServerToGCStartCompendiumInGameP"
      "redictionsResponse\020\366\?\022B\n=k_EMsgServerToG"
      "CCloseCompendiumInGamePredictionVotingRe"
      "sponse\020\367\?\022;\n6k_EMsgServerToGCEndCompendi"
      "umInGamePredictionsResponse\020\370\?\022>\n9k_EMsg"
      "ServerToGCCompendiumInGamePredictionResu"
      "ltsResponse\020\371\?\022 \n\033k_EMsgLobbyBattleCupVi"
      "ctory\020\372\?\022\"\n\035k_EMsgGCGetPlayerCardItemInf"
      "o\020\373\?\022*\n%k_EMsgGCGetPlayerCardItemInfoRes"
      "ponse\020\374\?\022/\n*k_EMsgClientToGCRequestSteam"
      "DatagramTicket\020\375\?\0227\n2k_EMsgClientToGCReq"
      "uestSteamDatagramTicketResponse\020\376\?\022,\n\'k_"
      "EMsgGCToClientBattlePassRollupRequest\020\377\?"
      "\022-\n(k_EMsgGCToClientBattlePassRollupResp"
      "onse\020\200@\022/\n*k_EMsgClientToGCTransferSeaso"
      "nalMMRRequest\020\201@\0220\n+k_EMsgClientToGCTran"
      "sferSeasonalMMRResponse\020\202@\022+\n&k_EMsgGCTo"
      "GCPublicChatCommunicationBan\020\203@\022+\n&k_EMs"
      "gGCToGCUpdateAccountPublicChatBan\020\204@\022!\n\034"
      "k_EMsgGCChatReportPublicSpam\020\205@\022+\n&k_EMs"
      "gClientToGCSetPartyBuilderOptions\020\206@\0223\n."
      "k_EMsgClientToGCSetPartyBuilderOptionsRe"
      "sponse\020\207@\022#\n\036k_EMsgGCToClientPlaytestSta"
      "tus\020\210@\022!\n\034k_EMsgClientToGCJoinPlaytest\020\211"
      "@\022)\n$k_EMsgClientToGCJoinPlaytestRespons"
      "e\020\212@\022\037\n\032k_EMsgLobbyPlaytestDetails\020\213@\022\036\n"
      "\031k_EMsgDOTASetFavoriteTeam\020\214@\0220\n+k_EMsgG"
      "CToClientBattlePassRollupListRequest\020\215@\022"
      "1\n,k_EMsgGCToClientBattlePassRollupListR"
      "esponse\020\216@\022\027\n\022k_EMsgGCIsProQuery\020\217@\022\032\n\025k"
      "_EMsgGCIsProResponse\020\220@\022\037\n\032k_EMsgDOTACla"
      "imEventAction\020\221@\022\'\n\"k_EMsgDOTAClaimEvent"
      "ActionResponse\020\222@\022\"\n\035k_EMsgDOTAGetPeriod"
      "icResource\020\223@\022*\n%k_EMsgDOTAGetPeriodicRe"
      "sourceResponse\020\224@\022&\n!k_EMsgDOTAPeriodicR"
      "esourceUpdated\020\225@\022\037\n\032k_EMsgServerToGCSpe"
      "ndWager\020\226@\022\'\n\"k_EMsgGCToGCSignoutSpendWa"
      "gerToken\020\227@\022%\n k_EMsgSubmitTriviaQuestio"
      "nAnswer\020\230@\022-\n(k_EMsgSubmitTriviaQuestion"
      "AnswerResponse\020\231@\022\034\n\027k_EMsgClientToGCGiv"
      "eTip\020\232@\022$\n\037k_EMsgClientToGCGiveTipRespon"
      "se\020\233@\022\035\n\030k_EMsgStartTriviaSession\020\234@\022%\n "
      "k_EMsgStartTriviaSessionResponse\020\235@\022#\n\036k"
      "_EMsgAnchorPhoneNumberRequest\020\236@\022$\n\037k_EM"
      "sgAnchorPhoneNumberResponse\020\237@\022%\n k_EMsg"
      "UnanchorPhoneNumberRequest\020\240@\022&\n!k_EMsgU"
      "nanchorPhoneNumberResponse\020\241@\022$\n\037k_EMsgG"
      "CToClientTipNotification\020\242@\022+\n&k_EMsgCli"
      "entToGCRequestSlarkGameResult\020\243@\0223\n.k_EM"
      "sgClientToGCRequestSlarkGameResultRespon"
      "se\020\244@\022&\n!k_EMsgGCToGCSignoutSpendRankWag"
      "er\020\245@\022 \n\033k_EMsgGCToGCGetFavoriteTeam\020\246@\022"
      "(\n#k_EMsgGCToGCGetFavoriteTeamResponse\020\247"
      "@\022\037\n\032k_EMsgSignOutEventGameData\020\250@B\005H\001\200\001"
      "\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 28561);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dota_gcmessages_msgid.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_dota_5fgcmessages_5fmsgid_2eproto

const ::google::protobuf::EnumDescriptor* EDOTAGCMsg_descriptor() {
  protobuf_dota_5fgcmessages_5fmsgid_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fgcmessages_5fmsgid_2eproto::file_level_enum_descriptors[0];
}
bool EDOTAGCMsg_IsValid(int value) {
  switch (value) {
    case 7000:
    case 7001:
    case 7004:
    case 7005:
    case 7009:
    case 7010:
    case 7013:
    case 7014:
    case 7017:
    case 7026:
    case 7027:
    case 7028:
    case 7033:
    case 7034:
    case 7035:
    case 7036:
    case 7038:
    case 7040:
    case 7041:
    case 7042:
    case 7043:
    case 7044:
    case 7046:
    case 7047:
    case 7049:
    case 7055:
    case 7056:
    case 7057:
    case 7060:
    case 7061:
    case 7064:
    case 7065:
    case 7068:
    case 7069:
    case 7070:
    case 7071:
    case 7072:
    case 7073:
    case 7074:
    case 7075:
    case 7076:
    case 7077:
    case 7078:
    case 7079:
    case 7081:
    case 7082:
    case 7083:
    case 7084:
    case 7085:
    case 7086:
    case 7087:
    case 7088:
    case 7089:
    case 7090:
    case 7091:
    case 7092:
    case 7093:
    case 7094:
    case 7095:
    case 7096:
    case 7097:
    case 7098:
    case 7099:
    case 7102:
    case 7104:
    case 7111:
    case 7112:
    case 7113:
    case 7114:
    case 7115:
    case 7116:
    case 7121:
    case 7122:
    case 7123:
    case 7124:
    case 7125:
    case 7126:
    case 7127:
    case 7128:
    case 7129:
    case 7130:
    case 7131:
    case 7132:
    case 7133:
    case 7134:
    case 7141:
    case 7142:
    case 7143:
    case 7144:
    case 7147:
    case 7148:
    case 7149:
    case 7150:
    case 7151:
    case 7152:
    case 7153:
    case 7154:
    case 7155:
    case 7156:
    case 7157:
    case 7158:
    case 7159:
    case 7160:
    case 7161:
    case 7166:
    case 7167:
    case 7168:
    case 7169:
    case 7170:
    case 7171:
    case 7172:
    case 7173:
    case 7174:
    case 7176:
    case 7177:
    case 7178:
    case 7179:
    case 7180:
    case 7182:
    case 7183:
    case 7186:
    case 7188:
    case 7189:
    case 7190:
    case 7191:
    case 7192:
    case 7193:
    case 7194:
    case 7195:
    case 7196:
    case 7197:
    case 7198:
    case 7199:
    case 7200:
    case 7201:
    case 7203:
    case 7204:
    case 7205:
    case 7206:
    case 7207:
    case 7208:
    case 7209:
    case 7210:
    case 7212:
    case 7215:
    case 7216:
    case 7217:
    case 7218:
    case 7219:
    case 7220:
    case 7221:
    case 7222:
    case 7223:
    case 7224:
    case 7225:
    case 7226:
    case 7227:
    case 7228:
    case 7229:
    case 7230:
    case 7231:
    case 7232:
    case 7233:
    case 7234:
    case 7235:
    case 7236:
    case 7237:
    case 7240:
    case 7241:
    case 7242:
    case 7248:
    case 7249:
    case 7251:
    case 7254:
    case 7255:
    case 7256:
    case 7258:
    case 7259:
    case 7261:
    case 7262:
    case 7263:
    case 7264:
    case 7265:
    case 7266:
    case 7267:
    case 7268:
    case 7269:
    case 7270:
    case 7272:
    case 7273:
    case 7274:
    case 7275:
    case 7279:
    case 7280:
    case 7281:
    case 7282:
    case 7283:
    case 7284:
    case 7285:
    case 7286:
    case 7287:
    case 7288:
    case 7289:
    case 7290:
    case 7291:
    case 7292:
    case 7293:
    case 7294:
    case 7297:
    case 7298:
    case 7299:
    case 7300:
    case 7301:
    case 7302:
    case 7303:
    case 7304:
    case 7305:
    case 7306:
    case 7307:
    case 7308:
    case 7309:
    case 7310:
    case 7312:
    case 7313:
    case 7314:
    case 7315:
    case 7316:
    case 7317:
    case 7318:
    case 7319:
    case 7320:
    case 7321:
    case 7322:
    case 7323:
    case 7324:
    case 7325:
    case 7326:
    case 7327:
    case 7328:
    case 7329:
    case 7330:
    case 7331:
    case 7332:
    case 7333:
    case 7334:
    case 7335:
    case 7336:
    case 7337:
    case 7338:
    case 7339:
    case 7340:
    case 7341:
    case 7342:
    case 7343:
    case 7344:
    case 7345:
    case 7346:
    case 7347:
    case 7348:
    case 7349:
    case 7350:
    case 7351:
    case 7352:
    case 7353:
    case 7354:
    case 7355:
    case 7356:
    case 7357:
    case 7358:
    case 7359:
    case 7360:
    case 7361:
    case 7362:
    case 7363:
    case 7364:
    case 7365:
    case 7366:
    case 7367:
    case 7368:
    case 7369:
    case 7370:
    case 7371:
    case 7372:
    case 7373:
    case 7374:
    case 7375:
    case 7376:
    case 7377:
    case 7378:
    case 7379:
    case 7380:
    case 7381:
    case 7382:
    case 7383:
    case 7384:
    case 7387:
    case 7388:
    case 7390:
    case 7393:
    case 7394:
    case 7395:
    case 7396:
    case 7397:
    case 7398:
    case 7402:
    case 7403:
    case 7404:
    case 7405:
    case 7406:
    case 7407:
    case 7408:
    case 7409:
    case 7410:
    case 7411:
    case 7412:
    case 7413:
    case 7414:
    case 7415:
    case 7416:
    case 7417:
    case 7418:
    case 7420:
    case 7423:
    case 7424:
    case 7425:
    case 7426:
    case 7427:
    case 7428:
    case 7429:
    case 7430:
    case 7431:
    case 7432:
    case 7433:
    case 7434:
    case 7435:
    case 7436:
    case 7437:
    case 7438:
    case 7439:
    case 7440:
    case 7441:
    case 7443:
    case 7444:
    case 7445:
    case 7448:
    case 7449:
    case 7450:
    case 7451:
    case 7452:
    case 7453:
    case 7454:
    case 7455:
    case 7456:
    case 7457:
    case 7458:
    case 7459:
    case 7460:
    case 7461:
    case 7462:
    case 7463:
    case 7464:
    case 7465:
    case 7466:
    case 7467:
    case 7468:
    case 7469:
    case 7470:
    case 7471:
    case 7472:
    case 7473:
    case 7474:
    case 7475:
    case 7476:
    case 7477:
    case 7478:
    case 7480:
    case 7481:
    case 7482:
    case 7483:
    case 7484:
    case 7485:
    case 7486:
    case 7487:
    case 7488:
    case 7489:
    case 7490:
    case 7491:
    case 7492:
    case 7493:
    case 7494:
    case 7495:
    case 7496:
    case 7497:
    case 7499:
    case 7500:
    case 7501:
    case 7502:
    case 7503:
    case 7504:
    case 7505:
    case 7506:
    case 7507:
    case 7513:
    case 7514:
    case 7515:
    case 7516:
    case 7517:
    case 7518:
    case 7519:
    case 7520:
    case 7521:
    case 7522:
    case 7523:
    case 7524:
    case 7525:
    case 7526:
    case 7527:
    case 7528:
    case 7529:
    case 7530:
    case 7531:
    case 7532:
    case 7533:
    case 7534:
    case 7535:
    case 7536:
    case 7537:
    case 7538:
    case 7539:
    case 7540:
    case 7542:
    case 7543:
    case 7544:
    case 7545:
    case 7546:
    case 7547:
    case 7548:
    case 7549:
    case 7551:
    case 7552:
    case 7553:
    case 7554:
    case 7555:
    case 7556:
    case 7557:
    case 7558:
    case 7559:
    case 7560:
    case 7561:
    case 7562:
    case 7563:
    case 7564:
    case 7565:
    case 7566:
    case 7567:
    case 7569:
    case 7572:
    case 7573:
    case 7574:
    case 7576:
    case 7577:
    case 7578:
    case 7579:
    case 7580:
    case 7581:
    case 7582:
    case 7583:
    case 7584:
    case 7585:
    case 7586:
    case 7587:
    case 7588:
    case 7589:
    case 7590:
    case 7592:
    case 7593:
    case 7594:
    case 7595:
    case 7596:
    case 7597:
    case 7598:
    case 7599:
    case 7600:
    case 7601:
    case 7602:
    case 7603:
    case 7604:
    case 7605:
    case 7606:
    case 7607:
    case 7608:
    case 7609:
    case 7610:
    case 7611:
    case 7612:
    case 8001:
    case 8004:
    case 8006:
    case 8007:
    case 8008:
    case 8009:
    case 8010:
    case 8011:
    case 8012:
    case 8013:
    case 8014:
    case 8015:
    case 8016:
    case 8017:
    case 8018:
    case 8019:
    case 8020:
    case 8021:
    case 8022:
    case 8023:
    case 8024:
    case 8025:
    case 8026:
    case 8027:
    case 8028:
    case 8029:
    case 8030:
    case 8031:
    case 8032:
    case 8033:
    case 8034:
    case 8035:
    case 8036:
    case 8037:
    case 8040:
    case 8041:
    case 8042:
    case 8045:
    case 8046:
    case 8047:
    case 8048:
    case 8049:
    case 8050:
    case 8051:
    case 8052:
    case 8053:
    case 8054:
    case 8055:
    case 8057:
    case 8058:
    case 8059:
    case 8060:
    case 8061:
    case 8062:
    case 8063:
    case 8064:
    case 8065:
    case 8066:
    case 8067:
    case 8068:
    case 8069:
    case 8070:
    case 8071:
    case 8072:
    case 8073:
    case 8074:
    case 8075:
    case 8076:
    case 8077:
    case 8078:
    case 8079:
    case 8080:
    case 8081:
    case 8082:
    case 8083:
    case 8084:
    case 8088:
    case 8089:
    case 8090:
    case 8091:
    case 8092:
    case 8093:
    case 8095:
    case 8096:
    case 8097:
    case 8098:
    case 8099:
    case 8100:
    case 8103:
    case 8104:
    case 8106:
    case 8107:
    case 8108:
    case 8109:
    case 8110:
    case 8111:
    case 8112:
    case 8113:
    case 8114:
    case 8115:
    case 8116:
    case 8117:
    case 8118:
    case 8119:
    case 8120:
    case 8121:
    case 8124:
    case 8125:
    case 8126:
    case 8127:
    case 8128:
    case 8129:
    case 8130:
    case 8131:
    case 8132:
    case 8133:
    case 8134:
    case 8135:
    case 8136:
    case 8137:
    case 8138:
    case 8139:
    case 8140:
    case 8141:
    case 8144:
    case 8145:
    case 8146:
    case 8147:
    case 8148:
    case 8149:
    case 8150:
    case 8151:
    case 8152:
    case 8153:
    case 8154:
    case 8155:
    case 8156:
    case 8157:
    case 8158:
    case 8159:
    case 8160:
    case 8161:
    case 8162:
    case 8163:
    case 8164:
    case 8165:
    case 8166:
    case 8167:
    case 8168:
    case 8169:
    case 8170:
    case 8171:
    case 8172:
    case 8173:
    case 8174:
    case 8175:
    case 8176:
    case 8177:
    case 8178:
    case 8179:
    case 8180:
    case 8181:
    case 8182:
    case 8183:
    case 8184:
    case 8185:
    case 8186:
    case 8187:
    case 8188:
    case 8189:
    case 8190:
    case 8191:
    case 8192:
    case 8193:
    case 8194:
    case 8195:
    case 8196:
    case 8197:
    case 8198:
    case 8199:
    case 8200:
    case 8201:
    case 8202:
    case 8203:
    case 8204:
    case 8205:
    case 8206:
    case 8207:
    case 8208:
    case 8209:
    case 8210:
    case 8211:
    case 8212:
    case 8213:
    case 8214:
    case 8215:
    case 8216:
    case 8217:
    case 8218:
    case 8219:
    case 8220:
    case 8221:
    case 8222:
    case 8223:
    case 8224:
    case 8225:
    case 8226:
    case 8227:
    case 8228:
    case 8229:
    case 8230:
    case 8231:
    case 8232:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

// @@protoc_insertion_point(global_scope)
