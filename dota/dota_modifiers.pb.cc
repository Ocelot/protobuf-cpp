// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_modifiers.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dota_modifiers.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace dota {
class CDOTAModifierBuffTableEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CDOTAModifierBuffTableEntry> {
} _CDOTAModifierBuffTableEntry_default_instance_;
class CDOTALuaModifierEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CDOTALuaModifierEntry> {
} _CDOTALuaModifierEntry_default_instance_;

namespace protobuf_dota_5fmodifiers_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, entry_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, parent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, serial_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, modifier_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, ability_level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, stack_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, creation_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, caster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, ability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, armor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, fade_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, subtle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, channel_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, v_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, v_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, portal_loop_appear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, portal_loop_disappear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, hero_loop_appear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, hero_loop_disappear_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, movement_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, aura_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, activity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, dd_modifier_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, dd_ability_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, illusion_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, active_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, player_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTAModifierBuffTableEntry, lua_name_),
  30,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  31,
  16,
  17,
  18,
  19,
  22,
  20,
  7,
  8,
  0,
  1,
  2,
  3,
  21,
  23,
  25,
  26,
  27,
  28,
  29,
  4,
  24,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTALuaModifierEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTALuaModifierEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTALuaModifierEntry, modifier_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CDOTALuaModifierEntry, modifier_filename_),
  1,
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 37, sizeof(CDOTAModifierBuffTableEntry)},
  { 69, 76, sizeof(CDOTALuaModifierEntry)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CDOTAModifierBuffTableEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CDOTALuaModifierEntry_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dota_modifiers.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _CDOTAModifierBuffTableEntry_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CDOTALuaModifierEntry_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::dota::protobuf_networkbasetypes_2eproto::InitDefaults();
  _CDOTAModifierBuffTableEntry_default_instance_.DefaultConstruct();
  _CDOTALuaModifierEntry_default_instance_.DefaultConstruct();
  _CDOTAModifierBuffTableEntry_default_instance_.get_mutable()->v_start_ = const_cast< ::proto::dota::CMsgVector*>(
      ::proto::dota::CMsgVector::internal_default_instance());
  _CDOTAModifierBuffTableEntry_default_instance_.get_mutable()->v_end_ = const_cast< ::proto::dota::CMsgVector*>(
      ::proto::dota::CMsgVector::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\024dota_modifiers.proto\022\nproto.dota\032\026netw"
      "orkbasetypes.proto\"\241\006\n\033CDOTAModifierBuff"
      "TableEntry\022Y\n\nentry_type\030\001 \002(\0162$.proto.d"
      "ota.DOTA_MODIFIER_ENTRY_TYPE:\037DOTA_MODIF"
      "IER_ENTRY_TYPE_ACTIVE\022\016\n\006parent\030\002 \002(\005\022\r\n"
      "\005index\030\003 \002(\005\022\022\n\nserial_num\030\004 \002(\005\022\026\n\016modi"
      "fier_class\030\005 \001(\005\022\025\n\rability_level\030\006 \001(\005\022"
      "\023\n\013stack_count\030\007 \001(\005\022\025\n\rcreation_time\030\010 "
      "\001(\002\022\024\n\010duration\030\t \001(\002:\002-1\022\016\n\006caster\030\n \001("
      "\005\022\017\n\007ability\030\013 \001(\005\022\r\n\005armor\030\014 \001(\005\022\021\n\tfad"
      "e_time\030\r \001(\002\022\016\n\006subtle\030\016 \001(\010\022\024\n\014channel_"
      "time\030\017 \001(\002\022\'\n\007v_start\030\020 \001(\0132\026.proto.dota"
      ".CMsgVector\022%\n\005v_end\030\021 \001(\0132\026.proto.dota."
      "CMsgVector\022\032\n\022portal_loop_appear\030\022 \001(\t\022\035"
      "\n\025portal_loop_disappear\030\023 \001(\t\022\030\n\020hero_lo"
      "op_appear\030\024 \001(\t\022\033\n\023hero_loop_disappear\030\025"
      " \001(\t\022\026\n\016movement_speed\030\026 \001(\005\022\014\n\004aura\030\027 \001"
      "(\010\022\020\n\010activity\030\030 \001(\005\022\016\n\006damage\030\031 \001(\005\022\r\n\005"
      "range\030\032 \001(\005\022\031\n\021dd_modifier_index\030\033 \001(\005\022\030"
      "\n\020dd_ability_index\030\034 \001(\005\022\026\n\016illusion_lab"
      "el\030\035 \001(\t\022\016\n\006active\030\036 \001(\010\022\022\n\nplayer_ids\030\037"
      " \001(\t\022\020\n\010lua_name\030  \001(\t\"I\n\025CDOTALuaModifi"
      "erEntry\022\025\n\rmodifier_type\030\001 \002(\005\022\031\n\021modifi"
      "er_filename\030\002 \002(\t*e\n\030DOTA_MODIFIER_ENTRY"
      "_TYPE\022#\n\037DOTA_MODIFIER_ENTRY_TYPE_ACTIVE"
      "\020\001\022$\n DOTA_MODIFIER_ENTRY_TYPE_REMOVED\020\002"
      "B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1047);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dota_modifiers.proto", &protobuf_RegisterTypes);
  ::proto::dota::protobuf_networkbasetypes_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_dota_5fmodifiers_2eproto

const ::google::protobuf::EnumDescriptor* DOTA_MODIFIER_ENTRY_TYPE_descriptor() {
  protobuf_dota_5fmodifiers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fmodifiers_2eproto::file_level_enum_descriptors[0];
}
bool DOTA_MODIFIER_ENTRY_TYPE_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTAModifierBuffTableEntry::kEntryTypeFieldNumber;
const int CDOTAModifierBuffTableEntry::kParentFieldNumber;
const int CDOTAModifierBuffTableEntry::kIndexFieldNumber;
const int CDOTAModifierBuffTableEntry::kSerialNumFieldNumber;
const int CDOTAModifierBuffTableEntry::kModifierClassFieldNumber;
const int CDOTAModifierBuffTableEntry::kAbilityLevelFieldNumber;
const int CDOTAModifierBuffTableEntry::kStackCountFieldNumber;
const int CDOTAModifierBuffTableEntry::kCreationTimeFieldNumber;
const int CDOTAModifierBuffTableEntry::kDurationFieldNumber;
const int CDOTAModifierBuffTableEntry::kCasterFieldNumber;
const int CDOTAModifierBuffTableEntry::kAbilityFieldNumber;
const int CDOTAModifierBuffTableEntry::kArmorFieldNumber;
const int CDOTAModifierBuffTableEntry::kFadeTimeFieldNumber;
const int CDOTAModifierBuffTableEntry::kSubtleFieldNumber;
const int CDOTAModifierBuffTableEntry::kChannelTimeFieldNumber;
const int CDOTAModifierBuffTableEntry::kVStartFieldNumber;
const int CDOTAModifierBuffTableEntry::kVEndFieldNumber;
const int CDOTAModifierBuffTableEntry::kPortalLoopAppearFieldNumber;
const int CDOTAModifierBuffTableEntry::kPortalLoopDisappearFieldNumber;
const int CDOTAModifierBuffTableEntry::kHeroLoopAppearFieldNumber;
const int CDOTAModifierBuffTableEntry::kHeroLoopDisappearFieldNumber;
const int CDOTAModifierBuffTableEntry::kMovementSpeedFieldNumber;
const int CDOTAModifierBuffTableEntry::kAuraFieldNumber;
const int CDOTAModifierBuffTableEntry::kActivityFieldNumber;
const int CDOTAModifierBuffTableEntry::kDamageFieldNumber;
const int CDOTAModifierBuffTableEntry::kRangeFieldNumber;
const int CDOTAModifierBuffTableEntry::kDdModifierIndexFieldNumber;
const int CDOTAModifierBuffTableEntry::kDdAbilityIndexFieldNumber;
const int CDOTAModifierBuffTableEntry::kIllusionLabelFieldNumber;
const int CDOTAModifierBuffTableEntry::kActiveFieldNumber;
const int CDOTAModifierBuffTableEntry::kPlayerIdsFieldNumber;
const int CDOTAModifierBuffTableEntry::kLuaNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTAModifierBuffTableEntry::CDOTAModifierBuffTableEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dota_5fmodifiers_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CDOTAModifierBuffTableEntry)
}
CDOTAModifierBuffTableEntry::CDOTAModifierBuffTableEntry(const CDOTAModifierBuffTableEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  portal_loop_appear_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_portal_loop_appear()) {
    portal_loop_appear_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portal_loop_appear_);
  }
  portal_loop_disappear_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_portal_loop_disappear()) {
    portal_loop_disappear_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portal_loop_disappear_);
  }
  hero_loop_appear_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hero_loop_appear()) {
    hero_loop_appear_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hero_loop_appear_);
  }
  hero_loop_disappear_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_hero_loop_disappear()) {
    hero_loop_disappear_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hero_loop_disappear_);
  }
  illusion_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_illusion_label()) {
    illusion_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.illusion_label_);
  }
  player_ids_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_player_ids()) {
    player_ids_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_ids_);
  }
  lua_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lua_name()) {
    lua_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lua_name_);
  }
  if (from.has_v_start()) {
    v_start_ = new ::proto::dota::CMsgVector(*from.v_start_);
  } else {
    v_start_ = NULL;
  }
  if (from.has_v_end()) {
    v_end_ = new ::proto::dota::CMsgVector(*from.v_end_);
  } else {
    v_end_ = NULL;
  }
  ::memcpy(&parent_, &from.parent_,
    reinterpret_cast<char*>(&duration_) -
    reinterpret_cast<char*>(&parent_) + sizeof(duration_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CDOTAModifierBuffTableEntry)
}

void CDOTAModifierBuffTableEntry::SharedCtor() {
  _cached_size_ = 0;
  portal_loop_appear_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portal_loop_disappear_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hero_loop_appear_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hero_loop_disappear_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  illusion_label_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_ids_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lua_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&v_start_, 0, reinterpret_cast<char*>(&dd_ability_index_) -
    reinterpret_cast<char*>(&v_start_) + sizeof(dd_ability_index_));
  entry_type_ = 1;
  duration_ = -1;
}

CDOTAModifierBuffTableEntry::~CDOTAModifierBuffTableEntry() {
  // @@protoc_insertion_point(destructor:proto.dota.CDOTAModifierBuffTableEntry)
  SharedDtor();
}

void CDOTAModifierBuffTableEntry::SharedDtor() {
  portal_loop_appear_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portal_loop_disappear_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hero_loop_appear_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hero_loop_disappear_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  illusion_label_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  player_ids_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lua_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete v_start_;
  }
  if (this != internal_default_instance()) {
    delete v_end_;
  }
}

void CDOTAModifierBuffTableEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CDOTAModifierBuffTableEntry::descriptor() {
  protobuf_dota_5fmodifiers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fmodifiers_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTAModifierBuffTableEntry& CDOTAModifierBuffTableEntry::default_instance() {
  protobuf_dota_5fmodifiers_2eproto::InitDefaults();
  return *internal_default_instance();
}

CDOTAModifierBuffTableEntry* CDOTAModifierBuffTableEntry::New(::google::protobuf::Arena* arena) const {
  CDOTAModifierBuffTableEntry* n = new CDOTAModifierBuffTableEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CDOTAModifierBuffTableEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CDOTAModifierBuffTableEntry)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_portal_loop_appear()) {
      GOOGLE_DCHECK(!portal_loop_appear_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*portal_loop_appear_.UnsafeRawStringPointer())->clear();
    }
    if (has_portal_loop_disappear()) {
      GOOGLE_DCHECK(!portal_loop_disappear_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*portal_loop_disappear_.UnsafeRawStringPointer())->clear();
    }
    if (has_hero_loop_appear()) {
      GOOGLE_DCHECK(!hero_loop_appear_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hero_loop_appear_.UnsafeRawStringPointer())->clear();
    }
    if (has_hero_loop_disappear()) {
      GOOGLE_DCHECK(!hero_loop_disappear_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*hero_loop_disappear_.UnsafeRawStringPointer())->clear();
    }
    if (has_illusion_label()) {
      GOOGLE_DCHECK(!illusion_label_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*illusion_label_.UnsafeRawStringPointer())->clear();
    }
    if (has_player_ids()) {
      GOOGLE_DCHECK(!player_ids_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*player_ids_.UnsafeRawStringPointer())->clear();
    }
    if (has_lua_name()) {
      GOOGLE_DCHECK(!lua_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lua_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_v_start()) {
      GOOGLE_DCHECK(v_start_ != NULL);
      v_start_->::proto::dota::CMsgVector::Clear();
    }
  }
  if (has_v_end()) {
    GOOGLE_DCHECK(v_end_ != NULL);
    v_end_->::proto::dota::CMsgVector::Clear();
  }
  if (_has_bits_[8 / 32] & 65024u) {
    ::memset(&parent_, 0, reinterpret_cast<char*>(&creation_time_) -
      reinterpret_cast<char*>(&parent_) + sizeof(creation_time_));
  }
  if (_has_bits_[16 / 32] & 16711680u) {
    ::memset(&caster_, 0, reinterpret_cast<char*>(&aura_) -
      reinterpret_cast<char*>(&caster_) + sizeof(aura_));
  }
  if (_has_bits_[24 / 32] & 4278190080u) {
    ::memset(&active_, 0, reinterpret_cast<char*>(&dd_ability_index_) -
      reinterpret_cast<char*>(&active_) + sizeof(dd_ability_index_));
    entry_type_ = 1;
    duration_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTAModifierBuffTableEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CDOTAModifierBuffTableEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .proto.dota.DOTA_MODIFIER_ENTRY_TYPE entry_type = 1 [default = DOTA_MODIFIER_ENTRY_TYPE_ACTIVE];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::DOTA_MODIFIER_ENTRY_TYPE_IsValid(value)) {
            set_entry_type(static_cast< ::proto::dota::DOTA_MODIFIER_ENTRY_TYPE >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 parent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_parent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 serial_num = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_serial_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &serial_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 modifier_class = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_modifier_class();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &modifier_class_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ability_level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_ability_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ability_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 stack_count = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_stack_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stack_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float creation_time = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u)) {
          set_has_creation_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &creation_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float duration = 9 [default = -1];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u)) {
          set_has_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caster = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_caster();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caster_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ability = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_ability();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 armor = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_armor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &armor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float fade_time = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u)) {
          set_has_fade_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &fade_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool subtle = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_subtle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &subtle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float channel_time = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(125u)) {
          set_has_channel_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &channel_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.CMsgVector v_start = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v_start()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.CMsgVector v_end = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_v_end()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string portal_loop_appear = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portal_loop_appear()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->portal_loop_appear().data(), this->portal_loop_appear().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string portal_loop_disappear = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_portal_loop_disappear()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->portal_loop_disappear().data(), this->portal_loop_disappear().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hero_loop_appear = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hero_loop_appear()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hero_loop_appear().data(), this->hero_loop_appear().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string hero_loop_disappear = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hero_loop_disappear()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hero_loop_disappear().data(), this->hero_loop_disappear().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 movement_speed = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u)) {
          set_has_movement_speed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &movement_speed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool aura = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u)) {
          set_has_aura();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &aura_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 activity = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u)) {
          set_has_activity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &activity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 damage = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u)) {
          set_has_damage();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 range = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u)) {
          set_has_range();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &range_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dd_modifier_index = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u)) {
          set_has_dd_modifier_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dd_modifier_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dd_ability_index = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u)) {
          set_has_dd_ability_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dd_ability_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string illusion_label = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_illusion_label()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->illusion_label().data(), this->illusion_label().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CDOTAModifierBuffTableEntry.illusion_label");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool active = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u)) {
          set_has_active();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string player_ids = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_player_ids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->player_ids().data(), this->player_ids().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CDOTAModifierBuffTableEntry.player_ids");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string lua_name = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(258u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lua_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lua_name().data(), this->lua_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CDOTAModifierBuffTableEntry.lua_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CDOTAModifierBuffTableEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CDOTAModifierBuffTableEntry)
  return false;
#undef DO_
}

void CDOTAModifierBuffTableEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CDOTAModifierBuffTableEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.dota.DOTA_MODIFIER_ENTRY_TYPE entry_type = 1 [default = DOTA_MODIFIER_ENTRY_TYPE_ACTIVE];
  if (cached_has_bits & 0x40000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->entry_type(), output);
  }

  // required int32 parent = 2;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->parent(), output);
  }

  // required int32 index = 3;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->index(), output);
  }

  // required int32 serial_num = 4;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->serial_num(), output);
  }

  // optional int32 modifier_class = 5;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->modifier_class(), output);
  }

  // optional int32 ability_level = 6;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ability_level(), output);
  }

  // optional int32 stack_count = 7;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->stack_count(), output);
  }

  // optional float creation_time = 8;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->creation_time(), output);
  }

  // optional float duration = 9 [default = -1];
  if (cached_has_bits & 0x80000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->duration(), output);
  }

  // optional int32 caster = 10;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->caster(), output);
  }

  // optional int32 ability = 11;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->ability(), output);
  }

  // optional int32 armor = 12;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(12, this->armor(), output);
  }

  // optional float fade_time = 13;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(13, this->fade_time(), output);
  }

  // optional bool subtle = 14;
  if (cached_has_bits & 0x00400000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->subtle(), output);
  }

  // optional float channel_time = 15;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(15, this->channel_time(), output);
  }

  // optional .proto.dota.CMsgVector v_start = 16;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->v_start_, output);
  }

  // optional .proto.dota.CMsgVector v_end = 17;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->v_end_, output);
  }

  // optional string portal_loop_appear = 18;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->portal_loop_appear().data(), this->portal_loop_appear().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->portal_loop_appear(), output);
  }

  // optional string portal_loop_disappear = 19;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->portal_loop_disappear().data(), this->portal_loop_disappear().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      19, this->portal_loop_disappear(), output);
  }

  // optional string hero_loop_appear = 20;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hero_loop_appear().data(), this->hero_loop_appear().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->hero_loop_appear(), output);
  }

  // optional string hero_loop_disappear = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hero_loop_disappear().data(), this->hero_loop_disappear().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->hero_loop_disappear(), output);
  }

  // optional int32 movement_speed = 22;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->movement_speed(), output);
  }

  // optional bool aura = 23;
  if (cached_has_bits & 0x00800000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->aura(), output);
  }

  // optional int32 activity = 24;
  if (cached_has_bits & 0x02000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(24, this->activity(), output);
  }

  // optional int32 damage = 25;
  if (cached_has_bits & 0x04000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(25, this->damage(), output);
  }

  // optional int32 range = 26;
  if (cached_has_bits & 0x08000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(26, this->range(), output);
  }

  // optional int32 dd_modifier_index = 27;
  if (cached_has_bits & 0x10000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(27, this->dd_modifier_index(), output);
  }

  // optional int32 dd_ability_index = 28;
  if (cached_has_bits & 0x20000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(28, this->dd_ability_index(), output);
  }

  // optional string illusion_label = 29;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->illusion_label().data(), this->illusion_label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.illusion_label");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      29, this->illusion_label(), output);
  }

  // optional bool active = 30;
  if (cached_has_bits & 0x01000000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(30, this->active(), output);
  }

  // optional string player_ids = 31;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_ids().data(), this->player_ids().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.player_ids");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      31, this->player_ids(), output);
  }

  // optional string lua_name = 32;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lua_name().data(), this->lua_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.lua_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      32, this->lua_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CDOTAModifierBuffTableEntry)
}

::google::protobuf::uint8* CDOTAModifierBuffTableEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CDOTAModifierBuffTableEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .proto.dota.DOTA_MODIFIER_ENTRY_TYPE entry_type = 1 [default = DOTA_MODIFIER_ENTRY_TYPE_ACTIVE];
  if (cached_has_bits & 0x40000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->entry_type(), target);
  }

  // required int32 parent = 2;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->parent(), target);
  }

  // required int32 index = 3;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->index(), target);
  }

  // required int32 serial_num = 4;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->serial_num(), target);
  }

  // optional int32 modifier_class = 5;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->modifier_class(), target);
  }

  // optional int32 ability_level = 6;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ability_level(), target);
  }

  // optional int32 stack_count = 7;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->stack_count(), target);
  }

  // optional float creation_time = 8;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->creation_time(), target);
  }

  // optional float duration = 9 [default = -1];
  if (cached_has_bits & 0x80000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->duration(), target);
  }

  // optional int32 caster = 10;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->caster(), target);
  }

  // optional int32 ability = 11;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->ability(), target);
  }

  // optional int32 armor = 12;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(12, this->armor(), target);
  }

  // optional float fade_time = 13;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(13, this->fade_time(), target);
  }

  // optional bool subtle = 14;
  if (cached_has_bits & 0x00400000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->subtle(), target);
  }

  // optional float channel_time = 15;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(15, this->channel_time(), target);
  }

  // optional .proto.dota.CMsgVector v_start = 16;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->v_start_, deterministic, target);
  }

  // optional .proto.dota.CMsgVector v_end = 17;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->v_end_, deterministic, target);
  }

  // optional string portal_loop_appear = 18;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->portal_loop_appear().data(), this->portal_loop_appear().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->portal_loop_appear(), target);
  }

  // optional string portal_loop_disappear = 19;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->portal_loop_disappear().data(), this->portal_loop_disappear().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        19, this->portal_loop_disappear(), target);
  }

  // optional string hero_loop_appear = 20;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hero_loop_appear().data(), this->hero_loop_appear().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->hero_loop_appear(), target);
  }

  // optional string hero_loop_disappear = 21;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hero_loop_disappear().data(), this->hero_loop_disappear().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->hero_loop_disappear(), target);
  }

  // optional int32 movement_speed = 22;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->movement_speed(), target);
  }

  // optional bool aura = 23;
  if (cached_has_bits & 0x00800000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->aura(), target);
  }

  // optional int32 activity = 24;
  if (cached_has_bits & 0x02000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(24, this->activity(), target);
  }

  // optional int32 damage = 25;
  if (cached_has_bits & 0x04000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(25, this->damage(), target);
  }

  // optional int32 range = 26;
  if (cached_has_bits & 0x08000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(26, this->range(), target);
  }

  // optional int32 dd_modifier_index = 27;
  if (cached_has_bits & 0x10000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(27, this->dd_modifier_index(), target);
  }

  // optional int32 dd_ability_index = 28;
  if (cached_has_bits & 0x20000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(28, this->dd_ability_index(), target);
  }

  // optional string illusion_label = 29;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->illusion_label().data(), this->illusion_label().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.illusion_label");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        29, this->illusion_label(), target);
  }

  // optional bool active = 30;
  if (cached_has_bits & 0x01000000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(30, this->active(), target);
  }

  // optional string player_ids = 31;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->player_ids().data(), this->player_ids().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.player_ids");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        31, this->player_ids(), target);
  }

  // optional string lua_name = 32;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lua_name().data(), this->lua_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTAModifierBuffTableEntry.lua_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        32, this->lua_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CDOTAModifierBuffTableEntry)
  return target;
}

size_t CDOTAModifierBuffTableEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.dota.CDOTAModifierBuffTableEntry)
  size_t total_size = 0;

  if (has_parent()) {
    // required int32 parent = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent());
  }

  if (has_index()) {
    // required int32 index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  if (has_serial_num()) {
    // required int32 serial_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serial_num());
  }

  if (has_entry_type()) {
    // required .proto.dota.DOTA_MODIFIER_ENTRY_TYPE entry_type = 1 [default = DOTA_MODIFIER_ENTRY_TYPE_ACTIVE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->entry_type());
  }

  return total_size;
}
size_t CDOTAModifierBuffTableEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CDOTAModifierBuffTableEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x40000e00) ^ 0x40000e00) == 0) {  // All required fields are present.
    // required int32 parent = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent());

    // required int32 index = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());

    // required int32 serial_num = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->serial_num());

    // required .proto.dota.DOTA_MODIFIER_ENTRY_TYPE entry_type = 1 [default = DOTA_MODIFIER_ENTRY_TYPE_ACTIVE];
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->entry_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string portal_loop_appear = 18;
    if (has_portal_loop_appear()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->portal_loop_appear());
    }

    // optional string portal_loop_disappear = 19;
    if (has_portal_loop_disappear()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->portal_loop_disappear());
    }

    // optional string hero_loop_appear = 20;
    if (has_hero_loop_appear()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hero_loop_appear());
    }

    // optional string hero_loop_disappear = 21;
    if (has_hero_loop_disappear()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hero_loop_disappear());
    }

    // optional string illusion_label = 29;
    if (has_illusion_label()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->illusion_label());
    }

    // optional string player_ids = 31;
    if (has_player_ids()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->player_ids());
    }

    // optional string lua_name = 32;
    if (has_lua_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lua_name());
    }

    // optional .proto.dota.CMsgVector v_start = 16;
    if (has_v_start()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->v_start_);
    }

  }
  // optional .proto.dota.CMsgVector v_end = 17;
  if (has_v_end()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->v_end_);
  }

  if (_has_bits_[8 / 32] & 61440u) {
    // optional int32 modifier_class = 5;
    if (has_modifier_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->modifier_class());
    }

    // optional int32 ability_level = 6;
    if (has_ability_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ability_level());
    }

    // optional int32 stack_count = 7;
    if (has_stack_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stack_count());
    }

    // optional float creation_time = 8;
    if (has_creation_time()) {
      total_size += 1 + 4;
    }

  }
  if (_has_bits_[16 / 32] & 16711680u) {
    // optional int32 caster = 10;
    if (has_caster()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caster());
    }

    // optional int32 ability = 11;
    if (has_ability()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ability());
    }

    // optional int32 armor = 12;
    if (has_armor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->armor());
    }

    // optional float fade_time = 13;
    if (has_fade_time()) {
      total_size += 1 + 4;
    }

    // optional float channel_time = 15;
    if (has_channel_time()) {
      total_size += 1 + 4;
    }

    // optional int32 movement_speed = 22;
    if (has_movement_speed()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->movement_speed());
    }

    // optional bool subtle = 14;
    if (has_subtle()) {
      total_size += 1 + 1;
    }

    // optional bool aura = 23;
    if (has_aura()) {
      total_size += 2 + 1;
    }

  }
  if (_has_bits_[24 / 32] & 1056964608u) {
    // optional bool active = 30;
    if (has_active()) {
      total_size += 2 + 1;
    }

    // optional int32 activity = 24;
    if (has_activity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->activity());
    }

    // optional int32 damage = 25;
    if (has_damage()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->damage());
    }

    // optional int32 range = 26;
    if (has_range()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->range());
    }

    // optional int32 dd_modifier_index = 27;
    if (has_dd_modifier_index()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dd_modifier_index());
    }

    // optional int32 dd_ability_index = 28;
    if (has_dd_ability_index()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dd_ability_index());
    }

  }
  // optional float duration = 9 [default = -1];
  if (has_duration()) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CDOTAModifierBuffTableEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CDOTAModifierBuffTableEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTAModifierBuffTableEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTAModifierBuffTableEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CDOTAModifierBuffTableEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CDOTAModifierBuffTableEntry)
    MergeFrom(*source);
  }
}

void CDOTAModifierBuffTableEntry::MergeFrom(const CDOTAModifierBuffTableEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CDOTAModifierBuffTableEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_portal_loop_appear();
      portal_loop_appear_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portal_loop_appear_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_portal_loop_disappear();
      portal_loop_disappear_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portal_loop_disappear_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_hero_loop_appear();
      hero_loop_appear_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hero_loop_appear_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_hero_loop_disappear();
      hero_loop_disappear_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hero_loop_disappear_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_illusion_label();
      illusion_label_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.illusion_label_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_player_ids();
      player_ids_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.player_ids_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_lua_name();
      lua_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lua_name_);
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_v_start()->::proto::dota::CMsgVector::MergeFrom(from.v_start());
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_v_end()->::proto::dota::CMsgVector::MergeFrom(from.v_end());
    }
    if (cached_has_bits & 0x00000200u) {
      parent_ = from.parent_;
    }
    if (cached_has_bits & 0x00000400u) {
      index_ = from.index_;
    }
    if (cached_has_bits & 0x00000800u) {
      serial_num_ = from.serial_num_;
    }
    if (cached_has_bits & 0x00001000u) {
      modifier_class_ = from.modifier_class_;
    }
    if (cached_has_bits & 0x00002000u) {
      ability_level_ = from.ability_level_;
    }
    if (cached_has_bits & 0x00004000u) {
      stack_count_ = from.stack_count_;
    }
    if (cached_has_bits & 0x00008000u) {
      creation_time_ = from.creation_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16711680u) {
    if (cached_has_bits & 0x00010000u) {
      caster_ = from.caster_;
    }
    if (cached_has_bits & 0x00020000u) {
      ability_ = from.ability_;
    }
    if (cached_has_bits & 0x00040000u) {
      armor_ = from.armor_;
    }
    if (cached_has_bits & 0x00080000u) {
      fade_time_ = from.fade_time_;
    }
    if (cached_has_bits & 0x00100000u) {
      channel_time_ = from.channel_time_;
    }
    if (cached_has_bits & 0x00200000u) {
      movement_speed_ = from.movement_speed_;
    }
    if (cached_has_bits & 0x00400000u) {
      subtle_ = from.subtle_;
    }
    if (cached_has_bits & 0x00800000u) {
      aura_ = from.aura_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4278190080u) {
    if (cached_has_bits & 0x01000000u) {
      active_ = from.active_;
    }
    if (cached_has_bits & 0x02000000u) {
      activity_ = from.activity_;
    }
    if (cached_has_bits & 0x04000000u) {
      damage_ = from.damage_;
    }
    if (cached_has_bits & 0x08000000u) {
      range_ = from.range_;
    }
    if (cached_has_bits & 0x10000000u) {
      dd_modifier_index_ = from.dd_modifier_index_;
    }
    if (cached_has_bits & 0x20000000u) {
      dd_ability_index_ = from.dd_ability_index_;
    }
    if (cached_has_bits & 0x40000000u) {
      entry_type_ = from.entry_type_;
    }
    if (cached_has_bits & 0x80000000u) {
      duration_ = from.duration_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTAModifierBuffTableEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CDOTAModifierBuffTableEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTAModifierBuffTableEntry::CopyFrom(const CDOTAModifierBuffTableEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CDOTAModifierBuffTableEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTAModifierBuffTableEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x40000e00) != 0x40000e00) return false;
  return true;
}

void CDOTAModifierBuffTableEntry::Swap(CDOTAModifierBuffTableEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTAModifierBuffTableEntry::InternalSwap(CDOTAModifierBuffTableEntry* other) {
  portal_loop_appear_.Swap(&other->portal_loop_appear_);
  portal_loop_disappear_.Swap(&other->portal_loop_disappear_);
  hero_loop_appear_.Swap(&other->hero_loop_appear_);
  hero_loop_disappear_.Swap(&other->hero_loop_disappear_);
  illusion_label_.Swap(&other->illusion_label_);
  player_ids_.Swap(&other->player_ids_);
  lua_name_.Swap(&other->lua_name_);
  std::swap(v_start_, other->v_start_);
  std::swap(v_end_, other->v_end_);
  std::swap(parent_, other->parent_);
  std::swap(index_, other->index_);
  std::swap(serial_num_, other->serial_num_);
  std::swap(modifier_class_, other->modifier_class_);
  std::swap(ability_level_, other->ability_level_);
  std::swap(stack_count_, other->stack_count_);
  std::swap(creation_time_, other->creation_time_);
  std::swap(caster_, other->caster_);
  std::swap(ability_, other->ability_);
  std::swap(armor_, other->armor_);
  std::swap(fade_time_, other->fade_time_);
  std::swap(channel_time_, other->channel_time_);
  std::swap(movement_speed_, other->movement_speed_);
  std::swap(subtle_, other->subtle_);
  std::swap(aura_, other->aura_);
  std::swap(active_, other->active_);
  std::swap(activity_, other->activity_);
  std::swap(damage_, other->damage_);
  std::swap(range_, other->range_);
  std::swap(dd_modifier_index_, other->dd_modifier_index_);
  std::swap(dd_ability_index_, other->dd_ability_index_);
  std::swap(entry_type_, other->entry_type_);
  std::swap(duration_, other->duration_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CDOTAModifierBuffTableEntry::GetMetadata() const {
  protobuf_dota_5fmodifiers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fmodifiers_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CDOTAModifierBuffTableEntry

// required .proto.dota.DOTA_MODIFIER_ENTRY_TYPE entry_type = 1 [default = DOTA_MODIFIER_ENTRY_TYPE_ACTIVE];
bool CDOTAModifierBuffTableEntry::has_entry_type() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_entry_type() {
  _has_bits_[0] |= 0x40000000u;
}
void CDOTAModifierBuffTableEntry::clear_has_entry_type() {
  _has_bits_[0] &= ~0x40000000u;
}
void CDOTAModifierBuffTableEntry::clear_entry_type() {
  entry_type_ = 1;
  clear_has_entry_type();
}
::proto::dota::DOTA_MODIFIER_ENTRY_TYPE CDOTAModifierBuffTableEntry::entry_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.entry_type)
  return static_cast< ::proto::dota::DOTA_MODIFIER_ENTRY_TYPE >(entry_type_);
}
void CDOTAModifierBuffTableEntry::set_entry_type(::proto::dota::DOTA_MODIFIER_ENTRY_TYPE value) {
  assert(::proto::dota::DOTA_MODIFIER_ENTRY_TYPE_IsValid(value));
  set_has_entry_type();
  entry_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.entry_type)
}

// required int32 parent = 2;
bool CDOTAModifierBuffTableEntry::has_parent() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_parent() {
  _has_bits_[0] |= 0x00000200u;
}
void CDOTAModifierBuffTableEntry::clear_has_parent() {
  _has_bits_[0] &= ~0x00000200u;
}
void CDOTAModifierBuffTableEntry::clear_parent() {
  parent_ = 0;
  clear_has_parent();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::parent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.parent)
  return parent_;
}
void CDOTAModifierBuffTableEntry::set_parent(::google::protobuf::int32 value) {
  set_has_parent();
  parent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.parent)
}

// required int32 index = 3;
bool CDOTAModifierBuffTableEntry::has_index() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_index() {
  _has_bits_[0] |= 0x00000400u;
}
void CDOTAModifierBuffTableEntry::clear_has_index() {
  _has_bits_[0] &= ~0x00000400u;
}
void CDOTAModifierBuffTableEntry::clear_index() {
  index_ = 0;
  clear_has_index();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.index)
  return index_;
}
void CDOTAModifierBuffTableEntry::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.index)
}

// required int32 serial_num = 4;
bool CDOTAModifierBuffTableEntry::has_serial_num() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_serial_num() {
  _has_bits_[0] |= 0x00000800u;
}
void CDOTAModifierBuffTableEntry::clear_has_serial_num() {
  _has_bits_[0] &= ~0x00000800u;
}
void CDOTAModifierBuffTableEntry::clear_serial_num() {
  serial_num_ = 0;
  clear_has_serial_num();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::serial_num() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.serial_num)
  return serial_num_;
}
void CDOTAModifierBuffTableEntry::set_serial_num(::google::protobuf::int32 value) {
  set_has_serial_num();
  serial_num_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.serial_num)
}

// optional int32 modifier_class = 5;
bool CDOTAModifierBuffTableEntry::has_modifier_class() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_modifier_class() {
  _has_bits_[0] |= 0x00001000u;
}
void CDOTAModifierBuffTableEntry::clear_has_modifier_class() {
  _has_bits_[0] &= ~0x00001000u;
}
void CDOTAModifierBuffTableEntry::clear_modifier_class() {
  modifier_class_ = 0;
  clear_has_modifier_class();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::modifier_class() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.modifier_class)
  return modifier_class_;
}
void CDOTAModifierBuffTableEntry::set_modifier_class(::google::protobuf::int32 value) {
  set_has_modifier_class();
  modifier_class_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.modifier_class)
}

// optional int32 ability_level = 6;
bool CDOTAModifierBuffTableEntry::has_ability_level() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_ability_level() {
  _has_bits_[0] |= 0x00002000u;
}
void CDOTAModifierBuffTableEntry::clear_has_ability_level() {
  _has_bits_[0] &= ~0x00002000u;
}
void CDOTAModifierBuffTableEntry::clear_ability_level() {
  ability_level_ = 0;
  clear_has_ability_level();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::ability_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.ability_level)
  return ability_level_;
}
void CDOTAModifierBuffTableEntry::set_ability_level(::google::protobuf::int32 value) {
  set_has_ability_level();
  ability_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.ability_level)
}

// optional int32 stack_count = 7;
bool CDOTAModifierBuffTableEntry::has_stack_count() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_stack_count() {
  _has_bits_[0] |= 0x00004000u;
}
void CDOTAModifierBuffTableEntry::clear_has_stack_count() {
  _has_bits_[0] &= ~0x00004000u;
}
void CDOTAModifierBuffTableEntry::clear_stack_count() {
  stack_count_ = 0;
  clear_has_stack_count();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::stack_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.stack_count)
  return stack_count_;
}
void CDOTAModifierBuffTableEntry::set_stack_count(::google::protobuf::int32 value) {
  set_has_stack_count();
  stack_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.stack_count)
}

// optional float creation_time = 8;
bool CDOTAModifierBuffTableEntry::has_creation_time() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_creation_time() {
  _has_bits_[0] |= 0x00008000u;
}
void CDOTAModifierBuffTableEntry::clear_has_creation_time() {
  _has_bits_[0] &= ~0x00008000u;
}
void CDOTAModifierBuffTableEntry::clear_creation_time() {
  creation_time_ = 0;
  clear_has_creation_time();
}
float CDOTAModifierBuffTableEntry::creation_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.creation_time)
  return creation_time_;
}
void CDOTAModifierBuffTableEntry::set_creation_time(float value) {
  set_has_creation_time();
  creation_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.creation_time)
}

// optional float duration = 9 [default = -1];
bool CDOTAModifierBuffTableEntry::has_duration() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_duration() {
  _has_bits_[0] |= 0x80000000u;
}
void CDOTAModifierBuffTableEntry::clear_has_duration() {
  _has_bits_[0] &= ~0x80000000u;
}
void CDOTAModifierBuffTableEntry::clear_duration() {
  duration_ = -1;
  clear_has_duration();
}
float CDOTAModifierBuffTableEntry::duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.duration)
  return duration_;
}
void CDOTAModifierBuffTableEntry::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.duration)
}

// optional int32 caster = 10;
bool CDOTAModifierBuffTableEntry::has_caster() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_caster() {
  _has_bits_[0] |= 0x00010000u;
}
void CDOTAModifierBuffTableEntry::clear_has_caster() {
  _has_bits_[0] &= ~0x00010000u;
}
void CDOTAModifierBuffTableEntry::clear_caster() {
  caster_ = 0;
  clear_has_caster();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::caster() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.caster)
  return caster_;
}
void CDOTAModifierBuffTableEntry::set_caster(::google::protobuf::int32 value) {
  set_has_caster();
  caster_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.caster)
}

// optional int32 ability = 11;
bool CDOTAModifierBuffTableEntry::has_ability() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_ability() {
  _has_bits_[0] |= 0x00020000u;
}
void CDOTAModifierBuffTableEntry::clear_has_ability() {
  _has_bits_[0] &= ~0x00020000u;
}
void CDOTAModifierBuffTableEntry::clear_ability() {
  ability_ = 0;
  clear_has_ability();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::ability() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.ability)
  return ability_;
}
void CDOTAModifierBuffTableEntry::set_ability(::google::protobuf::int32 value) {
  set_has_ability();
  ability_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.ability)
}

// optional int32 armor = 12;
bool CDOTAModifierBuffTableEntry::has_armor() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_armor() {
  _has_bits_[0] |= 0x00040000u;
}
void CDOTAModifierBuffTableEntry::clear_has_armor() {
  _has_bits_[0] &= ~0x00040000u;
}
void CDOTAModifierBuffTableEntry::clear_armor() {
  armor_ = 0;
  clear_has_armor();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::armor() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.armor)
  return armor_;
}
void CDOTAModifierBuffTableEntry::set_armor(::google::protobuf::int32 value) {
  set_has_armor();
  armor_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.armor)
}

// optional float fade_time = 13;
bool CDOTAModifierBuffTableEntry::has_fade_time() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_fade_time() {
  _has_bits_[0] |= 0x00080000u;
}
void CDOTAModifierBuffTableEntry::clear_has_fade_time() {
  _has_bits_[0] &= ~0x00080000u;
}
void CDOTAModifierBuffTableEntry::clear_fade_time() {
  fade_time_ = 0;
  clear_has_fade_time();
}
float CDOTAModifierBuffTableEntry::fade_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.fade_time)
  return fade_time_;
}
void CDOTAModifierBuffTableEntry::set_fade_time(float value) {
  set_has_fade_time();
  fade_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.fade_time)
}

// optional bool subtle = 14;
bool CDOTAModifierBuffTableEntry::has_subtle() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_subtle() {
  _has_bits_[0] |= 0x00400000u;
}
void CDOTAModifierBuffTableEntry::clear_has_subtle() {
  _has_bits_[0] &= ~0x00400000u;
}
void CDOTAModifierBuffTableEntry::clear_subtle() {
  subtle_ = false;
  clear_has_subtle();
}
bool CDOTAModifierBuffTableEntry::subtle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.subtle)
  return subtle_;
}
void CDOTAModifierBuffTableEntry::set_subtle(bool value) {
  set_has_subtle();
  subtle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.subtle)
}

// optional float channel_time = 15;
bool CDOTAModifierBuffTableEntry::has_channel_time() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_channel_time() {
  _has_bits_[0] |= 0x00100000u;
}
void CDOTAModifierBuffTableEntry::clear_has_channel_time() {
  _has_bits_[0] &= ~0x00100000u;
}
void CDOTAModifierBuffTableEntry::clear_channel_time() {
  channel_time_ = 0;
  clear_has_channel_time();
}
float CDOTAModifierBuffTableEntry::channel_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.channel_time)
  return channel_time_;
}
void CDOTAModifierBuffTableEntry::set_channel_time(float value) {
  set_has_channel_time();
  channel_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.channel_time)
}

// optional .proto.dota.CMsgVector v_start = 16;
bool CDOTAModifierBuffTableEntry::has_v_start() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_v_start() {
  _has_bits_[0] |= 0x00000080u;
}
void CDOTAModifierBuffTableEntry::clear_has_v_start() {
  _has_bits_[0] &= ~0x00000080u;
}
void CDOTAModifierBuffTableEntry::clear_v_start() {
  if (v_start_ != NULL) v_start_->::proto::dota::CMsgVector::Clear();
  clear_has_v_start();
}
const ::proto::dota::CMsgVector& CDOTAModifierBuffTableEntry::v_start() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.v_start)
  return v_start_ != NULL ? *v_start_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
::proto::dota::CMsgVector* CDOTAModifierBuffTableEntry::mutable_v_start() {
  set_has_v_start();
  if (v_start_ == NULL) {
    v_start_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.v_start)
  return v_start_;
}
::proto::dota::CMsgVector* CDOTAModifierBuffTableEntry::release_v_start() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.v_start)
  clear_has_v_start();
  ::proto::dota::CMsgVector* temp = v_start_;
  v_start_ = NULL;
  return temp;
}
void CDOTAModifierBuffTableEntry::set_allocated_v_start(::proto::dota::CMsgVector* v_start) {
  delete v_start_;
  v_start_ = v_start;
  if (v_start) {
    set_has_v_start();
  } else {
    clear_has_v_start();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.v_start)
}

// optional .proto.dota.CMsgVector v_end = 17;
bool CDOTAModifierBuffTableEntry::has_v_end() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_v_end() {
  _has_bits_[0] |= 0x00000100u;
}
void CDOTAModifierBuffTableEntry::clear_has_v_end() {
  _has_bits_[0] &= ~0x00000100u;
}
void CDOTAModifierBuffTableEntry::clear_v_end() {
  if (v_end_ != NULL) v_end_->::proto::dota::CMsgVector::Clear();
  clear_has_v_end();
}
const ::proto::dota::CMsgVector& CDOTAModifierBuffTableEntry::v_end() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.v_end)
  return v_end_ != NULL ? *v_end_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
::proto::dota::CMsgVector* CDOTAModifierBuffTableEntry::mutable_v_end() {
  set_has_v_end();
  if (v_end_ == NULL) {
    v_end_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.v_end)
  return v_end_;
}
::proto::dota::CMsgVector* CDOTAModifierBuffTableEntry::release_v_end() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.v_end)
  clear_has_v_end();
  ::proto::dota::CMsgVector* temp = v_end_;
  v_end_ = NULL;
  return temp;
}
void CDOTAModifierBuffTableEntry::set_allocated_v_end(::proto::dota::CMsgVector* v_end) {
  delete v_end_;
  v_end_ = v_end;
  if (v_end) {
    set_has_v_end();
  } else {
    clear_has_v_end();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.v_end)
}

// optional string portal_loop_appear = 18;
bool CDOTAModifierBuffTableEntry::has_portal_loop_appear() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_portal_loop_appear() {
  _has_bits_[0] |= 0x00000001u;
}
void CDOTAModifierBuffTableEntry::clear_has_portal_loop_appear() {
  _has_bits_[0] &= ~0x00000001u;
}
void CDOTAModifierBuffTableEntry::clear_portal_loop_appear() {
  portal_loop_appear_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_portal_loop_appear();
}
const ::std::string& CDOTAModifierBuffTableEntry::portal_loop_appear() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
  return portal_loop_appear_.GetNoArena();
}
void CDOTAModifierBuffTableEntry::set_portal_loop_appear(const ::std::string& value) {
  set_has_portal_loop_appear();
  portal_loop_appear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
}
#if LANG_CXX11
void CDOTAModifierBuffTableEntry::set_portal_loop_appear(::std::string&& value) {
  set_has_portal_loop_appear();
  portal_loop_appear_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
}
#endif
void CDOTAModifierBuffTableEntry::set_portal_loop_appear(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_portal_loop_appear();
  portal_loop_appear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
}
void CDOTAModifierBuffTableEntry::set_portal_loop_appear(const char* value, size_t size) {
  set_has_portal_loop_appear();
  portal_loop_appear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
}
::std::string* CDOTAModifierBuffTableEntry::mutable_portal_loop_appear() {
  set_has_portal_loop_appear();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
  return portal_loop_appear_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CDOTAModifierBuffTableEntry::release_portal_loop_appear() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
  clear_has_portal_loop_appear();
  return portal_loop_appear_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CDOTAModifierBuffTableEntry::set_allocated_portal_loop_appear(::std::string* portal_loop_appear) {
  if (portal_loop_appear != NULL) {
    set_has_portal_loop_appear();
  } else {
    clear_has_portal_loop_appear();
  }
  portal_loop_appear_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portal_loop_appear);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_appear)
}

// optional string portal_loop_disappear = 19;
bool CDOTAModifierBuffTableEntry::has_portal_loop_disappear() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_portal_loop_disappear() {
  _has_bits_[0] |= 0x00000002u;
}
void CDOTAModifierBuffTableEntry::clear_has_portal_loop_disappear() {
  _has_bits_[0] &= ~0x00000002u;
}
void CDOTAModifierBuffTableEntry::clear_portal_loop_disappear() {
  portal_loop_disappear_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_portal_loop_disappear();
}
const ::std::string& CDOTAModifierBuffTableEntry::portal_loop_disappear() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
  return portal_loop_disappear_.GetNoArena();
}
void CDOTAModifierBuffTableEntry::set_portal_loop_disappear(const ::std::string& value) {
  set_has_portal_loop_disappear();
  portal_loop_disappear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
}
#if LANG_CXX11
void CDOTAModifierBuffTableEntry::set_portal_loop_disappear(::std::string&& value) {
  set_has_portal_loop_disappear();
  portal_loop_disappear_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
}
#endif
void CDOTAModifierBuffTableEntry::set_portal_loop_disappear(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_portal_loop_disappear();
  portal_loop_disappear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
}
void CDOTAModifierBuffTableEntry::set_portal_loop_disappear(const char* value, size_t size) {
  set_has_portal_loop_disappear();
  portal_loop_disappear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
}
::std::string* CDOTAModifierBuffTableEntry::mutable_portal_loop_disappear() {
  set_has_portal_loop_disappear();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
  return portal_loop_disappear_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CDOTAModifierBuffTableEntry::release_portal_loop_disappear() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
  clear_has_portal_loop_disappear();
  return portal_loop_disappear_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CDOTAModifierBuffTableEntry::set_allocated_portal_loop_disappear(::std::string* portal_loop_disappear) {
  if (portal_loop_disappear != NULL) {
    set_has_portal_loop_disappear();
  } else {
    clear_has_portal_loop_disappear();
  }
  portal_loop_disappear_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portal_loop_disappear);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.portal_loop_disappear)
}

// optional string hero_loop_appear = 20;
bool CDOTAModifierBuffTableEntry::has_hero_loop_appear() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_hero_loop_appear() {
  _has_bits_[0] |= 0x00000004u;
}
void CDOTAModifierBuffTableEntry::clear_has_hero_loop_appear() {
  _has_bits_[0] &= ~0x00000004u;
}
void CDOTAModifierBuffTableEntry::clear_hero_loop_appear() {
  hero_loop_appear_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hero_loop_appear();
}
const ::std::string& CDOTAModifierBuffTableEntry::hero_loop_appear() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
  return hero_loop_appear_.GetNoArena();
}
void CDOTAModifierBuffTableEntry::set_hero_loop_appear(const ::std::string& value) {
  set_has_hero_loop_appear();
  hero_loop_appear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
}
#if LANG_CXX11
void CDOTAModifierBuffTableEntry::set_hero_loop_appear(::std::string&& value) {
  set_has_hero_loop_appear();
  hero_loop_appear_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
}
#endif
void CDOTAModifierBuffTableEntry::set_hero_loop_appear(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hero_loop_appear();
  hero_loop_appear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
}
void CDOTAModifierBuffTableEntry::set_hero_loop_appear(const char* value, size_t size) {
  set_has_hero_loop_appear();
  hero_loop_appear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
}
::std::string* CDOTAModifierBuffTableEntry::mutable_hero_loop_appear() {
  set_has_hero_loop_appear();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
  return hero_loop_appear_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CDOTAModifierBuffTableEntry::release_hero_loop_appear() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
  clear_has_hero_loop_appear();
  return hero_loop_appear_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CDOTAModifierBuffTableEntry::set_allocated_hero_loop_appear(::std::string* hero_loop_appear) {
  if (hero_loop_appear != NULL) {
    set_has_hero_loop_appear();
  } else {
    clear_has_hero_loop_appear();
  }
  hero_loop_appear_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_loop_appear);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_appear)
}

// optional string hero_loop_disappear = 21;
bool CDOTAModifierBuffTableEntry::has_hero_loop_disappear() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_hero_loop_disappear() {
  _has_bits_[0] |= 0x00000008u;
}
void CDOTAModifierBuffTableEntry::clear_has_hero_loop_disappear() {
  _has_bits_[0] &= ~0x00000008u;
}
void CDOTAModifierBuffTableEntry::clear_hero_loop_disappear() {
  hero_loop_disappear_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hero_loop_disappear();
}
const ::std::string& CDOTAModifierBuffTableEntry::hero_loop_disappear() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
  return hero_loop_disappear_.GetNoArena();
}
void CDOTAModifierBuffTableEntry::set_hero_loop_disappear(const ::std::string& value) {
  set_has_hero_loop_disappear();
  hero_loop_disappear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
}
#if LANG_CXX11
void CDOTAModifierBuffTableEntry::set_hero_loop_disappear(::std::string&& value) {
  set_has_hero_loop_disappear();
  hero_loop_disappear_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
}
#endif
void CDOTAModifierBuffTableEntry::set_hero_loop_disappear(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hero_loop_disappear();
  hero_loop_disappear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
}
void CDOTAModifierBuffTableEntry::set_hero_loop_disappear(const char* value, size_t size) {
  set_has_hero_loop_disappear();
  hero_loop_disappear_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
}
::std::string* CDOTAModifierBuffTableEntry::mutable_hero_loop_disappear() {
  set_has_hero_loop_disappear();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
  return hero_loop_disappear_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CDOTAModifierBuffTableEntry::release_hero_loop_disappear() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
  clear_has_hero_loop_disappear();
  return hero_loop_disappear_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CDOTAModifierBuffTableEntry::set_allocated_hero_loop_disappear(::std::string* hero_loop_disappear) {
  if (hero_loop_disappear != NULL) {
    set_has_hero_loop_disappear();
  } else {
    clear_has_hero_loop_disappear();
  }
  hero_loop_disappear_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_loop_disappear);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.hero_loop_disappear)
}

// optional int32 movement_speed = 22;
bool CDOTAModifierBuffTableEntry::has_movement_speed() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_movement_speed() {
  _has_bits_[0] |= 0x00200000u;
}
void CDOTAModifierBuffTableEntry::clear_has_movement_speed() {
  _has_bits_[0] &= ~0x00200000u;
}
void CDOTAModifierBuffTableEntry::clear_movement_speed() {
  movement_speed_ = 0;
  clear_has_movement_speed();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::movement_speed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.movement_speed)
  return movement_speed_;
}
void CDOTAModifierBuffTableEntry::set_movement_speed(::google::protobuf::int32 value) {
  set_has_movement_speed();
  movement_speed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.movement_speed)
}

// optional bool aura = 23;
bool CDOTAModifierBuffTableEntry::has_aura() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_aura() {
  _has_bits_[0] |= 0x00800000u;
}
void CDOTAModifierBuffTableEntry::clear_has_aura() {
  _has_bits_[0] &= ~0x00800000u;
}
void CDOTAModifierBuffTableEntry::clear_aura() {
  aura_ = false;
  clear_has_aura();
}
bool CDOTAModifierBuffTableEntry::aura() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.aura)
  return aura_;
}
void CDOTAModifierBuffTableEntry::set_aura(bool value) {
  set_has_aura();
  aura_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.aura)
}

// optional int32 activity = 24;
bool CDOTAModifierBuffTableEntry::has_activity() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_activity() {
  _has_bits_[0] |= 0x02000000u;
}
void CDOTAModifierBuffTableEntry::clear_has_activity() {
  _has_bits_[0] &= ~0x02000000u;
}
void CDOTAModifierBuffTableEntry::clear_activity() {
  activity_ = 0;
  clear_has_activity();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::activity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.activity)
  return activity_;
}
void CDOTAModifierBuffTableEntry::set_activity(::google::protobuf::int32 value) {
  set_has_activity();
  activity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.activity)
}

// optional int32 damage = 25;
bool CDOTAModifierBuffTableEntry::has_damage() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_damage() {
  _has_bits_[0] |= 0x04000000u;
}
void CDOTAModifierBuffTableEntry::clear_has_damage() {
  _has_bits_[0] &= ~0x04000000u;
}
void CDOTAModifierBuffTableEntry::clear_damage() {
  damage_ = 0;
  clear_has_damage();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::damage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.damage)
  return damage_;
}
void CDOTAModifierBuffTableEntry::set_damage(::google::protobuf::int32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.damage)
}

// optional int32 range = 26;
bool CDOTAModifierBuffTableEntry::has_range() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_range() {
  _has_bits_[0] |= 0x08000000u;
}
void CDOTAModifierBuffTableEntry::clear_has_range() {
  _has_bits_[0] &= ~0x08000000u;
}
void CDOTAModifierBuffTableEntry::clear_range() {
  range_ = 0;
  clear_has_range();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::range() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.range)
  return range_;
}
void CDOTAModifierBuffTableEntry::set_range(::google::protobuf::int32 value) {
  set_has_range();
  range_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.range)
}

// optional int32 dd_modifier_index = 27;
bool CDOTAModifierBuffTableEntry::has_dd_modifier_index() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_dd_modifier_index() {
  _has_bits_[0] |= 0x10000000u;
}
void CDOTAModifierBuffTableEntry::clear_has_dd_modifier_index() {
  _has_bits_[0] &= ~0x10000000u;
}
void CDOTAModifierBuffTableEntry::clear_dd_modifier_index() {
  dd_modifier_index_ = 0;
  clear_has_dd_modifier_index();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::dd_modifier_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.dd_modifier_index)
  return dd_modifier_index_;
}
void CDOTAModifierBuffTableEntry::set_dd_modifier_index(::google::protobuf::int32 value) {
  set_has_dd_modifier_index();
  dd_modifier_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.dd_modifier_index)
}

// optional int32 dd_ability_index = 28;
bool CDOTAModifierBuffTableEntry::has_dd_ability_index() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_dd_ability_index() {
  _has_bits_[0] |= 0x20000000u;
}
void CDOTAModifierBuffTableEntry::clear_has_dd_ability_index() {
  _has_bits_[0] &= ~0x20000000u;
}
void CDOTAModifierBuffTableEntry::clear_dd_ability_index() {
  dd_ability_index_ = 0;
  clear_has_dd_ability_index();
}
::google::protobuf::int32 CDOTAModifierBuffTableEntry::dd_ability_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.dd_ability_index)
  return dd_ability_index_;
}
void CDOTAModifierBuffTableEntry::set_dd_ability_index(::google::protobuf::int32 value) {
  set_has_dd_ability_index();
  dd_ability_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.dd_ability_index)
}

// optional string illusion_label = 29;
bool CDOTAModifierBuffTableEntry::has_illusion_label() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_illusion_label() {
  _has_bits_[0] |= 0x00000010u;
}
void CDOTAModifierBuffTableEntry::clear_has_illusion_label() {
  _has_bits_[0] &= ~0x00000010u;
}
void CDOTAModifierBuffTableEntry::clear_illusion_label() {
  illusion_label_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_illusion_label();
}
const ::std::string& CDOTAModifierBuffTableEntry::illusion_label() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
  return illusion_label_.GetNoArena();
}
void CDOTAModifierBuffTableEntry::set_illusion_label(const ::std::string& value) {
  set_has_illusion_label();
  illusion_label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
}
#if LANG_CXX11
void CDOTAModifierBuffTableEntry::set_illusion_label(::std::string&& value) {
  set_has_illusion_label();
  illusion_label_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
}
#endif
void CDOTAModifierBuffTableEntry::set_illusion_label(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_illusion_label();
  illusion_label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
}
void CDOTAModifierBuffTableEntry::set_illusion_label(const char* value, size_t size) {
  set_has_illusion_label();
  illusion_label_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
}
::std::string* CDOTAModifierBuffTableEntry::mutable_illusion_label() {
  set_has_illusion_label();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
  return illusion_label_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CDOTAModifierBuffTableEntry::release_illusion_label() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
  clear_has_illusion_label();
  return illusion_label_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CDOTAModifierBuffTableEntry::set_allocated_illusion_label(::std::string* illusion_label) {
  if (illusion_label != NULL) {
    set_has_illusion_label();
  } else {
    clear_has_illusion_label();
  }
  illusion_label_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), illusion_label);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.illusion_label)
}

// optional bool active = 30;
bool CDOTAModifierBuffTableEntry::has_active() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_active() {
  _has_bits_[0] |= 0x01000000u;
}
void CDOTAModifierBuffTableEntry::clear_has_active() {
  _has_bits_[0] &= ~0x01000000u;
}
void CDOTAModifierBuffTableEntry::clear_active() {
  active_ = false;
  clear_has_active();
}
bool CDOTAModifierBuffTableEntry::active() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.active)
  return active_;
}
void CDOTAModifierBuffTableEntry::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.active)
}

// optional string player_ids = 31;
bool CDOTAModifierBuffTableEntry::has_player_ids() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_player_ids() {
  _has_bits_[0] |= 0x00000020u;
}
void CDOTAModifierBuffTableEntry::clear_has_player_ids() {
  _has_bits_[0] &= ~0x00000020u;
}
void CDOTAModifierBuffTableEntry::clear_player_ids() {
  player_ids_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_player_ids();
}
const ::std::string& CDOTAModifierBuffTableEntry::player_ids() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
  return player_ids_.GetNoArena();
}
void CDOTAModifierBuffTableEntry::set_player_ids(const ::std::string& value) {
  set_has_player_ids();
  player_ids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
}
#if LANG_CXX11
void CDOTAModifierBuffTableEntry::set_player_ids(::std::string&& value) {
  set_has_player_ids();
  player_ids_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
}
#endif
void CDOTAModifierBuffTableEntry::set_player_ids(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_player_ids();
  player_ids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
}
void CDOTAModifierBuffTableEntry::set_player_ids(const char* value, size_t size) {
  set_has_player_ids();
  player_ids_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
}
::std::string* CDOTAModifierBuffTableEntry::mutable_player_ids() {
  set_has_player_ids();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
  return player_ids_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CDOTAModifierBuffTableEntry::release_player_ids() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
  clear_has_player_ids();
  return player_ids_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CDOTAModifierBuffTableEntry::set_allocated_player_ids(::std::string* player_ids) {
  if (player_ids != NULL) {
    set_has_player_ids();
  } else {
    clear_has_player_ids();
  }
  player_ids_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_ids);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.player_ids)
}

// optional string lua_name = 32;
bool CDOTAModifierBuffTableEntry::has_lua_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CDOTAModifierBuffTableEntry::set_has_lua_name() {
  _has_bits_[0] |= 0x00000040u;
}
void CDOTAModifierBuffTableEntry::clear_has_lua_name() {
  _has_bits_[0] &= ~0x00000040u;
}
void CDOTAModifierBuffTableEntry::clear_lua_name() {
  lua_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lua_name();
}
const ::std::string& CDOTAModifierBuffTableEntry::lua_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
  return lua_name_.GetNoArena();
}
void CDOTAModifierBuffTableEntry::set_lua_name(const ::std::string& value) {
  set_has_lua_name();
  lua_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
}
#if LANG_CXX11
void CDOTAModifierBuffTableEntry::set_lua_name(::std::string&& value) {
  set_has_lua_name();
  lua_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
}
#endif
void CDOTAModifierBuffTableEntry::set_lua_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lua_name();
  lua_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
}
void CDOTAModifierBuffTableEntry::set_lua_name(const char* value, size_t size) {
  set_has_lua_name();
  lua_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
}
::std::string* CDOTAModifierBuffTableEntry::mutable_lua_name() {
  set_has_lua_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
  return lua_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CDOTAModifierBuffTableEntry::release_lua_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
  clear_has_lua_name();
  return lua_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CDOTAModifierBuffTableEntry::set_allocated_lua_name(::std::string* lua_name) {
  if (lua_name != NULL) {
    set_has_lua_name();
  } else {
    clear_has_lua_name();
  }
  lua_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lua_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAModifierBuffTableEntry.lua_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CDOTALuaModifierEntry::kModifierTypeFieldNumber;
const int CDOTALuaModifierEntry::kModifierFilenameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CDOTALuaModifierEntry::CDOTALuaModifierEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dota_5fmodifiers_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CDOTALuaModifierEntry)
}
CDOTALuaModifierEntry::CDOTALuaModifierEntry(const CDOTALuaModifierEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  modifier_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_modifier_filename()) {
    modifier_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modifier_filename_);
  }
  modifier_type_ = from.modifier_type_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CDOTALuaModifierEntry)
}

void CDOTALuaModifierEntry::SharedCtor() {
  _cached_size_ = 0;
  modifier_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  modifier_type_ = 0;
}

CDOTALuaModifierEntry::~CDOTALuaModifierEntry() {
  // @@protoc_insertion_point(destructor:proto.dota.CDOTALuaModifierEntry)
  SharedDtor();
}

void CDOTALuaModifierEntry::SharedDtor() {
  modifier_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CDOTALuaModifierEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CDOTALuaModifierEntry::descriptor() {
  protobuf_dota_5fmodifiers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fmodifiers_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CDOTALuaModifierEntry& CDOTALuaModifierEntry::default_instance() {
  protobuf_dota_5fmodifiers_2eproto::InitDefaults();
  return *internal_default_instance();
}

CDOTALuaModifierEntry* CDOTALuaModifierEntry::New(::google::protobuf::Arena* arena) const {
  CDOTALuaModifierEntry* n = new CDOTALuaModifierEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CDOTALuaModifierEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CDOTALuaModifierEntry)
  if (has_modifier_filename()) {
    GOOGLE_DCHECK(!modifier_filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*modifier_filename_.UnsafeRawStringPointer())->clear();
  }
  modifier_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CDOTALuaModifierEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CDOTALuaModifierEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 modifier_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_modifier_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &modifier_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string modifier_filename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_modifier_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->modifier_filename().data(), this->modifier_filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CDOTALuaModifierEntry.modifier_filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CDOTALuaModifierEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CDOTALuaModifierEntry)
  return false;
#undef DO_
}

void CDOTALuaModifierEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CDOTALuaModifierEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 modifier_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->modifier_type(), output);
  }

  // required string modifier_filename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->modifier_filename().data(), this->modifier_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTALuaModifierEntry.modifier_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->modifier_filename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CDOTALuaModifierEntry)
}

::google::protobuf::uint8* CDOTALuaModifierEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CDOTALuaModifierEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 modifier_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->modifier_type(), target);
  }

  // required string modifier_filename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->modifier_filename().data(), this->modifier_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CDOTALuaModifierEntry.modifier_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->modifier_filename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CDOTALuaModifierEntry)
  return target;
}

size_t CDOTALuaModifierEntry::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:proto.dota.CDOTALuaModifierEntry)
  size_t total_size = 0;

  if (has_modifier_filename()) {
    // required string modifier_filename = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modifier_filename());
  }

  if (has_modifier_type()) {
    // required int32 modifier_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->modifier_type());
  }

  return total_size;
}
size_t CDOTALuaModifierEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CDOTALuaModifierEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string modifier_filename = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->modifier_filename());

    // required int32 modifier_type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->modifier_type());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CDOTALuaModifierEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CDOTALuaModifierEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CDOTALuaModifierEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CDOTALuaModifierEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CDOTALuaModifierEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CDOTALuaModifierEntry)
    MergeFrom(*source);
  }
}

void CDOTALuaModifierEntry::MergeFrom(const CDOTALuaModifierEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CDOTALuaModifierEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_modifier_filename();
      modifier_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.modifier_filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      modifier_type_ = from.modifier_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CDOTALuaModifierEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CDOTALuaModifierEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CDOTALuaModifierEntry::CopyFrom(const CDOTALuaModifierEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CDOTALuaModifierEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CDOTALuaModifierEntry::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void CDOTALuaModifierEntry::Swap(CDOTALuaModifierEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CDOTALuaModifierEntry::InternalSwap(CDOTALuaModifierEntry* other) {
  modifier_filename_.Swap(&other->modifier_filename_);
  std::swap(modifier_type_, other->modifier_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CDOTALuaModifierEntry::GetMetadata() const {
  protobuf_dota_5fmodifiers_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dota_5fmodifiers_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CDOTALuaModifierEntry

// required int32 modifier_type = 1;
bool CDOTALuaModifierEntry::has_modifier_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CDOTALuaModifierEntry::set_has_modifier_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CDOTALuaModifierEntry::clear_has_modifier_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CDOTALuaModifierEntry::clear_modifier_type() {
  modifier_type_ = 0;
  clear_has_modifier_type();
}
::google::protobuf::int32 CDOTALuaModifierEntry::modifier_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTALuaModifierEntry.modifier_type)
  return modifier_type_;
}
void CDOTALuaModifierEntry::set_modifier_type(::google::protobuf::int32 value) {
  set_has_modifier_type();
  modifier_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTALuaModifierEntry.modifier_type)
}

// required string modifier_filename = 2;
bool CDOTALuaModifierEntry::has_modifier_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CDOTALuaModifierEntry::set_has_modifier_filename() {
  _has_bits_[0] |= 0x00000001u;
}
void CDOTALuaModifierEntry::clear_has_modifier_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CDOTALuaModifierEntry::clear_modifier_filename() {
  modifier_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_modifier_filename();
}
const ::std::string& CDOTALuaModifierEntry::modifier_filename() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTALuaModifierEntry.modifier_filename)
  return modifier_filename_.GetNoArena();
}
void CDOTALuaModifierEntry::set_modifier_filename(const ::std::string& value) {
  set_has_modifier_filename();
  modifier_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTALuaModifierEntry.modifier_filename)
}
#if LANG_CXX11
void CDOTALuaModifierEntry::set_modifier_filename(::std::string&& value) {
  set_has_modifier_filename();
  modifier_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTALuaModifierEntry.modifier_filename)
}
#endif
void CDOTALuaModifierEntry::set_modifier_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_modifier_filename();
  modifier_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTALuaModifierEntry.modifier_filename)
}
void CDOTALuaModifierEntry::set_modifier_filename(const char* value, size_t size) {
  set_has_modifier_filename();
  modifier_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTALuaModifierEntry.modifier_filename)
}
::std::string* CDOTALuaModifierEntry::mutable_modifier_filename() {
  set_has_modifier_filename();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTALuaModifierEntry.modifier_filename)
  return modifier_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CDOTALuaModifierEntry::release_modifier_filename() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTALuaModifierEntry.modifier_filename)
  clear_has_modifier_filename();
  return modifier_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CDOTALuaModifierEntry::set_allocated_modifier_filename(::std::string* modifier_filename) {
  if (modifier_filename != NULL) {
    set_has_modifier_filename();
  } else {
    clear_has_modifier_filename();
  }
  modifier_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), modifier_filename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTALuaModifierEntry.modifier_filename)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

// @@protoc_insertion_point(global_scope)
