// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: econ_gcmessages.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "econ_gcmessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace dota {
class CMsgApplyAutographDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgApplyAutograph> {
} _CMsgApplyAutograph_default_instance_;
class CMsgAdjustItemEquippedStateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgAdjustItemEquippedState> {
} _CMsgAdjustItemEquippedState_default_instance_;
class CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustmentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment> {
} _CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_default_instance_;
class CMsgEconPlayerStrangeCountAdjustmentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgEconPlayerStrangeCountAdjustment> {
} _CMsgEconPlayerStrangeCountAdjustment_default_instance_;
class CMsgRequestItemPurgatory_FinalizePurchaseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestItemPurgatory_FinalizePurchase> {
} _CMsgRequestItemPurgatory_FinalizePurchase_default_instance_;
class CMsgRequestItemPurgatory_FinalizePurchaseResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestItemPurgatory_FinalizePurchaseResponse> {
} _CMsgRequestItemPurgatory_FinalizePurchaseResponse_default_instance_;
class CMsgRequestItemPurgatory_RefundPurchaseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestItemPurgatory_RefundPurchase> {
} _CMsgRequestItemPurgatory_RefundPurchase_default_instance_;
class CMsgRequestItemPurgatory_RefundPurchaseResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestItemPurgatory_RefundPurchaseResponse> {
} _CMsgRequestItemPurgatory_RefundPurchaseResponse_default_instance_;
class CMsgCraftingResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCraftingResponse> {
} _CMsgCraftingResponse_default_instance_;
class CMsgGCRequestStoreSalesDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestStoreSalesData> {
} _CMsgGCRequestStoreSalesData_default_instance_;
class CMsgGCRequestStoreSalesDataResponse_PriceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestStoreSalesDataResponse_Price> {
} _CMsgGCRequestStoreSalesDataResponse_Price_default_instance_;
class CMsgGCRequestStoreSalesDataResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestStoreSalesDataResponse> {
} _CMsgGCRequestStoreSalesDataResponse_default_instance_;
class CMsgGCRequestStoreSalesDataUpToDateResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCRequestStoreSalesDataUpToDateResponse> {
} _CMsgGCRequestStoreSalesDataUpToDateResponse_default_instance_;
class CMsgGCToGCPingRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCPingRequest> {
} _CMsgGCToGCPingRequest_default_instance_;
class CMsgGCToGCPingResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCPingResponse> {
} _CMsgGCToGCPingResponse_default_instance_;
class CMsgGCToGCGetUserSessionServerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGetUserSessionServer> {
} _CMsgGCToGCGetUserSessionServer_default_instance_;
class CMsgGCToGCGetUserSessionServerResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGetUserSessionServerResponse> {
} _CMsgGCToGCGetUserSessionServerResponse_default_instance_;
class CMsgGCToGCGetUserServerMembersDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGetUserServerMembers> {
} _CMsgGCToGCGetUserServerMembers_default_instance_;
class CMsgGCToGCGetUserServerMembersResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGetUserServerMembersResponse> {
} _CMsgGCToGCGetUserServerMembersResponse_default_instance_;
class CMsgLookupMultipleAccountNamesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgLookupMultipleAccountNames> {
} _CMsgLookupMultipleAccountNames_default_instance_;
class CMsgLookupMultipleAccountNamesResponse_AccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgLookupMultipleAccountNamesResponse_Account> {
} _CMsgLookupMultipleAccountNamesResponse_Account_default_instance_;
class CMsgLookupMultipleAccountNamesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgLookupMultipleAccountNamesResponse> {
} _CMsgLookupMultipleAccountNamesResponse_default_instance_;
class CMsgGCToGCGetUserPCBangNoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGetUserPCBangNo> {
} _CMsgGCToGCGetUserPCBangNo_default_instance_;
class CMsgGCToGCGetUserPCBangNoResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGetUserPCBangNoResponse> {
} _CMsgGCToGCGetUserPCBangNoResponse_default_instance_;
class CMsgRequestCrateItemsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestCrateItems> {
} _CMsgRequestCrateItems_default_instance_;
class CMsgRequestCrateItemsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgRequestCrateItemsResponse> {
} _CMsgRequestCrateItemsResponse_default_instance_;
class CMsgGCToGCCanUseDropRateBonusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCCanUseDropRateBonus> {
} _CMsgGCToGCCanUseDropRateBonus_default_instance_;
class CMsgSQLAddDropRateBonusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSQLAddDropRateBonus> {
} _CMsgSQLAddDropRateBonus_default_instance_;
class CMsgSQLUpgradeBattleBoosterDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSQLUpgradeBattleBooster> {
} _CMsgSQLUpgradeBattleBooster_default_instance_;
class CMsgGCToGCRefreshSOCacheDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCRefreshSOCache> {
} _CMsgGCToGCRefreshSOCache_default_instance_;
class CMsgGCToGCCheckAccountTradeStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCCheckAccountTradeStatus> {
} _CMsgGCToGCCheckAccountTradeStatus_default_instance_;
class CMsgGCToGCCheckAccountTradeStatusResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCCheckAccountTradeStatusResponse> {
} _CMsgGCToGCCheckAccountTradeStatusResponse_default_instance_;
class CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttributeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute> {
} _CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_default_instance_;
class CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry> {
} _CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_default_instance_;
class CMsgGCToGCGrantAccountRolledItems_ItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGrantAccountRolledItems_Item> {
} _CMsgGCToGCGrantAccountRolledItems_Item_default_instance_;
class CMsgGCToGCGrantAccountRolledItemsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGrantAccountRolledItems> {
} _CMsgGCToGCGrantAccountRolledItems_default_instance_;
class CMsgGCToGCGrantSelfMadeItemToAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCGrantSelfMadeItemToAccount> {
} _CMsgGCToGCGrantSelfMadeItemToAccount_default_instance_;
class CMsgUseItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgUseItem> {
} _CMsgUseItem_default_instance_;
class CMsgServerUseItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgServerUseItem> {
} _CMsgServerUseItem_default_instance_;
class CMsgUseMultipleItemsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgUseMultipleItems> {
} _CMsgUseMultipleItems_default_instance_;
class CMsgGCPartnerBalanceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCPartnerBalanceRequest> {
} _CMsgGCPartnerBalanceRequest_default_instance_;
class CMsgGCPartnerBalanceResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCPartnerBalanceResponse> {
} _CMsgGCPartnerBalanceResponse_default_instance_;
class CGCStoreRechargeRedirect_LineItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CGCStoreRechargeRedirect_LineItem> {
} _CGCStoreRechargeRedirect_LineItem_default_instance_;
class CMsgGCPartnerRechargeRedirectURLRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCPartnerRechargeRedirectURLRequest> {
} _CMsgGCPartnerRechargeRedirectURLRequest_default_instance_;
class CMsgGCPartnerRechargeRedirectURLResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCPartnerRechargeRedirectURLResponse> {
} _CMsgGCPartnerRechargeRedirectURLResponse_default_instance_;
class CMsgGCEconSQLWorkItemEmbeddedRollbackDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCEconSQLWorkItemEmbeddedRollbackData> {
} _CMsgGCEconSQLWorkItemEmbeddedRollbackData_default_instance_;
class CMsgCraftStatueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCraftStatue> {
} _CMsgCraftStatue_default_instance_;
class CMsgRedeemCodeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgRedeemCode> {
} _CMsgRedeemCode_default_instance_;
class CMsgRedeemCodeResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgRedeemCodeResponse> {
} _CMsgRedeemCodeResponse_default_instance_;
class CMsgDevNewItemRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgDevNewItemRequest> {
} _CMsgDevNewItemRequest_default_instance_;
class CMsgDevNewItemRequestResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgDevNewItemRequestResponse> {
} _CMsgDevNewItemRequestResponse_default_instance_;
class CMsgGCCheckAccountSubscriptionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCCheckAccountSubscription> {
} _CMsgGCCheckAccountSubscription_default_instance_;
class CMsgGCCheckAccountSubscriptionResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCCheckAccountSubscriptionResponse> {
} _CMsgGCCheckAccountSubscriptionResponse_default_instance_;
class CMsgGCToGCAccountSubscriptionChangeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCAccountSubscriptionChange> {
} _CMsgGCToGCAccountSubscriptionChange_default_instance_;
class CMsgGCAddGiftItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCAddGiftItem> {
} _CMsgGCAddGiftItem_default_instance_;
class CMsgClientToGCWrapAndDeliverGiftDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCWrapAndDeliverGift> {
} _CMsgClientToGCWrapAndDeliverGift_default_instance_;
class CMsgClientToGCWrapAndDeliverGiftResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCWrapAndDeliverGiftResponse> {
} _CMsgClientToGCWrapAndDeliverGiftResponse_default_instance_;
class CMsgClientToGCUnwrapGiftDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnwrapGift> {
} _CMsgClientToGCUnwrapGift_default_instance_;
class CMsgClientToGCGetGiftPermissionsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCGetGiftPermissions> {
} _CMsgClientToGCGetGiftPermissions_default_instance_;
class CMsgClientToGCGetGiftPermissionsResponse_FriendPermissionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCGetGiftPermissionsResponse_FriendPermission> {
} _CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_default_instance_;
class CMsgClientToGCGetGiftPermissionsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCGetGiftPermissionsResponse> {
} _CMsgClientToGCGetGiftPermissionsResponse_default_instance_;
class CMsgClientToGCUnpackBundleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnpackBundle> {
} _CMsgClientToGCUnpackBundle_default_instance_;
class CMsgClientToGCUnpackBundleResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnpackBundleResponse> {
} _CMsgClientToGCUnpackBundleResponse_default_instance_;
class CMsgGCToClientStoreTransactionCompletedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToClientStoreTransactionCompleted> {
} _CMsgGCToClientStoreTransactionCompleted_default_instance_;
class CMsgClientToGCEquipItemsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCEquipItems> {
} _CMsgClientToGCEquipItems_default_instance_;
class CMsgClientToGCEquipItemsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCEquipItemsResponse> {
} _CMsgClientToGCEquipItemsResponse_default_instance_;
class CMsgClientToGCSetItemStyleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCSetItemStyle> {
} _CMsgClientToGCSetItemStyle_default_instance_;
class CMsgClientToGCSetItemStyleResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCSetItemStyleResponse> {
} _CMsgClientToGCSetItemStyleResponse_default_instance_;
class CMsgClientToGCUnlockItemStyleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnlockItemStyle> {
} _CMsgClientToGCUnlockItemStyle_default_instance_;
class CMsgClientToGCUnlockItemStyleResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnlockItemStyleResponse> {
} _CMsgClientToGCUnlockItemStyleResponse_default_instance_;
class CMsgClientToGCSetItemInventoryCategoryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCSetItemInventoryCategory> {
} _CMsgClientToGCSetItemInventoryCategory_default_instance_;
class CMsgClientToGCUnlockCrateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnlockCrate> {
} _CMsgClientToGCUnlockCrate_default_instance_;
class CMsgClientToGCUnlockCrateResponse_ItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnlockCrateResponse_Item> {
} _CMsgClientToGCUnlockCrateResponse_Item_default_instance_;
class CMsgClientToGCUnlockCrateResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCUnlockCrateResponse> {
} _CMsgClientToGCUnlockCrateResponse_default_instance_;
class CMsgClientToGCRemoveItemAttributeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCRemoveItemAttribute> {
} _CMsgClientToGCRemoveItemAttribute_default_instance_;
class CMsgClientToGCRemoveItemAttributeResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCRemoveItemAttributeResponse> {
} _CMsgClientToGCRemoveItemAttributeResponse_default_instance_;
class CMsgClientToGCNameItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCNameItem> {
} _CMsgClientToGCNameItem_default_instance_;
class CMsgClientToGCNameItemResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCNameItemResponse> {
} _CMsgClientToGCNameItemResponse_default_instance_;
class CMsgGCSetItemPositionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCSetItemPosition> {
} _CMsgGCSetItemPosition_default_instance_;
class CAttribute_ItemDynamicRecipeComponentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CAttribute_ItemDynamicRecipeComponent> {
} _CAttribute_ItemDynamicRecipeComponent_default_instance_;
class CProtoItemSocketDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket> {
} _CProtoItemSocket_default_instance_;
class CProtoItemSocket_EmptyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_Empty> {
} _CProtoItemSocket_Empty_default_instance_;
class CProtoItemSocket_EffectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_Effect> {
} _CProtoItemSocket_Effect_default_instance_;
class CProtoItemSocket_ColorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_Color> {
} _CProtoItemSocket_Color_default_instance_;
class CProtoItemSocket_StrangeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_Strange> {
} _CProtoItemSocket_Strange_default_instance_;
class CProtoItemSocket_SpectatorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_Spectator> {
} _CProtoItemSocket_Spectator_default_instance_;
class CProtoItemSocket_AssetModifierDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_AssetModifier> {
} _CProtoItemSocket_AssetModifier_default_instance_;
class CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLYDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY> {
} _CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_default_instance_;
class CProtoItemSocket_AutographDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_Autograph> {
} _CProtoItemSocket_Autograph_default_instance_;
class CProtoItemSocket_StaticVisualsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CProtoItemSocket_StaticVisuals> {
} _CProtoItemSocket_StaticVisuals_default_instance_;
class CAttribute_StringDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CAttribute_String> {
} _CAttribute_String_default_instance_;
class CWorkshop_GetItemDailyRevenue_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetItemDailyRevenue_Request> {
} _CWorkshop_GetItemDailyRevenue_Request_default_instance_;
class CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue> {
} _CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_default_instance_;
class CWorkshop_GetItemDailyRevenue_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetItemDailyRevenue_Response> {
} _CWorkshop_GetItemDailyRevenue_Response_default_instance_;
class CWorkshop_GetPackageDailyRevenue_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetPackageDailyRevenue_Request> {
} _CWorkshop_GetPackageDailyRevenue_Request_default_instance_;
class CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenueDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue> {
} _CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_default_instance_;
class CWorkshop_GetPackageDailyRevenue_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CWorkshop_GetPackageDailyRevenue_Response> {
} _CWorkshop_GetPackageDailyRevenue_Response_default_instance_;
class CMsgSQLGCToGCGrantBackpackSlotsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgSQLGCToGCGrantBackpackSlots> {
} _CMsgSQLGCToGCGrantBackpackSlots_default_instance_;
class CMsgClientToGCLookupAccountNameDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCLookupAccountName> {
} _CMsgClientToGCLookupAccountName_default_instance_;
class CMsgClientToGCLookupAccountNameResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCLookupAccountNameResponse> {
} _CMsgClientToGCLookupAccountNameResponse_default_instance_;
class CMsgClientToGCCreateStaticRecipe_ItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCCreateStaticRecipe_Item> {
} _CMsgClientToGCCreateStaticRecipe_Item_default_instance_;
class CMsgClientToGCCreateStaticRecipeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCCreateStaticRecipe> {
} _CMsgClientToGCCreateStaticRecipe_default_instance_;
class CMsgClientToGCCreateStaticRecipeResponse_OutputItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCCreateStaticRecipeResponse_OutputItem> {
} _CMsgClientToGCCreateStaticRecipeResponse_OutputItem_default_instance_;
class CMsgClientToGCCreateStaticRecipeResponse_InputErrorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCCreateStaticRecipeResponse_InputError> {
} _CMsgClientToGCCreateStaticRecipeResponse_InputError_default_instance_;
class CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput> {
} _CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_default_instance_;
class CMsgClientToGCCreateStaticRecipeResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientToGCCreateStaticRecipeResponse> {
} _CMsgClientToGCCreateStaticRecipeResponse_default_instance_;
class CMsgProcessTransactionOrder_ItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgProcessTransactionOrder_Item> {
} _CMsgProcessTransactionOrder_Item_default_instance_;
class CMsgProcessTransactionOrderDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgProcessTransactionOrder> {
} _CMsgProcessTransactionOrder_default_instance_;
class CMsgGCToGCStoreProcessCDKeyTransactionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCStoreProcessCDKeyTransaction> {
} _CMsgGCToGCStoreProcessCDKeyTransaction_default_instance_;
class CMsgGCToGCStoreProcessCDKeyTransactionResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCStoreProcessCDKeyTransactionResponse> {
} _CMsgGCToGCStoreProcessCDKeyTransactionResponse_default_instance_;
class CMsgGCToGCStoreProcessSettlementDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCStoreProcessSettlement> {
} _CMsgGCToGCStoreProcessSettlement_default_instance_;
class CMsgGCToGCStoreProcessSettlementResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCStoreProcessSettlementResponse> {
} _CMsgGCToGCStoreProcessSettlementResponse_default_instance_;
class CMsgGCToGCBroadcastConsoleCommandDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCBroadcastConsoleCommand> {
} _CMsgGCToGCBroadcastConsoleCommand_default_instance_;
class CMsgGCToGCConsoleOutput_OutputLineDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCConsoleOutput_OutputLine> {
} _CMsgGCToGCConsoleOutput_OutputLine_default_instance_;
class CMsgGCToGCConsoleOutputDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCConsoleOutput> {
} _CMsgGCToGCConsoleOutput_default_instance_;
class CMsgItemAges_MaxItemIDTimestampDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgItemAges_MaxItemIDTimestamp> {
} _CMsgItemAges_MaxItemIDTimestamp_default_instance_;
class CMsgItemAgesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgItemAges> {
} _CMsgItemAges_default_instance_;
class CMsgGCToGCInternalTestMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCInternalTestMsg> {
} _CMsgGCToGCInternalTestMsg_default_instance_;
class CMsgGCToGCClientServerVersionsUpdatedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCToGCClientServerVersionsUpdated> {
} _CMsgGCToGCClientServerVersionsUpdated_default_instance_;

namespace protobuf_econ_5fgcmessages_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[119];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[13];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, autograph_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgApplyAutograph, item_item_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, new_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, new_slot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAdjustItemEquippedState, style_index_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, event_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment, adjustment_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgEconPlayerStrangeCountAdjustment, strange_count_adjustments_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchase, item_ids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchaseResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchaseResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_FinalizePurchaseResponse, item_ids_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchase, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchase, item_ids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchaseResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestItemPurgatory_RefundPurchaseResponse, result_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftingResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftingResponse, item_ids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesData, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesData, currency_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, item_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse_Price, price_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, sale_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataResponse, expiration_time_),
  ~0u,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCRequestStoreSalesDataUpToDateResponse, expiration_time_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCPingRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCPingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCPingResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCPingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServer, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServer, account_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServerResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServerResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServerResponse, server_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserSessionServerResponse, is_online_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembers, max_spectators_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembersResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserServerMembersResponse, member_account_id_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNames, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNames, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNames, accountids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse_Account, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse_Account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse_Account, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse_Account, persona_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgLookupMultipleAccountNamesResponse, accounts_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNo, account_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGetUserPCBangNoResponse, pc_bang_no_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItems, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItems, crate_item_def_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, item_defs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRequestCrateItemsResponse, peek_item_def_),
  0,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, drop_rate_bonus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, booster_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, exclusive_item_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCanUseDropRateBonus, allow_equal_rate_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, item_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, drop_rate_bonus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, booster_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, seconds_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLAddDropRateBonus, end_time_stamp_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, item_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, bonus_to_add_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLUpgradeBattleBooster, booster_type_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCRefreshSOCache, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCRefreshSOCache, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCRefreshSOCache, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCRefreshSOCache, reload_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatus, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatus, initiator_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatusResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatusResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatusResponse, can_trade_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCCheckAccountTradeStatusResponse, error_code_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, value_uint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute, value_float_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, owner_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, audit_action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry, audit_data_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, item_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, loot_lists_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, ignore_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, origin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, dynamic_attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, additional_audit_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems_Item, inventory_token_),
  0,
  ~0u,
  1,
  2,
  ~0u,
  ~0u,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, audit_action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantAccountRolledItems, audit_data_),
  0,
  ~0u,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, item_def_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCGrantSelfMadeItemToAccount, accountid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, target_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, gift__potential_targets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, duel__class_lock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, initiator_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseItem, itempack__ack_immediately_),
  0,
  1,
  ~0u,
  3,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerUseItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerUseItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerUseItem, initiator_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgServerUseItem, use_item_msg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseMultipleItems, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseMultipleItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgUseMultipleItems, item_ids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerBalanceResponse, balance_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCStoreRechargeRedirect_LineItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCStoreRechargeRedirect_LineItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCStoreRechargeRedirect_LineItem, item_def_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CGCStoreRechargeRedirect_LineItem, quantity_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLRequest, line_items_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCPartnerRechargeRedirectURLResponse, url_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCEconSQLWorkItemEmbeddedRollbackData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCEconSQLWorkItemEmbeddedRollbackData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCEconSQLWorkItemEmbeddedRollbackData, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCEconSQLWorkItemEmbeddedRollbackData, deleted_item_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, heroid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, sequencename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, cycle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, pedestal_itemdef_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCraftStatue, toolid_),
  2,
  0,
  3,
  1,
  5,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCode, code_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCodeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCodeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCodeResponse, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgRedeemCodeResponse, item_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, item_def_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, loot_list_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, attr_def_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequest, attr_value_),
  0,
  1,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequestResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequestResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDevNewItemRequestResponse, success_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckAccountSubscription, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckAccountSubscription, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckAccountSubscription, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckAccountSubscription, def_index_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckAccountSubscriptionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckAccountSubscriptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckAccountSubscriptionResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCCheckAccountSubscriptionResponse, cache_until_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCAccountSubscriptionChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCAccountSubscriptionChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCAccountSubscriptionChange, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCAccountSubscriptionChange, item_definition_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCAccountSubscriptionChange, is_subscription_active_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCAddGiftItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCAddGiftItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCAddGiftItem, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCAddGiftItem, item_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, give_to_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGift, gift_message_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_charge_uses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_charge_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_uses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, gifting_window_hours_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCWrapAndDeliverGiftResponse, trade_restriction_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnwrapGift, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnwrapGift, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnwrapGift, item_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissions, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission, permission_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, is_unlimited_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, has_two_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, sender_permission_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, friendship_age_requirement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, friendship_age_requirement_two_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCGetGiftPermissionsResponse, friend_permissions_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundle, item_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundleResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundleResponse, unpacked_item_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnpackBundleResponse, response_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientStoreTransactionCompleted, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientStoreTransactionCompleted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientStoreTransactionCompleted, txn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToClientStoreTransactionCompleted, item_ids_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItems, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItems, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItems, equips_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItemsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItemsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCEquipItemsResponse, so_cache_version_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyle, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyle, style_index_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyleResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemStyleResponse, response_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, item_to_unlock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, style_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyle, consumable_item_ids_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, style_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockItemStyleResponse, style_prereq_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, item_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, set_to_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, remove_categories_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCSetItemInventoryCategory, add_categories_),
  ~0u,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrate, crate_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrate, key_item_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse_Item, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse_Item, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse_Item, def_index_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCUnlockCrateResponse, granted_items_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttribute, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttribute, item_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttributeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttributeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttributeResponse, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCRemoveItemAttributeResponse, item_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItem, subject_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItem, tool_item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItem, name_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItemResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItemResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItemResponse, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCNameItemResponse, item_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCSetItemPosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCSetItemPosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCSetItemPosition, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCSetItemPosition, new_position_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, item_def_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, item_quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, item_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, attributes_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, item_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, items_fulfilled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, item_rarity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, lootlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_ItemDynamicRecipeComponent, fulfilled_item_id_),
  2,
  3,
  4,
  0,
  5,
  6,
  7,
  1,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, attr_def_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, required_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, required_hero_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, gem_def_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, not_tradable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket, required_item_slot_),
  2,
  3,
  4,
  0,
  5,
  6,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Empty, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Empty, socket_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Effect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Effect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Effect, socket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Effect, effect_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Color, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Color, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Color, socket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Color, red_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Color, green_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Color, blue_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Strange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Strange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Strange, socket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Strange, strange_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Strange, strange_value_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, socket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, games_viewed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, corporation_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, league_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Spectator, team_id_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier, socket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier, asset_modifier_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, socket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, asset_modifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, anim_modifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY, ability_effect_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Autograph, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Autograph, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Autograph, socket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Autograph, autograph_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Autograph, autograph_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_Autograph, autograph_score_),
  1,
  0,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_StaticVisuals, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_StaticVisuals, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CProtoItemSocket_StaticVisuals, socket_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_String, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CAttribute_String, value_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Request, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Request, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Request, date_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Request, date_end_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, country_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, revenue_usd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue, units_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetItemDailyRevenue_Response, country_revenue_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Request, packageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Request, date_start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Request, date_end_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue, country_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue, revenue_usd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue, units_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CWorkshop_GetPackageDailyRevenue_Response, country_revenue_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLGCToGCGrantBackpackSlots, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLGCToGCGrantBackpackSlots, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLGCToGCGrantBackpackSlots, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgSQLGCToGCGrantBackpackSlots, add_slots_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountName, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountName, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountName, account_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountNameResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountNameResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountNameResponse, account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCLookupAccountNameResponse, account_name_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe_Item, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe_Item, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe_Item, slot_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe, items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipe, recipe_def_index_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_OutputItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_OutputItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_OutputItem, def_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_OutputItem, item_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_OutputItem, slot_id_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_InputError, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_InputError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_InputError, slot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_InputError, error_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput, slot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput, value_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse, output_items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse, input_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientToGCCreateStaticRecipeResponse, additional_outputs_),
  0,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, item_def_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, item_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, quantity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, category_desc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, store_purchase_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, source_reference_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, parent_stack_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, default_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder_Item, is_user_facing_),
  1,
  2,
  3,
  0,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, txn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, steam_txn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, partner_txn_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, time_stamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, watermark_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, purchase_report_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, currency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgProcessTransactionOrder, items_),
  0,
  1,
  2,
  3,
  5,
  4,
  6,
  7,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransaction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransaction, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransaction, reason_code_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransactionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessCDKeyTransactionResponse, success_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlement, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlement, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlement, order_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlement, partner_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlementResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlementResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCStoreProcessSettlementResponse, success_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCBroadcastConsoleCommand, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCBroadcastConsoleCommand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCBroadcastConsoleCommand, con_command_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCBroadcastConsoleCommand, report_output_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCBroadcastConsoleCommand, sending_gc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCBroadcastConsoleCommand, output_initiator_),
  0,
  2,
  3,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput_OutputLine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput_OutputLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput_OutputLine, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput_OutputLine, spew_level_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput, initiator_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput, sending_gc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCConsoleOutput, msgs_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges_MaxItemIDTimestamp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges_MaxItemIDTimestamp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges_MaxItemIDTimestamp, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges_MaxItemIDTimestamp, max_item_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgItemAges, max_item_id_timestamps_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, sending_gc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, sender_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, context_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, message_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, message_body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, job_id_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCInternalTestMsg, job_id_target_),
  2,
  1,
  3,
  6,
  0,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCClientServerVersionsUpdated, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCClientServerVersionsUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCClientServerVersionsUpdated, client_min_allowed_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCClientServerVersionsUpdated, client_active_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCClientServerVersionsUpdated, server_active_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCToGCClientServerVersionsUpdated, server_deployed_version_),
  0,
  1,
  2,
  3,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(CMsgApplyAutograph)},
  { 9, 18, sizeof(CMsgAdjustItemEquippedState)},
  { 22, 30, sizeof(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment)},
  { 33, 40, sizeof(CMsgEconPlayerStrangeCountAdjustment)},
  { 42, 48, sizeof(CMsgRequestItemPurgatory_FinalizePurchase)},
  { 49, 56, sizeof(CMsgRequestItemPurgatory_FinalizePurchaseResponse)},
  { 58, 64, sizeof(CMsgRequestItemPurgatory_RefundPurchase)},
  { 65, 71, sizeof(CMsgRequestItemPurgatory_RefundPurchaseResponse)},
  { 72, 78, sizeof(CMsgCraftingResponse)},
  { 79, 86, sizeof(CMsgGCRequestStoreSalesData)},
  { 88, 95, sizeof(CMsgGCRequestStoreSalesDataResponse_Price)},
  { 97, 105, sizeof(CMsgGCRequestStoreSalesDataResponse)},
  { 108, 115, sizeof(CMsgGCRequestStoreSalesDataUpToDateResponse)},
  { 117, 122, sizeof(CMsgGCToGCPingRequest)},
  { 122, 127, sizeof(CMsgGCToGCPingResponse)},
  { 127, 133, sizeof(CMsgGCToGCGetUserSessionServer)},
  { 134, 141, sizeof(CMsgGCToGCGetUserSessionServerResponse)},
  { 143, 150, sizeof(CMsgGCToGCGetUserServerMembers)},
  { 152, 158, sizeof(CMsgGCToGCGetUserServerMembersResponse)},
  { 159, 165, sizeof(CMsgLookupMultipleAccountNames)},
  { 166, 173, sizeof(CMsgLookupMultipleAccountNamesResponse_Account)},
  { 175, 181, sizeof(CMsgLookupMultipleAccountNamesResponse)},
  { 182, 188, sizeof(CMsgGCToGCGetUserPCBangNo)},
  { 189, 195, sizeof(CMsgGCToGCGetUserPCBangNoResponse)},
  { 196, 202, sizeof(CMsgRequestCrateItems)},
  { 203, 211, sizeof(CMsgRequestCrateItemsResponse)},
  { 214, 224, sizeof(CMsgGCToGCCanUseDropRateBonus)},
  { 229, 241, sizeof(CMsgSQLAddDropRateBonus)},
  { 248, 257, sizeof(CMsgSQLUpgradeBattleBooster)},
  { 261, 268, sizeof(CMsgGCToGCRefreshSOCache)},
  { 270, 277, sizeof(CMsgGCToGCCheckAccountTradeStatus)},
  { 279, 286, sizeof(CMsgGCToGCCheckAccountTradeStatusResponse)},
  { 288, 296, sizeof(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute)},
  { 299, 307, sizeof(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry)},
  { 310, 322, sizeof(CMsgGCToGCGrantAccountRolledItems_Item)},
  { 329, 338, sizeof(CMsgGCToGCGrantAccountRolledItems)},
  { 342, 349, sizeof(CMsgGCToGCGrantSelfMadeItemToAccount)},
  { 351, 362, sizeof(CMsgUseItem)},
  { 368, 375, sizeof(CMsgServerUseItem)},
  { 377, 383, sizeof(CMsgUseMultipleItems)},
  { 384, 389, sizeof(CMsgGCPartnerBalanceRequest)},
  { 389, 396, sizeof(CMsgGCPartnerBalanceResponse)},
  { 398, 405, sizeof(CGCStoreRechargeRedirect_LineItem)},
  { 407, 413, sizeof(CMsgGCPartnerRechargeRedirectURLRequest)},
  { 414, 421, sizeof(CMsgGCPartnerRechargeRedirectURLResponse)},
  { 423, 430, sizeof(CMsgGCEconSQLWorkItemEmbeddedRollbackData)},
  { 432, 443, sizeof(CMsgCraftStatue)},
  { 449, 455, sizeof(CMsgRedeemCode)},
  { 456, 463, sizeof(CMsgRedeemCodeResponse)},
  { 465, 474, sizeof(CMsgDevNewItemRequest)},
  { 478, 484, sizeof(CMsgDevNewItemRequestResponse)},
  { 485, 492, sizeof(CMsgGCCheckAccountSubscription)},
  { 494, 501, sizeof(CMsgGCCheckAccountSubscriptionResponse)},
  { 503, 511, sizeof(CMsgGCToGCAccountSubscriptionChange)},
  { 514, 521, sizeof(CMsgGCAddGiftItem)},
  { 523, 531, sizeof(CMsgClientToGCWrapAndDeliverGift)},
  { 534, 546, sizeof(CMsgClientToGCWrapAndDeliverGiftResponse)},
  { 553, 559, sizeof(CMsgClientToGCUnwrapGift)},
  { 560, 565, sizeof(CMsgClientToGCGetGiftPermissions)},
  { 565, 572, sizeof(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission)},
  { 574, 585, sizeof(CMsgClientToGCGetGiftPermissionsResponse)},
  { 591, 597, sizeof(CMsgClientToGCUnpackBundle)},
  { 598, 605, sizeof(CMsgClientToGCUnpackBundleResponse)},
  { 607, 614, sizeof(CMsgGCToClientStoreTransactionCompleted)},
  { 616, 622, sizeof(CMsgClientToGCEquipItems)},
  { 623, 629, sizeof(CMsgClientToGCEquipItemsResponse)},
  { 630, 637, sizeof(CMsgClientToGCSetItemStyle)},
  { 639, 645, sizeof(CMsgClientToGCSetItemStyleResponse)},
  { 646, 654, sizeof(CMsgClientToGCUnlockItemStyle)},
  { 657, 666, sizeof(CMsgClientToGCUnlockItemStyleResponse)},
  { 670, 679, sizeof(CMsgClientToGCSetItemInventoryCategory)},
  { 683, 690, sizeof(CMsgClientToGCUnlockCrate)},
  { 692, 699, sizeof(CMsgClientToGCUnlockCrateResponse_Item)},
  { 701, 708, sizeof(CMsgClientToGCUnlockCrateResponse)},
  { 710, 716, sizeof(CMsgClientToGCRemoveItemAttribute)},
  { 717, 724, sizeof(CMsgClientToGCRemoveItemAttributeResponse)},
  { 726, 734, sizeof(CMsgClientToGCNameItem)},
  { 737, 744, sizeof(CMsgClientToGCNameItemResponse)},
  { 746, 753, sizeof(CMsgGCSetItemPosition)},
  { 755, 769, sizeof(CAttribute_ItemDynamicRecipeComponent)},
  { 778, 790, sizeof(CProtoItemSocket)},
  { 797, 803, sizeof(CProtoItemSocket_Empty)},
  { 804, 811, sizeof(CProtoItemSocket_Effect)},
  { 813, 822, sizeof(CProtoItemSocket_Color)},
  { 826, 834, sizeof(CProtoItemSocket_Strange)},
  { 837, 847, sizeof(CProtoItemSocket_Spectator)},
  { 852, 859, sizeof(CProtoItemSocket_AssetModifier)},
  { 861, 870, sizeof(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)},
  { 874, 883, sizeof(CProtoItemSocket_Autograph)},
  { 887, 893, sizeof(CProtoItemSocket_StaticVisuals)},
  { 894, 900, sizeof(CAttribute_String)},
  { 901, 910, sizeof(CWorkshop_GetItemDailyRevenue_Request)},
  { 914, 923, sizeof(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue)},
  { 927, 933, sizeof(CWorkshop_GetItemDailyRevenue_Response)},
  { 934, 942, sizeof(CWorkshop_GetPackageDailyRevenue_Request)},
  { 945, 954, sizeof(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue)},
  { 958, 964, sizeof(CWorkshop_GetPackageDailyRevenue_Response)},
  { 965, 972, sizeof(CMsgSQLGCToGCGrantBackpackSlots)},
  { 974, 980, sizeof(CMsgClientToGCLookupAccountName)},
  { 981, 988, sizeof(CMsgClientToGCLookupAccountNameResponse)},
  { 990, 997, sizeof(CMsgClientToGCCreateStaticRecipe_Item)},
  { 999, 1006, sizeof(CMsgClientToGCCreateStaticRecipe)},
  { 1008, 1016, sizeof(CMsgClientToGCCreateStaticRecipeResponse_OutputItem)},
  { 1019, 1026, sizeof(CMsgClientToGCCreateStaticRecipeResponse_InputError)},
  { 1028, 1035, sizeof(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput)},
  { 1037, 1046, sizeof(CMsgClientToGCCreateStaticRecipeResponse)},
  { 1050, 1064, sizeof(CMsgProcessTransactionOrder_Item)},
  { 1073, 1087, sizeof(CMsgProcessTransactionOrder)},
  { 1096, 1103, sizeof(CMsgGCToGCStoreProcessCDKeyTransaction)},
  { 1105, 1111, sizeof(CMsgGCToGCStoreProcessCDKeyTransactionResponse)},
  { 1112, 1119, sizeof(CMsgGCToGCStoreProcessSettlement)},
  { 1121, 1127, sizeof(CMsgGCToGCStoreProcessSettlementResponse)},
  { 1128, 1137, sizeof(CMsgGCToGCBroadcastConsoleCommand)},
  { 1141, 1148, sizeof(CMsgGCToGCConsoleOutput_OutputLine)},
  { 1150, 1158, sizeof(CMsgGCToGCConsoleOutput)},
  { 1161, 1168, sizeof(CMsgItemAges_MaxItemIDTimestamp)},
  { 1170, 1176, sizeof(CMsgItemAges)},
  { 1177, 1189, sizeof(CMsgGCToGCInternalTestMsg)},
  { 1196, 1205, sizeof(CMsgGCToGCClientServerVersionsUpdated)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgApplyAutograph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgAdjustItemEquippedState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgEconPlayerStrangeCountAdjustment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgRequestItemPurgatory_FinalizePurchase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgRequestItemPurgatory_FinalizePurchaseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgRequestItemPurgatory_RefundPurchase_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgRequestItemPurgatory_RefundPurchaseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCraftingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCRequestStoreSalesData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCRequestStoreSalesDataResponse_Price_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCRequestStoreSalesDataResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCRequestStoreSalesDataUpToDateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCPingRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCPingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCGetUserSessionServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCGetUserSessionServerResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCGetUserServerMembers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCGetUserServerMembersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgLookupMultipleAccountNames_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgLookupMultipleAccountNamesResponse_Account_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgLookupMultipleAccountNamesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCGetUserPCBangNo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCGetUserPCBangNoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgRequestCrateItems_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgRequestCrateItemsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCCanUseDropRateBonus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSQLAddDropRateBonus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSQLUpgradeBattleBooster_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCRefreshSOCache_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCCheckAccountTradeStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCCheckAccountTradeStatusResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCGrantAccountRolledItems_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCGrantAccountRolledItems_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCGrantSelfMadeItemToAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgUseItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgServerUseItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgUseMultipleItems_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCPartnerBalanceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCPartnerBalanceResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CGCStoreRechargeRedirect_LineItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCPartnerRechargeRedirectURLRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCPartnerRechargeRedirectURLResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCEconSQLWorkItemEmbeddedRollbackData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCraftStatue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgRedeemCode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgRedeemCodeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgDevNewItemRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgDevNewItemRequestResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCCheckAccountSubscription_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCCheckAccountSubscriptionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCAccountSubscriptionChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCAddGiftItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCWrapAndDeliverGift_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCWrapAndDeliverGiftResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCUnwrapGift_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCGetGiftPermissions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCGetGiftPermissionsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCUnpackBundle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCUnpackBundleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToClientStoreTransactionCompleted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCEquipItems_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCEquipItemsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCSetItemStyle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCSetItemStyleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCUnlockItemStyle_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCUnlockItemStyleResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCSetItemInventoryCategory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCUnlockCrate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCUnlockCrateResponse_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCUnlockCrateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCRemoveItemAttribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCRemoveItemAttributeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCNameItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCNameItemResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCSetItemPosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CAttribute_ItemDynamicRecipeComponent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProtoItemSocket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProtoItemSocket_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProtoItemSocket_Effect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProtoItemSocket_Color_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProtoItemSocket_Strange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProtoItemSocket_Spectator_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProtoItemSocket_AssetModifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProtoItemSocket_Autograph_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CProtoItemSocket_StaticVisuals_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CAttribute_String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_GetItemDailyRevenue_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_GetItemDailyRevenue_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_GetPackageDailyRevenue_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CWorkshop_GetPackageDailyRevenue_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgSQLGCToGCGrantBackpackSlots_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCLookupAccountName_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCLookupAccountNameResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCCreateStaticRecipe_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCCreateStaticRecipe_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCCreateStaticRecipeResponse_OutputItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCCreateStaticRecipeResponse_InputError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientToGCCreateStaticRecipeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgProcessTransactionOrder_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgProcessTransactionOrder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCStoreProcessCDKeyTransaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCStoreProcessCDKeyTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCStoreProcessSettlement_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCStoreProcessSettlementResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCBroadcastConsoleCommand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCConsoleOutput_OutputLine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCConsoleOutput_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgItemAges_MaxItemIDTimestamp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgItemAges_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCInternalTestMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCToGCClientServerVersionsUpdated_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "econ_gcmessages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 119);
}

}  // namespace

void TableStruct::Shutdown() {
  _CMsgApplyAutograph_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CMsgAdjustItemEquippedState_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CMsgEconPlayerStrangeCountAdjustment_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _CMsgRequestItemPurgatory_FinalizePurchase_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CMsgRequestItemPurgatory_FinalizePurchaseResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _CMsgRequestItemPurgatory_RefundPurchase_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _CMsgRequestItemPurgatory_RefundPurchaseResponse_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CMsgCraftingResponse_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _CMsgGCRequestStoreSalesData_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _CMsgGCRequestStoreSalesDataResponse_Price_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _CMsgGCRequestStoreSalesDataResponse_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _CMsgGCRequestStoreSalesDataUpToDateResponse_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _CMsgGCToGCPingRequest_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _CMsgGCToGCPingResponse_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _CMsgGCToGCGetUserSessionServer_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _CMsgGCToGCGetUserSessionServerResponse_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _CMsgGCToGCGetUserServerMembers_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _CMsgGCToGCGetUserServerMembersResponse_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _CMsgLookupMultipleAccountNames_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _CMsgLookupMultipleAccountNamesResponse_Account_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _CMsgLookupMultipleAccountNamesResponse_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _CMsgGCToGCGetUserPCBangNo_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _CMsgGCToGCGetUserPCBangNoResponse_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _CMsgRequestCrateItems_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _CMsgRequestCrateItemsResponse_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _CMsgGCToGCCanUseDropRateBonus_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _CMsgSQLAddDropRateBonus_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _CMsgSQLUpgradeBattleBooster_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _CMsgGCToGCRefreshSOCache_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _CMsgGCToGCCheckAccountTradeStatus_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _CMsgGCToGCCheckAccountTradeStatusResponse_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _CMsgGCToGCGrantAccountRolledItems_Item_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _CMsgGCToGCGrantAccountRolledItems_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _CMsgGCToGCGrantSelfMadeItemToAccount_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _CMsgUseItem_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _CMsgServerUseItem_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _CMsgUseMultipleItems_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _CMsgGCPartnerBalanceRequest_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _CMsgGCPartnerBalanceResponse_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _CGCStoreRechargeRedirect_LineItem_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _CMsgGCPartnerRechargeRedirectURLRequest_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _CMsgGCPartnerRechargeRedirectURLResponse_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _CMsgGCEconSQLWorkItemEmbeddedRollbackData_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _CMsgCraftStatue_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _CMsgRedeemCode_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _CMsgRedeemCodeResponse_default_instance_.Shutdown();
  delete file_level_metadata[48].reflection;
  _CMsgDevNewItemRequest_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
  _CMsgDevNewItemRequestResponse_default_instance_.Shutdown();
  delete file_level_metadata[50].reflection;
  _CMsgGCCheckAccountSubscription_default_instance_.Shutdown();
  delete file_level_metadata[51].reflection;
  _CMsgGCCheckAccountSubscriptionResponse_default_instance_.Shutdown();
  delete file_level_metadata[52].reflection;
  _CMsgGCToGCAccountSubscriptionChange_default_instance_.Shutdown();
  delete file_level_metadata[53].reflection;
  _CMsgGCAddGiftItem_default_instance_.Shutdown();
  delete file_level_metadata[54].reflection;
  _CMsgClientToGCWrapAndDeliverGift_default_instance_.Shutdown();
  delete file_level_metadata[55].reflection;
  _CMsgClientToGCWrapAndDeliverGiftResponse_default_instance_.Shutdown();
  delete file_level_metadata[56].reflection;
  _CMsgClientToGCUnwrapGift_default_instance_.Shutdown();
  delete file_level_metadata[57].reflection;
  _CMsgClientToGCGetGiftPermissions_default_instance_.Shutdown();
  delete file_level_metadata[58].reflection;
  _CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_default_instance_.Shutdown();
  delete file_level_metadata[59].reflection;
  _CMsgClientToGCGetGiftPermissionsResponse_default_instance_.Shutdown();
  delete file_level_metadata[60].reflection;
  _CMsgClientToGCUnpackBundle_default_instance_.Shutdown();
  delete file_level_metadata[61].reflection;
  _CMsgClientToGCUnpackBundleResponse_default_instance_.Shutdown();
  delete file_level_metadata[62].reflection;
  _CMsgGCToClientStoreTransactionCompleted_default_instance_.Shutdown();
  delete file_level_metadata[63].reflection;
  _CMsgClientToGCEquipItems_default_instance_.Shutdown();
  delete file_level_metadata[64].reflection;
  _CMsgClientToGCEquipItemsResponse_default_instance_.Shutdown();
  delete file_level_metadata[65].reflection;
  _CMsgClientToGCSetItemStyle_default_instance_.Shutdown();
  delete file_level_metadata[66].reflection;
  _CMsgClientToGCSetItemStyleResponse_default_instance_.Shutdown();
  delete file_level_metadata[67].reflection;
  _CMsgClientToGCUnlockItemStyle_default_instance_.Shutdown();
  delete file_level_metadata[68].reflection;
  _CMsgClientToGCUnlockItemStyleResponse_default_instance_.Shutdown();
  delete file_level_metadata[69].reflection;
  _CMsgClientToGCSetItemInventoryCategory_default_instance_.Shutdown();
  delete file_level_metadata[70].reflection;
  _CMsgClientToGCUnlockCrate_default_instance_.Shutdown();
  delete file_level_metadata[71].reflection;
  _CMsgClientToGCUnlockCrateResponse_Item_default_instance_.Shutdown();
  delete file_level_metadata[72].reflection;
  _CMsgClientToGCUnlockCrateResponse_default_instance_.Shutdown();
  delete file_level_metadata[73].reflection;
  _CMsgClientToGCRemoveItemAttribute_default_instance_.Shutdown();
  delete file_level_metadata[74].reflection;
  _CMsgClientToGCRemoveItemAttributeResponse_default_instance_.Shutdown();
  delete file_level_metadata[75].reflection;
  _CMsgClientToGCNameItem_default_instance_.Shutdown();
  delete file_level_metadata[76].reflection;
  _CMsgClientToGCNameItemResponse_default_instance_.Shutdown();
  delete file_level_metadata[77].reflection;
  _CMsgGCSetItemPosition_default_instance_.Shutdown();
  delete file_level_metadata[78].reflection;
  _CAttribute_ItemDynamicRecipeComponent_default_instance_.Shutdown();
  delete file_level_metadata[79].reflection;
  _CProtoItemSocket_default_instance_.Shutdown();
  delete file_level_metadata[80].reflection;
  _CProtoItemSocket_Empty_default_instance_.Shutdown();
  delete file_level_metadata[81].reflection;
  _CProtoItemSocket_Effect_default_instance_.Shutdown();
  delete file_level_metadata[82].reflection;
  _CProtoItemSocket_Color_default_instance_.Shutdown();
  delete file_level_metadata[83].reflection;
  _CProtoItemSocket_Strange_default_instance_.Shutdown();
  delete file_level_metadata[84].reflection;
  _CProtoItemSocket_Spectator_default_instance_.Shutdown();
  delete file_level_metadata[85].reflection;
  _CProtoItemSocket_AssetModifier_default_instance_.Shutdown();
  delete file_level_metadata[86].reflection;
  _CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_default_instance_.Shutdown();
  delete file_level_metadata[87].reflection;
  _CProtoItemSocket_Autograph_default_instance_.Shutdown();
  delete file_level_metadata[88].reflection;
  _CProtoItemSocket_StaticVisuals_default_instance_.Shutdown();
  delete file_level_metadata[89].reflection;
  _CAttribute_String_default_instance_.Shutdown();
  delete file_level_metadata[90].reflection;
  _CWorkshop_GetItemDailyRevenue_Request_default_instance_.Shutdown();
  delete file_level_metadata[91].reflection;
  _CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_default_instance_.Shutdown();
  delete file_level_metadata[92].reflection;
  _CWorkshop_GetItemDailyRevenue_Response_default_instance_.Shutdown();
  delete file_level_metadata[93].reflection;
  _CWorkshop_GetPackageDailyRevenue_Request_default_instance_.Shutdown();
  delete file_level_metadata[94].reflection;
  _CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_default_instance_.Shutdown();
  delete file_level_metadata[95].reflection;
  _CWorkshop_GetPackageDailyRevenue_Response_default_instance_.Shutdown();
  delete file_level_metadata[96].reflection;
  _CMsgSQLGCToGCGrantBackpackSlots_default_instance_.Shutdown();
  delete file_level_metadata[97].reflection;
  _CMsgClientToGCLookupAccountName_default_instance_.Shutdown();
  delete file_level_metadata[98].reflection;
  _CMsgClientToGCLookupAccountNameResponse_default_instance_.Shutdown();
  delete file_level_metadata[99].reflection;
  _CMsgClientToGCCreateStaticRecipe_Item_default_instance_.Shutdown();
  delete file_level_metadata[100].reflection;
  _CMsgClientToGCCreateStaticRecipe_default_instance_.Shutdown();
  delete file_level_metadata[101].reflection;
  _CMsgClientToGCCreateStaticRecipeResponse_OutputItem_default_instance_.Shutdown();
  delete file_level_metadata[102].reflection;
  _CMsgClientToGCCreateStaticRecipeResponse_InputError_default_instance_.Shutdown();
  delete file_level_metadata[103].reflection;
  _CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_default_instance_.Shutdown();
  delete file_level_metadata[104].reflection;
  _CMsgClientToGCCreateStaticRecipeResponse_default_instance_.Shutdown();
  delete file_level_metadata[105].reflection;
  _CMsgProcessTransactionOrder_Item_default_instance_.Shutdown();
  delete file_level_metadata[106].reflection;
  _CMsgProcessTransactionOrder_default_instance_.Shutdown();
  delete file_level_metadata[107].reflection;
  _CMsgGCToGCStoreProcessCDKeyTransaction_default_instance_.Shutdown();
  delete file_level_metadata[108].reflection;
  _CMsgGCToGCStoreProcessCDKeyTransactionResponse_default_instance_.Shutdown();
  delete file_level_metadata[109].reflection;
  _CMsgGCToGCStoreProcessSettlement_default_instance_.Shutdown();
  delete file_level_metadata[110].reflection;
  _CMsgGCToGCStoreProcessSettlementResponse_default_instance_.Shutdown();
  delete file_level_metadata[111].reflection;
  _CMsgGCToGCBroadcastConsoleCommand_default_instance_.Shutdown();
  delete file_level_metadata[112].reflection;
  _CMsgGCToGCConsoleOutput_OutputLine_default_instance_.Shutdown();
  delete file_level_metadata[113].reflection;
  _CMsgGCToGCConsoleOutput_default_instance_.Shutdown();
  delete file_level_metadata[114].reflection;
  _CMsgItemAges_MaxItemIDTimestamp_default_instance_.Shutdown();
  delete file_level_metadata[115].reflection;
  _CMsgItemAges_default_instance_.Shutdown();
  delete file_level_metadata[116].reflection;
  _CMsgGCToGCInternalTestMsg_default_instance_.Shutdown();
  delete file_level_metadata[117].reflection;
  _CMsgGCToGCClientServerVersionsUpdated_default_instance_.Shutdown();
  delete file_level_metadata[118].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::dota::protobuf_steammessages_2eproto::InitDefaults();
  ::proto::dota::protobuf_econ_5fshared_5fenums_2eproto::InitDefaults();
  _CMsgApplyAutograph_default_instance_.DefaultConstruct();
  _CMsgAdjustItemEquippedState_default_instance_.DefaultConstruct();
  _CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment_default_instance_.DefaultConstruct();
  _CMsgEconPlayerStrangeCountAdjustment_default_instance_.DefaultConstruct();
  _CMsgRequestItemPurgatory_FinalizePurchase_default_instance_.DefaultConstruct();
  _CMsgRequestItemPurgatory_FinalizePurchaseResponse_default_instance_.DefaultConstruct();
  _CMsgRequestItemPurgatory_RefundPurchase_default_instance_.DefaultConstruct();
  _CMsgRequestItemPurgatory_RefundPurchaseResponse_default_instance_.DefaultConstruct();
  _CMsgCraftingResponse_default_instance_.DefaultConstruct();
  _CMsgGCRequestStoreSalesData_default_instance_.DefaultConstruct();
  _CMsgGCRequestStoreSalesDataResponse_Price_default_instance_.DefaultConstruct();
  _CMsgGCRequestStoreSalesDataResponse_default_instance_.DefaultConstruct();
  _CMsgGCRequestStoreSalesDataUpToDateResponse_default_instance_.DefaultConstruct();
  _CMsgGCToGCPingRequest_default_instance_.DefaultConstruct();
  _CMsgGCToGCPingResponse_default_instance_.DefaultConstruct();
  _CMsgGCToGCGetUserSessionServer_default_instance_.DefaultConstruct();
  _CMsgGCToGCGetUserSessionServerResponse_default_instance_.DefaultConstruct();
  _CMsgGCToGCGetUserServerMembers_default_instance_.DefaultConstruct();
  _CMsgGCToGCGetUserServerMembersResponse_default_instance_.DefaultConstruct();
  _CMsgLookupMultipleAccountNames_default_instance_.DefaultConstruct();
  _CMsgLookupMultipleAccountNamesResponse_Account_default_instance_.DefaultConstruct();
  _CMsgLookupMultipleAccountNamesResponse_default_instance_.DefaultConstruct();
  _CMsgGCToGCGetUserPCBangNo_default_instance_.DefaultConstruct();
  _CMsgGCToGCGetUserPCBangNoResponse_default_instance_.DefaultConstruct();
  _CMsgRequestCrateItems_default_instance_.DefaultConstruct();
  _CMsgRequestCrateItemsResponse_default_instance_.DefaultConstruct();
  _CMsgGCToGCCanUseDropRateBonus_default_instance_.DefaultConstruct();
  _CMsgSQLAddDropRateBonus_default_instance_.DefaultConstruct();
  _CMsgSQLUpgradeBattleBooster_default_instance_.DefaultConstruct();
  _CMsgGCToGCRefreshSOCache_default_instance_.DefaultConstruct();
  _CMsgGCToGCCheckAccountTradeStatus_default_instance_.DefaultConstruct();
  _CMsgGCToGCCheckAccountTradeStatusResponse_default_instance_.DefaultConstruct();
  _CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute_default_instance_.DefaultConstruct();
  _CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry_default_instance_.DefaultConstruct();
  _CMsgGCToGCGrantAccountRolledItems_Item_default_instance_.DefaultConstruct();
  _CMsgGCToGCGrantAccountRolledItems_default_instance_.DefaultConstruct();
  _CMsgGCToGCGrantSelfMadeItemToAccount_default_instance_.DefaultConstruct();
  _CMsgUseItem_default_instance_.DefaultConstruct();
  _CMsgServerUseItem_default_instance_.DefaultConstruct();
  _CMsgUseMultipleItems_default_instance_.DefaultConstruct();
  _CMsgGCPartnerBalanceRequest_default_instance_.DefaultConstruct();
  _CMsgGCPartnerBalanceResponse_default_instance_.DefaultConstruct();
  _CGCStoreRechargeRedirect_LineItem_default_instance_.DefaultConstruct();
  _CMsgGCPartnerRechargeRedirectURLRequest_default_instance_.DefaultConstruct();
  _CMsgGCPartnerRechargeRedirectURLResponse_default_instance_.DefaultConstruct();
  _CMsgGCEconSQLWorkItemEmbeddedRollbackData_default_instance_.DefaultConstruct();
  _CMsgCraftStatue_default_instance_.DefaultConstruct();
  _CMsgRedeemCode_default_instance_.DefaultConstruct();
  _CMsgRedeemCodeResponse_default_instance_.DefaultConstruct();
  _CMsgDevNewItemRequest_default_instance_.DefaultConstruct();
  _CMsgDevNewItemRequestResponse_default_instance_.DefaultConstruct();
  _CMsgGCCheckAccountSubscription_default_instance_.DefaultConstruct();
  _CMsgGCCheckAccountSubscriptionResponse_default_instance_.DefaultConstruct();
  _CMsgGCToGCAccountSubscriptionChange_default_instance_.DefaultConstruct();
  _CMsgGCAddGiftItem_default_instance_.DefaultConstruct();
  _CMsgClientToGCWrapAndDeliverGift_default_instance_.DefaultConstruct();
  _CMsgClientToGCWrapAndDeliverGiftResponse_default_instance_.DefaultConstruct();
  _CMsgClientToGCUnwrapGift_default_instance_.DefaultConstruct();
  _CMsgClientToGCGetGiftPermissions_default_instance_.DefaultConstruct();
  _CMsgClientToGCGetGiftPermissionsResponse_FriendPermission_default_instance_.DefaultConstruct();
  _CMsgClientToGCGetGiftPermissionsResponse_default_instance_.DefaultConstruct();
  _CMsgClientToGCUnpackBundle_default_instance_.DefaultConstruct();
  _CMsgClientToGCUnpackBundleResponse_default_instance_.DefaultConstruct();
  _CMsgGCToClientStoreTransactionCompleted_default_instance_.DefaultConstruct();
  _CMsgClientToGCEquipItems_default_instance_.DefaultConstruct();
  _CMsgClientToGCEquipItemsResponse_default_instance_.DefaultConstruct();
  _CMsgClientToGCSetItemStyle_default_instance_.DefaultConstruct();
  _CMsgClientToGCSetItemStyleResponse_default_instance_.DefaultConstruct();
  _CMsgClientToGCUnlockItemStyle_default_instance_.DefaultConstruct();
  _CMsgClientToGCUnlockItemStyleResponse_default_instance_.DefaultConstruct();
  _CMsgClientToGCSetItemInventoryCategory_default_instance_.DefaultConstruct();
  _CMsgClientToGCUnlockCrate_default_instance_.DefaultConstruct();
  _CMsgClientToGCUnlockCrateResponse_Item_default_instance_.DefaultConstruct();
  _CMsgClientToGCUnlockCrateResponse_default_instance_.DefaultConstruct();
  _CMsgClientToGCRemoveItemAttribute_default_instance_.DefaultConstruct();
  _CMsgClientToGCRemoveItemAttributeResponse_default_instance_.DefaultConstruct();
  _CMsgClientToGCNameItem_default_instance_.DefaultConstruct();
  _CMsgClientToGCNameItemResponse_default_instance_.DefaultConstruct();
  _CMsgGCSetItemPosition_default_instance_.DefaultConstruct();
  _CAttribute_ItemDynamicRecipeComponent_default_instance_.DefaultConstruct();
  _CProtoItemSocket_default_instance_.DefaultConstruct();
  _CProtoItemSocket_Empty_default_instance_.DefaultConstruct();
  _CProtoItemSocket_Effect_default_instance_.DefaultConstruct();
  _CProtoItemSocket_Color_default_instance_.DefaultConstruct();
  _CProtoItemSocket_Strange_default_instance_.DefaultConstruct();
  _CProtoItemSocket_Spectator_default_instance_.DefaultConstruct();
  _CProtoItemSocket_AssetModifier_default_instance_.DefaultConstruct();
  _CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_default_instance_.DefaultConstruct();
  _CProtoItemSocket_Autograph_default_instance_.DefaultConstruct();
  _CProtoItemSocket_StaticVisuals_default_instance_.DefaultConstruct();
  _CAttribute_String_default_instance_.DefaultConstruct();
  _CWorkshop_GetItemDailyRevenue_Request_default_instance_.DefaultConstruct();
  _CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue_default_instance_.DefaultConstruct();
  _CWorkshop_GetItemDailyRevenue_Response_default_instance_.DefaultConstruct();
  _CWorkshop_GetPackageDailyRevenue_Request_default_instance_.DefaultConstruct();
  _CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue_default_instance_.DefaultConstruct();
  _CWorkshop_GetPackageDailyRevenue_Response_default_instance_.DefaultConstruct();
  _CMsgSQLGCToGCGrantBackpackSlots_default_instance_.DefaultConstruct();
  _CMsgClientToGCLookupAccountName_default_instance_.DefaultConstruct();
  _CMsgClientToGCLookupAccountNameResponse_default_instance_.DefaultConstruct();
  _CMsgClientToGCCreateStaticRecipe_Item_default_instance_.DefaultConstruct();
  _CMsgClientToGCCreateStaticRecipe_default_instance_.DefaultConstruct();
  _CMsgClientToGCCreateStaticRecipeResponse_OutputItem_default_instance_.DefaultConstruct();
  _CMsgClientToGCCreateStaticRecipeResponse_InputError_default_instance_.DefaultConstruct();
  _CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput_default_instance_.DefaultConstruct();
  _CMsgClientToGCCreateStaticRecipeResponse_default_instance_.DefaultConstruct();
  _CMsgProcessTransactionOrder_Item_default_instance_.DefaultConstruct();
  _CMsgProcessTransactionOrder_default_instance_.DefaultConstruct();
  _CMsgGCToGCStoreProcessCDKeyTransaction_default_instance_.DefaultConstruct();
  _CMsgGCToGCStoreProcessCDKeyTransactionResponse_default_instance_.DefaultConstruct();
  _CMsgGCToGCStoreProcessSettlement_default_instance_.DefaultConstruct();
  _CMsgGCToGCStoreProcessSettlementResponse_default_instance_.DefaultConstruct();
  _CMsgGCToGCBroadcastConsoleCommand_default_instance_.DefaultConstruct();
  _CMsgGCToGCConsoleOutput_OutputLine_default_instance_.DefaultConstruct();
  _CMsgGCToGCConsoleOutput_default_instance_.DefaultConstruct();
  _CMsgItemAges_MaxItemIDTimestamp_default_instance_.DefaultConstruct();
  _CMsgItemAges_default_instance_.DefaultConstruct();
  _CMsgGCToGCInternalTestMsg_default_instance_.DefaultConstruct();
  _CMsgGCToGCClientServerVersionsUpdated_default_instance_.DefaultConstruct();
  _CMsgServerUseItem_default_instance_.get_mutable()->use_item_msg_ = const_cast< ::proto::dota::CMsgUseItem*>(
      ::proto::dota::CMsgUseItem::internal_default_instance());
  _CProtoItemSocket_Empty_default_instance_.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
  _CProtoItemSocket_Effect_default_instance_.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
  _CProtoItemSocket_Color_default_instance_.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
  _CProtoItemSocket_Strange_default_instance_.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
  _CProtoItemSocket_Spectator_default_instance_.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
  _CProtoItemSocket_AssetModifier_default_instance_.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
  _CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY_default_instance_.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
  _CProtoItemSocket_Autograph_default_instance_.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
  _CProtoItemSocket_StaticVisuals_default_instance_.get_mutable()->socket_ = const_cast< ::proto::dota::CProtoItemSocket*>(
      ::proto::dota::CProtoItemSocket::internal_default_instance());
  _CMsgGCToGCStoreProcessCDKeyTransaction_default_instance_.get_mutable()->order_ = const_cast< ::proto::dota::CMsgProcessTransactionOrder*>(
      ::proto::dota::CMsgProcessTransactionOrder::internal_default_instance());
  _CMsgGCToGCStoreProcessSettlement_default_instance_.get_mutable()->order_ = const_cast< ::proto::dota::CMsgProcessTransactionOrder*>(
      ::proto::dota::CMsgProcessTransactionOrder::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\025econ_gcmessages.proto\022\nproto.dota\032\023ste"
      "ammessages.proto\032\027econ_shared_enums.prot"
      "o\"E\n\022CMsgApplyAutograph\022\031\n\021autograph_ite"
      "m_id\030\001 \001(\004\022\024\n\014item_item_id\030\002 \001(\004\"h\n\033CMsg"
      "AdjustItemEquippedState\022\017\n\007item_id\030\001 \001(\004"
      "\022\021\n\tnew_class\030\002 \001(\r\022\020\n\010new_slot\030\003 \001(\r\022\023\n"
      "\013style_index\030\004 \001(\r\"\373\001\n$CMsgEconPlayerStr"
      "angeCountAdjustment\022\022\n\naccount_id\030\001 \001(\r\022"
      "k\n\031strange_count_adjustments\030\002 \003(\0132H.pro"
      "to.dota.CMsgEconPlayerStrangeCountAdjust"
      "ment.CStrangeCountAdjustment\032R\n\027CStrange"
      "CountAdjustment\022\022\n\nevent_type\030\001 \001(\r\022\017\n\007i"
      "tem_id\030\002 \001(\004\022\022\n\nadjustment\030\003 \001(\r\"=\n)CMsg"
      "RequestItemPurgatory_FinalizePurchase\022\020\n"
      "\010item_ids\030\001 \003(\004\"U\n1CMsgRequestItemPurgat"
      "ory_FinalizePurchaseResponse\022\016\n\006result\030\001"
      " \001(\r\022\020\n\010item_ids\030\002 \003(\004\";\n\'CMsgRequestIte"
      "mPurgatory_RefundPurchase\022\020\n\010item_ids\030\001 "
      "\003(\004\"A\n/CMsgRequestItemPurgatory_RefundPu"
      "rchaseResponse\022\016\n\006result\030\001 \001(\r\"(\n\024CMsgCr"
      "aftingResponse\022\020\n\010item_ids\030\001 \003(\004\"@\n\033CMsg"
      "GCRequestStoreSalesData\022\017\n\007version\030\001 \001(\r"
      "\022\020\n\010currency\030\002 \001(\r\"\304\001\n#CMsgGCRequestStor"
      "eSalesDataResponse\022I\n\nsale_price\030\001 \003(\01325"
      ".proto.dota.CMsgGCRequestStoreSalesDataR"
      "esponse.Price\022\017\n\007version\030\002 \001(\r\022\027\n\017expira"
      "tion_time\030\003 \001(\r\032(\n\005Price\022\020\n\010item_def\030\001 \001"
      "(\r\022\r\n\005price\030\002 \001(\r\"W\n+CMsgGCRequestStoreS"
      "alesDataUpToDateResponse\022\017\n\007version\030\001 \001("
      "\r\022\027\n\017expiration_time\030\002 \001(\r\"\027\n\025CMsgGCToGC"
      "PingRequest\"\030\n\026CMsgGCToGCPingResponse\"4\n"
      "\036CMsgGCToGCGetUserSessionServer\022\022\n\naccou"
      "nt_id\030\001 \001(\r\"T\n&CMsgGCToGCGetUserSessionS"
      "erverResponse\022\027\n\017server_steam_id\030\001 \001(\006\022\021"
      "\n\tis_online\030\002 \001(\010\"L\n\036CMsgGCToGCGetUserSe"
      "rverMembers\022\022\n\naccount_id\030\001 \001(\r\022\026\n\016max_s"
      "pectators\030\002 \001(\r\"C\n&CMsgGCToGCGetUserServ"
      "erMembersResponse\022\031\n\021member_account_id\030\001"
      " \003(\r\"8\n\036CMsgLookupMultipleAccountNames\022\026"
      "\n\naccountids\030\001 \003(\rB\002\020\001\"\245\001\n&CMsgLookupMul"
      "tipleAccountNamesResponse\022L\n\010accounts\030\001 "
      "\003(\0132:.proto.dota.CMsgLookupMultipleAccou"
      "ntNamesResponse.Account\032-\n\007Account\022\021\n\tac"
      "countid\030\001 \001(\r\022\017\n\007persona\030\002 \001(\t\"/\n\031CMsgGC"
      "ToGCGetUserPCBangNo\022\022\n\naccount_id\030\001 \001(\r\""
      "7\n!CMsgGCToGCGetUserPCBangNoResponse\022\022\n\n"
      "pc_bang_no\030\001 \001(\r\"/\n\025CMsgRequestCrateItem"
      "s\022\026\n\016crate_item_def\030\001 \001(\r\"\205\001\n\035CMsgReques"
      "tCrateItemsResponse\022\020\n\010response\030\001 \001(\r\022\021\n"
      "\titem_defs\030\002 \003(\r\022\025\n\rpeek_item_def\030\003 \001(\r\""
      "(\n\007EResult\022\017\n\013k_Succeeded\020\000\022\014\n\010k_Failed\020"
      "\001\"\230\001\n\035CMsgGCToGCCanUseDropRateBonus\022\022\n\na"
      "ccount_id\030\001 \001(\r\022\027\n\017drop_rate_bonus\030\002 \001(\002"
      "\022\024\n\014booster_type\030\003 \001(\r\022\032\n\022exclusive_item"
      "_def\030\004 \001(\r\022\030\n\020allow_equal_rate\030\005 \001(\010\"\261\001\n"
      "\027CMsgSQLAddDropRateBonus\022\022\n\naccount_id\030\001"
      " \001(\r\022\017\n\007item_id\030\002 \001(\004\022\020\n\010item_def\030\003 \001(\r\022"
      "\027\n\017drop_rate_bonus\030\004 \001(\002\022\024\n\014booster_type"
      "\030\005 \001(\r\022\030\n\020seconds_duration\030\006 \001(\r\022\026\n\016end_"
      "time_stamp\030\007 \001(\r\"o\n\033CMsgSQLUpgradeBattle"
      "Booster\022\022\n\naccount_id\030\001 \001(\r\022\020\n\010item_def\030"
      "\002 \001(\r\022\024\n\014bonus_to_add\030\003 \001(\002\022\024\n\014booster_t"
      "ype\030\004 \001(\r\">\n\030CMsgGCToGCRefreshSOCache\022\022\n"
      "\naccount_id\030\001 \001(\r\022\016\n\006reload\030\002 \001(\010\"J\n!CMs"
      "gGCToGCCheckAccountTradeStatus\022\022\n\naccoun"
      "t_id\030\001 \001(\r\022\021\n\tinitiator\030\002 \001(\010\"R\n)CMsgGCT"
      "oGCCheckAccountTradeStatusResponse\022\021\n\tca"
      "n_trade\030\001 \001(\010\022\022\n\nerror_code\030\002 \001(\r\"\207\005\n!CM"
      "sgGCToGCGrantAccountRolledItems\022\022\n\naccou"
      "nt_id\030\001 \001(\r\022A\n\005items\030\002 \003(\01322.proto.dota."
      "CMsgGCToGCGrantAccountRolledItems.Item\022\024"
      "\n\014audit_action\030\003 \001(\r\022\022\n\naudit_data\030\004 \001(\004"
      "\032\340\003\n\004Item\022\020\n\010item_def\030\001 \001(\r\022\022\n\nloot_list"
      "s\030\002 \003(\t\022\024\n\014ignore_limit\030\003 \001(\010\022\016\n\006origin\030"
      "\004 \001(\r\022_\n\022dynamic_attributes\030\005 \003(\0132C.prot"
      "o.dota.CMsgGCToGCGrantAccountRolledItems"
      ".Item.DynamicAttribute\022i\n\030additional_aud"
      "it_entries\030\006 \003(\0132G.proto.dota.CMsgGCToGC"
      "GrantAccountRolledItems.Item.AdditionalA"
      "uditEntry\022\027\n\017inventory_token\030\007 \001(\r\032K\n\020Dy"
      "namicAttribute\022\014\n\004name\030\001 \001(\t\022\024\n\014value_ui"
      "nt32\030\002 \001(\r\022\023\n\013value_float\030\003 \001(\002\032Z\n\024Addit"
      "ionalAuditEntry\022\030\n\020owner_account_id\030\001 \001("
      "\r\022\024\n\014audit_action\030\002 \001(\r\022\022\n\naudit_data\030\003 "
      "\001(\004\"Q\n$CMsgGCToGCGrantSelfMadeItemToAcco"
      "unt\022\026\n\016item_def_index\030\001 \001(\r\022\021\n\taccountid"
      "\030\002 \001(\r\"\261\001\n\013CMsgUseItem\022\017\n\007item_id\030\001 \001(\004\022"
      "\027\n\017target_steam_id\030\002 \001(\006\022\037\n\027gift__potent"
      "ial_targets\030\003 \003(\r\022\030\n\020duel__class_lock\030\004 "
      "\001(\r\022\032\n\022initiator_steam_id\030\005 \001(\004\022!\n\031itemp"
      "ack__ack_immediately\030\006 \001(\010\"`\n\021CMsgServer"
      "UseItem\022\034\n\024initiator_account_id\030\001 \001(\r\022-\n"
      "\014use_item_msg\030\002 \001(\0132\027.proto.dota.CMsgUse"
      "Item\"(\n\024CMsgUseMultipleItems\022\020\n\010item_ids"
      "\030\001 \003(\004\"\035\n\033CMsgGCPartnerBalanceRequest\"{\n"
      "\034CMsgGCPartnerBalanceResponse\022J\n\006result\030"
      "\001 \001(\0162%.proto.dota.EGCPartnerRequestResp"
      "onse:\023k_EPartnerRequestOK\022\017\n\007balance\030\002 \001"
      "(\r\"J\n!CGCStoreRechargeRedirect_LineItem\022"
      "\023\n\013item_def_id\030\001 \001(\r\022\020\n\010quantity\030\002 \001(\r\"l"
      "\n\'CMsgGCPartnerRechargeRedirectURLReques"
      "t\022A\n\nline_items\030\001 \003(\0132-.proto.dota.CGCSt"
      "oreRechargeRedirect_LineItem\"\203\001\n(CMsgGCP"
      "artnerRechargeRedirectURLResponse\022J\n\006res"
      "ult\030\001 \001(\0162%.proto.dota.EGCPartnerRequest"
      "Response:\023k_EPartnerRequestOK\022\013\n\003url\030\002 \001"
      "(\t\"X\n)CMsgGCEconSQLWorkItemEmbeddedRollb"
      "ackData\022\022\n\naccount_id\030\001 \001(\r\022\027\n\017deleted_i"
      "tem_id\030\002 \001(\004\"\205\001\n\017CMsgCraftStatue\022\016\n\006hero"
      "id\030\001 \001(\r\022\024\n\014sequencename\030\002 \001(\t\022\r\n\005cycle\030"
      "\003 \001(\002\022\023\n\013description\030\004 \001(\t\022\030\n\020pedestal_i"
      "temdef\030\005 \001(\r\022\016\n\006toolid\030\006 \001(\004\"\036\n\016CMsgRede"
      "emCode\022\014\n\004code\030\001 \001(\t\"\255\001\n\026CMsgRedeemCodeR"
      "esponse\022\020\n\010response\030\001 \001(\r\022\017\n\007item_id\030\002 \001"
      "(\004\"p\n\013EResultCode\022\017\n\013k_Succeeded\020\000\022\031\n\025k_"
      "Failed_CodeNotFound\020\001\022\034\n\030k_Failed_CodeAl"
      "readyUsed\020\002\022\027\n\023k_Failed_OtherError\020\003\"q\n\025"
      "CMsgDevNewItemRequest\022\025\n\ritem_def_name\030\003"
      " \001(\t\022\026\n\016loot_list_name\030\004 \001(\t\022\025\n\rattr_def"
      "_name\030\005 \003(\t\022\022\n\nattr_value\030\006 \003(\t\"0\n\035CMsgD"
      "evNewItemRequestResponse\022\017\n\007success\030\001 \001("
      "\010\"G\n\036CMsgGCCheckAccountSubscription\022\022\n\na"
      "ccount_id\030\001 \001(\r\022\021\n\tdef_index\030\002 \001(\r\"\361\001\n&C"
      "MsgGCCheckAccountSubscriptionResponse\022c\n"
      "\005state\030\001 \001(\0162E.proto.dota.CMsgGCCheckAcc"
      "ountSubscriptionResponse.ESubscriptionSt"
      "ate:\rSTATE_UNKNOWN\022\023\n\013cache_until\030\002 \001(\r\""
      "M\n\022ESubscriptionState\022\021\n\rSTATE_UNKNOWN\020\000"
      "\022\022\n\016STATE_INACTIVE\020\001\022\020\n\014STATE_ACTIVE\020\002\"x"
      "\n#CMsgGCToGCAccountSubscriptionChange\022\022\n"
      "\naccount_id\030\001 \001(\r\022\035\n\025item_definition_ind"
      "ex\030\002 \001(\r\022\036\n\026is_subscription_active\030\003 \001(\010"
      "\"8\n\021CMsgGCAddGiftItem\022\022\n\naccount_id\030\001 \001("
      "\r\022\017\n\007item_id\030\002 \001(\004\"e\n CMsgClientToGCWrap"
      "AndDeliverGift\022\017\n\007item_id\030\001 \001(\004\022\032\n\022give_"
      "to_account_id\030\002 \001(\r\022\024\n\014gift_message\030\003 \001("
      "\t\"\332\002\n(CMsgClientToGCWrapAndDeliverGiftRe"
      "sponse\022@\n\010response\030\001 \001(\0162\032.proto.dota.EG"
      "CMsgResponse:\022k_EGCMsgResponseOK\022\033\n\023gift"
      "ing_charge_uses\030\002 \001(\r\022\032\n\022gifting_charge_"
      "max\030\003 \001(\005\022\024\n\014gifting_uses\030\004 \001(\r\022\023\n\013gifti"
      "ng_max\030\005 \001(\005\022\034\n\024gifting_window_hours\030\006 \001"
      "(\r\022j\n\021trade_restriction\030\007 \001(\0162\'.proto.do"
      "ta.EGCMsgInitiateTradeResponse:&k_EGCMsg"
      "InitiateTradeResponse_Accepted\"+\n\030CMsgCl"
      "ientToGCUnwrapGift\022\017\n\007item_id\030\001 \001(\004\"\"\n C"
      "MsgClientToGCGetGiftPermissions\"\210\004\n(CMsg"
      "ClientToGCGetGiftPermissionsResponse\022\024\n\014"
      "is_unlimited\030\001 \001(\010\022\026\n\016has_two_factor\030\003 \001"
      "(\010\022j\n\021sender_permission\030\006 \001(\0162\'.proto.do"
      "ta.EGCMsgInitiateTradeResponse:&k_EGCMsg"
      "InitiateTradeResponse_Accepted\022\"\n\032friend"
      "ship_age_requirement\030\007 \001(\r\022-\n%friendship"
      "_age_requirement_two_factor\030\010 \001(\r\022a\n\022fri"
      "end_permissions\030\t \003(\0132E.proto.dota.CMsgC"
      "lientToGCGetGiftPermissionsResponse.Frie"
      "ndPermission\032\213\001\n\020FriendPermission\022\022\n\nacc"
      "ount_id\030\001 \001(\r\022c\n\npermission\030\002 \001(\0162\'.prot"
      "o.dota.EGCMsgInitiateTradeResponse:&k_EG"
      "CMsgInitiateTradeResponse_Accepted\"-\n\032CM"
      "sgClientToGCUnpackBundle\022\017\n\007item_id\030\001 \001("
      "\004\"\345\003\n\"CMsgClientToGCUnpackBundleResponse"
      "\022\031\n\021unpacked_item_ids\030\001 \003(\004\022h\n\010response\030"
      "\002 \001(\0162<.proto.dota.CMsgClientToGCUnpackB"
      "undleResponse.EUnpackBundle:\030k_UnpackBun"
      "dle_Succeeded\"\271\002\n\rEUnpackBundle\022\034\n\030k_Unp"
      "ackBundle_Succeeded\020\000\022)\n%k_UnpackBundle_"
      "Failed_ItemIsNotBundle\020\001\0225\n1k_UnpackBund"
      "le_Failed_UnableToCreateContainedItem\020\002\022"
      "&\n\"k_UnpackBundle_Failed_SOCacheError\020\003\022"
      "\'\n#k_UnpackBundle_Failed_ItemIsInvalid\020\004"
      "\022)\n%k_UnpackBundle_Failed_BadItemQuantit"
      "y\020\005\022,\n(k_UnpackBundle_Failed_UnableToDel"
      "eteItem\020\006\"K\n\'CMsgGCToClientStoreTransact"
      "ionCompleted\022\016\n\006txn_id\030\001 \001(\004\022\020\n\010item_ids"
      "\030\002 \003(\004\"S\n\030CMsgClientToGCEquipItems\0227\n\006eq"
      "uips\030\001 \003(\0132\'.proto.dota.CMsgAdjustItemEq"
      "uippedState\"\?\n CMsgClientToGCEquipItemsR"
      "esponse\022\033\n\023so_cache_version_id\030\001 \001(\006\"B\n\032"
      "CMsgClientToGCSetItemStyle\022\017\n\007item_id\030\001 "
      "\001(\004\022\023\n\013style_index\030\002 \001(\r\"\351\001\n\"CMsgClientT"
      "oGCSetItemStyleResponse\022`\n\010response\030\001 \001("
      "\01628.proto.dota.CMsgClientToGCSetItemStyl"
      "eResponse.ESetStyle:\024k_SetStyle_Succeede"
      "d\"a\n\tESetStyle\022\030\n\024k_SetStyle_Succeeded\020\000"
      "\022\025\n\021k_SetStyle_Failed\020\001\022#\n\037k_SetStyle_Fa"
      "iled_StyleIsLocked\020\002\"i\n\035CMsgClientToGCUn"
      "lockItemStyle\022\026\n\016item_to_unlock\030\001 \001(\004\022\023\n"
      "\013style_index\030\002 \001(\r\022\033\n\023consumable_item_id"
      "s\030\003 \003(\004\"\255\005\n%CMsgClientToGCUnlockItemStyl"
      "eResponse\022i\n\010response\030\001 \001(\0162>.proto.dota"
      ".CMsgClientToGCUnlockItemStyleResponse.E"
      "UnlockStyle:\027k_UnlockStyle_Succeeded\022\017\n\007"
      "item_id\030\002 \001(\004\022\023\n\013style_index\030\003 \001(\r\022\024\n\014st"
      "yle_prereq\030\004 \001(\r\"\334\003\n\014EUnlockStyle\022\033\n\027k_U"
      "nlockStyle_Succeeded\020\000\022\037\n\033k_UnlockStyle_"
      "Failed_PreReq\020\001\022#\n\037k_UnlockStyle_Failed_"
      "CantAfford\020\002\022#\n\037k_UnlockStyle_Failed_Can"
      "tCommit\020\003\022&\n\"k_UnlockStyle_Failed_CantLo"
      "ckCache\020\004\022)\n%k_UnlockStyle_Failed_CantAf"
      "fordAttrib\020\005\022&\n\"k_UnlockStyle_Failed_Can"
      "tAffordGem\020\006\022*\n&k_UnlockStyle_Failed_NoC"
      "ompendiumLevel\020\007\022(\n$k_UnlockStyle_Failed"
      "_AlreadyUnlocked\020\010\022#\n\037k_UnlockStyle_Fail"
      "ed_OtherError\020\t\022&\n\"k_UnlockStyle_Failed_"
      "ItemIsInvalid\020\n\022&\n\"k_UnlockStyle_Failed_"
      "ToolIsInvalid\020\013\"\203\001\n&CMsgClientToGCSetIte"
      "mInventoryCategory\022\020\n\010item_ids\030\001 \003(\004\022\024\n\014"
      "set_to_value\030\002 \001(\r\022\031\n\021remove_categories\030"
      "\003 \001(\r\022\026\n\016add_categories\030\004 \001(\r\"G\n\031CMsgCli"
      "entToGCUnlockCrate\022\025\n\rcrate_item_id\030\001 \001("
      "\004\022\023\n\013key_item_id\030\002 \001(\004\"\332\001\n!CMsgClientToG"
      "CUnlockCrateResponse\022>\n\006result\030\001 \001(\0162\032.p"
      "roto.dota.EGCMsgResponse:\022k_EGCMsgRespon"
      "seOK\022I\n\rgranted_items\030\002 \003(\01322.proto.dota"
      ".CMsgClientToGCUnlockCrateResponse.Item\032"
      "*\n\004Item\022\017\n\007item_id\030\001 \001(\004\022\021\n\tdef_index\030\002 "
      "\001(\r\"4\n!CMsgClientToGCRemoveItemAttribute"
      "\022\017\n\007item_id\030\001 \001(\004\"\275\003\n)CMsgClientToGCRemo"
      "veItemAttributeResponse\022}\n\010response\030\001 \001("
      "\0162J.proto.dota.CMsgClientToGCRemoveItemA"
      "ttributeResponse.ERemoveItemAttribute:\037k"
      "_RemoveItemAttribute_Succeeded\022\017\n\007item_i"
      "d\030\002 \001(\004\"\377\001\n\024ERemoveItemAttribute\022#\n\037k_Re"
      "moveItemAttribute_Succeeded\020\000\022 \n\034k_Remov"
      "eItemAttribute_Failed\020\001\022.\n*k_RemoveItemA"
      "ttribute_Failed_ItemIsInvalid\020\002\0229\n5k_Rem"
      "oveItemAttribute_Failed_AttributeCannotB"
      "eRemoved\020\003\0225\n1k_RemoveItemAttribute_Fail"
      "ed_AttributeDoesntExist\020\004\"U\n\026CMsgClientT"
      "oGCNameItem\022\027\n\017subject_item_id\030\001 \001(\004\022\024\n\014"
      "tool_item_id\030\002 \001(\004\022\014\n\004name\030\003 \001(\t\"\275\002\n\036CMs"
      "gClientToGCNameItemResponse\022\\\n\010response\030"
      "\001 \001(\01624.proto.dota.CMsgClientToGCNameIte"
      "mResponse.ENameItem:\024k_NameItem_Succeede"
      "d\022\017\n\007item_id\030\002 \001(\004\"\253\001\n\tENameItem\022\030\n\024k_Na"
      "meItem_Succeeded\020\000\022\025\n\021k_NameItem_Failed\020"
      "\001\022#\n\037k_NameItem_Failed_ToolIsInvalid\020\002\022#"
      "\n\037k_NameItem_Failed_ItemIsInvalid\020\003\022#\n\037k"
      "_NameItem_Failed_NameIsInvalid\020\004\">\n\025CMsg"
      "GCSetItemPosition\022\017\n\007item_id\030\001 \001(\004\022\024\n\014ne"
      "w_position\030\002 \001(\r\"\355\001\n%CAttribute_ItemDyna"
      "micRecipeComponent\022\020\n\010item_def\030\001 \001(\r\022\024\n\014"
      "item_quality\030\002 \001(\r\022\022\n\nitem_flags\030\003 \001(\r\022\031"
      "\n\021attributes_string\030\004 \001(\t\022\022\n\nitem_count\030"
      "\005 \001(\r\022\027\n\017items_fulfilled\030\006 \001(\r\022\023\n\013item_r"
      "arity\030\007 \001(\r\022\020\n\010lootlist\030\010 \001(\t\022\031\n\021fulfill"
      "ed_item_id\030\t \001(\004\"\262\001\n\020CProtoItemSocket\022\017\n"
      "\007item_id\030\001 \001(\004\022\026\n\016attr_def_index\030\002 \001(\r\022\025"
      "\n\rrequired_type\030\003 \001(\r\022\025\n\rrequired_hero\030\004"
      " \001(\t\022\025\n\rgem_def_index\030\005 \001(\r\022\024\n\014not_trada"
      "ble\030\006 \001(\010\022\032\n\022required_item_slot\030\007 \001(\t\"F\n"
      "\026CProtoItemSocket_Empty\022,\n\006socket\030\001 \001(\0132"
      "\034.proto.dota.CProtoItemSocket\"W\n\027CProtoI"
      "temSocket_Effect\022,\n\006socket\030\001 \001(\0132\034.proto"
      ".dota.CProtoItemSocket\022\016\n\006effect\030\002 \001(\r\"p"
      "\n\026CProtoItemSocket_Color\022,\n\006socket\030\001 \001(\013"
      "2\034.proto.dota.CProtoItemSocket\022\013\n\003red\030\002 "
      "\001(\r\022\r\n\005green\030\003 \001(\r\022\014\n\004blue\030\004 \001(\r\"u\n\030CPro"
      "toItemSocket_Strange\022,\n\006socket\030\001 \001(\0132\034.p"
      "roto.dota.CProtoItemSocket\022\024\n\014strange_ty"
      "pe\030\002 \001(\r\022\025\n\rstrange_value\030\003 \001(\r\"\234\001\n\032CPro"
      "toItemSocket_Spectator\022,\n\006socket\030\001 \001(\0132\034"
      ".proto.dota.CProtoItemSocket\022\024\n\014games_vi"
      "ewed\030\002 \001(\r\022\026\n\016corporation_id\030\003 \001(\r\022\021\n\tle"
      "ague_id\030\004 \001(\r\022\017\n\007team_id\030\005 \001(\r\"f\n\036CProto"
      "ItemSocket_AssetModifier\022,\n\006socket\030\001 \001(\013"
      "2\034.proto.dota.CProtoItemSocket\022\026\n\016asset_"
      "modifier\030\002 \001(\r\"\262\001\n;CProtoItemSocket_Asse"
      "tModifier_DESERIALIZE_FROM_STRING_ONLY\022,"
      "\n\006socket\030\001 \001(\0132\034.proto.dota.CProtoItemSo"
      "cket\022\026\n\016asset_modifier\030\002 \001(\r\022\025\n\ranim_mod"
      "ifier\030\003 \001(\r\022\026\n\016ability_effect\030\004 \001(\r\"\214\001\n\032"
      "CProtoItemSocket_Autograph\022,\n\006socket\030\001 \001"
      "(\0132\034.proto.dota.CProtoItemSocket\022\021\n\tauto"
      "graph\030\002 \001(\t\022\024\n\014autograph_id\030\003 \001(\r\022\027\n\017aut"
      "ograph_score\030\004 \001(\r\"N\n\036CProtoItemSocket_S"
      "taticVisuals\022,\n\006socket\030\001 \001(\0132\034.proto.dot"
      "a.CProtoItemSocket\"\"\n\021CAttribute_String\022"
      "\r\n\005value\030\001 \001(\t\"m\n%CWorkshop_GetItemDaily"
      "Revenue_Request\022\r\n\005appid\030\001 \001(\r\022\017\n\007item_i"
      "d\030\002 \001(\r\022\022\n\ndate_start\030\003 \001(\r\022\020\n\010date_end\030"
      "\004 \001(\r\"\350\001\n&CWorkshop_GetItemDailyRevenue_"
      "Response\022_\n\017country_revenue\030\001 \003(\0132F.prot"
      "o.dota.CWorkshop_GetItemDailyRevenue_Res"
      "ponse.CountryDailyRevenue\032]\n\023CountryDail"
      "yRevenue\022\024\n\014country_code\030\001 \001(\t\022\014\n\004date\030\002"
      " \001(\r\022\023\n\013revenue_usd\030\003 \001(\003\022\r\n\005units\030\004 \001(\005"
      "\"c\n(CWorkshop_GetPackageDailyRevenue_Req"
      "uest\022\021\n\tpackageid\030\001 \001(\r\022\022\n\ndate_start\030\002 "
      "\001(\r\022\020\n\010date_end\030\003 \001(\r\"\356\001\n)CWorkshop_GetP"
      "ackageDailyRevenue_Response\022b\n\017country_r"
      "evenue\030\001 \003(\0132I.proto.dota.CWorkshop_GetP"
      "ackageDailyRevenue_Response.CountryDaily"
      "Revenue\032]\n\023CountryDailyRevenue\022\024\n\014countr"
      "y_code\030\001 \001(\t\022\014\n\004date\030\002 \001(\r\022\023\n\013revenue_us"
      "d\030\003 \001(\003\022\r\n\005units\030\004 \001(\005\"H\n\037CMsgSQLGCToGCG"
      "rantBackpackSlots\022\022\n\naccount_id\030\001 \001(\r\022\021\n"
      "\tadd_slots\030\002 \001(\r\"5\n\037CMsgClientToGCLookup"
      "AccountName\022\022\n\naccount_id\030\001 \001(\r\"S\n\'CMsgC"
      "lientToGCLookupAccountNameResponse\022\022\n\nac"
      "count_id\030\001 \001(\r\022\024\n\014account_name\030\002 \001(\t\"\250\001\n"
      " CMsgClientToGCCreateStaticRecipe\022@\n\005ite"
      "ms\030\001 \003(\01321.proto.dota.CMsgClientToGCCrea"
      "teStaticRecipe.Item\022\030\n\020recipe_def_index\030"
      "\002 \001(\r\032(\n\004Item\022\017\n\007item_id\030\001 \001(\004\022\017\n\007slot_i"
      "d\030\002 \001(\r\"\263\006\n(CMsgClientToGCCreateStaticRe"
      "cipeResponse\022c\n\010response\030\001 \001(\0162>.proto.d"
      "ota.CMsgClientToGCCreateStaticRecipeResp"
      "onse.EResponse:\021eResponse_Success\022U\n\014out"
      "put_items\030\002 \003(\0132\?.proto.dota.CMsgClientT"
      "oGCCreateStaticRecipeResponse.OutputItem"
      "\022U\n\014input_errors\030\003 \003(\0132\?.proto.dota.CMsg"
      "ClientToGCCreateStaticRecipeResponse.Inp"
      "utError\022a\n\022additional_outputs\030\004 \003(\0132E.pr"
      "oto.dota.CMsgClientToGCCreateStaticRecip"
      "eResponse.AdditionalOutput\032A\n\nOutputItem"
      "\022\021\n\tdef_index\030\001 \001(\r\022\017\n\007item_id\030\002 \001(\004\022\017\n\007"
      "slot_id\030\003 \001(\r\032\177\n\nInputError\022\017\n\007slot_id\030\001"
      " \001(\r\022`\n\005error\030\002 \001(\0162>.proto.dota.CMsgCli"
      "entToGCCreateStaticRecipeResponse.ERespo"
      "nse:\021eResponse_Success\0322\n\020AdditionalOutp"
      "ut\022\017\n\007slot_id\030\001 \001(\r\022\r\n\005value\030\002 \001(\004\"\230\001\n\tE"
      "Response\022\025\n\021eResponse_Success\020\000\022\036\n\032eResp"
      "onse_OfferingDisabled\020\001\022\032\n\026eResponse_Inv"
      "alidItems\020\002\022\033\n\027eResponse_InternalError\020\003"
      "\022\033\n\027eResponse_MissingLeague\020\004\"\346\003\n\033CMsgPr"
      "ocessTransactionOrder\022\016\n\006txn_id\030\001 \001(\004\022\024\n"
      "\014steam_txn_id\030\002 \001(\004\022\026\n\016partner_txn_id\030\003 "
      "\001(\004\022\020\n\010steam_id\030\004 \001(\006\022\022\n\ntime_stamp\030\005 \001("
      "\r\022\021\n\twatermark\030\006 \001(\004\022\036\n\026purchase_report_"
      "status\030\007 \001(\005\022\020\n\010currency\030\010 \001(\r\022;\n\005items\030"
      "\t \003(\0132,.proto.dota.CMsgProcessTransactio"
      "nOrder.Item\032\340\001\n\004Item\022\026\n\016item_def_index\030\001"
      " \001(\r\022\022\n\nitem_price\030\002 \001(\r\022\020\n\010quantity\030\003 \001"
      "(\r\022\025\n\rcategory_desc\030\004 \001(\t\022\033\n\023store_purch"
      "ase_type\030\005 \001(\r\022\033\n\023source_reference_id\030\006 "
      "\001(\004\022\032\n\022parent_stack_index\030\007 \001(\005\022\025\n\rdefau"
      "lt_price\030\010 \001(\010\022\026\n\016is_user_facing\030\t \001(\010\"u"
      "\n&CMsgGCToGCStoreProcessCDKeyTransaction"
      "\0226\n\005order\030\001 \001(\0132\'.proto.dota.CMsgProcess"
      "TransactionOrder\022\023\n\013reason_code\030\002 \001(\r\"A\n"
      ".CMsgGCToGCStoreProcessCDKeyTransactionR"
      "esponse\022\017\n\007success\030\001 \001(\010\"k\n CMsgGCToGCSt"
      "oreProcessSettlement\0226\n\005order\030\001 \001(\0132\'.pr"
      "oto.dota.CMsgProcessTransactionOrder\022\017\n\007"
      "partner\030\002 \001(\r\";\n(CMsgGCToGCStoreProcessS"
      "ettlementResponse\022\017\n\007success\030\001 \001(\010\"}\n!CM"
      "sgGCToGCBroadcastConsoleCommand\022\023\n\013con_c"
      "ommand\030\001 \001(\t\022\025\n\rreport_output\030\002 \001(\010\022\022\n\ns"
      "ending_gc\030\003 \001(\r\022\030\n\020output_initiator\030\004 \001("
      "\t\"\256\001\n\027CMsgGCToGCConsoleOutput\022\021\n\tinitiat"
      "or\030\001 \001(\t\022\022\n\nsending_gc\030\002 \001(\r\022<\n\004msgs\030\003 \003"
      "(\0132..proto.dota.CMsgGCToGCConsoleOutput."
      "OutputLine\032.\n\nOutputLine\022\014\n\004text\030\001 \001(\t\022\022"
      "\n\nspew_level\030\002 \001(\r\"\231\001\n\014CMsgItemAges\022K\n\026m"
      "ax_item_id_timestamps\030\001 \003(\0132+.proto.dota"
      ".CMsgItemAges.MaxItemIDTimestamp\032<\n\022MaxI"
      "temIDTimestamp\022\021\n\ttimestamp\030\001 \001(\r\022\023\n\013max"
      "_item_id\030\002 \001(\004\"\253\001\n\031CMsgGCToGCInternalTes"
      "tMsg\022\022\n\nsending_gc\030\001 \001(\r\022\021\n\tsender_id\030\002 "
      "\001(\006\022\017\n\007context\030\003 \001(\r\022\022\n\nmessage_id\030\004 \001(\r"
      "\022\024\n\014message_body\030\005 \001(\014\022\025\n\rjob_id_source\030"
      "\006 \001(\006\022\025\n\rjob_id_target\030\007 \001(\006\"\252\001\n%CMsgGCT"
      "oGCClientServerVersionsUpdated\022\"\n\032client"
      "_min_allowed_version\030\001 \001(\r\022\035\n\025client_act"
      "ive_version\030\002 \001(\r\022\035\n\025server_active_versi"
      "on\030\003 \001(\r\022\037\n\027server_deployed_version\030\004 \001("
      "\r*\2465\n\nEGCItemMsg\022\021\n\014k_EMsgGCBase\020\350\007\022\034\n\027k"
      "_EMsgGCSetItemPosition\020\351\007\022\023\n\016k_EMsgGCDel"
      "ete\020\354\007\022$\n\037k_EMsgGCVerifyCacheSubscriptio"
      "n\020\355\007\022\035\n\030k_EMsgClientToGCNameItem\020\356\007\022\026\n\021k"
      "_EMsgGCPaintItem\020\361\007\022\036\n\031k_EMsgGCPaintItem"
      "Response\020\362\007\022\"\n\035k_EMsgGCGoldenWrenchBroad"
      "cast\020\363\007\022\030\n\023k_EMsgGCMOTDRequest\020\364\007\022 \n\033k_E"
      "MsgGCMOTDRequestResponse\020\365\007\022\'\n\"k_EMsgGCA"
      "ddItemToSocket_DEPRECATED\020\366\007\022/\n*k_EMsgGC"
      "AddItemToSocketResponse_DEPRECATED\020\367\007\022+\n"
      "&k_EMsgGCAddSocketToBaseItem_DEPRECATED\020"
      "\370\007\022\'\n\"k_EMsgGCAddSocketToItem_DEPRECATED"
      "\020\371\007\022/\n*k_EMsgGCAddSocketToItemResponse_D"
      "EPRECATED\020\372\007\022\031\n\024k_EMsgGCNameBaseItem\020\373\007\022"
      "!\n\034k_EMsgGCNameBaseItemResponse\020\374\007\022(\n#k_"
      "EMsgGCRemoveSocketItem_DEPRECATED\020\375\007\0220\n+"
      "k_EMsgGCRemoveSocketItemResponse_DEPRECA"
      "TED\020\376\007\022!\n\034k_EMsgGCCustomizeItemTexture\020\377"
      "\007\022)\n$k_EMsgGCCustomizeItemTextureRespons"
      "e\020\200\010\022\033\n\026k_EMsgGCUseItemRequest\020\201\010\022\034\n\027k_E"
      "MsgGCUseItemResponse\020\202\010\022\030\n\023k_EMsgGCGifte"
      "dItems\020\203\010\022\033\n\026k_EMsgGCRemoveItemName\020\206\010\022\034"
      "\n\027k_EMsgGCRemoveItemPaint\020\207\010\022\036\n\031k_EMsgGC"
      "UnwrapGiftRequest\020\215\010\022\037\n\032k_EMsgGCUnwrapGi"
      "ftResponse\020\216\010\022$\n\037k_EMsgGCSetItemStyle_DE"
      "PRECATED\020\217\010\022\036\n\031k_EMsgGCUsedClaimCodeItem"
      "\020\220\010\022\026\n\021k_EMsgGCSortItems\020\221\010\022*\n%k_EMsgGC_"
      "RevolvingLootList_DEPRECATED\020\222\010\022\035\n\030k_EMs"
      "gGCUpdateItemSchema\020\231\010\022 \n\033k_EMsgGCRemove"
      "CustomTexture\020\233\010\022(\n#k_EMsgGCRemoveCustom"
      "TextureResponse\020\234\010\022\035\n\030k_EMsgGCRemoveMake"
      "rsMark\020\235\010\022%\n k_EMsgGCRemoveMakersMarkRes"
      "ponse\020\236\010\022#\n\036k_EMsgGCRemoveUniqueCraftInd"
      "ex\020\237\010\022+\n&k_EMsgGCRemoveUniqueCraftIndexR"
      "esponse\020\240\010\022\033\n\026k_EMsgGCSaxxyBroadcast\020\241\010\022"
      "!\n\034k_EMsgGCBackpackSortFinished\020\242\010\022$\n\037k_"
      "EMsgGCAdjustItemEquippedState\020\243\010\022\030\n\023k_EM"
      "sgGCCollectItem\020\245\010\022\035\n\030k_EMsgGCItemAcknow"
      "ledged\020\246\010\022)\n$k_EMsgGCPresets_SelectPrese"
      "tForClass\020\247\010\022$\n\037k_EMsgGCPresets_SetItemP"
      "osition\020\250\010\022.\n)k_EMsgGCPresets_SelectPres"
      "etForClassReply\020\253\010\022%\n k_EMsgClientToGCNa"
      "meItemResponse\020\254\010\022#\n\036k_EMsgGCApplyConsum"
      "ableEffects\020\255\010\022\036\n\031k_EMsgGCShowItemsPicke"
      "dUp\020\257\010\022&\n!k_EMsgGCClientDisplayNotificat"
      "ion\020\260\010\022\035\n\030k_EMsgGCApplyStrangePart\020\261\010\022(\n"
      "#k_EMsgGC_IncrementKillCountResponse\020\263\010\022"
      " \n\033k_EMsgGCApplyPennantUpgrade\020\264\010\022\035\n\030k_E"
      "MsgGCSetItemPositions\020\265\010\022)\n$k_EMsgGCSetI"
      "temPositions_RateLimited\020\310\010\022\034\n\027k_EMsgGCA"
      "pplyEggEssence\020\266\010\022#\n\036k_EMsgGCNameEggEsse"
      "nceResponse\020\267\010\022*\n%k_EMsgGCFulfillDynamic"
      "RecipeComponent\020\272\010\0222\n-k_EMsgGCFulfillDyn"
      "amicRecipeComponentResponse\020\273\010\022$\n\037k_EMsg"
      "GCClientRequestMarketData\020\274\010\022,\n\'k_EMsgGC"
      "ClientRequestMarketDataResponse\020\275\010\022\030\n\023k_"
      "EMsgGCExtractGems\020\276\010\022\026\n\021k_EMsgGCAddSocke"
      "t\020\277\010\022\034\n\027k_EMsgGCAddItemToSocket\020\300\010\022$\n\037k_"
      "EMsgGCAddItemToSocketResponse\020\301\010\022\036\n\031k_EM"
      "sgGCAddSocketResponse\020\302\010\022!\n\034k_EMsgGCRese"
      "tStrangeGemCount\020\303\010\022\036\n\031k_EMsgGCRequestCr"
      "ateItems\020\304\010\022&\n!k_EMsgGCRequestCrateItems"
      "Response\020\305\010\022 \n\033k_EMsgGCExtractGemsRespon"
      "se\020\306\010\022)\n$k_EMsgGCResetStrangeGemCountRes"
      "ponse\020\307\010\022!\n\034k_EMsgGCServerUseItemRequest"
      "\020\317\010\022\030\n\023k_EMsgGCAddGiftItem\020\320\010\022\"\n\035k_EMsgG"
      "CRemoveItemGiftMessage\020\321\010\022*\n%k_EMsgGCRem"
      "oveItemGiftMessageResponse\020\322\010\022&\n!k_EMsgG"
      "CRemoveItemGifterAccountId\020\323\010\022.\n)k_EMsgG"
      "CRemoveItemGifterAccountIdResponse\020\324\010\022/\n"
      "*k_EMsgClientToGCRemoveItemGifterAttribu"
      "tes\020\325\010\022#\n\036k_EMsgClientToGCRemoveItemName"
      "\020\326\010\022*\n%k_EMsgClientToGCRemoveItemDescrip"
      "tion\020\327\010\0220\n+k_EMsgClientToGCRemoveItemAtt"
      "ributeResponse\020\330\010\022\030\n\023k_EMsgGCTradingBase"
      "\020\334\013\022)\n$k_EMsgGCTrading_InitiateTradeRequ"
      "est\020\335\013\022*\n%k_EMsgGCTrading_InitiateTradeR"
      "esponse\020\336\013\022!\n\034k_EMsgGCTrading_StartSessi"
      "on\020\337\013\022\"\n\035k_EMsgGCTrading_SessionClosed\020\345"
      "\013\0221\n,k_EMsgGCTrading_InitiateTradeReques"
      "tResponse\020\352\013\022)\n$k_EMsgGCServerBrowser_Fa"
      "voriteServer\020\301\014\022*\n%k_EMsgGCServerBrowser"
      "_BlacklistServer\020\302\014\022\036\n\031k_EMsgGCServerRen"
      "talsBase\020\244\r\022\037\n\032k_EMsgGCDev_NewItemReques"
      "t\020\321\017\022\'\n\"k_EMsgGCDev_NewItemRequestRespon"
      "se\020\322\017\022\035\n\030k_EMsgGCStoreGetUserData\020\304\023\022%\n "
      "k_EMsgGCStoreGetUserDataResponse\020\305\023\022\"\n\035k"
      "_EMsgGCStorePurchaseFinalize\020\310\023\022*\n%k_EMs"
      "gGCStorePurchaseFinalizeResponse\020\311\023\022 \n\033k"
      "_EMsgGCStorePurchaseCancel\020\312\023\022(\n#k_EMsgG"
      "CStorePurchaseCancelResponse\020\313\023\022\036\n\031k_EMs"
      "gGCStorePurchaseInit\020\316\023\022&\n!k_EMsgGCStore"
      "PurchaseInitResponse\020\317\023\022\"\n\035k_EMsgGCBanne"
      "dWordListRequest\020\320\023\022#\n\036k_EMsgGCBannedWor"
      "dListResponse\020\321\023\022(\n#k_EMsgGCToGCBannedWo"
      "rdListBroadcast\020\322\023\022&\n!k_EMsgGCToGCBanned"
      "WordListUpdated\020\323\023\022\036\n\031k_EMsgGCToGCDirtyS"
      "DOCache\020\324\023\022&\n!k_EMsgGCToGCDirtyMultipleS"
      "DOCache\020\325\023\022\"\n\035k_EMsgGCToGCUpdateSQLKeyVa"
      "lue\020\326\023\022(\n#k_EMsgGCToGCBroadcastConsoleCo"
      "mmand\020\331\023\022!\n\034k_EMsgGCServerVersionUpdated"
      "\020\332\023\022\033\n\026k_EMsgGCApplyAutograph\020\333\023\022%\n k_EM"
      "sgGCToGCWebAPIAccountChanged\020\334\023\022!\n\034k_EMs"
      "gGCClientVersionUpdated\020\340\023\022+\n&k_EMsgGCIt"
      "emPurgatory_FinalizePurchase\020\343\023\0223\n.k_EMs"
      "gGCItemPurgatory_FinalizePurchaseRespons"
      "e\020\344\023\022)\n$k_EMsgGCItemPurgatory_RefundPurc"
      "hase\020\345\023\0221\n,k_EMsgGCItemPurgatory_RefundP"
      "urchaseResponse\020\346\023\022.\n)k_EMsgGCToGCPlayer"
      "StrangeCountAdjustments\020\347\023\022\"\n\035k_EMsgGCRe"
      "questStoreSalesData\020\350\023\022*\n%k_EMsgGCReques"
      "tStoreSalesDataResponse\020\351\023\0222\n-k_EMsgGCRe"
      "questStoreSalesDataUpToDateResponse\020\352\023\022\034"
      "\n\027k_EMsgGCToGCPingRequest\020\353\023\022\035\n\030k_EMsgGC"
      "ToGCPingResponse\020\354\023\022%\n k_EMsgGCToGCGetUs"
      "erSessionServer\020\355\023\022-\n(k_EMsgGCToGCGetUse"
      "rSessionServerResponse\020\356\023\022%\n k_EMsgGCToG"
      "CGetUserServerMembers\020\357\023\022-\n(k_EMsgGCToGC"
      "GetUserServerMembersResponse\020\360\023\022 \n\033k_EMs"
      "gGCToGCGetUserPCBangNo\020\361\023\022(\n#k_EMsgGCToG"
      "CGetUserPCBangNoResponse\020\362\023\022$\n\037k_EMsgGCT"
      "oGCCanUseDropRateBonus\020\363\023\022\036\n\031k_EMsgSQLAd"
      "dDropRateBonus\020\364\023\022\037\n\032k_EMsgGCToGCRefresh"
      "SOCache\020\365\023\022&\n!k_EMsgGCToGCApplyLocalizat"
      "ionDiff\020\366\023\022.\n)k_EMsgGCToGCApplyLocalizat"
      "ionDiffResponse\020\367\023\022(\n#k_EMsgGCToGCCheckA"
      "ccountTradeStatus\020\370\023\0220\n+k_EMsgGCToGCChec"
      "kAccountTradeStatusResponse\020\371\023\022(\n#k_EMsg"
      "GCToGCGrantAccountRolledItems\020\372\023\022+\n&k_EM"
      "sgGCToGCGrantSelfMadeItemToAccount\020\373\023\022\"\n"
      "\035k_EMsgGCPartnerBalanceRequest\020\375\023\022#\n\036k_E"
      "MsgGCPartnerBalanceResponse\020\376\023\022.\n)k_EMsg"
      "GCPartnerRechargeRedirectURLRequest\020\377\023\022/"
      "\n*k_EMsgGCPartnerRechargeRedirectURLResp"
      "onse\020\200\024\022\030\n\023k_EMsgGCStatueCraft\020\201\024\022\027\n\022k_E"
      "MsgGCRedeemCode\020\202\024\022\037\n\032k_EMsgGCRedeemCode"
      "Response\020\203\024\022(\n#k_EMsgGCToGCItemConsumpti"
      "onRollback\020\204\024\022\'\n\"k_EMsgClientToGCWrapAnd"
      "DeliverGift\020\205\024\022/\n*k_EMsgClientToGCWrapAn"
      "dDeliverGiftResponse\020\206\024\022)\n$k_EMsgClientT"
      "oGCUnpackBundleResponse\020\207\024\022.\n)k_EMsgGCTo"
      "ClientStoreTransactionCompleted\020\210\024\022\037\n\032k_"
      "EMsgClientToGCEquipItems\020\211\024\022\'\n\"k_EMsgCli"
      "entToGCEquipItemsResponse\020\212\024\022$\n\037k_EMsgCl"
      "ientToGCUnlockItemStyle\020\213\024\022,\n\'k_EMsgClie"
      "ntToGCUnlockItemStyleResponse\020\214\024\022-\n(k_EM"
      "sgClientToGCSetItemInventoryCategory\020\215\024\022"
      " \n\033k_EMsgClientToGCUnlockCrate\020\216\024\022(\n#k_E"
      "MsgClientToGCUnlockCrateResponse\020\217\024\022!\n\034k"
      "_EMsgClientToGCUnpackBundle\020\220\024\022!\n\034k_EMsg"
      "ClientToGCSetItemStyle\020\221\024\022)\n$k_EMsgClien"
      "tToGCSetItemStyleResponse\020\222\024\022&\n!k_EMsgSQ"
      "LGCToGCGrantBackpackSlots\020\224\024\022&\n!k_EMsgCl"
      "ientToGCLookupAccountName\020\225\024\022.\n)k_EMsgCl"
      "ientToGCLookupAccountNameResponse\020\226\024\022#\n\036"
      "k_EMsgGCToGCDevRevokeUserItems\020\227\024\022\'\n\"k_E"
      "MsgClientToGCCreateStaticRecipe\020\230\024\022/\n*k_"
      "EMsgClientToGCCreateStaticRecipeResponse"
      "\020\231\024\022-\n(k_EMsgGCToGCStoreProcessCDKeyTran"
      "saction\020\232\024\0225\n0k_EMsgGCToGCStoreProcessCD"
      "KeyTransactionResponse\020\233\024\022\'\n\"k_EMsgGCToG"
      "CStoreProcessSettlement\020\234\024\022/\n*k_EMsgGCTo"
      "GCStoreProcessSettlementResponse\020\235\024\022\036\n\031k"
      "_EMsgGCToGCConsoleOutput\020\236\024\022\035\n\030k_EMsgGCT"
      "oClientItemAges\020\237\024\022 \n\033k_EMsgGCToGCIntern"
      "alTestMsg\020\240\024\022,\n\'k_EMsgGCToGCClientServer"
      "VersionsUpdated\020\241\024\022$\n\037k_EMsgGCUseMultipl"
      "eItemsRequest\020\242\024\022%\n k_EMsgGCCheckAccount"
      "Subscription\020\243\024\022-\n(k_EMsgGCCheckAccountS"
      "ubscriptionResponse\020\244\024\022*\n%k_EMsgGCToGCAc"
      "countSubscriptionChange\020\245\024*\363\002\n\037EItemPurg"
      "atoryResponse_Finalize\022.\n*k_ItemPurgator"
      "yResponse_Finalize_Succeeded\020\000\0226\n2k_Item"
      "PurgatoryResponse_Finalize_Failed_Incomp"
      "lete\020\001\022\?\n;k_ItemPurgatoryResponse_Finali"
      "ze_Failed_ItemsNotInPurgatory\020\002\022=\n9k_Ite"
      "mPurgatoryResponse_Finalize_Failed_Could"
      "NotFindItems\020\003\0225\n1k_ItemPurgatoryRespons"
      "e_Finalize_Failed_NoSOCache\020\004\0221\n-k_ItemP"
      "urgatoryResponse_Finalize_BackpackFull\020\005"
      "*\347\002\n\035EItemPurgatoryResponse_Refund\022,\n(k_"
      "ItemPurgatoryResponse_Refund_Succeeded\020\000"
      "\022<\n8k_ItemPurgatoryResponse_Refund_Faile"
      "d_ItemNotInPurgatory\020\001\022:\n6k_ItemPurgator"
      "yResponse_Refund_Failed_CouldNotFindItem"
      "\020\002\0223\n/k_ItemPurgatoryResponse_Refund_Fai"
      "led_NoSOCache\020\003\0222\n.k_ItemPurgatoryRespon"
      "se_Refund_Failed_NoDetail\020\004\0225\n1k_ItemPur"
      "gatoryResponse_Refund_Failed_NexonWebAPI"
      "\020\005*\271\n\n\033EGCMsgInitiateTradeResponse\022*\n&k_"
      "EGCMsgInitiateTradeResponse_Accepted\020\000\022*"
      "\n&k_EGCMsgInitiateTradeResponse_Declined"
      "\020\001\0226\n2k_EGCMsgInitiateTradeResponse_VAC_"
      "Banned_Initiator\020\002\0223\n/k_EGCMsgInitiateTr"
      "adeResponse_VAC_Banned_Target\020\003\0228\n4k_EGC"
      "MsgInitiateTradeResponse_Target_Already_"
      "Trading\020\004\022*\n&k_EGCMsgInitiateTradeRespon"
      "se_Disabled\020\005\022-\n)k_EGCMsgInitiateTradeRe"
      "sponse_NotLoggedIn\020\006\022(\n$k_EGCMsgInitiate"
      "TradeResponse_Cancel\020\007\022)\n%k_EGCMsgInitia"
      "teTradeResponse_TooSoon\020\010\0220\n,k_EGCMsgIni"
      "tiateTradeResponse_TooSoonPenalty\020\t\0228\n4k"
      "_EGCMsgInitiateTradeResponse_Trade_Banne"
      "d_Initiator\020\n\0225\n1k_EGCMsgInitiateTradeRe"
      "sponse_Trade_Banned_Target\020\013\022C\n\?k_EGCMsg"
      "InitiateTradeResponse_Free_Account_Initi"
      "ator_DEPRECATED\020\014\022:\n6k_EGCMsgInitiateTra"
      "deResponse_Shared_Account_Initiator\020\r\0225\n"
      "1k_EGCMsgInitiateTradeResponse_Service_U"
      "navailable\020\016\0220\n,k_EGCMsgInitiateTradeRes"
      "ponse_Target_Blocked\020\017\0223\n/k_EGCMsgInitia"
      "teTradeResponse_NeedVerifiedEmail\020\020\0220\n,k"
      "_EGCMsgInitiateTradeResponse_NeedSteamGu"
      "ard\020\021\0224\n0k_EGCMsgInitiateTradeResponse_S"
      "teamGuardDuration\020\022\0221\n-k_EGCMsgInitiateT"
      "radeResponse_TheyCannotTrade\020\023\0227\n3k_EGCM"
      "sgInitiateTradeResponse_Recent_Password_"
      "Reset\020\024\0222\n.k_EGCMsgInitiateTradeResponse"
      "_Using_New_Device\020\025\0225\n1k_EGCMsgInitiateT"
      "radeResponse_Sent_Invalid_Cookie\020\026\0221\n-k_"
      "EGCMsgInitiateTradeResponse_TooRecentFri"
      "end\020\027\0227\n3k_EGCMsgInitiateTradeResponse_W"
      "alledFundsNotTrusted\020\030B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 23629);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "econ_gcmessages.proto", &protobuf_RegisterTypes);
  ::proto::dota::protobuf_steammessages_2eproto::AddDescriptors();
  ::proto::dota::protobuf_econ_5fshared_5fenums_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_econ_5fgcmessages_2eproto

const ::google::protobuf::EnumDescriptor* CMsgRequestCrateItemsResponse_EResult_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[0];
}
bool CMsgRequestCrateItemsResponse_EResult_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse::k_Succeeded;
const CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse::k_Failed;
const CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse::EResult_MIN;
const CMsgRequestCrateItemsResponse_EResult CMsgRequestCrateItemsResponse::EResult_MAX;
const int CMsgRequestCrateItemsResponse::EResult_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgRedeemCodeResponse_EResultCode_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[1];
}
bool CMsgRedeemCodeResponse_EResultCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::k_Succeeded;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::k_Failed_CodeNotFound;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::k_Failed_CodeAlreadyUsed;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::k_Failed_OtherError;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::EResultCode_MIN;
const CMsgRedeemCodeResponse_EResultCode CMsgRedeemCodeResponse::EResultCode_MAX;
const int CMsgRedeemCodeResponse::EResultCode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[2];
}
bool CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState CMsgGCCheckAccountSubscriptionResponse::STATE_UNKNOWN;
const CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState CMsgGCCheckAccountSubscriptionResponse::STATE_INACTIVE;
const CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState CMsgGCCheckAccountSubscriptionResponse::STATE_ACTIVE;
const CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState CMsgGCCheckAccountSubscriptionResponse::ESubscriptionState_MIN;
const CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState CMsgGCCheckAccountSubscriptionResponse::ESubscriptionState_MAX;
const int CMsgGCCheckAccountSubscriptionResponse::ESubscriptionState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgClientToGCUnpackBundleResponse_EUnpackBundle_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[3];
}
bool CMsgClientToGCUnpackBundleResponse_EUnpackBundle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Succeeded;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_ItemIsNotBundle;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_UnableToCreateContainedItem;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_SOCacheError;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_ItemIsInvalid;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_BadItemQuantity;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::k_UnpackBundle_Failed_UnableToDeleteItem;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::EUnpackBundle_MIN;
const CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::EUnpackBundle_MAX;
const int CMsgClientToGCUnpackBundleResponse::EUnpackBundle_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgClientToGCSetItemStyleResponse_ESetStyle_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[4];
}
bool CMsgClientToGCSetItemStyleResponse_ESetStyle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::k_SetStyle_Succeeded;
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::k_SetStyle_Failed;
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::k_SetStyle_Failed_StyleIsLocked;
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::ESetStyle_MIN;
const CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::ESetStyle_MAX;
const int CMsgClientToGCSetItemStyleResponse::ESetStyle_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[5];
}
bool CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Succeeded;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_PreReq;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantAfford;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantCommit;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantLockCache;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantAffordAttrib;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_CantAffordGem;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_NoCompendiumLevel;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_AlreadyUnlocked;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_OtherError;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_ItemIsInvalid;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::k_UnlockStyle_Failed_ToolIsInvalid;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::EUnlockStyle_MIN;
const CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::EUnlockStyle_MAX;
const int CMsgClientToGCUnlockItemStyleResponse::EUnlockStyle_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[6];
}
bool CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Succeeded;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Failed;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Failed_ItemIsInvalid;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Failed_AttributeCannotBeRemoved;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::k_RemoveItemAttribute_Failed_AttributeDoesntExist;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::ERemoveItemAttribute_MIN;
const CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::ERemoveItemAttribute_MAX;
const int CMsgClientToGCRemoveItemAttributeResponse::ERemoveItemAttribute_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgClientToGCNameItemResponse_ENameItem_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[7];
}
bool CMsgClientToGCNameItemResponse_ENameItem_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Succeeded;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Failed;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Failed_ToolIsInvalid;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Failed_ItemIsInvalid;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::k_NameItem_Failed_NameIsInvalid;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::ENameItem_MIN;
const CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::ENameItem_MAX;
const int CMsgClientToGCNameItemResponse::ENameItem_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* CMsgClientToGCCreateStaticRecipeResponse_EResponse_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[8];
}
bool CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_Success;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_OfferingDisabled;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_InvalidItems;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_InternalError;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::eResponse_MissingLeague;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::EResponse_MIN;
const CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::EResponse_MAX;
const int CMsgClientToGCCreateStaticRecipeResponse::EResponse_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EGCItemMsg_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[9];
}
bool EGCItemMsg_IsValid(int value) {
  switch (value) {
    case 1000:
    case 1001:
    case 1004:
    case 1005:
    case 1006:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
    case 1013:
    case 1014:
    case 1015:
    case 1016:
    case 1017:
    case 1018:
    case 1019:
    case 1020:
    case 1021:
    case 1022:
    case 1023:
    case 1024:
    case 1025:
    case 1026:
    case 1027:
    case 1030:
    case 1031:
    case 1037:
    case 1038:
    case 1039:
    case 1040:
    case 1041:
    case 1042:
    case 1049:
    case 1051:
    case 1052:
    case 1053:
    case 1054:
    case 1055:
    case 1056:
    case 1057:
    case 1058:
    case 1059:
    case 1061:
    case 1062:
    case 1063:
    case 1064:
    case 1067:
    case 1068:
    case 1069:
    case 1071:
    case 1072:
    case 1073:
    case 1075:
    case 1076:
    case 1077:
    case 1078:
    case 1079:
    case 1082:
    case 1083:
    case 1084:
    case 1085:
    case 1086:
    case 1087:
    case 1088:
    case 1089:
    case 1090:
    case 1091:
    case 1092:
    case 1093:
    case 1094:
    case 1095:
    case 1096:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1509:
    case 1514:
    case 1601:
    case 1602:
    case 1700:
    case 2001:
    case 2002:
    case 2500:
    case 2501:
    case 2504:
    case 2505:
    case 2506:
    case 2507:
    case 2510:
    case 2511:
    case 2512:
    case 2513:
    case 2514:
    case 2515:
    case 2516:
    case 2517:
    case 2518:
    case 2521:
    case 2522:
    case 2523:
    case 2524:
    case 2528:
    case 2531:
    case 2532:
    case 2533:
    case 2534:
    case 2535:
    case 2536:
    case 2537:
    case 2538:
    case 2539:
    case 2540:
    case 2541:
    case 2542:
    case 2543:
    case 2544:
    case 2545:
    case 2546:
    case 2547:
    case 2548:
    case 2549:
    case 2550:
    case 2551:
    case 2552:
    case 2553:
    case 2554:
    case 2555:
    case 2557:
    case 2558:
    case 2559:
    case 2560:
    case 2561:
    case 2562:
    case 2563:
    case 2564:
    case 2565:
    case 2566:
    case 2567:
    case 2568:
    case 2569:
    case 2570:
    case 2571:
    case 2572:
    case 2573:
    case 2574:
    case 2575:
    case 2576:
    case 2577:
    case 2578:
    case 2580:
    case 2581:
    case 2582:
    case 2583:
    case 2584:
    case 2585:
    case 2586:
    case 2587:
    case 2588:
    case 2589:
    case 2590:
    case 2591:
    case 2592:
    case 2593:
    case 2594:
    case 2595:
    case 2596:
    case 2597:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EItemPurgatoryResponse_Finalize_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[10];
}
bool EItemPurgatoryResponse_Finalize_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EItemPurgatoryResponse_Refund_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[11];
}
bool EItemPurgatoryResponse_Refund_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EGCMsgInitiateTradeResponse_descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_enum_descriptors[12];
}
bool EGCMsgInitiateTradeResponse_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgApplyAutograph::kAutographItemIdFieldNumber;
const int CMsgApplyAutograph::kItemItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgApplyAutograph::CMsgApplyAutograph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgApplyAutograph)
}
CMsgApplyAutograph::CMsgApplyAutograph(const CMsgApplyAutograph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&autograph_item_id_, &from.autograph_item_id_,
    reinterpret_cast<char*>(&item_item_id_) -
    reinterpret_cast<char*>(&autograph_item_id_) + sizeof(item_item_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgApplyAutograph)
}

void CMsgApplyAutograph::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&autograph_item_id_, 0, reinterpret_cast<char*>(&item_item_id_) -
    reinterpret_cast<char*>(&autograph_item_id_) + sizeof(item_item_id_));
}

CMsgApplyAutograph::~CMsgApplyAutograph() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgApplyAutograph)
  SharedDtor();
}

void CMsgApplyAutograph::SharedDtor() {
}

void CMsgApplyAutograph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgApplyAutograph::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgApplyAutograph& CMsgApplyAutograph::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgApplyAutograph* CMsgApplyAutograph::New(::google::protobuf::Arena* arena) const {
  CMsgApplyAutograph* n = new CMsgApplyAutograph;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgApplyAutograph::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgApplyAutograph)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&autograph_item_id_, 0, reinterpret_cast<char*>(&item_item_id_) -
      reinterpret_cast<char*>(&autograph_item_id_) + sizeof(item_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgApplyAutograph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgApplyAutograph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 autograph_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_autograph_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &autograph_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgApplyAutograph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgApplyAutograph)
  return false;
#undef DO_
}

void CMsgApplyAutograph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgApplyAutograph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 autograph_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->autograph_item_id(), output);
  }

  // optional uint64 item_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgApplyAutograph)
}

::google::protobuf::uint8* CMsgApplyAutograph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgApplyAutograph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 autograph_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->autograph_item_id(), target);
  }

  // optional uint64 item_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgApplyAutograph)
  return target;
}

size_t CMsgApplyAutograph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgApplyAutograph)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 autograph_item_id = 1;
    if (has_autograph_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->autograph_item_id());
    }

    // optional uint64 item_item_id = 2;
    if (has_item_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgApplyAutograph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgApplyAutograph)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgApplyAutograph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgApplyAutograph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgApplyAutograph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgApplyAutograph)
    MergeFrom(*source);
  }
}

void CMsgApplyAutograph::MergeFrom(const CMsgApplyAutograph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgApplyAutograph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      autograph_item_id_ = from.autograph_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_item_id_ = from.item_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgApplyAutograph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgApplyAutograph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgApplyAutograph::CopyFrom(const CMsgApplyAutograph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgApplyAutograph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgApplyAutograph::IsInitialized() const {
  return true;
}

void CMsgApplyAutograph::Swap(CMsgApplyAutograph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgApplyAutograph::InternalSwap(CMsgApplyAutograph* other) {
  std::swap(autograph_item_id_, other->autograph_item_id_);
  std::swap(item_item_id_, other->item_item_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgApplyAutograph::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgApplyAutograph

// optional uint64 autograph_item_id = 1;
bool CMsgApplyAutograph::has_autograph_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgApplyAutograph::set_has_autograph_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgApplyAutograph::clear_has_autograph_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgApplyAutograph::clear_autograph_item_id() {
  autograph_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_autograph_item_id();
}
::google::protobuf::uint64 CMsgApplyAutograph::autograph_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgApplyAutograph.autograph_item_id)
  return autograph_item_id_;
}
void CMsgApplyAutograph::set_autograph_item_id(::google::protobuf::uint64 value) {
  set_has_autograph_item_id();
  autograph_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgApplyAutograph.autograph_item_id)
}

// optional uint64 item_item_id = 2;
bool CMsgApplyAutograph::has_item_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgApplyAutograph::set_has_item_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgApplyAutograph::clear_has_item_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgApplyAutograph::clear_item_item_id() {
  item_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_item_id();
}
::google::protobuf::uint64 CMsgApplyAutograph::item_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgApplyAutograph.item_item_id)
  return item_item_id_;
}
void CMsgApplyAutograph::set_item_item_id(::google::protobuf::uint64 value) {
  set_has_item_item_id();
  item_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgApplyAutograph.item_item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAdjustItemEquippedState::kItemIdFieldNumber;
const int CMsgAdjustItemEquippedState::kNewClassFieldNumber;
const int CMsgAdjustItemEquippedState::kNewSlotFieldNumber;
const int CMsgAdjustItemEquippedState::kStyleIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAdjustItemEquippedState::CMsgAdjustItemEquippedState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgAdjustItemEquippedState)
}
CMsgAdjustItemEquippedState::CMsgAdjustItemEquippedState(const CMsgAdjustItemEquippedState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&style_index_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(style_index_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgAdjustItemEquippedState)
}

void CMsgAdjustItemEquippedState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&style_index_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(style_index_));
}

CMsgAdjustItemEquippedState::~CMsgAdjustItemEquippedState() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgAdjustItemEquippedState)
  SharedDtor();
}

void CMsgAdjustItemEquippedState::SharedDtor() {
}

void CMsgAdjustItemEquippedState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAdjustItemEquippedState::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAdjustItemEquippedState& CMsgAdjustItemEquippedState::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgAdjustItemEquippedState* CMsgAdjustItemEquippedState::New(::google::protobuf::Arena* arena) const {
  CMsgAdjustItemEquippedState* n = new CMsgAdjustItemEquippedState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAdjustItemEquippedState::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgAdjustItemEquippedState)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&style_index_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(style_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAdjustItemEquippedState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgAdjustItemEquippedState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_class = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_new_class();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_class_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_slot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_new_slot();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_slot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style_index = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_style_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgAdjustItemEquippedState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgAdjustItemEquippedState)
  return false;
#undef DO_
}

void CMsgAdjustItemEquippedState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgAdjustItemEquippedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 new_class = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->new_class(), output);
  }

  // optional uint32 new_slot = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->new_slot(), output);
  }

  // optional uint32 style_index = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->style_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgAdjustItemEquippedState)
}

::google::protobuf::uint8* CMsgAdjustItemEquippedState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgAdjustItemEquippedState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 new_class = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->new_class(), target);
  }

  // optional uint32 new_slot = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->new_slot(), target);
  }

  // optional uint32 style_index = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->style_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgAdjustItemEquippedState)
  return target;
}

size_t CMsgAdjustItemEquippedState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgAdjustItemEquippedState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 new_class = 2;
    if (has_new_class()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_class());
    }

    // optional uint32 new_slot = 3;
    if (has_new_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_slot());
    }

    // optional uint32 style_index = 4;
    if (has_style_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAdjustItemEquippedState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgAdjustItemEquippedState)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAdjustItemEquippedState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAdjustItemEquippedState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgAdjustItemEquippedState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgAdjustItemEquippedState)
    MergeFrom(*source);
  }
}

void CMsgAdjustItemEquippedState::MergeFrom(const CMsgAdjustItemEquippedState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgAdjustItemEquippedState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      new_class_ = from.new_class_;
    }
    if (cached_has_bits & 0x00000004u) {
      new_slot_ = from.new_slot_;
    }
    if (cached_has_bits & 0x00000008u) {
      style_index_ = from.style_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAdjustItemEquippedState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgAdjustItemEquippedState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAdjustItemEquippedState::CopyFrom(const CMsgAdjustItemEquippedState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgAdjustItemEquippedState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAdjustItemEquippedState::IsInitialized() const {
  return true;
}

void CMsgAdjustItemEquippedState::Swap(CMsgAdjustItemEquippedState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAdjustItemEquippedState::InternalSwap(CMsgAdjustItemEquippedState* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(new_class_, other->new_class_);
  std::swap(new_slot_, other->new_slot_);
  std::swap(style_index_, other->style_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAdjustItemEquippedState::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAdjustItemEquippedState

// optional uint64 item_id = 1;
bool CMsgAdjustItemEquippedState::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAdjustItemEquippedState::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAdjustItemEquippedState::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAdjustItemEquippedState::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgAdjustItemEquippedState::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAdjustItemEquippedState.item_id)
  return item_id_;
}
void CMsgAdjustItemEquippedState::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAdjustItemEquippedState.item_id)
}

// optional uint32 new_class = 2;
bool CMsgAdjustItemEquippedState::has_new_class() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAdjustItemEquippedState::set_has_new_class() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAdjustItemEquippedState::clear_has_new_class() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAdjustItemEquippedState::clear_new_class() {
  new_class_ = 0u;
  clear_has_new_class();
}
::google::protobuf::uint32 CMsgAdjustItemEquippedState::new_class() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAdjustItemEquippedState.new_class)
  return new_class_;
}
void CMsgAdjustItemEquippedState::set_new_class(::google::protobuf::uint32 value) {
  set_has_new_class();
  new_class_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAdjustItemEquippedState.new_class)
}

// optional uint32 new_slot = 3;
bool CMsgAdjustItemEquippedState::has_new_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgAdjustItemEquippedState::set_has_new_slot() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgAdjustItemEquippedState::clear_has_new_slot() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgAdjustItemEquippedState::clear_new_slot() {
  new_slot_ = 0u;
  clear_has_new_slot();
}
::google::protobuf::uint32 CMsgAdjustItemEquippedState::new_slot() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAdjustItemEquippedState.new_slot)
  return new_slot_;
}
void CMsgAdjustItemEquippedState::set_new_slot(::google::protobuf::uint32 value) {
  set_has_new_slot();
  new_slot_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAdjustItemEquippedState.new_slot)
}

// optional uint32 style_index = 4;
bool CMsgAdjustItemEquippedState::has_style_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgAdjustItemEquippedState::set_has_style_index() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgAdjustItemEquippedState::clear_has_style_index() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgAdjustItemEquippedState::clear_style_index() {
  style_index_ = 0u;
  clear_has_style_index();
}
::google::protobuf::uint32 CMsgAdjustItemEquippedState::style_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgAdjustItemEquippedState.style_index)
  return style_index_;
}
void CMsgAdjustItemEquippedState::set_style_index(::google::protobuf::uint32 value) {
  set_has_style_index();
  style_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgAdjustItemEquippedState.style_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::kEventTypeFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::kItemIdFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::kAdjustmentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}
CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&adjustment_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(adjustment_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&adjustment_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(adjustment_));
}

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::~CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  SharedDtor();
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SharedDtor() {
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::New(::google::protobuf::Arena* arena) const {
  CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* n = new CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&adjustment_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(adjustment_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 event_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_event_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &event_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 adjustment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_adjustment();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &adjustment_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return false;
#undef DO_
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 event_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->event_type(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 adjustment = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->adjustment(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
}

::google::protobuf::uint8* CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 event_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->event_type(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 adjustment = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->adjustment(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  return target;
}

size_t CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 event_type = 1;
    if (has_event_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->event_type());
    }

    // optional uint32 adjustment = 3;
    if (has_adjustment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->adjustment());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
    MergeFrom(*source);
  }
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::MergeFrom(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      event_type_ = from.event_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      adjustment_ = from.adjustment_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::CopyFrom(const CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::IsInitialized() const {
  return true;
}

void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::Swap(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::InternalSwap(CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(event_type_, other->event_type_);
  std::swap(adjustment_, other->adjustment_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment

// optional uint32 event_type = 1;
bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::has_event_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::set_has_event_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::clear_event_type() {
  event_type_ = 0u;
  clear_has_event_type();
}
::google::protobuf::uint32 CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::event_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment.event_type)
  return event_type_;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::set_event_type(::google::protobuf::uint32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment.event_type)
}

// optional uint64 item_id = 2;
bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment.item_id)
  return item_id_;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment.item_id)
}

// optional uint32 adjustment = 3;
bool CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::has_adjustment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::set_has_adjustment() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::clear_has_adjustment() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::clear_adjustment() {
  adjustment_ = 0u;
  clear_has_adjustment();
}
::google::protobuf::uint32 CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::adjustment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment.adjustment)
  return adjustment_;
}
void CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment::set_adjustment(::google::protobuf::uint32 value) {
  set_has_adjustment();
  adjustment_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment.adjustment)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgEconPlayerStrangeCountAdjustment::kAccountIdFieldNumber;
const int CMsgEconPlayerStrangeCountAdjustment::kStrangeCountAdjustmentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgEconPlayerStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
}
CMsgEconPlayerStrangeCountAdjustment::CMsgEconPlayerStrangeCountAdjustment(const CMsgEconPlayerStrangeCountAdjustment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      strange_count_adjustments_(from.strange_count_adjustments_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
}

void CMsgEconPlayerStrangeCountAdjustment::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
}

CMsgEconPlayerStrangeCountAdjustment::~CMsgEconPlayerStrangeCountAdjustment() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  SharedDtor();
}

void CMsgEconPlayerStrangeCountAdjustment::SharedDtor() {
}

void CMsgEconPlayerStrangeCountAdjustment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgEconPlayerStrangeCountAdjustment::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgEconPlayerStrangeCountAdjustment& CMsgEconPlayerStrangeCountAdjustment::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgEconPlayerStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment::New(::google::protobuf::Arena* arena) const {
  CMsgEconPlayerStrangeCountAdjustment* n = new CMsgEconPlayerStrangeCountAdjustment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgEconPlayerStrangeCountAdjustment::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  strange_count_adjustments_.Clear();
  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgEconPlayerStrangeCountAdjustment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_strange_count_adjustments()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  return false;
#undef DO_
}

void CMsgEconPlayerStrangeCountAdjustment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // repeated .proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  for (unsigned int i = 0, n = this->strange_count_adjustments_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->strange_count_adjustments(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
}

::google::protobuf::uint8* CMsgEconPlayerStrangeCountAdjustment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // repeated .proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  for (unsigned int i = 0, n = this->strange_count_adjustments_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->strange_count_adjustments(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  return target;
}

size_t CMsgEconPlayerStrangeCountAdjustment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
  {
    unsigned int count = this->strange_count_adjustments_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->strange_count_adjustments(i));
    }
  }

  // optional uint32 account_id = 1;
  if (has_account_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgEconPlayerStrangeCountAdjustment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgEconPlayerStrangeCountAdjustment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgEconPlayerStrangeCountAdjustment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
    MergeFrom(*source);
  }
}

void CMsgEconPlayerStrangeCountAdjustment::MergeFrom(const CMsgEconPlayerStrangeCountAdjustment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  strange_count_adjustments_.MergeFrom(from.strange_count_adjustments_);
  if (from.has_account_id()) {
    set_account_id(from.account_id());
  }
}

void CMsgEconPlayerStrangeCountAdjustment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgEconPlayerStrangeCountAdjustment::CopyFrom(const CMsgEconPlayerStrangeCountAdjustment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgEconPlayerStrangeCountAdjustment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgEconPlayerStrangeCountAdjustment::IsInitialized() const {
  return true;
}

void CMsgEconPlayerStrangeCountAdjustment::Swap(CMsgEconPlayerStrangeCountAdjustment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgEconPlayerStrangeCountAdjustment::InternalSwap(CMsgEconPlayerStrangeCountAdjustment* other) {
  strange_count_adjustments_.InternalSwap(&other->strange_count_adjustments_);
  std::swap(account_id_, other->account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgEconPlayerStrangeCountAdjustment::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgEconPlayerStrangeCountAdjustment

// optional uint32 account_id = 1;
bool CMsgEconPlayerStrangeCountAdjustment::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgEconPlayerStrangeCountAdjustment::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgEconPlayerStrangeCountAdjustment::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgEconPlayerStrangeCountAdjustment::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgEconPlayerStrangeCountAdjustment::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEconPlayerStrangeCountAdjustment.account_id)
  return account_id_;
}
void CMsgEconPlayerStrangeCountAdjustment::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEconPlayerStrangeCountAdjustment.account_id)
}

// repeated .proto.dota.CMsgEconPlayerStrangeCountAdjustment.CStrangeCountAdjustment strange_count_adjustments = 2;
int CMsgEconPlayerStrangeCountAdjustment::strange_count_adjustments_size() const {
  return strange_count_adjustments_.size();
}
void CMsgEconPlayerStrangeCountAdjustment::clear_strange_count_adjustments() {
  strange_count_adjustments_.Clear();
}
const ::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment& CMsgEconPlayerStrangeCountAdjustment::strange_count_adjustments(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEconPlayerStrangeCountAdjustment.strange_count_adjustments)
  return strange_count_adjustments_.Get(index);
}
::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment::mutable_strange_count_adjustments(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgEconPlayerStrangeCountAdjustment.strange_count_adjustments)
  return strange_count_adjustments_.Mutable(index);
}
::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment* CMsgEconPlayerStrangeCountAdjustment::add_strange_count_adjustments() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgEconPlayerStrangeCountAdjustment.strange_count_adjustments)
  return strange_count_adjustments_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment >*
CMsgEconPlayerStrangeCountAdjustment::mutable_strange_count_adjustments() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgEconPlayerStrangeCountAdjustment.strange_count_adjustments)
  return &strange_count_adjustments_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEconPlayerStrangeCountAdjustment_CStrangeCountAdjustment >&
CMsgEconPlayerStrangeCountAdjustment::strange_count_adjustments() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgEconPlayerStrangeCountAdjustment.strange_count_adjustments)
  return strange_count_adjustments_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestItemPurgatory_FinalizePurchase::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestItemPurgatory_FinalizePurchase::CMsgRequestItemPurgatory_FinalizePurchase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
}
CMsgRequestItemPurgatory_FinalizePurchase::CMsgRequestItemPurgatory_FinalizePurchase(const CMsgRequestItemPurgatory_FinalizePurchase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
}

void CMsgRequestItemPurgatory_FinalizePurchase::SharedCtor() {
  _cached_size_ = 0;
}

CMsgRequestItemPurgatory_FinalizePurchase::~CMsgRequestItemPurgatory_FinalizePurchase() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  SharedDtor();
}

void CMsgRequestItemPurgatory_FinalizePurchase::SharedDtor() {
}

void CMsgRequestItemPurgatory_FinalizePurchase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_FinalizePurchase::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRequestItemPurgatory_FinalizePurchase& CMsgRequestItemPurgatory_FinalizePurchase::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgRequestItemPurgatory_FinalizePurchase* CMsgRequestItemPurgatory_FinalizePurchase::New(::google::protobuf::Arena* arena) const {
  CMsgRequestItemPurgatory_FinalizePurchase* n = new CMsgRequestItemPurgatory_FinalizePurchase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgRequestItemPurgatory_FinalizePurchase::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  item_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRequestItemPurgatory_FinalizePurchase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  return false;
#undef DO_
}

void CMsgRequestItemPurgatory_FinalizePurchase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_FinalizePurchase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  return target;
}

size_t CMsgRequestItemPurgatory_FinalizePurchase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint64 item_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestItemPurgatory_FinalizePurchase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_FinalizePurchase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRequestItemPurgatory_FinalizePurchase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_FinalizePurchase::MergeFrom(const CMsgRequestItemPurgatory_FinalizePurchase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
}

void CMsgRequestItemPurgatory_FinalizePurchase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_FinalizePurchase::CopyFrom(const CMsgRequestItemPurgatory_FinalizePurchase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_FinalizePurchase::IsInitialized() const {
  return true;
}

void CMsgRequestItemPurgatory_FinalizePurchase::Swap(CMsgRequestItemPurgatory_FinalizePurchase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestItemPurgatory_FinalizePurchase::InternalSwap(CMsgRequestItemPurgatory_FinalizePurchase* other) {
  item_ids_.InternalSwap(&other->item_ids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_FinalizePurchase::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgRequestItemPurgatory_FinalizePurchase

// repeated uint64 item_ids = 1;
int CMsgRequestItemPurgatory_FinalizePurchase::item_ids_size() const {
  return item_ids_.size();
}
void CMsgRequestItemPurgatory_FinalizePurchase::clear_item_ids() {
  item_ids_.Clear();
}
::google::protobuf::uint64 CMsgRequestItemPurgatory_FinalizePurchase::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase.item_ids)
  return item_ids_.Get(index);
}
void CMsgRequestItemPurgatory_FinalizePurchase::set_item_ids(int index, ::google::protobuf::uint64 value) {
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase.item_ids)
}
void CMsgRequestItemPurgatory_FinalizePurchase::add_item_ids(::google::protobuf::uint64 value) {
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase.item_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgRequestItemPurgatory_FinalizePurchase::item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase.item_ids)
  return item_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgRequestItemPurgatory_FinalizePurchase::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgRequestItemPurgatory_FinalizePurchase.item_ids)
  return &item_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestItemPurgatory_FinalizePurchaseResponse::kResultFieldNumber;
const int CMsgRequestItemPurgatory_FinalizePurchaseResponse::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestItemPurgatory_FinalizePurchaseResponse::CMsgRequestItemPurgatory_FinalizePurchaseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}
CMsgRequestItemPurgatory_FinalizePurchaseResponse::CMsgRequestItemPurgatory_FinalizePurchaseResponse(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
}

CMsgRequestItemPurgatory_FinalizePurchaseResponse::~CMsgRequestItemPurgatory_FinalizePurchaseResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  SharedDtor();
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SharedDtor() {
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_FinalizePurchaseResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRequestItemPurgatory_FinalizePurchaseResponse& CMsgRequestItemPurgatory_FinalizePurchaseResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgRequestItemPurgatory_FinalizePurchaseResponse* CMsgRequestItemPurgatory_FinalizePurchaseResponse::New(::google::protobuf::Arena* arena) const {
  CMsgRequestItemPurgatory_FinalizePurchaseResponse* n = new CMsgRequestItemPurgatory_FinalizePurchaseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  item_ids_.Clear();
  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 item_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return false;
#undef DO_
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_FinalizePurchaseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // repeated uint64 item_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  return target;
}

size_t CMsgRequestItemPurgatory_FinalizePurchaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint64 item_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  // optional uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_FinalizePurchaseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRequestItemPurgatory_FinalizePurchaseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::MergeFrom(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::CopyFrom(const CMsgRequestItemPurgatory_FinalizePurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_FinalizePurchaseResponse::IsInitialized() const {
  return true;
}

void CMsgRequestItemPurgatory_FinalizePurchaseResponse::Swap(CMsgRequestItemPurgatory_FinalizePurchaseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestItemPurgatory_FinalizePurchaseResponse::InternalSwap(CMsgRequestItemPurgatory_FinalizePurchaseResponse* other) {
  item_ids_.InternalSwap(&other->item_ids_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_FinalizePurchaseResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgRequestItemPurgatory_FinalizePurchaseResponse

// optional uint32 result = 1;
bool CMsgRequestItemPurgatory_FinalizePurchaseResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgRequestItemPurgatory_FinalizePurchaseResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgRequestItemPurgatory_FinalizePurchaseResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgRequestItemPurgatory_FinalizePurchaseResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
::google::protobuf::uint32 CMsgRequestItemPurgatory_FinalizePurchaseResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse.result)
  return result_;
}
void CMsgRequestItemPurgatory_FinalizePurchaseResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse.result)
}

// repeated uint64 item_ids = 2;
int CMsgRequestItemPurgatory_FinalizePurchaseResponse::item_ids_size() const {
  return item_ids_.size();
}
void CMsgRequestItemPurgatory_FinalizePurchaseResponse::clear_item_ids() {
  item_ids_.Clear();
}
::google::protobuf::uint64 CMsgRequestItemPurgatory_FinalizePurchaseResponse::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse.item_ids)
  return item_ids_.Get(index);
}
void CMsgRequestItemPurgatory_FinalizePurchaseResponse::set_item_ids(int index, ::google::protobuf::uint64 value) {
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse.item_ids)
}
void CMsgRequestItemPurgatory_FinalizePurchaseResponse::add_item_ids(::google::protobuf::uint64 value) {
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse.item_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgRequestItemPurgatory_FinalizePurchaseResponse::item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse.item_ids)
  return item_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgRequestItemPurgatory_FinalizePurchaseResponse::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgRequestItemPurgatory_FinalizePurchaseResponse.item_ids)
  return &item_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestItemPurgatory_RefundPurchase::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestItemPurgatory_RefundPurchase::CMsgRequestItemPurgatory_RefundPurchase()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
}
CMsgRequestItemPurgatory_RefundPurchase::CMsgRequestItemPurgatory_RefundPurchase(const CMsgRequestItemPurgatory_RefundPurchase& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
}

void CMsgRequestItemPurgatory_RefundPurchase::SharedCtor() {
  _cached_size_ = 0;
}

CMsgRequestItemPurgatory_RefundPurchase::~CMsgRequestItemPurgatory_RefundPurchase() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  SharedDtor();
}

void CMsgRequestItemPurgatory_RefundPurchase::SharedDtor() {
}

void CMsgRequestItemPurgatory_RefundPurchase::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_RefundPurchase::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRequestItemPurgatory_RefundPurchase& CMsgRequestItemPurgatory_RefundPurchase::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgRequestItemPurgatory_RefundPurchase* CMsgRequestItemPurgatory_RefundPurchase::New(::google::protobuf::Arena* arena) const {
  CMsgRequestItemPurgatory_RefundPurchase* n = new CMsgRequestItemPurgatory_RefundPurchase;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgRequestItemPurgatory_RefundPurchase::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  item_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRequestItemPurgatory_RefundPurchase::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  return false;
#undef DO_
}

void CMsgRequestItemPurgatory_RefundPurchase::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_RefundPurchase::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  return target;
}

size_t CMsgRequestItemPurgatory_RefundPurchase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint64 item_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestItemPurgatory_RefundPurchase::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_RefundPurchase* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRequestItemPurgatory_RefundPurchase>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_RefundPurchase::MergeFrom(const CMsgRequestItemPurgatory_RefundPurchase& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
}

void CMsgRequestItemPurgatory_RefundPurchase::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_RefundPurchase::CopyFrom(const CMsgRequestItemPurgatory_RefundPurchase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_RefundPurchase::IsInitialized() const {
  return true;
}

void CMsgRequestItemPurgatory_RefundPurchase::Swap(CMsgRequestItemPurgatory_RefundPurchase* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestItemPurgatory_RefundPurchase::InternalSwap(CMsgRequestItemPurgatory_RefundPurchase* other) {
  item_ids_.InternalSwap(&other->item_ids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_RefundPurchase::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgRequestItemPurgatory_RefundPurchase

// repeated uint64 item_ids = 1;
int CMsgRequestItemPurgatory_RefundPurchase::item_ids_size() const {
  return item_ids_.size();
}
void CMsgRequestItemPurgatory_RefundPurchase::clear_item_ids() {
  item_ids_.Clear();
}
::google::protobuf::uint64 CMsgRequestItemPurgatory_RefundPurchase::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestItemPurgatory_RefundPurchase.item_ids)
  return item_ids_.Get(index);
}
void CMsgRequestItemPurgatory_RefundPurchase::set_item_ids(int index, ::google::protobuf::uint64 value) {
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestItemPurgatory_RefundPurchase.item_ids)
}
void CMsgRequestItemPurgatory_RefundPurchase::add_item_ids(::google::protobuf::uint64 value) {
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgRequestItemPurgatory_RefundPurchase.item_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgRequestItemPurgatory_RefundPurchase::item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgRequestItemPurgatory_RefundPurchase.item_ids)
  return item_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgRequestItemPurgatory_RefundPurchase::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgRequestItemPurgatory_RefundPurchase.item_ids)
  return &item_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestItemPurgatory_RefundPurchaseResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestItemPurgatory_RefundPurchaseResponse::CMsgRequestItemPurgatory_RefundPurchaseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
}
CMsgRequestItemPurgatory_RefundPurchaseResponse::CMsgRequestItemPurgatory_RefundPurchaseResponse(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0u;
}

CMsgRequestItemPurgatory_RefundPurchaseResponse::~CMsgRequestItemPurgatory_RefundPurchaseResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  SharedDtor();
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SharedDtor() {
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestItemPurgatory_RefundPurchaseResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRequestItemPurgatory_RefundPurchaseResponse& CMsgRequestItemPurgatory_RefundPurchaseResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgRequestItemPurgatory_RefundPurchaseResponse* CMsgRequestItemPurgatory_RefundPurchaseResponse::New(::google::protobuf::Arena* arena) const {
  CMsgRequestItemPurgatory_RefundPurchaseResponse* n = new CMsgRequestItemPurgatory_RefundPurchaseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  result_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRequestItemPurgatory_RefundPurchaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return false;
#undef DO_
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
}

::google::protobuf::uint8* CMsgRequestItemPurgatory_RefundPurchaseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 result = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  return target;
}

size_t CMsgRequestItemPurgatory_RefundPurchaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 result = 1;
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestItemPurgatory_RefundPurchaseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRequestItemPurgatory_RefundPurchaseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
    MergeFrom(*source);
  }
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::MergeFrom(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::CopyFrom(const CMsgRequestItemPurgatory_RefundPurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestItemPurgatory_RefundPurchaseResponse::IsInitialized() const {
  return true;
}

void CMsgRequestItemPurgatory_RefundPurchaseResponse::Swap(CMsgRequestItemPurgatory_RefundPurchaseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestItemPurgatory_RefundPurchaseResponse::InternalSwap(CMsgRequestItemPurgatory_RefundPurchaseResponse* other) {
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgRequestItemPurgatory_RefundPurchaseResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgRequestItemPurgatory_RefundPurchaseResponse

// optional uint32 result = 1;
bool CMsgRequestItemPurgatory_RefundPurchaseResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgRequestItemPurgatory_RefundPurchaseResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgRequestItemPurgatory_RefundPurchaseResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgRequestItemPurgatory_RefundPurchaseResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
::google::protobuf::uint32 CMsgRequestItemPurgatory_RefundPurchaseResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse.result)
  return result_;
}
void CMsgRequestItemPurgatory_RefundPurchaseResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestItemPurgatory_RefundPurchaseResponse.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCraftingResponse::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCraftingResponse::CMsgCraftingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgCraftingResponse)
}
CMsgCraftingResponse::CMsgCraftingResponse(const CMsgCraftingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgCraftingResponse)
}

void CMsgCraftingResponse::SharedCtor() {
  _cached_size_ = 0;
}

CMsgCraftingResponse::~CMsgCraftingResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgCraftingResponse)
  SharedDtor();
}

void CMsgCraftingResponse::SharedDtor() {
}

void CMsgCraftingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCraftingResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCraftingResponse& CMsgCraftingResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCraftingResponse* CMsgCraftingResponse::New(::google::protobuf::Arena* arena) const {
  CMsgCraftingResponse* n = new CMsgCraftingResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCraftingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgCraftingResponse)
  item_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCraftingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgCraftingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgCraftingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgCraftingResponse)
  return false;
#undef DO_
}

void CMsgCraftingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgCraftingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgCraftingResponse)
}

::google::protobuf::uint8* CMsgCraftingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgCraftingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgCraftingResponse)
  return target;
}

size_t CMsgCraftingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgCraftingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint64 item_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCraftingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgCraftingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCraftingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCraftingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgCraftingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgCraftingResponse)
    MergeFrom(*source);
  }
}

void CMsgCraftingResponse::MergeFrom(const CMsgCraftingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgCraftingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
}

void CMsgCraftingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgCraftingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCraftingResponse::CopyFrom(const CMsgCraftingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgCraftingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCraftingResponse::IsInitialized() const {
  return true;
}

void CMsgCraftingResponse::Swap(CMsgCraftingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCraftingResponse::InternalSwap(CMsgCraftingResponse* other) {
  item_ids_.InternalSwap(&other->item_ids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCraftingResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCraftingResponse

// repeated uint64 item_ids = 1;
int CMsgCraftingResponse::item_ids_size() const {
  return item_ids_.size();
}
void CMsgCraftingResponse::clear_item_ids() {
  item_ids_.Clear();
}
::google::protobuf::uint64 CMsgCraftingResponse::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCraftingResponse.item_ids)
  return item_ids_.Get(index);
}
void CMsgCraftingResponse::set_item_ids(int index, ::google::protobuf::uint64 value) {
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCraftingResponse.item_ids)
}
void CMsgCraftingResponse::add_item_ids(::google::protobuf::uint64 value) {
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgCraftingResponse.item_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgCraftingResponse::item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgCraftingResponse.item_ids)
  return item_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgCraftingResponse::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgCraftingResponse.item_ids)
  return &item_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestStoreSalesData::kVersionFieldNumber;
const int CMsgGCRequestStoreSalesData::kCurrencyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestStoreSalesData::CMsgGCRequestStoreSalesData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCRequestStoreSalesData)
}
CMsgGCRequestStoreSalesData::CMsgGCRequestStoreSalesData(const CMsgGCRequestStoreSalesData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    reinterpret_cast<char*>(&currency_) -
    reinterpret_cast<char*>(&version_) + sizeof(currency_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCRequestStoreSalesData)
}

void CMsgGCRequestStoreSalesData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&version_, 0, reinterpret_cast<char*>(&currency_) -
    reinterpret_cast<char*>(&version_) + sizeof(currency_));
}

CMsgGCRequestStoreSalesData::~CMsgGCRequestStoreSalesData() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCRequestStoreSalesData)
  SharedDtor();
}

void CMsgGCRequestStoreSalesData::SharedDtor() {
}

void CMsgGCRequestStoreSalesData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesData::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCRequestStoreSalesData& CMsgGCRequestStoreSalesData::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCRequestStoreSalesData* CMsgGCRequestStoreSalesData::New(::google::protobuf::Arena* arena) const {
  CMsgGCRequestStoreSalesData* n = new CMsgGCRequestStoreSalesData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCRequestStoreSalesData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCRequestStoreSalesData)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&version_, 0, reinterpret_cast<char*>(&currency_) -
      reinterpret_cast<char*>(&version_) + sizeof(currency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCRequestStoreSalesData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCRequestStoreSalesData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 currency = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_currency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCRequestStoreSalesData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCRequestStoreSalesData)
  return false;
#undef DO_
}

void CMsgGCRequestStoreSalesData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCRequestStoreSalesData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional uint32 currency = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->currency(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCRequestStoreSalesData)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCRequestStoreSalesData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional uint32 currency = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->currency(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCRequestStoreSalesData)
  return target;
}

size_t CMsgGCRequestStoreSalesData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCRequestStoreSalesData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 currency = 2;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestStoreSalesData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCRequestStoreSalesData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCRequestStoreSalesData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCRequestStoreSalesData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCRequestStoreSalesData)
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesData::MergeFrom(const CMsgGCRequestStoreSalesData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCRequestStoreSalesData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      currency_ = from.currency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRequestStoreSalesData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCRequestStoreSalesData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesData::CopyFrom(const CMsgGCRequestStoreSalesData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCRequestStoreSalesData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesData::IsInitialized() const {
  return true;
}

void CMsgGCRequestStoreSalesData::Swap(CMsgGCRequestStoreSalesData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestStoreSalesData::InternalSwap(CMsgGCRequestStoreSalesData* other) {
  std::swap(version_, other->version_);
  std::swap(currency_, other->currency_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesData::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCRequestStoreSalesData

// optional uint32 version = 1;
bool CMsgGCRequestStoreSalesData::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCRequestStoreSalesData::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCRequestStoreSalesData::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCRequestStoreSalesData::clear_version() {
  version_ = 0u;
  clear_has_version();
}
::google::protobuf::uint32 CMsgGCRequestStoreSalesData::version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestStoreSalesData.version)
  return version_;
}
void CMsgGCRequestStoreSalesData::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestStoreSalesData.version)
}

// optional uint32 currency = 2;
bool CMsgGCRequestStoreSalesData::has_currency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCRequestStoreSalesData::set_has_currency() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCRequestStoreSalesData::clear_has_currency() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCRequestStoreSalesData::clear_currency() {
  currency_ = 0u;
  clear_has_currency();
}
::google::protobuf::uint32 CMsgGCRequestStoreSalesData::currency() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestStoreSalesData.currency)
  return currency_;
}
void CMsgGCRequestStoreSalesData::set_currency(::google::protobuf::uint32 value) {
  set_has_currency();
  currency_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestStoreSalesData.currency)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestStoreSalesDataResponse_Price::kItemDefFieldNumber;
const int CMsgGCRequestStoreSalesDataResponse_Price::kPriceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestStoreSalesDataResponse_Price::CMsgGCRequestStoreSalesDataResponse_Price()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
}
CMsgGCRequestStoreSalesDataResponse_Price::CMsgGCRequestStoreSalesDataResponse_Price(const CMsgGCRequestStoreSalesDataResponse_Price& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_def_, &from.item_def_,
    reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&item_def_) + sizeof(price_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
}

void CMsgGCRequestStoreSalesDataResponse_Price::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_def_, 0, reinterpret_cast<char*>(&price_) -
    reinterpret_cast<char*>(&item_def_) + sizeof(price_));
}

CMsgGCRequestStoreSalesDataResponse_Price::~CMsgGCRequestStoreSalesDataResponse_Price() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  SharedDtor();
}

void CMsgGCRequestStoreSalesDataResponse_Price::SharedDtor() {
}

void CMsgGCRequestStoreSalesDataResponse_Price::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataResponse_Price::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCRequestStoreSalesDataResponse_Price& CMsgGCRequestStoreSalesDataResponse_Price::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCRequestStoreSalesDataResponse_Price* CMsgGCRequestStoreSalesDataResponse_Price::New(::google::protobuf::Arena* arena) const {
  CMsgGCRequestStoreSalesDataResponse_Price* n = new CMsgGCRequestStoreSalesDataResponse_Price;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCRequestStoreSalesDataResponse_Price::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_def_, 0, reinterpret_cast<char*>(&price_) -
      reinterpret_cast<char*>(&item_def_) + sizeof(price_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCRequestStoreSalesDataResponse_Price::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_def();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  return false;
#undef DO_
}

void CMsgGCRequestStoreSalesDataResponse_Price::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def(), output);
  }

  // optional uint32 price = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->price(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesDataResponse_Price::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def(), target);
  }

  // optional uint32 price = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->price(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  return target;
}

size_t CMsgGCRequestStoreSalesDataResponse_Price::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 item_def = 1;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional uint32 price = 2;
    if (has_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->price());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestStoreSalesDataResponse_Price::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataResponse_Price* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCRequestStoreSalesDataResponse_Price>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataResponse_Price::MergeFrom(const CMsgGCRequestStoreSalesDataResponse_Price& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000002u) {
      price_ = from.price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRequestStoreSalesDataResponse_Price::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataResponse_Price::CopyFrom(const CMsgGCRequestStoreSalesDataResponse_Price& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataResponse_Price::IsInitialized() const {
  return true;
}

void CMsgGCRequestStoreSalesDataResponse_Price::Swap(CMsgGCRequestStoreSalesDataResponse_Price* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestStoreSalesDataResponse_Price::InternalSwap(CMsgGCRequestStoreSalesDataResponse_Price* other) {
  std::swap(item_def_, other->item_def_);
  std::swap(price_, other->price_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesDataResponse_Price::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCRequestStoreSalesDataResponse_Price

// optional uint32 item_def = 1;
bool CMsgGCRequestStoreSalesDataResponse_Price::has_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCRequestStoreSalesDataResponse_Price::set_has_item_def() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCRequestStoreSalesDataResponse_Price::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCRequestStoreSalesDataResponse_Price::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
::google::protobuf::uint32 CMsgGCRequestStoreSalesDataResponse_Price::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price.item_def)
  return item_def_;
}
void CMsgGCRequestStoreSalesDataResponse_Price::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price.item_def)
}

// optional uint32 price = 2;
bool CMsgGCRequestStoreSalesDataResponse_Price::has_price() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCRequestStoreSalesDataResponse_Price::set_has_price() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCRequestStoreSalesDataResponse_Price::clear_has_price() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCRequestStoreSalesDataResponse_Price::clear_price() {
  price_ = 0u;
  clear_has_price();
}
::google::protobuf::uint32 CMsgGCRequestStoreSalesDataResponse_Price::price() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price.price)
  return price_;
}
void CMsgGCRequestStoreSalesDataResponse_Price::set_price(::google::protobuf::uint32 value) {
  set_has_price();
  price_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestStoreSalesDataResponse.Price.price)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestStoreSalesDataResponse::kSalePriceFieldNumber;
const int CMsgGCRequestStoreSalesDataResponse::kVersionFieldNumber;
const int CMsgGCRequestStoreSalesDataResponse::kExpirationTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestStoreSalesDataResponse::CMsgGCRequestStoreSalesDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCRequestStoreSalesDataResponse)
}
CMsgGCRequestStoreSalesDataResponse::CMsgGCRequestStoreSalesDataResponse(const CMsgGCRequestStoreSalesDataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      sale_price_(from.sale_price_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    reinterpret_cast<char*>(&expiration_time_) -
    reinterpret_cast<char*>(&version_) + sizeof(expiration_time_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCRequestStoreSalesDataResponse)
}

void CMsgGCRequestStoreSalesDataResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&version_, 0, reinterpret_cast<char*>(&expiration_time_) -
    reinterpret_cast<char*>(&version_) + sizeof(expiration_time_));
}

CMsgGCRequestStoreSalesDataResponse::~CMsgGCRequestStoreSalesDataResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  SharedDtor();
}

void CMsgGCRequestStoreSalesDataResponse::SharedDtor() {
}

void CMsgGCRequestStoreSalesDataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCRequestStoreSalesDataResponse& CMsgGCRequestStoreSalesDataResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCRequestStoreSalesDataResponse* CMsgGCRequestStoreSalesDataResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCRequestStoreSalesDataResponse* n = new CMsgGCRequestStoreSalesDataResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCRequestStoreSalesDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  sale_price_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&version_, 0, reinterpret_cast<char*>(&expiration_time_) -
      reinterpret_cast<char*>(&version_) + sizeof(expiration_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCRequestStoreSalesDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sale_price()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 expiration_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_expiration_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiration_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  return false;
#undef DO_
}

void CMsgGCRequestStoreSalesDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  for (unsigned int i = 0, n = this->sale_price_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sale_price(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version(), output);
  }

  // optional uint32 expiration_time = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->expiration_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCRequestStoreSalesDataResponse)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesDataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  for (unsigned int i = 0, n = this->sale_price_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->sale_price(i), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version(), target);
  }

  // optional uint32 expiration_time = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->expiration_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  return target;
}

size_t CMsgGCRequestStoreSalesDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
  {
    unsigned int count = this->sale_price_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sale_price(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 version = 2;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 expiration_time = 3;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expiration_time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestStoreSalesDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCRequestStoreSalesDataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCRequestStoreSalesDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCRequestStoreSalesDataResponse)
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataResponse::MergeFrom(const CMsgGCRequestStoreSalesDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sale_price_.MergeFrom(from.sale_price_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      expiration_time_ = from.expiration_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRequestStoreSalesDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataResponse::CopyFrom(const CMsgGCRequestStoreSalesDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCRequestStoreSalesDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataResponse::IsInitialized() const {
  return true;
}

void CMsgGCRequestStoreSalesDataResponse::Swap(CMsgGCRequestStoreSalesDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestStoreSalesDataResponse::InternalSwap(CMsgGCRequestStoreSalesDataResponse* other) {
  sale_price_.InternalSwap(&other->sale_price_);
  std::swap(version_, other->version_);
  std::swap(expiration_time_, other->expiration_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesDataResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCRequestStoreSalesDataResponse

// repeated .proto.dota.CMsgGCRequestStoreSalesDataResponse.Price sale_price = 1;
int CMsgGCRequestStoreSalesDataResponse::sale_price_size() const {
  return sale_price_.size();
}
void CMsgGCRequestStoreSalesDataResponse::clear_sale_price() {
  sale_price_.Clear();
}
const ::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price& CMsgGCRequestStoreSalesDataResponse::sale_price(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestStoreSalesDataResponse.sale_price)
  return sale_price_.Get(index);
}
::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price* CMsgGCRequestStoreSalesDataResponse::mutable_sale_price(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCRequestStoreSalesDataResponse.sale_price)
  return sale_price_.Mutable(index);
}
::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price* CMsgGCRequestStoreSalesDataResponse::add_sale_price() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCRequestStoreSalesDataResponse.sale_price)
  return sale_price_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price >*
CMsgGCRequestStoreSalesDataResponse::mutable_sale_price() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCRequestStoreSalesDataResponse.sale_price)
  return &sale_price_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCRequestStoreSalesDataResponse_Price >&
CMsgGCRequestStoreSalesDataResponse::sale_price() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCRequestStoreSalesDataResponse.sale_price)
  return sale_price_;
}

// optional uint32 version = 2;
bool CMsgGCRequestStoreSalesDataResponse::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCRequestStoreSalesDataResponse::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCRequestStoreSalesDataResponse::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCRequestStoreSalesDataResponse::clear_version() {
  version_ = 0u;
  clear_has_version();
}
::google::protobuf::uint32 CMsgGCRequestStoreSalesDataResponse::version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestStoreSalesDataResponse.version)
  return version_;
}
void CMsgGCRequestStoreSalesDataResponse::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestStoreSalesDataResponse.version)
}

// optional uint32 expiration_time = 3;
bool CMsgGCRequestStoreSalesDataResponse::has_expiration_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCRequestStoreSalesDataResponse::set_has_expiration_time() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCRequestStoreSalesDataResponse::clear_has_expiration_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCRequestStoreSalesDataResponse::clear_expiration_time() {
  expiration_time_ = 0u;
  clear_has_expiration_time();
}
::google::protobuf::uint32 CMsgGCRequestStoreSalesDataResponse::expiration_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestStoreSalesDataResponse.expiration_time)
  return expiration_time_;
}
void CMsgGCRequestStoreSalesDataResponse::set_expiration_time(::google::protobuf::uint32 value) {
  set_has_expiration_time();
  expiration_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestStoreSalesDataResponse.expiration_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCRequestStoreSalesDataUpToDateResponse::kVersionFieldNumber;
const int CMsgGCRequestStoreSalesDataUpToDateResponse::kExpirationTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCRequestStoreSalesDataUpToDateResponse::CMsgGCRequestStoreSalesDataUpToDateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
}
CMsgGCRequestStoreSalesDataUpToDateResponse::CMsgGCRequestStoreSalesDataUpToDateResponse(const CMsgGCRequestStoreSalesDataUpToDateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&version_, &from.version_,
    reinterpret_cast<char*>(&expiration_time_) -
    reinterpret_cast<char*>(&version_) + sizeof(expiration_time_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&version_, 0, reinterpret_cast<char*>(&expiration_time_) -
    reinterpret_cast<char*>(&version_) + sizeof(expiration_time_));
}

CMsgGCRequestStoreSalesDataUpToDateResponse::~CMsgGCRequestStoreSalesDataUpToDateResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  SharedDtor();
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SharedDtor() {
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCRequestStoreSalesDataUpToDateResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCRequestStoreSalesDataUpToDateResponse& CMsgGCRequestStoreSalesDataUpToDateResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCRequestStoreSalesDataUpToDateResponse* CMsgGCRequestStoreSalesDataUpToDateResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCRequestStoreSalesDataUpToDateResponse* n = new CMsgGCRequestStoreSalesDataUpToDateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&version_, 0, reinterpret_cast<char*>(&expiration_time_) -
      reinterpret_cast<char*>(&version_) + sizeof(expiration_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCRequestStoreSalesDataUpToDateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 expiration_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_expiration_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiration_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  return false;
#undef DO_
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
  }

  // optional uint32 expiration_time = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->expiration_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
}

::google::protobuf::uint8* CMsgGCRequestStoreSalesDataUpToDateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
  }

  // optional uint32 expiration_time = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->expiration_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  return target;
}

size_t CMsgGCRequestStoreSalesDataUpToDateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 version = 1;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version());
    }

    // optional uint32 expiration_time = 2;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expiration_time());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCRequestStoreSalesDataUpToDateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCRequestStoreSalesDataUpToDateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
    MergeFrom(*source);
  }
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::MergeFrom(const CMsgGCRequestStoreSalesDataUpToDateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      version_ = from.version_;
    }
    if (cached_has_bits & 0x00000002u) {
      expiration_time_ = from.expiration_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::CopyFrom(const CMsgGCRequestStoreSalesDataUpToDateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCRequestStoreSalesDataUpToDateResponse::IsInitialized() const {
  return true;
}

void CMsgGCRequestStoreSalesDataUpToDateResponse::Swap(CMsgGCRequestStoreSalesDataUpToDateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCRequestStoreSalesDataUpToDateResponse::InternalSwap(CMsgGCRequestStoreSalesDataUpToDateResponse* other) {
  std::swap(version_, other->version_);
  std::swap(expiration_time_, other->expiration_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCRequestStoreSalesDataUpToDateResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCRequestStoreSalesDataUpToDateResponse

// optional uint32 version = 1;
bool CMsgGCRequestStoreSalesDataUpToDateResponse::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCRequestStoreSalesDataUpToDateResponse::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCRequestStoreSalesDataUpToDateResponse::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCRequestStoreSalesDataUpToDateResponse::clear_version() {
  version_ = 0u;
  clear_has_version();
}
::google::protobuf::uint32 CMsgGCRequestStoreSalesDataUpToDateResponse::version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse.version)
  return version_;
}
void CMsgGCRequestStoreSalesDataUpToDateResponse::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse.version)
}

// optional uint32 expiration_time = 2;
bool CMsgGCRequestStoreSalesDataUpToDateResponse::has_expiration_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCRequestStoreSalesDataUpToDateResponse::set_has_expiration_time() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCRequestStoreSalesDataUpToDateResponse::clear_has_expiration_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCRequestStoreSalesDataUpToDateResponse::clear_expiration_time() {
  expiration_time_ = 0u;
  clear_has_expiration_time();
}
::google::protobuf::uint32 CMsgGCRequestStoreSalesDataUpToDateResponse::expiration_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse.expiration_time)
  return expiration_time_;
}
void CMsgGCRequestStoreSalesDataUpToDateResponse::set_expiration_time(::google::protobuf::uint32 value) {
  set_has_expiration_time();
  expiration_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCRequestStoreSalesDataUpToDateResponse.expiration_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCPingRequest::CMsgGCToGCPingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCPingRequest)
}
CMsgGCToGCPingRequest::CMsgGCToGCPingRequest(const CMsgGCToGCPingRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCPingRequest)
}

void CMsgGCToGCPingRequest::SharedCtor() {
  _cached_size_ = 0;
}

CMsgGCToGCPingRequest::~CMsgGCToGCPingRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCPingRequest)
  SharedDtor();
}

void CMsgGCToGCPingRequest::SharedDtor() {
}

void CMsgGCToGCPingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCPingRequest::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCPingRequest& CMsgGCToGCPingRequest::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCPingRequest* CMsgGCToGCPingRequest::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCPingRequest* n = new CMsgGCToGCPingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCPingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCPingRequest)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCPingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCPingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCPingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCPingRequest)
  return false;
#undef DO_
}

void CMsgGCToGCPingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCPingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCPingRequest)
}

::google::protobuf::uint8* CMsgGCToGCPingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCPingRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCPingRequest)
  return target;
}

size_t CMsgGCToGCPingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCPingRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCPingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCPingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCPingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCPingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCPingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCPingRequest)
    MergeFrom(*source);
  }
}

void CMsgGCToGCPingRequest::MergeFrom(const CMsgGCToGCPingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCPingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgGCToGCPingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCPingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCPingRequest::CopyFrom(const CMsgGCToGCPingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCPingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCPingRequest::IsInitialized() const {
  return true;
}

void CMsgGCToGCPingRequest::Swap(CMsgGCToGCPingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCPingRequest::InternalSwap(CMsgGCToGCPingRequest* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCPingRequest::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCPingRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCPingResponse::CMsgGCToGCPingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCPingResponse)
}
CMsgGCToGCPingResponse::CMsgGCToGCPingResponse(const CMsgGCToGCPingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCPingResponse)
}

void CMsgGCToGCPingResponse::SharedCtor() {
  _cached_size_ = 0;
}

CMsgGCToGCPingResponse::~CMsgGCToGCPingResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCPingResponse)
  SharedDtor();
}

void CMsgGCToGCPingResponse::SharedDtor() {
}

void CMsgGCToGCPingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCPingResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCPingResponse& CMsgGCToGCPingResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCPingResponse* CMsgGCToGCPingResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCPingResponse* n = new CMsgGCToGCPingResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCPingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCPingResponse)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCPingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCPingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCPingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCPingResponse)
  return false;
#undef DO_
}

void CMsgGCToGCPingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCPingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCPingResponse)
}

::google::protobuf::uint8* CMsgGCToGCPingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCPingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCPingResponse)
  return target;
}

size_t CMsgGCToGCPingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCPingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCPingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCPingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCPingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCPingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCPingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCPingResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCPingResponse::MergeFrom(const CMsgGCToGCPingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCPingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgGCToGCPingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCPingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCPingResponse::CopyFrom(const CMsgGCToGCPingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCPingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCPingResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCPingResponse::Swap(CMsgGCToGCPingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCPingResponse::InternalSwap(CMsgGCToGCPingResponse* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCPingResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCPingResponse

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGetUserSessionServer::kAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGetUserSessionServer::CMsgGCToGCGetUserSessionServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGetUserSessionServer)
}
CMsgGCToGCGetUserSessionServer::CMsgGCToGCGetUserSessionServer(const CMsgGCToGCGetUserSessionServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGetUserSessionServer)
}

void CMsgGCToGCGetUserSessionServer::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
}

CMsgGCToGCGetUserSessionServer::~CMsgGCToGCGetUserSessionServer() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGetUserSessionServer)
  SharedDtor();
}

void CMsgGCToGCGetUserSessionServer::SharedDtor() {
}

void CMsgGCToGCGetUserSessionServer::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserSessionServer::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCGetUserSessionServer& CMsgGCToGCGetUserSessionServer::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCGetUserSessionServer* CMsgGCToGCGetUserSessionServer::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCGetUserSessionServer* n = new CMsgGCToGCGetUserSessionServer;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCGetUserSessionServer::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCGetUserSessionServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGetUserSessionServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGetUserSessionServer)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserSessionServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGetUserSessionServer)
}

::google::protobuf::uint8* CMsgGCToGCGetUserSessionServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGetUserSessionServer)
  return target;
}

size_t CMsgGCToGCGetUserSessionServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserSessionServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserSessionServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCGetUserSessionServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGetUserSessionServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGetUserSessionServer)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserSessionServer::MergeFrom(const CMsgGCToGCGetUserSessionServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account_id()) {
    set_account_id(from.account_id());
  }
}

void CMsgGCToGCGetUserSessionServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserSessionServer::CopyFrom(const CMsgGCToGCGetUserSessionServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGetUserSessionServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserSessionServer::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserSessionServer::Swap(CMsgGCToGCGetUserSessionServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGetUserSessionServer::InternalSwap(CMsgGCToGCGetUserSessionServer* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCGetUserSessionServer::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCGetUserSessionServer

// optional uint32 account_id = 1;
bool CMsgGCToGCGetUserSessionServer::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCGetUserSessionServer::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCGetUserSessionServer::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCGetUserSessionServer::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgGCToGCGetUserSessionServer::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGetUserSessionServer.account_id)
  return account_id_;
}
void CMsgGCToGCGetUserSessionServer::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGetUserSessionServer.account_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGetUserSessionServerResponse::kServerSteamIdFieldNumber;
const int CMsgGCToGCGetUserSessionServerResponse::kIsOnlineFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGetUserSessionServerResponse::CMsgGCToGCGetUserSessionServerResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
}
CMsgGCToGCGetUserSessionServerResponse::CMsgGCToGCGetUserSessionServerResponse(const CMsgGCToGCGetUserSessionServerResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_steam_id_, &from.server_steam_id_,
    reinterpret_cast<char*>(&is_online_) -
    reinterpret_cast<char*>(&server_steam_id_) + sizeof(is_online_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
}

void CMsgGCToGCGetUserSessionServerResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&server_steam_id_, 0, reinterpret_cast<char*>(&is_online_) -
    reinterpret_cast<char*>(&server_steam_id_) + sizeof(is_online_));
}

CMsgGCToGCGetUserSessionServerResponse::~CMsgGCToGCGetUserSessionServerResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  SharedDtor();
}

void CMsgGCToGCGetUserSessionServerResponse::SharedDtor() {
}

void CMsgGCToGCGetUserSessionServerResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserSessionServerResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCGetUserSessionServerResponse& CMsgGCToGCGetUserSessionServerResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCGetUserSessionServerResponse* CMsgGCToGCGetUserSessionServerResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCGetUserSessionServerResponse* n = new CMsgGCToGCGetUserSessionServerResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCGetUserSessionServerResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&server_steam_id_, 0, reinterpret_cast<char*>(&is_online_) -
      reinterpret_cast<char*>(&server_steam_id_) + sizeof(is_online_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCGetUserSessionServerResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 server_steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_server_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &server_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_online = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_is_online();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_online_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserSessionServerResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 server_steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->server_steam_id(), output);
  }

  // optional bool is_online = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_online(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
}

::google::protobuf::uint8* CMsgGCToGCGetUserSessionServerResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 server_steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->server_steam_id(), target);
  }

  // optional bool is_online = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_online(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  return target;
}

size_t CMsgGCToGCGetUserSessionServerResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 server_steam_id = 1;
    if (has_server_steam_id()) {
      total_size += 1 + 8;
    }

    // optional bool is_online = 2;
    if (has_is_online()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserSessionServerResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserSessionServerResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCGetUserSessionServerResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserSessionServerResponse::MergeFrom(const CMsgGCToGCGetUserSessionServerResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      server_steam_id_ = from.server_steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_online_ = from.is_online_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGetUserSessionServerResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserSessionServerResponse::CopyFrom(const CMsgGCToGCGetUserSessionServerResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGetUserSessionServerResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserSessionServerResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserSessionServerResponse::Swap(CMsgGCToGCGetUserSessionServerResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGetUserSessionServerResponse::InternalSwap(CMsgGCToGCGetUserSessionServerResponse* other) {
  std::swap(server_steam_id_, other->server_steam_id_);
  std::swap(is_online_, other->is_online_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCGetUserSessionServerResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCGetUserSessionServerResponse

// optional fixed64 server_steam_id = 1;
bool CMsgGCToGCGetUserSessionServerResponse::has_server_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCGetUserSessionServerResponse::set_has_server_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCGetUserSessionServerResponse::clear_has_server_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCGetUserSessionServerResponse::clear_server_steam_id() {
  server_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_server_steam_id();
}
::google::protobuf::uint64 CMsgGCToGCGetUserSessionServerResponse::server_steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGetUserSessionServerResponse.server_steam_id)
  return server_steam_id_;
}
void CMsgGCToGCGetUserSessionServerResponse::set_server_steam_id(::google::protobuf::uint64 value) {
  set_has_server_steam_id();
  server_steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGetUserSessionServerResponse.server_steam_id)
}

// optional bool is_online = 2;
bool CMsgGCToGCGetUserSessionServerResponse::has_is_online() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCGetUserSessionServerResponse::set_has_is_online() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCGetUserSessionServerResponse::clear_has_is_online() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCGetUserSessionServerResponse::clear_is_online() {
  is_online_ = false;
  clear_has_is_online();
}
bool CMsgGCToGCGetUserSessionServerResponse::is_online() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGetUserSessionServerResponse.is_online)
  return is_online_;
}
void CMsgGCToGCGetUserSessionServerResponse::set_is_online(bool value) {
  set_has_is_online();
  is_online_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGetUserSessionServerResponse.is_online)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGetUserServerMembers::kAccountIdFieldNumber;
const int CMsgGCToGCGetUserServerMembers::kMaxSpectatorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGetUserServerMembers::CMsgGCToGCGetUserServerMembers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGetUserServerMembers)
}
CMsgGCToGCGetUserServerMembers::CMsgGCToGCGetUserServerMembers(const CMsgGCToGCGetUserServerMembers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    reinterpret_cast<char*>(&max_spectators_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(max_spectators_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGetUserServerMembers)
}

void CMsgGCToGCGetUserServerMembers::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, reinterpret_cast<char*>(&max_spectators_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(max_spectators_));
}

CMsgGCToGCGetUserServerMembers::~CMsgGCToGCGetUserServerMembers() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGetUserServerMembers)
  SharedDtor();
}

void CMsgGCToGCGetUserServerMembers::SharedDtor() {
}

void CMsgGCToGCGetUserServerMembers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserServerMembers::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCGetUserServerMembers& CMsgGCToGCGetUserServerMembers::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCGetUserServerMembers* CMsgGCToGCGetUserServerMembers::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCGetUserServerMembers* n = new CMsgGCToGCGetUserServerMembers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCGetUserServerMembers::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&account_id_, 0, reinterpret_cast<char*>(&max_spectators_) -
      reinterpret_cast<char*>(&account_id_) + sizeof(max_spectators_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCGetUserServerMembers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_spectators = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_max_spectators();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_spectators_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGetUserServerMembers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGetUserServerMembers)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserServerMembers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 max_spectators = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->max_spectators(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGetUserServerMembers)
}

::google::protobuf::uint8* CMsgGCToGCGetUserServerMembers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 max_spectators = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->max_spectators(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGetUserServerMembers)
  return target;
}

size_t CMsgGCToGCGetUserServerMembers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 max_spectators = 2;
    if (has_max_spectators()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_spectators());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserServerMembers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserServerMembers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCGetUserServerMembers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGetUserServerMembers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGetUserServerMembers)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserServerMembers::MergeFrom(const CMsgGCToGCGetUserServerMembers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      max_spectators_ = from.max_spectators_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGetUserServerMembers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserServerMembers::CopyFrom(const CMsgGCToGCGetUserServerMembers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGetUserServerMembers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserServerMembers::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserServerMembers::Swap(CMsgGCToGCGetUserServerMembers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGetUserServerMembers::InternalSwap(CMsgGCToGCGetUserServerMembers* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(max_spectators_, other->max_spectators_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCGetUserServerMembers::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCGetUserServerMembers

// optional uint32 account_id = 1;
bool CMsgGCToGCGetUserServerMembers::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCGetUserServerMembers::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCGetUserServerMembers::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCGetUserServerMembers::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgGCToGCGetUserServerMembers::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGetUserServerMembers.account_id)
  return account_id_;
}
void CMsgGCToGCGetUserServerMembers::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGetUserServerMembers.account_id)
}

// optional uint32 max_spectators = 2;
bool CMsgGCToGCGetUserServerMembers::has_max_spectators() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCGetUserServerMembers::set_has_max_spectators() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCGetUserServerMembers::clear_has_max_spectators() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCGetUserServerMembers::clear_max_spectators() {
  max_spectators_ = 0u;
  clear_has_max_spectators();
}
::google::protobuf::uint32 CMsgGCToGCGetUserServerMembers::max_spectators() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGetUserServerMembers.max_spectators)
  return max_spectators_;
}
void CMsgGCToGCGetUserServerMembers::set_max_spectators(::google::protobuf::uint32 value) {
  set_has_max_spectators();
  max_spectators_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGetUserServerMembers.max_spectators)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGetUserServerMembersResponse::kMemberAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGetUserServerMembersResponse::CMsgGCToGCGetUserServerMembersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
}
CMsgGCToGCGetUserServerMembersResponse::CMsgGCToGCGetUserServerMembersResponse(const CMsgGCToGCGetUserServerMembersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      member_account_id_(from.member_account_id_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
}

void CMsgGCToGCGetUserServerMembersResponse::SharedCtor() {
  _cached_size_ = 0;
}

CMsgGCToGCGetUserServerMembersResponse::~CMsgGCToGCGetUserServerMembersResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  SharedDtor();
}

void CMsgGCToGCGetUserServerMembersResponse::SharedDtor() {
}

void CMsgGCToGCGetUserServerMembersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserServerMembersResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCGetUserServerMembersResponse& CMsgGCToGCGetUserServerMembersResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCGetUserServerMembersResponse* CMsgGCToGCGetUserServerMembersResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCGetUserServerMembersResponse* n = new CMsgGCToGCGetUserServerMembersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCGetUserServerMembersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  member_account_id_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCGetUserServerMembersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 member_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_member_account_id())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_member_account_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserServerMembersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 member_account_id = 1;
  for (int i = 0, n = this->member_account_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->member_account_id(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
}

::google::protobuf::uint8* CMsgGCToGCGetUserServerMembersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 member_account_id = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->member_account_id_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  return target;
}

size_t CMsgGCToGCGetUserServerMembersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 member_account_id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->member_account_id_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->member_account_id_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserServerMembersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserServerMembersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCGetUserServerMembersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserServerMembersResponse::MergeFrom(const CMsgGCToGCGetUserServerMembersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_account_id_.MergeFrom(from.member_account_id_);
}

void CMsgGCToGCGetUserServerMembersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserServerMembersResponse::CopyFrom(const CMsgGCToGCGetUserServerMembersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGetUserServerMembersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserServerMembersResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserServerMembersResponse::Swap(CMsgGCToGCGetUserServerMembersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGetUserServerMembersResponse::InternalSwap(CMsgGCToGCGetUserServerMembersResponse* other) {
  member_account_id_.InternalSwap(&other->member_account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCGetUserServerMembersResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCGetUserServerMembersResponse

// repeated uint32 member_account_id = 1;
int CMsgGCToGCGetUserServerMembersResponse::member_account_id_size() const {
  return member_account_id_.size();
}
void CMsgGCToGCGetUserServerMembersResponse::clear_member_account_id() {
  member_account_id_.Clear();
}
::google::protobuf::uint32 CMsgGCToGCGetUserServerMembersResponse::member_account_id(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGetUserServerMembersResponse.member_account_id)
  return member_account_id_.Get(index);
}
void CMsgGCToGCGetUserServerMembersResponse::set_member_account_id(int index, ::google::protobuf::uint32 value) {
  member_account_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGetUserServerMembersResponse.member_account_id)
}
void CMsgGCToGCGetUserServerMembersResponse::add_member_account_id(::google::protobuf::uint32 value) {
  member_account_id_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToGCGetUserServerMembersResponse.member_account_id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToGCGetUserServerMembersResponse::member_account_id() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToGCGetUserServerMembersResponse.member_account_id)
  return member_account_id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToGCGetUserServerMembersResponse::mutable_member_account_id() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToGCGetUserServerMembersResponse.member_account_id)
  return &member_account_id_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLookupMultipleAccountNames::kAccountidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLookupMultipleAccountNames::CMsgLookupMultipleAccountNames()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgLookupMultipleAccountNames)
}
CMsgLookupMultipleAccountNames::CMsgLookupMultipleAccountNames(const CMsgLookupMultipleAccountNames& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      accountids_(from.accountids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgLookupMultipleAccountNames)
}

void CMsgLookupMultipleAccountNames::SharedCtor() {
  _cached_size_ = 0;
}

CMsgLookupMultipleAccountNames::~CMsgLookupMultipleAccountNames() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgLookupMultipleAccountNames)
  SharedDtor();
}

void CMsgLookupMultipleAccountNames::SharedDtor() {
}

void CMsgLookupMultipleAccountNames::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNames::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgLookupMultipleAccountNames& CMsgLookupMultipleAccountNames::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgLookupMultipleAccountNames* CMsgLookupMultipleAccountNames::New(::google::protobuf::Arena* arena) const {
  CMsgLookupMultipleAccountNames* n = new CMsgLookupMultipleAccountNames;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgLookupMultipleAccountNames::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgLookupMultipleAccountNames)
  accountids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgLookupMultipleAccountNames::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgLookupMultipleAccountNames)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 accountids = 1 [packed = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_accountids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_accountids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgLookupMultipleAccountNames)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgLookupMultipleAccountNames)
  return false;
#undef DO_
}

void CMsgLookupMultipleAccountNames::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgLookupMultipleAccountNames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 accountids = 1 [packed = true];
  if (this->accountids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_accountids_cached_byte_size_);
  }
  for (int i = 0, n = this->accountids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->accountids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgLookupMultipleAccountNames)
}

::google::protobuf::uint8* CMsgLookupMultipleAccountNames::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgLookupMultipleAccountNames)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 accountids = 1 [packed = true];
  if (this->accountids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _accountids_cached_byte_size_, target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->accountids_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgLookupMultipleAccountNames)
  return target;
}

size_t CMsgLookupMultipleAccountNames::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgLookupMultipleAccountNames)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 accountids = 1 [packed = true];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->accountids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _accountids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLookupMultipleAccountNames::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgLookupMultipleAccountNames)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNames* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgLookupMultipleAccountNames>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgLookupMultipleAccountNames)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgLookupMultipleAccountNames)
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNames::MergeFrom(const CMsgLookupMultipleAccountNames& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgLookupMultipleAccountNames)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accountids_.MergeFrom(from.accountids_);
}

void CMsgLookupMultipleAccountNames::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgLookupMultipleAccountNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNames::CopyFrom(const CMsgLookupMultipleAccountNames& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgLookupMultipleAccountNames)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNames::IsInitialized() const {
  return true;
}

void CMsgLookupMultipleAccountNames::Swap(CMsgLookupMultipleAccountNames* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLookupMultipleAccountNames::InternalSwap(CMsgLookupMultipleAccountNames* other) {
  accountids_.InternalSwap(&other->accountids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgLookupMultipleAccountNames::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgLookupMultipleAccountNames

// repeated uint32 accountids = 1 [packed = true];
int CMsgLookupMultipleAccountNames::accountids_size() const {
  return accountids_.size();
}
void CMsgLookupMultipleAccountNames::clear_accountids() {
  accountids_.Clear();
}
::google::protobuf::uint32 CMsgLookupMultipleAccountNames::accountids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLookupMultipleAccountNames.accountids)
  return accountids_.Get(index);
}
void CMsgLookupMultipleAccountNames::set_accountids(int index, ::google::protobuf::uint32 value) {
  accountids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLookupMultipleAccountNames.accountids)
}
void CMsgLookupMultipleAccountNames::add_accountids(::google::protobuf::uint32 value) {
  accountids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgLookupMultipleAccountNames.accountids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgLookupMultipleAccountNames::accountids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgLookupMultipleAccountNames.accountids)
  return accountids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgLookupMultipleAccountNames::mutable_accountids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgLookupMultipleAccountNames.accountids)
  return &accountids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLookupMultipleAccountNamesResponse_Account::kAccountidFieldNumber;
const int CMsgLookupMultipleAccountNamesResponse_Account::kPersonaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLookupMultipleAccountNamesResponse_Account::CMsgLookupMultipleAccountNamesResponse_Account()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
}
CMsgLookupMultipleAccountNamesResponse_Account::CMsgLookupMultipleAccountNamesResponse_Account(const CMsgLookupMultipleAccountNamesResponse_Account& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  persona_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_persona()) {
    persona_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_);
  }
  accountid_ = from.accountid_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
}

void CMsgLookupMultipleAccountNamesResponse_Account::SharedCtor() {
  _cached_size_ = 0;
  persona_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  accountid_ = 0u;
}

CMsgLookupMultipleAccountNamesResponse_Account::~CMsgLookupMultipleAccountNamesResponse_Account() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  SharedDtor();
}

void CMsgLookupMultipleAccountNamesResponse_Account::SharedDtor() {
  persona_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgLookupMultipleAccountNamesResponse_Account::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNamesResponse_Account::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgLookupMultipleAccountNamesResponse_Account& CMsgLookupMultipleAccountNamesResponse_Account::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgLookupMultipleAccountNamesResponse_Account* CMsgLookupMultipleAccountNamesResponse_Account::New(::google::protobuf::Arena* arena) const {
  CMsgLookupMultipleAccountNamesResponse_Account* n = new CMsgLookupMultipleAccountNamesResponse_Account;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgLookupMultipleAccountNamesResponse_Account::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  if (has_persona()) {
    GOOGLE_DCHECK(!persona_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*persona_.UnsafeRawStringPointer())->clear();
  }
  accountid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgLookupMultipleAccountNamesResponse_Account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string persona = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_persona()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->persona().data(), this->persona().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  return false;
#undef DO_
}

void CMsgLookupMultipleAccountNamesResponse_Account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }

  // optional string persona = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona().data(), this->persona().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->persona(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
}

::google::protobuf::uint8* CMsgLookupMultipleAccountNamesResponse_Account::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }

  // optional string persona = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->persona().data(), this->persona().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->persona(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  return target;
}

size_t CMsgLookupMultipleAccountNamesResponse_Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string persona = 2;
    if (has_persona()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->persona());
    }

    // optional uint32 accountid = 1;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLookupMultipleAccountNamesResponse_Account::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNamesResponse_Account* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgLookupMultipleAccountNamesResponse_Account>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNamesResponse_Account::MergeFrom(const CMsgLookupMultipleAccountNamesResponse_Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_persona();
      persona_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.persona_);
    }
    if (cached_has_bits & 0x00000002u) {
      accountid_ = from.accountid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgLookupMultipleAccountNamesResponse_Account::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNamesResponse_Account::CopyFrom(const CMsgLookupMultipleAccountNamesResponse_Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNamesResponse_Account::IsInitialized() const {
  return true;
}

void CMsgLookupMultipleAccountNamesResponse_Account::Swap(CMsgLookupMultipleAccountNamesResponse_Account* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLookupMultipleAccountNamesResponse_Account::InternalSwap(CMsgLookupMultipleAccountNamesResponse_Account* other) {
  persona_.Swap(&other->persona_);
  std::swap(accountid_, other->accountid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgLookupMultipleAccountNamesResponse_Account::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgLookupMultipleAccountNamesResponse_Account

// optional uint32 accountid = 1;
bool CMsgLookupMultipleAccountNamesResponse_Account::has_accountid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgLookupMultipleAccountNamesResponse_Account::set_has_accountid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgLookupMultipleAccountNamesResponse_Account::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgLookupMultipleAccountNamesResponse_Account::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
::google::protobuf::uint32 CMsgLookupMultipleAccountNamesResponse_Account::accountid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.accountid)
  return accountid_;
}
void CMsgLookupMultipleAccountNamesResponse_Account::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.accountid)
}

// optional string persona = 2;
bool CMsgLookupMultipleAccountNamesResponse_Account::has_persona() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgLookupMultipleAccountNamesResponse_Account::set_has_persona() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgLookupMultipleAccountNamesResponse_Account::clear_has_persona() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgLookupMultipleAccountNamesResponse_Account::clear_persona() {
  persona_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_persona();
}
const ::std::string& CMsgLookupMultipleAccountNamesResponse_Account::persona() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona)
  return persona_.GetNoArena();
}
void CMsgLookupMultipleAccountNamesResponse_Account::set_persona(const ::std::string& value) {
  set_has_persona();
  persona_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona)
}
#if LANG_CXX11
void CMsgLookupMultipleAccountNamesResponse_Account::set_persona(::std::string&& value) {
  set_has_persona();
  persona_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona)
}
#endif
void CMsgLookupMultipleAccountNamesResponse_Account::set_persona(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_persona();
  persona_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona)
}
void CMsgLookupMultipleAccountNamesResponse_Account::set_persona(const char* value, size_t size) {
  set_has_persona();
  persona_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona)
}
::std::string* CMsgLookupMultipleAccountNamesResponse_Account::mutable_persona() {
  set_has_persona();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona)
  return persona_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgLookupMultipleAccountNamesResponse_Account::release_persona() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona)
  clear_has_persona();
  return persona_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgLookupMultipleAccountNamesResponse_Account::set_allocated_persona(::std::string* persona) {
  if (persona != NULL) {
    set_has_persona();
  } else {
    clear_has_persona();
  }
  persona_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgLookupMultipleAccountNamesResponse.Account.persona)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgLookupMultipleAccountNamesResponse::kAccountsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgLookupMultipleAccountNamesResponse::CMsgLookupMultipleAccountNamesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgLookupMultipleAccountNamesResponse)
}
CMsgLookupMultipleAccountNamesResponse::CMsgLookupMultipleAccountNamesResponse(const CMsgLookupMultipleAccountNamesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      accounts_(from.accounts_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgLookupMultipleAccountNamesResponse)
}

void CMsgLookupMultipleAccountNamesResponse::SharedCtor() {
  _cached_size_ = 0;
}

CMsgLookupMultipleAccountNamesResponse::~CMsgLookupMultipleAccountNamesResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  SharedDtor();
}

void CMsgLookupMultipleAccountNamesResponse::SharedDtor() {
}

void CMsgLookupMultipleAccountNamesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgLookupMultipleAccountNamesResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgLookupMultipleAccountNamesResponse& CMsgLookupMultipleAccountNamesResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgLookupMultipleAccountNamesResponse* CMsgLookupMultipleAccountNamesResponse::New(::google::protobuf::Arena* arena) const {
  CMsgLookupMultipleAccountNamesResponse* n = new CMsgLookupMultipleAccountNamesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgLookupMultipleAccountNamesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  accounts_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgLookupMultipleAccountNamesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_accounts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  return false;
#undef DO_
}

void CMsgLookupMultipleAccountNamesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  for (unsigned int i = 0, n = this->accounts_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->accounts(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgLookupMultipleAccountNamesResponse)
}

::google::protobuf::uint8* CMsgLookupMultipleAccountNamesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  for (unsigned int i = 0, n = this->accounts_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->accounts(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  return target;
}

size_t CMsgLookupMultipleAccountNamesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
  {
    unsigned int count = this->accounts_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->accounts(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgLookupMultipleAccountNamesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgLookupMultipleAccountNamesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgLookupMultipleAccountNamesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgLookupMultipleAccountNamesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgLookupMultipleAccountNamesResponse)
    MergeFrom(*source);
  }
}

void CMsgLookupMultipleAccountNamesResponse::MergeFrom(const CMsgLookupMultipleAccountNamesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accounts_.MergeFrom(from.accounts_);
}

void CMsgLookupMultipleAccountNamesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgLookupMultipleAccountNamesResponse::CopyFrom(const CMsgLookupMultipleAccountNamesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgLookupMultipleAccountNamesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgLookupMultipleAccountNamesResponse::IsInitialized() const {
  return true;
}

void CMsgLookupMultipleAccountNamesResponse::Swap(CMsgLookupMultipleAccountNamesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgLookupMultipleAccountNamesResponse::InternalSwap(CMsgLookupMultipleAccountNamesResponse* other) {
  accounts_.InternalSwap(&other->accounts_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgLookupMultipleAccountNamesResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgLookupMultipleAccountNamesResponse

// repeated .proto.dota.CMsgLookupMultipleAccountNamesResponse.Account accounts = 1;
int CMsgLookupMultipleAccountNamesResponse::accounts_size() const {
  return accounts_.size();
}
void CMsgLookupMultipleAccountNamesResponse::clear_accounts() {
  accounts_.Clear();
}
const ::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account& CMsgLookupMultipleAccountNamesResponse::accounts(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLookupMultipleAccountNamesResponse.accounts)
  return accounts_.Get(index);
}
::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account* CMsgLookupMultipleAccountNamesResponse::mutable_accounts(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgLookupMultipleAccountNamesResponse.accounts)
  return accounts_.Mutable(index);
}
::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account* CMsgLookupMultipleAccountNamesResponse::add_accounts() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgLookupMultipleAccountNamesResponse.accounts)
  return accounts_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account >*
CMsgLookupMultipleAccountNamesResponse::mutable_accounts() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgLookupMultipleAccountNamesResponse.accounts)
  return &accounts_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgLookupMultipleAccountNamesResponse_Account >&
CMsgLookupMultipleAccountNamesResponse::accounts() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgLookupMultipleAccountNamesResponse.accounts)
  return accounts_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGetUserPCBangNo::kAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGetUserPCBangNo::CMsgGCToGCGetUserPCBangNo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGetUserPCBangNo)
}
CMsgGCToGCGetUserPCBangNo::CMsgGCToGCGetUserPCBangNo(const CMsgGCToGCGetUserPCBangNo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGetUserPCBangNo)
}

void CMsgGCToGCGetUserPCBangNo::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
}

CMsgGCToGCGetUserPCBangNo::~CMsgGCToGCGetUserPCBangNo() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGetUserPCBangNo)
  SharedDtor();
}

void CMsgGCToGCGetUserPCBangNo::SharedDtor() {
}

void CMsgGCToGCGetUserPCBangNo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserPCBangNo::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCGetUserPCBangNo& CMsgGCToGCGetUserPCBangNo::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCGetUserPCBangNo* CMsgGCToGCGetUserPCBangNo::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCGetUserPCBangNo* n = new CMsgGCToGCGetUserPCBangNo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCGetUserPCBangNo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGetUserPCBangNo)
  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCGetUserPCBangNo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGetUserPCBangNo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGetUserPCBangNo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGetUserPCBangNo)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserPCBangNo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGetUserPCBangNo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGetUserPCBangNo)
}

::google::protobuf::uint8* CMsgGCToGCGetUserPCBangNo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGetUserPCBangNo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGetUserPCBangNo)
  return target;
}

size_t CMsgGCToGCGetUserPCBangNo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGetUserPCBangNo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserPCBangNo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGetUserPCBangNo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserPCBangNo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCGetUserPCBangNo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGetUserPCBangNo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGetUserPCBangNo)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserPCBangNo::MergeFrom(const CMsgGCToGCGetUserPCBangNo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGetUserPCBangNo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account_id()) {
    set_account_id(from.account_id());
  }
}

void CMsgGCToGCGetUserPCBangNo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGetUserPCBangNo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserPCBangNo::CopyFrom(const CMsgGCToGCGetUserPCBangNo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGetUserPCBangNo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserPCBangNo::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserPCBangNo::Swap(CMsgGCToGCGetUserPCBangNo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGetUserPCBangNo::InternalSwap(CMsgGCToGCGetUserPCBangNo* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCGetUserPCBangNo::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCGetUserPCBangNo

// optional uint32 account_id = 1;
bool CMsgGCToGCGetUserPCBangNo::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCGetUserPCBangNo::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCGetUserPCBangNo::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCGetUserPCBangNo::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgGCToGCGetUserPCBangNo::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGetUserPCBangNo.account_id)
  return account_id_;
}
void CMsgGCToGCGetUserPCBangNo::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGetUserPCBangNo.account_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGetUserPCBangNoResponse::kPcBangNoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGetUserPCBangNoResponse::CMsgGCToGCGetUserPCBangNoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
}
CMsgGCToGCGetUserPCBangNoResponse::CMsgGCToGCGetUserPCBangNoResponse(const CMsgGCToGCGetUserPCBangNoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pc_bang_no_ = from.pc_bang_no_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
}

void CMsgGCToGCGetUserPCBangNoResponse::SharedCtor() {
  _cached_size_ = 0;
  pc_bang_no_ = 0u;
}

CMsgGCToGCGetUserPCBangNoResponse::~CMsgGCToGCGetUserPCBangNoResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  SharedDtor();
}

void CMsgGCToGCGetUserPCBangNoResponse::SharedDtor() {
}

void CMsgGCToGCGetUserPCBangNoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGetUserPCBangNoResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCGetUserPCBangNoResponse& CMsgGCToGCGetUserPCBangNoResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCGetUserPCBangNoResponse* CMsgGCToGCGetUserPCBangNoResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCGetUserPCBangNoResponse* n = new CMsgGCToGCGetUserPCBangNoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCGetUserPCBangNoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  pc_bang_no_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCGetUserPCBangNoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pc_bang_no = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_pc_bang_no();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pc_bang_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  return false;
#undef DO_
}

void CMsgGCToGCGetUserPCBangNoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pc_bang_no = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pc_bang_no(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
}

::google::protobuf::uint8* CMsgGCToGCGetUserPCBangNoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 pc_bang_no = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pc_bang_no(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  return target;
}

size_t CMsgGCToGCGetUserPCBangNoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 pc_bang_no = 1;
  if (has_pc_bang_no()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->pc_bang_no());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGetUserPCBangNoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGetUserPCBangNoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCGetUserPCBangNoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGetUserPCBangNoResponse::MergeFrom(const CMsgGCToGCGetUserPCBangNoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pc_bang_no()) {
    set_pc_bang_no(from.pc_bang_no());
  }
}

void CMsgGCToGCGetUserPCBangNoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGetUserPCBangNoResponse::CopyFrom(const CMsgGCToGCGetUserPCBangNoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGetUserPCBangNoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGetUserPCBangNoResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCGetUserPCBangNoResponse::Swap(CMsgGCToGCGetUserPCBangNoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGetUserPCBangNoResponse::InternalSwap(CMsgGCToGCGetUserPCBangNoResponse* other) {
  std::swap(pc_bang_no_, other->pc_bang_no_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCGetUserPCBangNoResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCGetUserPCBangNoResponse

// optional uint32 pc_bang_no = 1;
bool CMsgGCToGCGetUserPCBangNoResponse::has_pc_bang_no() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCGetUserPCBangNoResponse::set_has_pc_bang_no() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCGetUserPCBangNoResponse::clear_has_pc_bang_no() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCGetUserPCBangNoResponse::clear_pc_bang_no() {
  pc_bang_no_ = 0u;
  clear_has_pc_bang_no();
}
::google::protobuf::uint32 CMsgGCToGCGetUserPCBangNoResponse::pc_bang_no() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGetUserPCBangNoResponse.pc_bang_no)
  return pc_bang_no_;
}
void CMsgGCToGCGetUserPCBangNoResponse::set_pc_bang_no(::google::protobuf::uint32 value) {
  set_has_pc_bang_no();
  pc_bang_no_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGetUserPCBangNoResponse.pc_bang_no)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestCrateItems::kCrateItemDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestCrateItems::CMsgRequestCrateItems()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestCrateItems)
}
CMsgRequestCrateItems::CMsgRequestCrateItems(const CMsgRequestCrateItems& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  crate_item_def_ = from.crate_item_def_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestCrateItems)
}

void CMsgRequestCrateItems::SharedCtor() {
  _cached_size_ = 0;
  crate_item_def_ = 0u;
}

CMsgRequestCrateItems::~CMsgRequestCrateItems() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestCrateItems)
  SharedDtor();
}

void CMsgRequestCrateItems::SharedDtor() {
}

void CMsgRequestCrateItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestCrateItems::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRequestCrateItems& CMsgRequestCrateItems::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgRequestCrateItems* CMsgRequestCrateItems::New(::google::protobuf::Arena* arena) const {
  CMsgRequestCrateItems* n = new CMsgRequestCrateItems;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgRequestCrateItems::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestCrateItems)
  crate_item_def_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRequestCrateItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestCrateItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 crate_item_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_crate_item_def();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crate_item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestCrateItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestCrateItems)
  return false;
#undef DO_
}

void CMsgRequestCrateItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestCrateItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 crate_item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->crate_item_def(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestCrateItems)
}

::google::protobuf::uint8* CMsgRequestCrateItems::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestCrateItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 crate_item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->crate_item_def(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestCrateItems)
  return target;
}

size_t CMsgRequestCrateItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestCrateItems)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 crate_item_def = 1;
  if (has_crate_item_def()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->crate_item_def());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestCrateItems::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestCrateItems)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestCrateItems* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRequestCrateItems>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestCrateItems)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestCrateItems)
    MergeFrom(*source);
  }
}

void CMsgRequestCrateItems::MergeFrom(const CMsgRequestCrateItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestCrateItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_crate_item_def()) {
    set_crate_item_def(from.crate_item_def());
  }
}

void CMsgRequestCrateItems::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestCrateItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestCrateItems::CopyFrom(const CMsgRequestCrateItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestCrateItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestCrateItems::IsInitialized() const {
  return true;
}

void CMsgRequestCrateItems::Swap(CMsgRequestCrateItems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestCrateItems::InternalSwap(CMsgRequestCrateItems* other) {
  std::swap(crate_item_def_, other->crate_item_def_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgRequestCrateItems::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgRequestCrateItems

// optional uint32 crate_item_def = 1;
bool CMsgRequestCrateItems::has_crate_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgRequestCrateItems::set_has_crate_item_def() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgRequestCrateItems::clear_has_crate_item_def() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgRequestCrateItems::clear_crate_item_def() {
  crate_item_def_ = 0u;
  clear_has_crate_item_def();
}
::google::protobuf::uint32 CMsgRequestCrateItems::crate_item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestCrateItems.crate_item_def)
  return crate_item_def_;
}
void CMsgRequestCrateItems::set_crate_item_def(::google::protobuf::uint32 value) {
  set_has_crate_item_def();
  crate_item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestCrateItems.crate_item_def)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRequestCrateItemsResponse::kResponseFieldNumber;
const int CMsgRequestCrateItemsResponse::kItemDefsFieldNumber;
const int CMsgRequestCrateItemsResponse::kPeekItemDefFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRequestCrateItemsResponse::CMsgRequestCrateItemsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRequestCrateItemsResponse)
}
CMsgRequestCrateItemsResponse::CMsgRequestCrateItemsResponse(const CMsgRequestCrateItemsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_defs_(from.item_defs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&response_, &from.response_,
    reinterpret_cast<char*>(&peek_item_def_) -
    reinterpret_cast<char*>(&response_) + sizeof(peek_item_def_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRequestCrateItemsResponse)
}

void CMsgRequestCrateItemsResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&response_, 0, reinterpret_cast<char*>(&peek_item_def_) -
    reinterpret_cast<char*>(&response_) + sizeof(peek_item_def_));
}

CMsgRequestCrateItemsResponse::~CMsgRequestCrateItemsResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRequestCrateItemsResponse)
  SharedDtor();
}

void CMsgRequestCrateItemsResponse::SharedDtor() {
}

void CMsgRequestCrateItemsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRequestCrateItemsResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRequestCrateItemsResponse& CMsgRequestCrateItemsResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgRequestCrateItemsResponse* CMsgRequestCrateItemsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgRequestCrateItemsResponse* n = new CMsgRequestCrateItemsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgRequestCrateItemsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRequestCrateItemsResponse)
  item_defs_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&response_, 0, reinterpret_cast<char*>(&peek_item_def_) -
      reinterpret_cast<char*>(&response_) + sizeof(peek_item_def_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRequestCrateItemsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRequestCrateItemsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_response();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 item_defs = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_item_defs())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_item_defs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 peek_item_def = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_peek_item_def();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &peek_item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRequestCrateItemsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRequestCrateItemsResponse)
  return false;
#undef DO_
}

void CMsgRequestCrateItemsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRequestCrateItemsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->response(), output);
  }

  // repeated uint32 item_defs = 2;
  for (int i = 0, n = this->item_defs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->item_defs(i), output);
  }

  // optional uint32 peek_item_def = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->peek_item_def(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRequestCrateItemsResponse)
}

::google::protobuf::uint8* CMsgRequestCrateItemsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRequestCrateItemsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->response(), target);
  }

  // repeated uint32 item_defs = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->item_defs_, target);

  // optional uint32 peek_item_def = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->peek_item_def(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRequestCrateItemsResponse)
  return target;
}

size_t CMsgRequestCrateItemsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRequestCrateItemsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 item_defs = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->item_defs_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_defs_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 response = 1;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->response());
    }

    // optional uint32 peek_item_def = 3;
    if (has_peek_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->peek_item_def());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRequestCrateItemsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRequestCrateItemsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRequestCrateItemsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRequestCrateItemsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRequestCrateItemsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRequestCrateItemsResponse)
    MergeFrom(*source);
  }
}

void CMsgRequestCrateItemsResponse::MergeFrom(const CMsgRequestCrateItemsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRequestCrateItemsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_defs_.MergeFrom(from.item_defs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      response_ = from.response_;
    }
    if (cached_has_bits & 0x00000002u) {
      peek_item_def_ = from.peek_item_def_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgRequestCrateItemsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRequestCrateItemsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRequestCrateItemsResponse::CopyFrom(const CMsgRequestCrateItemsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRequestCrateItemsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRequestCrateItemsResponse::IsInitialized() const {
  return true;
}

void CMsgRequestCrateItemsResponse::Swap(CMsgRequestCrateItemsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRequestCrateItemsResponse::InternalSwap(CMsgRequestCrateItemsResponse* other) {
  item_defs_.InternalSwap(&other->item_defs_);
  std::swap(response_, other->response_);
  std::swap(peek_item_def_, other->peek_item_def_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgRequestCrateItemsResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgRequestCrateItemsResponse

// optional uint32 response = 1;
bool CMsgRequestCrateItemsResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgRequestCrateItemsResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgRequestCrateItemsResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgRequestCrateItemsResponse::clear_response() {
  response_ = 0u;
  clear_has_response();
}
::google::protobuf::uint32 CMsgRequestCrateItemsResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestCrateItemsResponse.response)
  return response_;
}
void CMsgRequestCrateItemsResponse::set_response(::google::protobuf::uint32 value) {
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestCrateItemsResponse.response)
}

// repeated uint32 item_defs = 2;
int CMsgRequestCrateItemsResponse::item_defs_size() const {
  return item_defs_.size();
}
void CMsgRequestCrateItemsResponse::clear_item_defs() {
  item_defs_.Clear();
}
::google::protobuf::uint32 CMsgRequestCrateItemsResponse::item_defs(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestCrateItemsResponse.item_defs)
  return item_defs_.Get(index);
}
void CMsgRequestCrateItemsResponse::set_item_defs(int index, ::google::protobuf::uint32 value) {
  item_defs_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestCrateItemsResponse.item_defs)
}
void CMsgRequestCrateItemsResponse::add_item_defs(::google::protobuf::uint32 value) {
  item_defs_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgRequestCrateItemsResponse.item_defs)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgRequestCrateItemsResponse::item_defs() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgRequestCrateItemsResponse.item_defs)
  return item_defs_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgRequestCrateItemsResponse::mutable_item_defs() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgRequestCrateItemsResponse.item_defs)
  return &item_defs_;
}

// optional uint32 peek_item_def = 3;
bool CMsgRequestCrateItemsResponse::has_peek_item_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgRequestCrateItemsResponse::set_has_peek_item_def() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgRequestCrateItemsResponse::clear_has_peek_item_def() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgRequestCrateItemsResponse::clear_peek_item_def() {
  peek_item_def_ = 0u;
  clear_has_peek_item_def();
}
::google::protobuf::uint32 CMsgRequestCrateItemsResponse::peek_item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestCrateItemsResponse.peek_item_def)
  return peek_item_def_;
}
void CMsgRequestCrateItemsResponse::set_peek_item_def(::google::protobuf::uint32 value) {
  set_has_peek_item_def();
  peek_item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestCrateItemsResponse.peek_item_def)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCCanUseDropRateBonus::kAccountIdFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kDropRateBonusFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kBoosterTypeFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kExclusiveItemDefFieldNumber;
const int CMsgGCToGCCanUseDropRateBonus::kAllowEqualRateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCCanUseDropRateBonus::CMsgGCToGCCanUseDropRateBonus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCCanUseDropRateBonus)
}
CMsgGCToGCCanUseDropRateBonus::CMsgGCToGCCanUseDropRateBonus(const CMsgGCToGCCanUseDropRateBonus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    reinterpret_cast<char*>(&allow_equal_rate_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(allow_equal_rate_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCCanUseDropRateBonus)
}

void CMsgGCToGCCanUseDropRateBonus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, reinterpret_cast<char*>(&allow_equal_rate_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(allow_equal_rate_));
}

CMsgGCToGCCanUseDropRateBonus::~CMsgGCToGCCanUseDropRateBonus() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  SharedDtor();
}

void CMsgGCToGCCanUseDropRateBonus::SharedDtor() {
}

void CMsgGCToGCCanUseDropRateBonus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCCanUseDropRateBonus::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCCanUseDropRateBonus& CMsgGCToGCCanUseDropRateBonus::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCCanUseDropRateBonus* CMsgGCToGCCanUseDropRateBonus::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCCanUseDropRateBonus* n = new CMsgGCToGCCanUseDropRateBonus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCCanUseDropRateBonus::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&account_id_, 0, reinterpret_cast<char*>(&allow_equal_rate_) -
      reinterpret_cast<char*>(&account_id_) + sizeof(allow_equal_rate_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCCanUseDropRateBonus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float drop_rate_bonus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {
          set_has_drop_rate_bonus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &drop_rate_bonus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 booster_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_booster_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booster_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 exclusive_item_def = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_exclusive_item_def();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &exclusive_item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool allow_equal_rate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_allow_equal_rate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_equal_rate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  return false;
#undef DO_
}

void CMsgGCToGCCanUseDropRateBonus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional float drop_rate_bonus = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->drop_rate_bonus(), output);
  }

  // optional uint32 booster_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->booster_type(), output);
  }

  // optional uint32 exclusive_item_def = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->exclusive_item_def(), output);
  }

  // optional bool allow_equal_rate = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->allow_equal_rate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCCanUseDropRateBonus)
}

::google::protobuf::uint8* CMsgGCToGCCanUseDropRateBonus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional float drop_rate_bonus = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->drop_rate_bonus(), target);
  }

  // optional uint32 booster_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->booster_type(), target);
  }

  // optional uint32 exclusive_item_def = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->exclusive_item_def(), target);
  }

  // optional bool allow_equal_rate = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->allow_equal_rate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  return target;
}

size_t CMsgGCToGCCanUseDropRateBonus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional float drop_rate_bonus = 2;
    if (has_drop_rate_bonus()) {
      total_size += 1 + 4;
    }

    // optional uint32 booster_type = 3;
    if (has_booster_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booster_type());
    }

    // optional uint32 exclusive_item_def = 4;
    if (has_exclusive_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->exclusive_item_def());
    }

    // optional bool allow_equal_rate = 5;
    if (has_allow_equal_rate()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCCanUseDropRateBonus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCCanUseDropRateBonus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCCanUseDropRateBonus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCCanUseDropRateBonus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCCanUseDropRateBonus)
    MergeFrom(*source);
  }
}

void CMsgGCToGCCanUseDropRateBonus::MergeFrom(const CMsgGCToGCCanUseDropRateBonus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      drop_rate_bonus_ = from.drop_rate_bonus_;
    }
    if (cached_has_bits & 0x00000004u) {
      booster_type_ = from.booster_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      exclusive_item_def_ = from.exclusive_item_def_;
    }
    if (cached_has_bits & 0x00000010u) {
      allow_equal_rate_ = from.allow_equal_rate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCCanUseDropRateBonus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCCanUseDropRateBonus::CopyFrom(const CMsgGCToGCCanUseDropRateBonus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCCanUseDropRateBonus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCCanUseDropRateBonus::IsInitialized() const {
  return true;
}

void CMsgGCToGCCanUseDropRateBonus::Swap(CMsgGCToGCCanUseDropRateBonus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCCanUseDropRateBonus::InternalSwap(CMsgGCToGCCanUseDropRateBonus* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(drop_rate_bonus_, other->drop_rate_bonus_);
  std::swap(booster_type_, other->booster_type_);
  std::swap(exclusive_item_def_, other->exclusive_item_def_);
  std::swap(allow_equal_rate_, other->allow_equal_rate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCCanUseDropRateBonus::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCCanUseDropRateBonus

// optional uint32 account_id = 1;
bool CMsgGCToGCCanUseDropRateBonus::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCCanUseDropRateBonus::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCCanUseDropRateBonus::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCCanUseDropRateBonus::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgGCToGCCanUseDropRateBonus::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCCanUseDropRateBonus.account_id)
  return account_id_;
}
void CMsgGCToGCCanUseDropRateBonus::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCCanUseDropRateBonus.account_id)
}

// optional float drop_rate_bonus = 2;
bool CMsgGCToGCCanUseDropRateBonus::has_drop_rate_bonus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCCanUseDropRateBonus::set_has_drop_rate_bonus() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCCanUseDropRateBonus::clear_has_drop_rate_bonus() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCCanUseDropRateBonus::clear_drop_rate_bonus() {
  drop_rate_bonus_ = 0;
  clear_has_drop_rate_bonus();
}
float CMsgGCToGCCanUseDropRateBonus::drop_rate_bonus() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCCanUseDropRateBonus.drop_rate_bonus)
  return drop_rate_bonus_;
}
void CMsgGCToGCCanUseDropRateBonus::set_drop_rate_bonus(float value) {
  set_has_drop_rate_bonus();
  drop_rate_bonus_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCCanUseDropRateBonus.drop_rate_bonus)
}

// optional uint32 booster_type = 3;
bool CMsgGCToGCCanUseDropRateBonus::has_booster_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCToGCCanUseDropRateBonus::set_has_booster_type() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCToGCCanUseDropRateBonus::clear_has_booster_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCToGCCanUseDropRateBonus::clear_booster_type() {
  booster_type_ = 0u;
  clear_has_booster_type();
}
::google::protobuf::uint32 CMsgGCToGCCanUseDropRateBonus::booster_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCCanUseDropRateBonus.booster_type)
  return booster_type_;
}
void CMsgGCToGCCanUseDropRateBonus::set_booster_type(::google::protobuf::uint32 value) {
  set_has_booster_type();
  booster_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCCanUseDropRateBonus.booster_type)
}

// optional uint32 exclusive_item_def = 4;
bool CMsgGCToGCCanUseDropRateBonus::has_exclusive_item_def() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGCToGCCanUseDropRateBonus::set_has_exclusive_item_def() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGCToGCCanUseDropRateBonus::clear_has_exclusive_item_def() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGCToGCCanUseDropRateBonus::clear_exclusive_item_def() {
  exclusive_item_def_ = 0u;
  clear_has_exclusive_item_def();
}
::google::protobuf::uint32 CMsgGCToGCCanUseDropRateBonus::exclusive_item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCCanUseDropRateBonus.exclusive_item_def)
  return exclusive_item_def_;
}
void CMsgGCToGCCanUseDropRateBonus::set_exclusive_item_def(::google::protobuf::uint32 value) {
  set_has_exclusive_item_def();
  exclusive_item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCCanUseDropRateBonus.exclusive_item_def)
}

// optional bool allow_equal_rate = 5;
bool CMsgGCToGCCanUseDropRateBonus::has_allow_equal_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgGCToGCCanUseDropRateBonus::set_has_allow_equal_rate() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgGCToGCCanUseDropRateBonus::clear_has_allow_equal_rate() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgGCToGCCanUseDropRateBonus::clear_allow_equal_rate() {
  allow_equal_rate_ = false;
  clear_has_allow_equal_rate();
}
bool CMsgGCToGCCanUseDropRateBonus::allow_equal_rate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCCanUseDropRateBonus.allow_equal_rate)
  return allow_equal_rate_;
}
void CMsgGCToGCCanUseDropRateBonus::set_allow_equal_rate(bool value) {
  set_has_allow_equal_rate();
  allow_equal_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCCanUseDropRateBonus.allow_equal_rate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSQLAddDropRateBonus::kAccountIdFieldNumber;
const int CMsgSQLAddDropRateBonus::kItemIdFieldNumber;
const int CMsgSQLAddDropRateBonus::kItemDefFieldNumber;
const int CMsgSQLAddDropRateBonus::kDropRateBonusFieldNumber;
const int CMsgSQLAddDropRateBonus::kBoosterTypeFieldNumber;
const int CMsgSQLAddDropRateBonus::kSecondsDurationFieldNumber;
const int CMsgSQLAddDropRateBonus::kEndTimeStampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSQLAddDropRateBonus::CMsgSQLAddDropRateBonus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSQLAddDropRateBonus)
}
CMsgSQLAddDropRateBonus::CMsgSQLAddDropRateBonus(const CMsgSQLAddDropRateBonus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&end_time_stamp_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(end_time_stamp_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSQLAddDropRateBonus)
}

void CMsgSQLAddDropRateBonus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&end_time_stamp_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(end_time_stamp_));
}

CMsgSQLAddDropRateBonus::~CMsgSQLAddDropRateBonus() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSQLAddDropRateBonus)
  SharedDtor();
}

void CMsgSQLAddDropRateBonus::SharedDtor() {
}

void CMsgSQLAddDropRateBonus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSQLAddDropRateBonus::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSQLAddDropRateBonus& CMsgSQLAddDropRateBonus::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSQLAddDropRateBonus* CMsgSQLAddDropRateBonus::New(::google::protobuf::Arena* arena) const {
  CMsgSQLAddDropRateBonus* n = new CMsgSQLAddDropRateBonus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSQLAddDropRateBonus::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSQLAddDropRateBonus)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&end_time_stamp_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(end_time_stamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSQLAddDropRateBonus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSQLAddDropRateBonus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_def = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_item_def();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float drop_rate_bonus = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {
          set_has_drop_rate_bonus();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &drop_rate_bonus_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 booster_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_booster_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booster_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 seconds_duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_seconds_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seconds_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 end_time_stamp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_end_time_stamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &end_time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSQLAddDropRateBonus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSQLAddDropRateBonus)
  return false;
#undef DO_
}

void CMsgSQLAddDropRateBonus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSQLAddDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 item_def = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_def(), output);
  }

  // optional float drop_rate_bonus = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->drop_rate_bonus(), output);
  }

  // optional uint32 booster_type = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->booster_type(), output);
  }

  // optional uint32 seconds_duration = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->seconds_duration(), output);
  }

  // optional uint32 end_time_stamp = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->end_time_stamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSQLAddDropRateBonus)
}

::google::protobuf::uint8* CMsgSQLAddDropRateBonus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSQLAddDropRateBonus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 item_def = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_def(), target);
  }

  // optional float drop_rate_bonus = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->drop_rate_bonus(), target);
  }

  // optional uint32 booster_type = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->booster_type(), target);
  }

  // optional uint32 seconds_duration = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->seconds_duration(), target);
  }

  // optional uint32 end_time_stamp = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->end_time_stamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSQLAddDropRateBonus)
  return target;
}

size_t CMsgSQLAddDropRateBonus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSQLAddDropRateBonus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 item_def = 3;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional float drop_rate_bonus = 4;
    if (has_drop_rate_bonus()) {
      total_size += 1 + 4;
    }

    // optional uint32 booster_type = 5;
    if (has_booster_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booster_type());
    }

    // optional uint32 seconds_duration = 6;
    if (has_seconds_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seconds_duration());
    }

    // optional uint32 end_time_stamp = 7;
    if (has_end_time_stamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->end_time_stamp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSQLAddDropRateBonus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSQLAddDropRateBonus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSQLAddDropRateBonus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSQLAddDropRateBonus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSQLAddDropRateBonus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSQLAddDropRateBonus)
    MergeFrom(*source);
  }
}

void CMsgSQLAddDropRateBonus::MergeFrom(const CMsgSQLAddDropRateBonus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSQLAddDropRateBonus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000008u) {
      drop_rate_bonus_ = from.drop_rate_bonus_;
    }
    if (cached_has_bits & 0x00000010u) {
      booster_type_ = from.booster_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      seconds_duration_ = from.seconds_duration_;
    }
    if (cached_has_bits & 0x00000040u) {
      end_time_stamp_ = from.end_time_stamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSQLAddDropRateBonus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSQLAddDropRateBonus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSQLAddDropRateBonus::CopyFrom(const CMsgSQLAddDropRateBonus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSQLAddDropRateBonus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSQLAddDropRateBonus::IsInitialized() const {
  return true;
}

void CMsgSQLAddDropRateBonus::Swap(CMsgSQLAddDropRateBonus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSQLAddDropRateBonus::InternalSwap(CMsgSQLAddDropRateBonus* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(account_id_, other->account_id_);
  std::swap(item_def_, other->item_def_);
  std::swap(drop_rate_bonus_, other->drop_rate_bonus_);
  std::swap(booster_type_, other->booster_type_);
  std::swap(seconds_duration_, other->seconds_duration_);
  std::swap(end_time_stamp_, other->end_time_stamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSQLAddDropRateBonus::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSQLAddDropRateBonus

// optional uint32 account_id = 1;
bool CMsgSQLAddDropRateBonus::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgSQLAddDropRateBonus::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgSQLAddDropRateBonus::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgSQLAddDropRateBonus::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgSQLAddDropRateBonus::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLAddDropRateBonus.account_id)
  return account_id_;
}
void CMsgSQLAddDropRateBonus::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLAddDropRateBonus.account_id)
}

// optional uint64 item_id = 2;
bool CMsgSQLAddDropRateBonus::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSQLAddDropRateBonus::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSQLAddDropRateBonus::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSQLAddDropRateBonus::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgSQLAddDropRateBonus::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLAddDropRateBonus.item_id)
  return item_id_;
}
void CMsgSQLAddDropRateBonus::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLAddDropRateBonus.item_id)
}

// optional uint32 item_def = 3;
bool CMsgSQLAddDropRateBonus::has_item_def() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgSQLAddDropRateBonus::set_has_item_def() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgSQLAddDropRateBonus::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgSQLAddDropRateBonus::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
::google::protobuf::uint32 CMsgSQLAddDropRateBonus::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLAddDropRateBonus.item_def)
  return item_def_;
}
void CMsgSQLAddDropRateBonus::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLAddDropRateBonus.item_def)
}

// optional float drop_rate_bonus = 4;
bool CMsgSQLAddDropRateBonus::has_drop_rate_bonus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgSQLAddDropRateBonus::set_has_drop_rate_bonus() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgSQLAddDropRateBonus::clear_has_drop_rate_bonus() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgSQLAddDropRateBonus::clear_drop_rate_bonus() {
  drop_rate_bonus_ = 0;
  clear_has_drop_rate_bonus();
}
float CMsgSQLAddDropRateBonus::drop_rate_bonus() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLAddDropRateBonus.drop_rate_bonus)
  return drop_rate_bonus_;
}
void CMsgSQLAddDropRateBonus::set_drop_rate_bonus(float value) {
  set_has_drop_rate_bonus();
  drop_rate_bonus_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLAddDropRateBonus.drop_rate_bonus)
}

// optional uint32 booster_type = 5;
bool CMsgSQLAddDropRateBonus::has_booster_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgSQLAddDropRateBonus::set_has_booster_type() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgSQLAddDropRateBonus::clear_has_booster_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgSQLAddDropRateBonus::clear_booster_type() {
  booster_type_ = 0u;
  clear_has_booster_type();
}
::google::protobuf::uint32 CMsgSQLAddDropRateBonus::booster_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLAddDropRateBonus.booster_type)
  return booster_type_;
}
void CMsgSQLAddDropRateBonus::set_booster_type(::google::protobuf::uint32 value) {
  set_has_booster_type();
  booster_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLAddDropRateBonus.booster_type)
}

// optional uint32 seconds_duration = 6;
bool CMsgSQLAddDropRateBonus::has_seconds_duration() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgSQLAddDropRateBonus::set_has_seconds_duration() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgSQLAddDropRateBonus::clear_has_seconds_duration() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgSQLAddDropRateBonus::clear_seconds_duration() {
  seconds_duration_ = 0u;
  clear_has_seconds_duration();
}
::google::protobuf::uint32 CMsgSQLAddDropRateBonus::seconds_duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLAddDropRateBonus.seconds_duration)
  return seconds_duration_;
}
void CMsgSQLAddDropRateBonus::set_seconds_duration(::google::protobuf::uint32 value) {
  set_has_seconds_duration();
  seconds_duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLAddDropRateBonus.seconds_duration)
}

// optional uint32 end_time_stamp = 7;
bool CMsgSQLAddDropRateBonus::has_end_time_stamp() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgSQLAddDropRateBonus::set_has_end_time_stamp() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgSQLAddDropRateBonus::clear_has_end_time_stamp() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgSQLAddDropRateBonus::clear_end_time_stamp() {
  end_time_stamp_ = 0u;
  clear_has_end_time_stamp();
}
::google::protobuf::uint32 CMsgSQLAddDropRateBonus::end_time_stamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLAddDropRateBonus.end_time_stamp)
  return end_time_stamp_;
}
void CMsgSQLAddDropRateBonus::set_end_time_stamp(::google::protobuf::uint32 value) {
  set_has_end_time_stamp();
  end_time_stamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLAddDropRateBonus.end_time_stamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSQLUpgradeBattleBooster::kAccountIdFieldNumber;
const int CMsgSQLUpgradeBattleBooster::kItemDefFieldNumber;
const int CMsgSQLUpgradeBattleBooster::kBonusToAddFieldNumber;
const int CMsgSQLUpgradeBattleBooster::kBoosterTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSQLUpgradeBattleBooster::CMsgSQLUpgradeBattleBooster()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSQLUpgradeBattleBooster)
}
CMsgSQLUpgradeBattleBooster::CMsgSQLUpgradeBattleBooster(const CMsgSQLUpgradeBattleBooster& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    reinterpret_cast<char*>(&booster_type_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(booster_type_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSQLUpgradeBattleBooster)
}

void CMsgSQLUpgradeBattleBooster::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, reinterpret_cast<char*>(&booster_type_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(booster_type_));
}

CMsgSQLUpgradeBattleBooster::~CMsgSQLUpgradeBattleBooster() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSQLUpgradeBattleBooster)
  SharedDtor();
}

void CMsgSQLUpgradeBattleBooster::SharedDtor() {
}

void CMsgSQLUpgradeBattleBooster::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSQLUpgradeBattleBooster::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSQLUpgradeBattleBooster& CMsgSQLUpgradeBattleBooster::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSQLUpgradeBattleBooster* CMsgSQLUpgradeBattleBooster::New(::google::protobuf::Arena* arena) const {
  CMsgSQLUpgradeBattleBooster* n = new CMsgSQLUpgradeBattleBooster;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSQLUpgradeBattleBooster::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&account_id_, 0, reinterpret_cast<char*>(&booster_type_) -
      reinterpret_cast<char*>(&account_id_) + sizeof(booster_type_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSQLUpgradeBattleBooster::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_def = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_def();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float bonus_to_add = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_bonus_to_add();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &bonus_to_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 booster_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_booster_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &booster_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSQLUpgradeBattleBooster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSQLUpgradeBattleBooster)
  return false;
#undef DO_
}

void CMsgSQLUpgradeBattleBooster::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 item_def = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_def(), output);
  }

  // optional float bonus_to_add = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->bonus_to_add(), output);
  }

  // optional uint32 booster_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->booster_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSQLUpgradeBattleBooster)
}

::google::protobuf::uint8* CMsgSQLUpgradeBattleBooster::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 item_def = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_def(), target);
  }

  // optional float bonus_to_add = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->bonus_to_add(), target);
  }

  // optional uint32 booster_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->booster_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSQLUpgradeBattleBooster)
  return target;
}

size_t CMsgSQLUpgradeBattleBooster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 item_def = 2;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional float bonus_to_add = 3;
    if (has_bonus_to_add()) {
      total_size += 1 + 4;
    }

    // optional uint32 booster_type = 4;
    if (has_booster_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->booster_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSQLUpgradeBattleBooster::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSQLUpgradeBattleBooster* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSQLUpgradeBattleBooster>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSQLUpgradeBattleBooster)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSQLUpgradeBattleBooster)
    MergeFrom(*source);
  }
}

void CMsgSQLUpgradeBattleBooster::MergeFrom(const CMsgSQLUpgradeBattleBooster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000004u) {
      bonus_to_add_ = from.bonus_to_add_;
    }
    if (cached_has_bits & 0x00000008u) {
      booster_type_ = from.booster_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSQLUpgradeBattleBooster::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSQLUpgradeBattleBooster::CopyFrom(const CMsgSQLUpgradeBattleBooster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSQLUpgradeBattleBooster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSQLUpgradeBattleBooster::IsInitialized() const {
  return true;
}

void CMsgSQLUpgradeBattleBooster::Swap(CMsgSQLUpgradeBattleBooster* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSQLUpgradeBattleBooster::InternalSwap(CMsgSQLUpgradeBattleBooster* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(item_def_, other->item_def_);
  std::swap(bonus_to_add_, other->bonus_to_add_);
  std::swap(booster_type_, other->booster_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSQLUpgradeBattleBooster::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSQLUpgradeBattleBooster

// optional uint32 account_id = 1;
bool CMsgSQLUpgradeBattleBooster::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSQLUpgradeBattleBooster::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSQLUpgradeBattleBooster::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSQLUpgradeBattleBooster::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgSQLUpgradeBattleBooster::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLUpgradeBattleBooster.account_id)
  return account_id_;
}
void CMsgSQLUpgradeBattleBooster::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLUpgradeBattleBooster.account_id)
}

// optional uint32 item_def = 2;
bool CMsgSQLUpgradeBattleBooster::has_item_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgSQLUpgradeBattleBooster::set_has_item_def() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgSQLUpgradeBattleBooster::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgSQLUpgradeBattleBooster::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
::google::protobuf::uint32 CMsgSQLUpgradeBattleBooster::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLUpgradeBattleBooster.item_def)
  return item_def_;
}
void CMsgSQLUpgradeBattleBooster::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLUpgradeBattleBooster.item_def)
}

// optional float bonus_to_add = 3;
bool CMsgSQLUpgradeBattleBooster::has_bonus_to_add() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgSQLUpgradeBattleBooster::set_has_bonus_to_add() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgSQLUpgradeBattleBooster::clear_has_bonus_to_add() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgSQLUpgradeBattleBooster::clear_bonus_to_add() {
  bonus_to_add_ = 0;
  clear_has_bonus_to_add();
}
float CMsgSQLUpgradeBattleBooster::bonus_to_add() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLUpgradeBattleBooster.bonus_to_add)
  return bonus_to_add_;
}
void CMsgSQLUpgradeBattleBooster::set_bonus_to_add(float value) {
  set_has_bonus_to_add();
  bonus_to_add_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLUpgradeBattleBooster.bonus_to_add)
}

// optional uint32 booster_type = 4;
bool CMsgSQLUpgradeBattleBooster::has_booster_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgSQLUpgradeBattleBooster::set_has_booster_type() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgSQLUpgradeBattleBooster::clear_has_booster_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgSQLUpgradeBattleBooster::clear_booster_type() {
  booster_type_ = 0u;
  clear_has_booster_type();
}
::google::protobuf::uint32 CMsgSQLUpgradeBattleBooster::booster_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLUpgradeBattleBooster.booster_type)
  return booster_type_;
}
void CMsgSQLUpgradeBattleBooster::set_booster_type(::google::protobuf::uint32 value) {
  set_has_booster_type();
  booster_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLUpgradeBattleBooster.booster_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCRefreshSOCache::kAccountIdFieldNumber;
const int CMsgGCToGCRefreshSOCache::kReloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCRefreshSOCache::CMsgGCToGCRefreshSOCache()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCRefreshSOCache)
}
CMsgGCToGCRefreshSOCache::CMsgGCToGCRefreshSOCache(const CMsgGCToGCRefreshSOCache& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    reinterpret_cast<char*>(&reload_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(reload_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCRefreshSOCache)
}

void CMsgGCToGCRefreshSOCache::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, reinterpret_cast<char*>(&reload_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(reload_));
}

CMsgGCToGCRefreshSOCache::~CMsgGCToGCRefreshSOCache() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCRefreshSOCache)
  SharedDtor();
}

void CMsgGCToGCRefreshSOCache::SharedDtor() {
}

void CMsgGCToGCRefreshSOCache::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCRefreshSOCache::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCRefreshSOCache& CMsgGCToGCRefreshSOCache::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCRefreshSOCache* CMsgGCToGCRefreshSOCache::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCRefreshSOCache* n = new CMsgGCToGCRefreshSOCache;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCRefreshSOCache::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCRefreshSOCache)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&account_id_, 0, reinterpret_cast<char*>(&reload_) -
      reinterpret_cast<char*>(&account_id_) + sizeof(reload_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCRefreshSOCache::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCRefreshSOCache)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_reload();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reload_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCRefreshSOCache)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCRefreshSOCache)
  return false;
#undef DO_
}

void CMsgGCToGCRefreshSOCache::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCRefreshSOCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional bool reload = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reload(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCRefreshSOCache)
}

::google::protobuf::uint8* CMsgGCToGCRefreshSOCache::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCRefreshSOCache)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional bool reload = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reload(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCRefreshSOCache)
  return target;
}

size_t CMsgGCToGCRefreshSOCache::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCRefreshSOCache)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional bool reload = 2;
    if (has_reload()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCRefreshSOCache::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCRefreshSOCache)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCRefreshSOCache* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCRefreshSOCache>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCRefreshSOCache)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCRefreshSOCache)
    MergeFrom(*source);
  }
}

void CMsgGCToGCRefreshSOCache::MergeFrom(const CMsgGCToGCRefreshSOCache& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCRefreshSOCache)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      reload_ = from.reload_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCRefreshSOCache::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCRefreshSOCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCRefreshSOCache::CopyFrom(const CMsgGCToGCRefreshSOCache& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCRefreshSOCache)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCRefreshSOCache::IsInitialized() const {
  return true;
}

void CMsgGCToGCRefreshSOCache::Swap(CMsgGCToGCRefreshSOCache* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCRefreshSOCache::InternalSwap(CMsgGCToGCRefreshSOCache* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(reload_, other->reload_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCRefreshSOCache::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCRefreshSOCache

// optional uint32 account_id = 1;
bool CMsgGCToGCRefreshSOCache::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCRefreshSOCache::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCRefreshSOCache::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCRefreshSOCache::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgGCToGCRefreshSOCache::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCRefreshSOCache.account_id)
  return account_id_;
}
void CMsgGCToGCRefreshSOCache::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCRefreshSOCache.account_id)
}

// optional bool reload = 2;
bool CMsgGCToGCRefreshSOCache::has_reload() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCRefreshSOCache::set_has_reload() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCRefreshSOCache::clear_has_reload() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCRefreshSOCache::clear_reload() {
  reload_ = false;
  clear_has_reload();
}
bool CMsgGCToGCRefreshSOCache::reload() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCRefreshSOCache.reload)
  return reload_;
}
void CMsgGCToGCRefreshSOCache::set_reload(bool value) {
  set_has_reload();
  reload_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCRefreshSOCache.reload)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCCheckAccountTradeStatus::kAccountIdFieldNumber;
const int CMsgGCToGCCheckAccountTradeStatus::kInitiatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCCheckAccountTradeStatus::CMsgGCToGCCheckAccountTradeStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
}
CMsgGCToGCCheckAccountTradeStatus::CMsgGCToGCCheckAccountTradeStatus(const CMsgGCToGCCheckAccountTradeStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    reinterpret_cast<char*>(&initiator_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(initiator_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
}

void CMsgGCToGCCheckAccountTradeStatus::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, reinterpret_cast<char*>(&initiator_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(initiator_));
}

CMsgGCToGCCheckAccountTradeStatus::~CMsgGCToGCCheckAccountTradeStatus() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  SharedDtor();
}

void CMsgGCToGCCheckAccountTradeStatus::SharedDtor() {
}

void CMsgGCToGCCheckAccountTradeStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCCheckAccountTradeStatus::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCCheckAccountTradeStatus& CMsgGCToGCCheckAccountTradeStatus::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCCheckAccountTradeStatus* CMsgGCToGCCheckAccountTradeStatus::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCCheckAccountTradeStatus* n = new CMsgGCToGCCheckAccountTradeStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCCheckAccountTradeStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&account_id_, 0, reinterpret_cast<char*>(&initiator_) -
      reinterpret_cast<char*>(&account_id_) + sizeof(initiator_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCCheckAccountTradeStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool initiator = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_initiator();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &initiator_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  return false;
#undef DO_
}

void CMsgGCToGCCheckAccountTradeStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional bool initiator = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->initiator(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
}

::google::protobuf::uint8* CMsgGCToGCCheckAccountTradeStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional bool initiator = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->initiator(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  return target;
}

size_t CMsgGCToGCCheckAccountTradeStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional bool initiator = 2;
    if (has_initiator()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCCheckAccountTradeStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCCheckAccountTradeStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCCheckAccountTradeStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
    MergeFrom(*source);
  }
}

void CMsgGCToGCCheckAccountTradeStatus::MergeFrom(const CMsgGCToGCCheckAccountTradeStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      initiator_ = from.initiator_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCCheckAccountTradeStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCCheckAccountTradeStatus::CopyFrom(const CMsgGCToGCCheckAccountTradeStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCCheckAccountTradeStatus::IsInitialized() const {
  return true;
}

void CMsgGCToGCCheckAccountTradeStatus::Swap(CMsgGCToGCCheckAccountTradeStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCCheckAccountTradeStatus::InternalSwap(CMsgGCToGCCheckAccountTradeStatus* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(initiator_, other->initiator_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCCheckAccountTradeStatus::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCCheckAccountTradeStatus

// optional uint32 account_id = 1;
bool CMsgGCToGCCheckAccountTradeStatus::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCCheckAccountTradeStatus::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCCheckAccountTradeStatus::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCCheckAccountTradeStatus::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgGCToGCCheckAccountTradeStatus::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCCheckAccountTradeStatus.account_id)
  return account_id_;
}
void CMsgGCToGCCheckAccountTradeStatus::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCCheckAccountTradeStatus.account_id)
}

// optional bool initiator = 2;
bool CMsgGCToGCCheckAccountTradeStatus::has_initiator() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCCheckAccountTradeStatus::set_has_initiator() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCCheckAccountTradeStatus::clear_has_initiator() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCCheckAccountTradeStatus::clear_initiator() {
  initiator_ = false;
  clear_has_initiator();
}
bool CMsgGCToGCCheckAccountTradeStatus::initiator() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCCheckAccountTradeStatus.initiator)
  return initiator_;
}
void CMsgGCToGCCheckAccountTradeStatus::set_initiator(bool value) {
  set_has_initiator();
  initiator_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCCheckAccountTradeStatus.initiator)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCCheckAccountTradeStatusResponse::kCanTradeFieldNumber;
const int CMsgGCToGCCheckAccountTradeStatusResponse::kErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCCheckAccountTradeStatusResponse::CMsgGCToGCCheckAccountTradeStatusResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
}
CMsgGCToGCCheckAccountTradeStatusResponse::CMsgGCToGCCheckAccountTradeStatusResponse(const CMsgGCToGCCheckAccountTradeStatusResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&can_trade_, &from.can_trade_,
    reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&can_trade_) + sizeof(error_code_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&can_trade_, 0, reinterpret_cast<char*>(&error_code_) -
    reinterpret_cast<char*>(&can_trade_) + sizeof(error_code_));
}

CMsgGCToGCCheckAccountTradeStatusResponse::~CMsgGCToGCCheckAccountTradeStatusResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  SharedDtor();
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SharedDtor() {
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCCheckAccountTradeStatusResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCCheckAccountTradeStatusResponse& CMsgGCToGCCheckAccountTradeStatusResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCCheckAccountTradeStatusResponse* CMsgGCToGCCheckAccountTradeStatusResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCCheckAccountTradeStatusResponse* n = new CMsgGCToGCCheckAccountTradeStatusResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCCheckAccountTradeStatusResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&can_trade_, 0, reinterpret_cast<char*>(&error_code_) -
      reinterpret_cast<char*>(&can_trade_) + sizeof(error_code_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCCheckAccountTradeStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool can_trade = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_can_trade();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &can_trade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 error_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_error_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  return false;
#undef DO_
}

void CMsgGCToGCCheckAccountTradeStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool can_trade = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->can_trade(), output);
  }

  // optional uint32 error_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->error_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
}

::google::protobuf::uint8* CMsgGCToGCCheckAccountTradeStatusResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool can_trade = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->can_trade(), target);
  }

  // optional uint32 error_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->error_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  return target;
}

size_t CMsgGCToGCCheckAccountTradeStatusResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool can_trade = 1;
    if (has_can_trade()) {
      total_size += 1 + 1;
    }

    // optional uint32 error_code = 2;
    if (has_error_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCCheckAccountTradeStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCCheckAccountTradeStatusResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCCheckAccountTradeStatusResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCCheckAccountTradeStatusResponse::MergeFrom(const CMsgGCToGCCheckAccountTradeStatusResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      can_trade_ = from.can_trade_;
    }
    if (cached_has_bits & 0x00000002u) {
      error_code_ = from.error_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCCheckAccountTradeStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCCheckAccountTradeStatusResponse::CopyFrom(const CMsgGCToGCCheckAccountTradeStatusResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCCheckAccountTradeStatusResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCCheckAccountTradeStatusResponse::Swap(CMsgGCToGCCheckAccountTradeStatusResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCCheckAccountTradeStatusResponse::InternalSwap(CMsgGCToGCCheckAccountTradeStatusResponse* other) {
  std::swap(can_trade_, other->can_trade_);
  std::swap(error_code_, other->error_code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCCheckAccountTradeStatusResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCCheckAccountTradeStatusResponse

// optional bool can_trade = 1;
bool CMsgGCToGCCheckAccountTradeStatusResponse::has_can_trade() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCCheckAccountTradeStatusResponse::set_has_can_trade() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCCheckAccountTradeStatusResponse::clear_has_can_trade() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCCheckAccountTradeStatusResponse::clear_can_trade() {
  can_trade_ = false;
  clear_has_can_trade();
}
bool CMsgGCToGCCheckAccountTradeStatusResponse::can_trade() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse.can_trade)
  return can_trade_;
}
void CMsgGCToGCCheckAccountTradeStatusResponse::set_can_trade(bool value) {
  set_has_can_trade();
  can_trade_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse.can_trade)
}

// optional uint32 error_code = 2;
bool CMsgGCToGCCheckAccountTradeStatusResponse::has_error_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCCheckAccountTradeStatusResponse::set_has_error_code() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCCheckAccountTradeStatusResponse::clear_has_error_code() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCCheckAccountTradeStatusResponse::clear_error_code() {
  error_code_ = 0u;
  clear_has_error_code();
}
::google::protobuf::uint32 CMsgGCToGCCheckAccountTradeStatusResponse::error_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse.error_code)
  return error_code_;
}
void CMsgGCToGCCheckAccountTradeStatusResponse::set_error_code(::google::protobuf::uint32 value) {
  set_has_error_code();
  error_code_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCCheckAccountTradeStatusResponse.error_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kNameFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kValueUint32FieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::kValueFloatFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
}
CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&value_uint32_, &from.value_uint32_,
    reinterpret_cast<char*>(&value_float_) -
    reinterpret_cast<char*>(&value_uint32_) + sizeof(value_float_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&value_uint32_, 0, reinterpret_cast<char*>(&value_float_) -
    reinterpret_cast<char*>(&value_uint32_) + sizeof(value_float_));
}

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::~CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* n = new CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&value_uint32_, 0, reinterpret_cast<char*>(&value_float_) -
      reinterpret_cast<char*>(&value_uint32_) + sizeof(value_float_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 value_uint32 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_value_uint32();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &value_uint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float value_float = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_value_float();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &value_float_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  return false;
#undef DO_
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint32 value_uint32 = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->value_uint32(), output);
  }

  // optional float value_float = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->value_float(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint32 value_uint32 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->value_uint32(), target);
  }

  // optional float value_float = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->value_float(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  return target;
}

size_t CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint32 value_uint32 = 2;
    if (has_value_uint32()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->value_uint32());
    }

    // optional float value_float = 3;
    if (has_value_float()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::MergeFrom(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      value_uint32_ = from.value_uint32_;
    }
    if (cached_has_bits & 0x00000004u) {
      value_float_ = from.value_float_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::IsInitialized() const {
  return true;
}

void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::Swap(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::InternalSwap(CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* other) {
  name_.Swap(&other->name_);
  std::swap(value_uint32_, other->value_uint32_);
  std::swap(value_float_, other->value_float_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute

// optional string name = 1;
bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
  return name_.GetNoArena();
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
}
#if LANG_CXX11
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
}
#endif
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
}
::std::string* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.name)
}

// optional uint32 value_uint32 = 2;
bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::has_value_uint32() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_has_value_uint32() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::clear_has_value_uint32() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::clear_value_uint32() {
  value_uint32_ = 0u;
  clear_has_value_uint32();
}
::google::protobuf::uint32 CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::value_uint32() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_uint32)
  return value_uint32_;
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_value_uint32(::google::protobuf::uint32 value) {
  set_has_value_uint32();
  value_uint32_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_uint32)
}

// optional float value_float = 3;
bool CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::has_value_float() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_has_value_float() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::clear_has_value_float() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::clear_value_float() {
  value_float_ = 0;
  clear_has_value_float();
}
float CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::value_float() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_float)
  return value_float_;
}
void CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute::set_value_float(float value) {
  set_has_value_float();
  value_float_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute.value_float)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::kOwnerAccountIdFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::kAuditActionFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::kAuditDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
}
CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&owner_account_id_, &from.owner_account_id_,
    reinterpret_cast<char*>(&audit_data_) -
    reinterpret_cast<char*>(&owner_account_id_) + sizeof(audit_data_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&owner_account_id_, 0, reinterpret_cast<char*>(&audit_data_) -
    reinterpret_cast<char*>(&owner_account_id_) + sizeof(audit_data_));
}

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::~CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SharedDtor() {
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* n = new CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&owner_account_id_, 0, reinterpret_cast<char*>(&audit_data_) -
      reinterpret_cast<char*>(&owner_account_id_) + sizeof(audit_data_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 owner_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_owner_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 audit_action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_audit_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &audit_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 audit_data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_audit_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &audit_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  return false;
#undef DO_
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->owner_account_id(), output);
  }

  // optional uint32 audit_action = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->audit_action(), output);
  }

  // optional uint64 audit_data = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->audit_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->owner_account_id(), target);
  }

  // optional uint32 audit_action = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->audit_action(), target);
  }

  // optional uint64 audit_data = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->audit_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  return target;
}

size_t CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 owner_account_id = 1;
    if (has_owner_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

    // optional uint32 audit_action = 2;
    if (has_audit_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->audit_action());
    }

    // optional uint64 audit_data = 3;
    if (has_audit_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->audit_data());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::MergeFrom(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      owner_account_id_ = from.owner_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      audit_action_ = from.audit_action_;
    }
    if (cached_has_bits & 0x00000004u) {
      audit_data_ = from.audit_data_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::IsInitialized() const {
  return true;
}

void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::Swap(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::InternalSwap(CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* other) {
  std::swap(owner_account_id_, other->owner_account_id_);
  std::swap(audit_action_, other->audit_action_);
  std::swap(audit_data_, other->audit_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry

// optional uint32 owner_account_id = 1;
bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::has_owner_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::set_has_owner_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::clear_has_owner_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::clear_owner_account_id() {
  owner_account_id_ = 0u;
  clear_has_owner_account_id();
}
::google::protobuf::uint32 CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::owner_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry.owner_account_id)
  return owner_account_id_;
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::set_owner_account_id(::google::protobuf::uint32 value) {
  set_has_owner_account_id();
  owner_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry.owner_account_id)
}

// optional uint32 audit_action = 2;
bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::has_audit_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::set_has_audit_action() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::clear_has_audit_action() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::clear_audit_action() {
  audit_action_ = 0u;
  clear_has_audit_action();
}
::google::protobuf::uint32 CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::audit_action() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry.audit_action)
  return audit_action_;
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::set_audit_action(::google::protobuf::uint32 value) {
  set_has_audit_action();
  audit_action_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry.audit_action)
}

// optional uint64 audit_data = 3;
bool CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::has_audit_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::set_has_audit_data() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::clear_has_audit_data() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::clear_audit_data() {
  audit_data_ = GOOGLE_ULONGLONG(0);
  clear_has_audit_data();
}
::google::protobuf::uint64 CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::audit_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry.audit_data)
  return audit_data_;
}
void CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry::set_audit_data(::google::protobuf::uint64 value) {
  set_has_audit_data();
  audit_data_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry.audit_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGrantAccountRolledItems_Item::kItemDefFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kLootListsFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kIgnoreLimitFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kOriginFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kDynamicAttributesFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kAdditionalAuditEntriesFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems_Item::kInventoryTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGrantAccountRolledItems_Item::CMsgGCToGCGrantAccountRolledItems_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
}
CMsgGCToGCGrantAccountRolledItems_Item::CMsgGCToGCGrantAccountRolledItems_Item(const CMsgGCToGCGrantAccountRolledItems_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      loot_lists_(from.loot_lists_),
      dynamic_attributes_(from.dynamic_attributes_),
      additional_audit_entries_(from.additional_audit_entries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_def_, &from.item_def_,
    reinterpret_cast<char*>(&inventory_token_) -
    reinterpret_cast<char*>(&item_def_) + sizeof(inventory_token_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
}

void CMsgGCToGCGrantAccountRolledItems_Item::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_def_, 0, reinterpret_cast<char*>(&inventory_token_) -
    reinterpret_cast<char*>(&item_def_) + sizeof(inventory_token_));
}

CMsgGCToGCGrantAccountRolledItems_Item::~CMsgGCToGCGrantAccountRolledItems_Item() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems_Item::SharedDtor() {
}

void CMsgGCToGCGrantAccountRolledItems_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems_Item::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCGrantAccountRolledItems_Item& CMsgGCToGCGrantAccountRolledItems_Item::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCGrantAccountRolledItems_Item* CMsgGCToGCGrantAccountRolledItems_Item::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCGrantAccountRolledItems_Item* n = new CMsgGCToGCGrantAccountRolledItems_Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCGrantAccountRolledItems_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  loot_lists_.Clear();
  dynamic_attributes_.Clear();
  additional_audit_entries_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&item_def_, 0, reinterpret_cast<char*>(&inventory_token_) -
      reinterpret_cast<char*>(&item_def_) + sizeof(inventory_token_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCGrantAccountRolledItems_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_def();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string loot_lists = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_loot_lists()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loot_lists(this->loot_lists_size() - 1).data(),
            this->loot_lists(this->loot_lists_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ignore_limit = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_ignore_limit();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ignore_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 origin = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_origin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &origin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_dynamic_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_additional_audit_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 inventory_token = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_inventory_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &inventory_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  return false;
#undef DO_
}

void CMsgGCToGCGrantAccountRolledItems_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def(), output);
  }

  // repeated string loot_lists = 2;
  for (int i = 0, n = this->loot_lists_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_lists(i).data(), this->loot_lists(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->loot_lists(i), output);
  }

  // optional bool ignore_limit = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->ignore_limit(), output);
  }

  // optional uint32 origin = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->origin(), output);
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  for (unsigned int i = 0, n = this->dynamic_attributes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->dynamic_attributes(i), output);
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  for (unsigned int i = 0, n = this->additional_audit_entries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->additional_audit_entries(i), output);
  }

  // optional uint32 inventory_token = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->inventory_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def(), target);
  }

  // repeated string loot_lists = 2;
  for (int i = 0, n = this->loot_lists_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_lists(i).data(), this->loot_lists(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->loot_lists(i), target);
  }

  // optional bool ignore_limit = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->ignore_limit(), target);
  }

  // optional uint32 origin = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->origin(), target);
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  for (unsigned int i = 0, n = this->dynamic_attributes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->dynamic_attributes(i), deterministic, target);
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  for (unsigned int i = 0, n = this->additional_audit_entries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->additional_audit_entries(i), deterministic, target);
  }

  // optional uint32 inventory_token = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->inventory_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  return target;
}

size_t CMsgGCToGCGrantAccountRolledItems_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string loot_lists = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->loot_lists_size());
  for (int i = 0, n = this->loot_lists_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->loot_lists(i));
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
  {
    unsigned int count = this->dynamic_attributes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dynamic_attributes(i));
    }
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
  {
    unsigned int count = this->additional_audit_entries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->additional_audit_entries(i));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 item_def = 1;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional bool ignore_limit = 3;
    if (has_ignore_limit()) {
      total_size += 1 + 1;
    }

    // optional uint32 origin = 4;
    if (has_origin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->origin());
    }

    // optional uint32 inventory_token = 7;
    if (has_inventory_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->inventory_token());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCGrantAccountRolledItems_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item::MergeFrom(const CMsgGCToGCGrantAccountRolledItems_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  loot_lists_.MergeFrom(from.loot_lists_);
  dynamic_attributes_.MergeFrom(from.dynamic_attributes_);
  additional_audit_entries_.MergeFrom(from.additional_audit_entries_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000002u) {
      ignore_limit_ = from.ignore_limit_;
    }
    if (cached_has_bits & 0x00000004u) {
      origin_ = from.origin_;
    }
    if (cached_has_bits & 0x00000008u) {
      inventory_token_ = from.inventory_token_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGrantAccountRolledItems_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems_Item::CopyFrom(const CMsgGCToGCGrantAccountRolledItems_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems_Item::IsInitialized() const {
  return true;
}

void CMsgGCToGCGrantAccountRolledItems_Item::Swap(CMsgGCToGCGrantAccountRolledItems_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGrantAccountRolledItems_Item::InternalSwap(CMsgGCToGCGrantAccountRolledItems_Item* other) {
  loot_lists_.InternalSwap(&other->loot_lists_);
  dynamic_attributes_.InternalSwap(&other->dynamic_attributes_);
  additional_audit_entries_.InternalSwap(&other->additional_audit_entries_);
  std::swap(item_def_, other->item_def_);
  std::swap(ignore_limit_, other->ignore_limit_);
  std::swap(origin_, other->origin_);
  std::swap(inventory_token_, other->inventory_token_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems_Item::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCGrantAccountRolledItems_Item

// optional uint32 item_def = 1;
bool CMsgGCToGCGrantAccountRolledItems_Item::has_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems_Item::set_has_item_def() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCGrantAccountRolledItems_Item::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCGrantAccountRolledItems_Item::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
::google::protobuf::uint32 CMsgGCToGCGrantAccountRolledItems_Item::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.item_def)
  return item_def_;
}
void CMsgGCToGCGrantAccountRolledItems_Item::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.item_def)
}

// repeated string loot_lists = 2;
int CMsgGCToGCGrantAccountRolledItems_Item::loot_lists_size() const {
  return loot_lists_.size();
}
void CMsgGCToGCGrantAccountRolledItems_Item::clear_loot_lists() {
  loot_lists_.Clear();
}
const ::std::string& CMsgGCToGCGrantAccountRolledItems_Item::loot_lists(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
  return loot_lists_.Get(index);
}
::std::string* CMsgGCToGCGrantAccountRolledItems_Item::mutable_loot_lists(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
  return loot_lists_.Mutable(index);
}
void CMsgGCToGCGrantAccountRolledItems_Item::set_loot_lists(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
  loot_lists_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CMsgGCToGCGrantAccountRolledItems_Item::set_loot_lists(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
  loot_lists_.Mutable(index)->assign(std::move(value));
}
#endif
void CMsgGCToGCGrantAccountRolledItems_Item::set_loot_lists(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  loot_lists_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
void CMsgGCToGCGrantAccountRolledItems_Item::set_loot_lists(int index, const char* value, size_t size) {
  loot_lists_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
::std::string* CMsgGCToGCGrantAccountRolledItems_Item::add_loot_lists() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
  return loot_lists_.Add();
}
void CMsgGCToGCGrantAccountRolledItems_Item::add_loot_lists(const ::std::string& value) {
  loot_lists_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
#if LANG_CXX11
void CMsgGCToGCGrantAccountRolledItems_Item::add_loot_lists(::std::string&& value) {
  loot_lists_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
#endif
void CMsgGCToGCGrantAccountRolledItems_Item::add_loot_lists(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  loot_lists_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
void CMsgGCToGCGrantAccountRolledItems_Item::add_loot_lists(const char* value, size_t size) {
  loot_lists_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgGCToGCGrantAccountRolledItems_Item::loot_lists() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
  return loot_lists_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgGCToGCGrantAccountRolledItems_Item::mutable_loot_lists() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.loot_lists)
  return &loot_lists_;
}

// optional bool ignore_limit = 3;
bool CMsgGCToGCGrantAccountRolledItems_Item::has_ignore_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems_Item::set_has_ignore_limit() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCGrantAccountRolledItems_Item::clear_has_ignore_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCGrantAccountRolledItems_Item::clear_ignore_limit() {
  ignore_limit_ = false;
  clear_has_ignore_limit();
}
bool CMsgGCToGCGrantAccountRolledItems_Item::ignore_limit() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.ignore_limit)
  return ignore_limit_;
}
void CMsgGCToGCGrantAccountRolledItems_Item::set_ignore_limit(bool value) {
  set_has_ignore_limit();
  ignore_limit_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.ignore_limit)
}

// optional uint32 origin = 4;
bool CMsgGCToGCGrantAccountRolledItems_Item::has_origin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems_Item::set_has_origin() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCToGCGrantAccountRolledItems_Item::clear_has_origin() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCToGCGrantAccountRolledItems_Item::clear_origin() {
  origin_ = 0u;
  clear_has_origin();
}
::google::protobuf::uint32 CMsgGCToGCGrantAccountRolledItems_Item::origin() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.origin)
  return origin_;
}
void CMsgGCToGCGrantAccountRolledItems_Item::set_origin(::google::protobuf::uint32 value) {
  set_has_origin();
  origin_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.origin)
}

// repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.DynamicAttribute dynamic_attributes = 5;
int CMsgGCToGCGrantAccountRolledItems_Item::dynamic_attributes_size() const {
  return dynamic_attributes_.size();
}
void CMsgGCToGCGrantAccountRolledItems_Item::clear_dynamic_attributes() {
  dynamic_attributes_.Clear();
}
const ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute& CMsgGCToGCGrantAccountRolledItems_Item::dynamic_attributes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.dynamic_attributes)
  return dynamic_attributes_.Get(index);
}
::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* CMsgGCToGCGrantAccountRolledItems_Item::mutable_dynamic_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.dynamic_attributes)
  return dynamic_attributes_.Mutable(index);
}
::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute* CMsgGCToGCGrantAccountRolledItems_Item::add_dynamic_attributes() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.dynamic_attributes)
  return dynamic_attributes_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute >*
CMsgGCToGCGrantAccountRolledItems_Item::mutable_dynamic_attributes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.dynamic_attributes)
  return &dynamic_attributes_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_DynamicAttribute >&
CMsgGCToGCGrantAccountRolledItems_Item::dynamic_attributes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.dynamic_attributes)
  return dynamic_attributes_;
}

// repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.AdditionalAuditEntry additional_audit_entries = 6;
int CMsgGCToGCGrantAccountRolledItems_Item::additional_audit_entries_size() const {
  return additional_audit_entries_.size();
}
void CMsgGCToGCGrantAccountRolledItems_Item::clear_additional_audit_entries() {
  additional_audit_entries_.Clear();
}
const ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry& CMsgGCToGCGrantAccountRolledItems_Item::additional_audit_entries(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.additional_audit_entries)
  return additional_audit_entries_.Get(index);
}
::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* CMsgGCToGCGrantAccountRolledItems_Item::mutable_additional_audit_entries(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.additional_audit_entries)
  return additional_audit_entries_.Mutable(index);
}
::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry* CMsgGCToGCGrantAccountRolledItems_Item::add_additional_audit_entries() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.additional_audit_entries)
  return additional_audit_entries_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry >*
CMsgGCToGCGrantAccountRolledItems_Item::mutable_additional_audit_entries() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.additional_audit_entries)
  return &additional_audit_entries_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item_AdditionalAuditEntry >&
CMsgGCToGCGrantAccountRolledItems_Item::additional_audit_entries() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.additional_audit_entries)
  return additional_audit_entries_;
}

// optional uint32 inventory_token = 7;
bool CMsgGCToGCGrantAccountRolledItems_Item::has_inventory_token() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems_Item::set_has_inventory_token() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGCToGCGrantAccountRolledItems_Item::clear_has_inventory_token() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGCToGCGrantAccountRolledItems_Item::clear_inventory_token() {
  inventory_token_ = 0u;
  clear_has_inventory_token();
}
::google::protobuf::uint32 CMsgGCToGCGrantAccountRolledItems_Item::inventory_token() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.inventory_token)
  return inventory_token_;
}
void CMsgGCToGCGrantAccountRolledItems_Item::set_inventory_token(::google::protobuf::uint32 value) {
  set_has_inventory_token();
  inventory_token_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.Item.inventory_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGrantAccountRolledItems::kAccountIdFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems::kItemsFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems::kAuditActionFieldNumber;
const int CMsgGCToGCGrantAccountRolledItems::kAuditDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGrantAccountRolledItems::CMsgGCToGCGrantAccountRolledItems()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems)
}
CMsgGCToGCGrantAccountRolledItems::CMsgGCToGCGrantAccountRolledItems(const CMsgGCToGCGrantAccountRolledItems& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    reinterpret_cast<char*>(&audit_data_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(audit_data_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGrantAccountRolledItems)
}

void CMsgGCToGCGrantAccountRolledItems::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, reinterpret_cast<char*>(&audit_data_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(audit_data_));
}

CMsgGCToGCGrantAccountRolledItems::~CMsgGCToGCGrantAccountRolledItems() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  SharedDtor();
}

void CMsgGCToGCGrantAccountRolledItems::SharedDtor() {
}

void CMsgGCToGCGrantAccountRolledItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantAccountRolledItems::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCGrantAccountRolledItems& CMsgGCToGCGrantAccountRolledItems::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCGrantAccountRolledItems* CMsgGCToGCGrantAccountRolledItems::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCGrantAccountRolledItems* n = new CMsgGCToGCGrantAccountRolledItems;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCGrantAccountRolledItems::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  items_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&account_id_, 0, reinterpret_cast<char*>(&audit_data_) -
      reinterpret_cast<char*>(&account_id_) + sizeof(audit_data_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCGrantAccountRolledItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 audit_action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_audit_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &audit_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 audit_data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_audit_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &audit_data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  return false;
#undef DO_
}

void CMsgGCToGCGrantAccountRolledItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }

  // optional uint32 audit_action = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->audit_action(), output);
  }

  // optional uint64 audit_data = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->audit_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGrantAccountRolledItems)
}

::google::protobuf::uint8* CMsgGCToGCGrantAccountRolledItems::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->items(i), deterministic, target);
  }

  // optional uint32 audit_action = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->audit_action(), target);
  }

  // optional uint64 audit_data = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->audit_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  return target;
}

size_t CMsgGCToGCGrantAccountRolledItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item items = 2;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 audit_action = 3;
    if (has_audit_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->audit_action());
    }

    // optional uint64 audit_data = 4;
    if (has_audit_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->audit_data());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantAccountRolledItems::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGrantAccountRolledItems* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCGrantAccountRolledItems>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGrantAccountRolledItems)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGrantAccountRolledItems)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantAccountRolledItems::MergeFrom(const CMsgGCToGCGrantAccountRolledItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      audit_action_ = from.audit_action_;
    }
    if (cached_has_bits & 0x00000004u) {
      audit_data_ = from.audit_data_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGrantAccountRolledItems::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantAccountRolledItems::CopyFrom(const CMsgGCToGCGrantAccountRolledItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGrantAccountRolledItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantAccountRolledItems::IsInitialized() const {
  return true;
}

void CMsgGCToGCGrantAccountRolledItems::Swap(CMsgGCToGCGrantAccountRolledItems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGrantAccountRolledItems::InternalSwap(CMsgGCToGCGrantAccountRolledItems* other) {
  items_.InternalSwap(&other->items_);
  std::swap(account_id_, other->account_id_);
  std::swap(audit_action_, other->audit_action_);
  std::swap(audit_data_, other->audit_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCGrantAccountRolledItems::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCGrantAccountRolledItems

// optional uint32 account_id = 1;
bool CMsgGCToGCGrantAccountRolledItems::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCGrantAccountRolledItems::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCGrantAccountRolledItems::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgGCToGCGrantAccountRolledItems::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.account_id)
  return account_id_;
}
void CMsgGCToGCGrantAccountRolledItems::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.account_id)
}

// repeated .proto.dota.CMsgGCToGCGrantAccountRolledItems.Item items = 2;
int CMsgGCToGCGrantAccountRolledItems::items_size() const {
  return items_.size();
}
void CMsgGCToGCGrantAccountRolledItems::clear_items() {
  items_.Clear();
}
const ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item& CMsgGCToGCGrantAccountRolledItems::items(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.items)
  return items_.Get(index);
}
::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item* CMsgGCToGCGrantAccountRolledItems::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCGrantAccountRolledItems.items)
  return items_.Mutable(index);
}
::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item* CMsgGCToGCGrantAccountRolledItems::add_items() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToGCGrantAccountRolledItems.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item >*
CMsgGCToGCGrantAccountRolledItems::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToGCGrantAccountRolledItems.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToGCGrantAccountRolledItems_Item >&
CMsgGCToGCGrantAccountRolledItems::items() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToGCGrantAccountRolledItems.items)
  return items_;
}

// optional uint32 audit_action = 3;
bool CMsgGCToGCGrantAccountRolledItems::has_audit_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems::set_has_audit_action() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCGrantAccountRolledItems::clear_has_audit_action() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCGrantAccountRolledItems::clear_audit_action() {
  audit_action_ = 0u;
  clear_has_audit_action();
}
::google::protobuf::uint32 CMsgGCToGCGrantAccountRolledItems::audit_action() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.audit_action)
  return audit_action_;
}
void CMsgGCToGCGrantAccountRolledItems::set_audit_action(::google::protobuf::uint32 value) {
  set_has_audit_action();
  audit_action_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.audit_action)
}

// optional uint64 audit_data = 4;
bool CMsgGCToGCGrantAccountRolledItems::has_audit_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCToGCGrantAccountRolledItems::set_has_audit_data() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCToGCGrantAccountRolledItems::clear_has_audit_data() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCToGCGrantAccountRolledItems::clear_audit_data() {
  audit_data_ = GOOGLE_ULONGLONG(0);
  clear_has_audit_data();
}
::google::protobuf::uint64 CMsgGCToGCGrantAccountRolledItems::audit_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantAccountRolledItems.audit_data)
  return audit_data_;
}
void CMsgGCToGCGrantAccountRolledItems::set_audit_data(::google::protobuf::uint64 value) {
  set_has_audit_data();
  audit_data_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantAccountRolledItems.audit_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCGrantSelfMadeItemToAccount::kItemDefIndexFieldNumber;
const int CMsgGCToGCGrantSelfMadeItemToAccount::kAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCGrantSelfMadeItemToAccount::CMsgGCToGCGrantSelfMadeItemToAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
}
CMsgGCToGCGrantSelfMadeItemToAccount::CMsgGCToGCGrantSelfMadeItemToAccount(const CMsgGCToGCGrantSelfMadeItemToAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_def_index_, &from.item_def_index_,
    reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&item_def_index_) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_def_index_, 0, reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&item_def_index_) + sizeof(accountid_));
}

CMsgGCToGCGrantSelfMadeItemToAccount::~CMsgGCToGCGrantSelfMadeItemToAccount() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  SharedDtor();
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SharedDtor() {
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCGrantSelfMadeItemToAccount::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCGrantSelfMadeItemToAccount& CMsgGCToGCGrantSelfMadeItemToAccount::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCGrantSelfMadeItemToAccount* CMsgGCToGCGrantSelfMadeItemToAccount::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCGrantSelfMadeItemToAccount* n = new CMsgGCToGCGrantSelfMadeItemToAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_def_index_, 0, reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&item_def_index_) + sizeof(accountid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCGrantSelfMadeItemToAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 accountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  return false;
#undef DO_
}

void CMsgGCToGCGrantSelfMadeItemToAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def_index(), output);
  }

  // optional uint32 accountid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->accountid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
}

::google::protobuf::uint8* CMsgGCToGCGrantSelfMadeItemToAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def_index(), target);
  }

  // optional uint32 accountid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->accountid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  return target;
}

size_t CMsgGCToGCGrantSelfMadeItemToAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 item_def_index = 1;
    if (has_item_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def_index());
    }

    // optional uint32 accountid = 2;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCGrantSelfMadeItemToAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCGrantSelfMadeItemToAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
    MergeFrom(*source);
  }
}

void CMsgGCToGCGrantSelfMadeItemToAccount::MergeFrom(const CMsgGCToGCGrantSelfMadeItemToAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_def_index_ = from.item_def_index_;
    }
    if (cached_has_bits & 0x00000002u) {
      accountid_ = from.accountid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCGrantSelfMadeItemToAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCGrantSelfMadeItemToAccount::CopyFrom(const CMsgGCToGCGrantSelfMadeItemToAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCGrantSelfMadeItemToAccount::IsInitialized() const {
  return true;
}

void CMsgGCToGCGrantSelfMadeItemToAccount::Swap(CMsgGCToGCGrantSelfMadeItemToAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCGrantSelfMadeItemToAccount::InternalSwap(CMsgGCToGCGrantSelfMadeItemToAccount* other) {
  std::swap(item_def_index_, other->item_def_index_);
  std::swap(accountid_, other->accountid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCGrantSelfMadeItemToAccount::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCGrantSelfMadeItemToAccount

// optional uint32 item_def_index = 1;
bool CMsgGCToGCGrantSelfMadeItemToAccount::has_item_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCGrantSelfMadeItemToAccount::set_has_item_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCGrantSelfMadeItemToAccount::clear_has_item_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCGrantSelfMadeItemToAccount::clear_item_def_index() {
  item_def_index_ = 0u;
  clear_has_item_def_index();
}
::google::protobuf::uint32 CMsgGCToGCGrantSelfMadeItemToAccount::item_def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount.item_def_index)
  return item_def_index_;
}
void CMsgGCToGCGrantSelfMadeItemToAccount::set_item_def_index(::google::protobuf::uint32 value) {
  set_has_item_def_index();
  item_def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount.item_def_index)
}

// optional uint32 accountid = 2;
bool CMsgGCToGCGrantSelfMadeItemToAccount::has_accountid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCGrantSelfMadeItemToAccount::set_has_accountid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCGrantSelfMadeItemToAccount::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCGrantSelfMadeItemToAccount::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
::google::protobuf::uint32 CMsgGCToGCGrantSelfMadeItemToAccount::accountid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount.accountid)
  return accountid_;
}
void CMsgGCToGCGrantSelfMadeItemToAccount::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCGrantSelfMadeItemToAccount.accountid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgUseItem::kItemIdFieldNumber;
const int CMsgUseItem::kTargetSteamIdFieldNumber;
const int CMsgUseItem::kGiftPotentialTargetsFieldNumber;
const int CMsgUseItem::kDuelClassLockFieldNumber;
const int CMsgUseItem::kInitiatorSteamIdFieldNumber;
const int CMsgUseItem::kItempackAckImmediatelyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgUseItem::CMsgUseItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgUseItem)
}
CMsgUseItem::CMsgUseItem(const CMsgUseItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      gift__potential_targets_(from.gift__potential_targets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&itempack__ack_immediately_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(itempack__ack_immediately_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgUseItem)
}

void CMsgUseItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&itempack__ack_immediately_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(itempack__ack_immediately_));
}

CMsgUseItem::~CMsgUseItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgUseItem)
  SharedDtor();
}

void CMsgUseItem::SharedDtor() {
}

void CMsgUseItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgUseItem::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgUseItem& CMsgUseItem::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgUseItem* CMsgUseItem::New(::google::protobuf::Arena* arena) const {
  CMsgUseItem* n = new CMsgUseItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgUseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgUseItem)
  gift__potential_targets_.Clear();
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&itempack__ack_immediately_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(itempack__ack_immediately_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgUseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgUseItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 target_steam_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_target_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &target_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 gift__potential_targets = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_gift__potential_targets())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_gift__potential_targets())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 duel__class_lock = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_duel__class_lock();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &duel__class_lock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 initiator_steam_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_initiator_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &initiator_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool itempack__ack_immediately = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_itempack__ack_immediately();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &itempack__ack_immediately_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgUseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgUseItem)
  return false;
#undef DO_
}

void CMsgUseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional fixed64 target_steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->target_steam_id(), output);
  }

  // repeated uint32 gift__potential_targets = 3;
  for (int i = 0, n = this->gift__potential_targets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->gift__potential_targets(i), output);
  }

  // optional uint32 duel__class_lock = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->duel__class_lock(), output);
  }

  // optional uint64 initiator_steam_id = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->initiator_steam_id(), output);
  }

  // optional bool itempack__ack_immediately = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->itempack__ack_immediately(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgUseItem)
}

::google::protobuf::uint8* CMsgUseItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional fixed64 target_steam_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->target_steam_id(), target);
  }

  // repeated uint32 gift__potential_targets = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->gift__potential_targets_, target);

  // optional uint32 duel__class_lock = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->duel__class_lock(), target);
  }

  // optional uint64 initiator_steam_id = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->initiator_steam_id(), target);
  }

  // optional bool itempack__ack_immediately = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->itempack__ack_immediately(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgUseItem)
  return target;
}

size_t CMsgUseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgUseItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 gift__potential_targets = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->gift__potential_targets_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->gift__potential_targets_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional fixed64 target_steam_id = 2;
    if (has_target_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint64 initiator_steam_id = 5;
    if (has_initiator_steam_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->initiator_steam_id());
    }

    // optional uint32 duel__class_lock = 4;
    if (has_duel__class_lock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->duel__class_lock());
    }

    // optional bool itempack__ack_immediately = 6;
    if (has_itempack__ack_immediately()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgUseItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgUseItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgUseItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgUseItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgUseItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgUseItem)
    MergeFrom(*source);
  }
}

void CMsgUseItem::MergeFrom(const CMsgUseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgUseItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gift__potential_targets_.MergeFrom(from.gift__potential_targets_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      target_steam_id_ = from.target_steam_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      initiator_steam_id_ = from.initiator_steam_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      duel__class_lock_ = from.duel__class_lock_;
    }
    if (cached_has_bits & 0x00000010u) {
      itempack__ack_immediately_ = from.itempack__ack_immediately_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgUseItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgUseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgUseItem::CopyFrom(const CMsgUseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgUseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgUseItem::IsInitialized() const {
  return true;
}

void CMsgUseItem::Swap(CMsgUseItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgUseItem::InternalSwap(CMsgUseItem* other) {
  gift__potential_targets_.InternalSwap(&other->gift__potential_targets_);
  std::swap(item_id_, other->item_id_);
  std::swap(target_steam_id_, other->target_steam_id_);
  std::swap(initiator_steam_id_, other->initiator_steam_id_);
  std::swap(duel__class_lock_, other->duel__class_lock_);
  std::swap(itempack__ack_immediately_, other->itempack__ack_immediately_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgUseItem::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgUseItem

// optional uint64 item_id = 1;
bool CMsgUseItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgUseItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgUseItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgUseItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgUseItem::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgUseItem.item_id)
  return item_id_;
}
void CMsgUseItem::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgUseItem.item_id)
}

// optional fixed64 target_steam_id = 2;
bool CMsgUseItem::has_target_steam_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgUseItem::set_has_target_steam_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgUseItem::clear_has_target_steam_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgUseItem::clear_target_steam_id() {
  target_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_target_steam_id();
}
::google::protobuf::uint64 CMsgUseItem::target_steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgUseItem.target_steam_id)
  return target_steam_id_;
}
void CMsgUseItem::set_target_steam_id(::google::protobuf::uint64 value) {
  set_has_target_steam_id();
  target_steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgUseItem.target_steam_id)
}

// repeated uint32 gift__potential_targets = 3;
int CMsgUseItem::gift__potential_targets_size() const {
  return gift__potential_targets_.size();
}
void CMsgUseItem::clear_gift__potential_targets() {
  gift__potential_targets_.Clear();
}
::google::protobuf::uint32 CMsgUseItem::gift__potential_targets(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgUseItem.gift__potential_targets)
  return gift__potential_targets_.Get(index);
}
void CMsgUseItem::set_gift__potential_targets(int index, ::google::protobuf::uint32 value) {
  gift__potential_targets_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgUseItem.gift__potential_targets)
}
void CMsgUseItem::add_gift__potential_targets(::google::protobuf::uint32 value) {
  gift__potential_targets_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgUseItem.gift__potential_targets)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgUseItem::gift__potential_targets() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgUseItem.gift__potential_targets)
  return gift__potential_targets_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgUseItem::mutable_gift__potential_targets() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgUseItem.gift__potential_targets)
  return &gift__potential_targets_;
}

// optional uint32 duel__class_lock = 4;
bool CMsgUseItem::has_duel__class_lock() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgUseItem::set_has_duel__class_lock() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgUseItem::clear_has_duel__class_lock() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgUseItem::clear_duel__class_lock() {
  duel__class_lock_ = 0u;
  clear_has_duel__class_lock();
}
::google::protobuf::uint32 CMsgUseItem::duel__class_lock() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgUseItem.duel__class_lock)
  return duel__class_lock_;
}
void CMsgUseItem::set_duel__class_lock(::google::protobuf::uint32 value) {
  set_has_duel__class_lock();
  duel__class_lock_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgUseItem.duel__class_lock)
}

// optional uint64 initiator_steam_id = 5;
bool CMsgUseItem::has_initiator_steam_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgUseItem::set_has_initiator_steam_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgUseItem::clear_has_initiator_steam_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgUseItem::clear_initiator_steam_id() {
  initiator_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_initiator_steam_id();
}
::google::protobuf::uint64 CMsgUseItem::initiator_steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgUseItem.initiator_steam_id)
  return initiator_steam_id_;
}
void CMsgUseItem::set_initiator_steam_id(::google::protobuf::uint64 value) {
  set_has_initiator_steam_id();
  initiator_steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgUseItem.initiator_steam_id)
}

// optional bool itempack__ack_immediately = 6;
bool CMsgUseItem::has_itempack__ack_immediately() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgUseItem::set_has_itempack__ack_immediately() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgUseItem::clear_has_itempack__ack_immediately() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgUseItem::clear_itempack__ack_immediately() {
  itempack__ack_immediately_ = false;
  clear_has_itempack__ack_immediately();
}
bool CMsgUseItem::itempack__ack_immediately() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgUseItem.itempack__ack_immediately)
  return itempack__ack_immediately_;
}
void CMsgUseItem::set_itempack__ack_immediately(bool value) {
  set_has_itempack__ack_immediately();
  itempack__ack_immediately_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgUseItem.itempack__ack_immediately)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgServerUseItem::kInitiatorAccountIdFieldNumber;
const int CMsgServerUseItem::kUseItemMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgServerUseItem::CMsgServerUseItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgServerUseItem)
}
CMsgServerUseItem::CMsgServerUseItem(const CMsgServerUseItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_use_item_msg()) {
    use_item_msg_ = new ::proto::dota::CMsgUseItem(*from.use_item_msg_);
  } else {
    use_item_msg_ = NULL;
  }
  initiator_account_id_ = from.initiator_account_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgServerUseItem)
}

void CMsgServerUseItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&use_item_msg_, 0, reinterpret_cast<char*>(&initiator_account_id_) -
    reinterpret_cast<char*>(&use_item_msg_) + sizeof(initiator_account_id_));
}

CMsgServerUseItem::~CMsgServerUseItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgServerUseItem)
  SharedDtor();
}

void CMsgServerUseItem::SharedDtor() {
  if (this != internal_default_instance()) {
    delete use_item_msg_;
  }
}

void CMsgServerUseItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgServerUseItem::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgServerUseItem& CMsgServerUseItem::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgServerUseItem* CMsgServerUseItem::New(::google::protobuf::Arena* arena) const {
  CMsgServerUseItem* n = new CMsgServerUseItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgServerUseItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgServerUseItem)
  if (has_use_item_msg()) {
    GOOGLE_DCHECK(use_item_msg_ != NULL);
    use_item_msg_->::proto::dota::CMsgUseItem::Clear();
  }
  initiator_account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgServerUseItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgServerUseItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 initiator_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_initiator_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &initiator_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.CMsgUseItem use_item_msg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_use_item_msg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgServerUseItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgServerUseItem)
  return false;
#undef DO_
}

void CMsgServerUseItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgServerUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 initiator_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->initiator_account_id(), output);
  }

  // optional .proto.dota.CMsgUseItem use_item_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->use_item_msg_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgServerUseItem)
}

::google::protobuf::uint8* CMsgServerUseItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgServerUseItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 initiator_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->initiator_account_id(), target);
  }

  // optional .proto.dota.CMsgUseItem use_item_msg = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->use_item_msg_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgServerUseItem)
  return target;
}

size_t CMsgServerUseItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgServerUseItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .proto.dota.CMsgUseItem use_item_msg = 2;
    if (has_use_item_msg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->use_item_msg_);
    }

    // optional uint32 initiator_account_id = 1;
    if (has_initiator_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->initiator_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgServerUseItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgServerUseItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgServerUseItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgServerUseItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgServerUseItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgServerUseItem)
    MergeFrom(*source);
  }
}

void CMsgServerUseItem::MergeFrom(const CMsgServerUseItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgServerUseItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_use_item_msg()->::proto::dota::CMsgUseItem::MergeFrom(from.use_item_msg());
    }
    if (cached_has_bits & 0x00000002u) {
      initiator_account_id_ = from.initiator_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgServerUseItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgServerUseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgServerUseItem::CopyFrom(const CMsgServerUseItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgServerUseItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgServerUseItem::IsInitialized() const {
  return true;
}

void CMsgServerUseItem::Swap(CMsgServerUseItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgServerUseItem::InternalSwap(CMsgServerUseItem* other) {
  std::swap(use_item_msg_, other->use_item_msg_);
  std::swap(initiator_account_id_, other->initiator_account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgServerUseItem::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgServerUseItem

// optional uint32 initiator_account_id = 1;
bool CMsgServerUseItem::has_initiator_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgServerUseItem::set_has_initiator_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgServerUseItem::clear_has_initiator_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgServerUseItem::clear_initiator_account_id() {
  initiator_account_id_ = 0u;
  clear_has_initiator_account_id();
}
::google::protobuf::uint32 CMsgServerUseItem::initiator_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerUseItem.initiator_account_id)
  return initiator_account_id_;
}
void CMsgServerUseItem::set_initiator_account_id(::google::protobuf::uint32 value) {
  set_has_initiator_account_id();
  initiator_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerUseItem.initiator_account_id)
}

// optional .proto.dota.CMsgUseItem use_item_msg = 2;
bool CMsgServerUseItem::has_use_item_msg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgServerUseItem::set_has_use_item_msg() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgServerUseItem::clear_has_use_item_msg() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgServerUseItem::clear_use_item_msg() {
  if (use_item_msg_ != NULL) use_item_msg_->::proto::dota::CMsgUseItem::Clear();
  clear_has_use_item_msg();
}
const ::proto::dota::CMsgUseItem& CMsgServerUseItem::use_item_msg() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerUseItem.use_item_msg)
  return use_item_msg_ != NULL ? *use_item_msg_
                         : *::proto::dota::CMsgUseItem::internal_default_instance();
}
::proto::dota::CMsgUseItem* CMsgServerUseItem::mutable_use_item_msg() {
  set_has_use_item_msg();
  if (use_item_msg_ == NULL) {
    use_item_msg_ = new ::proto::dota::CMsgUseItem;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgServerUseItem.use_item_msg)
  return use_item_msg_;
}
::proto::dota::CMsgUseItem* CMsgServerUseItem::release_use_item_msg() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgServerUseItem.use_item_msg)
  clear_has_use_item_msg();
  ::proto::dota::CMsgUseItem* temp = use_item_msg_;
  use_item_msg_ = NULL;
  return temp;
}
void CMsgServerUseItem::set_allocated_use_item_msg(::proto::dota::CMsgUseItem* use_item_msg) {
  delete use_item_msg_;
  use_item_msg_ = use_item_msg;
  if (use_item_msg) {
    set_has_use_item_msg();
  } else {
    clear_has_use_item_msg();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgServerUseItem.use_item_msg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgUseMultipleItems::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgUseMultipleItems::CMsgUseMultipleItems()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgUseMultipleItems)
}
CMsgUseMultipleItems::CMsgUseMultipleItems(const CMsgUseMultipleItems& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgUseMultipleItems)
}

void CMsgUseMultipleItems::SharedCtor() {
  _cached_size_ = 0;
}

CMsgUseMultipleItems::~CMsgUseMultipleItems() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgUseMultipleItems)
  SharedDtor();
}

void CMsgUseMultipleItems::SharedDtor() {
}

void CMsgUseMultipleItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgUseMultipleItems::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgUseMultipleItems& CMsgUseMultipleItems::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgUseMultipleItems* CMsgUseMultipleItems::New(::google::protobuf::Arena* arena) const {
  CMsgUseMultipleItems* n = new CMsgUseMultipleItems;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgUseMultipleItems::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgUseMultipleItems)
  item_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgUseMultipleItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgUseMultipleItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgUseMultipleItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgUseMultipleItems)
  return false;
#undef DO_
}

void CMsgUseMultipleItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgUseMultipleItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgUseMultipleItems)
}

::google::protobuf::uint8* CMsgUseMultipleItems::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgUseMultipleItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgUseMultipleItems)
  return target;
}

size_t CMsgUseMultipleItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgUseMultipleItems)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint64 item_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgUseMultipleItems::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgUseMultipleItems)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgUseMultipleItems* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgUseMultipleItems>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgUseMultipleItems)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgUseMultipleItems)
    MergeFrom(*source);
  }
}

void CMsgUseMultipleItems::MergeFrom(const CMsgUseMultipleItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgUseMultipleItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
}

void CMsgUseMultipleItems::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgUseMultipleItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgUseMultipleItems::CopyFrom(const CMsgUseMultipleItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgUseMultipleItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgUseMultipleItems::IsInitialized() const {
  return true;
}

void CMsgUseMultipleItems::Swap(CMsgUseMultipleItems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgUseMultipleItems::InternalSwap(CMsgUseMultipleItems* other) {
  item_ids_.InternalSwap(&other->item_ids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgUseMultipleItems::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgUseMultipleItems

// repeated uint64 item_ids = 1;
int CMsgUseMultipleItems::item_ids_size() const {
  return item_ids_.size();
}
void CMsgUseMultipleItems::clear_item_ids() {
  item_ids_.Clear();
}
::google::protobuf::uint64 CMsgUseMultipleItems::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgUseMultipleItems.item_ids)
  return item_ids_.Get(index);
}
void CMsgUseMultipleItems::set_item_ids(int index, ::google::protobuf::uint64 value) {
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgUseMultipleItems.item_ids)
}
void CMsgUseMultipleItems::add_item_ids(::google::protobuf::uint64 value) {
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgUseMultipleItems.item_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgUseMultipleItems::item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgUseMultipleItems.item_ids)
  return item_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgUseMultipleItems::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgUseMultipleItems.item_ids)
  return &item_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCPartnerBalanceRequest::CMsgGCPartnerBalanceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCPartnerBalanceRequest)
}
CMsgGCPartnerBalanceRequest::CMsgGCPartnerBalanceRequest(const CMsgGCPartnerBalanceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCPartnerBalanceRequest)
}

void CMsgGCPartnerBalanceRequest::SharedCtor() {
  _cached_size_ = 0;
}

CMsgGCPartnerBalanceRequest::~CMsgGCPartnerBalanceRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCPartnerBalanceRequest)
  SharedDtor();
}

void CMsgGCPartnerBalanceRequest::SharedDtor() {
}

void CMsgGCPartnerBalanceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCPartnerBalanceRequest::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCPartnerBalanceRequest& CMsgGCPartnerBalanceRequest::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCPartnerBalanceRequest* CMsgGCPartnerBalanceRequest::New(::google::protobuf::Arena* arena) const {
  CMsgGCPartnerBalanceRequest* n = new CMsgGCPartnerBalanceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCPartnerBalanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCPartnerBalanceRequest)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCPartnerBalanceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCPartnerBalanceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCPartnerBalanceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCPartnerBalanceRequest)
  return false;
#undef DO_
}

void CMsgGCPartnerBalanceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCPartnerBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCPartnerBalanceRequest)
}

::google::protobuf::uint8* CMsgGCPartnerBalanceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCPartnerBalanceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCPartnerBalanceRequest)
  return target;
}

size_t CMsgGCPartnerBalanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCPartnerBalanceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCPartnerBalanceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCPartnerBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCPartnerBalanceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCPartnerBalanceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCPartnerBalanceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCPartnerBalanceRequest)
    MergeFrom(*source);
  }
}

void CMsgGCPartnerBalanceRequest::MergeFrom(const CMsgGCPartnerBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCPartnerBalanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgGCPartnerBalanceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCPartnerBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerBalanceRequest::CopyFrom(const CMsgGCPartnerBalanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCPartnerBalanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerBalanceRequest::IsInitialized() const {
  return true;
}

void CMsgGCPartnerBalanceRequest::Swap(CMsgGCPartnerBalanceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCPartnerBalanceRequest::InternalSwap(CMsgGCPartnerBalanceRequest* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCPartnerBalanceRequest::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCPartnerBalanceRequest

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCPartnerBalanceResponse::kResultFieldNumber;
const int CMsgGCPartnerBalanceResponse::kBalanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCPartnerBalanceResponse::CMsgGCPartnerBalanceResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCPartnerBalanceResponse)
}
CMsgGCPartnerBalanceResponse::CMsgGCPartnerBalanceResponse(const CMsgGCPartnerBalanceResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&balance_, &from.balance_,
    reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&balance_) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCPartnerBalanceResponse)
}

void CMsgGCPartnerBalanceResponse::SharedCtor() {
  _cached_size_ = 0;
  balance_ = 0u;
  result_ = 1;
}

CMsgGCPartnerBalanceResponse::~CMsgGCPartnerBalanceResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCPartnerBalanceResponse)
  SharedDtor();
}

void CMsgGCPartnerBalanceResponse::SharedDtor() {
}

void CMsgGCPartnerBalanceResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCPartnerBalanceResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCPartnerBalanceResponse& CMsgGCPartnerBalanceResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCPartnerBalanceResponse* CMsgGCPartnerBalanceResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCPartnerBalanceResponse* n = new CMsgGCPartnerBalanceResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCPartnerBalanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCPartnerBalanceResponse)
  if (_has_bits_[0 / 32] & 3u) {
    balance_ = 0u;
    result_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCPartnerBalanceResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCPartnerBalanceResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCPartnerRequestResponse_IsValid(value)) {
            set_result(static_cast< ::proto::dota::EGCPartnerRequestResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 balance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_balance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &balance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCPartnerBalanceResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCPartnerBalanceResponse)
  return false;
#undef DO_
}

void CMsgGCPartnerBalanceResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCPartnerBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional uint32 balance = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->balance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCPartnerBalanceResponse)
}

::google::protobuf::uint8* CMsgGCPartnerBalanceResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCPartnerBalanceResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional uint32 balance = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->balance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCPartnerBalanceResponse)
  return target;
}

size_t CMsgGCPartnerBalanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCPartnerBalanceResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 balance = 2;
    if (has_balance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->balance());
    }

    // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCPartnerBalanceResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCPartnerBalanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCPartnerBalanceResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCPartnerBalanceResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCPartnerBalanceResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCPartnerBalanceResponse)
    MergeFrom(*source);
  }
}

void CMsgGCPartnerBalanceResponse::MergeFrom(const CMsgGCPartnerBalanceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCPartnerBalanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      balance_ = from.balance_;
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCPartnerBalanceResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCPartnerBalanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerBalanceResponse::CopyFrom(const CMsgGCPartnerBalanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCPartnerBalanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerBalanceResponse::IsInitialized() const {
  return true;
}

void CMsgGCPartnerBalanceResponse::Swap(CMsgGCPartnerBalanceResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCPartnerBalanceResponse::InternalSwap(CMsgGCPartnerBalanceResponse* other) {
  std::swap(balance_, other->balance_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCPartnerBalanceResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCPartnerBalanceResponse

// optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
bool CMsgGCPartnerBalanceResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCPartnerBalanceResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCPartnerBalanceResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCPartnerBalanceResponse::clear_result() {
  result_ = 1;
  clear_has_result();
}
::proto::dota::EGCPartnerRequestResponse CMsgGCPartnerBalanceResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPartnerBalanceResponse.result)
  return static_cast< ::proto::dota::EGCPartnerRequestResponse >(result_);
}
void CMsgGCPartnerBalanceResponse::set_result(::proto::dota::EGCPartnerRequestResponse value) {
  assert(::proto::dota::EGCPartnerRequestResponse_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPartnerBalanceResponse.result)
}

// optional uint32 balance = 2;
bool CMsgGCPartnerBalanceResponse::has_balance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCPartnerBalanceResponse::set_has_balance() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCPartnerBalanceResponse::clear_has_balance() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCPartnerBalanceResponse::clear_balance() {
  balance_ = 0u;
  clear_has_balance();
}
::google::protobuf::uint32 CMsgGCPartnerBalanceResponse::balance() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPartnerBalanceResponse.balance)
  return balance_;
}
void CMsgGCPartnerBalanceResponse::set_balance(::google::protobuf::uint32 value) {
  set_has_balance();
  balance_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPartnerBalanceResponse.balance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CGCStoreRechargeRedirect_LineItem::kItemDefIdFieldNumber;
const int CGCStoreRechargeRedirect_LineItem::kQuantityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CGCStoreRechargeRedirect_LineItem::CGCStoreRechargeRedirect_LineItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CGCStoreRechargeRedirect_LineItem)
}
CGCStoreRechargeRedirect_LineItem::CGCStoreRechargeRedirect_LineItem(const CGCStoreRechargeRedirect_LineItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_def_id_, &from.item_def_id_,
    reinterpret_cast<char*>(&quantity_) -
    reinterpret_cast<char*>(&item_def_id_) + sizeof(quantity_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CGCStoreRechargeRedirect_LineItem)
}

void CGCStoreRechargeRedirect_LineItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_def_id_, 0, reinterpret_cast<char*>(&quantity_) -
    reinterpret_cast<char*>(&item_def_id_) + sizeof(quantity_));
}

CGCStoreRechargeRedirect_LineItem::~CGCStoreRechargeRedirect_LineItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CGCStoreRechargeRedirect_LineItem)
  SharedDtor();
}

void CGCStoreRechargeRedirect_LineItem::SharedDtor() {
}

void CGCStoreRechargeRedirect_LineItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CGCStoreRechargeRedirect_LineItem::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CGCStoreRechargeRedirect_LineItem& CGCStoreRechargeRedirect_LineItem::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CGCStoreRechargeRedirect_LineItem* CGCStoreRechargeRedirect_LineItem::New(::google::protobuf::Arena* arena) const {
  CGCStoreRechargeRedirect_LineItem* n = new CGCStoreRechargeRedirect_LineItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CGCStoreRechargeRedirect_LineItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_def_id_, 0, reinterpret_cast<char*>(&quantity_) -
      reinterpret_cast<char*>(&item_def_id_) + sizeof(quantity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CGCStoreRechargeRedirect_LineItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_def_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 quantity = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_quantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CGCStoreRechargeRedirect_LineItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CGCStoreRechargeRedirect_LineItem)
  return false;
#undef DO_
}

void CGCStoreRechargeRedirect_LineItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def_id(), output);
  }

  // optional uint32 quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->quantity(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CGCStoreRechargeRedirect_LineItem)
}

::google::protobuf::uint8* CGCStoreRechargeRedirect_LineItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def_id(), target);
  }

  // optional uint32 quantity = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->quantity(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CGCStoreRechargeRedirect_LineItem)
  return target;
}

size_t CGCStoreRechargeRedirect_LineItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 item_def_id = 1;
    if (has_item_def_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def_id());
    }

    // optional uint32 quantity = 2;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quantity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CGCStoreRechargeRedirect_LineItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CGCStoreRechargeRedirect_LineItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CGCStoreRechargeRedirect_LineItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CGCStoreRechargeRedirect_LineItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CGCStoreRechargeRedirect_LineItem)
    MergeFrom(*source);
  }
}

void CGCStoreRechargeRedirect_LineItem::MergeFrom(const CGCStoreRechargeRedirect_LineItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_def_id_ = from.item_def_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      quantity_ = from.quantity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CGCStoreRechargeRedirect_LineItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CGCStoreRechargeRedirect_LineItem::CopyFrom(const CGCStoreRechargeRedirect_LineItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CGCStoreRechargeRedirect_LineItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CGCStoreRechargeRedirect_LineItem::IsInitialized() const {
  return true;
}

void CGCStoreRechargeRedirect_LineItem::Swap(CGCStoreRechargeRedirect_LineItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CGCStoreRechargeRedirect_LineItem::InternalSwap(CGCStoreRechargeRedirect_LineItem* other) {
  std::swap(item_def_id_, other->item_def_id_);
  std::swap(quantity_, other->quantity_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CGCStoreRechargeRedirect_LineItem::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CGCStoreRechargeRedirect_LineItem

// optional uint32 item_def_id = 1;
bool CGCStoreRechargeRedirect_LineItem::has_item_def_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CGCStoreRechargeRedirect_LineItem::set_has_item_def_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CGCStoreRechargeRedirect_LineItem::clear_has_item_def_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CGCStoreRechargeRedirect_LineItem::clear_item_def_id() {
  item_def_id_ = 0u;
  clear_has_item_def_id();
}
::google::protobuf::uint32 CGCStoreRechargeRedirect_LineItem::item_def_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCStoreRechargeRedirect_LineItem.item_def_id)
  return item_def_id_;
}
void CGCStoreRechargeRedirect_LineItem::set_item_def_id(::google::protobuf::uint32 value) {
  set_has_item_def_id();
  item_def_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCStoreRechargeRedirect_LineItem.item_def_id)
}

// optional uint32 quantity = 2;
bool CGCStoreRechargeRedirect_LineItem::has_quantity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CGCStoreRechargeRedirect_LineItem::set_has_quantity() {
  _has_bits_[0] |= 0x00000002u;
}
void CGCStoreRechargeRedirect_LineItem::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000002u;
}
void CGCStoreRechargeRedirect_LineItem::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
::google::protobuf::uint32 CGCStoreRechargeRedirect_LineItem::quantity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CGCStoreRechargeRedirect_LineItem.quantity)
  return quantity_;
}
void CGCStoreRechargeRedirect_LineItem::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CGCStoreRechargeRedirect_LineItem.quantity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCPartnerRechargeRedirectURLRequest::kLineItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCPartnerRechargeRedirectURLRequest::CMsgGCPartnerRechargeRedirectURLRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
}
CMsgGCPartnerRechargeRedirectURLRequest::CMsgGCPartnerRechargeRedirectURLRequest(const CMsgGCPartnerRechargeRedirectURLRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      line_items_(from.line_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
}

void CMsgGCPartnerRechargeRedirectURLRequest::SharedCtor() {
  _cached_size_ = 0;
}

CMsgGCPartnerRechargeRedirectURLRequest::~CMsgGCPartnerRechargeRedirectURLRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  SharedDtor();
}

void CMsgGCPartnerRechargeRedirectURLRequest::SharedDtor() {
}

void CMsgGCPartnerRechargeRedirectURLRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCPartnerRechargeRedirectURLRequest::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCPartnerRechargeRedirectURLRequest& CMsgGCPartnerRechargeRedirectURLRequest::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCPartnerRechargeRedirectURLRequest* CMsgGCPartnerRechargeRedirectURLRequest::New(::google::protobuf::Arena* arena) const {
  CMsgGCPartnerRechargeRedirectURLRequest* n = new CMsgGCPartnerRechargeRedirectURLRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCPartnerRechargeRedirectURLRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  line_items_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCPartnerRechargeRedirectURLRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CGCStoreRechargeRedirect_LineItem line_items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_line_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  return false;
#undef DO_
}

void CMsgGCPartnerRechargeRedirectURLRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CGCStoreRechargeRedirect_LineItem line_items = 1;
  for (unsigned int i = 0, n = this->line_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->line_items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
}

::google::protobuf::uint8* CMsgGCPartnerRechargeRedirectURLRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CGCStoreRechargeRedirect_LineItem line_items = 1;
  for (unsigned int i = 0, n = this->line_items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->line_items(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  return target;
}

size_t CMsgGCPartnerRechargeRedirectURLRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CGCStoreRechargeRedirect_LineItem line_items = 1;
  {
    unsigned int count = this->line_items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->line_items(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCPartnerRechargeRedirectURLRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCPartnerRechargeRedirectURLRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCPartnerRechargeRedirectURLRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
    MergeFrom(*source);
  }
}

void CMsgGCPartnerRechargeRedirectURLRequest::MergeFrom(const CMsgGCPartnerRechargeRedirectURLRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  line_items_.MergeFrom(from.line_items_);
}

void CMsgGCPartnerRechargeRedirectURLRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerRechargeRedirectURLRequest::CopyFrom(const CMsgGCPartnerRechargeRedirectURLRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerRechargeRedirectURLRequest::IsInitialized() const {
  return true;
}

void CMsgGCPartnerRechargeRedirectURLRequest::Swap(CMsgGCPartnerRechargeRedirectURLRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCPartnerRechargeRedirectURLRequest::InternalSwap(CMsgGCPartnerRechargeRedirectURLRequest* other) {
  line_items_.InternalSwap(&other->line_items_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCPartnerRechargeRedirectURLRequest::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCPartnerRechargeRedirectURLRequest

// repeated .proto.dota.CGCStoreRechargeRedirect_LineItem line_items = 1;
int CMsgGCPartnerRechargeRedirectURLRequest::line_items_size() const {
  return line_items_.size();
}
void CMsgGCPartnerRechargeRedirectURLRequest::clear_line_items() {
  line_items_.Clear();
}
const ::proto::dota::CGCStoreRechargeRedirect_LineItem& CMsgGCPartnerRechargeRedirectURLRequest::line_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest.line_items)
  return line_items_.Get(index);
}
::proto::dota::CGCStoreRechargeRedirect_LineItem* CMsgGCPartnerRechargeRedirectURLRequest::mutable_line_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest.line_items)
  return line_items_.Mutable(index);
}
::proto::dota::CGCStoreRechargeRedirect_LineItem* CMsgGCPartnerRechargeRedirectURLRequest::add_line_items() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest.line_items)
  return line_items_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CGCStoreRechargeRedirect_LineItem >*
CMsgGCPartnerRechargeRedirectURLRequest::mutable_line_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest.line_items)
  return &line_items_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CGCStoreRechargeRedirect_LineItem >&
CMsgGCPartnerRechargeRedirectURLRequest::line_items() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCPartnerRechargeRedirectURLRequest.line_items)
  return line_items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCPartnerRechargeRedirectURLResponse::kResultFieldNumber;
const int CMsgGCPartnerRechargeRedirectURLResponse::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCPartnerRechargeRedirectURLResponse::CMsgGCPartnerRechargeRedirectURLResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
}
CMsgGCPartnerRechargeRedirectURLResponse::CMsgGCPartnerRechargeRedirectURLResponse(const CMsgGCPartnerRechargeRedirectURLResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
}

void CMsgGCPartnerRechargeRedirectURLResponse::SharedCtor() {
  _cached_size_ = 0;
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 1;
}

CMsgGCPartnerRechargeRedirectURLResponse::~CMsgGCPartnerRechargeRedirectURLResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  SharedDtor();
}

void CMsgGCPartnerRechargeRedirectURLResponse::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCPartnerRechargeRedirectURLResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCPartnerRechargeRedirectURLResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCPartnerRechargeRedirectURLResponse& CMsgGCPartnerRechargeRedirectURLResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCPartnerRechargeRedirectURLResponse* CMsgGCPartnerRechargeRedirectURLResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCPartnerRechargeRedirectURLResponse* n = new CMsgGCPartnerRechargeRedirectURLResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCPartnerRechargeRedirectURLResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    result_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCPartnerRechargeRedirectURLResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCPartnerRequestResponse_IsValid(value)) {
            set_result(static_cast< ::proto::dota::EGCPartnerRequestResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  return false;
#undef DO_
}

void CMsgGCPartnerRechargeRedirectURLResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
}

::google::protobuf::uint8* CMsgGCPartnerRechargeRedirectURLResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // optional string url = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  return target;
}

size_t CMsgGCPartnerRechargeRedirectURLResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string url = 2;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCPartnerRechargeRedirectURLResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCPartnerRechargeRedirectURLResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCPartnerRechargeRedirectURLResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
    MergeFrom(*source);
  }
}

void CMsgGCPartnerRechargeRedirectURLResponse::MergeFrom(const CMsgGCPartnerRechargeRedirectURLResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000002u) {
      result_ = from.result_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCPartnerRechargeRedirectURLResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCPartnerRechargeRedirectURLResponse::CopyFrom(const CMsgGCPartnerRechargeRedirectURLResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCPartnerRechargeRedirectURLResponse::IsInitialized() const {
  return true;
}

void CMsgGCPartnerRechargeRedirectURLResponse::Swap(CMsgGCPartnerRechargeRedirectURLResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCPartnerRechargeRedirectURLResponse::InternalSwap(CMsgGCPartnerRechargeRedirectURLResponse* other) {
  url_.Swap(&other->url_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCPartnerRechargeRedirectURLResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCPartnerRechargeRedirectURLResponse

// optional .proto.dota.EGCPartnerRequestResponse result = 1 [default = k_EPartnerRequestOK];
bool CMsgGCPartnerRechargeRedirectURLResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCPartnerRechargeRedirectURLResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCPartnerRechargeRedirectURLResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCPartnerRechargeRedirectURLResponse::clear_result() {
  result_ = 1;
  clear_has_result();
}
::proto::dota::EGCPartnerRequestResponse CMsgGCPartnerRechargeRedirectURLResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.result)
  return static_cast< ::proto::dota::EGCPartnerRequestResponse >(result_);
}
void CMsgGCPartnerRechargeRedirectURLResponse::set_result(::proto::dota::EGCPartnerRequestResponse value) {
  assert(::proto::dota::EGCPartnerRequestResponse_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.result)
}

// optional string url = 2;
bool CMsgGCPartnerRechargeRedirectURLResponse::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCPartnerRechargeRedirectURLResponse::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCPartnerRechargeRedirectURLResponse::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCPartnerRechargeRedirectURLResponse::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& CMsgGCPartnerRechargeRedirectURLResponse::url() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url)
  return url_.GetNoArena();
}
void CMsgGCPartnerRechargeRedirectURLResponse::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url)
}
#if LANG_CXX11
void CMsgGCPartnerRechargeRedirectURLResponse::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url)
}
#endif
void CMsgGCPartnerRechargeRedirectURLResponse::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url)
}
void CMsgGCPartnerRechargeRedirectURLResponse::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url)
}
::std::string* CMsgGCPartnerRechargeRedirectURLResponse::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGCPartnerRechargeRedirectURLResponse::release_url() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGCPartnerRechargeRedirectURLResponse::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCPartnerRechargeRedirectURLResponse.url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCEconSQLWorkItemEmbeddedRollbackData::kAccountIdFieldNumber;
const int CMsgGCEconSQLWorkItemEmbeddedRollbackData::kDeletedItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCEconSQLWorkItemEmbeddedRollbackData::CMsgGCEconSQLWorkItemEmbeddedRollbackData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
}
CMsgGCEconSQLWorkItemEmbeddedRollbackData::CMsgGCEconSQLWorkItemEmbeddedRollbackData(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&deleted_item_id_, &from.deleted_item_id_,
    reinterpret_cast<char*>(&account_id_) -
    reinterpret_cast<char*>(&deleted_item_id_) + sizeof(account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&deleted_item_id_, 0, reinterpret_cast<char*>(&account_id_) -
    reinterpret_cast<char*>(&deleted_item_id_) + sizeof(account_id_));
}

CMsgGCEconSQLWorkItemEmbeddedRollbackData::~CMsgGCEconSQLWorkItemEmbeddedRollbackData() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  SharedDtor();
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SharedDtor() {
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCEconSQLWorkItemEmbeddedRollbackData::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCEconSQLWorkItemEmbeddedRollbackData& CMsgGCEconSQLWorkItemEmbeddedRollbackData::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCEconSQLWorkItemEmbeddedRollbackData* CMsgGCEconSQLWorkItemEmbeddedRollbackData::New(::google::protobuf::Arena* arena) const {
  CMsgGCEconSQLWorkItemEmbeddedRollbackData* n = new CMsgGCEconSQLWorkItemEmbeddedRollbackData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&deleted_item_id_, 0, reinterpret_cast<char*>(&account_id_) -
      reinterpret_cast<char*>(&deleted_item_id_) + sizeof(account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 deleted_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_deleted_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deleted_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  return false;
#undef DO_
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 deleted_item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->deleted_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
}

::google::protobuf::uint8* CMsgGCEconSQLWorkItemEmbeddedRollbackData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 deleted_item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->deleted_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  return target;
}

size_t CMsgGCEconSQLWorkItemEmbeddedRollbackData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 deleted_item_id = 2;
    if (has_deleted_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->deleted_item_id());
    }

    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCEconSQLWorkItemEmbeddedRollbackData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCEconSQLWorkItemEmbeddedRollbackData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
    MergeFrom(*source);
  }
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::MergeFrom(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      deleted_item_id_ = from.deleted_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      account_id_ = from.account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::CopyFrom(const CMsgGCEconSQLWorkItemEmbeddedRollbackData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::IsInitialized() const {
  return true;
}

void CMsgGCEconSQLWorkItemEmbeddedRollbackData::Swap(CMsgGCEconSQLWorkItemEmbeddedRollbackData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCEconSQLWorkItemEmbeddedRollbackData::InternalSwap(CMsgGCEconSQLWorkItemEmbeddedRollbackData* other) {
  std::swap(deleted_item_id_, other->deleted_item_id_);
  std::swap(account_id_, other->account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCEconSQLWorkItemEmbeddedRollbackData::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCEconSQLWorkItemEmbeddedRollbackData

// optional uint32 account_id = 1;
bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCEconSQLWorkItemEmbeddedRollbackData::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCEconSQLWorkItemEmbeddedRollbackData::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCEconSQLWorkItemEmbeddedRollbackData::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgGCEconSQLWorkItemEmbeddedRollbackData::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData.account_id)
  return account_id_;
}
void CMsgGCEconSQLWorkItemEmbeddedRollbackData::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData.account_id)
}

// optional uint64 deleted_item_id = 2;
bool CMsgGCEconSQLWorkItemEmbeddedRollbackData::has_deleted_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCEconSQLWorkItemEmbeddedRollbackData::set_has_deleted_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCEconSQLWorkItemEmbeddedRollbackData::clear_has_deleted_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCEconSQLWorkItemEmbeddedRollbackData::clear_deleted_item_id() {
  deleted_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_deleted_item_id();
}
::google::protobuf::uint64 CMsgGCEconSQLWorkItemEmbeddedRollbackData::deleted_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData.deleted_item_id)
  return deleted_item_id_;
}
void CMsgGCEconSQLWorkItemEmbeddedRollbackData::set_deleted_item_id(::google::protobuf::uint64 value) {
  set_has_deleted_item_id();
  deleted_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCEconSQLWorkItemEmbeddedRollbackData.deleted_item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCraftStatue::kHeroidFieldNumber;
const int CMsgCraftStatue::kSequencenameFieldNumber;
const int CMsgCraftStatue::kCycleFieldNumber;
const int CMsgCraftStatue::kDescriptionFieldNumber;
const int CMsgCraftStatue::kPedestalItemdefFieldNumber;
const int CMsgCraftStatue::kToolidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCraftStatue::CMsgCraftStatue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgCraftStatue)
}
CMsgCraftStatue::CMsgCraftStatue(const CMsgCraftStatue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sequencename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sequencename()) {
    sequencename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequencename_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&heroid_, &from.heroid_,
    reinterpret_cast<char*>(&pedestal_itemdef_) -
    reinterpret_cast<char*>(&heroid_) + sizeof(pedestal_itemdef_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgCraftStatue)
}

void CMsgCraftStatue::SharedCtor() {
  _cached_size_ = 0;
  sequencename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&heroid_, 0, reinterpret_cast<char*>(&pedestal_itemdef_) -
    reinterpret_cast<char*>(&heroid_) + sizeof(pedestal_itemdef_));
}

CMsgCraftStatue::~CMsgCraftStatue() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgCraftStatue)
  SharedDtor();
}

void CMsgCraftStatue::SharedDtor() {
  sequencename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgCraftStatue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCraftStatue::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCraftStatue& CMsgCraftStatue::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCraftStatue* CMsgCraftStatue::New(::google::protobuf::Arena* arena) const {
  CMsgCraftStatue* n = new CMsgCraftStatue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCraftStatue::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgCraftStatue)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_sequencename()) {
      GOOGLE_DCHECK(!sequencename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sequencename_.UnsafeRawStringPointer())->clear();
    }
    if (has_description()) {
      GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 60u) {
    ::memset(&heroid_, 0, reinterpret_cast<char*>(&pedestal_itemdef_) -
      reinterpret_cast<char*>(&heroid_) + sizeof(pedestal_itemdef_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCraftStatue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgCraftStatue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 heroid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_heroid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sequencename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sequencename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sequencename().data(), this->sequencename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgCraftStatue.sequencename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float cycle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_cycle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cycle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgCraftStatue.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pedestal_itemdef = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_pedestal_itemdef();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pedestal_itemdef_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 toolid = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_toolid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &toolid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgCraftStatue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgCraftStatue)
  return false;
#undef DO_
}

void CMsgCraftStatue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgCraftStatue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 heroid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  // optional string sequencename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sequencename().data(), this->sequencename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgCraftStatue.sequencename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sequencename(), output);
  }

  // optional float cycle = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->cycle(), output);
  }

  // optional string description = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgCraftStatue.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->description(), output);
  }

  // optional uint32 pedestal_itemdef = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->pedestal_itemdef(), output);
  }

  // optional uint64 toolid = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->toolid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgCraftStatue)
}

::google::protobuf::uint8* CMsgCraftStatue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgCraftStatue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 heroid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  // optional string sequencename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sequencename().data(), this->sequencename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgCraftStatue.sequencename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sequencename(), target);
  }

  // optional float cycle = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->cycle(), target);
  }

  // optional string description = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgCraftStatue.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->description(), target);
  }

  // optional uint32 pedestal_itemdef = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->pedestal_itemdef(), target);
  }

  // optional uint64 toolid = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->toolid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgCraftStatue)
  return target;
}

size_t CMsgCraftStatue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgCraftStatue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string sequencename = 2;
    if (has_sequencename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sequencename());
    }

    // optional string description = 4;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional uint32 heroid = 1;
    if (has_heroid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->heroid());
    }

    // optional float cycle = 3;
    if (has_cycle()) {
      total_size += 1 + 4;
    }

    // optional uint64 toolid = 6;
    if (has_toolid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->toolid());
    }

    // optional uint32 pedestal_itemdef = 5;
    if (has_pedestal_itemdef()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pedestal_itemdef());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCraftStatue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgCraftStatue)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCraftStatue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCraftStatue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgCraftStatue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgCraftStatue)
    MergeFrom(*source);
  }
}

void CMsgCraftStatue::MergeFrom(const CMsgCraftStatue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgCraftStatue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sequencename();
      sequencename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sequencename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000004u) {
      heroid_ = from.heroid_;
    }
    if (cached_has_bits & 0x00000008u) {
      cycle_ = from.cycle_;
    }
    if (cached_has_bits & 0x00000010u) {
      toolid_ = from.toolid_;
    }
    if (cached_has_bits & 0x00000020u) {
      pedestal_itemdef_ = from.pedestal_itemdef_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCraftStatue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgCraftStatue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCraftStatue::CopyFrom(const CMsgCraftStatue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgCraftStatue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCraftStatue::IsInitialized() const {
  return true;
}

void CMsgCraftStatue::Swap(CMsgCraftStatue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCraftStatue::InternalSwap(CMsgCraftStatue* other) {
  sequencename_.Swap(&other->sequencename_);
  description_.Swap(&other->description_);
  std::swap(heroid_, other->heroid_);
  std::swap(cycle_, other->cycle_);
  std::swap(toolid_, other->toolid_);
  std::swap(pedestal_itemdef_, other->pedestal_itemdef_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCraftStatue::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCraftStatue

// optional uint32 heroid = 1;
bool CMsgCraftStatue::has_heroid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgCraftStatue::set_has_heroid() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgCraftStatue::clear_has_heroid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgCraftStatue::clear_heroid() {
  heroid_ = 0u;
  clear_has_heroid();
}
::google::protobuf::uint32 CMsgCraftStatue::heroid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCraftStatue.heroid)
  return heroid_;
}
void CMsgCraftStatue::set_heroid(::google::protobuf::uint32 value) {
  set_has_heroid();
  heroid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCraftStatue.heroid)
}

// optional string sequencename = 2;
bool CMsgCraftStatue::has_sequencename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgCraftStatue::set_has_sequencename() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgCraftStatue::clear_has_sequencename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgCraftStatue::clear_sequencename() {
  sequencename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sequencename();
}
const ::std::string& CMsgCraftStatue::sequencename() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCraftStatue.sequencename)
  return sequencename_.GetNoArena();
}
void CMsgCraftStatue::set_sequencename(const ::std::string& value) {
  set_has_sequencename();
  sequencename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCraftStatue.sequencename)
}
#if LANG_CXX11
void CMsgCraftStatue::set_sequencename(::std::string&& value) {
  set_has_sequencename();
  sequencename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgCraftStatue.sequencename)
}
#endif
void CMsgCraftStatue::set_sequencename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sequencename();
  sequencename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgCraftStatue.sequencename)
}
void CMsgCraftStatue::set_sequencename(const char* value, size_t size) {
  set_has_sequencename();
  sequencename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgCraftStatue.sequencename)
}
::std::string* CMsgCraftStatue::mutable_sequencename() {
  set_has_sequencename();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgCraftStatue.sequencename)
  return sequencename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgCraftStatue::release_sequencename() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgCraftStatue.sequencename)
  clear_has_sequencename();
  return sequencename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgCraftStatue::set_allocated_sequencename(::std::string* sequencename) {
  if (sequencename != NULL) {
    set_has_sequencename();
  } else {
    clear_has_sequencename();
  }
  sequencename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sequencename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgCraftStatue.sequencename)
}

// optional float cycle = 3;
bool CMsgCraftStatue::has_cycle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgCraftStatue::set_has_cycle() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgCraftStatue::clear_has_cycle() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgCraftStatue::clear_cycle() {
  cycle_ = 0;
  clear_has_cycle();
}
float CMsgCraftStatue::cycle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCraftStatue.cycle)
  return cycle_;
}
void CMsgCraftStatue::set_cycle(float value) {
  set_has_cycle();
  cycle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCraftStatue.cycle)
}

// optional string description = 4;
bool CMsgCraftStatue::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgCraftStatue::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgCraftStatue::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgCraftStatue::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& CMsgCraftStatue::description() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCraftStatue.description)
  return description_.GetNoArena();
}
void CMsgCraftStatue::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCraftStatue.description)
}
#if LANG_CXX11
void CMsgCraftStatue::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgCraftStatue.description)
}
#endif
void CMsgCraftStatue::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgCraftStatue.description)
}
void CMsgCraftStatue::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgCraftStatue.description)
}
::std::string* CMsgCraftStatue::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgCraftStatue.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgCraftStatue::release_description() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgCraftStatue.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgCraftStatue::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgCraftStatue.description)
}

// optional uint32 pedestal_itemdef = 5;
bool CMsgCraftStatue::has_pedestal_itemdef() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgCraftStatue::set_has_pedestal_itemdef() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgCraftStatue::clear_has_pedestal_itemdef() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgCraftStatue::clear_pedestal_itemdef() {
  pedestal_itemdef_ = 0u;
  clear_has_pedestal_itemdef();
}
::google::protobuf::uint32 CMsgCraftStatue::pedestal_itemdef() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCraftStatue.pedestal_itemdef)
  return pedestal_itemdef_;
}
void CMsgCraftStatue::set_pedestal_itemdef(::google::protobuf::uint32 value) {
  set_has_pedestal_itemdef();
  pedestal_itemdef_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCraftStatue.pedestal_itemdef)
}

// optional uint64 toolid = 6;
bool CMsgCraftStatue::has_toolid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgCraftStatue::set_has_toolid() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgCraftStatue::clear_has_toolid() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgCraftStatue::clear_toolid() {
  toolid_ = GOOGLE_ULONGLONG(0);
  clear_has_toolid();
}
::google::protobuf::uint64 CMsgCraftStatue::toolid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCraftStatue.toolid)
  return toolid_;
}
void CMsgCraftStatue::set_toolid(::google::protobuf::uint64 value) {
  set_has_toolid();
  toolid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCraftStatue.toolid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRedeemCode::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRedeemCode::CMsgRedeemCode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRedeemCode)
}
CMsgRedeemCode::CMsgRedeemCode(const CMsgRedeemCode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRedeemCode)
}

void CMsgRedeemCode::SharedCtor() {
  _cached_size_ = 0;
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgRedeemCode::~CMsgRedeemCode() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRedeemCode)
  SharedDtor();
}

void CMsgRedeemCode::SharedDtor() {
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgRedeemCode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRedeemCode::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRedeemCode& CMsgRedeemCode::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgRedeemCode* CMsgRedeemCode::New(::google::protobuf::Arena* arena) const {
  CMsgRedeemCode* n = new CMsgRedeemCode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgRedeemCode::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRedeemCode)
  if (has_code()) {
    GOOGLE_DCHECK(!code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*code_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRedeemCode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRedeemCode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgRedeemCode.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRedeemCode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRedeemCode)
  return false;
#undef DO_
}

void CMsgRedeemCode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRedeemCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgRedeemCode.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRedeemCode)
}

::google::protobuf::uint8* CMsgRedeemCode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRedeemCode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgRedeemCode.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRedeemCode)
  return target;
}

size_t CMsgRedeemCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRedeemCode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string code = 1;
  if (has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRedeemCode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRedeemCode)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRedeemCode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRedeemCode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRedeemCode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRedeemCode)
    MergeFrom(*source);
  }
}

void CMsgRedeemCode::MergeFrom(const CMsgRedeemCode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRedeemCode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_code()) {
    set_has_code();
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
}

void CMsgRedeemCode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRedeemCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRedeemCode::CopyFrom(const CMsgRedeemCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRedeemCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRedeemCode::IsInitialized() const {
  return true;
}

void CMsgRedeemCode::Swap(CMsgRedeemCode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRedeemCode::InternalSwap(CMsgRedeemCode* other) {
  code_.Swap(&other->code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgRedeemCode::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgRedeemCode

// optional string code = 1;
bool CMsgRedeemCode::has_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgRedeemCode::set_has_code() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgRedeemCode::clear_has_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgRedeemCode::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
const ::std::string& CMsgRedeemCode::code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRedeemCode.code)
  return code_.GetNoArena();
}
void CMsgRedeemCode::set_code(const ::std::string& value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRedeemCode.code)
}
#if LANG_CXX11
void CMsgRedeemCode::set_code(::std::string&& value) {
  set_has_code();
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgRedeemCode.code)
}
#endif
void CMsgRedeemCode::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgRedeemCode.code)
}
void CMsgRedeemCode::set_code(const char* value, size_t size) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgRedeemCode.code)
}
::std::string* CMsgRedeemCode::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgRedeemCode.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgRedeemCode::release_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgRedeemCode.code)
  clear_has_code();
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgRedeemCode::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgRedeemCode.code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgRedeemCodeResponse::kResponseFieldNumber;
const int CMsgRedeemCodeResponse::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgRedeemCodeResponse::CMsgRedeemCodeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgRedeemCodeResponse)
}
CMsgRedeemCodeResponse::CMsgRedeemCodeResponse(const CMsgRedeemCodeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(response_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgRedeemCodeResponse)
}

void CMsgRedeemCodeResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(response_));
}

CMsgRedeemCodeResponse::~CMsgRedeemCodeResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgRedeemCodeResponse)
  SharedDtor();
}

void CMsgRedeemCodeResponse::SharedDtor() {
}

void CMsgRedeemCodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgRedeemCodeResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgRedeemCodeResponse& CMsgRedeemCodeResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgRedeemCodeResponse* CMsgRedeemCodeResponse::New(::google::protobuf::Arena* arena) const {
  CMsgRedeemCodeResponse* n = new CMsgRedeemCodeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgRedeemCodeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgRedeemCodeResponse)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(response_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgRedeemCodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgRedeemCodeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_response();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgRedeemCodeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgRedeemCodeResponse)
  return false;
#undef DO_
}

void CMsgRedeemCodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgRedeemCodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgRedeemCodeResponse)
}

::google::protobuf::uint8* CMsgRedeemCodeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgRedeemCodeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgRedeemCodeResponse)
  return target;
}

size_t CMsgRedeemCodeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgRedeemCodeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 response = 1;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->response());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgRedeemCodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgRedeemCodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgRedeemCodeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgRedeemCodeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgRedeemCodeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgRedeemCodeResponse)
    MergeFrom(*source);
  }
}

void CMsgRedeemCodeResponse::MergeFrom(const CMsgRedeemCodeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgRedeemCodeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      response_ = from.response_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgRedeemCodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgRedeemCodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgRedeemCodeResponse::CopyFrom(const CMsgRedeemCodeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgRedeemCodeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgRedeemCodeResponse::IsInitialized() const {
  return true;
}

void CMsgRedeemCodeResponse::Swap(CMsgRedeemCodeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgRedeemCodeResponse::InternalSwap(CMsgRedeemCodeResponse* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(response_, other->response_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgRedeemCodeResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgRedeemCodeResponse

// optional uint32 response = 1;
bool CMsgRedeemCodeResponse::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgRedeemCodeResponse::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgRedeemCodeResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgRedeemCodeResponse::clear_response() {
  response_ = 0u;
  clear_has_response();
}
::google::protobuf::uint32 CMsgRedeemCodeResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRedeemCodeResponse.response)
  return response_;
}
void CMsgRedeemCodeResponse::set_response(::google::protobuf::uint32 value) {
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRedeemCodeResponse.response)
}

// optional uint64 item_id = 2;
bool CMsgRedeemCodeResponse::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgRedeemCodeResponse::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgRedeemCodeResponse::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgRedeemCodeResponse::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgRedeemCodeResponse::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRedeemCodeResponse.item_id)
  return item_id_;
}
void CMsgRedeemCodeResponse::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRedeemCodeResponse.item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDevNewItemRequest::kItemDefNameFieldNumber;
const int CMsgDevNewItemRequest::kLootListNameFieldNumber;
const int CMsgDevNewItemRequest::kAttrDefNameFieldNumber;
const int CMsgDevNewItemRequest::kAttrValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDevNewItemRequest::CMsgDevNewItemRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDevNewItemRequest)
}
CMsgDevNewItemRequest::CMsgDevNewItemRequest(const CMsgDevNewItemRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      attr_def_name_(from.attr_def_name_),
      attr_value_(from.attr_value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_def_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_item_def_name()) {
    item_def_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_def_name_);
  }
  loot_list_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_loot_list_name()) {
    loot_list_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loot_list_name_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDevNewItemRequest)
}

void CMsgDevNewItemRequest::SharedCtor() {
  _cached_size_ = 0;
  item_def_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loot_list_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgDevNewItemRequest::~CMsgDevNewItemRequest() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDevNewItemRequest)
  SharedDtor();
}

void CMsgDevNewItemRequest::SharedDtor() {
  item_def_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loot_list_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDevNewItemRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDevNewItemRequest::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDevNewItemRequest& CMsgDevNewItemRequest::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgDevNewItemRequest* CMsgDevNewItemRequest::New(::google::protobuf::Arena* arena) const {
  CMsgDevNewItemRequest* n = new CMsgDevNewItemRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDevNewItemRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDevNewItemRequest)
  attr_def_name_.Clear();
  attr_value_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_item_def_name()) {
      GOOGLE_DCHECK(!item_def_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*item_def_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_loot_list_name()) {
      GOOGLE_DCHECK(!loot_list_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*loot_list_name_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDevNewItemRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDevNewItemRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string item_def_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_item_def_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->item_def_name().data(), this->item_def_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDevNewItemRequest.item_def_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string loot_list_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loot_list_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loot_list_name().data(), this->loot_list_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDevNewItemRequest.loot_list_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string attr_def_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_attr_def_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attr_def_name(this->attr_def_name_size() - 1).data(),
            this->attr_def_name(this->attr_def_name_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDevNewItemRequest.attr_def_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string attr_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_attr_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attr_value(this->attr_value_size() - 1).data(),
            this->attr_value(this->attr_value_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgDevNewItemRequest.attr_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDevNewItemRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDevNewItemRequest)
  return false;
#undef DO_
}

void CMsgDevNewItemRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDevNewItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string item_def_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_def_name().data(), this->item_def_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.item_def_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->item_def_name(), output);
  }

  // optional string loot_list_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_list_name().data(), this->loot_list_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.loot_list_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->loot_list_name(), output);
  }

  // repeated string attr_def_name = 5;
  for (int i = 0, n = this->attr_def_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attr_def_name(i).data(), this->attr_def_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.attr_def_name");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->attr_def_name(i), output);
  }

  // repeated string attr_value = 6;
  for (int i = 0, n = this->attr_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attr_value(i).data(), this->attr_value(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.attr_value");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->attr_value(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDevNewItemRequest)
}

::google::protobuf::uint8* CMsgDevNewItemRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDevNewItemRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string item_def_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->item_def_name().data(), this->item_def_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.item_def_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->item_def_name(), target);
  }

  // optional string loot_list_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loot_list_name().data(), this->loot_list_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.loot_list_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->loot_list_name(), target);
  }

  // repeated string attr_def_name = 5;
  for (int i = 0, n = this->attr_def_name_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attr_def_name(i).data(), this->attr_def_name(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.attr_def_name");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->attr_def_name(i), target);
  }

  // repeated string attr_value = 6;
  for (int i = 0, n = this->attr_value_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attr_value(i).data(), this->attr_value(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgDevNewItemRequest.attr_value");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->attr_value(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDevNewItemRequest)
  return target;
}

size_t CMsgDevNewItemRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDevNewItemRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string attr_def_name = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attr_def_name_size());
  for (int i = 0, n = this->attr_def_name_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attr_def_name(i));
  }

  // repeated string attr_value = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attr_value_size());
  for (int i = 0, n = this->attr_value_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attr_value(i));
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string item_def_name = 3;
    if (has_item_def_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->item_def_name());
    }

    // optional string loot_list_name = 4;
    if (has_loot_list_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->loot_list_name());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDevNewItemRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDevNewItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDevNewItemRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDevNewItemRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDevNewItemRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDevNewItemRequest)
    MergeFrom(*source);
  }
}

void CMsgDevNewItemRequest::MergeFrom(const CMsgDevNewItemRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDevNewItemRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attr_def_name_.MergeFrom(from.attr_def_name_);
  attr_value_.MergeFrom(from.attr_value_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_item_def_name();
      item_def_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.item_def_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_loot_list_name();
      loot_list_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loot_list_name_);
    }
  }
}

void CMsgDevNewItemRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDevNewItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDevNewItemRequest::CopyFrom(const CMsgDevNewItemRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDevNewItemRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevNewItemRequest::IsInitialized() const {
  return true;
}

void CMsgDevNewItemRequest::Swap(CMsgDevNewItemRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDevNewItemRequest::InternalSwap(CMsgDevNewItemRequest* other) {
  attr_def_name_.InternalSwap(&other->attr_def_name_);
  attr_value_.InternalSwap(&other->attr_value_);
  item_def_name_.Swap(&other->item_def_name_);
  loot_list_name_.Swap(&other->loot_list_name_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDevNewItemRequest::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgDevNewItemRequest

// optional string item_def_name = 3;
bool CMsgDevNewItemRequest::has_item_def_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDevNewItemRequest::set_has_item_def_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDevNewItemRequest::clear_has_item_def_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDevNewItemRequest::clear_item_def_name() {
  item_def_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_def_name();
}
const ::std::string& CMsgDevNewItemRequest::item_def_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDevNewItemRequest.item_def_name)
  return item_def_name_.GetNoArena();
}
void CMsgDevNewItemRequest::set_item_def_name(const ::std::string& value) {
  set_has_item_def_name();
  item_def_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDevNewItemRequest.item_def_name)
}
#if LANG_CXX11
void CMsgDevNewItemRequest::set_item_def_name(::std::string&& value) {
  set_has_item_def_name();
  item_def_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDevNewItemRequest.item_def_name)
}
#endif
void CMsgDevNewItemRequest::set_item_def_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_item_def_name();
  item_def_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDevNewItemRequest.item_def_name)
}
void CMsgDevNewItemRequest::set_item_def_name(const char* value, size_t size) {
  set_has_item_def_name();
  item_def_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDevNewItemRequest.item_def_name)
}
::std::string* CMsgDevNewItemRequest::mutable_item_def_name() {
  set_has_item_def_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDevNewItemRequest.item_def_name)
  return item_def_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDevNewItemRequest::release_item_def_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDevNewItemRequest.item_def_name)
  clear_has_item_def_name();
  return item_def_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDevNewItemRequest::set_allocated_item_def_name(::std::string* item_def_name) {
  if (item_def_name != NULL) {
    set_has_item_def_name();
  } else {
    clear_has_item_def_name();
  }
  item_def_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_def_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDevNewItemRequest.item_def_name)
}

// optional string loot_list_name = 4;
bool CMsgDevNewItemRequest::has_loot_list_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgDevNewItemRequest::set_has_loot_list_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgDevNewItemRequest::clear_has_loot_list_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgDevNewItemRequest::clear_loot_list_name() {
  loot_list_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_loot_list_name();
}
const ::std::string& CMsgDevNewItemRequest::loot_list_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDevNewItemRequest.loot_list_name)
  return loot_list_name_.GetNoArena();
}
void CMsgDevNewItemRequest::set_loot_list_name(const ::std::string& value) {
  set_has_loot_list_name();
  loot_list_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDevNewItemRequest.loot_list_name)
}
#if LANG_CXX11
void CMsgDevNewItemRequest::set_loot_list_name(::std::string&& value) {
  set_has_loot_list_name();
  loot_list_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDevNewItemRequest.loot_list_name)
}
#endif
void CMsgDevNewItemRequest::set_loot_list_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_loot_list_name();
  loot_list_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDevNewItemRequest.loot_list_name)
}
void CMsgDevNewItemRequest::set_loot_list_name(const char* value, size_t size) {
  set_has_loot_list_name();
  loot_list_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDevNewItemRequest.loot_list_name)
}
::std::string* CMsgDevNewItemRequest::mutable_loot_list_name() {
  set_has_loot_list_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDevNewItemRequest.loot_list_name)
  return loot_list_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDevNewItemRequest::release_loot_list_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDevNewItemRequest.loot_list_name)
  clear_has_loot_list_name();
  return loot_list_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDevNewItemRequest::set_allocated_loot_list_name(::std::string* loot_list_name) {
  if (loot_list_name != NULL) {
    set_has_loot_list_name();
  } else {
    clear_has_loot_list_name();
  }
  loot_list_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loot_list_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDevNewItemRequest.loot_list_name)
}

// repeated string attr_def_name = 5;
int CMsgDevNewItemRequest::attr_def_name_size() const {
  return attr_def_name_.size();
}
void CMsgDevNewItemRequest::clear_attr_def_name() {
  attr_def_name_.Clear();
}
const ::std::string& CMsgDevNewItemRequest::attr_def_name(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDevNewItemRequest.attr_def_name)
  return attr_def_name_.Get(index);
}
::std::string* CMsgDevNewItemRequest::mutable_attr_def_name(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDevNewItemRequest.attr_def_name)
  return attr_def_name_.Mutable(index);
}
void CMsgDevNewItemRequest::set_attr_def_name(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDevNewItemRequest.attr_def_name)
  attr_def_name_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CMsgDevNewItemRequest::set_attr_def_name(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDevNewItemRequest.attr_def_name)
  attr_def_name_.Mutable(index)->assign(std::move(value));
}
#endif
void CMsgDevNewItemRequest::set_attr_def_name(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  attr_def_name_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDevNewItemRequest.attr_def_name)
}
void CMsgDevNewItemRequest::set_attr_def_name(int index, const char* value, size_t size) {
  attr_def_name_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDevNewItemRequest.attr_def_name)
}
::std::string* CMsgDevNewItemRequest::add_attr_def_name() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgDevNewItemRequest.attr_def_name)
  return attr_def_name_.Add();
}
void CMsgDevNewItemRequest::add_attr_def_name(const ::std::string& value) {
  attr_def_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDevNewItemRequest.attr_def_name)
}
#if LANG_CXX11
void CMsgDevNewItemRequest::add_attr_def_name(::std::string&& value) {
  attr_def_name_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDevNewItemRequest.attr_def_name)
}
#endif
void CMsgDevNewItemRequest::add_attr_def_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  attr_def_name_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgDevNewItemRequest.attr_def_name)
}
void CMsgDevNewItemRequest::add_attr_def_name(const char* value, size_t size) {
  attr_def_name_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgDevNewItemRequest.attr_def_name)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDevNewItemRequest::attr_def_name() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDevNewItemRequest.attr_def_name)
  return attr_def_name_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDevNewItemRequest::mutable_attr_def_name() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDevNewItemRequest.attr_def_name)
  return &attr_def_name_;
}

// repeated string attr_value = 6;
int CMsgDevNewItemRequest::attr_value_size() const {
  return attr_value_.size();
}
void CMsgDevNewItemRequest::clear_attr_value() {
  attr_value_.Clear();
}
const ::std::string& CMsgDevNewItemRequest::attr_value(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDevNewItemRequest.attr_value)
  return attr_value_.Get(index);
}
::std::string* CMsgDevNewItemRequest::mutable_attr_value(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDevNewItemRequest.attr_value)
  return attr_value_.Mutable(index);
}
void CMsgDevNewItemRequest::set_attr_value(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDevNewItemRequest.attr_value)
  attr_value_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CMsgDevNewItemRequest::set_attr_value(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDevNewItemRequest.attr_value)
  attr_value_.Mutable(index)->assign(std::move(value));
}
#endif
void CMsgDevNewItemRequest::set_attr_value(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  attr_value_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDevNewItemRequest.attr_value)
}
void CMsgDevNewItemRequest::set_attr_value(int index, const char* value, size_t size) {
  attr_value_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDevNewItemRequest.attr_value)
}
::std::string* CMsgDevNewItemRequest::add_attr_value() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgDevNewItemRequest.attr_value)
  return attr_value_.Add();
}
void CMsgDevNewItemRequest::add_attr_value(const ::std::string& value) {
  attr_value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDevNewItemRequest.attr_value)
}
#if LANG_CXX11
void CMsgDevNewItemRequest::add_attr_value(::std::string&& value) {
  attr_value_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDevNewItemRequest.attr_value)
}
#endif
void CMsgDevNewItemRequest::add_attr_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  attr_value_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgDevNewItemRequest.attr_value)
}
void CMsgDevNewItemRequest::add_attr_value(const char* value, size_t size) {
  attr_value_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgDevNewItemRequest.attr_value)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDevNewItemRequest::attr_value() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDevNewItemRequest.attr_value)
  return attr_value_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDevNewItemRequest::mutable_attr_value() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDevNewItemRequest.attr_value)
  return &attr_value_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDevNewItemRequestResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDevNewItemRequestResponse::CMsgDevNewItemRequestResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgDevNewItemRequestResponse)
}
CMsgDevNewItemRequestResponse::CMsgDevNewItemRequestResponse(const CMsgDevNewItemRequestResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgDevNewItemRequestResponse)
}

void CMsgDevNewItemRequestResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
}

CMsgDevNewItemRequestResponse::~CMsgDevNewItemRequestResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgDevNewItemRequestResponse)
  SharedDtor();
}

void CMsgDevNewItemRequestResponse::SharedDtor() {
}

void CMsgDevNewItemRequestResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDevNewItemRequestResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDevNewItemRequestResponse& CMsgDevNewItemRequestResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgDevNewItemRequestResponse* CMsgDevNewItemRequestResponse::New(::google::protobuf::Arena* arena) const {
  CMsgDevNewItemRequestResponse* n = new CMsgDevNewItemRequestResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDevNewItemRequestResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgDevNewItemRequestResponse)
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDevNewItemRequestResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgDevNewItemRequestResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgDevNewItemRequestResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgDevNewItemRequestResponse)
  return false;
#undef DO_
}

void CMsgDevNewItemRequestResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgDevNewItemRequestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgDevNewItemRequestResponse)
}

::google::protobuf::uint8* CMsgDevNewItemRequestResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgDevNewItemRequestResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgDevNewItemRequestResponse)
  return target;
}

size_t CMsgDevNewItemRequestResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgDevNewItemRequestResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDevNewItemRequestResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgDevNewItemRequestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDevNewItemRequestResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDevNewItemRequestResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgDevNewItemRequestResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgDevNewItemRequestResponse)
    MergeFrom(*source);
  }
}

void CMsgDevNewItemRequestResponse::MergeFrom(const CMsgDevNewItemRequestResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgDevNewItemRequestResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void CMsgDevNewItemRequestResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgDevNewItemRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDevNewItemRequestResponse::CopyFrom(const CMsgDevNewItemRequestResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgDevNewItemRequestResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDevNewItemRequestResponse::IsInitialized() const {
  return true;
}

void CMsgDevNewItemRequestResponse::Swap(CMsgDevNewItemRequestResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDevNewItemRequestResponse::InternalSwap(CMsgDevNewItemRequestResponse* other) {
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDevNewItemRequestResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgDevNewItemRequestResponse

// optional bool success = 1;
bool CMsgDevNewItemRequestResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDevNewItemRequestResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDevNewItemRequestResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDevNewItemRequestResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
bool CMsgDevNewItemRequestResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDevNewItemRequestResponse.success)
  return success_;
}
void CMsgDevNewItemRequestResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDevNewItemRequestResponse.success)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCCheckAccountSubscription::kAccountIdFieldNumber;
const int CMsgGCCheckAccountSubscription::kDefIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCCheckAccountSubscription::CMsgGCCheckAccountSubscription()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCCheckAccountSubscription)
}
CMsgGCCheckAccountSubscription::CMsgGCCheckAccountSubscription(const CMsgGCCheckAccountSubscription& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    reinterpret_cast<char*>(&def_index_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(def_index_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCCheckAccountSubscription)
}

void CMsgGCCheckAccountSubscription::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, reinterpret_cast<char*>(&def_index_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(def_index_));
}

CMsgGCCheckAccountSubscription::~CMsgGCCheckAccountSubscription() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCCheckAccountSubscription)
  SharedDtor();
}

void CMsgGCCheckAccountSubscription::SharedDtor() {
}

void CMsgGCCheckAccountSubscription::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCCheckAccountSubscription::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCCheckAccountSubscription& CMsgGCCheckAccountSubscription::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCCheckAccountSubscription* CMsgGCCheckAccountSubscription::New(::google::protobuf::Arena* arena) const {
  CMsgGCCheckAccountSubscription* n = new CMsgGCCheckAccountSubscription;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCCheckAccountSubscription::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCCheckAccountSubscription)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&account_id_, 0, reinterpret_cast<char*>(&def_index_) -
      reinterpret_cast<char*>(&account_id_) + sizeof(def_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCCheckAccountSubscription::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCCheckAccountSubscription)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 def_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCCheckAccountSubscription)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCCheckAccountSubscription)
  return false;
#undef DO_
}

void CMsgGCCheckAccountSubscription::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCCheckAccountSubscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 def_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->def_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCCheckAccountSubscription)
}

::google::protobuf::uint8* CMsgGCCheckAccountSubscription::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCCheckAccountSubscription)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 def_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->def_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCCheckAccountSubscription)
  return target;
}

size_t CMsgGCCheckAccountSubscription::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCCheckAccountSubscription)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 def_index = 2;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCCheckAccountSubscription::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCCheckAccountSubscription)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCCheckAccountSubscription* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCCheckAccountSubscription>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCCheckAccountSubscription)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCCheckAccountSubscription)
    MergeFrom(*source);
  }
}

void CMsgGCCheckAccountSubscription::MergeFrom(const CMsgGCCheckAccountSubscription& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCCheckAccountSubscription)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      def_index_ = from.def_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCCheckAccountSubscription::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCCheckAccountSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCCheckAccountSubscription::CopyFrom(const CMsgGCCheckAccountSubscription& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCCheckAccountSubscription)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCCheckAccountSubscription::IsInitialized() const {
  return true;
}

void CMsgGCCheckAccountSubscription::Swap(CMsgGCCheckAccountSubscription* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCCheckAccountSubscription::InternalSwap(CMsgGCCheckAccountSubscription* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(def_index_, other->def_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCCheckAccountSubscription::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCCheckAccountSubscription

// optional uint32 account_id = 1;
bool CMsgGCCheckAccountSubscription::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCCheckAccountSubscription::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCCheckAccountSubscription::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCCheckAccountSubscription::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgGCCheckAccountSubscription::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCCheckAccountSubscription.account_id)
  return account_id_;
}
void CMsgGCCheckAccountSubscription::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCCheckAccountSubscription.account_id)
}

// optional uint32 def_index = 2;
bool CMsgGCCheckAccountSubscription::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCCheckAccountSubscription::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCCheckAccountSubscription::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCCheckAccountSubscription::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
::google::protobuf::uint32 CMsgGCCheckAccountSubscription::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCCheckAccountSubscription.def_index)
  return def_index_;
}
void CMsgGCCheckAccountSubscription::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCCheckAccountSubscription.def_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCCheckAccountSubscriptionResponse::kStateFieldNumber;
const int CMsgGCCheckAccountSubscriptionResponse::kCacheUntilFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCCheckAccountSubscriptionResponse::CMsgGCCheckAccountSubscriptionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
}
CMsgGCCheckAccountSubscriptionResponse::CMsgGCCheckAccountSubscriptionResponse(const CMsgGCCheckAccountSubscriptionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&state_, &from.state_,
    reinterpret_cast<char*>(&cache_until_) -
    reinterpret_cast<char*>(&state_) + sizeof(cache_until_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
}

void CMsgGCCheckAccountSubscriptionResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&state_, 0, reinterpret_cast<char*>(&cache_until_) -
    reinterpret_cast<char*>(&state_) + sizeof(cache_until_));
}

CMsgGCCheckAccountSubscriptionResponse::~CMsgGCCheckAccountSubscriptionResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  SharedDtor();
}

void CMsgGCCheckAccountSubscriptionResponse::SharedDtor() {
}

void CMsgGCCheckAccountSubscriptionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCCheckAccountSubscriptionResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCCheckAccountSubscriptionResponse& CMsgGCCheckAccountSubscriptionResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCCheckAccountSubscriptionResponse* CMsgGCCheckAccountSubscriptionResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCCheckAccountSubscriptionResponse* n = new CMsgGCCheckAccountSubscriptionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCCheckAccountSubscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&state_, 0, reinterpret_cast<char*>(&cache_until_) -
      reinterpret_cast<char*>(&state_) + sizeof(cache_until_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCCheckAccountSubscriptionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgGCCheckAccountSubscriptionResponse.ESubscriptionState state = 1 [default = STATE_UNKNOWN];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState_IsValid(value)) {
            set_state(static_cast< ::proto::dota::CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cache_until = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_cache_until();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cache_until_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  return false;
#undef DO_
}

void CMsgGCCheckAccountSubscriptionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgGCCheckAccountSubscriptionResponse.ESubscriptionState state = 1 [default = STATE_UNKNOWN];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->state(), output);
  }

  // optional uint32 cache_until = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->cache_until(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
}

::google::protobuf::uint8* CMsgGCCheckAccountSubscriptionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgGCCheckAccountSubscriptionResponse.ESubscriptionState state = 1 [default = STATE_UNKNOWN];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->state(), target);
  }

  // optional uint32 cache_until = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->cache_until(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  return target;
}

size_t CMsgGCCheckAccountSubscriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .proto.dota.CMsgGCCheckAccountSubscriptionResponse.ESubscriptionState state = 1 [default = STATE_UNKNOWN];
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->state());
    }

    // optional uint32 cache_until = 2;
    if (has_cache_until()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cache_until());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCCheckAccountSubscriptionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCCheckAccountSubscriptionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCCheckAccountSubscriptionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
    MergeFrom(*source);
  }
}

void CMsgGCCheckAccountSubscriptionResponse::MergeFrom(const CMsgGCCheckAccountSubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000002u) {
      cache_until_ = from.cache_until_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCCheckAccountSubscriptionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCCheckAccountSubscriptionResponse::CopyFrom(const CMsgGCCheckAccountSubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCCheckAccountSubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCCheckAccountSubscriptionResponse::IsInitialized() const {
  return true;
}

void CMsgGCCheckAccountSubscriptionResponse::Swap(CMsgGCCheckAccountSubscriptionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCCheckAccountSubscriptionResponse::InternalSwap(CMsgGCCheckAccountSubscriptionResponse* other) {
  std::swap(state_, other->state_);
  std::swap(cache_until_, other->cache_until_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCCheckAccountSubscriptionResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCCheckAccountSubscriptionResponse

// optional .proto.dota.CMsgGCCheckAccountSubscriptionResponse.ESubscriptionState state = 1 [default = STATE_UNKNOWN];
bool CMsgGCCheckAccountSubscriptionResponse::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCCheckAccountSubscriptionResponse::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCCheckAccountSubscriptionResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCCheckAccountSubscriptionResponse::clear_state() {
  state_ = 0;
  clear_has_state();
}
::proto::dota::CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState CMsgGCCheckAccountSubscriptionResponse::state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCCheckAccountSubscriptionResponse.state)
  return static_cast< ::proto::dota::CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState >(state_);
}
void CMsgGCCheckAccountSubscriptionResponse::set_state(::proto::dota::CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState value) {
  assert(::proto::dota::CMsgGCCheckAccountSubscriptionResponse_ESubscriptionState_IsValid(value));
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCCheckAccountSubscriptionResponse.state)
}

// optional uint32 cache_until = 2;
bool CMsgGCCheckAccountSubscriptionResponse::has_cache_until() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCCheckAccountSubscriptionResponse::set_has_cache_until() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCCheckAccountSubscriptionResponse::clear_has_cache_until() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCCheckAccountSubscriptionResponse::clear_cache_until() {
  cache_until_ = 0u;
  clear_has_cache_until();
}
::google::protobuf::uint32 CMsgGCCheckAccountSubscriptionResponse::cache_until() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCCheckAccountSubscriptionResponse.cache_until)
  return cache_until_;
}
void CMsgGCCheckAccountSubscriptionResponse::set_cache_until(::google::protobuf::uint32 value) {
  set_has_cache_until();
  cache_until_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCCheckAccountSubscriptionResponse.cache_until)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCAccountSubscriptionChange::kAccountIdFieldNumber;
const int CMsgGCToGCAccountSubscriptionChange::kItemDefinitionIndexFieldNumber;
const int CMsgGCToGCAccountSubscriptionChange::kIsSubscriptionActiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCAccountSubscriptionChange::CMsgGCToGCAccountSubscriptionChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCAccountSubscriptionChange)
}
CMsgGCToGCAccountSubscriptionChange::CMsgGCToGCAccountSubscriptionChange(const CMsgGCToGCAccountSubscriptionChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    reinterpret_cast<char*>(&is_subscription_active_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(is_subscription_active_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCAccountSubscriptionChange)
}

void CMsgGCToGCAccountSubscriptionChange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, reinterpret_cast<char*>(&is_subscription_active_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(is_subscription_active_));
}

CMsgGCToGCAccountSubscriptionChange::~CMsgGCToGCAccountSubscriptionChange() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  SharedDtor();
}

void CMsgGCToGCAccountSubscriptionChange::SharedDtor() {
}

void CMsgGCToGCAccountSubscriptionChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCAccountSubscriptionChange::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCAccountSubscriptionChange& CMsgGCToGCAccountSubscriptionChange::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCAccountSubscriptionChange* CMsgGCToGCAccountSubscriptionChange::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCAccountSubscriptionChange* n = new CMsgGCToGCAccountSubscriptionChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCAccountSubscriptionChange::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&account_id_, 0, reinterpret_cast<char*>(&is_subscription_active_) -
      reinterpret_cast<char*>(&account_id_) + sizeof(is_subscription_active_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCAccountSubscriptionChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_definition_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_definition_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_definition_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_subscription_active = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_is_subscription_active();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_subscription_active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  return false;
#undef DO_
}

void CMsgGCToGCAccountSubscriptionChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 item_definition_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_definition_index(), output);
  }

  // optional bool is_subscription_active = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_subscription_active(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCAccountSubscriptionChange)
}

::google::protobuf::uint8* CMsgGCToGCAccountSubscriptionChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 item_definition_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_definition_index(), target);
  }

  // optional bool is_subscription_active = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_subscription_active(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  return target;
}

size_t CMsgGCToGCAccountSubscriptionChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 item_definition_index = 2;
    if (has_item_definition_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_definition_index());
    }

    // optional bool is_subscription_active = 3;
    if (has_is_subscription_active()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCAccountSubscriptionChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCAccountSubscriptionChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCAccountSubscriptionChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCAccountSubscriptionChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCAccountSubscriptionChange)
    MergeFrom(*source);
  }
}

void CMsgGCToGCAccountSubscriptionChange::MergeFrom(const CMsgGCToGCAccountSubscriptionChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_definition_index_ = from.item_definition_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      is_subscription_active_ = from.is_subscription_active_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCAccountSubscriptionChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCAccountSubscriptionChange::CopyFrom(const CMsgGCToGCAccountSubscriptionChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCAccountSubscriptionChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCAccountSubscriptionChange::IsInitialized() const {
  return true;
}

void CMsgGCToGCAccountSubscriptionChange::Swap(CMsgGCToGCAccountSubscriptionChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCAccountSubscriptionChange::InternalSwap(CMsgGCToGCAccountSubscriptionChange* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(item_definition_index_, other->item_definition_index_);
  std::swap(is_subscription_active_, other->is_subscription_active_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCAccountSubscriptionChange::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCAccountSubscriptionChange

// optional uint32 account_id = 1;
bool CMsgGCToGCAccountSubscriptionChange::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCAccountSubscriptionChange::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCAccountSubscriptionChange::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCAccountSubscriptionChange::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgGCToGCAccountSubscriptionChange::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCAccountSubscriptionChange.account_id)
  return account_id_;
}
void CMsgGCToGCAccountSubscriptionChange::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCAccountSubscriptionChange.account_id)
}

// optional uint32 item_definition_index = 2;
bool CMsgGCToGCAccountSubscriptionChange::has_item_definition_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCAccountSubscriptionChange::set_has_item_definition_index() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCAccountSubscriptionChange::clear_has_item_definition_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCAccountSubscriptionChange::clear_item_definition_index() {
  item_definition_index_ = 0u;
  clear_has_item_definition_index();
}
::google::protobuf::uint32 CMsgGCToGCAccountSubscriptionChange::item_definition_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCAccountSubscriptionChange.item_definition_index)
  return item_definition_index_;
}
void CMsgGCToGCAccountSubscriptionChange::set_item_definition_index(::google::protobuf::uint32 value) {
  set_has_item_definition_index();
  item_definition_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCAccountSubscriptionChange.item_definition_index)
}

// optional bool is_subscription_active = 3;
bool CMsgGCToGCAccountSubscriptionChange::has_is_subscription_active() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCToGCAccountSubscriptionChange::set_has_is_subscription_active() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCToGCAccountSubscriptionChange::clear_has_is_subscription_active() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCToGCAccountSubscriptionChange::clear_is_subscription_active() {
  is_subscription_active_ = false;
  clear_has_is_subscription_active();
}
bool CMsgGCToGCAccountSubscriptionChange::is_subscription_active() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCAccountSubscriptionChange.is_subscription_active)
  return is_subscription_active_;
}
void CMsgGCToGCAccountSubscriptionChange::set_is_subscription_active(bool value) {
  set_has_is_subscription_active();
  is_subscription_active_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCAccountSubscriptionChange.is_subscription_active)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCAddGiftItem::kAccountIdFieldNumber;
const int CMsgGCAddGiftItem::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCAddGiftItem::CMsgGCAddGiftItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCAddGiftItem)
}
CMsgGCAddGiftItem::CMsgGCAddGiftItem(const CMsgGCAddGiftItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&account_id_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCAddGiftItem)
}

void CMsgGCAddGiftItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&account_id_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(account_id_));
}

CMsgGCAddGiftItem::~CMsgGCAddGiftItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCAddGiftItem)
  SharedDtor();
}

void CMsgGCAddGiftItem::SharedDtor() {
}

void CMsgGCAddGiftItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCAddGiftItem::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCAddGiftItem& CMsgGCAddGiftItem::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCAddGiftItem* CMsgGCAddGiftItem::New(::google::protobuf::Arena* arena) const {
  CMsgGCAddGiftItem* n = new CMsgGCAddGiftItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCAddGiftItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCAddGiftItem)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&account_id_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCAddGiftItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCAddGiftItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCAddGiftItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCAddGiftItem)
  return false;
#undef DO_
}

void CMsgGCAddGiftItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCAddGiftItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCAddGiftItem)
}

::google::protobuf::uint8* CMsgGCAddGiftItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCAddGiftItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCAddGiftItem)
  return target;
}

size_t CMsgGCAddGiftItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCAddGiftItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCAddGiftItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCAddGiftItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCAddGiftItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCAddGiftItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCAddGiftItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCAddGiftItem)
    MergeFrom(*source);
  }
}

void CMsgGCAddGiftItem::MergeFrom(const CMsgGCAddGiftItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCAddGiftItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      account_id_ = from.account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCAddGiftItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCAddGiftItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCAddGiftItem::CopyFrom(const CMsgGCAddGiftItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCAddGiftItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCAddGiftItem::IsInitialized() const {
  return true;
}

void CMsgGCAddGiftItem::Swap(CMsgGCAddGiftItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCAddGiftItem::InternalSwap(CMsgGCAddGiftItem* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(account_id_, other->account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCAddGiftItem::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCAddGiftItem

// optional uint32 account_id = 1;
bool CMsgGCAddGiftItem::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCAddGiftItem::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCAddGiftItem::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCAddGiftItem::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgGCAddGiftItem::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCAddGiftItem.account_id)
  return account_id_;
}
void CMsgGCAddGiftItem::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCAddGiftItem.account_id)
}

// optional uint64 item_id = 2;
bool CMsgGCAddGiftItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCAddGiftItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCAddGiftItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCAddGiftItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgGCAddGiftItem::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCAddGiftItem.item_id)
  return item_id_;
}
void CMsgGCAddGiftItem::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCAddGiftItem.item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCWrapAndDeliverGift::kItemIdFieldNumber;
const int CMsgClientToGCWrapAndDeliverGift::kGiveToAccountIdFieldNumber;
const int CMsgClientToGCWrapAndDeliverGift::kGiftMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCWrapAndDeliverGift::CMsgClientToGCWrapAndDeliverGift()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCWrapAndDeliverGift)
}
CMsgClientToGCWrapAndDeliverGift::CMsgClientToGCWrapAndDeliverGift(const CMsgClientToGCWrapAndDeliverGift& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gift_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gift_message()) {
    gift_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gift_message_);
  }
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&give_to_account_id_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(give_to_account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCWrapAndDeliverGift)
}

void CMsgClientToGCWrapAndDeliverGift::SharedCtor() {
  _cached_size_ = 0;
  gift_message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&give_to_account_id_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(give_to_account_id_));
}

CMsgClientToGCWrapAndDeliverGift::~CMsgClientToGCWrapAndDeliverGift() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  SharedDtor();
}

void CMsgClientToGCWrapAndDeliverGift::SharedDtor() {
  gift_message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientToGCWrapAndDeliverGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCWrapAndDeliverGift::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCWrapAndDeliverGift& CMsgClientToGCWrapAndDeliverGift::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCWrapAndDeliverGift* CMsgClientToGCWrapAndDeliverGift::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCWrapAndDeliverGift* n = new CMsgClientToGCWrapAndDeliverGift;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCWrapAndDeliverGift::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  if (has_gift_message()) {
    GOOGLE_DCHECK(!gift_message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*gift_message_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&give_to_account_id_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(give_to_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCWrapAndDeliverGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 give_to_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_give_to_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &give_to_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gift_message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gift_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gift_message().data(), this->gift_message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  return false;
#undef DO_
}

void CMsgClientToGCWrapAndDeliverGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 give_to_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->give_to_account_id(), output);
  }

  // optional string gift_message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gift_message().data(), this->gift_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->gift_message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCWrapAndDeliverGift)
}

::google::protobuf::uint8* CMsgClientToGCWrapAndDeliverGift::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 give_to_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->give_to_account_id(), target);
  }

  // optional string gift_message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gift_message().data(), this->gift_message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->gift_message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  return target;
}

size_t CMsgClientToGCWrapAndDeliverGift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string gift_message = 3;
    if (has_gift_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gift_message());
    }

    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 give_to_account_id = 2;
    if (has_give_to_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->give_to_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCWrapAndDeliverGift::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCWrapAndDeliverGift* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCWrapAndDeliverGift>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCWrapAndDeliverGift)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCWrapAndDeliverGift)
    MergeFrom(*source);
  }
}

void CMsgClientToGCWrapAndDeliverGift::MergeFrom(const CMsgClientToGCWrapAndDeliverGift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gift_message();
      gift_message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gift_message_);
    }
    if (cached_has_bits & 0x00000002u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      give_to_account_id_ = from.give_to_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCWrapAndDeliverGift::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCWrapAndDeliverGift::CopyFrom(const CMsgClientToGCWrapAndDeliverGift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCWrapAndDeliverGift::IsInitialized() const {
  return true;
}

void CMsgClientToGCWrapAndDeliverGift::Swap(CMsgClientToGCWrapAndDeliverGift* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCWrapAndDeliverGift::InternalSwap(CMsgClientToGCWrapAndDeliverGift* other) {
  gift_message_.Swap(&other->gift_message_);
  std::swap(item_id_, other->item_id_);
  std::swap(give_to_account_id_, other->give_to_account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCWrapAndDeliverGift::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCWrapAndDeliverGift

// optional uint64 item_id = 1;
bool CMsgClientToGCWrapAndDeliverGift::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCWrapAndDeliverGift::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCWrapAndDeliverGift::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCWrapAndDeliverGift::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgClientToGCWrapAndDeliverGift::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCWrapAndDeliverGift.item_id)
  return item_id_;
}
void CMsgClientToGCWrapAndDeliverGift::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCWrapAndDeliverGift.item_id)
}

// optional uint32 give_to_account_id = 2;
bool CMsgClientToGCWrapAndDeliverGift::has_give_to_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientToGCWrapAndDeliverGift::set_has_give_to_account_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientToGCWrapAndDeliverGift::clear_has_give_to_account_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientToGCWrapAndDeliverGift::clear_give_to_account_id() {
  give_to_account_id_ = 0u;
  clear_has_give_to_account_id();
}
::google::protobuf::uint32 CMsgClientToGCWrapAndDeliverGift::give_to_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCWrapAndDeliverGift.give_to_account_id)
  return give_to_account_id_;
}
void CMsgClientToGCWrapAndDeliverGift::set_give_to_account_id(::google::protobuf::uint32 value) {
  set_has_give_to_account_id();
  give_to_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCWrapAndDeliverGift.give_to_account_id)
}

// optional string gift_message = 3;
bool CMsgClientToGCWrapAndDeliverGift::has_gift_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCWrapAndDeliverGift::set_has_gift_message() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCWrapAndDeliverGift::clear_has_gift_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCWrapAndDeliverGift::clear_gift_message() {
  gift_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gift_message();
}
const ::std::string& CMsgClientToGCWrapAndDeliverGift::gift_message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message)
  return gift_message_.GetNoArena();
}
void CMsgClientToGCWrapAndDeliverGift::set_gift_message(const ::std::string& value) {
  set_has_gift_message();
  gift_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message)
}
#if LANG_CXX11
void CMsgClientToGCWrapAndDeliverGift::set_gift_message(::std::string&& value) {
  set_has_gift_message();
  gift_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message)
}
#endif
void CMsgClientToGCWrapAndDeliverGift::set_gift_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gift_message();
  gift_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message)
}
void CMsgClientToGCWrapAndDeliverGift::set_gift_message(const char* value, size_t size) {
  set_has_gift_message();
  gift_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message)
}
::std::string* CMsgClientToGCWrapAndDeliverGift::mutable_gift_message() {
  set_has_gift_message();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message)
  return gift_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientToGCWrapAndDeliverGift::release_gift_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message)
  clear_has_gift_message();
  return gift_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientToGCWrapAndDeliverGift::set_allocated_gift_message(::std::string* gift_message) {
  if (gift_message != NULL) {
    set_has_gift_message();
  } else {
    clear_has_gift_message();
  }
  gift_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gift_message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCWrapAndDeliverGift.gift_message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCWrapAndDeliverGiftResponse::kResponseFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingChargeUsesFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingChargeMaxFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingUsesFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingMaxFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kGiftingWindowHoursFieldNumber;
const int CMsgClientToGCWrapAndDeliverGiftResponse::kTradeRestrictionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCWrapAndDeliverGiftResponse::CMsgClientToGCWrapAndDeliverGiftResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
}
CMsgClientToGCWrapAndDeliverGiftResponse::CMsgClientToGCWrapAndDeliverGiftResponse(const CMsgClientToGCWrapAndDeliverGiftResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&response_, &from.response_,
    reinterpret_cast<char*>(&trade_restriction_) -
    reinterpret_cast<char*>(&response_) + sizeof(trade_restriction_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&response_, 0, reinterpret_cast<char*>(&trade_restriction_) -
    reinterpret_cast<char*>(&response_) + sizeof(trade_restriction_));
}

CMsgClientToGCWrapAndDeliverGiftResponse::~CMsgClientToGCWrapAndDeliverGiftResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  SharedDtor();
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SharedDtor() {
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCWrapAndDeliverGiftResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCWrapAndDeliverGiftResponse& CMsgClientToGCWrapAndDeliverGiftResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCWrapAndDeliverGiftResponse* CMsgClientToGCWrapAndDeliverGiftResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCWrapAndDeliverGiftResponse* n = new CMsgClientToGCWrapAndDeliverGiftResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCWrapAndDeliverGiftResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&response_, 0, reinterpret_cast<char*>(&trade_restriction_) -
      reinterpret_cast<char*>(&response_) + sizeof(trade_restriction_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCWrapAndDeliverGiftResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCMsgResponse_IsValid(value)) {
            set_response(static_cast< ::proto::dota::EGCMsgResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gifting_charge_uses = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_gifting_charge_uses();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifting_charge_uses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gifting_charge_max = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_gifting_charge_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gifting_charge_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gifting_uses = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_gifting_uses();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifting_uses_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gifting_max = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_gifting_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gifting_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gifting_window_hours = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_gifting_window_hours();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gifting_window_hours_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCMsgInitiateTradeResponse_IsValid(value)) {
            set_trade_restriction(static_cast< ::proto::dota::EGCMsgInitiateTradeResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  return false;
#undef DO_
}

void CMsgClientToGCWrapAndDeliverGiftResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint32 gifting_charge_uses = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->gifting_charge_uses(), output);
  }

  // optional int32 gifting_charge_max = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->gifting_charge_max(), output);
  }

  // optional uint32 gifting_uses = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->gifting_uses(), output);
  }

  // optional int32 gifting_max = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->gifting_max(), output);
  }

  // optional uint32 gifting_window_hours = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->gifting_window_hours(), output);
  }

  // optional .proto.dota.EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->trade_restriction(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
}

::google::protobuf::uint8* CMsgClientToGCWrapAndDeliverGiftResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint32 gifting_charge_uses = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->gifting_charge_uses(), target);
  }

  // optional int32 gifting_charge_max = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->gifting_charge_max(), target);
  }

  // optional uint32 gifting_uses = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->gifting_uses(), target);
  }

  // optional int32 gifting_max = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->gifting_max(), target);
  }

  // optional uint32 gifting_window_hours = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->gifting_window_hours(), target);
  }

  // optional .proto.dota.EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->trade_restriction(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  return target;
}

size_t CMsgClientToGCWrapAndDeliverGiftResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional .proto.dota.EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

    // optional uint32 gifting_charge_uses = 2;
    if (has_gifting_charge_uses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifting_charge_uses());
    }

    // optional int32 gifting_charge_max = 3;
    if (has_gifting_charge_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gifting_charge_max());
    }

    // optional uint32 gifting_uses = 4;
    if (has_gifting_uses()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifting_uses());
    }

    // optional int32 gifting_max = 5;
    if (has_gifting_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gifting_max());
    }

    // optional uint32 gifting_window_hours = 6;
    if (has_gifting_window_hours()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gifting_window_hours());
    }

    // optional .proto.dota.EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
    if (has_trade_restriction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->trade_restriction());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCWrapAndDeliverGiftResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCWrapAndDeliverGiftResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCWrapAndDeliverGiftResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCWrapAndDeliverGiftResponse::MergeFrom(const CMsgClientToGCWrapAndDeliverGiftResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      response_ = from.response_;
    }
    if (cached_has_bits & 0x00000002u) {
      gifting_charge_uses_ = from.gifting_charge_uses_;
    }
    if (cached_has_bits & 0x00000004u) {
      gifting_charge_max_ = from.gifting_charge_max_;
    }
    if (cached_has_bits & 0x00000008u) {
      gifting_uses_ = from.gifting_uses_;
    }
    if (cached_has_bits & 0x00000010u) {
      gifting_max_ = from.gifting_max_;
    }
    if (cached_has_bits & 0x00000020u) {
      gifting_window_hours_ = from.gifting_window_hours_;
    }
    if (cached_has_bits & 0x00000040u) {
      trade_restriction_ = from.trade_restriction_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCWrapAndDeliverGiftResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCWrapAndDeliverGiftResponse::CopyFrom(const CMsgClientToGCWrapAndDeliverGiftResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCWrapAndDeliverGiftResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCWrapAndDeliverGiftResponse::Swap(CMsgClientToGCWrapAndDeliverGiftResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCWrapAndDeliverGiftResponse::InternalSwap(CMsgClientToGCWrapAndDeliverGiftResponse* other) {
  std::swap(response_, other->response_);
  std::swap(gifting_charge_uses_, other->gifting_charge_uses_);
  std::swap(gifting_charge_max_, other->gifting_charge_max_);
  std::swap(gifting_uses_, other->gifting_uses_);
  std::swap(gifting_max_, other->gifting_max_);
  std::swap(gifting_window_hours_, other->gifting_window_hours_);
  std::swap(trade_restriction_, other->trade_restriction_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCWrapAndDeliverGiftResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCWrapAndDeliverGiftResponse

// optional .proto.dota.EGCMsgResponse response = 1 [default = k_EGCMsgResponseOK];
bool CMsgClientToGCWrapAndDeliverGiftResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
::proto::dota::EGCMsgResponse CMsgClientToGCWrapAndDeliverGiftResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.response)
  return static_cast< ::proto::dota::EGCMsgResponse >(response_);
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_response(::proto::dota::EGCMsgResponse value) {
  assert(::proto::dota::EGCMsgResponse_IsValid(value));
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.response)
}

// optional uint32 gifting_charge_uses = 2;
bool CMsgClientToGCWrapAndDeliverGiftResponse::has_gifting_charge_uses() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_has_gifting_charge_uses() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_has_gifting_charge_uses() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_gifting_charge_uses() {
  gifting_charge_uses_ = 0u;
  clear_has_gifting_charge_uses();
}
::google::protobuf::uint32 CMsgClientToGCWrapAndDeliverGiftResponse::gifting_charge_uses() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.gifting_charge_uses)
  return gifting_charge_uses_;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_gifting_charge_uses(::google::protobuf::uint32 value) {
  set_has_gifting_charge_uses();
  gifting_charge_uses_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.gifting_charge_uses)
}

// optional int32 gifting_charge_max = 3;
bool CMsgClientToGCWrapAndDeliverGiftResponse::has_gifting_charge_max() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_has_gifting_charge_max() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_has_gifting_charge_max() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_gifting_charge_max() {
  gifting_charge_max_ = 0;
  clear_has_gifting_charge_max();
}
::google::protobuf::int32 CMsgClientToGCWrapAndDeliverGiftResponse::gifting_charge_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.gifting_charge_max)
  return gifting_charge_max_;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_gifting_charge_max(::google::protobuf::int32 value) {
  set_has_gifting_charge_max();
  gifting_charge_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.gifting_charge_max)
}

// optional uint32 gifting_uses = 4;
bool CMsgClientToGCWrapAndDeliverGiftResponse::has_gifting_uses() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_has_gifting_uses() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_has_gifting_uses() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_gifting_uses() {
  gifting_uses_ = 0u;
  clear_has_gifting_uses();
}
::google::protobuf::uint32 CMsgClientToGCWrapAndDeliverGiftResponse::gifting_uses() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.gifting_uses)
  return gifting_uses_;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_gifting_uses(::google::protobuf::uint32 value) {
  set_has_gifting_uses();
  gifting_uses_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.gifting_uses)
}

// optional int32 gifting_max = 5;
bool CMsgClientToGCWrapAndDeliverGiftResponse::has_gifting_max() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_has_gifting_max() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_has_gifting_max() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_gifting_max() {
  gifting_max_ = 0;
  clear_has_gifting_max();
}
::google::protobuf::int32 CMsgClientToGCWrapAndDeliverGiftResponse::gifting_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.gifting_max)
  return gifting_max_;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_gifting_max(::google::protobuf::int32 value) {
  set_has_gifting_max();
  gifting_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.gifting_max)
}

// optional uint32 gifting_window_hours = 6;
bool CMsgClientToGCWrapAndDeliverGiftResponse::has_gifting_window_hours() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_has_gifting_window_hours() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_has_gifting_window_hours() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_gifting_window_hours() {
  gifting_window_hours_ = 0u;
  clear_has_gifting_window_hours();
}
::google::protobuf::uint32 CMsgClientToGCWrapAndDeliverGiftResponse::gifting_window_hours() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.gifting_window_hours)
  return gifting_window_hours_;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_gifting_window_hours(::google::protobuf::uint32 value) {
  set_has_gifting_window_hours();
  gifting_window_hours_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.gifting_window_hours)
}

// optional .proto.dota.EGCMsgInitiateTradeResponse trade_restriction = 7 [default = k_EGCMsgInitiateTradeResponse_Accepted];
bool CMsgClientToGCWrapAndDeliverGiftResponse::has_trade_restriction() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_has_trade_restriction() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_has_trade_restriction() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientToGCWrapAndDeliverGiftResponse::clear_trade_restriction() {
  trade_restriction_ = 0;
  clear_has_trade_restriction();
}
::proto::dota::EGCMsgInitiateTradeResponse CMsgClientToGCWrapAndDeliverGiftResponse::trade_restriction() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.trade_restriction)
  return static_cast< ::proto::dota::EGCMsgInitiateTradeResponse >(trade_restriction_);
}
void CMsgClientToGCWrapAndDeliverGiftResponse::set_trade_restriction(::proto::dota::EGCMsgInitiateTradeResponse value) {
  assert(::proto::dota::EGCMsgInitiateTradeResponse_IsValid(value));
  set_has_trade_restriction();
  trade_restriction_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCWrapAndDeliverGiftResponse.trade_restriction)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnwrapGift::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnwrapGift::CMsgClientToGCUnwrapGift()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnwrapGift)
}
CMsgClientToGCUnwrapGift::CMsgClientToGCUnwrapGift(const CMsgClientToGCUnwrapGift& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_id_ = from.item_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnwrapGift)
}

void CMsgClientToGCUnwrapGift::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientToGCUnwrapGift::~CMsgClientToGCUnwrapGift() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnwrapGift)
  SharedDtor();
}

void CMsgClientToGCUnwrapGift::SharedDtor() {
}

void CMsgClientToGCUnwrapGift::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnwrapGift::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCUnwrapGift& CMsgClientToGCUnwrapGift::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCUnwrapGift* CMsgClientToGCUnwrapGift::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCUnwrapGift* n = new CMsgClientToGCUnwrapGift;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCUnwrapGift::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnwrapGift)
  item_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCUnwrapGift::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnwrapGift)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnwrapGift)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnwrapGift)
  return false;
#undef DO_
}

void CMsgClientToGCUnwrapGift::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnwrapGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnwrapGift)
}

::google::protobuf::uint8* CMsgClientToGCUnwrapGift::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnwrapGift)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnwrapGift)
  return target;
}

size_t CMsgClientToGCUnwrapGift::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnwrapGift)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnwrapGift::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnwrapGift)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnwrapGift* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCUnwrapGift>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnwrapGift)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnwrapGift)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnwrapGift::MergeFrom(const CMsgClientToGCUnwrapGift& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnwrapGift)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item_id()) {
    set_item_id(from.item_id());
  }
}

void CMsgClientToGCUnwrapGift::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnwrapGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnwrapGift::CopyFrom(const CMsgClientToGCUnwrapGift& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnwrapGift)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnwrapGift::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnwrapGift::Swap(CMsgClientToGCUnwrapGift* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnwrapGift::InternalSwap(CMsgClientToGCUnwrapGift* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCUnwrapGift::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCUnwrapGift

// optional uint64 item_id = 1;
bool CMsgClientToGCUnwrapGift::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCUnwrapGift::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCUnwrapGift::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCUnwrapGift::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgClientToGCUnwrapGift::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnwrapGift.item_id)
  return item_id_;
}
void CMsgClientToGCUnwrapGift::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnwrapGift.item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCGetGiftPermissions::CMsgClientToGCGetGiftPermissions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCGetGiftPermissions)
}
CMsgClientToGCGetGiftPermissions::CMsgClientToGCGetGiftPermissions(const CMsgClientToGCGetGiftPermissions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCGetGiftPermissions)
}

void CMsgClientToGCGetGiftPermissions::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientToGCGetGiftPermissions::~CMsgClientToGCGetGiftPermissions() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCGetGiftPermissions)
  SharedDtor();
}

void CMsgClientToGCGetGiftPermissions::SharedDtor() {
}

void CMsgClientToGCGetGiftPermissions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCGetGiftPermissions::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCGetGiftPermissions& CMsgClientToGCGetGiftPermissions::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCGetGiftPermissions* CMsgClientToGCGetGiftPermissions::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCGetGiftPermissions* n = new CMsgClientToGCGetGiftPermissions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCGetGiftPermissions::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCGetGiftPermissions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCGetGiftPermissions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCGetGiftPermissions)
  return false;
#undef DO_
}

void CMsgClientToGCGetGiftPermissions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCGetGiftPermissions)
}

::google::protobuf::uint8* CMsgClientToGCGetGiftPermissions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCGetGiftPermissions)
  return target;
}

size_t CMsgClientToGCGetGiftPermissions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCGetGiftPermissions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGetGiftPermissions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCGetGiftPermissions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCGetGiftPermissions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCGetGiftPermissions)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetGiftPermissions::MergeFrom(const CMsgClientToGCGetGiftPermissions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientToGCGetGiftPermissions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetGiftPermissions::CopyFrom(const CMsgClientToGCGetGiftPermissions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCGetGiftPermissions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetGiftPermissions::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetGiftPermissions::Swap(CMsgClientToGCGetGiftPermissions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCGetGiftPermissions::InternalSwap(CMsgClientToGCGetGiftPermissions* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCGetGiftPermissions::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCGetGiftPermissions

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::kAccountIdFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::kPermissionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
}
CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission(const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    reinterpret_cast<char*>(&permission_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(permission_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, reinterpret_cast<char*>(&permission_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(permission_));
}

CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::~CMsgClientToGCGetGiftPermissionsResponse_FriendPermission() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  SharedDtor();
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SharedDtor() {
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* n = new CMsgClientToGCGetGiftPermissionsResponse_FriendPermission;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&account_id_, 0, reinterpret_cast<char*>(&permission_) -
      reinterpret_cast<char*>(&account_id_) + sizeof(permission_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCMsgInitiateTradeResponse_IsValid(value)) {
            set_permission(static_cast< ::proto::dota::EGCMsgInitiateTradeResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  return false;
#undef DO_
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional .proto.dota.EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->permission(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
}

::google::protobuf::uint8* CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional .proto.dota.EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->permission(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  return target;
}

size_t CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional .proto.dota.EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
    if (has_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->permission());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::MergeFrom(const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      permission_ = from.permission_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::CopyFrom(const CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::Swap(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::InternalSwap(CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(permission_, other->permission_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCGetGiftPermissionsResponse_FriendPermission

// optional uint32 account_id = 1;
bool CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission.account_id)
  return account_id_;
}
void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission.account_id)
}

// optional .proto.dota.EGCMsgInitiateTradeResponse permission = 2 [default = k_EGCMsgInitiateTradeResponse_Accepted];
bool CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::has_permission() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::set_has_permission() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::clear_has_permission() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::clear_permission() {
  permission_ = 0;
  clear_has_permission();
}
::proto::dota::EGCMsgInitiateTradeResponse CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::permission() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission.permission)
  return static_cast< ::proto::dota::EGCMsgInitiateTradeResponse >(permission_);
}
void CMsgClientToGCGetGiftPermissionsResponse_FriendPermission::set_permission(::proto::dota::EGCMsgInitiateTradeResponse value) {
  assert(::proto::dota::EGCMsgInitiateTradeResponse_IsValid(value));
  set_has_permission();
  permission_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission.permission)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCGetGiftPermissionsResponse::kIsUnlimitedFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kHasTwoFactorFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kSenderPermissionFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kFriendshipAgeRequirementFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kFriendshipAgeRequirementTwoFactorFieldNumber;
const int CMsgClientToGCGetGiftPermissionsResponse::kFriendPermissionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCGetGiftPermissionsResponse::CMsgClientToGCGetGiftPermissionsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
}
CMsgClientToGCGetGiftPermissionsResponse::CMsgClientToGCGetGiftPermissionsResponse(const CMsgClientToGCGetGiftPermissionsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      friend_permissions_(from.friend_permissions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_unlimited_, &from.is_unlimited_,
    reinterpret_cast<char*>(&friendship_age_requirement_two_factor_) -
    reinterpret_cast<char*>(&is_unlimited_) + sizeof(friendship_age_requirement_two_factor_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
}

void CMsgClientToGCGetGiftPermissionsResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&is_unlimited_, 0, reinterpret_cast<char*>(&friendship_age_requirement_two_factor_) -
    reinterpret_cast<char*>(&is_unlimited_) + sizeof(friendship_age_requirement_two_factor_));
}

CMsgClientToGCGetGiftPermissionsResponse::~CMsgClientToGCGetGiftPermissionsResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  SharedDtor();
}

void CMsgClientToGCGetGiftPermissionsResponse::SharedDtor() {
}

void CMsgClientToGCGetGiftPermissionsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCGetGiftPermissionsResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCGetGiftPermissionsResponse& CMsgClientToGCGetGiftPermissionsResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCGetGiftPermissionsResponse* CMsgClientToGCGetGiftPermissionsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCGetGiftPermissionsResponse* n = new CMsgClientToGCGetGiftPermissionsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCGetGiftPermissionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  friend_permissions_.Clear();
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&is_unlimited_, 0, reinterpret_cast<char*>(&friendship_age_requirement_two_factor_) -
      reinterpret_cast<char*>(&is_unlimited_) + sizeof(friendship_age_requirement_two_factor_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCGetGiftPermissionsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_unlimited = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_is_unlimited();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_unlimited_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool has_two_factor = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_has_two_factor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_two_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCMsgInitiateTradeResponse_IsValid(value)) {
            set_sender_permission(static_cast< ::proto::dota::EGCMsgInitiateTradeResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 friendship_age_requirement = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_friendship_age_requirement();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendship_age_requirement_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 friendship_age_requirement_two_factor = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_friendship_age_requirement_two_factor();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendship_age_requirement_two_factor_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friend_permissions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  return false;
#undef DO_
}

void CMsgClientToGCGetGiftPermissionsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_unlimited = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_unlimited(), output);
  }

  // optional bool has_two_factor = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->has_two_factor(), output);
  }

  // optional .proto.dota.EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->sender_permission(), output);
  }

  // optional uint32 friendship_age_requirement = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->friendship_age_requirement(), output);
  }

  // optional uint32 friendship_age_requirement_two_factor = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->friendship_age_requirement_two_factor(), output);
  }

  // repeated .proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
  for (unsigned int i = 0, n = this->friend_permissions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->friend_permissions(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
}

::google::protobuf::uint8* CMsgClientToGCGetGiftPermissionsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool is_unlimited = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_unlimited(), target);
  }

  // optional bool has_two_factor = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->has_two_factor(), target);
  }

  // optional .proto.dota.EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->sender_permission(), target);
  }

  // optional uint32 friendship_age_requirement = 7;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->friendship_age_requirement(), target);
  }

  // optional uint32 friendship_age_requirement_two_factor = 8;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->friendship_age_requirement_two_factor(), target);
  }

  // repeated .proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
  for (unsigned int i = 0, n = this->friend_permissions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->friend_permissions(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  return target;
}

size_t CMsgClientToGCGetGiftPermissionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
  {
    unsigned int count = this->friend_permissions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friend_permissions(i));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional bool is_unlimited = 1;
    if (has_is_unlimited()) {
      total_size += 1 + 1;
    }

    // optional bool has_two_factor = 3;
    if (has_has_two_factor()) {
      total_size += 1 + 1;
    }

    // optional .proto.dota.EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
    if (has_sender_permission()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sender_permission());
    }

    // optional uint32 friendship_age_requirement = 7;
    if (has_friendship_age_requirement()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friendship_age_requirement());
    }

    // optional uint32 friendship_age_requirement_two_factor = 8;
    if (has_friendship_age_requirement_two_factor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->friendship_age_requirement_two_factor());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCGetGiftPermissionsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCGetGiftPermissionsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCGetGiftPermissionsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCGetGiftPermissionsResponse::MergeFrom(const CMsgClientToGCGetGiftPermissionsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friend_permissions_.MergeFrom(from.friend_permissions_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      is_unlimited_ = from.is_unlimited_;
    }
    if (cached_has_bits & 0x00000002u) {
      has_two_factor_ = from.has_two_factor_;
    }
    if (cached_has_bits & 0x00000004u) {
      sender_permission_ = from.sender_permission_;
    }
    if (cached_has_bits & 0x00000008u) {
      friendship_age_requirement_ = from.friendship_age_requirement_;
    }
    if (cached_has_bits & 0x00000010u) {
      friendship_age_requirement_two_factor_ = from.friendship_age_requirement_two_factor_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCGetGiftPermissionsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCGetGiftPermissionsResponse::CopyFrom(const CMsgClientToGCGetGiftPermissionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCGetGiftPermissionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCGetGiftPermissionsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCGetGiftPermissionsResponse::Swap(CMsgClientToGCGetGiftPermissionsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCGetGiftPermissionsResponse::InternalSwap(CMsgClientToGCGetGiftPermissionsResponse* other) {
  friend_permissions_.InternalSwap(&other->friend_permissions_);
  std::swap(is_unlimited_, other->is_unlimited_);
  std::swap(has_two_factor_, other->has_two_factor_);
  std::swap(sender_permission_, other->sender_permission_);
  std::swap(friendship_age_requirement_, other->friendship_age_requirement_);
  std::swap(friendship_age_requirement_two_factor_, other->friendship_age_requirement_two_factor_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCGetGiftPermissionsResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCGetGiftPermissionsResponse

// optional bool is_unlimited = 1;
bool CMsgClientToGCGetGiftPermissionsResponse::has_is_unlimited() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCGetGiftPermissionsResponse::set_has_is_unlimited() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCGetGiftPermissionsResponse::clear_has_is_unlimited() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCGetGiftPermissionsResponse::clear_is_unlimited() {
  is_unlimited_ = false;
  clear_has_is_unlimited();
}
bool CMsgClientToGCGetGiftPermissionsResponse::is_unlimited() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.is_unlimited)
  return is_unlimited_;
}
void CMsgClientToGCGetGiftPermissionsResponse::set_is_unlimited(bool value) {
  set_has_is_unlimited();
  is_unlimited_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.is_unlimited)
}

// optional bool has_two_factor = 3;
bool CMsgClientToGCGetGiftPermissionsResponse::has_has_two_factor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCGetGiftPermissionsResponse::set_has_has_two_factor() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCGetGiftPermissionsResponse::clear_has_has_two_factor() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCGetGiftPermissionsResponse::clear_has_two_factor() {
  has_two_factor_ = false;
  clear_has_has_two_factor();
}
bool CMsgClientToGCGetGiftPermissionsResponse::has_two_factor() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.has_two_factor)
  return has_two_factor_;
}
void CMsgClientToGCGetGiftPermissionsResponse::set_has_two_factor(bool value) {
  set_has_has_two_factor();
  has_two_factor_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.has_two_factor)
}

// optional .proto.dota.EGCMsgInitiateTradeResponse sender_permission = 6 [default = k_EGCMsgInitiateTradeResponse_Accepted];
bool CMsgClientToGCGetGiftPermissionsResponse::has_sender_permission() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientToGCGetGiftPermissionsResponse::set_has_sender_permission() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientToGCGetGiftPermissionsResponse::clear_has_sender_permission() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientToGCGetGiftPermissionsResponse::clear_sender_permission() {
  sender_permission_ = 0;
  clear_has_sender_permission();
}
::proto::dota::EGCMsgInitiateTradeResponse CMsgClientToGCGetGiftPermissionsResponse::sender_permission() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.sender_permission)
  return static_cast< ::proto::dota::EGCMsgInitiateTradeResponse >(sender_permission_);
}
void CMsgClientToGCGetGiftPermissionsResponse::set_sender_permission(::proto::dota::EGCMsgInitiateTradeResponse value) {
  assert(::proto::dota::EGCMsgInitiateTradeResponse_IsValid(value));
  set_has_sender_permission();
  sender_permission_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.sender_permission)
}

// optional uint32 friendship_age_requirement = 7;
bool CMsgClientToGCGetGiftPermissionsResponse::has_friendship_age_requirement() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientToGCGetGiftPermissionsResponse::set_has_friendship_age_requirement() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientToGCGetGiftPermissionsResponse::clear_has_friendship_age_requirement() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientToGCGetGiftPermissionsResponse::clear_friendship_age_requirement() {
  friendship_age_requirement_ = 0u;
  clear_has_friendship_age_requirement();
}
::google::protobuf::uint32 CMsgClientToGCGetGiftPermissionsResponse::friendship_age_requirement() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.friendship_age_requirement)
  return friendship_age_requirement_;
}
void CMsgClientToGCGetGiftPermissionsResponse::set_friendship_age_requirement(::google::protobuf::uint32 value) {
  set_has_friendship_age_requirement();
  friendship_age_requirement_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.friendship_age_requirement)
}

// optional uint32 friendship_age_requirement_two_factor = 8;
bool CMsgClientToGCGetGiftPermissionsResponse::has_friendship_age_requirement_two_factor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientToGCGetGiftPermissionsResponse::set_has_friendship_age_requirement_two_factor() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientToGCGetGiftPermissionsResponse::clear_has_friendship_age_requirement_two_factor() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientToGCGetGiftPermissionsResponse::clear_friendship_age_requirement_two_factor() {
  friendship_age_requirement_two_factor_ = 0u;
  clear_has_friendship_age_requirement_two_factor();
}
::google::protobuf::uint32 CMsgClientToGCGetGiftPermissionsResponse::friendship_age_requirement_two_factor() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.friendship_age_requirement_two_factor)
  return friendship_age_requirement_two_factor_;
}
void CMsgClientToGCGetGiftPermissionsResponse::set_friendship_age_requirement_two_factor(::google::protobuf::uint32 value) {
  set_has_friendship_age_requirement_two_factor();
  friendship_age_requirement_two_factor_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.friendship_age_requirement_two_factor)
}

// repeated .proto.dota.CMsgClientToGCGetGiftPermissionsResponse.FriendPermission friend_permissions = 9;
int CMsgClientToGCGetGiftPermissionsResponse::friend_permissions_size() const {
  return friend_permissions_.size();
}
void CMsgClientToGCGetGiftPermissionsResponse::clear_friend_permissions() {
  friend_permissions_.Clear();
}
const ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission& CMsgClientToGCGetGiftPermissionsResponse::friend_permissions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.friend_permissions)
  return friend_permissions_.Get(index);
}
::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* CMsgClientToGCGetGiftPermissionsResponse::mutable_friend_permissions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.friend_permissions)
  return friend_permissions_.Mutable(index);
}
::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission* CMsgClientToGCGetGiftPermissionsResponse::add_friend_permissions() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.friend_permissions)
  return friend_permissions_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission >*
CMsgClientToGCGetGiftPermissionsResponse::mutable_friend_permissions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.friend_permissions)
  return &friend_permissions_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetGiftPermissionsResponse_FriendPermission >&
CMsgClientToGCGetGiftPermissionsResponse::friend_permissions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetGiftPermissionsResponse.friend_permissions)
  return friend_permissions_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnpackBundle::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnpackBundle::CMsgClientToGCUnpackBundle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnpackBundle)
}
CMsgClientToGCUnpackBundle::CMsgClientToGCUnpackBundle(const CMsgClientToGCUnpackBundle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_id_ = from.item_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnpackBundle)
}

void CMsgClientToGCUnpackBundle::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientToGCUnpackBundle::~CMsgClientToGCUnpackBundle() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnpackBundle)
  SharedDtor();
}

void CMsgClientToGCUnpackBundle::SharedDtor() {
}

void CMsgClientToGCUnpackBundle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnpackBundle::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCUnpackBundle& CMsgClientToGCUnpackBundle::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCUnpackBundle* CMsgClientToGCUnpackBundle::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCUnpackBundle* n = new CMsgClientToGCUnpackBundle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCUnpackBundle::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnpackBundle)
  item_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCUnpackBundle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnpackBundle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnpackBundle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnpackBundle)
  return false;
#undef DO_
}

void CMsgClientToGCUnpackBundle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnpackBundle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnpackBundle)
}

::google::protobuf::uint8* CMsgClientToGCUnpackBundle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnpackBundle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnpackBundle)
  return target;
}

size_t CMsgClientToGCUnpackBundle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnpackBundle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnpackBundle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnpackBundle)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnpackBundle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCUnpackBundle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnpackBundle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnpackBundle)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnpackBundle::MergeFrom(const CMsgClientToGCUnpackBundle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnpackBundle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item_id()) {
    set_item_id(from.item_id());
  }
}

void CMsgClientToGCUnpackBundle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnpackBundle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnpackBundle::CopyFrom(const CMsgClientToGCUnpackBundle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnpackBundle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnpackBundle::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnpackBundle::Swap(CMsgClientToGCUnpackBundle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnpackBundle::InternalSwap(CMsgClientToGCUnpackBundle* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCUnpackBundle::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCUnpackBundle

// optional uint64 item_id = 1;
bool CMsgClientToGCUnpackBundle::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCUnpackBundle::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCUnpackBundle::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCUnpackBundle::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgClientToGCUnpackBundle::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnpackBundle.item_id)
  return item_id_;
}
void CMsgClientToGCUnpackBundle::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnpackBundle.item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnpackBundleResponse::kUnpackedItemIdsFieldNumber;
const int CMsgClientToGCUnpackBundleResponse::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnpackBundleResponse::CMsgClientToGCUnpackBundleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnpackBundleResponse)
}
CMsgClientToGCUnpackBundleResponse::CMsgClientToGCUnpackBundleResponse(const CMsgClientToGCUnpackBundleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      unpacked_item_ids_(from.unpacked_item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_ = from.response_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnpackBundleResponse)
}

void CMsgClientToGCUnpackBundleResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
}

CMsgClientToGCUnpackBundleResponse::~CMsgClientToGCUnpackBundleResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnpackBundleResponse)
  SharedDtor();
}

void CMsgClientToGCUnpackBundleResponse::SharedDtor() {
}

void CMsgClientToGCUnpackBundleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnpackBundleResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCUnpackBundleResponse& CMsgClientToGCUnpackBundleResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCUnpackBundleResponse* CMsgClientToGCUnpackBundleResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCUnpackBundleResponse* n = new CMsgClientToGCUnpackBundleResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCUnpackBundleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  unpacked_item_ids_.Clear();
  response_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCUnpackBundleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 unpacked_item_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_unpacked_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_unpacked_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCUnpackBundleResponse_EUnpackBundle_IsValid(value)) {
            set_response(static_cast< ::proto::dota::CMsgClientToGCUnpackBundleResponse_EUnpackBundle >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnpackBundleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnpackBundleResponse)
  return false;
#undef DO_
}

void CMsgClientToGCUnpackBundleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 unpacked_item_ids = 1;
  for (int i = 0, n = this->unpacked_item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->unpacked_item_ids(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnpackBundleResponse)
}

::google::protobuf::uint8* CMsgClientToGCUnpackBundleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 unpacked_item_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->unpacked_item_ids_, target);

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnpackBundleResponse)
  return target;
}

size_t CMsgClientToGCUnpackBundleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint64 unpacked_item_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->unpacked_item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->unpacked_item_ids_size());
    total_size += data_size;
  }

  // optional .proto.dota.CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
  if (has_response()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnpackBundleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnpackBundleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCUnpackBundleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnpackBundleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnpackBundleResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnpackBundleResponse::MergeFrom(const CMsgClientToGCUnpackBundleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  unpacked_item_ids_.MergeFrom(from.unpacked_item_ids_);
  if (from.has_response()) {
    set_response(from.response());
  }
}

void CMsgClientToGCUnpackBundleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnpackBundleResponse::CopyFrom(const CMsgClientToGCUnpackBundleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnpackBundleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnpackBundleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnpackBundleResponse::Swap(CMsgClientToGCUnpackBundleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnpackBundleResponse::InternalSwap(CMsgClientToGCUnpackBundleResponse* other) {
  unpacked_item_ids_.InternalSwap(&other->unpacked_item_ids_);
  std::swap(response_, other->response_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCUnpackBundleResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCUnpackBundleResponse

// repeated uint64 unpacked_item_ids = 1;
int CMsgClientToGCUnpackBundleResponse::unpacked_item_ids_size() const {
  return unpacked_item_ids_.size();
}
void CMsgClientToGCUnpackBundleResponse::clear_unpacked_item_ids() {
  unpacked_item_ids_.Clear();
}
::google::protobuf::uint64 CMsgClientToGCUnpackBundleResponse::unpacked_item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnpackBundleResponse.unpacked_item_ids)
  return unpacked_item_ids_.Get(index);
}
void CMsgClientToGCUnpackBundleResponse::set_unpacked_item_ids(int index, ::google::protobuf::uint64 value) {
  unpacked_item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnpackBundleResponse.unpacked_item_ids)
}
void CMsgClientToGCUnpackBundleResponse::add_unpacked_item_ids(::google::protobuf::uint64 value) {
  unpacked_item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCUnpackBundleResponse.unpacked_item_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCUnpackBundleResponse::unpacked_item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCUnpackBundleResponse.unpacked_item_ids)
  return unpacked_item_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCUnpackBundleResponse::mutable_unpacked_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCUnpackBundleResponse.unpacked_item_ids)
  return &unpacked_item_ids_;
}

// optional .proto.dota.CMsgClientToGCUnpackBundleResponse.EUnpackBundle response = 2 [default = k_UnpackBundle_Succeeded];
bool CMsgClientToGCUnpackBundleResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCUnpackBundleResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCUnpackBundleResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCUnpackBundleResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
::proto::dota::CMsgClientToGCUnpackBundleResponse_EUnpackBundle CMsgClientToGCUnpackBundleResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnpackBundleResponse.response)
  return static_cast< ::proto::dota::CMsgClientToGCUnpackBundleResponse_EUnpackBundle >(response_);
}
void CMsgClientToGCUnpackBundleResponse::set_response(::proto::dota::CMsgClientToGCUnpackBundleResponse_EUnpackBundle value) {
  assert(::proto::dota::CMsgClientToGCUnpackBundleResponse_EUnpackBundle_IsValid(value));
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnpackBundleResponse.response)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToClientStoreTransactionCompleted::kTxnIdFieldNumber;
const int CMsgGCToClientStoreTransactionCompleted::kItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToClientStoreTransactionCompleted::CMsgGCToClientStoreTransactionCompleted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToClientStoreTransactionCompleted)
}
CMsgGCToClientStoreTransactionCompleted::CMsgGCToClientStoreTransactionCompleted(const CMsgGCToClientStoreTransactionCompleted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txn_id_ = from.txn_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToClientStoreTransactionCompleted)
}

void CMsgGCToClientStoreTransactionCompleted::SharedCtor() {
  _cached_size_ = 0;
  txn_id_ = GOOGLE_ULONGLONG(0);
}

CMsgGCToClientStoreTransactionCompleted::~CMsgGCToClientStoreTransactionCompleted() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  SharedDtor();
}

void CMsgGCToClientStoreTransactionCompleted::SharedDtor() {
}

void CMsgGCToClientStoreTransactionCompleted::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToClientStoreTransactionCompleted::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToClientStoreTransactionCompleted& CMsgGCToClientStoreTransactionCompleted::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToClientStoreTransactionCompleted* CMsgGCToClientStoreTransactionCompleted::New(::google::protobuf::Arena* arena) const {
  CMsgGCToClientStoreTransactionCompleted* n = new CMsgGCToClientStoreTransactionCompleted;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToClientStoreTransactionCompleted::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  item_ids_.Clear();
  txn_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToClientStoreTransactionCompleted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 txn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_txn_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 item_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 16u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  return false;
#undef DO_
}

void CMsgGCToClientStoreTransactionCompleted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_id(), output);
  }

  // repeated uint64 item_ids = 2;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      2, this->item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToClientStoreTransactionCompleted)
}

::google::protobuf::uint8* CMsgGCToClientStoreTransactionCompleted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_id(), target);
  }

  // repeated uint64 item_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(2, this->item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  return target;
}

size_t CMsgGCToClientStoreTransactionCompleted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint64 item_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  // optional uint64 txn_id = 1;
  if (has_txn_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->txn_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToClientStoreTransactionCompleted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToClientStoreTransactionCompleted* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToClientStoreTransactionCompleted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToClientStoreTransactionCompleted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToClientStoreTransactionCompleted)
    MergeFrom(*source);
  }
}

void CMsgGCToClientStoreTransactionCompleted::MergeFrom(const CMsgGCToClientStoreTransactionCompleted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
  if (from.has_txn_id()) {
    set_txn_id(from.txn_id());
  }
}

void CMsgGCToClientStoreTransactionCompleted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToClientStoreTransactionCompleted::CopyFrom(const CMsgGCToClientStoreTransactionCompleted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToClientStoreTransactionCompleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToClientStoreTransactionCompleted::IsInitialized() const {
  return true;
}

void CMsgGCToClientStoreTransactionCompleted::Swap(CMsgGCToClientStoreTransactionCompleted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToClientStoreTransactionCompleted::InternalSwap(CMsgGCToClientStoreTransactionCompleted* other) {
  item_ids_.InternalSwap(&other->item_ids_);
  std::swap(txn_id_, other->txn_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToClientStoreTransactionCompleted::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToClientStoreTransactionCompleted

// optional uint64 txn_id = 1;
bool CMsgGCToClientStoreTransactionCompleted::has_txn_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToClientStoreTransactionCompleted::set_has_txn_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToClientStoreTransactionCompleted::clear_has_txn_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToClientStoreTransactionCompleted::clear_txn_id() {
  txn_id_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_id();
}
::google::protobuf::uint64 CMsgGCToClientStoreTransactionCompleted::txn_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientStoreTransactionCompleted.txn_id)
  return txn_id_;
}
void CMsgGCToClientStoreTransactionCompleted::set_txn_id(::google::protobuf::uint64 value) {
  set_has_txn_id();
  txn_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientStoreTransactionCompleted.txn_id)
}

// repeated uint64 item_ids = 2;
int CMsgGCToClientStoreTransactionCompleted::item_ids_size() const {
  return item_ids_.size();
}
void CMsgGCToClientStoreTransactionCompleted::clear_item_ids() {
  item_ids_.Clear();
}
::google::protobuf::uint64 CMsgGCToClientStoreTransactionCompleted::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientStoreTransactionCompleted.item_ids)
  return item_ids_.Get(index);
}
void CMsgGCToClientStoreTransactionCompleted::set_item_ids(int index, ::google::protobuf::uint64 value) {
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientStoreTransactionCompleted.item_ids)
}
void CMsgGCToClientStoreTransactionCompleted::add_item_ids(::google::protobuf::uint64 value) {
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientStoreTransactionCompleted.item_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgGCToClientStoreTransactionCompleted::item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientStoreTransactionCompleted.item_ids)
  return item_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgGCToClientStoreTransactionCompleted::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientStoreTransactionCompleted.item_ids)
  return &item_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCEquipItems::kEquipsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCEquipItems::CMsgClientToGCEquipItems()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCEquipItems)
}
CMsgClientToGCEquipItems::CMsgClientToGCEquipItems(const CMsgClientToGCEquipItems& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      equips_(from.equips_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCEquipItems)
}

void CMsgClientToGCEquipItems::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientToGCEquipItems::~CMsgClientToGCEquipItems() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCEquipItems)
  SharedDtor();
}

void CMsgClientToGCEquipItems::SharedDtor() {
}

void CMsgClientToGCEquipItems::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCEquipItems::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCEquipItems& CMsgClientToGCEquipItems::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCEquipItems* CMsgClientToGCEquipItems::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCEquipItems* n = new CMsgClientToGCEquipItems;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCEquipItems::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCEquipItems)
  equips_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCEquipItems::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCEquipItems)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CMsgAdjustItemEquippedState equips = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equips()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCEquipItems)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCEquipItems)
  return false;
#undef DO_
}

void CMsgClientToGCEquipItems::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCEquipItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgAdjustItemEquippedState equips = 1;
  for (unsigned int i = 0, n = this->equips_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->equips(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCEquipItems)
}

::google::protobuf::uint8* CMsgClientToGCEquipItems::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCEquipItems)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgAdjustItemEquippedState equips = 1;
  for (unsigned int i = 0, n = this->equips_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->equips(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCEquipItems)
  return target;
}

size_t CMsgClientToGCEquipItems::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCEquipItems)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CMsgAdjustItemEquippedState equips = 1;
  {
    unsigned int count = this->equips_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->equips(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCEquipItems::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCEquipItems)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCEquipItems* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCEquipItems>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCEquipItems)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCEquipItems)
    MergeFrom(*source);
  }
}

void CMsgClientToGCEquipItems::MergeFrom(const CMsgClientToGCEquipItems& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCEquipItems)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  equips_.MergeFrom(from.equips_);
}

void CMsgClientToGCEquipItems::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCEquipItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCEquipItems::CopyFrom(const CMsgClientToGCEquipItems& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCEquipItems)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCEquipItems::IsInitialized() const {
  return true;
}

void CMsgClientToGCEquipItems::Swap(CMsgClientToGCEquipItems* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCEquipItems::InternalSwap(CMsgClientToGCEquipItems* other) {
  equips_.InternalSwap(&other->equips_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCEquipItems::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCEquipItems

// repeated .proto.dota.CMsgAdjustItemEquippedState equips = 1;
int CMsgClientToGCEquipItems::equips_size() const {
  return equips_.size();
}
void CMsgClientToGCEquipItems::clear_equips() {
  equips_.Clear();
}
const ::proto::dota::CMsgAdjustItemEquippedState& CMsgClientToGCEquipItems::equips(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCEquipItems.equips)
  return equips_.Get(index);
}
::proto::dota::CMsgAdjustItemEquippedState* CMsgClientToGCEquipItems::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCEquipItems.equips)
  return equips_.Mutable(index);
}
::proto::dota::CMsgAdjustItemEquippedState* CMsgClientToGCEquipItems::add_equips() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCEquipItems.equips)
  return equips_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAdjustItemEquippedState >*
CMsgClientToGCEquipItems::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCEquipItems.equips)
  return &equips_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgAdjustItemEquippedState >&
CMsgClientToGCEquipItems::equips() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCEquipItems.equips)
  return equips_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCEquipItemsResponse::kSoCacheVersionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCEquipItemsResponse::CMsgClientToGCEquipItemsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCEquipItemsResponse)
}
CMsgClientToGCEquipItemsResponse::CMsgClientToGCEquipItemsResponse(const CMsgClientToGCEquipItemsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  so_cache_version_id_ = from.so_cache_version_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCEquipItemsResponse)
}

void CMsgClientToGCEquipItemsResponse::SharedCtor() {
  _cached_size_ = 0;
  so_cache_version_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientToGCEquipItemsResponse::~CMsgClientToGCEquipItemsResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCEquipItemsResponse)
  SharedDtor();
}

void CMsgClientToGCEquipItemsResponse::SharedDtor() {
}

void CMsgClientToGCEquipItemsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCEquipItemsResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCEquipItemsResponse& CMsgClientToGCEquipItemsResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCEquipItemsResponse* CMsgClientToGCEquipItemsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCEquipItemsResponse* n = new CMsgClientToGCEquipItemsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCEquipItemsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  so_cache_version_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCEquipItemsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 so_cache_version_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_so_cache_version_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &so_cache_version_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCEquipItemsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCEquipItemsResponse)
  return false;
#undef DO_
}

void CMsgClientToGCEquipItemsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 so_cache_version_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->so_cache_version_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCEquipItemsResponse)
}

::google::protobuf::uint8* CMsgClientToGCEquipItemsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 so_cache_version_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->so_cache_version_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCEquipItemsResponse)
  return target;
}

size_t CMsgClientToGCEquipItemsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 so_cache_version_id = 1;
  if (has_so_cache_version_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCEquipItemsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCEquipItemsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCEquipItemsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCEquipItemsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCEquipItemsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCEquipItemsResponse::MergeFrom(const CMsgClientToGCEquipItemsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_so_cache_version_id()) {
    set_so_cache_version_id(from.so_cache_version_id());
  }
}

void CMsgClientToGCEquipItemsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCEquipItemsResponse::CopyFrom(const CMsgClientToGCEquipItemsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCEquipItemsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCEquipItemsResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCEquipItemsResponse::Swap(CMsgClientToGCEquipItemsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCEquipItemsResponse::InternalSwap(CMsgClientToGCEquipItemsResponse* other) {
  std::swap(so_cache_version_id_, other->so_cache_version_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCEquipItemsResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCEquipItemsResponse

// optional fixed64 so_cache_version_id = 1;
bool CMsgClientToGCEquipItemsResponse::has_so_cache_version_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCEquipItemsResponse::set_has_so_cache_version_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCEquipItemsResponse::clear_has_so_cache_version_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCEquipItemsResponse::clear_so_cache_version_id() {
  so_cache_version_id_ = GOOGLE_ULONGLONG(0);
  clear_has_so_cache_version_id();
}
::google::protobuf::uint64 CMsgClientToGCEquipItemsResponse::so_cache_version_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCEquipItemsResponse.so_cache_version_id)
  return so_cache_version_id_;
}
void CMsgClientToGCEquipItemsResponse::set_so_cache_version_id(::google::protobuf::uint64 value) {
  set_has_so_cache_version_id();
  so_cache_version_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCEquipItemsResponse.so_cache_version_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCSetItemStyle::kItemIdFieldNumber;
const int CMsgClientToGCSetItemStyle::kStyleIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCSetItemStyle::CMsgClientToGCSetItemStyle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCSetItemStyle)
}
CMsgClientToGCSetItemStyle::CMsgClientToGCSetItemStyle(const CMsgClientToGCSetItemStyle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&style_index_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(style_index_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCSetItemStyle)
}

void CMsgClientToGCSetItemStyle::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&style_index_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(style_index_));
}

CMsgClientToGCSetItemStyle::~CMsgClientToGCSetItemStyle() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCSetItemStyle)
  SharedDtor();
}

void CMsgClientToGCSetItemStyle::SharedDtor() {
}

void CMsgClientToGCSetItemStyle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCSetItemStyle::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCSetItemStyle& CMsgClientToGCSetItemStyle::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCSetItemStyle* CMsgClientToGCSetItemStyle::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCSetItemStyle* n = new CMsgClientToGCSetItemStyle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCSetItemStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCSetItemStyle)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&style_index_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(style_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCSetItemStyle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCSetItemStyle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_style_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCSetItemStyle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCSetItemStyle)
  return false;
#undef DO_
}

void CMsgClientToGCSetItemStyle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCSetItemStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 style_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->style_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCSetItemStyle)
}

::google::protobuf::uint8* CMsgClientToGCSetItemStyle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCSetItemStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 style_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->style_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCSetItemStyle)
  return target;
}

size_t CMsgClientToGCSetItemStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCSetItemStyle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 style_index = 2;
    if (has_style_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCSetItemStyle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCSetItemStyle)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSetItemStyle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCSetItemStyle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCSetItemStyle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCSetItemStyle)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetItemStyle::MergeFrom(const CMsgClientToGCSetItemStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCSetItemStyle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      style_index_ = from.style_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCSetItemStyle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCSetItemStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetItemStyle::CopyFrom(const CMsgClientToGCSetItemStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCSetItemStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetItemStyle::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetItemStyle::Swap(CMsgClientToGCSetItemStyle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCSetItemStyle::InternalSwap(CMsgClientToGCSetItemStyle* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(style_index_, other->style_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCSetItemStyle::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCSetItemStyle

// optional uint64 item_id = 1;
bool CMsgClientToGCSetItemStyle::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCSetItemStyle::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCSetItemStyle::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCSetItemStyle::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgClientToGCSetItemStyle::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetItemStyle.item_id)
  return item_id_;
}
void CMsgClientToGCSetItemStyle::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetItemStyle.item_id)
}

// optional uint32 style_index = 2;
bool CMsgClientToGCSetItemStyle::has_style_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCSetItemStyle::set_has_style_index() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCSetItemStyle::clear_has_style_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCSetItemStyle::clear_style_index() {
  style_index_ = 0u;
  clear_has_style_index();
}
::google::protobuf::uint32 CMsgClientToGCSetItemStyle::style_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetItemStyle.style_index)
  return style_index_;
}
void CMsgClientToGCSetItemStyle::set_style_index(::google::protobuf::uint32 value) {
  set_has_style_index();
  style_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetItemStyle.style_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCSetItemStyleResponse::kResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCSetItemStyleResponse::CMsgClientToGCSetItemStyleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCSetItemStyleResponse)
}
CMsgClientToGCSetItemStyleResponse::CMsgClientToGCSetItemStyleResponse(const CMsgClientToGCSetItemStyleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_ = from.response_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCSetItemStyleResponse)
}

void CMsgClientToGCSetItemStyleResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
}

CMsgClientToGCSetItemStyleResponse::~CMsgClientToGCSetItemStyleResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCSetItemStyleResponse)
  SharedDtor();
}

void CMsgClientToGCSetItemStyleResponse::SharedDtor() {
}

void CMsgClientToGCSetItemStyleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCSetItemStyleResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCSetItemStyleResponse& CMsgClientToGCSetItemStyleResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCSetItemStyleResponse* CMsgClientToGCSetItemStyleResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCSetItemStyleResponse* n = new CMsgClientToGCSetItemStyleResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCSetItemStyleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  response_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCSetItemStyleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCSetItemStyleResponse_ESetStyle_IsValid(value)) {
            set_response(static_cast< ::proto::dota::CMsgClientToGCSetItemStyleResponse_ESetStyle >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCSetItemStyleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCSetItemStyleResponse)
  return false;
#undef DO_
}

void CMsgClientToGCSetItemStyleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCSetItemStyleResponse)
}

::google::protobuf::uint8* CMsgClientToGCSetItemStyleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCSetItemStyleResponse)
  return target;
}

size_t CMsgClientToGCSetItemStyleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .proto.dota.CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
  if (has_response()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCSetItemStyleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSetItemStyleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCSetItemStyleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCSetItemStyleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCSetItemStyleResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetItemStyleResponse::MergeFrom(const CMsgClientToGCSetItemStyleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_response()) {
    set_response(from.response());
  }
}

void CMsgClientToGCSetItemStyleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetItemStyleResponse::CopyFrom(const CMsgClientToGCSetItemStyleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCSetItemStyleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetItemStyleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetItemStyleResponse::Swap(CMsgClientToGCSetItemStyleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCSetItemStyleResponse::InternalSwap(CMsgClientToGCSetItemStyleResponse* other) {
  std::swap(response_, other->response_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCSetItemStyleResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCSetItemStyleResponse

// optional .proto.dota.CMsgClientToGCSetItemStyleResponse.ESetStyle response = 1 [default = k_SetStyle_Succeeded];
bool CMsgClientToGCSetItemStyleResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCSetItemStyleResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCSetItemStyleResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCSetItemStyleResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
::proto::dota::CMsgClientToGCSetItemStyleResponse_ESetStyle CMsgClientToGCSetItemStyleResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetItemStyleResponse.response)
  return static_cast< ::proto::dota::CMsgClientToGCSetItemStyleResponse_ESetStyle >(response_);
}
void CMsgClientToGCSetItemStyleResponse::set_response(::proto::dota::CMsgClientToGCSetItemStyleResponse_ESetStyle value) {
  assert(::proto::dota::CMsgClientToGCSetItemStyleResponse_ESetStyle_IsValid(value));
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetItemStyleResponse.response)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnlockItemStyle::kItemToUnlockFieldNumber;
const int CMsgClientToGCUnlockItemStyle::kStyleIndexFieldNumber;
const int CMsgClientToGCUnlockItemStyle::kConsumableItemIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnlockItemStyle::CMsgClientToGCUnlockItemStyle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnlockItemStyle)
}
CMsgClientToGCUnlockItemStyle::CMsgClientToGCUnlockItemStyle(const CMsgClientToGCUnlockItemStyle& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      consumable_item_ids_(from.consumable_item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_to_unlock_, &from.item_to_unlock_,
    reinterpret_cast<char*>(&style_index_) -
    reinterpret_cast<char*>(&item_to_unlock_) + sizeof(style_index_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnlockItemStyle)
}

void CMsgClientToGCUnlockItemStyle::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_to_unlock_, 0, reinterpret_cast<char*>(&style_index_) -
    reinterpret_cast<char*>(&item_to_unlock_) + sizeof(style_index_));
}

CMsgClientToGCUnlockItemStyle::~CMsgClientToGCUnlockItemStyle() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnlockItemStyle)
  SharedDtor();
}

void CMsgClientToGCUnlockItemStyle::SharedDtor() {
}

void CMsgClientToGCUnlockItemStyle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockItemStyle::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCUnlockItemStyle& CMsgClientToGCUnlockItemStyle::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCUnlockItemStyle* CMsgClientToGCUnlockItemStyle::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCUnlockItemStyle* n = new CMsgClientToGCUnlockItemStyle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCUnlockItemStyle::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  consumable_item_ids_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_to_unlock_, 0, reinterpret_cast<char*>(&style_index_) -
      reinterpret_cast<char*>(&item_to_unlock_) + sizeof(style_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCUnlockItemStyle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_to_unlock = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_to_unlock();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_to_unlock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_style_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 consumable_item_ids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 24u, input, this->mutable_consumable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_consumable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnlockItemStyle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnlockItemStyle)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockItemStyle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_to_unlock = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_to_unlock(), output);
  }

  // optional uint32 style_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->style_index(), output);
  }

  // repeated uint64 consumable_item_ids = 3;
  for (int i = 0, n = this->consumable_item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      3, this->consumable_item_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnlockItemStyle)
}

::google::protobuf::uint8* CMsgClientToGCUnlockItemStyle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_to_unlock = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_to_unlock(), target);
  }

  // optional uint32 style_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->style_index(), target);
  }

  // repeated uint64 consumable_item_ids = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(3, this->consumable_item_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnlockItemStyle)
  return target;
}

size_t CMsgClientToGCUnlockItemStyle::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint64 consumable_item_ids = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->consumable_item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->consumable_item_ids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 item_to_unlock = 1;
    if (has_item_to_unlock()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_to_unlock());
    }

    // optional uint32 style_index = 2;
    if (has_style_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockItemStyle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnlockItemStyle* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCUnlockItemStyle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnlockItemStyle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnlockItemStyle)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockItemStyle::MergeFrom(const CMsgClientToGCUnlockItemStyle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  consumable_item_ids_.MergeFrom(from.consumable_item_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_to_unlock_ = from.item_to_unlock_;
    }
    if (cached_has_bits & 0x00000002u) {
      style_index_ = from.style_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCUnlockItemStyle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockItemStyle::CopyFrom(const CMsgClientToGCUnlockItemStyle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnlockItemStyle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockItemStyle::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnlockItemStyle::Swap(CMsgClientToGCUnlockItemStyle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnlockItemStyle::InternalSwap(CMsgClientToGCUnlockItemStyle* other) {
  consumable_item_ids_.InternalSwap(&other->consumable_item_ids_);
  std::swap(item_to_unlock_, other->item_to_unlock_);
  std::swap(style_index_, other->style_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCUnlockItemStyle::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCUnlockItemStyle

// optional uint64 item_to_unlock = 1;
bool CMsgClientToGCUnlockItemStyle::has_item_to_unlock() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCUnlockItemStyle::set_has_item_to_unlock() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCUnlockItemStyle::clear_has_item_to_unlock() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCUnlockItemStyle::clear_item_to_unlock() {
  item_to_unlock_ = GOOGLE_ULONGLONG(0);
  clear_has_item_to_unlock();
}
::google::protobuf::uint64 CMsgClientToGCUnlockItemStyle::item_to_unlock() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockItemStyle.item_to_unlock)
  return item_to_unlock_;
}
void CMsgClientToGCUnlockItemStyle::set_item_to_unlock(::google::protobuf::uint64 value) {
  set_has_item_to_unlock();
  item_to_unlock_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnlockItemStyle.item_to_unlock)
}

// optional uint32 style_index = 2;
bool CMsgClientToGCUnlockItemStyle::has_style_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCUnlockItemStyle::set_has_style_index() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCUnlockItemStyle::clear_has_style_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCUnlockItemStyle::clear_style_index() {
  style_index_ = 0u;
  clear_has_style_index();
}
::google::protobuf::uint32 CMsgClientToGCUnlockItemStyle::style_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockItemStyle.style_index)
  return style_index_;
}
void CMsgClientToGCUnlockItemStyle::set_style_index(::google::protobuf::uint32 value) {
  set_has_style_index();
  style_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnlockItemStyle.style_index)
}

// repeated uint64 consumable_item_ids = 3;
int CMsgClientToGCUnlockItemStyle::consumable_item_ids_size() const {
  return consumable_item_ids_.size();
}
void CMsgClientToGCUnlockItemStyle::clear_consumable_item_ids() {
  consumable_item_ids_.Clear();
}
::google::protobuf::uint64 CMsgClientToGCUnlockItemStyle::consumable_item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockItemStyle.consumable_item_ids)
  return consumable_item_ids_.Get(index);
}
void CMsgClientToGCUnlockItemStyle::set_consumable_item_ids(int index, ::google::protobuf::uint64 value) {
  consumable_item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnlockItemStyle.consumable_item_ids)
}
void CMsgClientToGCUnlockItemStyle::add_consumable_item_ids(::google::protobuf::uint64 value) {
  consumable_item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCUnlockItemStyle.consumable_item_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCUnlockItemStyle::consumable_item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCUnlockItemStyle.consumable_item_ids)
  return consumable_item_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCUnlockItemStyle::mutable_consumable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCUnlockItemStyle.consumable_item_ids)
  return &consumable_item_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnlockItemStyleResponse::kResponseFieldNumber;
const int CMsgClientToGCUnlockItemStyleResponse::kItemIdFieldNumber;
const int CMsgClientToGCUnlockItemStyleResponse::kStyleIndexFieldNumber;
const int CMsgClientToGCUnlockItemStyleResponse::kStylePrereqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnlockItemStyleResponse::CMsgClientToGCUnlockItemStyleResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
}
CMsgClientToGCUnlockItemStyleResponse::CMsgClientToGCUnlockItemStyleResponse(const CMsgClientToGCUnlockItemStyleResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&style_prereq_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(style_prereq_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
}

void CMsgClientToGCUnlockItemStyleResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&style_prereq_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(style_prereq_));
}

CMsgClientToGCUnlockItemStyleResponse::~CMsgClientToGCUnlockItemStyleResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  SharedDtor();
}

void CMsgClientToGCUnlockItemStyleResponse::SharedDtor() {
}

void CMsgClientToGCUnlockItemStyleResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockItemStyleResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCUnlockItemStyleResponse& CMsgClientToGCUnlockItemStyleResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCUnlockItemStyleResponse* CMsgClientToGCUnlockItemStyleResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCUnlockItemStyleResponse* n = new CMsgClientToGCUnlockItemStyleResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCUnlockItemStyleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&style_prereq_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(style_prereq_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCUnlockItemStyleResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(value)) {
            set_response(static_cast< ::proto::dota::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_style_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 style_prereq = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_style_prereq();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &style_prereq_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockItemStyleResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 style_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->style_index(), output);
  }

  // optional uint32 style_prereq = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->style_prereq(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
}

::google::protobuf::uint8* CMsgClientToGCUnlockItemStyleResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 style_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->style_index(), target);
  }

  // optional uint32 style_prereq = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->style_prereq(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  return target;
}

size_t CMsgClientToGCUnlockItemStyleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional .proto.dota.CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

    // optional uint32 style_index = 3;
    if (has_style_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_index());
    }

    // optional uint32 style_prereq = 4;
    if (has_style_prereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->style_prereq());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockItemStyleResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnlockItemStyleResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCUnlockItemStyleResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockItemStyleResponse::MergeFrom(const CMsgClientToGCUnlockItemStyleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      response_ = from.response_;
    }
    if (cached_has_bits & 0x00000004u) {
      style_index_ = from.style_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      style_prereq_ = from.style_prereq_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCUnlockItemStyleResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockItemStyleResponse::CopyFrom(const CMsgClientToGCUnlockItemStyleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnlockItemStyleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockItemStyleResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnlockItemStyleResponse::Swap(CMsgClientToGCUnlockItemStyleResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnlockItemStyleResponse::InternalSwap(CMsgClientToGCUnlockItemStyleResponse* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(response_, other->response_);
  std::swap(style_index_, other->style_index_);
  std::swap(style_prereq_, other->style_prereq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCUnlockItemStyleResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCUnlockItemStyleResponse

// optional .proto.dota.CMsgClientToGCUnlockItemStyleResponse.EUnlockStyle response = 1 [default = k_UnlockStyle_Succeeded];
bool CMsgClientToGCUnlockItemStyleResponse::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCUnlockItemStyleResponse::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCUnlockItemStyleResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCUnlockItemStyleResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
::proto::dota::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle CMsgClientToGCUnlockItemStyleResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockItemStyleResponse.response)
  return static_cast< ::proto::dota::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle >(response_);
}
void CMsgClientToGCUnlockItemStyleResponse::set_response(::proto::dota::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle value) {
  assert(::proto::dota::CMsgClientToGCUnlockItemStyleResponse_EUnlockStyle_IsValid(value));
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnlockItemStyleResponse.response)
}

// optional uint64 item_id = 2;
bool CMsgClientToGCUnlockItemStyleResponse::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCUnlockItemStyleResponse::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCUnlockItemStyleResponse::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCUnlockItemStyleResponse::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgClientToGCUnlockItemStyleResponse::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockItemStyleResponse.item_id)
  return item_id_;
}
void CMsgClientToGCUnlockItemStyleResponse::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnlockItemStyleResponse.item_id)
}

// optional uint32 style_index = 3;
bool CMsgClientToGCUnlockItemStyleResponse::has_style_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientToGCUnlockItemStyleResponse::set_has_style_index() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientToGCUnlockItemStyleResponse::clear_has_style_index() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientToGCUnlockItemStyleResponse::clear_style_index() {
  style_index_ = 0u;
  clear_has_style_index();
}
::google::protobuf::uint32 CMsgClientToGCUnlockItemStyleResponse::style_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockItemStyleResponse.style_index)
  return style_index_;
}
void CMsgClientToGCUnlockItemStyleResponse::set_style_index(::google::protobuf::uint32 value) {
  set_has_style_index();
  style_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnlockItemStyleResponse.style_index)
}

// optional uint32 style_prereq = 4;
bool CMsgClientToGCUnlockItemStyleResponse::has_style_prereq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientToGCUnlockItemStyleResponse::set_has_style_prereq() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientToGCUnlockItemStyleResponse::clear_has_style_prereq() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientToGCUnlockItemStyleResponse::clear_style_prereq() {
  style_prereq_ = 0u;
  clear_has_style_prereq();
}
::google::protobuf::uint32 CMsgClientToGCUnlockItemStyleResponse::style_prereq() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockItemStyleResponse.style_prereq)
  return style_prereq_;
}
void CMsgClientToGCUnlockItemStyleResponse::set_style_prereq(::google::protobuf::uint32 value) {
  set_has_style_prereq();
  style_prereq_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnlockItemStyleResponse.style_prereq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCSetItemInventoryCategory::kItemIdsFieldNumber;
const int CMsgClientToGCSetItemInventoryCategory::kSetToValueFieldNumber;
const int CMsgClientToGCSetItemInventoryCategory::kRemoveCategoriesFieldNumber;
const int CMsgClientToGCSetItemInventoryCategory::kAddCategoriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCSetItemInventoryCategory::CMsgClientToGCSetItemInventoryCategory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCSetItemInventoryCategory)
}
CMsgClientToGCSetItemInventoryCategory::CMsgClientToGCSetItemInventoryCategory(const CMsgClientToGCSetItemInventoryCategory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_ids_(from.item_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&set_to_value_, &from.set_to_value_,
    reinterpret_cast<char*>(&add_categories_) -
    reinterpret_cast<char*>(&set_to_value_) + sizeof(add_categories_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCSetItemInventoryCategory)
}

void CMsgClientToGCSetItemInventoryCategory::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&set_to_value_, 0, reinterpret_cast<char*>(&add_categories_) -
    reinterpret_cast<char*>(&set_to_value_) + sizeof(add_categories_));
}

CMsgClientToGCSetItemInventoryCategory::~CMsgClientToGCSetItemInventoryCategory() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  SharedDtor();
}

void CMsgClientToGCSetItemInventoryCategory::SharedDtor() {
}

void CMsgClientToGCSetItemInventoryCategory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCSetItemInventoryCategory::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCSetItemInventoryCategory& CMsgClientToGCSetItemInventoryCategory::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCSetItemInventoryCategory* CMsgClientToGCSetItemInventoryCategory::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCSetItemInventoryCategory* n = new CMsgClientToGCSetItemInventoryCategory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCSetItemInventoryCategory::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  item_ids_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&set_to_value_, 0, reinterpret_cast<char*>(&add_categories_) -
      reinterpret_cast<char*>(&set_to_value_) + sizeof(add_categories_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCSetItemInventoryCategory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 item_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_item_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_item_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 set_to_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_set_to_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &set_to_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 remove_categories = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_remove_categories();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &remove_categories_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 add_categories = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_add_categories();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &add_categories_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  return false;
#undef DO_
}

void CMsgClientToGCSetItemInventoryCategory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  for (int i = 0, n = this->item_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->item_ids(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 set_to_value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->set_to_value(), output);
  }

  // optional uint32 remove_categories = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->remove_categories(), output);
  }

  // optional uint32 add_categories = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->add_categories(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCSetItemInventoryCategory)
}

::google::protobuf::uint8* CMsgClientToGCSetItemInventoryCategory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 item_ids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->item_ids_, target);

  cached_has_bits = _has_bits_[0];
  // optional uint32 set_to_value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->set_to_value(), target);
  }

  // optional uint32 remove_categories = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->remove_categories(), target);
  }

  // optional uint32 add_categories = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->add_categories(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  return target;
}

size_t CMsgClientToGCSetItemInventoryCategory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint64 item_ids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->item_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->item_ids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 set_to_value = 2;
    if (has_set_to_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->set_to_value());
    }

    // optional uint32 remove_categories = 3;
    if (has_remove_categories()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->remove_categories());
    }

    // optional uint32 add_categories = 4;
    if (has_add_categories()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->add_categories());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCSetItemInventoryCategory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCSetItemInventoryCategory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCSetItemInventoryCategory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCSetItemInventoryCategory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCSetItemInventoryCategory)
    MergeFrom(*source);
  }
}

void CMsgClientToGCSetItemInventoryCategory::MergeFrom(const CMsgClientToGCSetItemInventoryCategory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_ids_.MergeFrom(from.item_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_to_value_ = from.set_to_value_;
    }
    if (cached_has_bits & 0x00000002u) {
      remove_categories_ = from.remove_categories_;
    }
    if (cached_has_bits & 0x00000004u) {
      add_categories_ = from.add_categories_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCSetItemInventoryCategory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCSetItemInventoryCategory::CopyFrom(const CMsgClientToGCSetItemInventoryCategory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCSetItemInventoryCategory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCSetItemInventoryCategory::IsInitialized() const {
  return true;
}

void CMsgClientToGCSetItemInventoryCategory::Swap(CMsgClientToGCSetItemInventoryCategory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCSetItemInventoryCategory::InternalSwap(CMsgClientToGCSetItemInventoryCategory* other) {
  item_ids_.InternalSwap(&other->item_ids_);
  std::swap(set_to_value_, other->set_to_value_);
  std::swap(remove_categories_, other->remove_categories_);
  std::swap(add_categories_, other->add_categories_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCSetItemInventoryCategory::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCSetItemInventoryCategory

// repeated uint64 item_ids = 1;
int CMsgClientToGCSetItemInventoryCategory::item_ids_size() const {
  return item_ids_.size();
}
void CMsgClientToGCSetItemInventoryCategory::clear_item_ids() {
  item_ids_.Clear();
}
::google::protobuf::uint64 CMsgClientToGCSetItemInventoryCategory::item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetItemInventoryCategory.item_ids)
  return item_ids_.Get(index);
}
void CMsgClientToGCSetItemInventoryCategory::set_item_ids(int index, ::google::protobuf::uint64 value) {
  item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetItemInventoryCategory.item_ids)
}
void CMsgClientToGCSetItemInventoryCategory::add_item_ids(::google::protobuf::uint64 value) {
  item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCSetItemInventoryCategory.item_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCSetItemInventoryCategory::item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCSetItemInventoryCategory.item_ids)
  return item_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCSetItemInventoryCategory::mutable_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCSetItemInventoryCategory.item_ids)
  return &item_ids_;
}

// optional uint32 set_to_value = 2;
bool CMsgClientToGCSetItemInventoryCategory::has_set_to_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCSetItemInventoryCategory::set_has_set_to_value() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCSetItemInventoryCategory::clear_has_set_to_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCSetItemInventoryCategory::clear_set_to_value() {
  set_to_value_ = 0u;
  clear_has_set_to_value();
}
::google::protobuf::uint32 CMsgClientToGCSetItemInventoryCategory::set_to_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetItemInventoryCategory.set_to_value)
  return set_to_value_;
}
void CMsgClientToGCSetItemInventoryCategory::set_set_to_value(::google::protobuf::uint32 value) {
  set_has_set_to_value();
  set_to_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetItemInventoryCategory.set_to_value)
}

// optional uint32 remove_categories = 3;
bool CMsgClientToGCSetItemInventoryCategory::has_remove_categories() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCSetItemInventoryCategory::set_has_remove_categories() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCSetItemInventoryCategory::clear_has_remove_categories() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCSetItemInventoryCategory::clear_remove_categories() {
  remove_categories_ = 0u;
  clear_has_remove_categories();
}
::google::protobuf::uint32 CMsgClientToGCSetItemInventoryCategory::remove_categories() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetItemInventoryCategory.remove_categories)
  return remove_categories_;
}
void CMsgClientToGCSetItemInventoryCategory::set_remove_categories(::google::protobuf::uint32 value) {
  set_has_remove_categories();
  remove_categories_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetItemInventoryCategory.remove_categories)
}

// optional uint32 add_categories = 4;
bool CMsgClientToGCSetItemInventoryCategory::has_add_categories() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientToGCSetItemInventoryCategory::set_has_add_categories() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientToGCSetItemInventoryCategory::clear_has_add_categories() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientToGCSetItemInventoryCategory::clear_add_categories() {
  add_categories_ = 0u;
  clear_has_add_categories();
}
::google::protobuf::uint32 CMsgClientToGCSetItemInventoryCategory::add_categories() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetItemInventoryCategory.add_categories)
  return add_categories_;
}
void CMsgClientToGCSetItemInventoryCategory::set_add_categories(::google::protobuf::uint32 value) {
  set_has_add_categories();
  add_categories_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetItemInventoryCategory.add_categories)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnlockCrate::kCrateItemIdFieldNumber;
const int CMsgClientToGCUnlockCrate::kKeyItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnlockCrate::CMsgClientToGCUnlockCrate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnlockCrate)
}
CMsgClientToGCUnlockCrate::CMsgClientToGCUnlockCrate(const CMsgClientToGCUnlockCrate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&crate_item_id_, &from.crate_item_id_,
    reinterpret_cast<char*>(&key_item_id_) -
    reinterpret_cast<char*>(&crate_item_id_) + sizeof(key_item_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnlockCrate)
}

void CMsgClientToGCUnlockCrate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&crate_item_id_, 0, reinterpret_cast<char*>(&key_item_id_) -
    reinterpret_cast<char*>(&crate_item_id_) + sizeof(key_item_id_));
}

CMsgClientToGCUnlockCrate::~CMsgClientToGCUnlockCrate() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnlockCrate)
  SharedDtor();
}

void CMsgClientToGCUnlockCrate::SharedDtor() {
}

void CMsgClientToGCUnlockCrate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrate::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCUnlockCrate& CMsgClientToGCUnlockCrate::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCUnlockCrate* CMsgClientToGCUnlockCrate::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCUnlockCrate* n = new CMsgClientToGCUnlockCrate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCUnlockCrate::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnlockCrate)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&crate_item_id_, 0, reinterpret_cast<char*>(&key_item_id_) -
      reinterpret_cast<char*>(&crate_item_id_) + sizeof(key_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCUnlockCrate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnlockCrate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 crate_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_crate_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &crate_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 key_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_key_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &key_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnlockCrate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnlockCrate)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockCrate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnlockCrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 crate_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->crate_item_id(), output);
  }

  // optional uint64 key_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->key_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnlockCrate)
}

::google::protobuf::uint8* CMsgClientToGCUnlockCrate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnlockCrate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 crate_item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->crate_item_id(), target);
  }

  // optional uint64 key_item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->key_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnlockCrate)
  return target;
}

size_t CMsgClientToGCUnlockCrate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnlockCrate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 crate_item_id = 1;
    if (has_crate_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->crate_item_id());
    }

    // optional uint64 key_item_id = 2;
    if (has_key_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->key_item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockCrate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnlockCrate)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnlockCrate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCUnlockCrate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnlockCrate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnlockCrate)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockCrate::MergeFrom(const CMsgClientToGCUnlockCrate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnlockCrate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      crate_item_id_ = from.crate_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      key_item_id_ = from.key_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCUnlockCrate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnlockCrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockCrate::CopyFrom(const CMsgClientToGCUnlockCrate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnlockCrate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockCrate::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnlockCrate::Swap(CMsgClientToGCUnlockCrate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnlockCrate::InternalSwap(CMsgClientToGCUnlockCrate* other) {
  std::swap(crate_item_id_, other->crate_item_id_);
  std::swap(key_item_id_, other->key_item_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCUnlockCrate::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCUnlockCrate

// optional uint64 crate_item_id = 1;
bool CMsgClientToGCUnlockCrate::has_crate_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCUnlockCrate::set_has_crate_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCUnlockCrate::clear_has_crate_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCUnlockCrate::clear_crate_item_id() {
  crate_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_crate_item_id();
}
::google::protobuf::uint64 CMsgClientToGCUnlockCrate::crate_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockCrate.crate_item_id)
  return crate_item_id_;
}
void CMsgClientToGCUnlockCrate::set_crate_item_id(::google::protobuf::uint64 value) {
  set_has_crate_item_id();
  crate_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnlockCrate.crate_item_id)
}

// optional uint64 key_item_id = 2;
bool CMsgClientToGCUnlockCrate::has_key_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCUnlockCrate::set_has_key_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCUnlockCrate::clear_has_key_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCUnlockCrate::clear_key_item_id() {
  key_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_key_item_id();
}
::google::protobuf::uint64 CMsgClientToGCUnlockCrate::key_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockCrate.key_item_id)
  return key_item_id_;
}
void CMsgClientToGCUnlockCrate::set_key_item_id(::google::protobuf::uint64 value) {
  set_has_key_item_id();
  key_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnlockCrate.key_item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnlockCrateResponse_Item::kItemIdFieldNumber;
const int CMsgClientToGCUnlockCrateResponse_Item::kDefIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnlockCrateResponse_Item::CMsgClientToGCUnlockCrateResponse_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
}
CMsgClientToGCUnlockCrateResponse_Item::CMsgClientToGCUnlockCrateResponse_Item(const CMsgClientToGCUnlockCrateResponse_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&def_index_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(def_index_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
}

void CMsgClientToGCUnlockCrateResponse_Item::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&def_index_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(def_index_));
}

CMsgClientToGCUnlockCrateResponse_Item::~CMsgClientToGCUnlockCrateResponse_Item() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  SharedDtor();
}

void CMsgClientToGCUnlockCrateResponse_Item::SharedDtor() {
}

void CMsgClientToGCUnlockCrateResponse_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrateResponse_Item::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCUnlockCrateResponse_Item& CMsgClientToGCUnlockCrateResponse_Item::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCUnlockCrateResponse_Item* CMsgClientToGCUnlockCrateResponse_Item::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCUnlockCrateResponse_Item* n = new CMsgClientToGCUnlockCrateResponse_Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCUnlockCrateResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&def_index_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(def_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCUnlockCrateResponse_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 def_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockCrateResponse_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 def_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->def_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
}

::google::protobuf::uint8* CMsgClientToGCUnlockCrateResponse_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 def_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->def_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  return target;
}

size_t CMsgClientToGCUnlockCrateResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 def_index = 2;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockCrateResponse_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnlockCrateResponse_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCUnlockCrateResponse_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockCrateResponse_Item::MergeFrom(const CMsgClientToGCUnlockCrateResponse_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      def_index_ = from.def_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCUnlockCrateResponse_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockCrateResponse_Item::CopyFrom(const CMsgClientToGCUnlockCrateResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockCrateResponse_Item::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnlockCrateResponse_Item::Swap(CMsgClientToGCUnlockCrateResponse_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnlockCrateResponse_Item::InternalSwap(CMsgClientToGCUnlockCrateResponse_Item* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(def_index_, other->def_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCUnlockCrateResponse_Item::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCUnlockCrateResponse_Item

// optional uint64 item_id = 1;
bool CMsgClientToGCUnlockCrateResponse_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCUnlockCrateResponse_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCUnlockCrateResponse_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCUnlockCrateResponse_Item::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgClientToGCUnlockCrateResponse_Item::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockCrateResponse.Item.item_id)
  return item_id_;
}
void CMsgClientToGCUnlockCrateResponse_Item::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnlockCrateResponse.Item.item_id)
}

// optional uint32 def_index = 2;
bool CMsgClientToGCUnlockCrateResponse_Item::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCUnlockCrateResponse_Item::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCUnlockCrateResponse_Item::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCUnlockCrateResponse_Item::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
::google::protobuf::uint32 CMsgClientToGCUnlockCrateResponse_Item::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockCrateResponse.Item.def_index)
  return def_index_;
}
void CMsgClientToGCUnlockCrateResponse_Item::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnlockCrateResponse.Item.def_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCUnlockCrateResponse::kResultFieldNumber;
const int CMsgClientToGCUnlockCrateResponse::kGrantedItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCUnlockCrateResponse::CMsgClientToGCUnlockCrateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCUnlockCrateResponse)
}
CMsgClientToGCUnlockCrateResponse::CMsgClientToGCUnlockCrateResponse(const CMsgClientToGCUnlockCrateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      granted_items_(from.granted_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCUnlockCrateResponse)
}

void CMsgClientToGCUnlockCrateResponse::SharedCtor() {
  _cached_size_ = 0;
  result_ = 0;
}

CMsgClientToGCUnlockCrateResponse::~CMsgClientToGCUnlockCrateResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCUnlockCrateResponse)
  SharedDtor();
}

void CMsgClientToGCUnlockCrateResponse::SharedDtor() {
}

void CMsgClientToGCUnlockCrateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCUnlockCrateResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCUnlockCrateResponse& CMsgClientToGCUnlockCrateResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCUnlockCrateResponse* CMsgClientToGCUnlockCrateResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCUnlockCrateResponse* n = new CMsgClientToGCUnlockCrateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCUnlockCrateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  granted_items_.Clear();
  result_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCUnlockCrateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::EGCMsgResponse_IsValid(value)) {
            set_result(static_cast< ::proto::dota::EGCMsgResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_granted_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCUnlockCrateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCUnlockCrateResponse)
  return false;
#undef DO_
}

void CMsgClientToGCUnlockCrateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->result(), output);
  }

  // repeated .proto.dota.CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  for (unsigned int i = 0, n = this->granted_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->granted_items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCUnlockCrateResponse)
}

::google::protobuf::uint8* CMsgClientToGCUnlockCrateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->result(), target);
  }

  // repeated .proto.dota.CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  for (unsigned int i = 0, n = this->granted_items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->granted_items(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCUnlockCrateResponse)
  return target;
}

size_t CMsgClientToGCUnlockCrateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
  {
    unsigned int count = this->granted_items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->granted_items(i));
    }
  }

  // optional .proto.dota.EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
  if (has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCUnlockCrateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCUnlockCrateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCUnlockCrateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCUnlockCrateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCUnlockCrateResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCUnlockCrateResponse::MergeFrom(const CMsgClientToGCUnlockCrateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  granted_items_.MergeFrom(from.granted_items_);
  if (from.has_result()) {
    set_result(from.result());
  }
}

void CMsgClientToGCUnlockCrateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCUnlockCrateResponse::CopyFrom(const CMsgClientToGCUnlockCrateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCUnlockCrateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCUnlockCrateResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCUnlockCrateResponse::Swap(CMsgClientToGCUnlockCrateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCUnlockCrateResponse::InternalSwap(CMsgClientToGCUnlockCrateResponse* other) {
  granted_items_.InternalSwap(&other->granted_items_);
  std::swap(result_, other->result_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCUnlockCrateResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCUnlockCrateResponse

// optional .proto.dota.EGCMsgResponse result = 1 [default = k_EGCMsgResponseOK];
bool CMsgClientToGCUnlockCrateResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCUnlockCrateResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCUnlockCrateResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCUnlockCrateResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
::proto::dota::EGCMsgResponse CMsgClientToGCUnlockCrateResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockCrateResponse.result)
  return static_cast< ::proto::dota::EGCMsgResponse >(result_);
}
void CMsgClientToGCUnlockCrateResponse::set_result(::proto::dota::EGCMsgResponse value) {
  assert(::proto::dota::EGCMsgResponse_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCUnlockCrateResponse.result)
}

// repeated .proto.dota.CMsgClientToGCUnlockCrateResponse.Item granted_items = 2;
int CMsgClientToGCUnlockCrateResponse::granted_items_size() const {
  return granted_items_.size();
}
void CMsgClientToGCUnlockCrateResponse::clear_granted_items() {
  granted_items_.Clear();
}
const ::proto::dota::CMsgClientToGCUnlockCrateResponse_Item& CMsgClientToGCUnlockCrateResponse::granted_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCUnlockCrateResponse.granted_items)
  return granted_items_.Get(index);
}
::proto::dota::CMsgClientToGCUnlockCrateResponse_Item* CMsgClientToGCUnlockCrateResponse::mutable_granted_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCUnlockCrateResponse.granted_items)
  return granted_items_.Mutable(index);
}
::proto::dota::CMsgClientToGCUnlockCrateResponse_Item* CMsgClientToGCUnlockCrateResponse::add_granted_items() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCUnlockCrateResponse.granted_items)
  return granted_items_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCUnlockCrateResponse_Item >*
CMsgClientToGCUnlockCrateResponse::mutable_granted_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCUnlockCrateResponse.granted_items)
  return &granted_items_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCUnlockCrateResponse_Item >&
CMsgClientToGCUnlockCrateResponse::granted_items() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCUnlockCrateResponse.granted_items)
  return granted_items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCRemoveItemAttribute::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCRemoveItemAttribute::CMsgClientToGCRemoveItemAttribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCRemoveItemAttribute)
}
CMsgClientToGCRemoveItemAttribute::CMsgClientToGCRemoveItemAttribute(const CMsgClientToGCRemoveItemAttribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  item_id_ = from.item_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCRemoveItemAttribute)
}

void CMsgClientToGCRemoveItemAttribute::SharedCtor() {
  _cached_size_ = 0;
  item_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientToGCRemoveItemAttribute::~CMsgClientToGCRemoveItemAttribute() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCRemoveItemAttribute)
  SharedDtor();
}

void CMsgClientToGCRemoveItemAttribute::SharedDtor() {
}

void CMsgClientToGCRemoveItemAttribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCRemoveItemAttribute::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCRemoveItemAttribute& CMsgClientToGCRemoveItemAttribute::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCRemoveItemAttribute* CMsgClientToGCRemoveItemAttribute::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCRemoveItemAttribute* n = new CMsgClientToGCRemoveItemAttribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCRemoveItemAttribute::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  item_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCRemoveItemAttribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCRemoveItemAttribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCRemoveItemAttribute)
  return false;
#undef DO_
}

void CMsgClientToGCRemoveItemAttribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCRemoveItemAttribute)
}

::google::protobuf::uint8* CMsgClientToGCRemoveItemAttribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCRemoveItemAttribute)
  return target;
}

size_t CMsgClientToGCRemoveItemAttribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint64 item_id = 1;
  if (has_item_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCRemoveItemAttribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRemoveItemAttribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCRemoveItemAttribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCRemoveItemAttribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCRemoveItemAttribute)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRemoveItemAttribute::MergeFrom(const CMsgClientToGCRemoveItemAttribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item_id()) {
    set_item_id(from.item_id());
  }
}

void CMsgClientToGCRemoveItemAttribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRemoveItemAttribute::CopyFrom(const CMsgClientToGCRemoveItemAttribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCRemoveItemAttribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRemoveItemAttribute::IsInitialized() const {
  return true;
}

void CMsgClientToGCRemoveItemAttribute::Swap(CMsgClientToGCRemoveItemAttribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCRemoveItemAttribute::InternalSwap(CMsgClientToGCRemoveItemAttribute* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCRemoveItemAttribute::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCRemoveItemAttribute

// optional uint64 item_id = 1;
bool CMsgClientToGCRemoveItemAttribute::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCRemoveItemAttribute::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCRemoveItemAttribute::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCRemoveItemAttribute::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgClientToGCRemoveItemAttribute::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRemoveItemAttribute.item_id)
  return item_id_;
}
void CMsgClientToGCRemoveItemAttribute::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRemoveItemAttribute.item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCRemoveItemAttributeResponse::kResponseFieldNumber;
const int CMsgClientToGCRemoveItemAttributeResponse::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCRemoveItemAttributeResponse::CMsgClientToGCRemoveItemAttributeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
}
CMsgClientToGCRemoveItemAttributeResponse::CMsgClientToGCRemoveItemAttributeResponse(const CMsgClientToGCRemoveItemAttributeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(response_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
}

void CMsgClientToGCRemoveItemAttributeResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(response_));
}

CMsgClientToGCRemoveItemAttributeResponse::~CMsgClientToGCRemoveItemAttributeResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  SharedDtor();
}

void CMsgClientToGCRemoveItemAttributeResponse::SharedDtor() {
}

void CMsgClientToGCRemoveItemAttributeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCRemoveItemAttributeResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCRemoveItemAttributeResponse& CMsgClientToGCRemoveItemAttributeResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCRemoveItemAttributeResponse* CMsgClientToGCRemoveItemAttributeResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCRemoveItemAttributeResponse* n = new CMsgClientToGCRemoveItemAttributeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCRemoveItemAttributeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(response_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCRemoveItemAttributeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_IsValid(value)) {
            set_response(static_cast< ::proto::dota::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  return false;
#undef DO_
}

void CMsgClientToGCRemoveItemAttributeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
}

::google::protobuf::uint8* CMsgClientToGCRemoveItemAttributeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  return target;
}

size_t CMsgClientToGCRemoveItemAttributeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional .proto.dota.CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCRemoveItemAttributeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCRemoveItemAttributeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCRemoveItemAttributeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCRemoveItemAttributeResponse::MergeFrom(const CMsgClientToGCRemoveItemAttributeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      response_ = from.response_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCRemoveItemAttributeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCRemoveItemAttributeResponse::CopyFrom(const CMsgClientToGCRemoveItemAttributeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCRemoveItemAttributeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCRemoveItemAttributeResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCRemoveItemAttributeResponse::Swap(CMsgClientToGCRemoveItemAttributeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCRemoveItemAttributeResponse::InternalSwap(CMsgClientToGCRemoveItemAttributeResponse* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(response_, other->response_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCRemoveItemAttributeResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCRemoveItemAttributeResponse

// optional .proto.dota.CMsgClientToGCRemoveItemAttributeResponse.ERemoveItemAttribute response = 1 [default = k_RemoveItemAttribute_Succeeded];
bool CMsgClientToGCRemoveItemAttributeResponse::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCRemoveItemAttributeResponse::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCRemoveItemAttributeResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCRemoveItemAttributeResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
::proto::dota::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute CMsgClientToGCRemoveItemAttributeResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRemoveItemAttributeResponse.response)
  return static_cast< ::proto::dota::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute >(response_);
}
void CMsgClientToGCRemoveItemAttributeResponse::set_response(::proto::dota::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute value) {
  assert(::proto::dota::CMsgClientToGCRemoveItemAttributeResponse_ERemoveItemAttribute_IsValid(value));
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRemoveItemAttributeResponse.response)
}

// optional uint64 item_id = 2;
bool CMsgClientToGCRemoveItemAttributeResponse::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCRemoveItemAttributeResponse::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCRemoveItemAttributeResponse::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCRemoveItemAttributeResponse::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgClientToGCRemoveItemAttributeResponse::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRemoveItemAttributeResponse.item_id)
  return item_id_;
}
void CMsgClientToGCRemoveItemAttributeResponse::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRemoveItemAttributeResponse.item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCNameItem::kSubjectItemIdFieldNumber;
const int CMsgClientToGCNameItem::kToolItemIdFieldNumber;
const int CMsgClientToGCNameItem::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCNameItem::CMsgClientToGCNameItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCNameItem)
}
CMsgClientToGCNameItem::CMsgClientToGCNameItem(const CMsgClientToGCNameItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&subject_item_id_, &from.subject_item_id_,
    reinterpret_cast<char*>(&tool_item_id_) -
    reinterpret_cast<char*>(&subject_item_id_) + sizeof(tool_item_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCNameItem)
}

void CMsgClientToGCNameItem::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&subject_item_id_, 0, reinterpret_cast<char*>(&tool_item_id_) -
    reinterpret_cast<char*>(&subject_item_id_) + sizeof(tool_item_id_));
}

CMsgClientToGCNameItem::~CMsgClientToGCNameItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCNameItem)
  SharedDtor();
}

void CMsgClientToGCNameItem::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientToGCNameItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCNameItem::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCNameItem& CMsgClientToGCNameItem::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCNameItem* CMsgClientToGCNameItem::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCNameItem* n = new CMsgClientToGCNameItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCNameItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCNameItem)
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&subject_item_id_, 0, reinterpret_cast<char*>(&tool_item_id_) -
      reinterpret_cast<char*>(&subject_item_id_) + sizeof(tool_item_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCNameItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCNameItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 subject_item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_subject_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &subject_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 tool_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_tool_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &tool_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgClientToGCNameItem.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCNameItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCNameItem)
  return false;
#undef DO_
}

void CMsgClientToGCNameItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCNameItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 subject_item_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->subject_item_id(), output);
  }

  // optional uint64 tool_item_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->tool_item_id(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgClientToGCNameItem.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCNameItem)
}

::google::protobuf::uint8* CMsgClientToGCNameItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCNameItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 subject_item_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->subject_item_id(), target);
  }

  // optional uint64 tool_item_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->tool_item_id(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgClientToGCNameItem.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCNameItem)
  return target;
}

size_t CMsgClientToGCNameItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCNameItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 subject_item_id = 1;
    if (has_subject_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->subject_item_id());
    }

    // optional uint64 tool_item_id = 2;
    if (has_tool_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->tool_item_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCNameItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCNameItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCNameItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCNameItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCNameItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCNameItem)
    MergeFrom(*source);
  }
}

void CMsgClientToGCNameItem::MergeFrom(const CMsgClientToGCNameItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCNameItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      subject_item_id_ = from.subject_item_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      tool_item_id_ = from.tool_item_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCNameItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCNameItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCNameItem::CopyFrom(const CMsgClientToGCNameItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCNameItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCNameItem::IsInitialized() const {
  return true;
}

void CMsgClientToGCNameItem::Swap(CMsgClientToGCNameItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCNameItem::InternalSwap(CMsgClientToGCNameItem* other) {
  name_.Swap(&other->name_);
  std::swap(subject_item_id_, other->subject_item_id_);
  std::swap(tool_item_id_, other->tool_item_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCNameItem::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCNameItem

// optional uint64 subject_item_id = 1;
bool CMsgClientToGCNameItem::has_subject_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCNameItem::set_has_subject_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCNameItem::clear_has_subject_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCNameItem::clear_subject_item_id() {
  subject_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_subject_item_id();
}
::google::protobuf::uint64 CMsgClientToGCNameItem::subject_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCNameItem.subject_item_id)
  return subject_item_id_;
}
void CMsgClientToGCNameItem::set_subject_item_id(::google::protobuf::uint64 value) {
  set_has_subject_item_id();
  subject_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCNameItem.subject_item_id)
}

// optional uint64 tool_item_id = 2;
bool CMsgClientToGCNameItem::has_tool_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientToGCNameItem::set_has_tool_item_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientToGCNameItem::clear_has_tool_item_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientToGCNameItem::clear_tool_item_id() {
  tool_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_tool_item_id();
}
::google::protobuf::uint64 CMsgClientToGCNameItem::tool_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCNameItem.tool_item_id)
  return tool_item_id_;
}
void CMsgClientToGCNameItem::set_tool_item_id(::google::protobuf::uint64 value) {
  set_has_tool_item_id();
  tool_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCNameItem.tool_item_id)
}

// optional string name = 3;
bool CMsgClientToGCNameItem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCNameItem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCNameItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCNameItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CMsgClientToGCNameItem::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCNameItem.name)
  return name_.GetNoArena();
}
void CMsgClientToGCNameItem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCNameItem.name)
}
#if LANG_CXX11
void CMsgClientToGCNameItem::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCNameItem.name)
}
#endif
void CMsgClientToGCNameItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCNameItem.name)
}
void CMsgClientToGCNameItem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCNameItem.name)
}
::std::string* CMsgClientToGCNameItem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCNameItem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientToGCNameItem::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCNameItem.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientToGCNameItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCNameItem.name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCNameItemResponse::kResponseFieldNumber;
const int CMsgClientToGCNameItemResponse::kItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCNameItemResponse::CMsgClientToGCNameItemResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCNameItemResponse)
}
CMsgClientToGCNameItemResponse::CMsgClientToGCNameItemResponse(const CMsgClientToGCNameItemResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(response_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCNameItemResponse)
}

void CMsgClientToGCNameItemResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&response_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(response_));
}

CMsgClientToGCNameItemResponse::~CMsgClientToGCNameItemResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCNameItemResponse)
  SharedDtor();
}

void CMsgClientToGCNameItemResponse::SharedDtor() {
}

void CMsgClientToGCNameItemResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCNameItemResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCNameItemResponse& CMsgClientToGCNameItemResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCNameItemResponse* CMsgClientToGCNameItemResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCNameItemResponse* n = new CMsgClientToGCNameItemResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCNameItemResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCNameItemResponse)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&response_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(response_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCNameItemResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCNameItemResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCNameItemResponse_ENameItem_IsValid(value)) {
            set_response(static_cast< ::proto::dota::CMsgClientToGCNameItemResponse_ENameItem >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCNameItemResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCNameItemResponse)
  return false;
#undef DO_
}

void CMsgClientToGCNameItemResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCNameItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCNameItemResponse)
}

::google::protobuf::uint8* CMsgClientToGCNameItemResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCNameItemResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCNameItemResponse)
  return target;
}

size_t CMsgClientToGCNameItemResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCNameItemResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional .proto.dota.CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCNameItemResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCNameItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCNameItemResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCNameItemResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCNameItemResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCNameItemResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCNameItemResponse::MergeFrom(const CMsgClientToGCNameItemResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCNameItemResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      response_ = from.response_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCNameItemResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCNameItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCNameItemResponse::CopyFrom(const CMsgClientToGCNameItemResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCNameItemResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCNameItemResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCNameItemResponse::Swap(CMsgClientToGCNameItemResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCNameItemResponse::InternalSwap(CMsgClientToGCNameItemResponse* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(response_, other->response_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCNameItemResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCNameItemResponse

// optional .proto.dota.CMsgClientToGCNameItemResponse.ENameItem response = 1 [default = k_NameItem_Succeeded];
bool CMsgClientToGCNameItemResponse::has_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCNameItemResponse::set_has_response() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCNameItemResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCNameItemResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
::proto::dota::CMsgClientToGCNameItemResponse_ENameItem CMsgClientToGCNameItemResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCNameItemResponse.response)
  return static_cast< ::proto::dota::CMsgClientToGCNameItemResponse_ENameItem >(response_);
}
void CMsgClientToGCNameItemResponse::set_response(::proto::dota::CMsgClientToGCNameItemResponse_ENameItem value) {
  assert(::proto::dota::CMsgClientToGCNameItemResponse_ENameItem_IsValid(value));
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCNameItemResponse.response)
}

// optional uint64 item_id = 2;
bool CMsgClientToGCNameItemResponse::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCNameItemResponse::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCNameItemResponse::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCNameItemResponse::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgClientToGCNameItemResponse::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCNameItemResponse.item_id)
  return item_id_;
}
void CMsgClientToGCNameItemResponse::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCNameItemResponse.item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCSetItemPosition::kItemIdFieldNumber;
const int CMsgGCSetItemPosition::kNewPositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCSetItemPosition::CMsgGCSetItemPosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCSetItemPosition)
}
CMsgGCSetItemPosition::CMsgGCSetItemPosition(const CMsgGCSetItemPosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&new_position_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(new_position_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCSetItemPosition)
}

void CMsgGCSetItemPosition::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&new_position_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(new_position_));
}

CMsgGCSetItemPosition::~CMsgGCSetItemPosition() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCSetItemPosition)
  SharedDtor();
}

void CMsgGCSetItemPosition::SharedDtor() {
}

void CMsgGCSetItemPosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCSetItemPosition::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCSetItemPosition& CMsgGCSetItemPosition::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCSetItemPosition* CMsgGCSetItemPosition::New(::google::protobuf::Arena* arena) const {
  CMsgGCSetItemPosition* n = new CMsgGCSetItemPosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCSetItemPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCSetItemPosition)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&new_position_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(new_position_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCSetItemPosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCSetItemPosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_new_position();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_position_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCSetItemPosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCSetItemPosition)
  return false;
#undef DO_
}

void CMsgGCSetItemPosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCSetItemPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 new_position = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->new_position(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCSetItemPosition)
}

::google::protobuf::uint8* CMsgGCSetItemPosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCSetItemPosition)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 new_position = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->new_position(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCSetItemPosition)
  return target;
}

size_t CMsgGCSetItemPosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCSetItemPosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 new_position = 2;
    if (has_new_position()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_position());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCSetItemPosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCSetItemPosition)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCSetItemPosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCSetItemPosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCSetItemPosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCSetItemPosition)
    MergeFrom(*source);
  }
}

void CMsgGCSetItemPosition::MergeFrom(const CMsgGCSetItemPosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCSetItemPosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      new_position_ = from.new_position_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCSetItemPosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCSetItemPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCSetItemPosition::CopyFrom(const CMsgGCSetItemPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCSetItemPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCSetItemPosition::IsInitialized() const {
  return true;
}

void CMsgGCSetItemPosition::Swap(CMsgGCSetItemPosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCSetItemPosition::InternalSwap(CMsgGCSetItemPosition* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(new_position_, other->new_position_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCSetItemPosition::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCSetItemPosition

// optional uint64 item_id = 1;
bool CMsgGCSetItemPosition::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCSetItemPosition::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCSetItemPosition::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCSetItemPosition::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgGCSetItemPosition::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCSetItemPosition.item_id)
  return item_id_;
}
void CMsgGCSetItemPosition::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCSetItemPosition.item_id)
}

// optional uint32 new_position = 2;
bool CMsgGCSetItemPosition::has_new_position() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCSetItemPosition::set_has_new_position() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCSetItemPosition::clear_has_new_position() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCSetItemPosition::clear_new_position() {
  new_position_ = 0u;
  clear_has_new_position();
}
::google::protobuf::uint32 CMsgGCSetItemPosition::new_position() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCSetItemPosition.new_position)
  return new_position_;
}
void CMsgGCSetItemPosition::set_new_position(::google::protobuf::uint32 value) {
  set_has_new_position();
  new_position_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCSetItemPosition.new_position)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CAttribute_ItemDynamicRecipeComponent::kItemDefFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemQualityFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemFlagsFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kAttributesStringFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemCountFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemsFulfilledFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kItemRarityFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kLootlistFieldNumber;
const int CAttribute_ItemDynamicRecipeComponent::kFulfilledItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CAttribute_ItemDynamicRecipeComponent::CAttribute_ItemDynamicRecipeComponent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CAttribute_ItemDynamicRecipeComponent)
}
CAttribute_ItemDynamicRecipeComponent::CAttribute_ItemDynamicRecipeComponent(const CAttribute_ItemDynamicRecipeComponent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attributes_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_attributes_string()) {
    attributes_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attributes_string_);
  }
  lootlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lootlist()) {
    lootlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lootlist_);
  }
  ::memcpy(&item_def_, &from.item_def_,
    reinterpret_cast<char*>(&fulfilled_item_id_) -
    reinterpret_cast<char*>(&item_def_) + sizeof(fulfilled_item_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CAttribute_ItemDynamicRecipeComponent)
}

void CAttribute_ItemDynamicRecipeComponent::SharedCtor() {
  _cached_size_ = 0;
  attributes_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lootlist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&item_def_, 0, reinterpret_cast<char*>(&fulfilled_item_id_) -
    reinterpret_cast<char*>(&item_def_) + sizeof(fulfilled_item_id_));
}

CAttribute_ItemDynamicRecipeComponent::~CAttribute_ItemDynamicRecipeComponent() {
  // @@protoc_insertion_point(destructor:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  SharedDtor();
}

void CAttribute_ItemDynamicRecipeComponent::SharedDtor() {
  attributes_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lootlist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CAttribute_ItemDynamicRecipeComponent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CAttribute_ItemDynamicRecipeComponent::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CAttribute_ItemDynamicRecipeComponent& CAttribute_ItemDynamicRecipeComponent::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CAttribute_ItemDynamicRecipeComponent* CAttribute_ItemDynamicRecipeComponent::New(::google::protobuf::Arena* arena) const {
  CAttribute_ItemDynamicRecipeComponent* n = new CAttribute_ItemDynamicRecipeComponent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CAttribute_ItemDynamicRecipeComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_attributes_string()) {
      GOOGLE_DCHECK(!attributes_string_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*attributes_string_.UnsafeRawStringPointer())->clear();
    }
    if (has_lootlist()) {
      GOOGLE_DCHECK(!lootlist_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lootlist_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 252u) {
    ::memset(&item_def_, 0, reinterpret_cast<char*>(&item_rarity_) -
      reinterpret_cast<char*>(&item_def_) + sizeof(item_rarity_));
  }
  fulfilled_item_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CAttribute_ItemDynamicRecipeComponent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_def();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_quality = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_quality();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_quality_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_flags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_item_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string attributes_string = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_attributes_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attributes_string().data(), this->attributes_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_item_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 items_fulfilled = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_items_fulfilled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &items_fulfilled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_rarity = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_item_rarity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_rarity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string lootlist = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lootlist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lootlist().data(), this->lootlist().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 fulfilled_item_id = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_fulfilled_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fulfilled_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  return false;
#undef DO_
}

void CAttribute_ItemDynamicRecipeComponent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def(), output);
  }

  // optional uint32 item_quality = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_quality(), output);
  }

  // optional uint32 item_flags = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->item_flags(), output);
  }

  // optional string attributes_string = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attributes_string().data(), this->attributes_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->attributes_string(), output);
  }

  // optional uint32 item_count = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->item_count(), output);
  }

  // optional uint32 items_fulfilled = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->items_fulfilled(), output);
  }

  // optional uint32 item_rarity = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->item_rarity(), output);
  }

  // optional string lootlist = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lootlist().data(), this->lootlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->lootlist(), output);
  }

  // optional uint64 fulfilled_item_id = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->fulfilled_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CAttribute_ItemDynamicRecipeComponent)
}

::google::protobuf::uint8* CAttribute_ItemDynamicRecipeComponent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def(), target);
  }

  // optional uint32 item_quality = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_quality(), target);
  }

  // optional uint32 item_flags = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->item_flags(), target);
  }

  // optional string attributes_string = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attributes_string().data(), this->attributes_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->attributes_string(), target);
  }

  // optional uint32 item_count = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->item_count(), target);
  }

  // optional uint32 items_fulfilled = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->items_fulfilled(), target);
  }

  // optional uint32 item_rarity = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->item_rarity(), target);
  }

  // optional string lootlist = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lootlist().data(), this->lootlist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->lootlist(), target);
  }

  // optional uint64 fulfilled_item_id = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->fulfilled_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  return target;
}

size_t CAttribute_ItemDynamicRecipeComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string attributes_string = 4;
    if (has_attributes_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->attributes_string());
    }

    // optional string lootlist = 8;
    if (has_lootlist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lootlist());
    }

    // optional uint32 item_def = 1;
    if (has_item_def()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def());
    }

    // optional uint32 item_quality = 2;
    if (has_item_quality()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_quality());
    }

    // optional uint32 item_flags = 3;
    if (has_item_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_flags());
    }

    // optional uint32 item_count = 5;
    if (has_item_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_count());
    }

    // optional uint32 items_fulfilled = 6;
    if (has_items_fulfilled()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->items_fulfilled());
    }

    // optional uint32 item_rarity = 7;
    if (has_item_rarity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_rarity());
    }

  }
  // optional uint64 fulfilled_item_id = 9;
  if (has_fulfilled_item_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fulfilled_item_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CAttribute_ItemDynamicRecipeComponent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const CAttribute_ItemDynamicRecipeComponent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CAttribute_ItemDynamicRecipeComponent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CAttribute_ItemDynamicRecipeComponent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CAttribute_ItemDynamicRecipeComponent)
    MergeFrom(*source);
  }
}

void CAttribute_ItemDynamicRecipeComponent::MergeFrom(const CAttribute_ItemDynamicRecipeComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_attributes_string();
      attributes_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.attributes_string_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_lootlist();
      lootlist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lootlist_);
    }
    if (cached_has_bits & 0x00000004u) {
      item_def_ = from.item_def_;
    }
    if (cached_has_bits & 0x00000008u) {
      item_quality_ = from.item_quality_;
    }
    if (cached_has_bits & 0x00000010u) {
      item_flags_ = from.item_flags_;
    }
    if (cached_has_bits & 0x00000020u) {
      item_count_ = from.item_count_;
    }
    if (cached_has_bits & 0x00000040u) {
      items_fulfilled_ = from.items_fulfilled_;
    }
    if (cached_has_bits & 0x00000080u) {
      item_rarity_ = from.item_rarity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_fulfilled_item_id(from.fulfilled_item_id());
  }
}

void CAttribute_ItemDynamicRecipeComponent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAttribute_ItemDynamicRecipeComponent::CopyFrom(const CAttribute_ItemDynamicRecipeComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CAttribute_ItemDynamicRecipeComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAttribute_ItemDynamicRecipeComponent::IsInitialized() const {
  return true;
}

void CAttribute_ItemDynamicRecipeComponent::Swap(CAttribute_ItemDynamicRecipeComponent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAttribute_ItemDynamicRecipeComponent::InternalSwap(CAttribute_ItemDynamicRecipeComponent* other) {
  attributes_string_.Swap(&other->attributes_string_);
  lootlist_.Swap(&other->lootlist_);
  std::swap(item_def_, other->item_def_);
  std::swap(item_quality_, other->item_quality_);
  std::swap(item_flags_, other->item_flags_);
  std::swap(item_count_, other->item_count_);
  std::swap(items_fulfilled_, other->items_fulfilled_);
  std::swap(item_rarity_, other->item_rarity_);
  std::swap(fulfilled_item_id_, other->fulfilled_item_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CAttribute_ItemDynamicRecipeComponent::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CAttribute_ItemDynamicRecipeComponent

// optional uint32 item_def = 1;
bool CAttribute_ItemDynamicRecipeComponent::has_item_def() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CAttribute_ItemDynamicRecipeComponent::set_has_item_def() {
  _has_bits_[0] |= 0x00000004u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000004u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
::google::protobuf::uint32 CAttribute_ItemDynamicRecipeComponent::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CAttribute_ItemDynamicRecipeComponent.item_def)
  return item_def_;
}
void CAttribute_ItemDynamicRecipeComponent::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CAttribute_ItemDynamicRecipeComponent.item_def)
}

// optional uint32 item_quality = 2;
bool CAttribute_ItemDynamicRecipeComponent::has_item_quality() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CAttribute_ItemDynamicRecipeComponent::set_has_item_quality() {
  _has_bits_[0] |= 0x00000008u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_has_item_quality() {
  _has_bits_[0] &= ~0x00000008u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_item_quality() {
  item_quality_ = 0u;
  clear_has_item_quality();
}
::google::protobuf::uint32 CAttribute_ItemDynamicRecipeComponent::item_quality() const {
  // @@protoc_insertion_point(field_get:proto.dota.CAttribute_ItemDynamicRecipeComponent.item_quality)
  return item_quality_;
}
void CAttribute_ItemDynamicRecipeComponent::set_item_quality(::google::protobuf::uint32 value) {
  set_has_item_quality();
  item_quality_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CAttribute_ItemDynamicRecipeComponent.item_quality)
}

// optional uint32 item_flags = 3;
bool CAttribute_ItemDynamicRecipeComponent::has_item_flags() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CAttribute_ItemDynamicRecipeComponent::set_has_item_flags() {
  _has_bits_[0] |= 0x00000010u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_has_item_flags() {
  _has_bits_[0] &= ~0x00000010u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_item_flags() {
  item_flags_ = 0u;
  clear_has_item_flags();
}
::google::protobuf::uint32 CAttribute_ItemDynamicRecipeComponent::item_flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CAttribute_ItemDynamicRecipeComponent.item_flags)
  return item_flags_;
}
void CAttribute_ItemDynamicRecipeComponent::set_item_flags(::google::protobuf::uint32 value) {
  set_has_item_flags();
  item_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CAttribute_ItemDynamicRecipeComponent.item_flags)
}

// optional string attributes_string = 4;
bool CAttribute_ItemDynamicRecipeComponent::has_attributes_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CAttribute_ItemDynamicRecipeComponent::set_has_attributes_string() {
  _has_bits_[0] |= 0x00000001u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_has_attributes_string() {
  _has_bits_[0] &= ~0x00000001u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_attributes_string() {
  attributes_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attributes_string();
}
const ::std::string& CAttribute_ItemDynamicRecipeComponent::attributes_string() const {
  // @@protoc_insertion_point(field_get:proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string)
  return attributes_string_.GetNoArena();
}
void CAttribute_ItemDynamicRecipeComponent::set_attributes_string(const ::std::string& value) {
  set_has_attributes_string();
  attributes_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string)
}
#if LANG_CXX11
void CAttribute_ItemDynamicRecipeComponent::set_attributes_string(::std::string&& value) {
  set_has_attributes_string();
  attributes_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string)
}
#endif
void CAttribute_ItemDynamicRecipeComponent::set_attributes_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attributes_string();
  attributes_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string)
}
void CAttribute_ItemDynamicRecipeComponent::set_attributes_string(const char* value, size_t size) {
  set_has_attributes_string();
  attributes_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string)
}
::std::string* CAttribute_ItemDynamicRecipeComponent::mutable_attributes_string() {
  set_has_attributes_string();
  // @@protoc_insertion_point(field_mutable:proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string)
  return attributes_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CAttribute_ItemDynamicRecipeComponent::release_attributes_string() {
  // @@protoc_insertion_point(field_release:proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string)
  clear_has_attributes_string();
  return attributes_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CAttribute_ItemDynamicRecipeComponent::set_allocated_attributes_string(::std::string* attributes_string) {
  if (attributes_string != NULL) {
    set_has_attributes_string();
  } else {
    clear_has_attributes_string();
  }
  attributes_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attributes_string);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CAttribute_ItemDynamicRecipeComponent.attributes_string)
}

// optional uint32 item_count = 5;
bool CAttribute_ItemDynamicRecipeComponent::has_item_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CAttribute_ItemDynamicRecipeComponent::set_has_item_count() {
  _has_bits_[0] |= 0x00000020u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_has_item_count() {
  _has_bits_[0] &= ~0x00000020u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_item_count() {
  item_count_ = 0u;
  clear_has_item_count();
}
::google::protobuf::uint32 CAttribute_ItemDynamicRecipeComponent::item_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CAttribute_ItemDynamicRecipeComponent.item_count)
  return item_count_;
}
void CAttribute_ItemDynamicRecipeComponent::set_item_count(::google::protobuf::uint32 value) {
  set_has_item_count();
  item_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CAttribute_ItemDynamicRecipeComponent.item_count)
}

// optional uint32 items_fulfilled = 6;
bool CAttribute_ItemDynamicRecipeComponent::has_items_fulfilled() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CAttribute_ItemDynamicRecipeComponent::set_has_items_fulfilled() {
  _has_bits_[0] |= 0x00000040u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_has_items_fulfilled() {
  _has_bits_[0] &= ~0x00000040u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_items_fulfilled() {
  items_fulfilled_ = 0u;
  clear_has_items_fulfilled();
}
::google::protobuf::uint32 CAttribute_ItemDynamicRecipeComponent::items_fulfilled() const {
  // @@protoc_insertion_point(field_get:proto.dota.CAttribute_ItemDynamicRecipeComponent.items_fulfilled)
  return items_fulfilled_;
}
void CAttribute_ItemDynamicRecipeComponent::set_items_fulfilled(::google::protobuf::uint32 value) {
  set_has_items_fulfilled();
  items_fulfilled_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CAttribute_ItemDynamicRecipeComponent.items_fulfilled)
}

// optional uint32 item_rarity = 7;
bool CAttribute_ItemDynamicRecipeComponent::has_item_rarity() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CAttribute_ItemDynamicRecipeComponent::set_has_item_rarity() {
  _has_bits_[0] |= 0x00000080u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_has_item_rarity() {
  _has_bits_[0] &= ~0x00000080u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_item_rarity() {
  item_rarity_ = 0u;
  clear_has_item_rarity();
}
::google::protobuf::uint32 CAttribute_ItemDynamicRecipeComponent::item_rarity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CAttribute_ItemDynamicRecipeComponent.item_rarity)
  return item_rarity_;
}
void CAttribute_ItemDynamicRecipeComponent::set_item_rarity(::google::protobuf::uint32 value) {
  set_has_item_rarity();
  item_rarity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CAttribute_ItemDynamicRecipeComponent.item_rarity)
}

// optional string lootlist = 8;
bool CAttribute_ItemDynamicRecipeComponent::has_lootlist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CAttribute_ItemDynamicRecipeComponent::set_has_lootlist() {
  _has_bits_[0] |= 0x00000002u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_has_lootlist() {
  _has_bits_[0] &= ~0x00000002u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_lootlist() {
  lootlist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lootlist();
}
const ::std::string& CAttribute_ItemDynamicRecipeComponent::lootlist() const {
  // @@protoc_insertion_point(field_get:proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist)
  return lootlist_.GetNoArena();
}
void CAttribute_ItemDynamicRecipeComponent::set_lootlist(const ::std::string& value) {
  set_has_lootlist();
  lootlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist)
}
#if LANG_CXX11
void CAttribute_ItemDynamicRecipeComponent::set_lootlist(::std::string&& value) {
  set_has_lootlist();
  lootlist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist)
}
#endif
void CAttribute_ItemDynamicRecipeComponent::set_lootlist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lootlist();
  lootlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist)
}
void CAttribute_ItemDynamicRecipeComponent::set_lootlist(const char* value, size_t size) {
  set_has_lootlist();
  lootlist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist)
}
::std::string* CAttribute_ItemDynamicRecipeComponent::mutable_lootlist() {
  set_has_lootlist();
  // @@protoc_insertion_point(field_mutable:proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist)
  return lootlist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CAttribute_ItemDynamicRecipeComponent::release_lootlist() {
  // @@protoc_insertion_point(field_release:proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist)
  clear_has_lootlist();
  return lootlist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CAttribute_ItemDynamicRecipeComponent::set_allocated_lootlist(::std::string* lootlist) {
  if (lootlist != NULL) {
    set_has_lootlist();
  } else {
    clear_has_lootlist();
  }
  lootlist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lootlist);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CAttribute_ItemDynamicRecipeComponent.lootlist)
}

// optional uint64 fulfilled_item_id = 9;
bool CAttribute_ItemDynamicRecipeComponent::has_fulfilled_item_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CAttribute_ItemDynamicRecipeComponent::set_has_fulfilled_item_id() {
  _has_bits_[0] |= 0x00000100u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_has_fulfilled_item_id() {
  _has_bits_[0] &= ~0x00000100u;
}
void CAttribute_ItemDynamicRecipeComponent::clear_fulfilled_item_id() {
  fulfilled_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_fulfilled_item_id();
}
::google::protobuf::uint64 CAttribute_ItemDynamicRecipeComponent::fulfilled_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CAttribute_ItemDynamicRecipeComponent.fulfilled_item_id)
  return fulfilled_item_id_;
}
void CAttribute_ItemDynamicRecipeComponent::set_fulfilled_item_id(::google::protobuf::uint64 value) {
  set_has_fulfilled_item_id();
  fulfilled_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CAttribute_ItemDynamicRecipeComponent.fulfilled_item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket::kItemIdFieldNumber;
const int CProtoItemSocket::kAttrDefIndexFieldNumber;
const int CProtoItemSocket::kRequiredTypeFieldNumber;
const int CProtoItemSocket::kRequiredHeroFieldNumber;
const int CProtoItemSocket::kGemDefIndexFieldNumber;
const int CProtoItemSocket::kNotTradableFieldNumber;
const int CProtoItemSocket::kRequiredItemSlotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket::CProtoItemSocket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket)
}
CProtoItemSocket::CProtoItemSocket(const CProtoItemSocket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  required_hero_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_required_hero()) {
    required_hero_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.required_hero_);
  }
  required_item_slot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_required_item_slot()) {
    required_item_slot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.required_item_slot_);
  }
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&not_tradable_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(not_tradable_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket)
}

void CProtoItemSocket::SharedCtor() {
  _cached_size_ = 0;
  required_hero_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  required_item_slot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&not_tradable_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(not_tradable_));
}

CProtoItemSocket::~CProtoItemSocket() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket)
  SharedDtor();
}

void CProtoItemSocket::SharedDtor() {
  required_hero_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  required_item_slot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CProtoItemSocket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CProtoItemSocket& CProtoItemSocket::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProtoItemSocket* CProtoItemSocket::New(::google::protobuf::Arena* arena) const {
  CProtoItemSocket* n = new CProtoItemSocket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProtoItemSocket::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_required_hero()) {
      GOOGLE_DCHECK(!required_hero_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*required_hero_.UnsafeRawStringPointer())->clear();
    }
    if (has_required_item_slot()) {
      GOOGLE_DCHECK(!required_item_slot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*required_item_slot_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 124u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&not_tradable_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(not_tradable_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProtoItemSocket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 attr_def_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_attr_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &attr_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 required_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_required_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &required_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string required_hero = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_required_hero()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_hero().data(), this->required_hero().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CProtoItemSocket.required_hero");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 gem_def_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_gem_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &gem_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool not_tradable = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_not_tradable();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &not_tradable_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string required_item_slot = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_required_item_slot()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_item_slot().data(), this->required_item_slot().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CProtoItemSocket.required_item_slot");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket)
  return false;
#undef DO_
}

void CProtoItemSocket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 attr_def_index = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->attr_def_index(), output);
  }

  // optional uint32 required_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->required_type(), output);
  }

  // optional string required_hero = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_hero().data(), this->required_hero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CProtoItemSocket.required_hero");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->required_hero(), output);
  }

  // optional uint32 gem_def_index = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->gem_def_index(), output);
  }

  // optional bool not_tradable = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->not_tradable(), output);
  }

  // optional string required_item_slot = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_item_slot().data(), this->required_item_slot().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CProtoItemSocket.required_item_slot");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->required_item_slot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket)
}

::google::protobuf::uint8* CProtoItemSocket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 attr_def_index = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->attr_def_index(), target);
  }

  // optional uint32 required_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->required_type(), target);
  }

  // optional string required_hero = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_hero().data(), this->required_hero().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CProtoItemSocket.required_hero");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->required_hero(), target);
  }

  // optional uint32 gem_def_index = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->gem_def_index(), target);
  }

  // optional bool not_tradable = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->not_tradable(), target);
  }

  // optional string required_item_slot = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_item_slot().data(), this->required_item_slot().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CProtoItemSocket.required_item_slot");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->required_item_slot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket)
  return target;
}

size_t CProtoItemSocket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string required_hero = 4;
    if (has_required_hero()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->required_hero());
    }

    // optional string required_item_slot = 7;
    if (has_required_item_slot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->required_item_slot());
    }

    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 attr_def_index = 2;
    if (has_attr_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->attr_def_index());
    }

    // optional uint32 required_type = 3;
    if (has_required_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->required_type());
    }

    // optional uint32 gem_def_index = 5;
    if (has_gem_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->gem_def_index());
    }

    // optional bool not_tradable = 6;
    if (has_not_tradable()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProtoItemSocket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket)
    MergeFrom(*source);
  }
}

void CProtoItemSocket::MergeFrom(const CProtoItemSocket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_required_hero();
      required_hero_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.required_hero_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_required_item_slot();
      required_item_slot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.required_item_slot_);
    }
    if (cached_has_bits & 0x00000004u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      attr_def_index_ = from.attr_def_index_;
    }
    if (cached_has_bits & 0x00000010u) {
      required_type_ = from.required_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      gem_def_index_ = from.gem_def_index_;
    }
    if (cached_has_bits & 0x00000040u) {
      not_tradable_ = from.not_tradable_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket::CopyFrom(const CProtoItemSocket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket::IsInitialized() const {
  return true;
}

void CProtoItemSocket::Swap(CProtoItemSocket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket::InternalSwap(CProtoItemSocket* other) {
  required_hero_.Swap(&other->required_hero_);
  required_item_slot_.Swap(&other->required_item_slot_);
  std::swap(item_id_, other->item_id_);
  std::swap(attr_def_index_, other->attr_def_index_);
  std::swap(required_type_, other->required_type_);
  std::swap(gem_def_index_, other->gem_def_index_);
  std::swap(not_tradable_, other->not_tradable_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProtoItemSocket::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProtoItemSocket

// optional uint64 item_id = 1;
bool CProtoItemSocket::has_item_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CProtoItemSocket::set_has_item_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CProtoItemSocket::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CProtoItemSocket::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CProtoItemSocket::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket.item_id)
  return item_id_;
}
void CProtoItemSocket::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket.item_id)
}

// optional uint32 attr_def_index = 2;
bool CProtoItemSocket::has_attr_def_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CProtoItemSocket::set_has_attr_def_index() {
  _has_bits_[0] |= 0x00000008u;
}
void CProtoItemSocket::clear_has_attr_def_index() {
  _has_bits_[0] &= ~0x00000008u;
}
void CProtoItemSocket::clear_attr_def_index() {
  attr_def_index_ = 0u;
  clear_has_attr_def_index();
}
::google::protobuf::uint32 CProtoItemSocket::attr_def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket.attr_def_index)
  return attr_def_index_;
}
void CProtoItemSocket::set_attr_def_index(::google::protobuf::uint32 value) {
  set_has_attr_def_index();
  attr_def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket.attr_def_index)
}

// optional uint32 required_type = 3;
bool CProtoItemSocket::has_required_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CProtoItemSocket::set_has_required_type() {
  _has_bits_[0] |= 0x00000010u;
}
void CProtoItemSocket::clear_has_required_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void CProtoItemSocket::clear_required_type() {
  required_type_ = 0u;
  clear_has_required_type();
}
::google::protobuf::uint32 CProtoItemSocket::required_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket.required_type)
  return required_type_;
}
void CProtoItemSocket::set_required_type(::google::protobuf::uint32 value) {
  set_has_required_type();
  required_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket.required_type)
}

// optional string required_hero = 4;
bool CProtoItemSocket::has_required_hero() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProtoItemSocket::set_has_required_hero() {
  _has_bits_[0] |= 0x00000001u;
}
void CProtoItemSocket::clear_has_required_hero() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProtoItemSocket::clear_required_hero() {
  required_hero_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_required_hero();
}
const ::std::string& CProtoItemSocket::required_hero() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket.required_hero)
  return required_hero_.GetNoArena();
}
void CProtoItemSocket::set_required_hero(const ::std::string& value) {
  set_has_required_hero();
  required_hero_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket.required_hero)
}
#if LANG_CXX11
void CProtoItemSocket::set_required_hero(::std::string&& value) {
  set_has_required_hero();
  required_hero_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CProtoItemSocket.required_hero)
}
#endif
void CProtoItemSocket::set_required_hero(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_required_hero();
  required_hero_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CProtoItemSocket.required_hero)
}
void CProtoItemSocket::set_required_hero(const char* value, size_t size) {
  set_has_required_hero();
  required_hero_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CProtoItemSocket.required_hero)
}
::std::string* CProtoItemSocket::mutable_required_hero() {
  set_has_required_hero();
  // @@protoc_insertion_point(field_mutable:proto.dota.CProtoItemSocket.required_hero)
  return required_hero_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CProtoItemSocket::release_required_hero() {
  // @@protoc_insertion_point(field_release:proto.dota.CProtoItemSocket.required_hero)
  clear_has_required_hero();
  return required_hero_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CProtoItemSocket::set_allocated_required_hero(::std::string* required_hero) {
  if (required_hero != NULL) {
    set_has_required_hero();
  } else {
    clear_has_required_hero();
  }
  required_hero_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), required_hero);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CProtoItemSocket.required_hero)
}

// optional uint32 gem_def_index = 5;
bool CProtoItemSocket::has_gem_def_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CProtoItemSocket::set_has_gem_def_index() {
  _has_bits_[0] |= 0x00000020u;
}
void CProtoItemSocket::clear_has_gem_def_index() {
  _has_bits_[0] &= ~0x00000020u;
}
void CProtoItemSocket::clear_gem_def_index() {
  gem_def_index_ = 0u;
  clear_has_gem_def_index();
}
::google::protobuf::uint32 CProtoItemSocket::gem_def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket.gem_def_index)
  return gem_def_index_;
}
void CProtoItemSocket::set_gem_def_index(::google::protobuf::uint32 value) {
  set_has_gem_def_index();
  gem_def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket.gem_def_index)
}

// optional bool not_tradable = 6;
bool CProtoItemSocket::has_not_tradable() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CProtoItemSocket::set_has_not_tradable() {
  _has_bits_[0] |= 0x00000040u;
}
void CProtoItemSocket::clear_has_not_tradable() {
  _has_bits_[0] &= ~0x00000040u;
}
void CProtoItemSocket::clear_not_tradable() {
  not_tradable_ = false;
  clear_has_not_tradable();
}
bool CProtoItemSocket::not_tradable() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket.not_tradable)
  return not_tradable_;
}
void CProtoItemSocket::set_not_tradable(bool value) {
  set_has_not_tradable();
  not_tradable_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket.not_tradable)
}

// optional string required_item_slot = 7;
bool CProtoItemSocket::has_required_item_slot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProtoItemSocket::set_has_required_item_slot() {
  _has_bits_[0] |= 0x00000002u;
}
void CProtoItemSocket::clear_has_required_item_slot() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProtoItemSocket::clear_required_item_slot() {
  required_item_slot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_required_item_slot();
}
const ::std::string& CProtoItemSocket::required_item_slot() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket.required_item_slot)
  return required_item_slot_.GetNoArena();
}
void CProtoItemSocket::set_required_item_slot(const ::std::string& value) {
  set_has_required_item_slot();
  required_item_slot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket.required_item_slot)
}
#if LANG_CXX11
void CProtoItemSocket::set_required_item_slot(::std::string&& value) {
  set_has_required_item_slot();
  required_item_slot_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CProtoItemSocket.required_item_slot)
}
#endif
void CProtoItemSocket::set_required_item_slot(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_required_item_slot();
  required_item_slot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CProtoItemSocket.required_item_slot)
}
void CProtoItemSocket::set_required_item_slot(const char* value, size_t size) {
  set_has_required_item_slot();
  required_item_slot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CProtoItemSocket.required_item_slot)
}
::std::string* CProtoItemSocket::mutable_required_item_slot() {
  set_has_required_item_slot();
  // @@protoc_insertion_point(field_mutable:proto.dota.CProtoItemSocket.required_item_slot)
  return required_item_slot_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CProtoItemSocket::release_required_item_slot() {
  // @@protoc_insertion_point(field_release:proto.dota.CProtoItemSocket.required_item_slot)
  clear_has_required_item_slot();
  return required_item_slot_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CProtoItemSocket::set_allocated_required_item_slot(::std::string* required_item_slot) {
  if (required_item_slot != NULL) {
    set_has_required_item_slot();
  } else {
    clear_has_required_item_slot();
  }
  required_item_slot_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), required_item_slot);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CProtoItemSocket.required_item_slot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_Empty::kSocketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_Empty::CProtoItemSocket_Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_Empty)
}
CProtoItemSocket_Empty::CProtoItemSocket_Empty(const CProtoItemSocket_Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_Empty)
}

void CProtoItemSocket_Empty::SharedCtor() {
  _cached_size_ = 0;
  socket_ = NULL;
}

CProtoItemSocket_Empty::~CProtoItemSocket_Empty() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_Empty)
  SharedDtor();
}

void CProtoItemSocket_Empty::SharedDtor() {
  if (this != internal_default_instance()) {
    delete socket_;
  }
}

void CProtoItemSocket_Empty::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_Empty::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CProtoItemSocket_Empty& CProtoItemSocket_Empty::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProtoItemSocket_Empty* CProtoItemSocket_Empty::New(::google::protobuf::Arena* arena) const {
  CProtoItemSocket_Empty* n = new CProtoItemSocket_Empty;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProtoItemSocket_Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_Empty)
  if (has_socket()) {
    GOOGLE_DCHECK(socket_ != NULL);
    socket_->::proto::dota::CProtoItemSocket::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProtoItemSocket_Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_Empty)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_Empty)
  return false;
#undef DO_
}

void CProtoItemSocket_Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->socket_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_Empty)
}

::google::protobuf::uint8* CProtoItemSocket_Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->socket_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_Empty)
  return target;
}

size_t CProtoItemSocket_Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_Empty)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (has_socket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->socket_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProtoItemSocket_Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_Empty)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Empty::MergeFrom(const CProtoItemSocket_Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_socket()) {
    mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
  }
}

void CProtoItemSocket_Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Empty::CopyFrom(const CProtoItemSocket_Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Empty::IsInitialized() const {
  return true;
}

void CProtoItemSocket_Empty::Swap(CProtoItemSocket_Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_Empty::InternalSwap(CProtoItemSocket_Empty* other) {
  std::swap(socket_, other->socket_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProtoItemSocket_Empty::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProtoItemSocket_Empty

// optional .proto.dota.CProtoItemSocket socket = 1;
bool CProtoItemSocket_Empty::has_socket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProtoItemSocket_Empty::set_has_socket() {
  _has_bits_[0] |= 0x00000001u;
}
void CProtoItemSocket_Empty::clear_has_socket() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProtoItemSocket_Empty::clear_socket() {
  if (socket_ != NULL) socket_->::proto::dota::CProtoItemSocket::Clear();
  clear_has_socket();
}
const ::proto::dota::CProtoItemSocket& CProtoItemSocket_Empty::socket() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Empty.socket)
  return socket_ != NULL ? *socket_
                         : *::proto::dota::CProtoItemSocket::internal_default_instance();
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_Empty::mutable_socket() {
  set_has_socket();
  if (socket_ == NULL) {
    socket_ = new ::proto::dota::CProtoItemSocket;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CProtoItemSocket_Empty.socket)
  return socket_;
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_Empty::release_socket() {
  // @@protoc_insertion_point(field_release:proto.dota.CProtoItemSocket_Empty.socket)
  clear_has_socket();
  ::proto::dota::CProtoItemSocket* temp = socket_;
  socket_ = NULL;
  return temp;
}
void CProtoItemSocket_Empty::set_allocated_socket(::proto::dota::CProtoItemSocket* socket) {
  delete socket_;
  socket_ = socket;
  if (socket) {
    set_has_socket();
  } else {
    clear_has_socket();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CProtoItemSocket_Empty.socket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_Effect::kSocketFieldNumber;
const int CProtoItemSocket_Effect::kEffectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_Effect::CProtoItemSocket_Effect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_Effect)
}
CProtoItemSocket_Effect::CProtoItemSocket_Effect(const CProtoItemSocket_Effect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = NULL;
  }
  effect_ = from.effect_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_Effect)
}

void CProtoItemSocket_Effect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&socket_, 0, reinterpret_cast<char*>(&effect_) -
    reinterpret_cast<char*>(&socket_) + sizeof(effect_));
}

CProtoItemSocket_Effect::~CProtoItemSocket_Effect() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_Effect)
  SharedDtor();
}

void CProtoItemSocket_Effect::SharedDtor() {
  if (this != internal_default_instance()) {
    delete socket_;
  }
}

void CProtoItemSocket_Effect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_Effect::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CProtoItemSocket_Effect& CProtoItemSocket_Effect::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProtoItemSocket_Effect* CProtoItemSocket_Effect::New(::google::protobuf::Arena* arena) const {
  CProtoItemSocket_Effect* n = new CProtoItemSocket_Effect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProtoItemSocket_Effect::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_Effect)
  if (has_socket()) {
    GOOGLE_DCHECK(socket_ != NULL);
    socket_->::proto::dota::CProtoItemSocket::Clear();
  }
  effect_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProtoItemSocket_Effect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_Effect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 effect = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_effect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &effect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_Effect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_Effect)
  return false;
#undef DO_
}

void CProtoItemSocket_Effect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_Effect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->socket_, output);
  }

  // optional uint32 effect = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->effect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_Effect)
}

::google::protobuf::uint8* CProtoItemSocket_Effect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_Effect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->socket_, deterministic, target);
  }

  // optional uint32 effect = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->effect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_Effect)
  return target;
}

size_t CProtoItemSocket_Effect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_Effect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->socket_);
    }

    // optional uint32 effect = 2;
    if (has_effect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->effect());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_Effect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_Effect)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_Effect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProtoItemSocket_Effect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_Effect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_Effect)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Effect::MergeFrom(const CProtoItemSocket_Effect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_Effect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000002u) {
      effect_ = from.effect_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_Effect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_Effect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Effect::CopyFrom(const CProtoItemSocket_Effect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_Effect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Effect::IsInitialized() const {
  return true;
}

void CProtoItemSocket_Effect::Swap(CProtoItemSocket_Effect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_Effect::InternalSwap(CProtoItemSocket_Effect* other) {
  std::swap(socket_, other->socket_);
  std::swap(effect_, other->effect_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProtoItemSocket_Effect::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProtoItemSocket_Effect

// optional .proto.dota.CProtoItemSocket socket = 1;
bool CProtoItemSocket_Effect::has_socket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProtoItemSocket_Effect::set_has_socket() {
  _has_bits_[0] |= 0x00000001u;
}
void CProtoItemSocket_Effect::clear_has_socket() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProtoItemSocket_Effect::clear_socket() {
  if (socket_ != NULL) socket_->::proto::dota::CProtoItemSocket::Clear();
  clear_has_socket();
}
const ::proto::dota::CProtoItemSocket& CProtoItemSocket_Effect::socket() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Effect.socket)
  return socket_ != NULL ? *socket_
                         : *::proto::dota::CProtoItemSocket::internal_default_instance();
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_Effect::mutable_socket() {
  set_has_socket();
  if (socket_ == NULL) {
    socket_ = new ::proto::dota::CProtoItemSocket;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CProtoItemSocket_Effect.socket)
  return socket_;
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_Effect::release_socket() {
  // @@protoc_insertion_point(field_release:proto.dota.CProtoItemSocket_Effect.socket)
  clear_has_socket();
  ::proto::dota::CProtoItemSocket* temp = socket_;
  socket_ = NULL;
  return temp;
}
void CProtoItemSocket_Effect::set_allocated_socket(::proto::dota::CProtoItemSocket* socket) {
  delete socket_;
  socket_ = socket;
  if (socket) {
    set_has_socket();
  } else {
    clear_has_socket();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CProtoItemSocket_Effect.socket)
}

// optional uint32 effect = 2;
bool CProtoItemSocket_Effect::has_effect() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProtoItemSocket_Effect::set_has_effect() {
  _has_bits_[0] |= 0x00000002u;
}
void CProtoItemSocket_Effect::clear_has_effect() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProtoItemSocket_Effect::clear_effect() {
  effect_ = 0u;
  clear_has_effect();
}
::google::protobuf::uint32 CProtoItemSocket_Effect::effect() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Effect.effect)
  return effect_;
}
void CProtoItemSocket_Effect::set_effect(::google::protobuf::uint32 value) {
  set_has_effect();
  effect_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Effect.effect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_Color::kSocketFieldNumber;
const int CProtoItemSocket_Color::kRedFieldNumber;
const int CProtoItemSocket_Color::kGreenFieldNumber;
const int CProtoItemSocket_Color::kBlueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_Color::CProtoItemSocket_Color()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_Color)
}
CProtoItemSocket_Color::CProtoItemSocket_Color(const CProtoItemSocket_Color& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = NULL;
  }
  ::memcpy(&red_, &from.red_,
    reinterpret_cast<char*>(&blue_) -
    reinterpret_cast<char*>(&red_) + sizeof(blue_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_Color)
}

void CProtoItemSocket_Color::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&socket_, 0, reinterpret_cast<char*>(&blue_) -
    reinterpret_cast<char*>(&socket_) + sizeof(blue_));
}

CProtoItemSocket_Color::~CProtoItemSocket_Color() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_Color)
  SharedDtor();
}

void CProtoItemSocket_Color::SharedDtor() {
  if (this != internal_default_instance()) {
    delete socket_;
  }
}

void CProtoItemSocket_Color::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_Color::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CProtoItemSocket_Color& CProtoItemSocket_Color::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProtoItemSocket_Color* CProtoItemSocket_Color::New(::google::protobuf::Arena* arena) const {
  CProtoItemSocket_Color* n = new CProtoItemSocket_Color;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProtoItemSocket_Color::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_Color)
  if (has_socket()) {
    GOOGLE_DCHECK(socket_ != NULL);
    socket_->::proto::dota::CProtoItemSocket::Clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&red_, 0, reinterpret_cast<char*>(&blue_) -
      reinterpret_cast<char*>(&red_) + sizeof(blue_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProtoItemSocket_Color::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_Color)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 red = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_red();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &red_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 green = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_green();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &green_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 blue = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_blue();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_Color)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_Color)
  return false;
#undef DO_
}

void CProtoItemSocket_Color::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_Color)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->socket_, output);
  }

  // optional uint32 red = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->red(), output);
  }

  // optional uint32 green = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->green(), output);
  }

  // optional uint32 blue = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->blue(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_Color)
}

::google::protobuf::uint8* CProtoItemSocket_Color::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_Color)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->socket_, deterministic, target);
  }

  // optional uint32 red = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->red(), target);
  }

  // optional uint32 green = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->green(), target);
  }

  // optional uint32 blue = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->blue(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_Color)
  return target;
}

size_t CProtoItemSocket_Color::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_Color)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->socket_);
    }

    // optional uint32 red = 2;
    if (has_red()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->red());
    }

    // optional uint32 green = 3;
    if (has_green()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->green());
    }

    // optional uint32 blue = 4;
    if (has_blue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->blue());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_Color::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_Color)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_Color* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProtoItemSocket_Color>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_Color)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_Color)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Color::MergeFrom(const CProtoItemSocket_Color& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_Color)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000002u) {
      red_ = from.red_;
    }
    if (cached_has_bits & 0x00000004u) {
      green_ = from.green_;
    }
    if (cached_has_bits & 0x00000008u) {
      blue_ = from.blue_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_Color::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Color::CopyFrom(const CProtoItemSocket_Color& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_Color)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Color::IsInitialized() const {
  return true;
}

void CProtoItemSocket_Color::Swap(CProtoItemSocket_Color* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_Color::InternalSwap(CProtoItemSocket_Color* other) {
  std::swap(socket_, other->socket_);
  std::swap(red_, other->red_);
  std::swap(green_, other->green_);
  std::swap(blue_, other->blue_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProtoItemSocket_Color::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProtoItemSocket_Color

// optional .proto.dota.CProtoItemSocket socket = 1;
bool CProtoItemSocket_Color::has_socket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProtoItemSocket_Color::set_has_socket() {
  _has_bits_[0] |= 0x00000001u;
}
void CProtoItemSocket_Color::clear_has_socket() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProtoItemSocket_Color::clear_socket() {
  if (socket_ != NULL) socket_->::proto::dota::CProtoItemSocket::Clear();
  clear_has_socket();
}
const ::proto::dota::CProtoItemSocket& CProtoItemSocket_Color::socket() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Color.socket)
  return socket_ != NULL ? *socket_
                         : *::proto::dota::CProtoItemSocket::internal_default_instance();
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_Color::mutable_socket() {
  set_has_socket();
  if (socket_ == NULL) {
    socket_ = new ::proto::dota::CProtoItemSocket;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CProtoItemSocket_Color.socket)
  return socket_;
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_Color::release_socket() {
  // @@protoc_insertion_point(field_release:proto.dota.CProtoItemSocket_Color.socket)
  clear_has_socket();
  ::proto::dota::CProtoItemSocket* temp = socket_;
  socket_ = NULL;
  return temp;
}
void CProtoItemSocket_Color::set_allocated_socket(::proto::dota::CProtoItemSocket* socket) {
  delete socket_;
  socket_ = socket;
  if (socket) {
    set_has_socket();
  } else {
    clear_has_socket();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CProtoItemSocket_Color.socket)
}

// optional uint32 red = 2;
bool CProtoItemSocket_Color::has_red() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProtoItemSocket_Color::set_has_red() {
  _has_bits_[0] |= 0x00000002u;
}
void CProtoItemSocket_Color::clear_has_red() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProtoItemSocket_Color::clear_red() {
  red_ = 0u;
  clear_has_red();
}
::google::protobuf::uint32 CProtoItemSocket_Color::red() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Color.red)
  return red_;
}
void CProtoItemSocket_Color::set_red(::google::protobuf::uint32 value) {
  set_has_red();
  red_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Color.red)
}

// optional uint32 green = 3;
bool CProtoItemSocket_Color::has_green() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CProtoItemSocket_Color::set_has_green() {
  _has_bits_[0] |= 0x00000004u;
}
void CProtoItemSocket_Color::clear_has_green() {
  _has_bits_[0] &= ~0x00000004u;
}
void CProtoItemSocket_Color::clear_green() {
  green_ = 0u;
  clear_has_green();
}
::google::protobuf::uint32 CProtoItemSocket_Color::green() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Color.green)
  return green_;
}
void CProtoItemSocket_Color::set_green(::google::protobuf::uint32 value) {
  set_has_green();
  green_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Color.green)
}

// optional uint32 blue = 4;
bool CProtoItemSocket_Color::has_blue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CProtoItemSocket_Color::set_has_blue() {
  _has_bits_[0] |= 0x00000008u;
}
void CProtoItemSocket_Color::clear_has_blue() {
  _has_bits_[0] &= ~0x00000008u;
}
void CProtoItemSocket_Color::clear_blue() {
  blue_ = 0u;
  clear_has_blue();
}
::google::protobuf::uint32 CProtoItemSocket_Color::blue() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Color.blue)
  return blue_;
}
void CProtoItemSocket_Color::set_blue(::google::protobuf::uint32 value) {
  set_has_blue();
  blue_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Color.blue)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_Strange::kSocketFieldNumber;
const int CProtoItemSocket_Strange::kStrangeTypeFieldNumber;
const int CProtoItemSocket_Strange::kStrangeValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_Strange::CProtoItemSocket_Strange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_Strange)
}
CProtoItemSocket_Strange::CProtoItemSocket_Strange(const CProtoItemSocket_Strange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = NULL;
  }
  ::memcpy(&strange_type_, &from.strange_type_,
    reinterpret_cast<char*>(&strange_value_) -
    reinterpret_cast<char*>(&strange_type_) + sizeof(strange_value_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_Strange)
}

void CProtoItemSocket_Strange::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&socket_, 0, reinterpret_cast<char*>(&strange_value_) -
    reinterpret_cast<char*>(&socket_) + sizeof(strange_value_));
}

CProtoItemSocket_Strange::~CProtoItemSocket_Strange() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_Strange)
  SharedDtor();
}

void CProtoItemSocket_Strange::SharedDtor() {
  if (this != internal_default_instance()) {
    delete socket_;
  }
}

void CProtoItemSocket_Strange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_Strange::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CProtoItemSocket_Strange& CProtoItemSocket_Strange::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProtoItemSocket_Strange* CProtoItemSocket_Strange::New(::google::protobuf::Arena* arena) const {
  CProtoItemSocket_Strange* n = new CProtoItemSocket_Strange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProtoItemSocket_Strange::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_Strange)
  if (has_socket()) {
    GOOGLE_DCHECK(socket_ != NULL);
    socket_->::proto::dota::CProtoItemSocket::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&strange_type_, 0, reinterpret_cast<char*>(&strange_value_) -
      reinterpret_cast<char*>(&strange_type_) + sizeof(strange_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProtoItemSocket_Strange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_Strange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 strange_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_strange_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strange_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 strange_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_strange_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &strange_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_Strange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_Strange)
  return false;
#undef DO_
}

void CProtoItemSocket_Strange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_Strange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->socket_, output);
  }

  // optional uint32 strange_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->strange_type(), output);
  }

  // optional uint32 strange_value = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->strange_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_Strange)
}

::google::protobuf::uint8* CProtoItemSocket_Strange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_Strange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->socket_, deterministic, target);
  }

  // optional uint32 strange_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->strange_type(), target);
  }

  // optional uint32 strange_value = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->strange_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_Strange)
  return target;
}

size_t CProtoItemSocket_Strange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_Strange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->socket_);
    }

    // optional uint32 strange_type = 2;
    if (has_strange_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strange_type());
    }

    // optional uint32 strange_value = 3;
    if (has_strange_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->strange_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_Strange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_Strange)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_Strange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProtoItemSocket_Strange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_Strange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_Strange)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Strange::MergeFrom(const CProtoItemSocket_Strange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_Strange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000002u) {
      strange_type_ = from.strange_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      strange_value_ = from.strange_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_Strange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_Strange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Strange::CopyFrom(const CProtoItemSocket_Strange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_Strange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Strange::IsInitialized() const {
  return true;
}

void CProtoItemSocket_Strange::Swap(CProtoItemSocket_Strange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_Strange::InternalSwap(CProtoItemSocket_Strange* other) {
  std::swap(socket_, other->socket_);
  std::swap(strange_type_, other->strange_type_);
  std::swap(strange_value_, other->strange_value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProtoItemSocket_Strange::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProtoItemSocket_Strange

// optional .proto.dota.CProtoItemSocket socket = 1;
bool CProtoItemSocket_Strange::has_socket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProtoItemSocket_Strange::set_has_socket() {
  _has_bits_[0] |= 0x00000001u;
}
void CProtoItemSocket_Strange::clear_has_socket() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProtoItemSocket_Strange::clear_socket() {
  if (socket_ != NULL) socket_->::proto::dota::CProtoItemSocket::Clear();
  clear_has_socket();
}
const ::proto::dota::CProtoItemSocket& CProtoItemSocket_Strange::socket() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Strange.socket)
  return socket_ != NULL ? *socket_
                         : *::proto::dota::CProtoItemSocket::internal_default_instance();
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_Strange::mutable_socket() {
  set_has_socket();
  if (socket_ == NULL) {
    socket_ = new ::proto::dota::CProtoItemSocket;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CProtoItemSocket_Strange.socket)
  return socket_;
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_Strange::release_socket() {
  // @@protoc_insertion_point(field_release:proto.dota.CProtoItemSocket_Strange.socket)
  clear_has_socket();
  ::proto::dota::CProtoItemSocket* temp = socket_;
  socket_ = NULL;
  return temp;
}
void CProtoItemSocket_Strange::set_allocated_socket(::proto::dota::CProtoItemSocket* socket) {
  delete socket_;
  socket_ = socket;
  if (socket) {
    set_has_socket();
  } else {
    clear_has_socket();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CProtoItemSocket_Strange.socket)
}

// optional uint32 strange_type = 2;
bool CProtoItemSocket_Strange::has_strange_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProtoItemSocket_Strange::set_has_strange_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CProtoItemSocket_Strange::clear_has_strange_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProtoItemSocket_Strange::clear_strange_type() {
  strange_type_ = 0u;
  clear_has_strange_type();
}
::google::protobuf::uint32 CProtoItemSocket_Strange::strange_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Strange.strange_type)
  return strange_type_;
}
void CProtoItemSocket_Strange::set_strange_type(::google::protobuf::uint32 value) {
  set_has_strange_type();
  strange_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Strange.strange_type)
}

// optional uint32 strange_value = 3;
bool CProtoItemSocket_Strange::has_strange_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CProtoItemSocket_Strange::set_has_strange_value() {
  _has_bits_[0] |= 0x00000004u;
}
void CProtoItemSocket_Strange::clear_has_strange_value() {
  _has_bits_[0] &= ~0x00000004u;
}
void CProtoItemSocket_Strange::clear_strange_value() {
  strange_value_ = 0u;
  clear_has_strange_value();
}
::google::protobuf::uint32 CProtoItemSocket_Strange::strange_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Strange.strange_value)
  return strange_value_;
}
void CProtoItemSocket_Strange::set_strange_value(::google::protobuf::uint32 value) {
  set_has_strange_value();
  strange_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Strange.strange_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_Spectator::kSocketFieldNumber;
const int CProtoItemSocket_Spectator::kGamesViewedFieldNumber;
const int CProtoItemSocket_Spectator::kCorporationIdFieldNumber;
const int CProtoItemSocket_Spectator::kLeagueIdFieldNumber;
const int CProtoItemSocket_Spectator::kTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_Spectator::CProtoItemSocket_Spectator()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_Spectator)
}
CProtoItemSocket_Spectator::CProtoItemSocket_Spectator(const CProtoItemSocket_Spectator& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = NULL;
  }
  ::memcpy(&games_viewed_, &from.games_viewed_,
    reinterpret_cast<char*>(&team_id_) -
    reinterpret_cast<char*>(&games_viewed_) + sizeof(team_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_Spectator)
}

void CProtoItemSocket_Spectator::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&socket_, 0, reinterpret_cast<char*>(&team_id_) -
    reinterpret_cast<char*>(&socket_) + sizeof(team_id_));
}

CProtoItemSocket_Spectator::~CProtoItemSocket_Spectator() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_Spectator)
  SharedDtor();
}

void CProtoItemSocket_Spectator::SharedDtor() {
  if (this != internal_default_instance()) {
    delete socket_;
  }
}

void CProtoItemSocket_Spectator::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_Spectator::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CProtoItemSocket_Spectator& CProtoItemSocket_Spectator::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProtoItemSocket_Spectator* CProtoItemSocket_Spectator::New(::google::protobuf::Arena* arena) const {
  CProtoItemSocket_Spectator* n = new CProtoItemSocket_Spectator;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProtoItemSocket_Spectator::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_Spectator)
  if (has_socket()) {
    GOOGLE_DCHECK(socket_ != NULL);
    socket_->::proto::dota::CProtoItemSocket::Clear();
  }
  if (_has_bits_[0 / 32] & 30u) {
    ::memset(&games_viewed_, 0, reinterpret_cast<char*>(&team_id_) -
      reinterpret_cast<char*>(&games_viewed_) + sizeof(team_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProtoItemSocket_Spectator::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_Spectator)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 games_viewed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_games_viewed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &games_viewed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 corporation_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_corporation_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &corporation_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 league_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_league_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &league_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 team_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_team_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_Spectator)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_Spectator)
  return false;
#undef DO_
}

void CProtoItemSocket_Spectator::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_Spectator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->socket_, output);
  }

  // optional uint32 games_viewed = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->games_viewed(), output);
  }

  // optional uint32 corporation_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->corporation_id(), output);
  }

  // optional uint32 league_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->league_id(), output);
  }

  // optional uint32 team_id = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->team_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_Spectator)
}

::google::protobuf::uint8* CProtoItemSocket_Spectator::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_Spectator)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->socket_, deterministic, target);
  }

  // optional uint32 games_viewed = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->games_viewed(), target);
  }

  // optional uint32 corporation_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->corporation_id(), target);
  }

  // optional uint32 league_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->league_id(), target);
  }

  // optional uint32 team_id = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->team_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_Spectator)
  return target;
}

size_t CProtoItemSocket_Spectator::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_Spectator)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->socket_);
    }

    // optional uint32 games_viewed = 2;
    if (has_games_viewed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->games_viewed());
    }

    // optional uint32 corporation_id = 3;
    if (has_corporation_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->corporation_id());
    }

    // optional uint32 league_id = 4;
    if (has_league_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->league_id());
    }

    // optional uint32 team_id = 5;
    if (has_team_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_Spectator::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_Spectator)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_Spectator* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProtoItemSocket_Spectator>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_Spectator)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_Spectator)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Spectator::MergeFrom(const CProtoItemSocket_Spectator& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_Spectator)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000002u) {
      games_viewed_ = from.games_viewed_;
    }
    if (cached_has_bits & 0x00000004u) {
      corporation_id_ = from.corporation_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      league_id_ = from.league_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      team_id_ = from.team_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_Spectator::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_Spectator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Spectator::CopyFrom(const CProtoItemSocket_Spectator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_Spectator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Spectator::IsInitialized() const {
  return true;
}

void CProtoItemSocket_Spectator::Swap(CProtoItemSocket_Spectator* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_Spectator::InternalSwap(CProtoItemSocket_Spectator* other) {
  std::swap(socket_, other->socket_);
  std::swap(games_viewed_, other->games_viewed_);
  std::swap(corporation_id_, other->corporation_id_);
  std::swap(league_id_, other->league_id_);
  std::swap(team_id_, other->team_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProtoItemSocket_Spectator::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProtoItemSocket_Spectator

// optional .proto.dota.CProtoItemSocket socket = 1;
bool CProtoItemSocket_Spectator::has_socket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProtoItemSocket_Spectator::set_has_socket() {
  _has_bits_[0] |= 0x00000001u;
}
void CProtoItemSocket_Spectator::clear_has_socket() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProtoItemSocket_Spectator::clear_socket() {
  if (socket_ != NULL) socket_->::proto::dota::CProtoItemSocket::Clear();
  clear_has_socket();
}
const ::proto::dota::CProtoItemSocket& CProtoItemSocket_Spectator::socket() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Spectator.socket)
  return socket_ != NULL ? *socket_
                         : *::proto::dota::CProtoItemSocket::internal_default_instance();
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_Spectator::mutable_socket() {
  set_has_socket();
  if (socket_ == NULL) {
    socket_ = new ::proto::dota::CProtoItemSocket;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CProtoItemSocket_Spectator.socket)
  return socket_;
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_Spectator::release_socket() {
  // @@protoc_insertion_point(field_release:proto.dota.CProtoItemSocket_Spectator.socket)
  clear_has_socket();
  ::proto::dota::CProtoItemSocket* temp = socket_;
  socket_ = NULL;
  return temp;
}
void CProtoItemSocket_Spectator::set_allocated_socket(::proto::dota::CProtoItemSocket* socket) {
  delete socket_;
  socket_ = socket;
  if (socket) {
    set_has_socket();
  } else {
    clear_has_socket();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CProtoItemSocket_Spectator.socket)
}

// optional uint32 games_viewed = 2;
bool CProtoItemSocket_Spectator::has_games_viewed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProtoItemSocket_Spectator::set_has_games_viewed() {
  _has_bits_[0] |= 0x00000002u;
}
void CProtoItemSocket_Spectator::clear_has_games_viewed() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProtoItemSocket_Spectator::clear_games_viewed() {
  games_viewed_ = 0u;
  clear_has_games_viewed();
}
::google::protobuf::uint32 CProtoItemSocket_Spectator::games_viewed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Spectator.games_viewed)
  return games_viewed_;
}
void CProtoItemSocket_Spectator::set_games_viewed(::google::protobuf::uint32 value) {
  set_has_games_viewed();
  games_viewed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Spectator.games_viewed)
}

// optional uint32 corporation_id = 3;
bool CProtoItemSocket_Spectator::has_corporation_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CProtoItemSocket_Spectator::set_has_corporation_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CProtoItemSocket_Spectator::clear_has_corporation_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CProtoItemSocket_Spectator::clear_corporation_id() {
  corporation_id_ = 0u;
  clear_has_corporation_id();
}
::google::protobuf::uint32 CProtoItemSocket_Spectator::corporation_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Spectator.corporation_id)
  return corporation_id_;
}
void CProtoItemSocket_Spectator::set_corporation_id(::google::protobuf::uint32 value) {
  set_has_corporation_id();
  corporation_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Spectator.corporation_id)
}

// optional uint32 league_id = 4;
bool CProtoItemSocket_Spectator::has_league_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CProtoItemSocket_Spectator::set_has_league_id() {
  _has_bits_[0] |= 0x00000008u;
}
void CProtoItemSocket_Spectator::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void CProtoItemSocket_Spectator::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
::google::protobuf::uint32 CProtoItemSocket_Spectator::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Spectator.league_id)
  return league_id_;
}
void CProtoItemSocket_Spectator::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Spectator.league_id)
}

// optional uint32 team_id = 5;
bool CProtoItemSocket_Spectator::has_team_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CProtoItemSocket_Spectator::set_has_team_id() {
  _has_bits_[0] |= 0x00000010u;
}
void CProtoItemSocket_Spectator::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void CProtoItemSocket_Spectator::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
::google::protobuf::uint32 CProtoItemSocket_Spectator::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Spectator.team_id)
  return team_id_;
}
void CProtoItemSocket_Spectator::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Spectator.team_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_AssetModifier::kSocketFieldNumber;
const int CProtoItemSocket_AssetModifier::kAssetModifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_AssetModifier::CProtoItemSocket_AssetModifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_AssetModifier)
}
CProtoItemSocket_AssetModifier::CProtoItemSocket_AssetModifier(const CProtoItemSocket_AssetModifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = NULL;
  }
  asset_modifier_ = from.asset_modifier_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_AssetModifier)
}

void CProtoItemSocket_AssetModifier::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&socket_, 0, reinterpret_cast<char*>(&asset_modifier_) -
    reinterpret_cast<char*>(&socket_) + sizeof(asset_modifier_));
}

CProtoItemSocket_AssetModifier::~CProtoItemSocket_AssetModifier() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_AssetModifier)
  SharedDtor();
}

void CProtoItemSocket_AssetModifier::SharedDtor() {
  if (this != internal_default_instance()) {
    delete socket_;
  }
}

void CProtoItemSocket_AssetModifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_AssetModifier::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CProtoItemSocket_AssetModifier& CProtoItemSocket_AssetModifier::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProtoItemSocket_AssetModifier* CProtoItemSocket_AssetModifier::New(::google::protobuf::Arena* arena) const {
  CProtoItemSocket_AssetModifier* n = new CProtoItemSocket_AssetModifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProtoItemSocket_AssetModifier::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_AssetModifier)
  if (has_socket()) {
    GOOGLE_DCHECK(socket_ != NULL);
    socket_->::proto::dota::CProtoItemSocket::Clear();
  }
  asset_modifier_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProtoItemSocket_AssetModifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_AssetModifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 asset_modifier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_asset_modifier();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asset_modifier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_AssetModifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_AssetModifier)
  return false;
#undef DO_
}

void CProtoItemSocket_AssetModifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_AssetModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->socket_, output);
  }

  // optional uint32 asset_modifier = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->asset_modifier(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_AssetModifier)
}

::google::protobuf::uint8* CProtoItemSocket_AssetModifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_AssetModifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->socket_, deterministic, target);
  }

  // optional uint32 asset_modifier = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->asset_modifier(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_AssetModifier)
  return target;
}

size_t CProtoItemSocket_AssetModifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_AssetModifier)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->socket_);
    }

    // optional uint32 asset_modifier = 2;
    if (has_asset_modifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asset_modifier());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_AssetModifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_AssetModifier)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_AssetModifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProtoItemSocket_AssetModifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_AssetModifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_AssetModifier)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_AssetModifier::MergeFrom(const CProtoItemSocket_AssetModifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_AssetModifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000002u) {
      asset_modifier_ = from.asset_modifier_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_AssetModifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_AssetModifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_AssetModifier::CopyFrom(const CProtoItemSocket_AssetModifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_AssetModifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_AssetModifier::IsInitialized() const {
  return true;
}

void CProtoItemSocket_AssetModifier::Swap(CProtoItemSocket_AssetModifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_AssetModifier::InternalSwap(CProtoItemSocket_AssetModifier* other) {
  std::swap(socket_, other->socket_);
  std::swap(asset_modifier_, other->asset_modifier_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProtoItemSocket_AssetModifier::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProtoItemSocket_AssetModifier

// optional .proto.dota.CProtoItemSocket socket = 1;
bool CProtoItemSocket_AssetModifier::has_socket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProtoItemSocket_AssetModifier::set_has_socket() {
  _has_bits_[0] |= 0x00000001u;
}
void CProtoItemSocket_AssetModifier::clear_has_socket() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProtoItemSocket_AssetModifier::clear_socket() {
  if (socket_ != NULL) socket_->::proto::dota::CProtoItemSocket::Clear();
  clear_has_socket();
}
const ::proto::dota::CProtoItemSocket& CProtoItemSocket_AssetModifier::socket() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_AssetModifier.socket)
  return socket_ != NULL ? *socket_
                         : *::proto::dota::CProtoItemSocket::internal_default_instance();
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_AssetModifier::mutable_socket() {
  set_has_socket();
  if (socket_ == NULL) {
    socket_ = new ::proto::dota::CProtoItemSocket;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CProtoItemSocket_AssetModifier.socket)
  return socket_;
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_AssetModifier::release_socket() {
  // @@protoc_insertion_point(field_release:proto.dota.CProtoItemSocket_AssetModifier.socket)
  clear_has_socket();
  ::proto::dota::CProtoItemSocket* temp = socket_;
  socket_ = NULL;
  return temp;
}
void CProtoItemSocket_AssetModifier::set_allocated_socket(::proto::dota::CProtoItemSocket* socket) {
  delete socket_;
  socket_ = socket;
  if (socket) {
    set_has_socket();
  } else {
    clear_has_socket();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CProtoItemSocket_AssetModifier.socket)
}

// optional uint32 asset_modifier = 2;
bool CProtoItemSocket_AssetModifier::has_asset_modifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProtoItemSocket_AssetModifier::set_has_asset_modifier() {
  _has_bits_[0] |= 0x00000002u;
}
void CProtoItemSocket_AssetModifier::clear_has_asset_modifier() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProtoItemSocket_AssetModifier::clear_asset_modifier() {
  asset_modifier_ = 0u;
  clear_has_asset_modifier();
}
::google::protobuf::uint32 CProtoItemSocket_AssetModifier::asset_modifier() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_AssetModifier.asset_modifier)
  return asset_modifier_;
}
void CProtoItemSocket_AssetModifier::set_asset_modifier(::google::protobuf::uint32 value) {
  set_has_asset_modifier();
  asset_modifier_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_AssetModifier.asset_modifier)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::kSocketFieldNumber;
const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::kAssetModifierFieldNumber;
const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::kAnimModifierFieldNumber;
const int CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::kAbilityEffectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
}
CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = NULL;
  }
  ::memcpy(&asset_modifier_, &from.asset_modifier_,
    reinterpret_cast<char*>(&ability_effect_) -
    reinterpret_cast<char*>(&asset_modifier_) + sizeof(ability_effect_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&socket_, 0, reinterpret_cast<char*>(&ability_effect_) -
    reinterpret_cast<char*>(&socket_) + sizeof(ability_effect_));
}

CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::~CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  SharedDtor();
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SharedDtor() {
  if (this != internal_default_instance()) {
    delete socket_;
  }
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::New(::google::protobuf::Arena* arena) const {
  CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* n = new CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  if (has_socket()) {
    GOOGLE_DCHECK(socket_ != NULL);
    socket_->::proto::dota::CProtoItemSocket::Clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&asset_modifier_, 0, reinterpret_cast<char*>(&ability_effect_) -
      reinterpret_cast<char*>(&asset_modifier_) + sizeof(ability_effect_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 asset_modifier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_asset_modifier();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &asset_modifier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 anim_modifier = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_anim_modifier();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &anim_modifier_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ability_effect = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_ability_effect();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ability_effect_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  return false;
#undef DO_
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->socket_, output);
  }

  // optional uint32 asset_modifier = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->asset_modifier(), output);
  }

  // optional uint32 anim_modifier = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->anim_modifier(), output);
  }

  // optional uint32 ability_effect = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ability_effect(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
}

::google::protobuf::uint8* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->socket_, deterministic, target);
  }

  // optional uint32 asset_modifier = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->asset_modifier(), target);
  }

  // optional uint32 anim_modifier = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->anim_modifier(), target);
  }

  // optional uint32 ability_effect = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ability_effect(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  return target;
}

size_t CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->socket_);
    }

    // optional uint32 asset_modifier = 2;
    if (has_asset_modifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->asset_modifier());
    }

    // optional uint32 anim_modifier = 3;
    if (has_anim_modifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->anim_modifier());
    }

    // optional uint32 ability_effect = 4;
    if (has_ability_effect()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ability_effect());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::MergeFrom(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000002u) {
      asset_modifier_ = from.asset_modifier_;
    }
    if (cached_has_bits & 0x00000004u) {
      anim_modifier_ = from.anim_modifier_;
    }
    if (cached_has_bits & 0x00000008u) {
      ability_effect_ = from.ability_effect_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::CopyFrom(const CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::IsInitialized() const {
  return true;
}

void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::Swap(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::InternalSwap(CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY* other) {
  std::swap(socket_, other->socket_);
  std::swap(asset_modifier_, other->asset_modifier_);
  std::swap(anim_modifier_, other->anim_modifier_);
  std::swap(ability_effect_, other->ability_effect_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY

// optional .proto.dota.CProtoItemSocket socket = 1;
bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::has_socket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::set_has_socket() {
  _has_bits_[0] |= 0x00000001u;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::clear_has_socket() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::clear_socket() {
  if (socket_ != NULL) socket_->::proto::dota::CProtoItemSocket::Clear();
  clear_has_socket();
}
const ::proto::dota::CProtoItemSocket& CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::socket() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.socket)
  return socket_ != NULL ? *socket_
                         : *::proto::dota::CProtoItemSocket::internal_default_instance();
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::mutable_socket() {
  set_has_socket();
  if (socket_ == NULL) {
    socket_ = new ::proto::dota::CProtoItemSocket;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.socket)
  return socket_;
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::release_socket() {
  // @@protoc_insertion_point(field_release:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.socket)
  clear_has_socket();
  ::proto::dota::CProtoItemSocket* temp = socket_;
  socket_ = NULL;
  return temp;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::set_allocated_socket(::proto::dota::CProtoItemSocket* socket) {
  delete socket_;
  socket_ = socket;
  if (socket) {
    set_has_socket();
  } else {
    clear_has_socket();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.socket)
}

// optional uint32 asset_modifier = 2;
bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::has_asset_modifier() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::set_has_asset_modifier() {
  _has_bits_[0] |= 0x00000002u;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::clear_has_asset_modifier() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::clear_asset_modifier() {
  asset_modifier_ = 0u;
  clear_has_asset_modifier();
}
::google::protobuf::uint32 CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::asset_modifier() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.asset_modifier)
  return asset_modifier_;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::set_asset_modifier(::google::protobuf::uint32 value) {
  set_has_asset_modifier();
  asset_modifier_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.asset_modifier)
}

// optional uint32 anim_modifier = 3;
bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::has_anim_modifier() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::set_has_anim_modifier() {
  _has_bits_[0] |= 0x00000004u;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::clear_has_anim_modifier() {
  _has_bits_[0] &= ~0x00000004u;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::clear_anim_modifier() {
  anim_modifier_ = 0u;
  clear_has_anim_modifier();
}
::google::protobuf::uint32 CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::anim_modifier() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.anim_modifier)
  return anim_modifier_;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::set_anim_modifier(::google::protobuf::uint32 value) {
  set_has_anim_modifier();
  anim_modifier_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.anim_modifier)
}

// optional uint32 ability_effect = 4;
bool CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::has_ability_effect() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::set_has_ability_effect() {
  _has_bits_[0] |= 0x00000008u;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::clear_has_ability_effect() {
  _has_bits_[0] &= ~0x00000008u;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::clear_ability_effect() {
  ability_effect_ = 0u;
  clear_has_ability_effect();
}
::google::protobuf::uint32 CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::ability_effect() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.ability_effect)
  return ability_effect_;
}
void CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY::set_ability_effect(::google::protobuf::uint32 value) {
  set_has_ability_effect();
  ability_effect_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_AssetModifier_DESERIALIZE_FROM_STRING_ONLY.ability_effect)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_Autograph::kSocketFieldNumber;
const int CProtoItemSocket_Autograph::kAutographFieldNumber;
const int CProtoItemSocket_Autograph::kAutographIdFieldNumber;
const int CProtoItemSocket_Autograph::kAutographScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_Autograph::CProtoItemSocket_Autograph()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_Autograph)
}
CProtoItemSocket_Autograph::CProtoItemSocket_Autograph(const CProtoItemSocket_Autograph& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  autograph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_autograph()) {
    autograph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.autograph_);
  }
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = NULL;
  }
  ::memcpy(&autograph_id_, &from.autograph_id_,
    reinterpret_cast<char*>(&autograph_score_) -
    reinterpret_cast<char*>(&autograph_id_) + sizeof(autograph_score_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_Autograph)
}

void CProtoItemSocket_Autograph::SharedCtor() {
  _cached_size_ = 0;
  autograph_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&socket_, 0, reinterpret_cast<char*>(&autograph_score_) -
    reinterpret_cast<char*>(&socket_) + sizeof(autograph_score_));
}

CProtoItemSocket_Autograph::~CProtoItemSocket_Autograph() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_Autograph)
  SharedDtor();
}

void CProtoItemSocket_Autograph::SharedDtor() {
  autograph_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete socket_;
  }
}

void CProtoItemSocket_Autograph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_Autograph::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CProtoItemSocket_Autograph& CProtoItemSocket_Autograph::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProtoItemSocket_Autograph* CProtoItemSocket_Autograph::New(::google::protobuf::Arena* arena) const {
  CProtoItemSocket_Autograph* n = new CProtoItemSocket_Autograph;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProtoItemSocket_Autograph::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_Autograph)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_autograph()) {
      GOOGLE_DCHECK(!autograph_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*autograph_.UnsafeRawStringPointer())->clear();
    }
    if (has_socket()) {
      GOOGLE_DCHECK(socket_ != NULL);
      socket_->::proto::dota::CProtoItemSocket::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&autograph_id_, 0, reinterpret_cast<char*>(&autograph_score_) -
      reinterpret_cast<char*>(&autograph_id_) + sizeof(autograph_score_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProtoItemSocket_Autograph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_Autograph)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string autograph = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_autograph()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->autograph().data(), this->autograph().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CProtoItemSocket_Autograph.autograph");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 autograph_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_autograph_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &autograph_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 autograph_score = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_autograph_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &autograph_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_Autograph)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_Autograph)
  return false;
#undef DO_
}

void CProtoItemSocket_Autograph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_Autograph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->socket_, output);
  }

  // optional string autograph = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->autograph().data(), this->autograph().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CProtoItemSocket_Autograph.autograph");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->autograph(), output);
  }

  // optional uint32 autograph_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->autograph_id(), output);
  }

  // optional uint32 autograph_score = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->autograph_score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_Autograph)
}

::google::protobuf::uint8* CProtoItemSocket_Autograph::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_Autograph)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->socket_, deterministic, target);
  }

  // optional string autograph = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->autograph().data(), this->autograph().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CProtoItemSocket_Autograph.autograph");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->autograph(), target);
  }

  // optional uint32 autograph_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->autograph_id(), target);
  }

  // optional uint32 autograph_score = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->autograph_score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_Autograph)
  return target;
}

size_t CProtoItemSocket_Autograph::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_Autograph)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string autograph = 2;
    if (has_autograph()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->autograph());
    }

    // optional .proto.dota.CProtoItemSocket socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->socket_);
    }

    // optional uint32 autograph_id = 3;
    if (has_autograph_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->autograph_id());
    }

    // optional uint32 autograph_score = 4;
    if (has_autograph_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->autograph_score());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_Autograph::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_Autograph)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_Autograph* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProtoItemSocket_Autograph>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_Autograph)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_Autograph)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_Autograph::MergeFrom(const CProtoItemSocket_Autograph& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_Autograph)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_autograph();
      autograph_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.autograph_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
    }
    if (cached_has_bits & 0x00000004u) {
      autograph_id_ = from.autograph_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      autograph_score_ = from.autograph_score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CProtoItemSocket_Autograph::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_Autograph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_Autograph::CopyFrom(const CProtoItemSocket_Autograph& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_Autograph)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_Autograph::IsInitialized() const {
  return true;
}

void CProtoItemSocket_Autograph::Swap(CProtoItemSocket_Autograph* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_Autograph::InternalSwap(CProtoItemSocket_Autograph* other) {
  autograph_.Swap(&other->autograph_);
  std::swap(socket_, other->socket_);
  std::swap(autograph_id_, other->autograph_id_);
  std::swap(autograph_score_, other->autograph_score_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProtoItemSocket_Autograph::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProtoItemSocket_Autograph

// optional .proto.dota.CProtoItemSocket socket = 1;
bool CProtoItemSocket_Autograph::has_socket() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CProtoItemSocket_Autograph::set_has_socket() {
  _has_bits_[0] |= 0x00000002u;
}
void CProtoItemSocket_Autograph::clear_has_socket() {
  _has_bits_[0] &= ~0x00000002u;
}
void CProtoItemSocket_Autograph::clear_socket() {
  if (socket_ != NULL) socket_->::proto::dota::CProtoItemSocket::Clear();
  clear_has_socket();
}
const ::proto::dota::CProtoItemSocket& CProtoItemSocket_Autograph::socket() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Autograph.socket)
  return socket_ != NULL ? *socket_
                         : *::proto::dota::CProtoItemSocket::internal_default_instance();
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_Autograph::mutable_socket() {
  set_has_socket();
  if (socket_ == NULL) {
    socket_ = new ::proto::dota::CProtoItemSocket;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CProtoItemSocket_Autograph.socket)
  return socket_;
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_Autograph::release_socket() {
  // @@protoc_insertion_point(field_release:proto.dota.CProtoItemSocket_Autograph.socket)
  clear_has_socket();
  ::proto::dota::CProtoItemSocket* temp = socket_;
  socket_ = NULL;
  return temp;
}
void CProtoItemSocket_Autograph::set_allocated_socket(::proto::dota::CProtoItemSocket* socket) {
  delete socket_;
  socket_ = socket;
  if (socket) {
    set_has_socket();
  } else {
    clear_has_socket();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CProtoItemSocket_Autograph.socket)
}

// optional string autograph = 2;
bool CProtoItemSocket_Autograph::has_autograph() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProtoItemSocket_Autograph::set_has_autograph() {
  _has_bits_[0] |= 0x00000001u;
}
void CProtoItemSocket_Autograph::clear_has_autograph() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProtoItemSocket_Autograph::clear_autograph() {
  autograph_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_autograph();
}
const ::std::string& CProtoItemSocket_Autograph::autograph() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Autograph.autograph)
  return autograph_.GetNoArena();
}
void CProtoItemSocket_Autograph::set_autograph(const ::std::string& value) {
  set_has_autograph();
  autograph_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Autograph.autograph)
}
#if LANG_CXX11
void CProtoItemSocket_Autograph::set_autograph(::std::string&& value) {
  set_has_autograph();
  autograph_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CProtoItemSocket_Autograph.autograph)
}
#endif
void CProtoItemSocket_Autograph::set_autograph(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_autograph();
  autograph_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CProtoItemSocket_Autograph.autograph)
}
void CProtoItemSocket_Autograph::set_autograph(const char* value, size_t size) {
  set_has_autograph();
  autograph_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CProtoItemSocket_Autograph.autograph)
}
::std::string* CProtoItemSocket_Autograph::mutable_autograph() {
  set_has_autograph();
  // @@protoc_insertion_point(field_mutable:proto.dota.CProtoItemSocket_Autograph.autograph)
  return autograph_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CProtoItemSocket_Autograph::release_autograph() {
  // @@protoc_insertion_point(field_release:proto.dota.CProtoItemSocket_Autograph.autograph)
  clear_has_autograph();
  return autograph_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CProtoItemSocket_Autograph::set_allocated_autograph(::std::string* autograph) {
  if (autograph != NULL) {
    set_has_autograph();
  } else {
    clear_has_autograph();
  }
  autograph_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), autograph);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CProtoItemSocket_Autograph.autograph)
}

// optional uint32 autograph_id = 3;
bool CProtoItemSocket_Autograph::has_autograph_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CProtoItemSocket_Autograph::set_has_autograph_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CProtoItemSocket_Autograph::clear_has_autograph_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CProtoItemSocket_Autograph::clear_autograph_id() {
  autograph_id_ = 0u;
  clear_has_autograph_id();
}
::google::protobuf::uint32 CProtoItemSocket_Autograph::autograph_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Autograph.autograph_id)
  return autograph_id_;
}
void CProtoItemSocket_Autograph::set_autograph_id(::google::protobuf::uint32 value) {
  set_has_autograph_id();
  autograph_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Autograph.autograph_id)
}

// optional uint32 autograph_score = 4;
bool CProtoItemSocket_Autograph::has_autograph_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CProtoItemSocket_Autograph::set_has_autograph_score() {
  _has_bits_[0] |= 0x00000008u;
}
void CProtoItemSocket_Autograph::clear_has_autograph_score() {
  _has_bits_[0] &= ~0x00000008u;
}
void CProtoItemSocket_Autograph::clear_autograph_score() {
  autograph_score_ = 0u;
  clear_has_autograph_score();
}
::google::protobuf::uint32 CProtoItemSocket_Autograph::autograph_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_Autograph.autograph_score)
  return autograph_score_;
}
void CProtoItemSocket_Autograph::set_autograph_score(::google::protobuf::uint32 value) {
  set_has_autograph_score();
  autograph_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CProtoItemSocket_Autograph.autograph_score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CProtoItemSocket_StaticVisuals::kSocketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CProtoItemSocket_StaticVisuals::CProtoItemSocket_StaticVisuals()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CProtoItemSocket_StaticVisuals)
}
CProtoItemSocket_StaticVisuals::CProtoItemSocket_StaticVisuals(const CProtoItemSocket_StaticVisuals& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_socket()) {
    socket_ = new ::proto::dota::CProtoItemSocket(*from.socket_);
  } else {
    socket_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.dota.CProtoItemSocket_StaticVisuals)
}

void CProtoItemSocket_StaticVisuals::SharedCtor() {
  _cached_size_ = 0;
  socket_ = NULL;
}

CProtoItemSocket_StaticVisuals::~CProtoItemSocket_StaticVisuals() {
  // @@protoc_insertion_point(destructor:proto.dota.CProtoItemSocket_StaticVisuals)
  SharedDtor();
}

void CProtoItemSocket_StaticVisuals::SharedDtor() {
  if (this != internal_default_instance()) {
    delete socket_;
  }
}

void CProtoItemSocket_StaticVisuals::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CProtoItemSocket_StaticVisuals::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CProtoItemSocket_StaticVisuals& CProtoItemSocket_StaticVisuals::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CProtoItemSocket_StaticVisuals* CProtoItemSocket_StaticVisuals::New(::google::protobuf::Arena* arena) const {
  CProtoItemSocket_StaticVisuals* n = new CProtoItemSocket_StaticVisuals;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CProtoItemSocket_StaticVisuals::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CProtoItemSocket_StaticVisuals)
  if (has_socket()) {
    GOOGLE_DCHECK(socket_ != NULL);
    socket_->::proto::dota::CProtoItemSocket::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CProtoItemSocket_StaticVisuals::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CProtoItemSocket_StaticVisuals)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CProtoItemSocket socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_socket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CProtoItemSocket_StaticVisuals)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CProtoItemSocket_StaticVisuals)
  return false;
#undef DO_
}

void CProtoItemSocket_StaticVisuals::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CProtoItemSocket_StaticVisuals)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->socket_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CProtoItemSocket_StaticVisuals)
}

::google::protobuf::uint8* CProtoItemSocket_StaticVisuals::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CProtoItemSocket_StaticVisuals)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->socket_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CProtoItemSocket_StaticVisuals)
  return target;
}

size_t CProtoItemSocket_StaticVisuals::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CProtoItemSocket_StaticVisuals)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .proto.dota.CProtoItemSocket socket = 1;
  if (has_socket()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->socket_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CProtoItemSocket_StaticVisuals::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CProtoItemSocket_StaticVisuals)
  GOOGLE_DCHECK_NE(&from, this);
  const CProtoItemSocket_StaticVisuals* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CProtoItemSocket_StaticVisuals>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CProtoItemSocket_StaticVisuals)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CProtoItemSocket_StaticVisuals)
    MergeFrom(*source);
  }
}

void CProtoItemSocket_StaticVisuals::MergeFrom(const CProtoItemSocket_StaticVisuals& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CProtoItemSocket_StaticVisuals)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_socket()) {
    mutable_socket()->::proto::dota::CProtoItemSocket::MergeFrom(from.socket());
  }
}

void CProtoItemSocket_StaticVisuals::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CProtoItemSocket_StaticVisuals)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CProtoItemSocket_StaticVisuals::CopyFrom(const CProtoItemSocket_StaticVisuals& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CProtoItemSocket_StaticVisuals)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CProtoItemSocket_StaticVisuals::IsInitialized() const {
  return true;
}

void CProtoItemSocket_StaticVisuals::Swap(CProtoItemSocket_StaticVisuals* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CProtoItemSocket_StaticVisuals::InternalSwap(CProtoItemSocket_StaticVisuals* other) {
  std::swap(socket_, other->socket_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CProtoItemSocket_StaticVisuals::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CProtoItemSocket_StaticVisuals

// optional .proto.dota.CProtoItemSocket socket = 1;
bool CProtoItemSocket_StaticVisuals::has_socket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CProtoItemSocket_StaticVisuals::set_has_socket() {
  _has_bits_[0] |= 0x00000001u;
}
void CProtoItemSocket_StaticVisuals::clear_has_socket() {
  _has_bits_[0] &= ~0x00000001u;
}
void CProtoItemSocket_StaticVisuals::clear_socket() {
  if (socket_ != NULL) socket_->::proto::dota::CProtoItemSocket::Clear();
  clear_has_socket();
}
const ::proto::dota::CProtoItemSocket& CProtoItemSocket_StaticVisuals::socket() const {
  // @@protoc_insertion_point(field_get:proto.dota.CProtoItemSocket_StaticVisuals.socket)
  return socket_ != NULL ? *socket_
                         : *::proto::dota::CProtoItemSocket::internal_default_instance();
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_StaticVisuals::mutable_socket() {
  set_has_socket();
  if (socket_ == NULL) {
    socket_ = new ::proto::dota::CProtoItemSocket;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CProtoItemSocket_StaticVisuals.socket)
  return socket_;
}
::proto::dota::CProtoItemSocket* CProtoItemSocket_StaticVisuals::release_socket() {
  // @@protoc_insertion_point(field_release:proto.dota.CProtoItemSocket_StaticVisuals.socket)
  clear_has_socket();
  ::proto::dota::CProtoItemSocket* temp = socket_;
  socket_ = NULL;
  return temp;
}
void CProtoItemSocket_StaticVisuals::set_allocated_socket(::proto::dota::CProtoItemSocket* socket) {
  delete socket_;
  socket_ = socket;
  if (socket) {
    set_has_socket();
  } else {
    clear_has_socket();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CProtoItemSocket_StaticVisuals.socket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CAttribute_String::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CAttribute_String::CAttribute_String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CAttribute_String)
}
CAttribute_String::CAttribute_String(const CAttribute_String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.dota.CAttribute_String)
}

void CAttribute_String::SharedCtor() {
  _cached_size_ = 0;
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CAttribute_String::~CAttribute_String() {
  // @@protoc_insertion_point(destructor:proto.dota.CAttribute_String)
  SharedDtor();
}

void CAttribute_String::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CAttribute_String::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CAttribute_String::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CAttribute_String& CAttribute_String::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CAttribute_String* CAttribute_String::New(::google::protobuf::Arena* arena) const {
  CAttribute_String* n = new CAttribute_String;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CAttribute_String::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CAttribute_String)
  if (has_value()) {
    GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*value_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CAttribute_String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CAttribute_String)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CAttribute_String.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CAttribute_String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CAttribute_String)
  return false;
#undef DO_
}

void CAttribute_String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CAttribute_String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CAttribute_String.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CAttribute_String)
}

::google::protobuf::uint8* CAttribute_String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CAttribute_String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string value = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CAttribute_String.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CAttribute_String)
  return target;
}

size_t CAttribute_String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CAttribute_String)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string value = 1;
  if (has_value()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CAttribute_String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CAttribute_String)
  GOOGLE_DCHECK_NE(&from, this);
  const CAttribute_String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CAttribute_String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CAttribute_String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CAttribute_String)
    MergeFrom(*source);
  }
}

void CAttribute_String::MergeFrom(const CAttribute_String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CAttribute_String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_value()) {
    set_has_value();
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void CAttribute_String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CAttribute_String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CAttribute_String::CopyFrom(const CAttribute_String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CAttribute_String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CAttribute_String::IsInitialized() const {
  return true;
}

void CAttribute_String::Swap(CAttribute_String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CAttribute_String::InternalSwap(CAttribute_String* other) {
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CAttribute_String::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CAttribute_String

// optional string value = 1;
bool CAttribute_String::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CAttribute_String::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void CAttribute_String::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void CAttribute_String::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& CAttribute_String::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CAttribute_String.value)
  return value_.GetNoArena();
}
void CAttribute_String::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CAttribute_String.value)
}
#if LANG_CXX11
void CAttribute_String::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CAttribute_String.value)
}
#endif
void CAttribute_String::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CAttribute_String.value)
}
void CAttribute_String::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CAttribute_String.value)
}
::std::string* CAttribute_String::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:proto.dota.CAttribute_String.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CAttribute_String::release_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CAttribute_String.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CAttribute_String::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CAttribute_String.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetItemDailyRevenue_Request::kAppidFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Request::kItemIdFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Request::kDateStartFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Request::kDateEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetItemDailyRevenue_Request::CWorkshop_GetItemDailyRevenue_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
}
CWorkshop_GetItemDailyRevenue_Request::CWorkshop_GetItemDailyRevenue_Request(const CWorkshop_GetItemDailyRevenue_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&date_end_) -
    reinterpret_cast<char*>(&appid_) + sizeof(date_end_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
}

void CWorkshop_GetItemDailyRevenue_Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&appid_, 0, reinterpret_cast<char*>(&date_end_) -
    reinterpret_cast<char*>(&appid_) + sizeof(date_end_));
}

CWorkshop_GetItemDailyRevenue_Request::~CWorkshop_GetItemDailyRevenue_Request() {
  // @@protoc_insertion_point(destructor:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  SharedDtor();
}

void CWorkshop_GetItemDailyRevenue_Request::SharedDtor() {
}

void CWorkshop_GetItemDailyRevenue_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetItemDailyRevenue_Request::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_GetItemDailyRevenue_Request& CWorkshop_GetItemDailyRevenue_Request::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_GetItemDailyRevenue_Request* CWorkshop_GetItemDailyRevenue_Request::New(::google::protobuf::Arena* arena) const {
  CWorkshop_GetItemDailyRevenue_Request* n = new CWorkshop_GetItemDailyRevenue_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_GetItemDailyRevenue_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&appid_, 0, reinterpret_cast<char*>(&date_end_) -
      reinterpret_cast<char*>(&appid_) + sizeof(date_end_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_GetItemDailyRevenue_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 date_start = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_date_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 date_end = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_date_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  return false;
#undef DO_
}

void CWorkshop_GetItemDailyRevenue_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_id(), output);
  }

  // optional uint32 date_start = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->date_start(), output);
  }

  // optional uint32 date_end = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->date_end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
}

::google::protobuf::uint8* CWorkshop_GetItemDailyRevenue_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 item_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_id(), target);
  }

  // optional uint32 date_start = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->date_start(), target);
  }

  // optional uint32 date_end = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->date_end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  return target;
}

size_t CWorkshop_GetItemDailyRevenue_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_id());
    }

    // optional uint32 date_start = 3;
    if (has_date_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date_start());
    }

    // optional uint32 date_end = 4;
    if (has_date_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date_end());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetItemDailyRevenue_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetItemDailyRevenue_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_GetItemDailyRevenue_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
    MergeFrom(*source);
  }
}

void CWorkshop_GetItemDailyRevenue_Request::MergeFrom(const CWorkshop_GetItemDailyRevenue_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      date_start_ = from.date_start_;
    }
    if (cached_has_bits & 0x00000008u) {
      date_end_ = from.date_end_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_GetItemDailyRevenue_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetItemDailyRevenue_Request::CopyFrom(const CWorkshop_GetItemDailyRevenue_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetItemDailyRevenue_Request::IsInitialized() const {
  return true;
}

void CWorkshop_GetItemDailyRevenue_Request::Swap(CWorkshop_GetItemDailyRevenue_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetItemDailyRevenue_Request::InternalSwap(CWorkshop_GetItemDailyRevenue_Request* other) {
  std::swap(appid_, other->appid_);
  std::swap(item_id_, other->item_id_);
  std::swap(date_start_, other->date_start_);
  std::swap(date_end_, other->date_end_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_GetItemDailyRevenue_Request::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_GetItemDailyRevenue_Request

// optional uint32 appid = 1;
bool CWorkshop_GetItemDailyRevenue_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_GetItemDailyRevenue_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_GetItemDailyRevenue_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_GetItemDailyRevenue_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
::google::protobuf::uint32 CWorkshop_GetItemDailyRevenue_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetItemDailyRevenue_Request.appid)
  return appid_;
}
void CWorkshop_GetItemDailyRevenue_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetItemDailyRevenue_Request.appid)
}

// optional uint32 item_id = 2;
bool CWorkshop_GetItemDailyRevenue_Request::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CWorkshop_GetItemDailyRevenue_Request::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CWorkshop_GetItemDailyRevenue_Request::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CWorkshop_GetItemDailyRevenue_Request::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
::google::protobuf::uint32 CWorkshop_GetItemDailyRevenue_Request::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetItemDailyRevenue_Request.item_id)
  return item_id_;
}
void CWorkshop_GetItemDailyRevenue_Request::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetItemDailyRevenue_Request.item_id)
}

// optional uint32 date_start = 3;
bool CWorkshop_GetItemDailyRevenue_Request::has_date_start() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CWorkshop_GetItemDailyRevenue_Request::set_has_date_start() {
  _has_bits_[0] |= 0x00000004u;
}
void CWorkshop_GetItemDailyRevenue_Request::clear_has_date_start() {
  _has_bits_[0] &= ~0x00000004u;
}
void CWorkshop_GetItemDailyRevenue_Request::clear_date_start() {
  date_start_ = 0u;
  clear_has_date_start();
}
::google::protobuf::uint32 CWorkshop_GetItemDailyRevenue_Request::date_start() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetItemDailyRevenue_Request.date_start)
  return date_start_;
}
void CWorkshop_GetItemDailyRevenue_Request::set_date_start(::google::protobuf::uint32 value) {
  set_has_date_start();
  date_start_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetItemDailyRevenue_Request.date_start)
}

// optional uint32 date_end = 4;
bool CWorkshop_GetItemDailyRevenue_Request::has_date_end() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CWorkshop_GetItemDailyRevenue_Request::set_has_date_end() {
  _has_bits_[0] |= 0x00000008u;
}
void CWorkshop_GetItemDailyRevenue_Request::clear_has_date_end() {
  _has_bits_[0] &= ~0x00000008u;
}
void CWorkshop_GetItemDailyRevenue_Request::clear_date_end() {
  date_end_ = 0u;
  clear_has_date_end();
}
::google::protobuf::uint32 CWorkshop_GetItemDailyRevenue_Request::date_end() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetItemDailyRevenue_Request.date_end)
  return date_end_;
}
void CWorkshop_GetItemDailyRevenue_Request::set_date_end(::google::protobuf::uint32 value) {
  set_has_date_end();
  date_end_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetItemDailyRevenue_Request.date_end)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::kCountryCodeFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::kDateFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::kRevenueUsdFieldNumber;
const int CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
}
CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue(const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country_code()) {
    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  ::memcpy(&revenue_usd_, &from.revenue_usd_,
    reinterpret_cast<char*>(&units_) -
    reinterpret_cast<char*>(&revenue_usd_) + sizeof(units_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SharedCtor() {
  _cached_size_ = 0;
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&revenue_usd_, 0, reinterpret_cast<char*>(&units_) -
    reinterpret_cast<char*>(&revenue_usd_) + sizeof(units_));
}

CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::~CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue() {
  // @@protoc_insertion_point(destructor:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  SharedDtor();
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SharedDtor() {
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::New(::google::protobuf::Arena* arena) const {
  CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* n = new CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  if (has_country_code()) {
    GOOGLE_DCHECK(!country_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*country_code_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&revenue_usd_, 0, reinterpret_cast<char*>(&units_) -
      reinterpret_cast<char*>(&revenue_usd_) + sizeof(units_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string country_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country_code().data(), this->country_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 date = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 revenue_usd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_revenue_usd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &revenue_usd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 units = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_units();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &units_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  return false;
#undef DO_
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string country_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), this->country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->country_code(), output);
  }

  // optional uint32 date = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->date(), output);
  }

  // optional int64 revenue_usd = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->revenue_usd(), output);
  }

  // optional int32 units = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->units(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
}

::google::protobuf::uint8* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string country_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), this->country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->country_code(), target);
  }

  // optional uint32 date = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->date(), target);
  }

  // optional int64 revenue_usd = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->revenue_usd(), target);
  }

  // optional int32 units = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->units(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  return target;
}

size_t CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string country_code = 1;
    if (has_country_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_code());
    }

    // optional int64 revenue_usd = 3;
    if (has_revenue_usd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->revenue_usd());
    }

    // optional uint32 date = 2;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date());
    }

    // optional int32 units = 4;
    if (has_units()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->units());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
    MergeFrom(*source);
  }
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::MergeFrom(const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_country_code();
      country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      revenue_usd_ = from.revenue_usd_;
    }
    if (cached_has_bits & 0x00000004u) {
      date_ = from.date_;
    }
    if (cached_has_bits & 0x00000008u) {
      units_ = from.units_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::CopyFrom(const CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::IsInitialized() const {
  return true;
}

void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::Swap(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::InternalSwap(CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* other) {
  country_code_.Swap(&other->country_code_);
  std::swap(revenue_usd_, other->revenue_usd_);
  std::swap(date_, other->date_);
  std::swap(units_, other->units_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue

// optional string country_code = 1;
bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::has_country_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_has_country_code() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country_code();
}
const ::std::string& CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::country_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
  return country_code_.GetNoArena();
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_country_code(const ::std::string& value) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
}
#if LANG_CXX11
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_country_code(::std::string&& value) {
  set_has_country_code();
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
}
#endif
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
}
::std::string* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::mutable_country_code() {
  set_has_country_code();
  // @@protoc_insertion_point(field_mutable:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
  clear_has_country_code();
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    set_has_country_code();
  } else {
    clear_has_country_code();
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.country_code)
}

// optional uint32 date = 2;
bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::has_date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_has_date() {
  _has_bits_[0] |= 0x00000004u;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::clear_has_date() {
  _has_bits_[0] &= ~0x00000004u;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::clear_date() {
  date_ = 0u;
  clear_has_date();
}
::google::protobuf::uint32 CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::date() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.date)
  return date_;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_date(::google::protobuf::uint32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.date)
}

// optional int64 revenue_usd = 3;
bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::has_revenue_usd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_has_revenue_usd() {
  _has_bits_[0] |= 0x00000002u;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::clear_has_revenue_usd() {
  _has_bits_[0] &= ~0x00000002u;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::clear_revenue_usd() {
  revenue_usd_ = GOOGLE_LONGLONG(0);
  clear_has_revenue_usd();
}
::google::protobuf::int64 CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::revenue_usd() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.revenue_usd)
  return revenue_usd_;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_revenue_usd(::google::protobuf::int64 value) {
  set_has_revenue_usd();
  revenue_usd_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.revenue_usd)
}

// optional int32 units = 4;
bool CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::has_units() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_has_units() {
  _has_bits_[0] |= 0x00000008u;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::clear_has_units() {
  _has_bits_[0] &= ~0x00000008u;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::clear_units() {
  units_ = 0;
  clear_has_units();
}
::google::protobuf::int32 CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::units() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.units)
  return units_;
}
void CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue::set_units(::google::protobuf::int32 value) {
  set_has_units();
  units_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue.units)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetItemDailyRevenue_Response::kCountryRevenueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetItemDailyRevenue_Response::CWorkshop_GetItemDailyRevenue_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
}
CWorkshop_GetItemDailyRevenue_Response::CWorkshop_GetItemDailyRevenue_Response(const CWorkshop_GetItemDailyRevenue_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      country_revenue_(from.country_revenue_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
}

void CWorkshop_GetItemDailyRevenue_Response::SharedCtor() {
  _cached_size_ = 0;
}

CWorkshop_GetItemDailyRevenue_Response::~CWorkshop_GetItemDailyRevenue_Response() {
  // @@protoc_insertion_point(destructor:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  SharedDtor();
}

void CWorkshop_GetItemDailyRevenue_Response::SharedDtor() {
}

void CWorkshop_GetItemDailyRevenue_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetItemDailyRevenue_Response::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_GetItemDailyRevenue_Response& CWorkshop_GetItemDailyRevenue_Response::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_GetItemDailyRevenue_Response* CWorkshop_GetItemDailyRevenue_Response::New(::google::protobuf::Arena* arena) const {
  CWorkshop_GetItemDailyRevenue_Response* n = new CWorkshop_GetItemDailyRevenue_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_GetItemDailyRevenue_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  country_revenue_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_GetItemDailyRevenue_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_country_revenue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  return false;
#undef DO_
}

void CWorkshop_GetItemDailyRevenue_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  for (unsigned int i = 0, n = this->country_revenue_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->country_revenue(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
}

::google::protobuf::uint8* CWorkshop_GetItemDailyRevenue_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  for (unsigned int i = 0, n = this->country_revenue_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->country_revenue(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  return target;
}

size_t CWorkshop_GetItemDailyRevenue_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  {
    unsigned int count = this->country_revenue_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->country_revenue(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetItemDailyRevenue_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetItemDailyRevenue_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_GetItemDailyRevenue_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
    MergeFrom(*source);
  }
}

void CWorkshop_GetItemDailyRevenue_Response::MergeFrom(const CWorkshop_GetItemDailyRevenue_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  country_revenue_.MergeFrom(from.country_revenue_);
}

void CWorkshop_GetItemDailyRevenue_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetItemDailyRevenue_Response::CopyFrom(const CWorkshop_GetItemDailyRevenue_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CWorkshop_GetItemDailyRevenue_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetItemDailyRevenue_Response::IsInitialized() const {
  return true;
}

void CWorkshop_GetItemDailyRevenue_Response::Swap(CWorkshop_GetItemDailyRevenue_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetItemDailyRevenue_Response::InternalSwap(CWorkshop_GetItemDailyRevenue_Response* other) {
  country_revenue_.InternalSwap(&other->country_revenue_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_GetItemDailyRevenue_Response::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_GetItemDailyRevenue_Response

// repeated .proto.dota.CWorkshop_GetItemDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
int CWorkshop_GetItemDailyRevenue_Response::country_revenue_size() const {
  return country_revenue_.size();
}
void CWorkshop_GetItemDailyRevenue_Response::clear_country_revenue() {
  country_revenue_.Clear();
}
const ::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue& CWorkshop_GetItemDailyRevenue_Response::country_revenue(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetItemDailyRevenue_Response.country_revenue)
  return country_revenue_.Get(index);
}
::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetItemDailyRevenue_Response::mutable_country_revenue(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CWorkshop_GetItemDailyRevenue_Response.country_revenue)
  return country_revenue_.Mutable(index);
}
::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetItemDailyRevenue_Response::add_country_revenue() {
  // @@protoc_insertion_point(field_add:proto.dota.CWorkshop_GetItemDailyRevenue_Response.country_revenue)
  return country_revenue_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue >*
CWorkshop_GetItemDailyRevenue_Response::mutable_country_revenue() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CWorkshop_GetItemDailyRevenue_Response.country_revenue)
  return &country_revenue_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CWorkshop_GetItemDailyRevenue_Response_CountryDailyRevenue >&
CWorkshop_GetItemDailyRevenue_Response::country_revenue() const {
  // @@protoc_insertion_point(field_list:proto.dota.CWorkshop_GetItemDailyRevenue_Response.country_revenue)
  return country_revenue_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetPackageDailyRevenue_Request::kPackageidFieldNumber;
const int CWorkshop_GetPackageDailyRevenue_Request::kDateStartFieldNumber;
const int CWorkshop_GetPackageDailyRevenue_Request::kDateEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetPackageDailyRevenue_Request::CWorkshop_GetPackageDailyRevenue_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
}
CWorkshop_GetPackageDailyRevenue_Request::CWorkshop_GetPackageDailyRevenue_Request(const CWorkshop_GetPackageDailyRevenue_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&packageid_, &from.packageid_,
    reinterpret_cast<char*>(&date_end_) -
    reinterpret_cast<char*>(&packageid_) + sizeof(date_end_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
}

void CWorkshop_GetPackageDailyRevenue_Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&packageid_, 0, reinterpret_cast<char*>(&date_end_) -
    reinterpret_cast<char*>(&packageid_) + sizeof(date_end_));
}

CWorkshop_GetPackageDailyRevenue_Request::~CWorkshop_GetPackageDailyRevenue_Request() {
  // @@protoc_insertion_point(destructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  SharedDtor();
}

void CWorkshop_GetPackageDailyRevenue_Request::SharedDtor() {
}

void CWorkshop_GetPackageDailyRevenue_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetPackageDailyRevenue_Request::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_GetPackageDailyRevenue_Request& CWorkshop_GetPackageDailyRevenue_Request::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_GetPackageDailyRevenue_Request* CWorkshop_GetPackageDailyRevenue_Request::New(::google::protobuf::Arena* arena) const {
  CWorkshop_GetPackageDailyRevenue_Request* n = new CWorkshop_GetPackageDailyRevenue_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_GetPackageDailyRevenue_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&packageid_, 0, reinterpret_cast<char*>(&date_end_) -
      reinterpret_cast<char*>(&packageid_) + sizeof(date_end_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_GetPackageDailyRevenue_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 packageid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_packageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &packageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 date_start = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_date_start();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 date_end = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_date_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  return false;
#undef DO_
}

void CWorkshop_GetPackageDailyRevenue_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->packageid(), output);
  }

  // optional uint32 date_start = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->date_start(), output);
  }

  // optional uint32 date_end = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->date_end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
}

::google::protobuf::uint8* CWorkshop_GetPackageDailyRevenue_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 packageid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->packageid(), target);
  }

  // optional uint32 date_start = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->date_start(), target);
  }

  // optional uint32 date_end = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->date_end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  return target;
}

size_t CWorkshop_GetPackageDailyRevenue_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 packageid = 1;
    if (has_packageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->packageid());
    }

    // optional uint32 date_start = 2;
    if (has_date_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date_start());
    }

    // optional uint32 date_end = 3;
    if (has_date_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date_end());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetPackageDailyRevenue_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetPackageDailyRevenue_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_GetPackageDailyRevenue_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
    MergeFrom(*source);
  }
}

void CWorkshop_GetPackageDailyRevenue_Request::MergeFrom(const CWorkshop_GetPackageDailyRevenue_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      packageid_ = from.packageid_;
    }
    if (cached_has_bits & 0x00000002u) {
      date_start_ = from.date_start_;
    }
    if (cached_has_bits & 0x00000004u) {
      date_end_ = from.date_end_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_GetPackageDailyRevenue_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetPackageDailyRevenue_Request::CopyFrom(const CWorkshop_GetPackageDailyRevenue_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetPackageDailyRevenue_Request::IsInitialized() const {
  return true;
}

void CWorkshop_GetPackageDailyRevenue_Request::Swap(CWorkshop_GetPackageDailyRevenue_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetPackageDailyRevenue_Request::InternalSwap(CWorkshop_GetPackageDailyRevenue_Request* other) {
  std::swap(packageid_, other->packageid_);
  std::swap(date_start_, other->date_start_);
  std::swap(date_end_, other->date_end_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_GetPackageDailyRevenue_Request::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_GetPackageDailyRevenue_Request

// optional uint32 packageid = 1;
bool CWorkshop_GetPackageDailyRevenue_Request::has_packageid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_GetPackageDailyRevenue_Request::set_has_packageid() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_GetPackageDailyRevenue_Request::clear_has_packageid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_GetPackageDailyRevenue_Request::clear_packageid() {
  packageid_ = 0u;
  clear_has_packageid();
}
::google::protobuf::uint32 CWorkshop_GetPackageDailyRevenue_Request::packageid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetPackageDailyRevenue_Request.packageid)
  return packageid_;
}
void CWorkshop_GetPackageDailyRevenue_Request::set_packageid(::google::protobuf::uint32 value) {
  set_has_packageid();
  packageid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetPackageDailyRevenue_Request.packageid)
}

// optional uint32 date_start = 2;
bool CWorkshop_GetPackageDailyRevenue_Request::has_date_start() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CWorkshop_GetPackageDailyRevenue_Request::set_has_date_start() {
  _has_bits_[0] |= 0x00000002u;
}
void CWorkshop_GetPackageDailyRevenue_Request::clear_has_date_start() {
  _has_bits_[0] &= ~0x00000002u;
}
void CWorkshop_GetPackageDailyRevenue_Request::clear_date_start() {
  date_start_ = 0u;
  clear_has_date_start();
}
::google::protobuf::uint32 CWorkshop_GetPackageDailyRevenue_Request::date_start() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetPackageDailyRevenue_Request.date_start)
  return date_start_;
}
void CWorkshop_GetPackageDailyRevenue_Request::set_date_start(::google::protobuf::uint32 value) {
  set_has_date_start();
  date_start_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetPackageDailyRevenue_Request.date_start)
}

// optional uint32 date_end = 3;
bool CWorkshop_GetPackageDailyRevenue_Request::has_date_end() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CWorkshop_GetPackageDailyRevenue_Request::set_has_date_end() {
  _has_bits_[0] |= 0x00000004u;
}
void CWorkshop_GetPackageDailyRevenue_Request::clear_has_date_end() {
  _has_bits_[0] &= ~0x00000004u;
}
void CWorkshop_GetPackageDailyRevenue_Request::clear_date_end() {
  date_end_ = 0u;
  clear_has_date_end();
}
::google::protobuf::uint32 CWorkshop_GetPackageDailyRevenue_Request::date_end() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetPackageDailyRevenue_Request.date_end)
  return date_end_;
}
void CWorkshop_GetPackageDailyRevenue_Request::set_date_end(::google::protobuf::uint32 value) {
  set_has_date_end();
  date_end_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetPackageDailyRevenue_Request.date_end)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::kCountryCodeFieldNumber;
const int CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::kDateFieldNumber;
const int CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::kRevenueUsdFieldNumber;
const int CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::kUnitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
}
CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue(const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country_code()) {
    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  ::memcpy(&revenue_usd_, &from.revenue_usd_,
    reinterpret_cast<char*>(&units_) -
    reinterpret_cast<char*>(&revenue_usd_) + sizeof(units_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::SharedCtor() {
  _cached_size_ = 0;
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&revenue_usd_, 0, reinterpret_cast<char*>(&units_) -
    reinterpret_cast<char*>(&revenue_usd_) + sizeof(units_));
}

CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::~CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue() {
  // @@protoc_insertion_point(destructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  SharedDtor();
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::SharedDtor() {
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::New(::google::protobuf::Arena* arena) const {
  CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* n = new CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  if (has_country_code()) {
    GOOGLE_DCHECK(!country_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*country_code_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&revenue_usd_, 0, reinterpret_cast<char*>(&units_) -
      reinterpret_cast<char*>(&revenue_usd_) + sizeof(units_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string country_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country_code().data(), this->country_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 date = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_date();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 revenue_usd = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_revenue_usd();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &revenue_usd_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 units = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_units();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &units_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  return false;
#undef DO_
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string country_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), this->country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->country_code(), output);
  }

  // optional uint32 date = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->date(), output);
  }

  // optional int64 revenue_usd = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->revenue_usd(), output);
  }

  // optional int32 units = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->units(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
}

::google::protobuf::uint8* CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string country_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), this->country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->country_code(), target);
  }

  // optional uint32 date = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->date(), target);
  }

  // optional int64 revenue_usd = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->revenue_usd(), target);
  }

  // optional int32 units = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->units(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  return target;
}

size_t CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string country_code = 1;
    if (has_country_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_code());
    }

    // optional int64 revenue_usd = 3;
    if (has_revenue_usd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->revenue_usd());
    }

    // optional uint32 date = 2;
    if (has_date()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->date());
    }

    // optional int32 units = 4;
    if (has_units()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->units());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
    MergeFrom(*source);
  }
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::MergeFrom(const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_country_code();
      country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      revenue_usd_ = from.revenue_usd_;
    }
    if (cached_has_bits & 0x00000004u) {
      date_ = from.date_;
    }
    if (cached_has_bits & 0x00000008u) {
      units_ = from.units_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::CopyFrom(const CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::IsInitialized() const {
  return true;
}

void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::Swap(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::InternalSwap(CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* other) {
  country_code_.Swap(&other->country_code_);
  std::swap(revenue_usd_, other->revenue_usd_);
  std::swap(date_, other->date_);
  std::swap(units_, other->units_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue

// optional string country_code = 1;
bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::has_country_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_has_country_code() {
  _has_bits_[0] |= 0x00000001u;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country_code();
}
const ::std::string& CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::country_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
  return country_code_.GetNoArena();
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_country_code(const ::std::string& value) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
}
#if LANG_CXX11
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_country_code(::std::string&& value) {
  set_has_country_code();
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
}
#endif
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
}
::std::string* CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::mutable_country_code() {
  set_has_country_code();
  // @@protoc_insertion_point(field_mutable:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
  clear_has_country_code();
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    set_has_country_code();
  } else {
    clear_has_country_code();
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.country_code)
}

// optional uint32 date = 2;
bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::has_date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_has_date() {
  _has_bits_[0] |= 0x00000004u;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::clear_has_date() {
  _has_bits_[0] &= ~0x00000004u;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::clear_date() {
  date_ = 0u;
  clear_has_date();
}
::google::protobuf::uint32 CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::date() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.date)
  return date_;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_date(::google::protobuf::uint32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.date)
}

// optional int64 revenue_usd = 3;
bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::has_revenue_usd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_has_revenue_usd() {
  _has_bits_[0] |= 0x00000002u;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::clear_has_revenue_usd() {
  _has_bits_[0] &= ~0x00000002u;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::clear_revenue_usd() {
  revenue_usd_ = GOOGLE_LONGLONG(0);
  clear_has_revenue_usd();
}
::google::protobuf::int64 CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::revenue_usd() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.revenue_usd)
  return revenue_usd_;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_revenue_usd(::google::protobuf::int64 value) {
  set_has_revenue_usd();
  revenue_usd_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.revenue_usd)
}

// optional int32 units = 4;
bool CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::has_units() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_has_units() {
  _has_bits_[0] |= 0x00000008u;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::clear_has_units() {
  _has_bits_[0] &= ~0x00000008u;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::clear_units() {
  units_ = 0;
  clear_has_units();
}
::google::protobuf::int32 CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::units() const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.units)
  return units_;
}
void CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue::set_units(::google::protobuf::int32 value) {
  set_has_units();
  units_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue.units)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CWorkshop_GetPackageDailyRevenue_Response::kCountryRevenueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CWorkshop_GetPackageDailyRevenue_Response::CWorkshop_GetPackageDailyRevenue_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
}
CWorkshop_GetPackageDailyRevenue_Response::CWorkshop_GetPackageDailyRevenue_Response(const CWorkshop_GetPackageDailyRevenue_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      country_revenue_(from.country_revenue_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
}

void CWorkshop_GetPackageDailyRevenue_Response::SharedCtor() {
  _cached_size_ = 0;
}

CWorkshop_GetPackageDailyRevenue_Response::~CWorkshop_GetPackageDailyRevenue_Response() {
  // @@protoc_insertion_point(destructor:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  SharedDtor();
}

void CWorkshop_GetPackageDailyRevenue_Response::SharedDtor() {
}

void CWorkshop_GetPackageDailyRevenue_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CWorkshop_GetPackageDailyRevenue_Response::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CWorkshop_GetPackageDailyRevenue_Response& CWorkshop_GetPackageDailyRevenue_Response::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CWorkshop_GetPackageDailyRevenue_Response* CWorkshop_GetPackageDailyRevenue_Response::New(::google::protobuf::Arena* arena) const {
  CWorkshop_GetPackageDailyRevenue_Response* n = new CWorkshop_GetPackageDailyRevenue_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CWorkshop_GetPackageDailyRevenue_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  country_revenue_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CWorkshop_GetPackageDailyRevenue_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_country_revenue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  return false;
#undef DO_
}

void CWorkshop_GetPackageDailyRevenue_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  for (unsigned int i = 0, n = this->country_revenue_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->country_revenue(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
}

::google::protobuf::uint8* CWorkshop_GetPackageDailyRevenue_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  for (unsigned int i = 0, n = this->country_revenue_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->country_revenue(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  return target;
}

size_t CWorkshop_GetPackageDailyRevenue_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
  {
    unsigned int count = this->country_revenue_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->country_revenue(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CWorkshop_GetPackageDailyRevenue_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CWorkshop_GetPackageDailyRevenue_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CWorkshop_GetPackageDailyRevenue_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
    MergeFrom(*source);
  }
}

void CWorkshop_GetPackageDailyRevenue_Response::MergeFrom(const CWorkshop_GetPackageDailyRevenue_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  country_revenue_.MergeFrom(from.country_revenue_);
}

void CWorkshop_GetPackageDailyRevenue_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CWorkshop_GetPackageDailyRevenue_Response::CopyFrom(const CWorkshop_GetPackageDailyRevenue_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CWorkshop_GetPackageDailyRevenue_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CWorkshop_GetPackageDailyRevenue_Response::IsInitialized() const {
  return true;
}

void CWorkshop_GetPackageDailyRevenue_Response::Swap(CWorkshop_GetPackageDailyRevenue_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CWorkshop_GetPackageDailyRevenue_Response::InternalSwap(CWorkshop_GetPackageDailyRevenue_Response* other) {
  country_revenue_.InternalSwap(&other->country_revenue_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CWorkshop_GetPackageDailyRevenue_Response::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CWorkshop_GetPackageDailyRevenue_Response

// repeated .proto.dota.CWorkshop_GetPackageDailyRevenue_Response.CountryDailyRevenue country_revenue = 1;
int CWorkshop_GetPackageDailyRevenue_Response::country_revenue_size() const {
  return country_revenue_.size();
}
void CWorkshop_GetPackageDailyRevenue_Response::clear_country_revenue() {
  country_revenue_.Clear();
}
const ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue& CWorkshop_GetPackageDailyRevenue_Response::country_revenue(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.country_revenue)
  return country_revenue_.Get(index);
}
::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetPackageDailyRevenue_Response::mutable_country_revenue(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.country_revenue)
  return country_revenue_.Mutable(index);
}
::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue* CWorkshop_GetPackageDailyRevenue_Response::add_country_revenue() {
  // @@protoc_insertion_point(field_add:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.country_revenue)
  return country_revenue_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue >*
CWorkshop_GetPackageDailyRevenue_Response::mutable_country_revenue() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.country_revenue)
  return &country_revenue_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CWorkshop_GetPackageDailyRevenue_Response_CountryDailyRevenue >&
CWorkshop_GetPackageDailyRevenue_Response::country_revenue() const {
  // @@protoc_insertion_point(field_list:proto.dota.CWorkshop_GetPackageDailyRevenue_Response.country_revenue)
  return country_revenue_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgSQLGCToGCGrantBackpackSlots::kAccountIdFieldNumber;
const int CMsgSQLGCToGCGrantBackpackSlots::kAddSlotsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgSQLGCToGCGrantBackpackSlots::CMsgSQLGCToGCGrantBackpackSlots()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
}
CMsgSQLGCToGCGrantBackpackSlots::CMsgSQLGCToGCGrantBackpackSlots(const CMsgSQLGCToGCGrantBackpackSlots& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&account_id_, &from.account_id_,
    reinterpret_cast<char*>(&add_slots_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(add_slots_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
}

void CMsgSQLGCToGCGrantBackpackSlots::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&account_id_, 0, reinterpret_cast<char*>(&add_slots_) -
    reinterpret_cast<char*>(&account_id_) + sizeof(add_slots_));
}

CMsgSQLGCToGCGrantBackpackSlots::~CMsgSQLGCToGCGrantBackpackSlots() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  SharedDtor();
}

void CMsgSQLGCToGCGrantBackpackSlots::SharedDtor() {
}

void CMsgSQLGCToGCGrantBackpackSlots::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgSQLGCToGCGrantBackpackSlots::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgSQLGCToGCGrantBackpackSlots& CMsgSQLGCToGCGrantBackpackSlots::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgSQLGCToGCGrantBackpackSlots* CMsgSQLGCToGCGrantBackpackSlots::New(::google::protobuf::Arena* arena) const {
  CMsgSQLGCToGCGrantBackpackSlots* n = new CMsgSQLGCToGCGrantBackpackSlots;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgSQLGCToGCGrantBackpackSlots::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&account_id_, 0, reinterpret_cast<char*>(&add_slots_) -
      reinterpret_cast<char*>(&account_id_) + sizeof(add_slots_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgSQLGCToGCGrantBackpackSlots::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 add_slots = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_add_slots();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &add_slots_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  return false;
#undef DO_
}

void CMsgSQLGCToGCGrantBackpackSlots::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional uint32 add_slots = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->add_slots(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
}

::google::protobuf::uint8* CMsgSQLGCToGCGrantBackpackSlots::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional uint32 add_slots = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->add_slots(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  return target;
}

size_t CMsgSQLGCToGCGrantBackpackSlots::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

    // optional uint32 add_slots = 2;
    if (has_add_slots()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->add_slots());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgSQLGCToGCGrantBackpackSlots::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgSQLGCToGCGrantBackpackSlots* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgSQLGCToGCGrantBackpackSlots>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
    MergeFrom(*source);
  }
}

void CMsgSQLGCToGCGrantBackpackSlots::MergeFrom(const CMsgSQLGCToGCGrantBackpackSlots& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      account_id_ = from.account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      add_slots_ = from.add_slots_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgSQLGCToGCGrantBackpackSlots::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgSQLGCToGCGrantBackpackSlots::CopyFrom(const CMsgSQLGCToGCGrantBackpackSlots& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgSQLGCToGCGrantBackpackSlots)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgSQLGCToGCGrantBackpackSlots::IsInitialized() const {
  return true;
}

void CMsgSQLGCToGCGrantBackpackSlots::Swap(CMsgSQLGCToGCGrantBackpackSlots* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgSQLGCToGCGrantBackpackSlots::InternalSwap(CMsgSQLGCToGCGrantBackpackSlots* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(add_slots_, other->add_slots_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgSQLGCToGCGrantBackpackSlots::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgSQLGCToGCGrantBackpackSlots

// optional uint32 account_id = 1;
bool CMsgSQLGCToGCGrantBackpackSlots::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgSQLGCToGCGrantBackpackSlots::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgSQLGCToGCGrantBackpackSlots::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgSQLGCToGCGrantBackpackSlots::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgSQLGCToGCGrantBackpackSlots::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLGCToGCGrantBackpackSlots.account_id)
  return account_id_;
}
void CMsgSQLGCToGCGrantBackpackSlots::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLGCToGCGrantBackpackSlots.account_id)
}

// optional uint32 add_slots = 2;
bool CMsgSQLGCToGCGrantBackpackSlots::has_add_slots() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgSQLGCToGCGrantBackpackSlots::set_has_add_slots() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgSQLGCToGCGrantBackpackSlots::clear_has_add_slots() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgSQLGCToGCGrantBackpackSlots::clear_add_slots() {
  add_slots_ = 0u;
  clear_has_add_slots();
}
::google::protobuf::uint32 CMsgSQLGCToGCGrantBackpackSlots::add_slots() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSQLGCToGCGrantBackpackSlots.add_slots)
  return add_slots_;
}
void CMsgSQLGCToGCGrantBackpackSlots::set_add_slots(::google::protobuf::uint32 value) {
  set_has_add_slots();
  add_slots_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSQLGCToGCGrantBackpackSlots.add_slots)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCLookupAccountName::kAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCLookupAccountName::CMsgClientToGCLookupAccountName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCLookupAccountName)
}
CMsgClientToGCLookupAccountName::CMsgClientToGCLookupAccountName(const CMsgClientToGCLookupAccountName& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCLookupAccountName)
}

void CMsgClientToGCLookupAccountName::SharedCtor() {
  _cached_size_ = 0;
  account_id_ = 0u;
}

CMsgClientToGCLookupAccountName::~CMsgClientToGCLookupAccountName() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCLookupAccountName)
  SharedDtor();
}

void CMsgClientToGCLookupAccountName::SharedDtor() {
}

void CMsgClientToGCLookupAccountName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCLookupAccountName::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCLookupAccountName& CMsgClientToGCLookupAccountName::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCLookupAccountName* CMsgClientToGCLookupAccountName::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCLookupAccountName* n = new CMsgClientToGCLookupAccountName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCLookupAccountName::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCLookupAccountName)
  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCLookupAccountName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCLookupAccountName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCLookupAccountName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCLookupAccountName)
  return false;
#undef DO_
}

void CMsgClientToGCLookupAccountName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCLookupAccountName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCLookupAccountName)
}

::google::protobuf::uint8* CMsgClientToGCLookupAccountName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCLookupAccountName)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCLookupAccountName)
  return target;
}

size_t CMsgClientToGCLookupAccountName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCLookupAccountName)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 account_id = 1;
  if (has_account_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->account_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCLookupAccountName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCLookupAccountName)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCLookupAccountName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCLookupAccountName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCLookupAccountName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCLookupAccountName)
    MergeFrom(*source);
  }
}

void CMsgClientToGCLookupAccountName::MergeFrom(const CMsgClientToGCLookupAccountName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCLookupAccountName)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_account_id()) {
    set_account_id(from.account_id());
  }
}

void CMsgClientToGCLookupAccountName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCLookupAccountName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCLookupAccountName::CopyFrom(const CMsgClientToGCLookupAccountName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCLookupAccountName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLookupAccountName::IsInitialized() const {
  return true;
}

void CMsgClientToGCLookupAccountName::Swap(CMsgClientToGCLookupAccountName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCLookupAccountName::InternalSwap(CMsgClientToGCLookupAccountName* other) {
  std::swap(account_id_, other->account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCLookupAccountName::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCLookupAccountName

// optional uint32 account_id = 1;
bool CMsgClientToGCLookupAccountName::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCLookupAccountName::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCLookupAccountName::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCLookupAccountName::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgClientToGCLookupAccountName::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCLookupAccountName.account_id)
  return account_id_;
}
void CMsgClientToGCLookupAccountName::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCLookupAccountName.account_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCLookupAccountNameResponse::kAccountIdFieldNumber;
const int CMsgClientToGCLookupAccountNameResponse::kAccountNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCLookupAccountNameResponse::CMsgClientToGCLookupAccountNameResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCLookupAccountNameResponse)
}
CMsgClientToGCLookupAccountNameResponse::CMsgClientToGCLookupAccountNameResponse(const CMsgClientToGCLookupAccountNameResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  account_id_ = from.account_id_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCLookupAccountNameResponse)
}

void CMsgClientToGCLookupAccountNameResponse::SharedCtor() {
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_id_ = 0u;
}

CMsgClientToGCLookupAccountNameResponse::~CMsgClientToGCLookupAccountNameResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  SharedDtor();
}

void CMsgClientToGCLookupAccountNameResponse::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientToGCLookupAccountNameResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCLookupAccountNameResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCLookupAccountNameResponse& CMsgClientToGCLookupAccountNameResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCLookupAccountNameResponse* CMsgClientToGCLookupAccountNameResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCLookupAccountNameResponse* n = new CMsgClientToGCLookupAccountNameResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCLookupAccountNameResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  if (has_account_name()) {
    GOOGLE_DCHECK(!account_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_name_.UnsafeRawStringPointer())->clear();
  }
  account_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCLookupAccountNameResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  return false;
#undef DO_
}

void CMsgClientToGCLookupAccountNameResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->account_id(), output);
  }

  // optional string account_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCLookupAccountNameResponse)
}

::google::protobuf::uint8* CMsgClientToGCLookupAccountNameResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->account_id(), target);
  }

  // optional string account_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  return target;
}

size_t CMsgClientToGCLookupAccountNameResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string account_name = 2;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional uint32 account_id = 1;
    if (has_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCLookupAccountNameResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCLookupAccountNameResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCLookupAccountNameResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCLookupAccountNameResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCLookupAccountNameResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCLookupAccountNameResponse::MergeFrom(const CMsgClientToGCLookupAccountNameResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_name();
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      account_id_ = from.account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCLookupAccountNameResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCLookupAccountNameResponse::CopyFrom(const CMsgClientToGCLookupAccountNameResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCLookupAccountNameResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCLookupAccountNameResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCLookupAccountNameResponse::Swap(CMsgClientToGCLookupAccountNameResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCLookupAccountNameResponse::InternalSwap(CMsgClientToGCLookupAccountNameResponse* other) {
  account_name_.Swap(&other->account_name_);
  std::swap(account_id_, other->account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCLookupAccountNameResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCLookupAccountNameResponse

// optional uint32 account_id = 1;
bool CMsgClientToGCLookupAccountNameResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCLookupAccountNameResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCLookupAccountNameResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCLookupAccountNameResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
::google::protobuf::uint32 CMsgClientToGCLookupAccountNameResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCLookupAccountNameResponse.account_id)
  return account_id_;
}
void CMsgClientToGCLookupAccountNameResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCLookupAccountNameResponse.account_id)
}

// optional string account_name = 2;
bool CMsgClientToGCLookupAccountNameResponse::has_account_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCLookupAccountNameResponse::set_has_account_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCLookupAccountNameResponse::clear_has_account_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCLookupAccountNameResponse::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account_name();
}
const ::std::string& CMsgClientToGCLookupAccountNameResponse::account_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name)
  return account_name_.GetNoArena();
}
void CMsgClientToGCLookupAccountNameResponse::set_account_name(const ::std::string& value) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name)
}
#if LANG_CXX11
void CMsgClientToGCLookupAccountNameResponse::set_account_name(::std::string&& value) {
  set_has_account_name();
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name)
}
#endif
void CMsgClientToGCLookupAccountNameResponse::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name)
}
void CMsgClientToGCLookupAccountNameResponse::set_account_name(const char* value, size_t size) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name)
}
::std::string* CMsgClientToGCLookupAccountNameResponse::mutable_account_name() {
  set_has_account_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientToGCLookupAccountNameResponse::release_account_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name)
  clear_has_account_name();
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientToGCLookupAccountNameResponse::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    set_has_account_name();
  } else {
    clear_has_account_name();
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCLookupAccountNameResponse.account_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCCreateStaticRecipe_Item::kItemIdFieldNumber;
const int CMsgClientToGCCreateStaticRecipe_Item::kSlotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCCreateStaticRecipe_Item::CMsgClientToGCCreateStaticRecipe_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
}
CMsgClientToGCCreateStaticRecipe_Item::CMsgClientToGCCreateStaticRecipe_Item(const CMsgClientToGCCreateStaticRecipe_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&slot_id_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(slot_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
}

void CMsgClientToGCCreateStaticRecipe_Item::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&slot_id_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(slot_id_));
}

CMsgClientToGCCreateStaticRecipe_Item::~CMsgClientToGCCreateStaticRecipe_Item() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipe_Item::SharedDtor() {
}

void CMsgClientToGCCreateStaticRecipe_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipe_Item::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCCreateStaticRecipe_Item& CMsgClientToGCCreateStaticRecipe_Item::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCCreateStaticRecipe_Item* CMsgClientToGCCreateStaticRecipe_Item::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCCreateStaticRecipe_Item* n = new CMsgClientToGCCreateStaticRecipe_Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCCreateStaticRecipe_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&slot_id_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(slot_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCCreateStaticRecipe_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 item_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 slot_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_slot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  return false;
#undef DO_
}

void CMsgClientToGCCreateStaticRecipe_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->item_id(), output);
  }

  // optional uint32 slot_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->slot_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipe_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 item_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->item_id(), target);
  }

  // optional uint32 slot_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->slot_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  return target;
}

size_t CMsgClientToGCCreateStaticRecipe_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 item_id = 1;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 slot_id = 2;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCCreateStaticRecipe_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipe_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCCreateStaticRecipe_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipe_Item::MergeFrom(const CMsgClientToGCCreateStaticRecipe_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      slot_id_ = from.slot_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCCreateStaticRecipe_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipe_Item::CopyFrom(const CMsgClientToGCCreateStaticRecipe_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipe_Item::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateStaticRecipe_Item::Swap(CMsgClientToGCCreateStaticRecipe_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCCreateStaticRecipe_Item::InternalSwap(CMsgClientToGCCreateStaticRecipe_Item* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(slot_id_, other->slot_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipe_Item::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCCreateStaticRecipe_Item

// optional uint64 item_id = 1;
bool CMsgClientToGCCreateStaticRecipe_Item::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCCreateStaticRecipe_Item::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCCreateStaticRecipe_Item::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCCreateStaticRecipe_Item::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgClientToGCCreateStaticRecipe_Item::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipe.Item.item_id)
  return item_id_;
}
void CMsgClientToGCCreateStaticRecipe_Item::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateStaticRecipe.Item.item_id)
}

// optional uint32 slot_id = 2;
bool CMsgClientToGCCreateStaticRecipe_Item::has_slot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCCreateStaticRecipe_Item::set_has_slot_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCCreateStaticRecipe_Item::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCCreateStaticRecipe_Item::clear_slot_id() {
  slot_id_ = 0u;
  clear_has_slot_id();
}
::google::protobuf::uint32 CMsgClientToGCCreateStaticRecipe_Item::slot_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipe.Item.slot_id)
  return slot_id_;
}
void CMsgClientToGCCreateStaticRecipe_Item::set_slot_id(::google::protobuf::uint32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateStaticRecipe.Item.slot_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCCreateStaticRecipe::kItemsFieldNumber;
const int CMsgClientToGCCreateStaticRecipe::kRecipeDefIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCCreateStaticRecipe::CMsgClientToGCCreateStaticRecipe()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCCreateStaticRecipe)
}
CMsgClientToGCCreateStaticRecipe::CMsgClientToGCCreateStaticRecipe(const CMsgClientToGCCreateStaticRecipe& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  recipe_def_index_ = from.recipe_def_index_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCCreateStaticRecipe)
}

void CMsgClientToGCCreateStaticRecipe::SharedCtor() {
  _cached_size_ = 0;
  recipe_def_index_ = 0u;
}

CMsgClientToGCCreateStaticRecipe::~CMsgClientToGCCreateStaticRecipe() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCCreateStaticRecipe)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipe::SharedDtor() {
}

void CMsgClientToGCCreateStaticRecipe::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipe::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCCreateStaticRecipe& CMsgClientToGCCreateStaticRecipe::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCCreateStaticRecipe* CMsgClientToGCCreateStaticRecipe::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCCreateStaticRecipe* n = new CMsgClientToGCCreateStaticRecipe;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCCreateStaticRecipe::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  items_.Clear();
  recipe_def_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCCreateStaticRecipe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CMsgClientToGCCreateStaticRecipe.Item items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 recipe_def_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_recipe_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recipe_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCCreateStaticRecipe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCCreateStaticRecipe)
  return false;
#undef DO_
}

void CMsgClientToGCCreateStaticRecipe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipe.Item items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 recipe_def_index = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->recipe_def_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCCreateStaticRecipe)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipe::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipe.Item items = 1;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->items(i), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 recipe_def_index = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->recipe_def_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCCreateStaticRecipe)
  return target;
}

size_t CMsgClientToGCCreateStaticRecipe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipe.Item items = 1;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  // optional uint32 recipe_def_index = 2;
  if (has_recipe_def_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->recipe_def_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCCreateStaticRecipe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipe* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCCreateStaticRecipe>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCCreateStaticRecipe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCCreateStaticRecipe)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipe::MergeFrom(const CMsgClientToGCCreateStaticRecipe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  if (from.has_recipe_def_index()) {
    set_recipe_def_index(from.recipe_def_index());
  }
}

void CMsgClientToGCCreateStaticRecipe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipe::CopyFrom(const CMsgClientToGCCreateStaticRecipe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipe::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateStaticRecipe::Swap(CMsgClientToGCCreateStaticRecipe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCCreateStaticRecipe::InternalSwap(CMsgClientToGCCreateStaticRecipe* other) {
  items_.InternalSwap(&other->items_);
  std::swap(recipe_def_index_, other->recipe_def_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipe::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCCreateStaticRecipe

// repeated .proto.dota.CMsgClientToGCCreateStaticRecipe.Item items = 1;
int CMsgClientToGCCreateStaticRecipe::items_size() const {
  return items_.size();
}
void CMsgClientToGCCreateStaticRecipe::clear_items() {
  items_.Clear();
}
const ::proto::dota::CMsgClientToGCCreateStaticRecipe_Item& CMsgClientToGCCreateStaticRecipe::items(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipe.items)
  return items_.Get(index);
}
::proto::dota::CMsgClientToGCCreateStaticRecipe_Item* CMsgClientToGCCreateStaticRecipe::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCCreateStaticRecipe.items)
  return items_.Mutable(index);
}
::proto::dota::CMsgClientToGCCreateStaticRecipe_Item* CMsgClientToGCCreateStaticRecipe::add_items() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCCreateStaticRecipe.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCreateStaticRecipe_Item >*
CMsgClientToGCCreateStaticRecipe::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCCreateStaticRecipe.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCreateStaticRecipe_Item >&
CMsgClientToGCCreateStaticRecipe::items() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCCreateStaticRecipe.items)
  return items_;
}

// optional uint32 recipe_def_index = 2;
bool CMsgClientToGCCreateStaticRecipe::has_recipe_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCCreateStaticRecipe::set_has_recipe_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCCreateStaticRecipe::clear_has_recipe_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCCreateStaticRecipe::clear_recipe_def_index() {
  recipe_def_index_ = 0u;
  clear_has_recipe_def_index();
}
::google::protobuf::uint32 CMsgClientToGCCreateStaticRecipe::recipe_def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipe.recipe_def_index)
  return recipe_def_index_;
}
void CMsgClientToGCCreateStaticRecipe::set_recipe_def_index(::google::protobuf::uint32 value) {
  set_has_recipe_def_index();
  recipe_def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateStaticRecipe.recipe_def_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCCreateStaticRecipeResponse_OutputItem::kDefIndexFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse_OutputItem::kItemIdFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse_OutputItem::kSlotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCCreateStaticRecipeResponse_OutputItem::CMsgClientToGCCreateStaticRecipeResponse_OutputItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
}
CMsgClientToGCCreateStaticRecipeResponse_OutputItem::CMsgClientToGCCreateStaticRecipeResponse_OutputItem(const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&item_id_, &from.item_id_,
    reinterpret_cast<char*>(&slot_id_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(slot_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&item_id_, 0, reinterpret_cast<char*>(&slot_id_) -
    reinterpret_cast<char*>(&item_id_) + sizeof(slot_id_));
}

CMsgClientToGCCreateStaticRecipeResponse_OutputItem::~CMsgClientToGCCreateStaticRecipeResponse_OutputItem() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SharedDtor() {
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipeResponse_OutputItem::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& CMsgClientToGCCreateStaticRecipeResponse_OutputItem::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCCreateStaticRecipeResponse_OutputItem* CMsgClientToGCCreateStaticRecipeResponse_OutputItem::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCCreateStaticRecipeResponse_OutputItem* n = new CMsgClientToGCCreateStaticRecipeResponse_OutputItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&item_id_, 0, reinterpret_cast<char*>(&slot_id_) -
      reinterpret_cast<char*>(&item_id_) + sizeof(slot_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 def_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 slot_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_slot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  return false;
#undef DO_
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 def_index = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->def_index(), output);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->item_id(), output);
  }

  // optional uint32 slot_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->slot_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipeResponse_OutputItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 def_index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->def_index(), target);
  }

  // optional uint64 item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->item_id(), target);
  }

  // optional uint32 slot_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->slot_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  return target;
}

size_t CMsgClientToGCCreateStaticRecipeResponse_OutputItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 item_id = 2;
    if (has_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->item_id());
    }

    // optional uint32 def_index = 1;
    if (has_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->def_index());
    }

    // optional uint32 slot_id = 3;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipeResponse_OutputItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCCreateStaticRecipeResponse_OutputItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      item_id_ = from.item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      def_index_ = from.def_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      slot_id_ = from.slot_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse_OutputItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::Swap(CMsgClientToGCCreateStaticRecipeResponse_OutputItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::InternalSwap(CMsgClientToGCCreateStaticRecipeResponse_OutputItem* other) {
  std::swap(item_id_, other->item_id_);
  std::swap(def_index_, other->def_index_);
  std::swap(slot_id_, other->slot_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipeResponse_OutputItem::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCCreateStaticRecipeResponse_OutputItem

// optional uint32 def_index = 1;
bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
::google::protobuf::uint32 CMsgClientToGCCreateStaticRecipeResponse_OutputItem::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem.def_index)
  return def_index_;
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem.def_index)
}

// optional uint64 item_id = 2;
bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
::google::protobuf::uint64 CMsgClientToGCCreateStaticRecipeResponse_OutputItem::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem.item_id)
  return item_id_;
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem.item_id)
}

// optional uint32 slot_id = 3;
bool CMsgClientToGCCreateStaticRecipeResponse_OutputItem::has_slot_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::set_has_slot_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::clear_slot_id() {
  slot_id_ = 0u;
  clear_has_slot_id();
}
::google::protobuf::uint32 CMsgClientToGCCreateStaticRecipeResponse_OutputItem::slot_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem.slot_id)
  return slot_id_;
}
void CMsgClientToGCCreateStaticRecipeResponse_OutputItem::set_slot_id(::google::protobuf::uint32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem.slot_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCCreateStaticRecipeResponse_InputError::kSlotIdFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse_InputError::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCCreateStaticRecipeResponse_InputError::CMsgClientToGCCreateStaticRecipeResponse_InputError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
}
CMsgClientToGCCreateStaticRecipeResponse_InputError::CMsgClientToGCCreateStaticRecipeResponse_InputError(const CMsgClientToGCCreateStaticRecipeResponse_InputError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&slot_id_, &from.slot_id_,
    reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&slot_id_) + sizeof(error_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&slot_id_, 0, reinterpret_cast<char*>(&error_) -
    reinterpret_cast<char*>(&slot_id_) + sizeof(error_));
}

CMsgClientToGCCreateStaticRecipeResponse_InputError::~CMsgClientToGCCreateStaticRecipeResponse_InputError() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::SharedDtor() {
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipeResponse_InputError::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCCreateStaticRecipeResponse_InputError& CMsgClientToGCCreateStaticRecipeResponse_InputError::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCCreateStaticRecipeResponse_InputError* CMsgClientToGCCreateStaticRecipeResponse_InputError::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCCreateStaticRecipeResponse_InputError* n = new CMsgClientToGCCreateStaticRecipeResponse_InputError;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&slot_id_, 0, reinterpret_cast<char*>(&error_) -
      reinterpret_cast<char*>(&slot_id_) + sizeof(error_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCCreateStaticRecipeResponse_InputError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 slot_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_slot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value)) {
            set_error(static_cast< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  return false;
#undef DO_
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 slot_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slot_id(), output);
  }

  // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipeResponse_InputError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 slot_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slot_id(), target);
  }

  // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  return target;
}

size_t CMsgClientToGCCreateStaticRecipeResponse_InputError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 slot_id = 1;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

    // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
    if (has_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->error());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipeResponse_InputError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCCreateStaticRecipeResponse_InputError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse_InputError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      slot_id_ = from.slot_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      error_ = from.error_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse_InputError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipeResponse_InputError::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateStaticRecipeResponse_InputError::Swap(CMsgClientToGCCreateStaticRecipeResponse_InputError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCCreateStaticRecipeResponse_InputError::InternalSwap(CMsgClientToGCCreateStaticRecipeResponse_InputError* other) {
  std::swap(slot_id_, other->slot_id_);
  std::swap(error_, other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipeResponse_InputError::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCCreateStaticRecipeResponse_InputError

// optional uint32 slot_id = 1;
bool CMsgClientToGCCreateStaticRecipeResponse_InputError::has_slot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCCreateStaticRecipeResponse_InputError::set_has_slot_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCCreateStaticRecipeResponse_InputError::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCCreateStaticRecipeResponse_InputError::clear_slot_id() {
  slot_id_ = 0u;
  clear_has_slot_id();
}
::google::protobuf::uint32 CMsgClientToGCCreateStaticRecipeResponse_InputError::slot_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError.slot_id)
  return slot_id_;
}
void CMsgClientToGCCreateStaticRecipeResponse_InputError::set_slot_id(::google::protobuf::uint32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError.slot_id)
}

// optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse error = 2 [default = eResponse_Success];
bool CMsgClientToGCCreateStaticRecipeResponse_InputError::has_error() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCCreateStaticRecipeResponse_InputError::set_has_error() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCCreateStaticRecipeResponse_InputError::clear_has_error() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCCreateStaticRecipeResponse_InputError::clear_error() {
  error_ = 0;
  clear_has_error();
}
::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse_InputError::error() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError.error)
  return static_cast< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse >(error_);
}
void CMsgClientToGCCreateStaticRecipeResponse_InputError::set_error(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse value) {
  assert(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value));
  set_has_error();
  error_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::kSlotIdFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
}
CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput(const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&value_, &from.value_,
    reinterpret_cast<char*>(&slot_id_) -
    reinterpret_cast<char*>(&value_) + sizeof(slot_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&value_, 0, reinterpret_cast<char*>(&slot_id_) -
    reinterpret_cast<char*>(&value_) + sizeof(slot_id_));
}

CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::~CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SharedDtor() {
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* n = new CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&value_, 0, reinterpret_cast<char*>(&slot_id_) -
      reinterpret_cast<char*>(&value_) + sizeof(slot_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 slot_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_slot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &slot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  return false;
#undef DO_
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 slot_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->slot_id(), output);
  }

  // optional uint64 value = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 slot_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->slot_id(), target);
  }

  // optional uint64 value = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  return target;
}

size_t CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->value());
    }

    // optional uint32 slot_id = 1;
    if (has_slot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->slot_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      value_ = from.value_;
    }
    if (cached_has_bits & 0x00000002u) {
      slot_id_ = from.slot_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::Swap(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::InternalSwap(CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* other) {
  std::swap(value_, other->value_);
  std::swap(slot_id_, other->slot_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput

// optional uint32 slot_id = 1;
bool CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::has_slot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::set_has_slot_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::clear_slot_id() {
  slot_id_ = 0u;
  clear_has_slot_id();
}
::google::protobuf::uint32 CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::slot_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput.slot_id)
  return slot_id_;
}
void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::set_slot_id(::google::protobuf::uint32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput.slot_id)
}

// optional uint64 value = 2;
bool CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
::google::protobuf::uint64 CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput.value)
  return value_;
}
void CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientToGCCreateStaticRecipeResponse::kResponseFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse::kOutputItemsFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse::kInputErrorsFieldNumber;
const int CMsgClientToGCCreateStaticRecipeResponse::kAdditionalOutputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientToGCCreateStaticRecipeResponse::CMsgClientToGCCreateStaticRecipeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
}
CMsgClientToGCCreateStaticRecipeResponse::CMsgClientToGCCreateStaticRecipeResponse(const CMsgClientToGCCreateStaticRecipeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      output_items_(from.output_items_),
      input_errors_(from.input_errors_),
      additional_outputs_(from.additional_outputs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  response_ = from.response_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
}

void CMsgClientToGCCreateStaticRecipeResponse::SharedCtor() {
  _cached_size_ = 0;
  response_ = 0;
}

CMsgClientToGCCreateStaticRecipeResponse::~CMsgClientToGCCreateStaticRecipeResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  SharedDtor();
}

void CMsgClientToGCCreateStaticRecipeResponse::SharedDtor() {
}

void CMsgClientToGCCreateStaticRecipeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientToGCCreateStaticRecipeResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientToGCCreateStaticRecipeResponse& CMsgClientToGCCreateStaticRecipeResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientToGCCreateStaticRecipeResponse* CMsgClientToGCCreateStaticRecipeResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientToGCCreateStaticRecipeResponse* n = new CMsgClientToGCCreateStaticRecipeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientToGCCreateStaticRecipeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  output_items_.Clear();
  input_errors_.Clear();
  additional_outputs_.Clear();
  response_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientToGCCreateStaticRecipeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value)) {
            set_response(static_cast< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_output_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_input_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_additional_outputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  return false;
#undef DO_
}

void CMsgClientToGCCreateStaticRecipeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->response(), output);
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
  for (unsigned int i = 0, n = this->output_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->output_items(i), output);
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
  for (unsigned int i = 0, n = this->input_errors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->input_errors(i), output);
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
  for (unsigned int i = 0, n = this->additional_outputs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->additional_outputs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
}

::google::protobuf::uint8* CMsgClientToGCCreateStaticRecipeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->response(), target);
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
  for (unsigned int i = 0, n = this->output_items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->output_items(i), deterministic, target);
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
  for (unsigned int i = 0, n = this->input_errors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->input_errors(i), deterministic, target);
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
  for (unsigned int i = 0, n = this->additional_outputs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->additional_outputs(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  return target;
}

size_t CMsgClientToGCCreateStaticRecipeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
  {
    unsigned int count = this->output_items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->output_items(i));
    }
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
  {
    unsigned int count = this->input_errors_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->input_errors(i));
    }
  }

  // repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
  {
    unsigned int count = this->additional_outputs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->additional_outputs(i));
    }
  }

  // optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
  if (has_response()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->response());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientToGCCreateStaticRecipeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientToGCCreateStaticRecipeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientToGCCreateStaticRecipeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
    MergeFrom(*source);
  }
}

void CMsgClientToGCCreateStaticRecipeResponse::MergeFrom(const CMsgClientToGCCreateStaticRecipeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  output_items_.MergeFrom(from.output_items_);
  input_errors_.MergeFrom(from.input_errors_);
  additional_outputs_.MergeFrom(from.additional_outputs_);
  if (from.has_response()) {
    set_response(from.response());
  }
}

void CMsgClientToGCCreateStaticRecipeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientToGCCreateStaticRecipeResponse::CopyFrom(const CMsgClientToGCCreateStaticRecipeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgClientToGCCreateStaticRecipeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientToGCCreateStaticRecipeResponse::IsInitialized() const {
  return true;
}

void CMsgClientToGCCreateStaticRecipeResponse::Swap(CMsgClientToGCCreateStaticRecipeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientToGCCreateStaticRecipeResponse::InternalSwap(CMsgClientToGCCreateStaticRecipeResponse* other) {
  output_items_.InternalSwap(&other->output_items_);
  input_errors_.InternalSwap(&other->input_errors_);
  additional_outputs_.InternalSwap(&other->additional_outputs_);
  std::swap(response_, other->response_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientToGCCreateStaticRecipeResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientToGCCreateStaticRecipeResponse

// optional .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.EResponse response = 1 [default = eResponse_Success];
bool CMsgClientToGCCreateStaticRecipeResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientToGCCreateStaticRecipeResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientToGCCreateStaticRecipeResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientToGCCreateStaticRecipeResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse CMsgClientToGCCreateStaticRecipeResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.response)
  return static_cast< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse >(response_);
}
void CMsgClientToGCCreateStaticRecipeResponse::set_response(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse value) {
  assert(::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_EResponse_IsValid(value));
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.response)
}

// repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.OutputItem output_items = 2;
int CMsgClientToGCCreateStaticRecipeResponse::output_items_size() const {
  return output_items_.size();
}
void CMsgClientToGCCreateStaticRecipeResponse::clear_output_items() {
  output_items_.Clear();
}
const ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem& CMsgClientToGCCreateStaticRecipeResponse::output_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.output_items)
  return output_items_.Get(index);
}
::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem* CMsgClientToGCCreateStaticRecipeResponse::mutable_output_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.output_items)
  return output_items_.Mutable(index);
}
::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem* CMsgClientToGCCreateStaticRecipeResponse::add_output_items() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.output_items)
  return output_items_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem >*
CMsgClientToGCCreateStaticRecipeResponse::mutable_output_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.output_items)
  return &output_items_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_OutputItem >&
CMsgClientToGCCreateStaticRecipeResponse::output_items() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.output_items)
  return output_items_;
}

// repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.InputError input_errors = 3;
int CMsgClientToGCCreateStaticRecipeResponse::input_errors_size() const {
  return input_errors_.size();
}
void CMsgClientToGCCreateStaticRecipeResponse::clear_input_errors() {
  input_errors_.Clear();
}
const ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError& CMsgClientToGCCreateStaticRecipeResponse::input_errors(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.input_errors)
  return input_errors_.Get(index);
}
::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError* CMsgClientToGCCreateStaticRecipeResponse::mutable_input_errors(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.input_errors)
  return input_errors_.Mutable(index);
}
::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError* CMsgClientToGCCreateStaticRecipeResponse::add_input_errors() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.input_errors)
  return input_errors_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError >*
CMsgClientToGCCreateStaticRecipeResponse::mutable_input_errors() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.input_errors)
  return &input_errors_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_InputError >&
CMsgClientToGCCreateStaticRecipeResponse::input_errors() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.input_errors)
  return input_errors_;
}

// repeated .proto.dota.CMsgClientToGCCreateStaticRecipeResponse.AdditionalOutput additional_outputs = 4;
int CMsgClientToGCCreateStaticRecipeResponse::additional_outputs_size() const {
  return additional_outputs_.size();
}
void CMsgClientToGCCreateStaticRecipeResponse::clear_additional_outputs() {
  additional_outputs_.Clear();
}
const ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput& CMsgClientToGCCreateStaticRecipeResponse::additional_outputs(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.additional_outputs)
  return additional_outputs_.Get(index);
}
::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* CMsgClientToGCCreateStaticRecipeResponse::mutable_additional_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.additional_outputs)
  return additional_outputs_.Mutable(index);
}
::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput* CMsgClientToGCCreateStaticRecipeResponse::add_additional_outputs() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.additional_outputs)
  return additional_outputs_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput >*
CMsgClientToGCCreateStaticRecipeResponse::mutable_additional_outputs() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.additional_outputs)
  return &additional_outputs_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCCreateStaticRecipeResponse_AdditionalOutput >&
CMsgClientToGCCreateStaticRecipeResponse::additional_outputs() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCCreateStaticRecipeResponse.additional_outputs)
  return additional_outputs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgProcessTransactionOrder_Item::kItemDefIndexFieldNumber;
const int CMsgProcessTransactionOrder_Item::kItemPriceFieldNumber;
const int CMsgProcessTransactionOrder_Item::kQuantityFieldNumber;
const int CMsgProcessTransactionOrder_Item::kCategoryDescFieldNumber;
const int CMsgProcessTransactionOrder_Item::kStorePurchaseTypeFieldNumber;
const int CMsgProcessTransactionOrder_Item::kSourceReferenceIdFieldNumber;
const int CMsgProcessTransactionOrder_Item::kParentStackIndexFieldNumber;
const int CMsgProcessTransactionOrder_Item::kDefaultPriceFieldNumber;
const int CMsgProcessTransactionOrder_Item::kIsUserFacingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgProcessTransactionOrder_Item::CMsgProcessTransactionOrder_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgProcessTransactionOrder.Item)
}
CMsgProcessTransactionOrder_Item::CMsgProcessTransactionOrder_Item(const CMsgProcessTransactionOrder_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  category_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_category_desc()) {
    category_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_desc_);
  }
  ::memcpy(&item_def_index_, &from.item_def_index_,
    reinterpret_cast<char*>(&is_user_facing_) -
    reinterpret_cast<char*>(&item_def_index_) + sizeof(is_user_facing_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgProcessTransactionOrder.Item)
}

void CMsgProcessTransactionOrder_Item::SharedCtor() {
  _cached_size_ = 0;
  category_desc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&item_def_index_, 0, reinterpret_cast<char*>(&is_user_facing_) -
    reinterpret_cast<char*>(&item_def_index_) + sizeof(is_user_facing_));
}

CMsgProcessTransactionOrder_Item::~CMsgProcessTransactionOrder_Item() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgProcessTransactionOrder.Item)
  SharedDtor();
}

void CMsgProcessTransactionOrder_Item::SharedDtor() {
  category_desc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgProcessTransactionOrder_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgProcessTransactionOrder_Item::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgProcessTransactionOrder_Item& CMsgProcessTransactionOrder_Item::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgProcessTransactionOrder_Item* CMsgProcessTransactionOrder_Item::New(::google::protobuf::Arena* arena) const {
  CMsgProcessTransactionOrder_Item* n = new CMsgProcessTransactionOrder_Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgProcessTransactionOrder_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgProcessTransactionOrder.Item)
  if (has_category_desc()) {
    GOOGLE_DCHECK(!category_desc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*category_desc_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 254u) {
    ::memset(&item_def_index_, 0, reinterpret_cast<char*>(&default_price_) -
      reinterpret_cast<char*>(&item_def_index_) + sizeof(default_price_));
  }
  is_user_facing_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgProcessTransactionOrder_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgProcessTransactionOrder.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 item_def_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_item_def_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_def_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 item_price = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_item_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &item_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 quantity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_quantity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &quantity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string category_desc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_category_desc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->category_desc().data(), this->category_desc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgProcessTransactionOrder.Item.category_desc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 store_purchase_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_store_purchase_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &store_purchase_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 source_reference_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_source_reference_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &source_reference_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 parent_stack_index = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_parent_stack_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_stack_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool default_price = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_default_price();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &default_price_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_user_facing = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_is_user_facing();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_user_facing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgProcessTransactionOrder.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgProcessTransactionOrder.Item)
  return false;
#undef DO_
}

void CMsgProcessTransactionOrder_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgProcessTransactionOrder.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_index = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->item_def_index(), output);
  }

  // optional uint32 item_price = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->item_price(), output);
  }

  // optional uint32 quantity = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->quantity(), output);
  }

  // optional string category_desc = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category_desc().data(), this->category_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgProcessTransactionOrder.Item.category_desc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->category_desc(), output);
  }

  // optional uint32 store_purchase_type = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->store_purchase_type(), output);
  }

  // optional uint64 source_reference_id = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->source_reference_id(), output);
  }

  // optional int32 parent_stack_index = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->parent_stack_index(), output);
  }

  // optional bool default_price = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->default_price(), output);
  }

  // optional bool is_user_facing = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_user_facing(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgProcessTransactionOrder.Item)
}

::google::protobuf::uint8* CMsgProcessTransactionOrder_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgProcessTransactionOrder.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 item_def_index = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->item_def_index(), target);
  }

  // optional uint32 item_price = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->item_price(), target);
  }

  // optional uint32 quantity = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->quantity(), target);
  }

  // optional string category_desc = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->category_desc().data(), this->category_desc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgProcessTransactionOrder.Item.category_desc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->category_desc(), target);
  }

  // optional uint32 store_purchase_type = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->store_purchase_type(), target);
  }

  // optional uint64 source_reference_id = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->source_reference_id(), target);
  }

  // optional int32 parent_stack_index = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->parent_stack_index(), target);
  }

  // optional bool default_price = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->default_price(), target);
  }

  // optional bool is_user_facing = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_user_facing(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgProcessTransactionOrder.Item)
  return target;
}

size_t CMsgProcessTransactionOrder_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgProcessTransactionOrder.Item)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string category_desc = 4;
    if (has_category_desc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->category_desc());
    }

    // optional uint32 item_def_index = 1;
    if (has_item_def_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_def_index());
    }

    // optional uint32 item_price = 2;
    if (has_item_price()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->item_price());
    }

    // optional uint32 quantity = 3;
    if (has_quantity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->quantity());
    }

    // optional uint32 store_purchase_type = 5;
    if (has_store_purchase_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->store_purchase_type());
    }

    // optional uint64 source_reference_id = 6;
    if (has_source_reference_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->source_reference_id());
    }

    // optional int32 parent_stack_index = 7;
    if (has_parent_stack_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->parent_stack_index());
    }

    // optional bool default_price = 8;
    if (has_default_price()) {
      total_size += 1 + 1;
    }

  }
  // optional bool is_user_facing = 9;
  if (has_is_user_facing()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgProcessTransactionOrder_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgProcessTransactionOrder.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgProcessTransactionOrder_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgProcessTransactionOrder_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgProcessTransactionOrder.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgProcessTransactionOrder.Item)
    MergeFrom(*source);
  }
}

void CMsgProcessTransactionOrder_Item::MergeFrom(const CMsgProcessTransactionOrder_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgProcessTransactionOrder.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_category_desc();
      category_desc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.category_desc_);
    }
    if (cached_has_bits & 0x00000002u) {
      item_def_index_ = from.item_def_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      item_price_ = from.item_price_;
    }
    if (cached_has_bits & 0x00000008u) {
      quantity_ = from.quantity_;
    }
    if (cached_has_bits & 0x00000010u) {
      store_purchase_type_ = from.store_purchase_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      source_reference_id_ = from.source_reference_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      parent_stack_index_ = from.parent_stack_index_;
    }
    if (cached_has_bits & 0x00000080u) {
      default_price_ = from.default_price_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_is_user_facing(from.is_user_facing());
  }
}

void CMsgProcessTransactionOrder_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgProcessTransactionOrder.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgProcessTransactionOrder_Item::CopyFrom(const CMsgProcessTransactionOrder_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgProcessTransactionOrder.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgProcessTransactionOrder_Item::IsInitialized() const {
  return true;
}

void CMsgProcessTransactionOrder_Item::Swap(CMsgProcessTransactionOrder_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgProcessTransactionOrder_Item::InternalSwap(CMsgProcessTransactionOrder_Item* other) {
  category_desc_.Swap(&other->category_desc_);
  std::swap(item_def_index_, other->item_def_index_);
  std::swap(item_price_, other->item_price_);
  std::swap(quantity_, other->quantity_);
  std::swap(store_purchase_type_, other->store_purchase_type_);
  std::swap(source_reference_id_, other->source_reference_id_);
  std::swap(parent_stack_index_, other->parent_stack_index_);
  std::swap(default_price_, other->default_price_);
  std::swap(is_user_facing_, other->is_user_facing_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgProcessTransactionOrder_Item::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgProcessTransactionOrder_Item

// optional uint32 item_def_index = 1;
bool CMsgProcessTransactionOrder_Item::has_item_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgProcessTransactionOrder_Item::set_has_item_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgProcessTransactionOrder_Item::clear_has_item_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgProcessTransactionOrder_Item::clear_item_def_index() {
  item_def_index_ = 0u;
  clear_has_item_def_index();
}
::google::protobuf::uint32 CMsgProcessTransactionOrder_Item::item_def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.Item.item_def_index)
  return item_def_index_;
}
void CMsgProcessTransactionOrder_Item::set_item_def_index(::google::protobuf::uint32 value) {
  set_has_item_def_index();
  item_def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.Item.item_def_index)
}

// optional uint32 item_price = 2;
bool CMsgProcessTransactionOrder_Item::has_item_price() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgProcessTransactionOrder_Item::set_has_item_price() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgProcessTransactionOrder_Item::clear_has_item_price() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgProcessTransactionOrder_Item::clear_item_price() {
  item_price_ = 0u;
  clear_has_item_price();
}
::google::protobuf::uint32 CMsgProcessTransactionOrder_Item::item_price() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.Item.item_price)
  return item_price_;
}
void CMsgProcessTransactionOrder_Item::set_item_price(::google::protobuf::uint32 value) {
  set_has_item_price();
  item_price_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.Item.item_price)
}

// optional uint32 quantity = 3;
bool CMsgProcessTransactionOrder_Item::has_quantity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgProcessTransactionOrder_Item::set_has_quantity() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgProcessTransactionOrder_Item::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgProcessTransactionOrder_Item::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
::google::protobuf::uint32 CMsgProcessTransactionOrder_Item::quantity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.Item.quantity)
  return quantity_;
}
void CMsgProcessTransactionOrder_Item::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.Item.quantity)
}

// optional string category_desc = 4;
bool CMsgProcessTransactionOrder_Item::has_category_desc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgProcessTransactionOrder_Item::set_has_category_desc() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgProcessTransactionOrder_Item::clear_has_category_desc() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgProcessTransactionOrder_Item::clear_category_desc() {
  category_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_category_desc();
}
const ::std::string& CMsgProcessTransactionOrder_Item::category_desc() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.Item.category_desc)
  return category_desc_.GetNoArena();
}
void CMsgProcessTransactionOrder_Item::set_category_desc(const ::std::string& value) {
  set_has_category_desc();
  category_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.Item.category_desc)
}
#if LANG_CXX11
void CMsgProcessTransactionOrder_Item::set_category_desc(::std::string&& value) {
  set_has_category_desc();
  category_desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgProcessTransactionOrder.Item.category_desc)
}
#endif
void CMsgProcessTransactionOrder_Item::set_category_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_category_desc();
  category_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgProcessTransactionOrder.Item.category_desc)
}
void CMsgProcessTransactionOrder_Item::set_category_desc(const char* value, size_t size) {
  set_has_category_desc();
  category_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgProcessTransactionOrder.Item.category_desc)
}
::std::string* CMsgProcessTransactionOrder_Item::mutable_category_desc() {
  set_has_category_desc();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgProcessTransactionOrder.Item.category_desc)
  return category_desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgProcessTransactionOrder_Item::release_category_desc() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgProcessTransactionOrder.Item.category_desc)
  clear_has_category_desc();
  return category_desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgProcessTransactionOrder_Item::set_allocated_category_desc(::std::string* category_desc) {
  if (category_desc != NULL) {
    set_has_category_desc();
  } else {
    clear_has_category_desc();
  }
  category_desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), category_desc);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgProcessTransactionOrder.Item.category_desc)
}

// optional uint32 store_purchase_type = 5;
bool CMsgProcessTransactionOrder_Item::has_store_purchase_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgProcessTransactionOrder_Item::set_has_store_purchase_type() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgProcessTransactionOrder_Item::clear_has_store_purchase_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgProcessTransactionOrder_Item::clear_store_purchase_type() {
  store_purchase_type_ = 0u;
  clear_has_store_purchase_type();
}
::google::protobuf::uint32 CMsgProcessTransactionOrder_Item::store_purchase_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.Item.store_purchase_type)
  return store_purchase_type_;
}
void CMsgProcessTransactionOrder_Item::set_store_purchase_type(::google::protobuf::uint32 value) {
  set_has_store_purchase_type();
  store_purchase_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.Item.store_purchase_type)
}

// optional uint64 source_reference_id = 6;
bool CMsgProcessTransactionOrder_Item::has_source_reference_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgProcessTransactionOrder_Item::set_has_source_reference_id() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgProcessTransactionOrder_Item::clear_has_source_reference_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgProcessTransactionOrder_Item::clear_source_reference_id() {
  source_reference_id_ = GOOGLE_ULONGLONG(0);
  clear_has_source_reference_id();
}
::google::protobuf::uint64 CMsgProcessTransactionOrder_Item::source_reference_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.Item.source_reference_id)
  return source_reference_id_;
}
void CMsgProcessTransactionOrder_Item::set_source_reference_id(::google::protobuf::uint64 value) {
  set_has_source_reference_id();
  source_reference_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.Item.source_reference_id)
}

// optional int32 parent_stack_index = 7;
bool CMsgProcessTransactionOrder_Item::has_parent_stack_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgProcessTransactionOrder_Item::set_has_parent_stack_index() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgProcessTransactionOrder_Item::clear_has_parent_stack_index() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgProcessTransactionOrder_Item::clear_parent_stack_index() {
  parent_stack_index_ = 0;
  clear_has_parent_stack_index();
}
::google::protobuf::int32 CMsgProcessTransactionOrder_Item::parent_stack_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.Item.parent_stack_index)
  return parent_stack_index_;
}
void CMsgProcessTransactionOrder_Item::set_parent_stack_index(::google::protobuf::int32 value) {
  set_has_parent_stack_index();
  parent_stack_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.Item.parent_stack_index)
}

// optional bool default_price = 8;
bool CMsgProcessTransactionOrder_Item::has_default_price() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgProcessTransactionOrder_Item::set_has_default_price() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgProcessTransactionOrder_Item::clear_has_default_price() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgProcessTransactionOrder_Item::clear_default_price() {
  default_price_ = false;
  clear_has_default_price();
}
bool CMsgProcessTransactionOrder_Item::default_price() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.Item.default_price)
  return default_price_;
}
void CMsgProcessTransactionOrder_Item::set_default_price(bool value) {
  set_has_default_price();
  default_price_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.Item.default_price)
}

// optional bool is_user_facing = 9;
bool CMsgProcessTransactionOrder_Item::has_is_user_facing() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgProcessTransactionOrder_Item::set_has_is_user_facing() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgProcessTransactionOrder_Item::clear_has_is_user_facing() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgProcessTransactionOrder_Item::clear_is_user_facing() {
  is_user_facing_ = false;
  clear_has_is_user_facing();
}
bool CMsgProcessTransactionOrder_Item::is_user_facing() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.Item.is_user_facing)
  return is_user_facing_;
}
void CMsgProcessTransactionOrder_Item::set_is_user_facing(bool value) {
  set_has_is_user_facing();
  is_user_facing_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.Item.is_user_facing)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgProcessTransactionOrder::kTxnIdFieldNumber;
const int CMsgProcessTransactionOrder::kSteamTxnIdFieldNumber;
const int CMsgProcessTransactionOrder::kPartnerTxnIdFieldNumber;
const int CMsgProcessTransactionOrder::kSteamIdFieldNumber;
const int CMsgProcessTransactionOrder::kTimeStampFieldNumber;
const int CMsgProcessTransactionOrder::kWatermarkFieldNumber;
const int CMsgProcessTransactionOrder::kPurchaseReportStatusFieldNumber;
const int CMsgProcessTransactionOrder::kCurrencyFieldNumber;
const int CMsgProcessTransactionOrder::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgProcessTransactionOrder::CMsgProcessTransactionOrder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgProcessTransactionOrder)
}
CMsgProcessTransactionOrder::CMsgProcessTransactionOrder(const CMsgProcessTransactionOrder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      items_(from.items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&txn_id_, &from.txn_id_,
    reinterpret_cast<char*>(&currency_) -
    reinterpret_cast<char*>(&txn_id_) + sizeof(currency_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgProcessTransactionOrder)
}

void CMsgProcessTransactionOrder::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&txn_id_, 0, reinterpret_cast<char*>(&currency_) -
    reinterpret_cast<char*>(&txn_id_) + sizeof(currency_));
}

CMsgProcessTransactionOrder::~CMsgProcessTransactionOrder() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgProcessTransactionOrder)
  SharedDtor();
}

void CMsgProcessTransactionOrder::SharedDtor() {
}

void CMsgProcessTransactionOrder::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgProcessTransactionOrder::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgProcessTransactionOrder& CMsgProcessTransactionOrder::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgProcessTransactionOrder* CMsgProcessTransactionOrder::New(::google::protobuf::Arena* arena) const {
  CMsgProcessTransactionOrder* n = new CMsgProcessTransactionOrder;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgProcessTransactionOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgProcessTransactionOrder)
  items_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&txn_id_, 0, reinterpret_cast<char*>(&currency_) -
      reinterpret_cast<char*>(&txn_id_) + sizeof(currency_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgProcessTransactionOrder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgProcessTransactionOrder)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 txn_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_txn_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 steam_txn_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_steam_txn_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &steam_txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 partner_txn_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_partner_txn_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &partner_txn_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steam_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_stamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_time_stamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 watermark = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_watermark();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &watermark_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 purchase_report_status = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_purchase_report_status();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &purchase_report_status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 currency = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_currency();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &currency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgProcessTransactionOrder.Item items = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgProcessTransactionOrder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgProcessTransactionOrder)
  return false;
#undef DO_
}

void CMsgProcessTransactionOrder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgProcessTransactionOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->txn_id(), output);
  }

  // optional uint64 steam_txn_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->steam_txn_id(), output);
  }

  // optional uint64 partner_txn_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->partner_txn_id(), output);
  }

  // optional fixed64 steam_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->steam_id(), output);
  }

  // optional uint32 time_stamp = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->time_stamp(), output);
  }

  // optional uint64 watermark = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->watermark(), output);
  }

  // optional int32 purchase_report_status = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->purchase_report_status(), output);
  }

  // optional uint32 currency = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->currency(), output);
  }

  // repeated .proto.dota.CMsgProcessTransactionOrder.Item items = 9;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgProcessTransactionOrder)
}

::google::protobuf::uint8* CMsgProcessTransactionOrder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgProcessTransactionOrder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 txn_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->txn_id(), target);
  }

  // optional uint64 steam_txn_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->steam_txn_id(), target);
  }

  // optional uint64 partner_txn_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->partner_txn_id(), target);
  }

  // optional fixed64 steam_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->steam_id(), target);
  }

  // optional uint32 time_stamp = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->time_stamp(), target);
  }

  // optional uint64 watermark = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->watermark(), target);
  }

  // optional int32 purchase_report_status = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->purchase_report_status(), target);
  }

  // optional uint32 currency = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->currency(), target);
  }

  // repeated .proto.dota.CMsgProcessTransactionOrder.Item items = 9;
  for (unsigned int i = 0, n = this->items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->items(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgProcessTransactionOrder)
  return target;
}

size_t CMsgProcessTransactionOrder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgProcessTransactionOrder)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CMsgProcessTransactionOrder.Item items = 9;
  {
    unsigned int count = this->items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->items(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional uint64 txn_id = 1;
    if (has_txn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->txn_id());
    }

    // optional uint64 steam_txn_id = 2;
    if (has_steam_txn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->steam_txn_id());
    }

    // optional uint64 partner_txn_id = 3;
    if (has_partner_txn_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->partner_txn_id());
    }

    // optional fixed64 steam_id = 4;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint64 watermark = 6;
    if (has_watermark()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->watermark());
    }

    // optional uint32 time_stamp = 5;
    if (has_time_stamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_stamp());
    }

    // optional int32 purchase_report_status = 7;
    if (has_purchase_report_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->purchase_report_status());
    }

    // optional uint32 currency = 8;
    if (has_currency()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->currency());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgProcessTransactionOrder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgProcessTransactionOrder)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgProcessTransactionOrder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgProcessTransactionOrder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgProcessTransactionOrder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgProcessTransactionOrder)
    MergeFrom(*source);
  }
}

void CMsgProcessTransactionOrder::MergeFrom(const CMsgProcessTransactionOrder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgProcessTransactionOrder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  items_.MergeFrom(from.items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      txn_id_ = from.txn_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      steam_txn_id_ = from.steam_txn_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      partner_txn_id_ = from.partner_txn_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      watermark_ = from.watermark_;
    }
    if (cached_has_bits & 0x00000020u) {
      time_stamp_ = from.time_stamp_;
    }
    if (cached_has_bits & 0x00000040u) {
      purchase_report_status_ = from.purchase_report_status_;
    }
    if (cached_has_bits & 0x00000080u) {
      currency_ = from.currency_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgProcessTransactionOrder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgProcessTransactionOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgProcessTransactionOrder::CopyFrom(const CMsgProcessTransactionOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgProcessTransactionOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgProcessTransactionOrder::IsInitialized() const {
  return true;
}

void CMsgProcessTransactionOrder::Swap(CMsgProcessTransactionOrder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgProcessTransactionOrder::InternalSwap(CMsgProcessTransactionOrder* other) {
  items_.InternalSwap(&other->items_);
  std::swap(txn_id_, other->txn_id_);
  std::swap(steam_txn_id_, other->steam_txn_id_);
  std::swap(partner_txn_id_, other->partner_txn_id_);
  std::swap(steam_id_, other->steam_id_);
  std::swap(watermark_, other->watermark_);
  std::swap(time_stamp_, other->time_stamp_);
  std::swap(purchase_report_status_, other->purchase_report_status_);
  std::swap(currency_, other->currency_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgProcessTransactionOrder::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgProcessTransactionOrder

// optional uint64 txn_id = 1;
bool CMsgProcessTransactionOrder::has_txn_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgProcessTransactionOrder::set_has_txn_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgProcessTransactionOrder::clear_has_txn_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgProcessTransactionOrder::clear_txn_id() {
  txn_id_ = GOOGLE_ULONGLONG(0);
  clear_has_txn_id();
}
::google::protobuf::uint64 CMsgProcessTransactionOrder::txn_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.txn_id)
  return txn_id_;
}
void CMsgProcessTransactionOrder::set_txn_id(::google::protobuf::uint64 value) {
  set_has_txn_id();
  txn_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.txn_id)
}

// optional uint64 steam_txn_id = 2;
bool CMsgProcessTransactionOrder::has_steam_txn_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgProcessTransactionOrder::set_has_steam_txn_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgProcessTransactionOrder::clear_has_steam_txn_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgProcessTransactionOrder::clear_steam_txn_id() {
  steam_txn_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_txn_id();
}
::google::protobuf::uint64 CMsgProcessTransactionOrder::steam_txn_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.steam_txn_id)
  return steam_txn_id_;
}
void CMsgProcessTransactionOrder::set_steam_txn_id(::google::protobuf::uint64 value) {
  set_has_steam_txn_id();
  steam_txn_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.steam_txn_id)
}

// optional uint64 partner_txn_id = 3;
bool CMsgProcessTransactionOrder::has_partner_txn_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgProcessTransactionOrder::set_has_partner_txn_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgProcessTransactionOrder::clear_has_partner_txn_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgProcessTransactionOrder::clear_partner_txn_id() {
  partner_txn_id_ = GOOGLE_ULONGLONG(0);
  clear_has_partner_txn_id();
}
::google::protobuf::uint64 CMsgProcessTransactionOrder::partner_txn_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.partner_txn_id)
  return partner_txn_id_;
}
void CMsgProcessTransactionOrder::set_partner_txn_id(::google::protobuf::uint64 value) {
  set_has_partner_txn_id();
  partner_txn_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.partner_txn_id)
}

// optional fixed64 steam_id = 4;
bool CMsgProcessTransactionOrder::has_steam_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgProcessTransactionOrder::set_has_steam_id() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgProcessTransactionOrder::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgProcessTransactionOrder::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
::google::protobuf::uint64 CMsgProcessTransactionOrder::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.steam_id)
  return steam_id_;
}
void CMsgProcessTransactionOrder::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.steam_id)
}

// optional uint32 time_stamp = 5;
bool CMsgProcessTransactionOrder::has_time_stamp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgProcessTransactionOrder::set_has_time_stamp() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgProcessTransactionOrder::clear_has_time_stamp() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgProcessTransactionOrder::clear_time_stamp() {
  time_stamp_ = 0u;
  clear_has_time_stamp();
}
::google::protobuf::uint32 CMsgProcessTransactionOrder::time_stamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.time_stamp)
  return time_stamp_;
}
void CMsgProcessTransactionOrder::set_time_stamp(::google::protobuf::uint32 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.time_stamp)
}

// optional uint64 watermark = 6;
bool CMsgProcessTransactionOrder::has_watermark() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgProcessTransactionOrder::set_has_watermark() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgProcessTransactionOrder::clear_has_watermark() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgProcessTransactionOrder::clear_watermark() {
  watermark_ = GOOGLE_ULONGLONG(0);
  clear_has_watermark();
}
::google::protobuf::uint64 CMsgProcessTransactionOrder::watermark() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.watermark)
  return watermark_;
}
void CMsgProcessTransactionOrder::set_watermark(::google::protobuf::uint64 value) {
  set_has_watermark();
  watermark_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.watermark)
}

// optional int32 purchase_report_status = 7;
bool CMsgProcessTransactionOrder::has_purchase_report_status() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgProcessTransactionOrder::set_has_purchase_report_status() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgProcessTransactionOrder::clear_has_purchase_report_status() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgProcessTransactionOrder::clear_purchase_report_status() {
  purchase_report_status_ = 0;
  clear_has_purchase_report_status();
}
::google::protobuf::int32 CMsgProcessTransactionOrder::purchase_report_status() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.purchase_report_status)
  return purchase_report_status_;
}
void CMsgProcessTransactionOrder::set_purchase_report_status(::google::protobuf::int32 value) {
  set_has_purchase_report_status();
  purchase_report_status_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.purchase_report_status)
}

// optional uint32 currency = 8;
bool CMsgProcessTransactionOrder::has_currency() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgProcessTransactionOrder::set_has_currency() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgProcessTransactionOrder::clear_has_currency() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgProcessTransactionOrder::clear_currency() {
  currency_ = 0u;
  clear_has_currency();
}
::google::protobuf::uint32 CMsgProcessTransactionOrder::currency() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.currency)
  return currency_;
}
void CMsgProcessTransactionOrder::set_currency(::google::protobuf::uint32 value) {
  set_has_currency();
  currency_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgProcessTransactionOrder.currency)
}

// repeated .proto.dota.CMsgProcessTransactionOrder.Item items = 9;
int CMsgProcessTransactionOrder::items_size() const {
  return items_.size();
}
void CMsgProcessTransactionOrder::clear_items() {
  items_.Clear();
}
const ::proto::dota::CMsgProcessTransactionOrder_Item& CMsgProcessTransactionOrder::items(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgProcessTransactionOrder.items)
  return items_.Get(index);
}
::proto::dota::CMsgProcessTransactionOrder_Item* CMsgProcessTransactionOrder::mutable_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgProcessTransactionOrder.items)
  return items_.Mutable(index);
}
::proto::dota::CMsgProcessTransactionOrder_Item* CMsgProcessTransactionOrder::add_items() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgProcessTransactionOrder.items)
  return items_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgProcessTransactionOrder_Item >*
CMsgProcessTransactionOrder::mutable_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgProcessTransactionOrder.items)
  return &items_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgProcessTransactionOrder_Item >&
CMsgProcessTransactionOrder::items() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgProcessTransactionOrder.items)
  return items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCStoreProcessCDKeyTransaction::kOrderFieldNumber;
const int CMsgGCToGCStoreProcessCDKeyTransaction::kReasonCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCStoreProcessCDKeyTransaction::CMsgGCToGCStoreProcessCDKeyTransaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
}
CMsgGCToGCStoreProcessCDKeyTransaction::CMsgGCToGCStoreProcessCDKeyTransaction(const CMsgGCToGCStoreProcessCDKeyTransaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order()) {
    order_ = new ::proto::dota::CMsgProcessTransactionOrder(*from.order_);
  } else {
    order_ = NULL;
  }
  reason_code_ = from.reason_code_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
}

void CMsgGCToGCStoreProcessCDKeyTransaction::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&order_, 0, reinterpret_cast<char*>(&reason_code_) -
    reinterpret_cast<char*>(&order_) + sizeof(reason_code_));
}

CMsgGCToGCStoreProcessCDKeyTransaction::~CMsgGCToGCStoreProcessCDKeyTransaction() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  SharedDtor();
}

void CMsgGCToGCStoreProcessCDKeyTransaction::SharedDtor() {
  if (this != internal_default_instance()) {
    delete order_;
  }
}

void CMsgGCToGCStoreProcessCDKeyTransaction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCStoreProcessCDKeyTransaction::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCStoreProcessCDKeyTransaction& CMsgGCToGCStoreProcessCDKeyTransaction::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCStoreProcessCDKeyTransaction* CMsgGCToGCStoreProcessCDKeyTransaction::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCStoreProcessCDKeyTransaction* n = new CMsgGCToGCStoreProcessCDKeyTransaction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCStoreProcessCDKeyTransaction::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  if (has_order()) {
    GOOGLE_DCHECK(order_ != NULL);
    order_->::proto::dota::CMsgProcessTransactionOrder::Clear();
  }
  reason_code_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCStoreProcessCDKeyTransaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 reason_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_reason_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reason_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  return false;
#undef DO_
}

void CMsgGCToGCStoreProcessCDKeyTransaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->order_, output);
  }

  // optional uint32 reason_code = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->reason_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
}

::google::protobuf::uint8* CMsgGCToGCStoreProcessCDKeyTransaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->order_, deterministic, target);
  }

  // optional uint32 reason_code = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->reason_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  return target;
}

size_t CMsgGCToGCStoreProcessCDKeyTransaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->order_);
    }

    // optional uint32 reason_code = 2;
    if (has_reason_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->reason_code());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCStoreProcessCDKeyTransaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCStoreProcessCDKeyTransaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCStoreProcessCDKeyTransaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
    MergeFrom(*source);
  }
}

void CMsgGCToGCStoreProcessCDKeyTransaction::MergeFrom(const CMsgGCToGCStoreProcessCDKeyTransaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_order()->::proto::dota::CMsgProcessTransactionOrder::MergeFrom(from.order());
    }
    if (cached_has_bits & 0x00000002u) {
      reason_code_ = from.reason_code_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCStoreProcessCDKeyTransaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCStoreProcessCDKeyTransaction::CopyFrom(const CMsgGCToGCStoreProcessCDKeyTransaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCStoreProcessCDKeyTransaction::IsInitialized() const {
  return true;
}

void CMsgGCToGCStoreProcessCDKeyTransaction::Swap(CMsgGCToGCStoreProcessCDKeyTransaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCStoreProcessCDKeyTransaction::InternalSwap(CMsgGCToGCStoreProcessCDKeyTransaction* other) {
  std::swap(order_, other->order_);
  std::swap(reason_code_, other->reason_code_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCStoreProcessCDKeyTransaction::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCStoreProcessCDKeyTransaction

// optional .proto.dota.CMsgProcessTransactionOrder order = 1;
bool CMsgGCToGCStoreProcessCDKeyTransaction::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCStoreProcessCDKeyTransaction::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCStoreProcessCDKeyTransaction::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCStoreProcessCDKeyTransaction::clear_order() {
  if (order_ != NULL) order_->::proto::dota::CMsgProcessTransactionOrder::Clear();
  clear_has_order();
}
const ::proto::dota::CMsgProcessTransactionOrder& CMsgGCToGCStoreProcessCDKeyTransaction::order() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction.order)
  return order_ != NULL ? *order_
                         : *::proto::dota::CMsgProcessTransactionOrder::internal_default_instance();
}
::proto::dota::CMsgProcessTransactionOrder* CMsgGCToGCStoreProcessCDKeyTransaction::mutable_order() {
  set_has_order();
  if (order_ == NULL) {
    order_ = new ::proto::dota::CMsgProcessTransactionOrder;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction.order)
  return order_;
}
::proto::dota::CMsgProcessTransactionOrder* CMsgGCToGCStoreProcessCDKeyTransaction::release_order() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction.order)
  clear_has_order();
  ::proto::dota::CMsgProcessTransactionOrder* temp = order_;
  order_ = NULL;
  return temp;
}
void CMsgGCToGCStoreProcessCDKeyTransaction::set_allocated_order(::proto::dota::CMsgProcessTransactionOrder* order) {
  delete order_;
  order_ = order;
  if (order) {
    set_has_order();
  } else {
    clear_has_order();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction.order)
}

// optional uint32 reason_code = 2;
bool CMsgGCToGCStoreProcessCDKeyTransaction::has_reason_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCStoreProcessCDKeyTransaction::set_has_reason_code() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCStoreProcessCDKeyTransaction::clear_has_reason_code() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCStoreProcessCDKeyTransaction::clear_reason_code() {
  reason_code_ = 0u;
  clear_has_reason_code();
}
::google::protobuf::uint32 CMsgGCToGCStoreProcessCDKeyTransaction::reason_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction.reason_code)
  return reason_code_;
}
void CMsgGCToGCStoreProcessCDKeyTransaction::set_reason_code(::google::protobuf::uint32 value) {
  set_has_reason_code();
  reason_code_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCStoreProcessCDKeyTransaction.reason_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCStoreProcessCDKeyTransactionResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCStoreProcessCDKeyTransactionResponse::CMsgGCToGCStoreProcessCDKeyTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
}
CMsgGCToGCStoreProcessCDKeyTransactionResponse::CMsgGCToGCStoreProcessCDKeyTransactionResponse(const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
}

CMsgGCToGCStoreProcessCDKeyTransactionResponse::~CMsgGCToGCStoreProcessCDKeyTransactionResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  SharedDtor();
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::SharedDtor() {
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCStoreProcessCDKeyTransactionResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCStoreProcessCDKeyTransactionResponse& CMsgGCToGCStoreProcessCDKeyTransactionResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCStoreProcessCDKeyTransactionResponse* CMsgGCToGCStoreProcessCDKeyTransactionResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCStoreProcessCDKeyTransactionResponse* n = new CMsgGCToGCStoreProcessCDKeyTransactionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCStoreProcessCDKeyTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  return false;
#undef DO_
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
}

::google::protobuf::uint8* CMsgGCToGCStoreProcessCDKeyTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  return target;
}

size_t CMsgGCToGCStoreProcessCDKeyTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCStoreProcessCDKeyTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCStoreProcessCDKeyTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::MergeFrom(const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::CopyFrom(const CMsgGCToGCStoreProcessCDKeyTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCStoreProcessCDKeyTransactionResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCStoreProcessCDKeyTransactionResponse::Swap(CMsgGCToGCStoreProcessCDKeyTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCStoreProcessCDKeyTransactionResponse::InternalSwap(CMsgGCToGCStoreProcessCDKeyTransactionResponse* other) {
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCStoreProcessCDKeyTransactionResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCStoreProcessCDKeyTransactionResponse

// optional bool success = 1;
bool CMsgGCToGCStoreProcessCDKeyTransactionResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCStoreProcessCDKeyTransactionResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCStoreProcessCDKeyTransactionResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCStoreProcessCDKeyTransactionResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
bool CMsgGCToGCStoreProcessCDKeyTransactionResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse.success)
  return success_;
}
void CMsgGCToGCStoreProcessCDKeyTransactionResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCStoreProcessCDKeyTransactionResponse.success)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCStoreProcessSettlement::kOrderFieldNumber;
const int CMsgGCToGCStoreProcessSettlement::kPartnerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCStoreProcessSettlement::CMsgGCToGCStoreProcessSettlement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCStoreProcessSettlement)
}
CMsgGCToGCStoreProcessSettlement::CMsgGCToGCStoreProcessSettlement(const CMsgGCToGCStoreProcessSettlement& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_order()) {
    order_ = new ::proto::dota::CMsgProcessTransactionOrder(*from.order_);
  } else {
    order_ = NULL;
  }
  partner_ = from.partner_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCStoreProcessSettlement)
}

void CMsgGCToGCStoreProcessSettlement::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&order_, 0, reinterpret_cast<char*>(&partner_) -
    reinterpret_cast<char*>(&order_) + sizeof(partner_));
}

CMsgGCToGCStoreProcessSettlement::~CMsgGCToGCStoreProcessSettlement() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCStoreProcessSettlement)
  SharedDtor();
}

void CMsgGCToGCStoreProcessSettlement::SharedDtor() {
  if (this != internal_default_instance()) {
    delete order_;
  }
}

void CMsgGCToGCStoreProcessSettlement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCStoreProcessSettlement::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCStoreProcessSettlement& CMsgGCToGCStoreProcessSettlement::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCStoreProcessSettlement* CMsgGCToGCStoreProcessSettlement::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCStoreProcessSettlement* n = new CMsgGCToGCStoreProcessSettlement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCStoreProcessSettlement::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  if (has_order()) {
    GOOGLE_DCHECK(order_ != NULL);
    order_->::proto::dota::CMsgProcessTransactionOrder::Clear();
  }
  partner_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCStoreProcessSettlement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_order()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 partner = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_partner();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &partner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCStoreProcessSettlement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCStoreProcessSettlement)
  return false;
#undef DO_
}

void CMsgGCToGCStoreProcessSettlement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->order_, output);
  }

  // optional uint32 partner = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->partner(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCStoreProcessSettlement)
}

::google::protobuf::uint8* CMsgGCToGCStoreProcessSettlement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->order_, deterministic, target);
  }

  // optional uint32 partner = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->partner(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCStoreProcessSettlement)
  return target;
}

size_t CMsgGCToGCStoreProcessSettlement::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .proto.dota.CMsgProcessTransactionOrder order = 1;
    if (has_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->order_);
    }

    // optional uint32 partner = 2;
    if (has_partner()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->partner());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCStoreProcessSettlement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCStoreProcessSettlement* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCStoreProcessSettlement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCStoreProcessSettlement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCStoreProcessSettlement)
    MergeFrom(*source);
  }
}

void CMsgGCToGCStoreProcessSettlement::MergeFrom(const CMsgGCToGCStoreProcessSettlement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_order()->::proto::dota::CMsgProcessTransactionOrder::MergeFrom(from.order());
    }
    if (cached_has_bits & 0x00000002u) {
      partner_ = from.partner_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCStoreProcessSettlement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCStoreProcessSettlement::CopyFrom(const CMsgGCToGCStoreProcessSettlement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCStoreProcessSettlement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCStoreProcessSettlement::IsInitialized() const {
  return true;
}

void CMsgGCToGCStoreProcessSettlement::Swap(CMsgGCToGCStoreProcessSettlement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCStoreProcessSettlement::InternalSwap(CMsgGCToGCStoreProcessSettlement* other) {
  std::swap(order_, other->order_);
  std::swap(partner_, other->partner_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCStoreProcessSettlement::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCStoreProcessSettlement

// optional .proto.dota.CMsgProcessTransactionOrder order = 1;
bool CMsgGCToGCStoreProcessSettlement::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCStoreProcessSettlement::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCStoreProcessSettlement::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCStoreProcessSettlement::clear_order() {
  if (order_ != NULL) order_->::proto::dota::CMsgProcessTransactionOrder::Clear();
  clear_has_order();
}
const ::proto::dota::CMsgProcessTransactionOrder& CMsgGCToGCStoreProcessSettlement::order() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCStoreProcessSettlement.order)
  return order_ != NULL ? *order_
                         : *::proto::dota::CMsgProcessTransactionOrder::internal_default_instance();
}
::proto::dota::CMsgProcessTransactionOrder* CMsgGCToGCStoreProcessSettlement::mutable_order() {
  set_has_order();
  if (order_ == NULL) {
    order_ = new ::proto::dota::CMsgProcessTransactionOrder;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCStoreProcessSettlement.order)
  return order_;
}
::proto::dota::CMsgProcessTransactionOrder* CMsgGCToGCStoreProcessSettlement::release_order() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToGCStoreProcessSettlement.order)
  clear_has_order();
  ::proto::dota::CMsgProcessTransactionOrder* temp = order_;
  order_ = NULL;
  return temp;
}
void CMsgGCToGCStoreProcessSettlement::set_allocated_order(::proto::dota::CMsgProcessTransactionOrder* order) {
  delete order_;
  order_ = order;
  if (order) {
    set_has_order();
  } else {
    clear_has_order();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToGCStoreProcessSettlement.order)
}

// optional uint32 partner = 2;
bool CMsgGCToGCStoreProcessSettlement::has_partner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCStoreProcessSettlement::set_has_partner() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCStoreProcessSettlement::clear_has_partner() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCStoreProcessSettlement::clear_partner() {
  partner_ = 0u;
  clear_has_partner();
}
::google::protobuf::uint32 CMsgGCToGCStoreProcessSettlement::partner() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCStoreProcessSettlement.partner)
  return partner_;
}
void CMsgGCToGCStoreProcessSettlement::set_partner(::google::protobuf::uint32 value) {
  set_has_partner();
  partner_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCStoreProcessSettlement.partner)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCStoreProcessSettlementResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCStoreProcessSettlementResponse::CMsgGCToGCStoreProcessSettlementResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
}
CMsgGCToGCStoreProcessSettlementResponse::CMsgGCToGCStoreProcessSettlementResponse(const CMsgGCToGCStoreProcessSettlementResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
}

void CMsgGCToGCStoreProcessSettlementResponse::SharedCtor() {
  _cached_size_ = 0;
  success_ = false;
}

CMsgGCToGCStoreProcessSettlementResponse::~CMsgGCToGCStoreProcessSettlementResponse() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  SharedDtor();
}

void CMsgGCToGCStoreProcessSettlementResponse::SharedDtor() {
}

void CMsgGCToGCStoreProcessSettlementResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCStoreProcessSettlementResponse::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCStoreProcessSettlementResponse& CMsgGCToGCStoreProcessSettlementResponse::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCStoreProcessSettlementResponse* CMsgGCToGCStoreProcessSettlementResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCStoreProcessSettlementResponse* n = new CMsgGCToGCStoreProcessSettlementResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCStoreProcessSettlementResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCStoreProcessSettlementResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  return false;
#undef DO_
}

void CMsgGCToGCStoreProcessSettlementResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
}

::google::protobuf::uint8* CMsgGCToGCStoreProcessSettlementResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool success = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  return target;
}

size_t CMsgGCToGCStoreProcessSettlementResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional bool success = 1;
  if (has_success()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCStoreProcessSettlementResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCStoreProcessSettlementResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCStoreProcessSettlementResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
    MergeFrom(*source);
  }
}

void CMsgGCToGCStoreProcessSettlementResponse::MergeFrom(const CMsgGCToGCStoreProcessSettlementResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_success()) {
    set_success(from.success());
  }
}

void CMsgGCToGCStoreProcessSettlementResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCStoreProcessSettlementResponse::CopyFrom(const CMsgGCToGCStoreProcessSettlementResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCStoreProcessSettlementResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCStoreProcessSettlementResponse::IsInitialized() const {
  return true;
}

void CMsgGCToGCStoreProcessSettlementResponse::Swap(CMsgGCToGCStoreProcessSettlementResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCStoreProcessSettlementResponse::InternalSwap(CMsgGCToGCStoreProcessSettlementResponse* other) {
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCStoreProcessSettlementResponse::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCStoreProcessSettlementResponse

// optional bool success = 1;
bool CMsgGCToGCStoreProcessSettlementResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCStoreProcessSettlementResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCStoreProcessSettlementResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCStoreProcessSettlementResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
bool CMsgGCToGCStoreProcessSettlementResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCStoreProcessSettlementResponse.success)
  return success_;
}
void CMsgGCToGCStoreProcessSettlementResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCStoreProcessSettlementResponse.success)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCBroadcastConsoleCommand::kConCommandFieldNumber;
const int CMsgGCToGCBroadcastConsoleCommand::kReportOutputFieldNumber;
const int CMsgGCToGCBroadcastConsoleCommand::kSendingGcFieldNumber;
const int CMsgGCToGCBroadcastConsoleCommand::kOutputInitiatorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCBroadcastConsoleCommand::CMsgGCToGCBroadcastConsoleCommand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
}
CMsgGCToGCBroadcastConsoleCommand::CMsgGCToGCBroadcastConsoleCommand(const CMsgGCToGCBroadcastConsoleCommand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  con_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_con_command()) {
    con_command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.con_command_);
  }
  output_initiator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_output_initiator()) {
    output_initiator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_initiator_);
  }
  ::memcpy(&report_output_, &from.report_output_,
    reinterpret_cast<char*>(&sending_gc_) -
    reinterpret_cast<char*>(&report_output_) + sizeof(sending_gc_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
}

void CMsgGCToGCBroadcastConsoleCommand::SharedCtor() {
  _cached_size_ = 0;
  con_command_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_initiator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&report_output_, 0, reinterpret_cast<char*>(&sending_gc_) -
    reinterpret_cast<char*>(&report_output_) + sizeof(sending_gc_));
}

CMsgGCToGCBroadcastConsoleCommand::~CMsgGCToGCBroadcastConsoleCommand() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  SharedDtor();
}

void CMsgGCToGCBroadcastConsoleCommand::SharedDtor() {
  con_command_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  output_initiator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCBroadcastConsoleCommand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCBroadcastConsoleCommand::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCBroadcastConsoleCommand& CMsgGCToGCBroadcastConsoleCommand::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCBroadcastConsoleCommand* CMsgGCToGCBroadcastConsoleCommand::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCBroadcastConsoleCommand* n = new CMsgGCToGCBroadcastConsoleCommand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCBroadcastConsoleCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_con_command()) {
      GOOGLE_DCHECK(!con_command_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*con_command_.UnsafeRawStringPointer())->clear();
    }
    if (has_output_initiator()) {
      GOOGLE_DCHECK(!output_initiator_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*output_initiator_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&report_output_, 0, reinterpret_cast<char*>(&sending_gc_) -
      reinterpret_cast<char*>(&report_output_) + sizeof(sending_gc_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCBroadcastConsoleCommand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string con_command = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_con_command()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->con_command().data(), this->con_command().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool report_output = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_report_output();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &report_output_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sending_gc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_sending_gc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sending_gc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string output_initiator = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output_initiator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output_initiator().data(), this->output_initiator().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  return false;
#undef DO_
}

void CMsgGCToGCBroadcastConsoleCommand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string con_command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->con_command().data(), this->con_command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->con_command(), output);
  }

  // optional bool report_output = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->report_output(), output);
  }

  // optional uint32 sending_gc = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sending_gc(), output);
  }

  // optional string output_initiator = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_initiator().data(), this->output_initiator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->output_initiator(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
}

::google::protobuf::uint8* CMsgGCToGCBroadcastConsoleCommand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string con_command = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->con_command().data(), this->con_command().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->con_command(), target);
  }

  // optional bool report_output = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->report_output(), target);
  }

  // optional uint32 sending_gc = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sending_gc(), target);
  }

  // optional string output_initiator = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output_initiator().data(), this->output_initiator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->output_initiator(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  return target;
}

size_t CMsgGCToGCBroadcastConsoleCommand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string con_command = 1;
    if (has_con_command()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->con_command());
    }

    // optional string output_initiator = 4;
    if (has_output_initiator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->output_initiator());
    }

    // optional bool report_output = 2;
    if (has_report_output()) {
      total_size += 1 + 1;
    }

    // optional uint32 sending_gc = 3;
    if (has_sending_gc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sending_gc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCBroadcastConsoleCommand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCBroadcastConsoleCommand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCBroadcastConsoleCommand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
    MergeFrom(*source);
  }
}

void CMsgGCToGCBroadcastConsoleCommand::MergeFrom(const CMsgGCToGCBroadcastConsoleCommand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_con_command();
      con_command_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.con_command_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_output_initiator();
      output_initiator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.output_initiator_);
    }
    if (cached_has_bits & 0x00000004u) {
      report_output_ = from.report_output_;
    }
    if (cached_has_bits & 0x00000008u) {
      sending_gc_ = from.sending_gc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCBroadcastConsoleCommand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCBroadcastConsoleCommand::CopyFrom(const CMsgGCToGCBroadcastConsoleCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCBroadcastConsoleCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCBroadcastConsoleCommand::IsInitialized() const {
  return true;
}

void CMsgGCToGCBroadcastConsoleCommand::Swap(CMsgGCToGCBroadcastConsoleCommand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCBroadcastConsoleCommand::InternalSwap(CMsgGCToGCBroadcastConsoleCommand* other) {
  con_command_.Swap(&other->con_command_);
  output_initiator_.Swap(&other->output_initiator_);
  std::swap(report_output_, other->report_output_);
  std::swap(sending_gc_, other->sending_gc_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCBroadcastConsoleCommand::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCBroadcastConsoleCommand

// optional string con_command = 1;
bool CMsgGCToGCBroadcastConsoleCommand::has_con_command() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCBroadcastConsoleCommand::set_has_con_command() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCBroadcastConsoleCommand::clear_has_con_command() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCBroadcastConsoleCommand::clear_con_command() {
  con_command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_con_command();
}
const ::std::string& CMsgGCToGCBroadcastConsoleCommand::con_command() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command)
  return con_command_.GetNoArena();
}
void CMsgGCToGCBroadcastConsoleCommand::set_con_command(const ::std::string& value) {
  set_has_con_command();
  con_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command)
}
#if LANG_CXX11
void CMsgGCToGCBroadcastConsoleCommand::set_con_command(::std::string&& value) {
  set_has_con_command();
  con_command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command)
}
#endif
void CMsgGCToGCBroadcastConsoleCommand::set_con_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_con_command();
  con_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command)
}
void CMsgGCToGCBroadcastConsoleCommand::set_con_command(const char* value, size_t size) {
  set_has_con_command();
  con_command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command)
}
::std::string* CMsgGCToGCBroadcastConsoleCommand::mutable_con_command() {
  set_has_con_command();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command)
  return con_command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGCToGCBroadcastConsoleCommand::release_con_command() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command)
  clear_has_con_command();
  return con_command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGCToGCBroadcastConsoleCommand::set_allocated_con_command(::std::string* con_command) {
  if (con_command != NULL) {
    set_has_con_command();
  } else {
    clear_has_con_command();
  }
  con_command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), con_command);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToGCBroadcastConsoleCommand.con_command)
}

// optional bool report_output = 2;
bool CMsgGCToGCBroadcastConsoleCommand::has_report_output() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCToGCBroadcastConsoleCommand::set_has_report_output() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCToGCBroadcastConsoleCommand::clear_has_report_output() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCToGCBroadcastConsoleCommand::clear_report_output() {
  report_output_ = false;
  clear_has_report_output();
}
bool CMsgGCToGCBroadcastConsoleCommand::report_output() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCBroadcastConsoleCommand.report_output)
  return report_output_;
}
void CMsgGCToGCBroadcastConsoleCommand::set_report_output(bool value) {
  set_has_report_output();
  report_output_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCBroadcastConsoleCommand.report_output)
}

// optional uint32 sending_gc = 3;
bool CMsgGCToGCBroadcastConsoleCommand::has_sending_gc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGCToGCBroadcastConsoleCommand::set_has_sending_gc() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGCToGCBroadcastConsoleCommand::clear_has_sending_gc() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGCToGCBroadcastConsoleCommand::clear_sending_gc() {
  sending_gc_ = 0u;
  clear_has_sending_gc();
}
::google::protobuf::uint32 CMsgGCToGCBroadcastConsoleCommand::sending_gc() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCBroadcastConsoleCommand.sending_gc)
  return sending_gc_;
}
void CMsgGCToGCBroadcastConsoleCommand::set_sending_gc(::google::protobuf::uint32 value) {
  set_has_sending_gc();
  sending_gc_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCBroadcastConsoleCommand.sending_gc)
}

// optional string output_initiator = 4;
bool CMsgGCToGCBroadcastConsoleCommand::has_output_initiator() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCBroadcastConsoleCommand::set_has_output_initiator() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCBroadcastConsoleCommand::clear_has_output_initiator() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCBroadcastConsoleCommand::clear_output_initiator() {
  output_initiator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_output_initiator();
}
const ::std::string& CMsgGCToGCBroadcastConsoleCommand::output_initiator() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator)
  return output_initiator_.GetNoArena();
}
void CMsgGCToGCBroadcastConsoleCommand::set_output_initiator(const ::std::string& value) {
  set_has_output_initiator();
  output_initiator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator)
}
#if LANG_CXX11
void CMsgGCToGCBroadcastConsoleCommand::set_output_initiator(::std::string&& value) {
  set_has_output_initiator();
  output_initiator_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator)
}
#endif
void CMsgGCToGCBroadcastConsoleCommand::set_output_initiator(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_output_initiator();
  output_initiator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator)
}
void CMsgGCToGCBroadcastConsoleCommand::set_output_initiator(const char* value, size_t size) {
  set_has_output_initiator();
  output_initiator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator)
}
::std::string* CMsgGCToGCBroadcastConsoleCommand::mutable_output_initiator() {
  set_has_output_initiator();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator)
  return output_initiator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGCToGCBroadcastConsoleCommand::release_output_initiator() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator)
  clear_has_output_initiator();
  return output_initiator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGCToGCBroadcastConsoleCommand::set_allocated_output_initiator(::std::string* output_initiator) {
  if (output_initiator != NULL) {
    set_has_output_initiator();
  } else {
    clear_has_output_initiator();
  }
  output_initiator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), output_initiator);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToGCBroadcastConsoleCommand.output_initiator)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCConsoleOutput_OutputLine::kTextFieldNumber;
const int CMsgGCToGCConsoleOutput_OutputLine::kSpewLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCConsoleOutput_OutputLine::CMsgGCToGCConsoleOutput_OutputLine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
}
CMsgGCToGCConsoleOutput_OutputLine::CMsgGCToGCConsoleOutput_OutputLine(const CMsgGCToGCConsoleOutput_OutputLine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  spew_level_ = from.spew_level_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
}

void CMsgGCToGCConsoleOutput_OutputLine::SharedCtor() {
  _cached_size_ = 0;
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  spew_level_ = 0u;
}

CMsgGCToGCConsoleOutput_OutputLine::~CMsgGCToGCConsoleOutput_OutputLine() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  SharedDtor();
}

void CMsgGCToGCConsoleOutput_OutputLine::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCConsoleOutput_OutputLine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCConsoleOutput_OutputLine::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCConsoleOutput_OutputLine& CMsgGCToGCConsoleOutput_OutputLine::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCConsoleOutput_OutputLine* CMsgGCToGCConsoleOutput_OutputLine::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCConsoleOutput_OutputLine* n = new CMsgGCToGCConsoleOutput_OutputLine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCConsoleOutput_OutputLine::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  if (has_text()) {
    GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*text_.UnsafeRawStringPointer())->clear();
  }
  spew_level_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCConsoleOutput_OutputLine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 spew_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_spew_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &spew_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  return false;
#undef DO_
}

void CMsgGCToGCConsoleOutput_OutputLine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // optional uint32 spew_level = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->spew_level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
}

::google::protobuf::uint8* CMsgGCToGCConsoleOutput_OutputLine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string text = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // optional uint32 spew_level = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->spew_level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  return target;
}

size_t CMsgGCToGCConsoleOutput_OutputLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string text = 1;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional uint32 spew_level = 2;
    if (has_spew_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->spew_level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCConsoleOutput_OutputLine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCConsoleOutput_OutputLine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCConsoleOutput_OutputLine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
    MergeFrom(*source);
  }
}

void CMsgGCToGCConsoleOutput_OutputLine::MergeFrom(const CMsgGCToGCConsoleOutput_OutputLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (cached_has_bits & 0x00000002u) {
      spew_level_ = from.spew_level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCConsoleOutput_OutputLine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCConsoleOutput_OutputLine::CopyFrom(const CMsgGCToGCConsoleOutput_OutputLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCConsoleOutput.OutputLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCConsoleOutput_OutputLine::IsInitialized() const {
  return true;
}

void CMsgGCToGCConsoleOutput_OutputLine::Swap(CMsgGCToGCConsoleOutput_OutputLine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCConsoleOutput_OutputLine::InternalSwap(CMsgGCToGCConsoleOutput_OutputLine* other) {
  text_.Swap(&other->text_);
  std::swap(spew_level_, other->spew_level_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCConsoleOutput_OutputLine::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCConsoleOutput_OutputLine

// optional string text = 1;
bool CMsgGCToGCConsoleOutput_OutputLine::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCConsoleOutput_OutputLine::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCConsoleOutput_OutputLine::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCConsoleOutput_OutputLine::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& CMsgGCToGCConsoleOutput_OutputLine::text() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text)
  return text_.GetNoArena();
}
void CMsgGCToGCConsoleOutput_OutputLine::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text)
}
#if LANG_CXX11
void CMsgGCToGCConsoleOutput_OutputLine::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text)
}
#endif
void CMsgGCToGCConsoleOutput_OutputLine::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text)
}
void CMsgGCToGCConsoleOutput_OutputLine::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text)
}
::std::string* CMsgGCToGCConsoleOutput_OutputLine::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGCToGCConsoleOutput_OutputLine::release_text() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGCToGCConsoleOutput_OutputLine::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToGCConsoleOutput.OutputLine.text)
}

// optional uint32 spew_level = 2;
bool CMsgGCToGCConsoleOutput_OutputLine::has_spew_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCConsoleOutput_OutputLine::set_has_spew_level() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCConsoleOutput_OutputLine::clear_has_spew_level() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCConsoleOutput_OutputLine::clear_spew_level() {
  spew_level_ = 0u;
  clear_has_spew_level();
}
::google::protobuf::uint32 CMsgGCToGCConsoleOutput_OutputLine::spew_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCConsoleOutput.OutputLine.spew_level)
  return spew_level_;
}
void CMsgGCToGCConsoleOutput_OutputLine::set_spew_level(::google::protobuf::uint32 value) {
  set_has_spew_level();
  spew_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCConsoleOutput.OutputLine.spew_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCConsoleOutput::kInitiatorFieldNumber;
const int CMsgGCToGCConsoleOutput::kSendingGcFieldNumber;
const int CMsgGCToGCConsoleOutput::kMsgsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCConsoleOutput::CMsgGCToGCConsoleOutput()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCConsoleOutput)
}
CMsgGCToGCConsoleOutput::CMsgGCToGCConsoleOutput(const CMsgGCToGCConsoleOutput& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      msgs_(from.msgs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  initiator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_initiator()) {
    initiator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initiator_);
  }
  sending_gc_ = from.sending_gc_;
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCConsoleOutput)
}

void CMsgGCToGCConsoleOutput::SharedCtor() {
  _cached_size_ = 0;
  initiator_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sending_gc_ = 0u;
}

CMsgGCToGCConsoleOutput::~CMsgGCToGCConsoleOutput() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCConsoleOutput)
  SharedDtor();
}

void CMsgGCToGCConsoleOutput::SharedDtor() {
  initiator_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCConsoleOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCConsoleOutput::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCConsoleOutput& CMsgGCToGCConsoleOutput::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCConsoleOutput* CMsgGCToGCConsoleOutput::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCConsoleOutput* n = new CMsgGCToGCConsoleOutput;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCConsoleOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCConsoleOutput)
  msgs_.Clear();
  if (has_initiator()) {
    GOOGLE_DCHECK(!initiator_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*initiator_.UnsafeRawStringPointer())->clear();
  }
  sending_gc_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCConsoleOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCConsoleOutput)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string initiator = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_initiator()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->initiator().data(), this->initiator().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.dota.CMsgGCToGCConsoleOutput.initiator");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sending_gc = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_sending_gc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sending_gc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.dota.CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_msgs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCConsoleOutput)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCConsoleOutput)
  return false;
#undef DO_
}

void CMsgGCToGCConsoleOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCConsoleOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string initiator = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initiator().data(), this->initiator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCConsoleOutput.initiator");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->initiator(), output);
  }

  // optional uint32 sending_gc = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sending_gc(), output);
  }

  // repeated .proto.dota.CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->msgs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCConsoleOutput)
}

::google::protobuf::uint8* CMsgGCToGCConsoleOutput::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCConsoleOutput)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string initiator = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->initiator().data(), this->initiator().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.dota.CMsgGCToGCConsoleOutput.initiator");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->initiator(), target);
  }

  // optional uint32 sending_gc = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sending_gc(), target);
  }

  // repeated .proto.dota.CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
  for (unsigned int i = 0, n = this->msgs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->msgs(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCConsoleOutput)
  return target;
}

size_t CMsgGCToGCConsoleOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCConsoleOutput)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
  {
    unsigned int count = this->msgs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->msgs(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string initiator = 1;
    if (has_initiator()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->initiator());
    }

    // optional uint32 sending_gc = 2;
    if (has_sending_gc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sending_gc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCConsoleOutput::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCConsoleOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCConsoleOutput* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCConsoleOutput>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCConsoleOutput)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCConsoleOutput)
    MergeFrom(*source);
  }
}

void CMsgGCToGCConsoleOutput::MergeFrom(const CMsgGCToGCConsoleOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCConsoleOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  msgs_.MergeFrom(from.msgs_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_initiator();
      initiator_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.initiator_);
    }
    if (cached_has_bits & 0x00000002u) {
      sending_gc_ = from.sending_gc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCConsoleOutput::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCConsoleOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCConsoleOutput::CopyFrom(const CMsgGCToGCConsoleOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCConsoleOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCConsoleOutput::IsInitialized() const {
  return true;
}

void CMsgGCToGCConsoleOutput::Swap(CMsgGCToGCConsoleOutput* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCConsoleOutput::InternalSwap(CMsgGCToGCConsoleOutput* other) {
  msgs_.InternalSwap(&other->msgs_);
  initiator_.Swap(&other->initiator_);
  std::swap(sending_gc_, other->sending_gc_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCConsoleOutput::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCConsoleOutput

// optional string initiator = 1;
bool CMsgGCToGCConsoleOutput::has_initiator() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCConsoleOutput::set_has_initiator() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCConsoleOutput::clear_has_initiator() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCConsoleOutput::clear_initiator() {
  initiator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_initiator();
}
const ::std::string& CMsgGCToGCConsoleOutput::initiator() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCConsoleOutput.initiator)
  return initiator_.GetNoArena();
}
void CMsgGCToGCConsoleOutput::set_initiator(const ::std::string& value) {
  set_has_initiator();
  initiator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCConsoleOutput.initiator)
}
#if LANG_CXX11
void CMsgGCToGCConsoleOutput::set_initiator(::std::string&& value) {
  set_has_initiator();
  initiator_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToGCConsoleOutput.initiator)
}
#endif
void CMsgGCToGCConsoleOutput::set_initiator(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_initiator();
  initiator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToGCConsoleOutput.initiator)
}
void CMsgGCToGCConsoleOutput::set_initiator(const char* value, size_t size) {
  set_has_initiator();
  initiator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToGCConsoleOutput.initiator)
}
::std::string* CMsgGCToGCConsoleOutput::mutable_initiator() {
  set_has_initiator();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCConsoleOutput.initiator)
  return initiator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGCToGCConsoleOutput::release_initiator() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToGCConsoleOutput.initiator)
  clear_has_initiator();
  return initiator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGCToGCConsoleOutput::set_allocated_initiator(::std::string* initiator) {
  if (initiator != NULL) {
    set_has_initiator();
  } else {
    clear_has_initiator();
  }
  initiator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), initiator);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToGCConsoleOutput.initiator)
}

// optional uint32 sending_gc = 2;
bool CMsgGCToGCConsoleOutput::has_sending_gc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCConsoleOutput::set_has_sending_gc() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCConsoleOutput::clear_has_sending_gc() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCConsoleOutput::clear_sending_gc() {
  sending_gc_ = 0u;
  clear_has_sending_gc();
}
::google::protobuf::uint32 CMsgGCToGCConsoleOutput::sending_gc() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCConsoleOutput.sending_gc)
  return sending_gc_;
}
void CMsgGCToGCConsoleOutput::set_sending_gc(::google::protobuf::uint32 value) {
  set_has_sending_gc();
  sending_gc_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCConsoleOutput.sending_gc)
}

// repeated .proto.dota.CMsgGCToGCConsoleOutput.OutputLine msgs = 3;
int CMsgGCToGCConsoleOutput::msgs_size() const {
  return msgs_.size();
}
void CMsgGCToGCConsoleOutput::clear_msgs() {
  msgs_.Clear();
}
const ::proto::dota::CMsgGCToGCConsoleOutput_OutputLine& CMsgGCToGCConsoleOutput::msgs(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCConsoleOutput.msgs)
  return msgs_.Get(index);
}
::proto::dota::CMsgGCToGCConsoleOutput_OutputLine* CMsgGCToGCConsoleOutput::mutable_msgs(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCConsoleOutput.msgs)
  return msgs_.Mutable(index);
}
::proto::dota::CMsgGCToGCConsoleOutput_OutputLine* CMsgGCToGCConsoleOutput::add_msgs() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToGCConsoleOutput.msgs)
  return msgs_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToGCConsoleOutput_OutputLine >*
CMsgGCToGCConsoleOutput::mutable_msgs() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToGCConsoleOutput.msgs)
  return &msgs_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToGCConsoleOutput_OutputLine >&
CMsgGCToGCConsoleOutput::msgs() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToGCConsoleOutput.msgs)
  return msgs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgItemAges_MaxItemIDTimestamp::kTimestampFieldNumber;
const int CMsgItemAges_MaxItemIDTimestamp::kMaxItemIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgItemAges_MaxItemIDTimestamp::CMsgItemAges_MaxItemIDTimestamp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
}
CMsgItemAges_MaxItemIDTimestamp::CMsgItemAges_MaxItemIDTimestamp(const CMsgItemAges_MaxItemIDTimestamp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&max_item_id_, &from.max_item_id_,
    reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&max_item_id_) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
}

void CMsgItemAges_MaxItemIDTimestamp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&max_item_id_, 0, reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&max_item_id_) + sizeof(timestamp_));
}

CMsgItemAges_MaxItemIDTimestamp::~CMsgItemAges_MaxItemIDTimestamp() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  SharedDtor();
}

void CMsgItemAges_MaxItemIDTimestamp::SharedDtor() {
}

void CMsgItemAges_MaxItemIDTimestamp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgItemAges_MaxItemIDTimestamp::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgItemAges_MaxItemIDTimestamp& CMsgItemAges_MaxItemIDTimestamp::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgItemAges_MaxItemIDTimestamp* CMsgItemAges_MaxItemIDTimestamp::New(::google::protobuf::Arena* arena) const {
  CMsgItemAges_MaxItemIDTimestamp* n = new CMsgItemAges_MaxItemIDTimestamp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgItemAges_MaxItemIDTimestamp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&max_item_id_, 0, reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&max_item_id_) + sizeof(timestamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgItemAges_MaxItemIDTimestamp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 max_item_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_max_item_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &max_item_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  return false;
#undef DO_
}

void CMsgItemAges_MaxItemIDTimestamp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timestamp = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->timestamp(), output);
  }

  // optional uint64 max_item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->max_item_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
}

::google::protobuf::uint8* CMsgItemAges_MaxItemIDTimestamp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 timestamp = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->timestamp(), target);
  }

  // optional uint64 max_item_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->max_item_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  return target;
}

size_t CMsgItemAges_MaxItemIDTimestamp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 max_item_id = 2;
    if (has_max_item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->max_item_id());
    }

    // optional uint32 timestamp = 1;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgItemAges_MaxItemIDTimestamp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgItemAges_MaxItemIDTimestamp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgItemAges_MaxItemIDTimestamp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
    MergeFrom(*source);
  }
}

void CMsgItemAges_MaxItemIDTimestamp::MergeFrom(const CMsgItemAges_MaxItemIDTimestamp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      max_item_id_ = from.max_item_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgItemAges_MaxItemIDTimestamp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgItemAges_MaxItemIDTimestamp::CopyFrom(const CMsgItemAges_MaxItemIDTimestamp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgItemAges.MaxItemIDTimestamp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgItemAges_MaxItemIDTimestamp::IsInitialized() const {
  return true;
}

void CMsgItemAges_MaxItemIDTimestamp::Swap(CMsgItemAges_MaxItemIDTimestamp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgItemAges_MaxItemIDTimestamp::InternalSwap(CMsgItemAges_MaxItemIDTimestamp* other) {
  std::swap(max_item_id_, other->max_item_id_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgItemAges_MaxItemIDTimestamp::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgItemAges_MaxItemIDTimestamp

// optional uint32 timestamp = 1;
bool CMsgItemAges_MaxItemIDTimestamp::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgItemAges_MaxItemIDTimestamp::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgItemAges_MaxItemIDTimestamp::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgItemAges_MaxItemIDTimestamp::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
::google::protobuf::uint32 CMsgItemAges_MaxItemIDTimestamp::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgItemAges.MaxItemIDTimestamp.timestamp)
  return timestamp_;
}
void CMsgItemAges_MaxItemIDTimestamp::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgItemAges.MaxItemIDTimestamp.timestamp)
}

// optional uint64 max_item_id = 2;
bool CMsgItemAges_MaxItemIDTimestamp::has_max_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgItemAges_MaxItemIDTimestamp::set_has_max_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgItemAges_MaxItemIDTimestamp::clear_has_max_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgItemAges_MaxItemIDTimestamp::clear_max_item_id() {
  max_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_max_item_id();
}
::google::protobuf::uint64 CMsgItemAges_MaxItemIDTimestamp::max_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgItemAges.MaxItemIDTimestamp.max_item_id)
  return max_item_id_;
}
void CMsgItemAges_MaxItemIDTimestamp::set_max_item_id(::google::protobuf::uint64 value) {
  set_has_max_item_id();
  max_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgItemAges.MaxItemIDTimestamp.max_item_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgItemAges::kMaxItemIdTimestampsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgItemAges::CMsgItemAges()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgItemAges)
}
CMsgItemAges::CMsgItemAges(const CMsgItemAges& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      max_item_id_timestamps_(from.max_item_id_timestamps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgItemAges)
}

void CMsgItemAges::SharedCtor() {
  _cached_size_ = 0;
}

CMsgItemAges::~CMsgItemAges() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgItemAges)
  SharedDtor();
}

void CMsgItemAges::SharedDtor() {
}

void CMsgItemAges::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgItemAges::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgItemAges& CMsgItemAges::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgItemAges* CMsgItemAges::New(::google::protobuf::Arena* arena) const {
  CMsgItemAges* n = new CMsgItemAges;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgItemAges::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgItemAges)
  max_item_id_timestamps_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgItemAges::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgItemAges)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.dota.CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_max_item_id_timestamps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgItemAges)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgItemAges)
  return false;
#undef DO_
}

void CMsgItemAges::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgItemAges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
  for (unsigned int i = 0, n = this->max_item_id_timestamps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->max_item_id_timestamps(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgItemAges)
}

::google::protobuf::uint8* CMsgItemAges::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgItemAges)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.dota.CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
  for (unsigned int i = 0, n = this->max_item_id_timestamps_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->max_item_id_timestamps(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgItemAges)
  return target;
}

size_t CMsgItemAges::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgItemAges)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.dota.CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
  {
    unsigned int count = this->max_item_id_timestamps_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->max_item_id_timestamps(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgItemAges::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgItemAges)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgItemAges* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgItemAges>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgItemAges)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgItemAges)
    MergeFrom(*source);
  }
}

void CMsgItemAges::MergeFrom(const CMsgItemAges& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgItemAges)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  max_item_id_timestamps_.MergeFrom(from.max_item_id_timestamps_);
}

void CMsgItemAges::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgItemAges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgItemAges::CopyFrom(const CMsgItemAges& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgItemAges)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgItemAges::IsInitialized() const {
  return true;
}

void CMsgItemAges::Swap(CMsgItemAges* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgItemAges::InternalSwap(CMsgItemAges* other) {
  max_item_id_timestamps_.InternalSwap(&other->max_item_id_timestamps_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgItemAges::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgItemAges

// repeated .proto.dota.CMsgItemAges.MaxItemIDTimestamp max_item_id_timestamps = 1;
int CMsgItemAges::max_item_id_timestamps_size() const {
  return max_item_id_timestamps_.size();
}
void CMsgItemAges::clear_max_item_id_timestamps() {
  max_item_id_timestamps_.Clear();
}
const ::proto::dota::CMsgItemAges_MaxItemIDTimestamp& CMsgItemAges::max_item_id_timestamps(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgItemAges.max_item_id_timestamps)
  return max_item_id_timestamps_.Get(index);
}
::proto::dota::CMsgItemAges_MaxItemIDTimestamp* CMsgItemAges::mutable_max_item_id_timestamps(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgItemAges.max_item_id_timestamps)
  return max_item_id_timestamps_.Mutable(index);
}
::proto::dota::CMsgItemAges_MaxItemIDTimestamp* CMsgItemAges::add_max_item_id_timestamps() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgItemAges.max_item_id_timestamps)
  return max_item_id_timestamps_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgItemAges_MaxItemIDTimestamp >*
CMsgItemAges::mutable_max_item_id_timestamps() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgItemAges.max_item_id_timestamps)
  return &max_item_id_timestamps_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgItemAges_MaxItemIDTimestamp >&
CMsgItemAges::max_item_id_timestamps() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgItemAges.max_item_id_timestamps)
  return max_item_id_timestamps_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCInternalTestMsg::kSendingGcFieldNumber;
const int CMsgGCToGCInternalTestMsg::kSenderIdFieldNumber;
const int CMsgGCToGCInternalTestMsg::kContextFieldNumber;
const int CMsgGCToGCInternalTestMsg::kMessageIdFieldNumber;
const int CMsgGCToGCInternalTestMsg::kMessageBodyFieldNumber;
const int CMsgGCToGCInternalTestMsg::kJobIdSourceFieldNumber;
const int CMsgGCToGCInternalTestMsg::kJobIdTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCInternalTestMsg::CMsgGCToGCInternalTestMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCInternalTestMsg)
}
CMsgGCToGCInternalTestMsg::CMsgGCToGCInternalTestMsg(const CMsgGCToGCInternalTestMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message_body()) {
    message_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_body_);
  }
  ::memcpy(&sender_id_, &from.sender_id_,
    reinterpret_cast<char*>(&message_id_) -
    reinterpret_cast<char*>(&sender_id_) + sizeof(message_id_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCInternalTestMsg)
}

void CMsgGCToGCInternalTestMsg::SharedCtor() {
  _cached_size_ = 0;
  message_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sender_id_, 0, reinterpret_cast<char*>(&message_id_) -
    reinterpret_cast<char*>(&sender_id_) + sizeof(message_id_));
}

CMsgGCToGCInternalTestMsg::~CMsgGCToGCInternalTestMsg() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCInternalTestMsg)
  SharedDtor();
}

void CMsgGCToGCInternalTestMsg::SharedDtor() {
  message_body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCToGCInternalTestMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCInternalTestMsg::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCInternalTestMsg& CMsgGCToGCInternalTestMsg::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCInternalTestMsg* CMsgGCToGCInternalTestMsg::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCInternalTestMsg* n = new CMsgGCToGCInternalTestMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCInternalTestMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCInternalTestMsg)
  if (has_message_body()) {
    GOOGLE_DCHECK(!message_body_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*message_body_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 126u) {
    ::memset(&sender_id_, 0, reinterpret_cast<char*>(&message_id_) -
      reinterpret_cast<char*>(&sender_id_) + sizeof(message_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCInternalTestMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCInternalTestMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sending_gc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_sending_gc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sending_gc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 sender_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_sender_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &sender_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 context = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_context();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &context_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 message_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_message_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &message_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes message_body = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 job_id_source = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(49u)) {
          set_has_job_id_source();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &job_id_source_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 job_id_target = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(57u)) {
          set_has_job_id_target();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &job_id_target_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCInternalTestMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCInternalTestMsg)
  return false;
#undef DO_
}

void CMsgGCToGCInternalTestMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCInternalTestMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sending_gc = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->sending_gc(), output);
  }

  // optional fixed64 sender_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->sender_id(), output);
  }

  // optional uint32 context = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->context(), output);
  }

  // optional uint32 message_id = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->message_id(), output);
  }

  // optional bytes message_body = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->message_body(), output);
  }

  // optional fixed64 job_id_source = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(6, this->job_id_source(), output);
  }

  // optional fixed64 job_id_target = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(7, this->job_id_target(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCInternalTestMsg)
}

::google::protobuf::uint8* CMsgGCToGCInternalTestMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCInternalTestMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 sending_gc = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->sending_gc(), target);
  }

  // optional fixed64 sender_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->sender_id(), target);
  }

  // optional uint32 context = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->context(), target);
  }

  // optional uint32 message_id = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->message_id(), target);
  }

  // optional bytes message_body = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->message_body(), target);
  }

  // optional fixed64 job_id_source = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(6, this->job_id_source(), target);
  }

  // optional fixed64 job_id_target = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(7, this->job_id_target(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCInternalTestMsg)
  return target;
}

size_t CMsgGCToGCInternalTestMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCInternalTestMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional bytes message_body = 5;
    if (has_message_body()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->message_body());
    }

    // optional fixed64 sender_id = 2;
    if (has_sender_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 sending_gc = 1;
    if (has_sending_gc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sending_gc());
    }

    // optional uint32 context = 3;
    if (has_context()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->context());
    }

    // optional fixed64 job_id_source = 6;
    if (has_job_id_source()) {
      total_size += 1 + 8;
    }

    // optional fixed64 job_id_target = 7;
    if (has_job_id_target()) {
      total_size += 1 + 8;
    }

    // optional uint32 message_id = 4;
    if (has_message_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->message_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCInternalTestMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCInternalTestMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCInternalTestMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCInternalTestMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCInternalTestMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCInternalTestMsg)
    MergeFrom(*source);
  }
}

void CMsgGCToGCInternalTestMsg::MergeFrom(const CMsgGCToGCInternalTestMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCInternalTestMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message_body();
      message_body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_body_);
    }
    if (cached_has_bits & 0x00000002u) {
      sender_id_ = from.sender_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      sending_gc_ = from.sending_gc_;
    }
    if (cached_has_bits & 0x00000008u) {
      context_ = from.context_;
    }
    if (cached_has_bits & 0x00000010u) {
      job_id_source_ = from.job_id_source_;
    }
    if (cached_has_bits & 0x00000020u) {
      job_id_target_ = from.job_id_target_;
    }
    if (cached_has_bits & 0x00000040u) {
      message_id_ = from.message_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCInternalTestMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCInternalTestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCInternalTestMsg::CopyFrom(const CMsgGCToGCInternalTestMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCInternalTestMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCInternalTestMsg::IsInitialized() const {
  return true;
}

void CMsgGCToGCInternalTestMsg::Swap(CMsgGCToGCInternalTestMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCInternalTestMsg::InternalSwap(CMsgGCToGCInternalTestMsg* other) {
  message_body_.Swap(&other->message_body_);
  std::swap(sender_id_, other->sender_id_);
  std::swap(sending_gc_, other->sending_gc_);
  std::swap(context_, other->context_);
  std::swap(job_id_source_, other->job_id_source_);
  std::swap(job_id_target_, other->job_id_target_);
  std::swap(message_id_, other->message_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCInternalTestMsg::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCInternalTestMsg

// optional uint32 sending_gc = 1;
bool CMsgGCToGCInternalTestMsg::has_sending_gc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCToGCInternalTestMsg::set_has_sending_gc() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCToGCInternalTestMsg::clear_has_sending_gc() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCToGCInternalTestMsg::clear_sending_gc() {
  sending_gc_ = 0u;
  clear_has_sending_gc();
}
::google::protobuf::uint32 CMsgGCToGCInternalTestMsg::sending_gc() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCInternalTestMsg.sending_gc)
  return sending_gc_;
}
void CMsgGCToGCInternalTestMsg::set_sending_gc(::google::protobuf::uint32 value) {
  set_has_sending_gc();
  sending_gc_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCInternalTestMsg.sending_gc)
}

// optional fixed64 sender_id = 2;
bool CMsgGCToGCInternalTestMsg::has_sender_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCInternalTestMsg::set_has_sender_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCInternalTestMsg::clear_has_sender_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCInternalTestMsg::clear_sender_id() {
  sender_id_ = GOOGLE_ULONGLONG(0);
  clear_has_sender_id();
}
::google::protobuf::uint64 CMsgGCToGCInternalTestMsg::sender_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCInternalTestMsg.sender_id)
  return sender_id_;
}
void CMsgGCToGCInternalTestMsg::set_sender_id(::google::protobuf::uint64 value) {
  set_has_sender_id();
  sender_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCInternalTestMsg.sender_id)
}

// optional uint32 context = 3;
bool CMsgGCToGCInternalTestMsg::has_context() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGCToGCInternalTestMsg::set_has_context() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGCToGCInternalTestMsg::clear_has_context() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGCToGCInternalTestMsg::clear_context() {
  context_ = 0u;
  clear_has_context();
}
::google::protobuf::uint32 CMsgGCToGCInternalTestMsg::context() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCInternalTestMsg.context)
  return context_;
}
void CMsgGCToGCInternalTestMsg::set_context(::google::protobuf::uint32 value) {
  set_has_context();
  context_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCInternalTestMsg.context)
}

// optional uint32 message_id = 4;
bool CMsgGCToGCInternalTestMsg::has_message_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgGCToGCInternalTestMsg::set_has_message_id() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgGCToGCInternalTestMsg::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgGCToGCInternalTestMsg::clear_message_id() {
  message_id_ = 0u;
  clear_has_message_id();
}
::google::protobuf::uint32 CMsgGCToGCInternalTestMsg::message_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCInternalTestMsg.message_id)
  return message_id_;
}
void CMsgGCToGCInternalTestMsg::set_message_id(::google::protobuf::uint32 value) {
  set_has_message_id();
  message_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCInternalTestMsg.message_id)
}

// optional bytes message_body = 5;
bool CMsgGCToGCInternalTestMsg::has_message_body() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCInternalTestMsg::set_has_message_body() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCInternalTestMsg::clear_has_message_body() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCInternalTestMsg::clear_message_body() {
  message_body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message_body();
}
const ::std::string& CMsgGCToGCInternalTestMsg::message_body() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCInternalTestMsg.message_body)
  return message_body_.GetNoArena();
}
void CMsgGCToGCInternalTestMsg::set_message_body(const ::std::string& value) {
  set_has_message_body();
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCInternalTestMsg.message_body)
}
#if LANG_CXX11
void CMsgGCToGCInternalTestMsg::set_message_body(::std::string&& value) {
  set_has_message_body();
  message_body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToGCInternalTestMsg.message_body)
}
#endif
void CMsgGCToGCInternalTestMsg::set_message_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message_body();
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToGCInternalTestMsg.message_body)
}
void CMsgGCToGCInternalTestMsg::set_message_body(const void* value, size_t size) {
  set_has_message_body();
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToGCInternalTestMsg.message_body)
}
::std::string* CMsgGCToGCInternalTestMsg::mutable_message_body() {
  set_has_message_body();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToGCInternalTestMsg.message_body)
  return message_body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGCToGCInternalTestMsg::release_message_body() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToGCInternalTestMsg.message_body)
  clear_has_message_body();
  return message_body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGCToGCInternalTestMsg::set_allocated_message_body(::std::string* message_body) {
  if (message_body != NULL) {
    set_has_message_body();
  } else {
    clear_has_message_body();
  }
  message_body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_body);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToGCInternalTestMsg.message_body)
}

// optional fixed64 job_id_source = 6;
bool CMsgGCToGCInternalTestMsg::has_job_id_source() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgGCToGCInternalTestMsg::set_has_job_id_source() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgGCToGCInternalTestMsg::clear_has_job_id_source() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgGCToGCInternalTestMsg::clear_job_id_source() {
  job_id_source_ = GOOGLE_ULONGLONG(0);
  clear_has_job_id_source();
}
::google::protobuf::uint64 CMsgGCToGCInternalTestMsg::job_id_source() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCInternalTestMsg.job_id_source)
  return job_id_source_;
}
void CMsgGCToGCInternalTestMsg::set_job_id_source(::google::protobuf::uint64 value) {
  set_has_job_id_source();
  job_id_source_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCInternalTestMsg.job_id_source)
}

// optional fixed64 job_id_target = 7;
bool CMsgGCToGCInternalTestMsg::has_job_id_target() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgGCToGCInternalTestMsg::set_has_job_id_target() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgGCToGCInternalTestMsg::clear_has_job_id_target() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgGCToGCInternalTestMsg::clear_job_id_target() {
  job_id_target_ = GOOGLE_ULONGLONG(0);
  clear_has_job_id_target();
}
::google::protobuf::uint64 CMsgGCToGCInternalTestMsg::job_id_target() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCInternalTestMsg.job_id_target)
  return job_id_target_;
}
void CMsgGCToGCInternalTestMsg::set_job_id_target(::google::protobuf::uint64 value) {
  set_has_job_id_target();
  job_id_target_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCInternalTestMsg.job_id_target)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCToGCClientServerVersionsUpdated::kClientMinAllowedVersionFieldNumber;
const int CMsgGCToGCClientServerVersionsUpdated::kClientActiveVersionFieldNumber;
const int CMsgGCToGCClientServerVersionsUpdated::kServerActiveVersionFieldNumber;
const int CMsgGCToGCClientServerVersionsUpdated::kServerDeployedVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCToGCClientServerVersionsUpdated::CMsgGCToGCClientServerVersionsUpdated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
}
CMsgGCToGCClientServerVersionsUpdated::CMsgGCToGCClientServerVersionsUpdated(const CMsgGCToGCClientServerVersionsUpdated& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&client_min_allowed_version_, &from.client_min_allowed_version_,
    reinterpret_cast<char*>(&server_deployed_version_) -
    reinterpret_cast<char*>(&client_min_allowed_version_) + sizeof(server_deployed_version_));
  // @@protoc_insertion_point(copy_constructor:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
}

void CMsgGCToGCClientServerVersionsUpdated::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&client_min_allowed_version_, 0, reinterpret_cast<char*>(&server_deployed_version_) -
    reinterpret_cast<char*>(&client_min_allowed_version_) + sizeof(server_deployed_version_));
}

CMsgGCToGCClientServerVersionsUpdated::~CMsgGCToGCClientServerVersionsUpdated() {
  // @@protoc_insertion_point(destructor:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  SharedDtor();
}

void CMsgGCToGCClientServerVersionsUpdated::SharedDtor() {
}

void CMsgGCToGCClientServerVersionsUpdated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCToGCClientServerVersionsUpdated::descriptor() {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCToGCClientServerVersionsUpdated& CMsgGCToGCClientServerVersionsUpdated::default_instance() {
  protobuf_econ_5fgcmessages_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCToGCClientServerVersionsUpdated* CMsgGCToGCClientServerVersionsUpdated::New(::google::protobuf::Arena* arena) const {
  CMsgGCToGCClientServerVersionsUpdated* n = new CMsgGCToGCClientServerVersionsUpdated;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCToGCClientServerVersionsUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&client_min_allowed_version_, 0, reinterpret_cast<char*>(&server_deployed_version_) -
      reinterpret_cast<char*>(&client_min_allowed_version_) + sizeof(server_deployed_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCToGCClientServerVersionsUpdated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 client_min_allowed_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_client_min_allowed_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_min_allowed_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 client_active_version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_client_active_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &client_active_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_active_version = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_server_active_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_active_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_deployed_version = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_server_deployed_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_deployed_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  return false;
#undef DO_
}

void CMsgGCToGCClientServerVersionsUpdated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 client_min_allowed_version = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->client_min_allowed_version(), output);
  }

  // optional uint32 client_active_version = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->client_active_version(), output);
  }

  // optional uint32 server_active_version = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->server_active_version(), output);
  }

  // optional uint32 server_deployed_version = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->server_deployed_version(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
}

::google::protobuf::uint8* CMsgGCToGCClientServerVersionsUpdated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 client_min_allowed_version = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->client_min_allowed_version(), target);
  }

  // optional uint32 client_active_version = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->client_active_version(), target);
  }

  // optional uint32 server_active_version = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->server_active_version(), target);
  }

  // optional uint32 server_deployed_version = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->server_deployed_version(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  return target;
}

size_t CMsgGCToGCClientServerVersionsUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 client_min_allowed_version = 1;
    if (has_client_min_allowed_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_min_allowed_version());
    }

    // optional uint32 client_active_version = 2;
    if (has_client_active_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->client_active_version());
    }

    // optional uint32 server_active_version = 3;
    if (has_server_active_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_active_version());
    }

    // optional uint32 server_deployed_version = 4;
    if (has_server_deployed_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_deployed_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCToGCClientServerVersionsUpdated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCToGCClientServerVersionsUpdated* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCToGCClientServerVersionsUpdated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
    MergeFrom(*source);
  }
}

void CMsgGCToGCClientServerVersionsUpdated::MergeFrom(const CMsgGCToGCClientServerVersionsUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      client_min_allowed_version_ = from.client_min_allowed_version_;
    }
    if (cached_has_bits & 0x00000002u) {
      client_active_version_ = from.client_active_version_;
    }
    if (cached_has_bits & 0x00000004u) {
      server_active_version_ = from.server_active_version_;
    }
    if (cached_has_bits & 0x00000008u) {
      server_deployed_version_ = from.server_deployed_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCToGCClientServerVersionsUpdated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCToGCClientServerVersionsUpdated::CopyFrom(const CMsgGCToGCClientServerVersionsUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.dota.CMsgGCToGCClientServerVersionsUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCToGCClientServerVersionsUpdated::IsInitialized() const {
  return true;
}

void CMsgGCToGCClientServerVersionsUpdated::Swap(CMsgGCToGCClientServerVersionsUpdated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCToGCClientServerVersionsUpdated::InternalSwap(CMsgGCToGCClientServerVersionsUpdated* other) {
  std::swap(client_min_allowed_version_, other->client_min_allowed_version_);
  std::swap(client_active_version_, other->client_active_version_);
  std::swap(server_active_version_, other->server_active_version_);
  std::swap(server_deployed_version_, other->server_deployed_version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCToGCClientServerVersionsUpdated::GetMetadata() const {
  protobuf_econ_5fgcmessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_econ_5fgcmessages_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCToGCClientServerVersionsUpdated

// optional uint32 client_min_allowed_version = 1;
bool CMsgGCToGCClientServerVersionsUpdated::has_client_min_allowed_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCToGCClientServerVersionsUpdated::set_has_client_min_allowed_version() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCToGCClientServerVersionsUpdated::clear_has_client_min_allowed_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCToGCClientServerVersionsUpdated::clear_client_min_allowed_version() {
  client_min_allowed_version_ = 0u;
  clear_has_client_min_allowed_version();
}
::google::protobuf::uint32 CMsgGCToGCClientServerVersionsUpdated::client_min_allowed_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCClientServerVersionsUpdated.client_min_allowed_version)
  return client_min_allowed_version_;
}
void CMsgGCToGCClientServerVersionsUpdated::set_client_min_allowed_version(::google::protobuf::uint32 value) {
  set_has_client_min_allowed_version();
  client_min_allowed_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCClientServerVersionsUpdated.client_min_allowed_version)
}

// optional uint32 client_active_version = 2;
bool CMsgGCToGCClientServerVersionsUpdated::has_client_active_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCToGCClientServerVersionsUpdated::set_has_client_active_version() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCToGCClientServerVersionsUpdated::clear_has_client_active_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCToGCClientServerVersionsUpdated::clear_client_active_version() {
  client_active_version_ = 0u;
  clear_has_client_active_version();
}
::google::protobuf::uint32 CMsgGCToGCClientServerVersionsUpdated::client_active_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCClientServerVersionsUpdated.client_active_version)
  return client_active_version_;
}
void CMsgGCToGCClientServerVersionsUpdated::set_client_active_version(::google::protobuf::uint32 value) {
  set_has_client_active_version();
  client_active_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCClientServerVersionsUpdated.client_active_version)
}

// optional uint32 server_active_version = 3;
bool CMsgGCToGCClientServerVersionsUpdated::has_server_active_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCToGCClientServerVersionsUpdated::set_has_server_active_version() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCToGCClientServerVersionsUpdated::clear_has_server_active_version() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCToGCClientServerVersionsUpdated::clear_server_active_version() {
  server_active_version_ = 0u;
  clear_has_server_active_version();
}
::google::protobuf::uint32 CMsgGCToGCClientServerVersionsUpdated::server_active_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCClientServerVersionsUpdated.server_active_version)
  return server_active_version_;
}
void CMsgGCToGCClientServerVersionsUpdated::set_server_active_version(::google::protobuf::uint32 value) {
  set_has_server_active_version();
  server_active_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCClientServerVersionsUpdated.server_active_version)
}

// optional uint32 server_deployed_version = 4;
bool CMsgGCToGCClientServerVersionsUpdated::has_server_deployed_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGCToGCClientServerVersionsUpdated::set_has_server_deployed_version() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGCToGCClientServerVersionsUpdated::clear_has_server_deployed_version() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGCToGCClientServerVersionsUpdated::clear_server_deployed_version() {
  server_deployed_version_ = 0u;
  clear_has_server_deployed_version();
}
::google::protobuf::uint32 CMsgGCToGCClientServerVersionsUpdated::server_deployed_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCClientServerVersionsUpdated.server_deployed_version)
  return server_deployed_version_;
}
void CMsgGCToGCClientServerVersionsUpdated::set_server_deployed_version(::google::protobuf::uint32 value) {
  set_has_server_deployed_version();
  server_deployed_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCClientServerVersionsUpdated.server_deployed_version)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace dota
}  // namespace proto

// @@protoc_insertion_point(global_scope)
