// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_usermessages.proto

#ifndef PROTOBUF_dota_5fusermessages_2eproto__INCLUDED
#define PROTOBUF_dota_5fusermessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "networkbasetypes.pb.h"
#include "dota_commonmessages.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
namespace dota {
class CDOTAMsg_CoachHUDPing;
class CDOTAMsg_CoachHUDPingDefaultTypeInternal;
extern CDOTAMsg_CoachHUDPingDefaultTypeInternal _CDOTAMsg_CoachHUDPing_default_instance_;
class CDOTAMsg_DismissAllStatPopups;
class CDOTAMsg_DismissAllStatPopupsDefaultTypeInternal;
extern CDOTAMsg_DismissAllStatPopupsDefaultTypeInternal _CDOTAMsg_DismissAllStatPopups_default_instance_;
class CDOTAMsg_ItemAlert;
class CDOTAMsg_ItemAlertDefaultTypeInternal;
extern CDOTAMsg_ItemAlertDefaultTypeInternal _CDOTAMsg_ItemAlert_default_instance_;
class CDOTAMsg_LocationPing;
class CDOTAMsg_LocationPingDefaultTypeInternal;
extern CDOTAMsg_LocationPingDefaultTypeInternal _CDOTAMsg_LocationPing_default_instance_;
class CDOTAMsg_MapLine;
class CDOTAMsg_MapLineDefaultTypeInternal;
extern CDOTAMsg_MapLineDefaultTypeInternal _CDOTAMsg_MapLine_default_instance_;
class CDOTAMsg_SendStatPopup;
class CDOTAMsg_SendStatPopupDefaultTypeInternal;
extern CDOTAMsg_SendStatPopupDefaultTypeInternal _CDOTAMsg_SendStatPopup_default_instance_;
class CDOTAMsg_UnitOrder;
class CDOTAMsg_UnitOrderDefaultTypeInternal;
extern CDOTAMsg_UnitOrderDefaultTypeInternal _CDOTAMsg_UnitOrder_default_instance_;
class CDOTAMsg_WorldLine;
class CDOTAMsg_WorldLineDefaultTypeInternal;
extern CDOTAMsg_WorldLineDefaultTypeInternal _CDOTAMsg_WorldLine_default_instance_;
class CDOTAResponseQuerySerialized;
class CDOTAResponseQuerySerializedDefaultTypeInternal;
extern CDOTAResponseQuerySerializedDefaultTypeInternal _CDOTAResponseQuerySerialized_default_instance_;
class CDOTAResponseQuerySerialized_Fact;
class CDOTAResponseQuerySerialized_FactDefaultTypeInternal;
extern CDOTAResponseQuerySerialized_FactDefaultTypeInternal _CDOTAResponseQuerySerialized_Fact_default_instance_;
class CDOTASpeechMatchOnClient;
class CDOTASpeechMatchOnClientDefaultTypeInternal;
extern CDOTASpeechMatchOnClientDefaultTypeInternal _CDOTASpeechMatchOnClient_default_instance_;
class CDOTAUserMessage_RequestItemSuggestions;
class CDOTAUserMessage_RequestItemSuggestionsDefaultTypeInternal;
extern CDOTAUserMessage_RequestItemSuggestionsDefaultTypeInternal _CDOTAUserMessage_RequestItemSuggestions_default_instance_;
class CDOTAUserMessage_TeamCaptainChanged;
class CDOTAUserMessage_TeamCaptainChangedDefaultTypeInternal;
extern CDOTAUserMessage_TeamCaptainChangedDefaultTypeInternal _CDOTAUserMessage_TeamCaptainChanged_default_instance_;
class CDOTAUserMsg_AIDebugLine;
class CDOTAUserMsg_AIDebugLineDefaultTypeInternal;
extern CDOTAUserMsg_AIDebugLineDefaultTypeInternal _CDOTAUserMsg_AIDebugLine_default_instance_;
class CDOTAUserMsg_AbilityPing;
class CDOTAUserMsg_AbilityPingDefaultTypeInternal;
extern CDOTAUserMsg_AbilityPingDefaultTypeInternal _CDOTAUserMsg_AbilityPing_default_instance_;
class CDOTAUserMsg_AbilitySteal;
class CDOTAUserMsg_AbilityStealDefaultTypeInternal;
extern CDOTAUserMsg_AbilityStealDefaultTypeInternal _CDOTAUserMsg_AbilitySteal_default_instance_;
class CDOTAUserMsg_AddQuestLogEntry;
class CDOTAUserMsg_AddQuestLogEntryDefaultTypeInternal;
extern CDOTAUserMsg_AddQuestLogEntryDefaultTypeInternal _CDOTAUserMsg_AddQuestLogEntry_default_instance_;
class CDOTAUserMsg_BeastChat;
class CDOTAUserMsg_BeastChatDefaultTypeInternal;
extern CDOTAUserMsg_BeastChatDefaultTypeInternal _CDOTAUserMsg_BeastChat_default_instance_;
class CDOTAUserMsg_BoosterState;
class CDOTAUserMsg_BoosterStateDefaultTypeInternal;
extern CDOTAUserMsg_BoosterStateDefaultTypeInternal _CDOTAUserMsg_BoosterState_default_instance_;
class CDOTAUserMsg_BoosterStatePlayer;
class CDOTAUserMsg_BoosterStatePlayerDefaultTypeInternal;
extern CDOTAUserMsg_BoosterStatePlayerDefaultTypeInternal _CDOTAUserMsg_BoosterStatePlayer_default_instance_;
class CDOTAUserMsg_BotChat;
class CDOTAUserMsg_BotChatDefaultTypeInternal;
extern CDOTAUserMsg_BotChatDefaultTypeInternal _CDOTAUserMsg_BotChat_default_instance_;
class CDOTAUserMsg_BuyBackStateAlert;
class CDOTAUserMsg_BuyBackStateAlertDefaultTypeInternal;
extern CDOTAUserMsg_BuyBackStateAlertDefaultTypeInternal _CDOTAUserMsg_BuyBackStateAlert_default_instance_;
class CDOTAUserMsg_ChatEvent;
class CDOTAUserMsg_ChatEventDefaultTypeInternal;
extern CDOTAUserMsg_ChatEventDefaultTypeInternal _CDOTAUserMsg_ChatEvent_default_instance_;
class CDOTAUserMsg_ChatWheel;
class CDOTAUserMsg_ChatWheelDefaultTypeInternal;
extern CDOTAUserMsg_ChatWheelDefaultTypeInternal _CDOTAUserMsg_ChatWheel_default_instance_;
class CDOTAUserMsg_ChatWheelCooldown;
class CDOTAUserMsg_ChatWheelCooldownDefaultTypeInternal;
extern CDOTAUserMsg_ChatWheelCooldownDefaultTypeInternal _CDOTAUserMsg_ChatWheelCooldown_default_instance_;
class CDOTAUserMsg_ClientLoadGridNav;
class CDOTAUserMsg_ClientLoadGridNavDefaultTypeInternal;
extern CDOTAUserMsg_ClientLoadGridNavDefaultTypeInternal _CDOTAUserMsg_ClientLoadGridNav_default_instance_;
class CDOTAUserMsg_CoachHUDPing;
class CDOTAUserMsg_CoachHUDPingDefaultTypeInternal;
extern CDOTAUserMsg_CoachHUDPingDefaultTypeInternal _CDOTAUserMsg_CoachHUDPing_default_instance_;
class CDOTAUserMsg_CombatHeroPositions;
class CDOTAUserMsg_CombatHeroPositionsDefaultTypeInternal;
extern CDOTAUserMsg_CombatHeroPositionsDefaultTypeInternal _CDOTAUserMsg_CombatHeroPositions_default_instance_;
class CDOTAUserMsg_CombatLogShowDeath;
class CDOTAUserMsg_CombatLogShowDeathDefaultTypeInternal;
extern CDOTAUserMsg_CombatLogShowDeathDefaultTypeInternal _CDOTAUserMsg_CombatLogShowDeath_default_instance_;
class CDOTAUserMsg_CompendiumState;
class CDOTAUserMsg_CompendiumStateDefaultTypeInternal;
extern CDOTAUserMsg_CompendiumStateDefaultTypeInternal _CDOTAUserMsg_CompendiumState_default_instance_;
class CDOTAUserMsg_CompendiumStatePlayer;
class CDOTAUserMsg_CompendiumStatePlayerDefaultTypeInternal;
extern CDOTAUserMsg_CompendiumStatePlayerDefaultTypeInternal _CDOTAUserMsg_CompendiumStatePlayer_default_instance_;
class CDOTAUserMsg_CourierKilledAlert;
class CDOTAUserMsg_CourierKilledAlertDefaultTypeInternal;
extern CDOTAUserMsg_CourierKilledAlertDefaultTypeInternal _CDOTAUserMsg_CourierKilledAlert_default_instance_;
class CDOTAUserMsg_CourierKilledAlert_LostItem;
class CDOTAUserMsg_CourierKilledAlert_LostItemDefaultTypeInternal;
extern CDOTAUserMsg_CourierKilledAlert_LostItemDefaultTypeInternal _CDOTAUserMsg_CourierKilledAlert_LostItem_default_instance_;
class CDOTAUserMsg_CreateLinearProjectile;
class CDOTAUserMsg_CreateLinearProjectileDefaultTypeInternal;
extern CDOTAUserMsg_CreateLinearProjectileDefaultTypeInternal _CDOTAUserMsg_CreateLinearProjectile_default_instance_;
class CDOTAUserMsg_CustomHeaderMessage;
class CDOTAUserMsg_CustomHeaderMessageDefaultTypeInternal;
extern CDOTAUserMsg_CustomHeaderMessageDefaultTypeInternal _CDOTAUserMsg_CustomHeaderMessage_default_instance_;
class CDOTAUserMsg_CustomHudElement_Create;
class CDOTAUserMsg_CustomHudElement_CreateDefaultTypeInternal;
extern CDOTAUserMsg_CustomHudElement_CreateDefaultTypeInternal _CDOTAUserMsg_CustomHudElement_Create_default_instance_;
class CDOTAUserMsg_CustomHudElement_Destroy;
class CDOTAUserMsg_CustomHudElement_DestroyDefaultTypeInternal;
extern CDOTAUserMsg_CustomHudElement_DestroyDefaultTypeInternal _CDOTAUserMsg_CustomHudElement_Destroy_default_instance_;
class CDOTAUserMsg_CustomHudElement_Modify;
class CDOTAUserMsg_CustomHudElement_ModifyDefaultTypeInternal;
extern CDOTAUserMsg_CustomHudElement_ModifyDefaultTypeInternal _CDOTAUserMsg_CustomHudElement_Modify_default_instance_;
class CDOTAUserMsg_CustomMsg;
class CDOTAUserMsg_CustomMsgDefaultTypeInternal;
extern CDOTAUserMsg_CustomMsgDefaultTypeInternal _CDOTAUserMsg_CustomMsg_default_instance_;
class CDOTAUserMsg_DestroyLinearProjectile;
class CDOTAUserMsg_DestroyLinearProjectileDefaultTypeInternal;
extern CDOTAUserMsg_DestroyLinearProjectileDefaultTypeInternal _CDOTAUserMsg_DestroyLinearProjectile_default_instance_;
class CDOTAUserMsg_DismissAllStatPopups;
class CDOTAUserMsg_DismissAllStatPopupsDefaultTypeInternal;
extern CDOTAUserMsg_DismissAllStatPopupsDefaultTypeInternal _CDOTAUserMsg_DismissAllStatPopups_default_instance_;
class CDOTAUserMsg_DodgeTrackingProjectiles;
class CDOTAUserMsg_DodgeTrackingProjectilesDefaultTypeInternal;
extern CDOTAUserMsg_DodgeTrackingProjectilesDefaultTypeInternal _CDOTAUserMsg_DodgeTrackingProjectiles_default_instance_;
class CDOTAUserMsg_EnemyItemAlert;
class CDOTAUserMsg_EnemyItemAlertDefaultTypeInternal;
extern CDOTAUserMsg_EnemyItemAlertDefaultTypeInternal _CDOTAUserMsg_EnemyItemAlert_default_instance_;
class CDOTAUserMsg_FlipCoinResult;
class CDOTAUserMsg_FlipCoinResultDefaultTypeInternal;
extern CDOTAUserMsg_FlipCoinResultDefaultTypeInternal _CDOTAUserMsg_FlipCoinResult_default_instance_;
class CDOTAUserMsg_GamerulesStateChanged;
class CDOTAUserMsg_GamerulesStateChangedDefaultTypeInternal;
extern CDOTAUserMsg_GamerulesStateChangedDefaultTypeInternal _CDOTAUserMsg_GamerulesStateChanged_default_instance_;
class CDOTAUserMsg_GlobalLightColor;
class CDOTAUserMsg_GlobalLightColorDefaultTypeInternal;
extern CDOTAUserMsg_GlobalLightColorDefaultTypeInternal _CDOTAUserMsg_GlobalLightColor_default_instance_;
class CDOTAUserMsg_GlobalLightDirection;
class CDOTAUserMsg_GlobalLightDirectionDefaultTypeInternal;
extern CDOTAUserMsg_GlobalLightDirectionDefaultTypeInternal _CDOTAUserMsg_GlobalLightDirection_default_instance_;
class CDOTAUserMsg_GlyphAlert;
class CDOTAUserMsg_GlyphAlertDefaultTypeInternal;
extern CDOTAUserMsg_GlyphAlertDefaultTypeInternal _CDOTAUserMsg_GlyphAlert_default_instance_;
class CDOTAUserMsg_HPManaAlert;
class CDOTAUserMsg_HPManaAlertDefaultTypeInternal;
extern CDOTAUserMsg_HPManaAlertDefaultTypeInternal _CDOTAUserMsg_HPManaAlert_default_instance_;
class CDOTAUserMsg_HalloweenDrops;
class CDOTAUserMsg_HalloweenDropsDefaultTypeInternal;
extern CDOTAUserMsg_HalloweenDropsDefaultTypeInternal _CDOTAUserMsg_HalloweenDrops_default_instance_;
class CDOTAUserMsg_HudError;
class CDOTAUserMsg_HudErrorDefaultTypeInternal;
extern CDOTAUserMsg_HudErrorDefaultTypeInternal _CDOTAUserMsg_HudError_default_instance_;
class CDOTAUserMsg_InvalidCommand;
class CDOTAUserMsg_InvalidCommandDefaultTypeInternal;
extern CDOTAUserMsg_InvalidCommandDefaultTypeInternal _CDOTAUserMsg_InvalidCommand_default_instance_;
class CDOTAUserMsg_ItemAlert;
class CDOTAUserMsg_ItemAlertDefaultTypeInternal;
extern CDOTAUserMsg_ItemAlertDefaultTypeInternal _CDOTAUserMsg_ItemAlert_default_instance_;
class CDOTAUserMsg_ItemFound;
class CDOTAUserMsg_ItemFoundDefaultTypeInternal;
extern CDOTAUserMsg_ItemFoundDefaultTypeInternal _CDOTAUserMsg_ItemFound_default_instance_;
class CDOTAUserMsg_ItemPurchased;
class CDOTAUserMsg_ItemPurchasedDefaultTypeInternal;
extern CDOTAUserMsg_ItemPurchasedDefaultTypeInternal _CDOTAUserMsg_ItemPurchased_default_instance_;
class CDOTAUserMsg_KillcamDamageTaken;
class CDOTAUserMsg_KillcamDamageTakenDefaultTypeInternal;
extern CDOTAUserMsg_KillcamDamageTakenDefaultTypeInternal _CDOTAUserMsg_KillcamDamageTaken_default_instance_;
class CDOTAUserMsg_LocationPing;
class CDOTAUserMsg_LocationPingDefaultTypeInternal;
extern CDOTAUserMsg_LocationPingDefaultTypeInternal _CDOTAUserMsg_LocationPing_default_instance_;
class CDOTAUserMsg_MapLine;
class CDOTAUserMsg_MapLineDefaultTypeInternal;
extern CDOTAUserMsg_MapLineDefaultTypeInternal _CDOTAUserMsg_MapLine_default_instance_;
class CDOTAUserMsg_MiniKillCamInfo;
class CDOTAUserMsg_MiniKillCamInfoDefaultTypeInternal;
extern CDOTAUserMsg_MiniKillCamInfoDefaultTypeInternal _CDOTAUserMsg_MiniKillCamInfo_default_instance_;
class CDOTAUserMsg_MiniKillCamInfo_Attacker;
class CDOTAUserMsg_MiniKillCamInfo_AttackerDefaultTypeInternal;
extern CDOTAUserMsg_MiniKillCamInfo_AttackerDefaultTypeInternal _CDOTAUserMsg_MiniKillCamInfo_Attacker_default_instance_;
class CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability;
class CDOTAUserMsg_MiniKillCamInfo_Attacker_AbilityDefaultTypeInternal;
extern CDOTAUserMsg_MiniKillCamInfo_Attacker_AbilityDefaultTypeInternal _CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_default_instance_;
class CDOTAUserMsg_MiniTaunt;
class CDOTAUserMsg_MiniTauntDefaultTypeInternal;
extern CDOTAUserMsg_MiniTauntDefaultTypeInternal _CDOTAUserMsg_MiniTaunt_default_instance_;
class CDOTAUserMsg_MinimapDebugPoint;
class CDOTAUserMsg_MinimapDebugPointDefaultTypeInternal;
extern CDOTAUserMsg_MinimapDebugPointDefaultTypeInternal _CDOTAUserMsg_MinimapDebugPoint_default_instance_;
class CDOTAUserMsg_MinimapEvent;
class CDOTAUserMsg_MinimapEventDefaultTypeInternal;
extern CDOTAUserMsg_MinimapEventDefaultTypeInternal _CDOTAUserMsg_MinimapEvent_default_instance_;
class CDOTAUserMsg_ModifierAlert;
class CDOTAUserMsg_ModifierAlertDefaultTypeInternal;
extern CDOTAUserMsg_ModifierAlertDefaultTypeInternal _CDOTAUserMsg_ModifierAlert_default_instance_;
class CDOTAUserMsg_NevermoreRequiem;
class CDOTAUserMsg_NevermoreRequiemDefaultTypeInternal;
extern CDOTAUserMsg_NevermoreRequiemDefaultTypeInternal _CDOTAUserMsg_NevermoreRequiem_default_instance_;
class CDOTAUserMsg_OverheadEvent;
class CDOTAUserMsg_OverheadEventDefaultTypeInternal;
extern CDOTAUserMsg_OverheadEventDefaultTypeInternal _CDOTAUserMsg_OverheadEvent_default_instance_;
class CDOTAUserMsg_ParticleManager;
class CDOTAUserMsg_ParticleManagerDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManagerDefaultTypeInternal _CDOTAUserMsg_ParticleManager_default_instance_;
class CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment;
class CDOTAUserMsg_ParticleManager_ChangeControlPointAttachmentDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_ChangeControlPointAttachmentDefaultTypeInternal _CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment_default_instance_;
class CDOTAUserMsg_ParticleManager_CreateParticle;
class CDOTAUserMsg_ParticleManager_CreateParticleDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_CreateParticleDefaultTypeInternal _CDOTAUserMsg_ParticleManager_CreateParticle_default_instance_;
class CDOTAUserMsg_ParticleManager_DestroyParticle;
class CDOTAUserMsg_ParticleManager_DestroyParticleDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_DestroyParticleDefaultTypeInternal _CDOTAUserMsg_ParticleManager_DestroyParticle_default_instance_;
class CDOTAUserMsg_ParticleManager_DestroyParticleInvolving;
class CDOTAUserMsg_ParticleManager_DestroyParticleInvolvingDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_DestroyParticleInvolvingDefaultTypeInternal _CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_default_instance_;
class CDOTAUserMsg_ParticleManager_ReleaseParticleIndex;
class CDOTAUserMsg_ParticleManager_ReleaseParticleIndexDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_ReleaseParticleIndexDefaultTypeInternal _CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_default_instance_;
class CDOTAUserMsg_ParticleManager_SetParticleFoWProperties;
class CDOTAUserMsg_ParticleManager_SetParticleFoWPropertiesDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_SetParticleFoWPropertiesDefaultTypeInternal _CDOTAUserMsg_ParticleManager_SetParticleFoWProperties_default_instance_;
class CDOTAUserMsg_ParticleManager_SetParticleText;
class CDOTAUserMsg_ParticleManager_SetParticleTextDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_SetParticleTextDefaultTypeInternal _CDOTAUserMsg_ParticleManager_SetParticleText_default_instance_;
class CDOTAUserMsg_ParticleManager_UpdateEntityPosition;
class CDOTAUserMsg_ParticleManager_UpdateEntityPositionDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_UpdateEntityPositionDefaultTypeInternal _CDOTAUserMsg_ParticleManager_UpdateEntityPosition_default_instance_;
class CDOTAUserMsg_ParticleManager_UpdateParticle;
class CDOTAUserMsg_ParticleManager_UpdateParticleDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_UpdateParticleDefaultTypeInternal _CDOTAUserMsg_ParticleManager_UpdateParticle_default_instance_;
class CDOTAUserMsg_ParticleManager_UpdateParticleEnt;
class CDOTAUserMsg_ParticleManager_UpdateParticleEntDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_UpdateParticleEntDefaultTypeInternal _CDOTAUserMsg_ParticleManager_UpdateParticleEnt_default_instance_;
class CDOTAUserMsg_ParticleManager_UpdateParticleFallback;
class CDOTAUserMsg_ParticleManager_UpdateParticleFallbackDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_UpdateParticleFallbackDefaultTypeInternal _CDOTAUserMsg_ParticleManager_UpdateParticleFallback_default_instance_;
class CDOTAUserMsg_ParticleManager_UpdateParticleFwd;
class CDOTAUserMsg_ParticleManager_UpdateParticleFwdDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_UpdateParticleFwdDefaultTypeInternal _CDOTAUserMsg_ParticleManager_UpdateParticleFwd_default_instance_;
class CDOTAUserMsg_ParticleManager_UpdateParticleOffset;
class CDOTAUserMsg_ParticleManager_UpdateParticleOffsetDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_UpdateParticleOffsetDefaultTypeInternal _CDOTAUserMsg_ParticleManager_UpdateParticleOffset_default_instance_;
class CDOTAUserMsg_ParticleManager_UpdateParticleOrient;
class CDOTAUserMsg_ParticleManager_UpdateParticleOrientDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_UpdateParticleOrientDefaultTypeInternal _CDOTAUserMsg_ParticleManager_UpdateParticleOrient_default_instance_;
class CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen;
class CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozenDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozenDefaultTypeInternal _CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_default_instance_;
class CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw;
class CDOTAUserMsg_ParticleManager_UpdateParticleShouldDrawDefaultTypeInternal;
extern CDOTAUserMsg_ParticleManager_UpdateParticleShouldDrawDefaultTypeInternal _CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_default_instance_;
class CDOTAUserMsg_Ping;
class CDOTAUserMsg_PingDefaultTypeInternal;
extern CDOTAUserMsg_PingDefaultTypeInternal _CDOTAUserMsg_Ping_default_instance_;
class CDOTAUserMsg_PlayerMMR;
class CDOTAUserMsg_PlayerMMRDefaultTypeInternal;
extern CDOTAUserMsg_PlayerMMRDefaultTypeInternal _CDOTAUserMsg_PlayerMMR_default_instance_;
class CDOTAUserMsg_PredictionResult;
class CDOTAUserMsg_PredictionResultDefaultTypeInternal;
extern CDOTAUserMsg_PredictionResultDefaultTypeInternal _CDOTAUserMsg_PredictionResult_default_instance_;
class CDOTAUserMsg_PredictionResult_Prediction;
class CDOTAUserMsg_PredictionResult_PredictionDefaultTypeInternal;
extern CDOTAUserMsg_PredictionResult_PredictionDefaultTypeInternal _CDOTAUserMsg_PredictionResult_Prediction_default_instance_;
class CDOTAUserMsg_ProjectionAbility;
class CDOTAUserMsg_ProjectionAbilityDefaultTypeInternal;
extern CDOTAUserMsg_ProjectionAbilityDefaultTypeInternal _CDOTAUserMsg_ProjectionAbility_default_instance_;
class CDOTAUserMsg_ProjectionEvent;
class CDOTAUserMsg_ProjectionEventDefaultTypeInternal;
extern CDOTAUserMsg_ProjectionEventDefaultTypeInternal _CDOTAUserMsg_ProjectionEvent_default_instance_;
class CDOTAUserMsg_QuestStatus;
class CDOTAUserMsg_QuestStatusDefaultTypeInternal;
extern CDOTAUserMsg_QuestStatusDefaultTypeInternal _CDOTAUserMsg_QuestStatus_default_instance_;
class CDOTAUserMsg_QuickBuyAlert;
class CDOTAUserMsg_QuickBuyAlertDefaultTypeInternal;
extern CDOTAUserMsg_QuickBuyAlertDefaultTypeInternal _CDOTAUserMsg_QuickBuyAlert_default_instance_;
class CDOTAUserMsg_ReceivedXmasGift;
class CDOTAUserMsg_ReceivedXmasGiftDefaultTypeInternal;
extern CDOTAUserMsg_ReceivedXmasGiftDefaultTypeInternal _CDOTAUserMsg_ReceivedXmasGift_default_instance_;
class CDOTAUserMsg_RollDiceResult;
class CDOTAUserMsg_RollDiceResultDefaultTypeInternal;
extern CDOTAUserMsg_RollDiceResultDefaultTypeInternal _CDOTAUserMsg_RollDiceResult_default_instance_;
class CDOTAUserMsg_SelectPenaltyGold;
class CDOTAUserMsg_SelectPenaltyGoldDefaultTypeInternal;
extern CDOTAUserMsg_SelectPenaltyGoldDefaultTypeInternal _CDOTAUserMsg_SelectPenaltyGold_default_instance_;
class CDOTAUserMsg_SendFinalGold;
class CDOTAUserMsg_SendFinalGoldDefaultTypeInternal;
extern CDOTAUserMsg_SendFinalGoldDefaultTypeInternal _CDOTAUserMsg_SendFinalGold_default_instance_;
class CDOTAUserMsg_SendGenericToolTip;
class CDOTAUserMsg_SendGenericToolTipDefaultTypeInternal;
extern CDOTAUserMsg_SendGenericToolTipDefaultTypeInternal _CDOTAUserMsg_SendGenericToolTip_default_instance_;
class CDOTAUserMsg_SendRoshanPopup;
class CDOTAUserMsg_SendRoshanPopupDefaultTypeInternal;
extern CDOTAUserMsg_SendRoshanPopupDefaultTypeInternal _CDOTAUserMsg_SendRoshanPopup_default_instance_;
class CDOTAUserMsg_SendRoshanSpectatorPhase;
class CDOTAUserMsg_SendRoshanSpectatorPhaseDefaultTypeInternal;
extern CDOTAUserMsg_SendRoshanSpectatorPhaseDefaultTypeInternal _CDOTAUserMsg_SendRoshanSpectatorPhase_default_instance_;
class CDOTAUserMsg_SendStatPopup;
class CDOTAUserMsg_SendStatPopupDefaultTypeInternal;
extern CDOTAUserMsg_SendStatPopupDefaultTypeInternal _CDOTAUserMsg_SendStatPopup_default_instance_;
class CDOTAUserMsg_SetNextAutobuyItem;
class CDOTAUserMsg_SetNextAutobuyItemDefaultTypeInternal;
extern CDOTAUserMsg_SetNextAutobuyItemDefaultTypeInternal _CDOTAUserMsg_SetNextAutobuyItem_default_instance_;
class CDOTAUserMsg_SharedCooldown;
class CDOTAUserMsg_SharedCooldownDefaultTypeInternal;
extern CDOTAUserMsg_SharedCooldownDefaultTypeInternal _CDOTAUserMsg_SharedCooldown_default_instance_;
class CDOTAUserMsg_ShowGenericPopup;
class CDOTAUserMsg_ShowGenericPopupDefaultTypeInternal;
extern CDOTAUserMsg_ShowGenericPopupDefaultTypeInternal _CDOTAUserMsg_ShowGenericPopup_default_instance_;
class CDOTAUserMsg_ShowSurvey;
class CDOTAUserMsg_ShowSurveyDefaultTypeInternal;
extern CDOTAUserMsg_ShowSurveyDefaultTypeInternal _CDOTAUserMsg_ShowSurvey_default_instance_;
class CDOTAUserMsg_SpectatorPlayerClick;
class CDOTAUserMsg_SpectatorPlayerClickDefaultTypeInternal;
extern CDOTAUserMsg_SpectatorPlayerClickDefaultTypeInternal _CDOTAUserMsg_SpectatorPlayerClick_default_instance_;
class CDOTAUserMsg_SpectatorPlayerUnitOrders;
class CDOTAUserMsg_SpectatorPlayerUnitOrdersDefaultTypeInternal;
extern CDOTAUserMsg_SpectatorPlayerUnitOrdersDefaultTypeInternal _CDOTAUserMsg_SpectatorPlayerUnitOrders_default_instance_;
class CDOTAUserMsg_SpeechBubble;
class CDOTAUserMsg_SpeechBubbleDefaultTypeInternal;
extern CDOTAUserMsg_SpeechBubbleDefaultTypeInternal _CDOTAUserMsg_SpeechBubble_default_instance_;
class CDOTAUserMsg_StatsHeroLookup;
class CDOTAUserMsg_StatsHeroLookupDefaultTypeInternal;
extern CDOTAUserMsg_StatsHeroLookupDefaultTypeInternal _CDOTAUserMsg_StatsHeroLookup_default_instance_;
class CDOTAUserMsg_StatsHeroMinuteDetails;
class CDOTAUserMsg_StatsHeroMinuteDetailsDefaultTypeInternal;
extern CDOTAUserMsg_StatsHeroMinuteDetailsDefaultTypeInternal _CDOTAUserMsg_StatsHeroMinuteDetails_default_instance_;
class CDOTAUserMsg_StatsHeroPositionInfo;
class CDOTAUserMsg_StatsHeroPositionInfoDefaultTypeInternal;
extern CDOTAUserMsg_StatsHeroPositionInfoDefaultTypeInternal _CDOTAUserMsg_StatsHeroPositionInfo_default_instance_;
class CDOTAUserMsg_StatsHeroPositionInfo_PositionPair;
class CDOTAUserMsg_StatsHeroPositionInfo_PositionPairDefaultTypeInternal;
extern CDOTAUserMsg_StatsHeroPositionInfo_PositionPairDefaultTypeInternal _CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_default_instance_;
class CDOTAUserMsg_StatsKillDetails;
class CDOTAUserMsg_StatsKillDetailsDefaultTypeInternal;
extern CDOTAUserMsg_StatsKillDetailsDefaultTypeInternal _CDOTAUserMsg_StatsKillDetails_default_instance_;
class CDOTAUserMsg_StatsMatchDetails;
class CDOTAUserMsg_StatsMatchDetailsDefaultTypeInternal;
extern CDOTAUserMsg_StatsMatchDetailsDefaultTypeInternal _CDOTAUserMsg_StatsMatchDetails_default_instance_;
class CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails;
class CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetailsDefaultTypeInternal;
extern CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetailsDefaultTypeInternal _CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_default_instance_;
class CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails;
class CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetailsDefaultTypeInternal;
extern CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetailsDefaultTypeInternal _CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_default_instance_;
class CDOTAUserMsg_StatsPlayerKillShare;
class CDOTAUserMsg_StatsPlayerKillShareDefaultTypeInternal;
extern CDOTAUserMsg_StatsPlayerKillShareDefaultTypeInternal _CDOTAUserMsg_StatsPlayerKillShare_default_instance_;
class CDOTAUserMsg_StatsTeamMinuteDetails;
class CDOTAUserMsg_StatsTeamMinuteDetailsDefaultTypeInternal;
extern CDOTAUserMsg_StatsTeamMinuteDetailsDefaultTypeInternal _CDOTAUserMsg_StatsTeamMinuteDetails_default_instance_;
class CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance;
class CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformanceDefaultTypeInternal;
extern CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformanceDefaultTypeInternal _CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_default_instance_;
class CDOTAUserMsg_SuggestHeroPick;
class CDOTAUserMsg_SuggestHeroPickDefaultTypeInternal;
extern CDOTAUserMsg_SuggestHeroPickDefaultTypeInternal _CDOTAUserMsg_SuggestHeroPick_default_instance_;
class CDOTAUserMsg_SuggestHeroRole;
class CDOTAUserMsg_SuggestHeroRoleDefaultTypeInternal;
extern CDOTAUserMsg_SuggestHeroRoleDefaultTypeInternal _CDOTAUserMsg_SuggestHeroRole_default_instance_;
class CDOTAUserMsg_SwapVerify;
class CDOTAUserMsg_SwapVerifyDefaultTypeInternal;
extern CDOTAUserMsg_SwapVerifyDefaultTypeInternal _CDOTAUserMsg_SwapVerify_default_instance_;
class CDOTAUserMsg_TE_DotaBloodImpact;
class CDOTAUserMsg_TE_DotaBloodImpactDefaultTypeInternal;
extern CDOTAUserMsg_TE_DotaBloodImpactDefaultTypeInternal _CDOTAUserMsg_TE_DotaBloodImpact_default_instance_;
class CDOTAUserMsg_TE_Projectile;
class CDOTAUserMsg_TE_ProjectileDefaultTypeInternal;
extern CDOTAUserMsg_TE_ProjectileDefaultTypeInternal _CDOTAUserMsg_TE_Projectile_default_instance_;
class CDOTAUserMsg_TE_ProjectileLoc;
class CDOTAUserMsg_TE_ProjectileLocDefaultTypeInternal;
extern CDOTAUserMsg_TE_ProjectileLocDefaultTypeInternal _CDOTAUserMsg_TE_ProjectileLoc_default_instance_;
class CDOTAUserMsg_TE_UnitAnimation;
class CDOTAUserMsg_TE_UnitAnimationDefaultTypeInternal;
extern CDOTAUserMsg_TE_UnitAnimationDefaultTypeInternal _CDOTAUserMsg_TE_UnitAnimation_default_instance_;
class CDOTAUserMsg_TE_UnitAnimationEnd;
class CDOTAUserMsg_TE_UnitAnimationEndDefaultTypeInternal;
extern CDOTAUserMsg_TE_UnitAnimationEndDefaultTypeInternal _CDOTAUserMsg_TE_UnitAnimationEnd_default_instance_;
class CDOTAUserMsg_TutorialFade;
class CDOTAUserMsg_TutorialFadeDefaultTypeInternal;
extern CDOTAUserMsg_TutorialFadeDefaultTypeInternal _CDOTAUserMsg_TutorialFade_default_instance_;
class CDOTAUserMsg_TutorialFinish;
class CDOTAUserMsg_TutorialFinishDefaultTypeInternal;
extern CDOTAUserMsg_TutorialFinishDefaultTypeInternal _CDOTAUserMsg_TutorialFinish_default_instance_;
class CDOTAUserMsg_TutorialMinimapPosition;
class CDOTAUserMsg_TutorialMinimapPositionDefaultTypeInternal;
extern CDOTAUserMsg_TutorialMinimapPositionDefaultTypeInternal _CDOTAUserMsg_TutorialMinimapPosition_default_instance_;
class CDOTAUserMsg_TutorialPingMinimap;
class CDOTAUserMsg_TutorialPingMinimapDefaultTypeInternal;
extern CDOTAUserMsg_TutorialPingMinimapDefaultTypeInternal _CDOTAUserMsg_TutorialPingMinimap_default_instance_;
class CDOTAUserMsg_TutorialRequestExp;
class CDOTAUserMsg_TutorialRequestExpDefaultTypeInternal;
extern CDOTAUserMsg_TutorialRequestExpDefaultTypeInternal _CDOTAUserMsg_TutorialRequestExp_default_instance_;
class CDOTAUserMsg_TutorialTipInfo;
class CDOTAUserMsg_TutorialTipInfoDefaultTypeInternal;
extern CDOTAUserMsg_TutorialTipInfoDefaultTypeInternal _CDOTAUserMsg_TutorialTipInfo_default_instance_;
class CDOTAUserMsg_UnitEvent;
class CDOTAUserMsg_UnitEventDefaultTypeInternal;
extern CDOTAUserMsg_UnitEventDefaultTypeInternal _CDOTAUserMsg_UnitEvent_default_instance_;
class CDOTAUserMsg_UnitEvent_AddGesture;
class CDOTAUserMsg_UnitEvent_AddGestureDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_AddGestureDefaultTypeInternal _CDOTAUserMsg_UnitEvent_AddGesture_default_instance_;
class CDOTAUserMsg_UnitEvent_BloodImpact;
class CDOTAUserMsg_UnitEvent_BloodImpactDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_BloodImpactDefaultTypeInternal _CDOTAUserMsg_UnitEvent_BloodImpact_default_instance_;
class CDOTAUserMsg_UnitEvent_FadeGesture;
class CDOTAUserMsg_UnitEvent_FadeGestureDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_FadeGestureDefaultTypeInternal _CDOTAUserMsg_UnitEvent_FadeGesture_default_instance_;
class CDOTAUserMsg_UnitEvent_RemoveGesture;
class CDOTAUserMsg_UnitEvent_RemoveGestureDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_RemoveGestureDefaultTypeInternal _CDOTAUserMsg_UnitEvent_RemoveGesture_default_instance_;
class CDOTAUserMsg_UnitEvent_Speech;
class CDOTAUserMsg_UnitEvent_SpeechDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_SpeechDefaultTypeInternal _CDOTAUserMsg_UnitEvent_Speech_default_instance_;
class CDOTAUserMsg_UnitEvent_SpeechMute;
class CDOTAUserMsg_UnitEvent_SpeechMuteDefaultTypeInternal;
extern CDOTAUserMsg_UnitEvent_SpeechMuteDefaultTypeInternal _CDOTAUserMsg_UnitEvent_SpeechMute_default_instance_;
class CDOTAUserMsg_UpdateQuestProgress;
class CDOTAUserMsg_UpdateQuestProgressDefaultTypeInternal;
extern CDOTAUserMsg_UpdateQuestProgressDefaultTypeInternal _CDOTAUserMsg_UpdateQuestProgress_default_instance_;
class CDOTAUserMsg_UpdateSharedContent;
class CDOTAUserMsg_UpdateSharedContentDefaultTypeInternal;
extern CDOTAUserMsg_UpdateSharedContentDefaultTypeInternal _CDOTAUserMsg_UpdateSharedContent_default_instance_;
class CDOTAUserMsg_VoteEnd;
class CDOTAUserMsg_VoteEndDefaultTypeInternal;
extern CDOTAUserMsg_VoteEndDefaultTypeInternal _CDOTAUserMsg_VoteEnd_default_instance_;
class CDOTAUserMsg_VoteStart;
class CDOTAUserMsg_VoteStartDefaultTypeInternal;
extern CDOTAUserMsg_VoteStartDefaultTypeInternal _CDOTAUserMsg_VoteStart_default_instance_;
class CDOTAUserMsg_VoteUpdate;
class CDOTAUserMsg_VoteUpdateDefaultTypeInternal;
extern CDOTAUserMsg_VoteUpdateDefaultTypeInternal _CDOTAUserMsg_VoteUpdate_default_instance_;
class CDOTAUserMsg_WillPurchaseAlert;
class CDOTAUserMsg_WillPurchaseAlertDefaultTypeInternal;
extern CDOTAUserMsg_WillPurchaseAlertDefaultTypeInternal _CDOTAUserMsg_WillPurchaseAlert_default_instance_;
class CDOTAUserMsg_WorldLine;
class CDOTAUserMsg_WorldLineDefaultTypeInternal;
extern CDOTAUserMsg_WorldLineDefaultTypeInternal _CDOTAUserMsg_WorldLine_default_instance_;
class CDOTAUserMsg_XPAlert;
class CDOTAUserMsg_XPAlertDefaultTypeInternal;
extern CDOTAUserMsg_XPAlertDefaultTypeInternal _CDOTAUserMsg_XPAlert_default_instance_;
class CMsgCombatAnalyzerPlayerStat;
class CMsgCombatAnalyzerPlayerStatDefaultTypeInternal;
extern CMsgCombatAnalyzerPlayerStatDefaultTypeInternal _CMsgCombatAnalyzerPlayerStat_default_instance_;
class CMsgCombatAnalyzerStats;
class CMsgCombatAnalyzerStatsDefaultTypeInternal;
extern CMsgCombatAnalyzerStatsDefaultTypeInternal _CMsgCombatAnalyzerStats_default_instance_;
class CMsgHeroAbilityStat;
class CMsgHeroAbilityStatDefaultTypeInternal;
extern CMsgHeroAbilityStatDefaultTypeInternal _CMsgHeroAbilityStat_default_instance_;
class CMsgPlayerInfo;
class CMsgPlayerInfoDefaultTypeInternal;
extern CMsgPlayerInfoDefaultTypeInternal _CMsgPlayerInfo_default_instance_;
class CMsgQAngle;
class CMsgQAngleDefaultTypeInternal;
extern CMsgQAngleDefaultTypeInternal _CMsgQAngle_default_instance_;
class CMsgVector;
class CMsgVectorDefaultTypeInternal;
extern CMsgVectorDefaultTypeInternal _CMsgVector_default_instance_;
class CMsgVector2D;
class CMsgVector2DDefaultTypeInternal;
extern CMsgVector2DDefaultTypeInternal _CMsgVector2D_default_instance_;
class CMsg_CVars;
class CMsg_CVarsDefaultTypeInternal;
extern CMsg_CVarsDefaultTypeInternal _CMsg_CVars_default_instance_;
class CMsg_CVars_CVar;
class CMsg_CVars_CVarDefaultTypeInternal;
extern CMsg_CVars_CVarDefaultTypeInternal _CMsg_CVars_CVar_default_instance_;
class CNETMsg_Disconnect;
class CNETMsg_DisconnectDefaultTypeInternal;
extern CNETMsg_DisconnectDefaultTypeInternal _CNETMsg_Disconnect_default_instance_;
class CNETMsg_NOP;
class CNETMsg_NOPDefaultTypeInternal;
extern CNETMsg_NOPDefaultTypeInternal _CNETMsg_NOP_default_instance_;
class CNETMsg_SetConVar;
class CNETMsg_SetConVarDefaultTypeInternal;
extern CNETMsg_SetConVarDefaultTypeInternal _CNETMsg_SetConVar_default_instance_;
class CNETMsg_SignonState;
class CNETMsg_SignonStateDefaultTypeInternal;
extern CNETMsg_SignonStateDefaultTypeInternal _CNETMsg_SignonState_default_instance_;
class CNETMsg_SpawnGroup_Load;
class CNETMsg_SpawnGroup_LoadDefaultTypeInternal;
extern CNETMsg_SpawnGroup_LoadDefaultTypeInternal _CNETMsg_SpawnGroup_Load_default_instance_;
class CNETMsg_SpawnGroup_LoadCompleted;
class CNETMsg_SpawnGroup_LoadCompletedDefaultTypeInternal;
extern CNETMsg_SpawnGroup_LoadCompletedDefaultTypeInternal _CNETMsg_SpawnGroup_LoadCompleted_default_instance_;
class CNETMsg_SpawnGroup_ManifestUpdate;
class CNETMsg_SpawnGroup_ManifestUpdateDefaultTypeInternal;
extern CNETMsg_SpawnGroup_ManifestUpdateDefaultTypeInternal _CNETMsg_SpawnGroup_ManifestUpdate_default_instance_;
class CNETMsg_SpawnGroup_SetCreationTick;
class CNETMsg_SpawnGroup_SetCreationTickDefaultTypeInternal;
extern CNETMsg_SpawnGroup_SetCreationTickDefaultTypeInternal _CNETMsg_SpawnGroup_SetCreationTick_default_instance_;
class CNETMsg_SpawnGroup_Unload;
class CNETMsg_SpawnGroup_UnloadDefaultTypeInternal;
extern CNETMsg_SpawnGroup_UnloadDefaultTypeInternal _CNETMsg_SpawnGroup_Unload_default_instance_;
class CNETMsg_SplitScreenUser;
class CNETMsg_SplitScreenUserDefaultTypeInternal;
extern CNETMsg_SplitScreenUserDefaultTypeInternal _CNETMsg_SplitScreenUser_default_instance_;
class CNETMsg_StringCmd;
class CNETMsg_StringCmdDefaultTypeInternal;
extern CNETMsg_StringCmdDefaultTypeInternal _CNETMsg_StringCmd_default_instance_;
class CNETMsg_Tick;
class CNETMsg_TickDefaultTypeInternal;
extern CNETMsg_TickDefaultTypeInternal _CNETMsg_Tick_default_instance_;
class CSVCMsgList_GameEvents;
class CSVCMsgList_GameEventsDefaultTypeInternal;
extern CSVCMsgList_GameEventsDefaultTypeInternal _CSVCMsgList_GameEvents_default_instance_;
class CSVCMsgList_GameEvents_event_t;
class CSVCMsgList_GameEvents_event_tDefaultTypeInternal;
extern CSVCMsgList_GameEvents_event_tDefaultTypeInternal _CSVCMsgList_GameEvents_event_t_default_instance_;
class CSVCMsgList_UserMessages;
class CSVCMsgList_UserMessagesDefaultTypeInternal;
extern CSVCMsgList_UserMessagesDefaultTypeInternal _CSVCMsgList_UserMessages_default_instance_;
class CSVCMsgList_UserMessages_usermsg_t;
class CSVCMsgList_UserMessages_usermsg_tDefaultTypeInternal;
extern CSVCMsgList_UserMessages_usermsg_tDefaultTypeInternal _CSVCMsgList_UserMessages_usermsg_t_default_instance_;
class CSVCMsg_GameEvent;
class CSVCMsg_GameEventDefaultTypeInternal;
extern CSVCMsg_GameEventDefaultTypeInternal _CSVCMsg_GameEvent_default_instance_;
class CSVCMsg_GameEvent_key_t;
class CSVCMsg_GameEvent_key_tDefaultTypeInternal;
extern CSVCMsg_GameEvent_key_tDefaultTypeInternal _CSVCMsg_GameEvent_key_t_default_instance_;
class CSVCMsg_GameSessionConfiguration;
class CSVCMsg_GameSessionConfigurationDefaultTypeInternal;
extern CSVCMsg_GameSessionConfigurationDefaultTypeInternal _CSVCMsg_GameSessionConfiguration_default_instance_;
class CSVCMsg_UserMessage;
class CSVCMsg_UserMessageDefaultTypeInternal;
extern CSVCMsg_UserMessageDefaultTypeInternal _CSVCMsg_UserMessage_default_instance_;
}  // namespace dota
}  // namespace proto

namespace proto {
namespace dota {

namespace protobuf_dota_5fusermessages_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_dota_5fusermessages_2eproto

enum CDOTAUserMsg_PredictionResult_Prediction_EResult {
  CDOTAUserMsg_PredictionResult_Prediction_EResult_k_eResult_ItemGranted = 1,
  CDOTAUserMsg_PredictionResult_Prediction_EResult_k_eResult_Destroyed = 2
};
bool CDOTAUserMsg_PredictionResult_Prediction_EResult_IsValid(int value);
const CDOTAUserMsg_PredictionResult_Prediction_EResult CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_MIN = CDOTAUserMsg_PredictionResult_Prediction_EResult_k_eResult_ItemGranted;
const CDOTAUserMsg_PredictionResult_Prediction_EResult CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_MAX = CDOTAUserMsg_PredictionResult_Prediction_EResult_k_eResult_Destroyed;
const int CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_ARRAYSIZE = CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CDOTAUserMsg_PredictionResult_Prediction_EResult_descriptor();
inline const ::std::string& CDOTAUserMsg_PredictionResult_Prediction_EResult_Name(CDOTAUserMsg_PredictionResult_Prediction_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CDOTAUserMsg_PredictionResult_Prediction_EResult_descriptor(), value);
}
inline bool CDOTAUserMsg_PredictionResult_Prediction_EResult_Parse(
    const ::std::string& name, CDOTAUserMsg_PredictionResult_Prediction_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CDOTAUserMsg_PredictionResult_Prediction_EResult>(
    CDOTAUserMsg_PredictionResult_Prediction_EResult_descriptor(), name, value);
}
enum CDOTAResponseQuerySerialized_Fact_ValueType {
  CDOTAResponseQuerySerialized_Fact_ValueType_NUMERIC = 1,
  CDOTAResponseQuerySerialized_Fact_ValueType_STRING = 2
};
bool CDOTAResponseQuerySerialized_Fact_ValueType_IsValid(int value);
const CDOTAResponseQuerySerialized_Fact_ValueType CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_MIN = CDOTAResponseQuerySerialized_Fact_ValueType_NUMERIC;
const CDOTAResponseQuerySerialized_Fact_ValueType CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_MAX = CDOTAResponseQuerySerialized_Fact_ValueType_STRING;
const int CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_ARRAYSIZE = CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CDOTAResponseQuerySerialized_Fact_ValueType_descriptor();
inline const ::std::string& CDOTAResponseQuerySerialized_Fact_ValueType_Name(CDOTAResponseQuerySerialized_Fact_ValueType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CDOTAResponseQuerySerialized_Fact_ValueType_descriptor(), value);
}
inline bool CDOTAResponseQuerySerialized_Fact_ValueType_Parse(
    const ::std::string& name, CDOTAResponseQuerySerialized_Fact_ValueType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CDOTAResponseQuerySerialized_Fact_ValueType>(
    CDOTAResponseQuerySerialized_Fact_ValueType_descriptor(), name, value);
}
enum EDotaUserMessages {
  DOTA_UM_AddUnitToSelection = 464,
  DOTA_UM_AIDebugLine = 465,
  DOTA_UM_ChatEvent = 466,
  DOTA_UM_CombatHeroPositions = 467,
  DOTA_UM_CombatLogData = 468,
  DOTA_UM_CombatLogShowDeath = 470,
  DOTA_UM_CreateLinearProjectile = 471,
  DOTA_UM_DestroyLinearProjectile = 472,
  DOTA_UM_DodgeTrackingProjectiles = 473,
  DOTA_UM_GlobalLightColor = 474,
  DOTA_UM_GlobalLightDirection = 475,
  DOTA_UM_InvalidCommand = 476,
  DOTA_UM_LocationPing = 477,
  DOTA_UM_MapLine = 478,
  DOTA_UM_MiniKillCamInfo = 479,
  DOTA_UM_MinimapDebugPoint = 480,
  DOTA_UM_MinimapEvent = 481,
  DOTA_UM_NevermoreRequiem = 482,
  DOTA_UM_OverheadEvent = 483,
  DOTA_UM_SetNextAutobuyItem = 484,
  DOTA_UM_SharedCooldown = 485,
  DOTA_UM_SpectatorPlayerClick = 486,
  DOTA_UM_TutorialTipInfo = 487,
  DOTA_UM_UnitEvent = 488,
  DOTA_UM_ParticleManager = 489,
  DOTA_UM_BotChat = 490,
  DOTA_UM_HudError = 491,
  DOTA_UM_ItemPurchased = 492,
  DOTA_UM_Ping = 493,
  DOTA_UM_ItemFound = 494,
  DOTA_UM_CharacterSpeakConcept = 495,
  DOTA_UM_SwapVerify = 496,
  DOTA_UM_WorldLine = 497,
  DOTA_UM_TournamentDrop = 498,
  DOTA_UM_ItemAlert = 499,
  DOTA_UM_HalloweenDrops = 500,
  DOTA_UM_ChatWheel = 501,
  DOTA_UM_ReceivedXmasGift = 502,
  DOTA_UM_UpdateSharedContent = 503,
  DOTA_UM_TutorialRequestExp = 504,
  DOTA_UM_TutorialPingMinimap = 505,
  DOTA_UM_GamerulesStateChanged = 506,
  DOTA_UM_ShowSurvey = 507,
  DOTA_UM_TutorialFade = 508,
  DOTA_UM_AddQuestLogEntry = 509,
  DOTA_UM_SendStatPopup = 510,
  DOTA_UM_TutorialFinish = 511,
  DOTA_UM_SendRoshanPopup = 512,
  DOTA_UM_SendGenericToolTip = 513,
  DOTA_UM_SendFinalGold = 514,
  DOTA_UM_CustomMsg = 515,
  DOTA_UM_CoachHUDPing = 516,
  DOTA_UM_ClientLoadGridNav = 517,
  DOTA_UM_TE_Projectile = 518,
  DOTA_UM_TE_ProjectileLoc = 519,
  DOTA_UM_TE_DotaBloodImpact = 520,
  DOTA_UM_TE_UnitAnimation = 521,
  DOTA_UM_TE_UnitAnimationEnd = 522,
  DOTA_UM_AbilityPing = 523,
  DOTA_UM_ShowGenericPopup = 524,
  DOTA_UM_VoteStart = 525,
  DOTA_UM_VoteUpdate = 526,
  DOTA_UM_VoteEnd = 527,
  DOTA_UM_BoosterState = 528,
  DOTA_UM_WillPurchaseAlert = 529,
  DOTA_UM_TutorialMinimapPosition = 530,
  DOTA_UM_PlayerMMR = 531,
  DOTA_UM_AbilitySteal = 532,
  DOTA_UM_CourierKilledAlert = 533,
  DOTA_UM_EnemyItemAlert = 534,
  DOTA_UM_StatsMatchDetails = 535,
  DOTA_UM_MiniTaunt = 536,
  DOTA_UM_BuyBackStateAlert = 537,
  DOTA_UM_SpeechBubble = 538,
  DOTA_UM_CustomHeaderMessage = 539,
  DOTA_UM_QuickBuyAlert = 540,
  DOTA_UM_StatsHeroDetails = 541,
  DOTA_UM_PredictionResult = 542,
  DOTA_UM_ModifierAlert = 543,
  DOTA_UM_HPManaAlert = 544,
  DOTA_UM_GlyphAlert = 545,
  DOTA_UM_BeastChat = 546,
  DOTA_UM_SpectatorPlayerUnitOrders = 547,
  DOTA_UM_CustomHudElement_Create = 548,
  DOTA_UM_CustomHudElement_Modify = 549,
  DOTA_UM_CustomHudElement_Destroy = 550,
  DOTA_UM_CompendiumState = 551,
  DOTA_UM_ProjectionAbility = 552,
  DOTA_UM_ProjectionEvent = 553,
  DOTA_UM_CombatLogDataHLTV = 554,
  DOTA_UM_XPAlert = 555,
  DOTA_UM_UpdateQuestProgress = 556,
  DOTA_UM_MatchMetadata = 557,
  DOTA_UM_MatchDetails = 558,
  DOTA_UM_QuestStatus = 559,
  DOTA_UM_SuggestHeroPick = 560,
  DOTA_UM_SuggestHeroRole = 561,
  DOTA_UM_KillcamDamageTaken = 562,
  DOTA_UM_SelectPenaltyGold = 563,
  DOTA_UM_RollDiceResult = 564,
  DOTA_UM_FlipCoinResult = 565,
  DOTA_UM_RequestItemSuggestions = 566,
  DOTA_UM_TeamCaptainChanged = 567,
  DOTA_UM_SendRoshanSpectatorPhase = 568,
  DOTA_UM_ChatWheelCooldown = 569,
  DOTA_UM_DismissAllStatPopups = 570
};
bool EDotaUserMessages_IsValid(int value);
const EDotaUserMessages EDotaUserMessages_MIN = DOTA_UM_AddUnitToSelection;
const EDotaUserMessages EDotaUserMessages_MAX = DOTA_UM_DismissAllStatPopups;
const int EDotaUserMessages_ARRAYSIZE = EDotaUserMessages_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDotaUserMessages_descriptor();
inline const ::std::string& EDotaUserMessages_Name(EDotaUserMessages value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDotaUserMessages_descriptor(), value);
}
inline bool EDotaUserMessages_Parse(
    const ::std::string& name, EDotaUserMessages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDotaUserMessages>(
    EDotaUserMessages_descriptor(), name, value);
}
enum DOTA_CHAT_MESSAGE {
  CHAT_MESSAGE_INVALID = -1,
  CHAT_MESSAGE_HERO_KILL = 0,
  CHAT_MESSAGE_HERO_DENY = 1,
  CHAT_MESSAGE_BARRACKS_KILL = 2,
  CHAT_MESSAGE_TOWER_KILL = 3,
  CHAT_MESSAGE_TOWER_DENY = 4,
  CHAT_MESSAGE_FIRSTBLOOD = 5,
  CHAT_MESSAGE_STREAK_KILL = 6,
  CHAT_MESSAGE_BUYBACK = 7,
  CHAT_MESSAGE_AEGIS = 8,
  CHAT_MESSAGE_ROSHAN_KILL = 9,
  CHAT_MESSAGE_COURIER_LOST = 10,
  CHAT_MESSAGE_COURIER_RESPAWNED = 11,
  CHAT_MESSAGE_GLYPH_USED = 12,
  CHAT_MESSAGE_ITEM_PURCHASE = 13,
  CHAT_MESSAGE_CONNECT = 14,
  CHAT_MESSAGE_DISCONNECT = 15,
  CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT = 16,
  CHAT_MESSAGE_DISCONNECT_TIME_REMAINING = 17,
  CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL = 18,
  CHAT_MESSAGE_RECONNECT = 19,
  CHAT_MESSAGE_PLAYER_LEFT = 20,
  CHAT_MESSAGE_SAFE_TO_LEAVE = 21,
  CHAT_MESSAGE_RUNE_PICKUP = 22,
  CHAT_MESSAGE_RUNE_BOTTLE = 23,
  CHAT_MESSAGE_INTHEBAG = 24,
  CHAT_MESSAGE_SECRETSHOP = 25,
  CHAT_MESSAGE_ITEM_AUTOPURCHASED = 26,
  CHAT_MESSAGE_ITEMS_COMBINED = 27,
  CHAT_MESSAGE_SUPER_CREEPS = 28,
  CHAT_MESSAGE_CANT_USE_ACTION_ITEM = 29,
  CHAT_MESSAGE_CHARGES_EXHAUSTED = 30,
  CHAT_MESSAGE_CANTPAUSE = 31,
  CHAT_MESSAGE_NOPAUSESLEFT = 32,
  CHAT_MESSAGE_CANTPAUSEYET = 33,
  CHAT_MESSAGE_PAUSED = 34,
  CHAT_MESSAGE_UNPAUSE_COUNTDOWN = 35,
  CHAT_MESSAGE_UNPAUSED = 36,
  CHAT_MESSAGE_AUTO_UNPAUSED = 37,
  CHAT_MESSAGE_YOUPAUSED = 38,
  CHAT_MESSAGE_CANTUNPAUSETEAM = 39,
  CHAT_MESSAGE_VOICE_TEXT_BANNED = 41,
  CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME = 42,
  CHAT_MESSAGE_REPORT_REMINDER = 43,
  CHAT_MESSAGE_ECON_ITEM = 44,
  CHAT_MESSAGE_TAUNT = 45,
  CHAT_MESSAGE_RANDOM = 46,
  CHAT_MESSAGE_RD_TURN = 47,
  CHAT_MESSAGE_DROP_RATE_BONUS = 49,
  CHAT_MESSAGE_NO_BATTLE_POINTS = 50,
  CHAT_MESSAGE_DENIED_AEGIS = 51,
  CHAT_MESSAGE_INFORMATIONAL = 52,
  CHAT_MESSAGE_AEGIS_STOLEN = 53,
  CHAT_MESSAGE_ROSHAN_CANDY = 54,
  CHAT_MESSAGE_ITEM_GIFTED = 55,
  CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL = 56,
  CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED = 57,
  CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED = 58,
  CHAT_MESSAGE_HOLDOUT_WALL_FINISHED = 59,
  CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO = 62,
  CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION = 63,
  CHAT_MESSAGE_DISCONNECT_LIMITED_HERO = 64,
  CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION = 65,
  CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS = 66,
  CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE = 67,
  CHAT_MESSAGE_PLAYER_LEFT_AFK = 73,
  CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG = 74,
  CHAT_MESSAGE_PLAYER_ABANDONED = 75,
  CHAT_MESSAGE_PLAYER_ABANDONED_AFK = 76,
  CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG = 77,
  CHAT_MESSAGE_WILL_NOT_BE_SCORED = 78,
  CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED = 79,
  CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK = 80,
  CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED = 81,
  CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON = 82,
  CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS = 83,
  CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY = 84,
  CHAT_MESSAGE_COMPENDIUM_LEVEL = 85,
  CHAT_MESSAGE_VICTORY_PREDICTION_STREAK = 86,
  CHAT_MESSAGE_ASSASSIN_ANNOUNCE = 87,
  CHAT_MESSAGE_ASSASSIN_SUCCESS = 88,
  CHAT_MESSAGE_ASSASSIN_DENIED = 89,
  CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM = 90,
  CHAT_MESSAGE_EFFIGY_KILL = 91,
  CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW = 92,
  CHAT_MESSAGE_YEAR_BEAST_KILLED = 93,
  CHAT_MESSAGE_PAUSE_COUNTDOWN = 94,
  CHAT_MESSAGE_COINS_WAGERED = 95,
  CHAT_MESSAGE_HERO_NOMINATED_BAN = 96,
  CHAT_MESSAGE_HERO_BANNED = 97,
  CHAT_MESSAGE_HERO_BAN_COUNT = 98,
  CHAT_MESSAGE_RIVER_PAINTED = 99,
  CHAT_MESSAGE_SCAN_USED = 100,
  CHAT_MESSAGE_SHRINE_KILLED = 101,
  CHAT_MESSAGE_WAGER_TOKEN_SPENT = 102,
  CHAT_MESSAGE_RANK_WAGER = 103
};
bool DOTA_CHAT_MESSAGE_IsValid(int value);
const DOTA_CHAT_MESSAGE DOTA_CHAT_MESSAGE_MIN = CHAT_MESSAGE_INVALID;
const DOTA_CHAT_MESSAGE DOTA_CHAT_MESSAGE_MAX = CHAT_MESSAGE_RANK_WAGER;
const int DOTA_CHAT_MESSAGE_ARRAYSIZE = DOTA_CHAT_MESSAGE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_CHAT_MESSAGE_descriptor();
inline const ::std::string& DOTA_CHAT_MESSAGE_Name(DOTA_CHAT_MESSAGE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_CHAT_MESSAGE_descriptor(), value);
}
inline bool DOTA_CHAT_MESSAGE_Parse(
    const ::std::string& name, DOTA_CHAT_MESSAGE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_CHAT_MESSAGE>(
    DOTA_CHAT_MESSAGE_descriptor(), name, value);
}
enum DOTA_NO_BATTLE_POINTS_REASONS {
  NO_BATTLE_POINTS_WRONG_LOBBY_TYPE = 1,
  NO_BATTLE_POINTS_PRACTICE_BOTS = 2,
  NO_BATTLE_POINTS_CHEATS_ENABLED = 3,
  NO_BATTLE_POINTS_LOW_PRIORITY = 4
};
bool DOTA_NO_BATTLE_POINTS_REASONS_IsValid(int value);
const DOTA_NO_BATTLE_POINTS_REASONS DOTA_NO_BATTLE_POINTS_REASONS_MIN = NO_BATTLE_POINTS_WRONG_LOBBY_TYPE;
const DOTA_NO_BATTLE_POINTS_REASONS DOTA_NO_BATTLE_POINTS_REASONS_MAX = NO_BATTLE_POINTS_LOW_PRIORITY;
const int DOTA_NO_BATTLE_POINTS_REASONS_ARRAYSIZE = DOTA_NO_BATTLE_POINTS_REASONS_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_NO_BATTLE_POINTS_REASONS_descriptor();
inline const ::std::string& DOTA_NO_BATTLE_POINTS_REASONS_Name(DOTA_NO_BATTLE_POINTS_REASONS value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_NO_BATTLE_POINTS_REASONS_descriptor(), value);
}
inline bool DOTA_NO_BATTLE_POINTS_REASONS_Parse(
    const ::std::string& name, DOTA_NO_BATTLE_POINTS_REASONS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_NO_BATTLE_POINTS_REASONS>(
    DOTA_NO_BATTLE_POINTS_REASONS_descriptor(), name, value);
}
enum DOTA_CHAT_INFORMATIONAL {
  INFO_COOP_BATTLE_POINTS_RULES = 1,
  INFO_FROSTIVUS_ABANDON_REMINDER = 2,
  INFO_RANKED_REMINDER = 3,
  INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER = 4
};
bool DOTA_CHAT_INFORMATIONAL_IsValid(int value);
const DOTA_CHAT_INFORMATIONAL DOTA_CHAT_INFORMATIONAL_MIN = INFO_COOP_BATTLE_POINTS_RULES;
const DOTA_CHAT_INFORMATIONAL DOTA_CHAT_INFORMATIONAL_MAX = INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER;
const int DOTA_CHAT_INFORMATIONAL_ARRAYSIZE = DOTA_CHAT_INFORMATIONAL_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_CHAT_INFORMATIONAL_descriptor();
inline const ::std::string& DOTA_CHAT_INFORMATIONAL_Name(DOTA_CHAT_INFORMATIONAL value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_CHAT_INFORMATIONAL_descriptor(), value);
}
inline bool DOTA_CHAT_INFORMATIONAL_Parse(
    const ::std::string& name, DOTA_CHAT_INFORMATIONAL* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_CHAT_INFORMATIONAL>(
    DOTA_CHAT_INFORMATIONAL_descriptor(), name, value);
}
enum DOTA_ABILITY_PING_TYPE {
  ABILITY_PING_READY = 1,
  ABILITY_PING_MANA = 2,
  ABILITY_PING_COOLDOWN = 3,
  ABILITY_PING_ENEMY = 4,
  ABILITY_PING_UNLEARNED = 5,
  ABILITY_PING_INBACKPACK = 6
};
bool DOTA_ABILITY_PING_TYPE_IsValid(int value);
const DOTA_ABILITY_PING_TYPE DOTA_ABILITY_PING_TYPE_MIN = ABILITY_PING_READY;
const DOTA_ABILITY_PING_TYPE DOTA_ABILITY_PING_TYPE_MAX = ABILITY_PING_INBACKPACK;
const int DOTA_ABILITY_PING_TYPE_ARRAYSIZE = DOTA_ABILITY_PING_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_ABILITY_PING_TYPE_descriptor();
inline const ::std::string& DOTA_ABILITY_PING_TYPE_Name(DOTA_ABILITY_PING_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_ABILITY_PING_TYPE_descriptor(), value);
}
inline bool DOTA_ABILITY_PING_TYPE_Parse(
    const ::std::string& name, DOTA_ABILITY_PING_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_ABILITY_PING_TYPE>(
    DOTA_ABILITY_PING_TYPE_descriptor(), name, value);
}
enum DOTA_REPLAY_STATE_EVENT {
  DOTA_REPLAY_STATE_EVENT_GAME_START = 1,
  DOTA_REPLAY_STATE_EVENT_STARTING_HORN = 2,
  DOTA_REPLAY_STATE_EVENT_FIRST_BLOOD = 3,
  DOTA_REPLAY_STATE_EVENT_SHOWCASE = 4
};
bool DOTA_REPLAY_STATE_EVENT_IsValid(int value);
const DOTA_REPLAY_STATE_EVENT DOTA_REPLAY_STATE_EVENT_MIN = DOTA_REPLAY_STATE_EVENT_GAME_START;
const DOTA_REPLAY_STATE_EVENT DOTA_REPLAY_STATE_EVENT_MAX = DOTA_REPLAY_STATE_EVENT_SHOWCASE;
const int DOTA_REPLAY_STATE_EVENT_ARRAYSIZE = DOTA_REPLAY_STATE_EVENT_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_REPLAY_STATE_EVENT_descriptor();
inline const ::std::string& DOTA_REPLAY_STATE_EVENT_Name(DOTA_REPLAY_STATE_EVENT value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_REPLAY_STATE_EVENT_descriptor(), value);
}
inline bool DOTA_REPLAY_STATE_EVENT_Parse(
    const ::std::string& name, DOTA_REPLAY_STATE_EVENT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_REPLAY_STATE_EVENT>(
    DOTA_REPLAY_STATE_EVENT_descriptor(), name, value);
}
enum EDotaEntityMessages {
  DOTA_UNIT_SPEECH = 0,
  DOTA_UNIT_SPEECH_MUTE = 1,
  DOTA_UNIT_ADD_GESTURE = 2,
  DOTA_UNIT_REMOVE_GESTURE = 3,
  DOTA_UNIT_REMOVE_ALL_GESTURES = 4,
  DOTA_UNIT_FADE_GESTURE = 6,
  DOTA_UNIT_SPEECH_CLIENTSIDE_RULES = 7
};
bool EDotaEntityMessages_IsValid(int value);
const EDotaEntityMessages EDotaEntityMessages_MIN = DOTA_UNIT_SPEECH;
const EDotaEntityMessages EDotaEntityMessages_MAX = DOTA_UNIT_SPEECH_CLIENTSIDE_RULES;
const int EDotaEntityMessages_ARRAYSIZE = EDotaEntityMessages_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDotaEntityMessages_descriptor();
inline const ::std::string& EDotaEntityMessages_Name(EDotaEntityMessages value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDotaEntityMessages_descriptor(), value);
}
inline bool EDotaEntityMessages_Parse(
    const ::std::string& name, EDotaEntityMessages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDotaEntityMessages>(
    EDotaEntityMessages_descriptor(), name, value);
}
enum DOTA_PARTICLE_MESSAGE {
  DOTA_PARTICLE_MANAGER_EVENT_CREATE = 0,
  DOTA_PARTICLE_MANAGER_EVENT_UPDATE = 1,
  DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD = 2,
  DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION = 3,
  DOTA_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK = 4,
  DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENT = 5,
  DOTA_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET = 6,
  DOTA_PARTICLE_MANAGER_EVENT_DESTROY = 7,
  DOTA_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING = 8,
  DOTA_PARTICLE_MANAGER_EVENT_RELEASE = 9,
  DOTA_PARTICLE_MANAGER_EVENT_LATENCY = 10,
  DOTA_PARTICLE_MANAGER_EVENT_SHOULD_DRAW = 11,
  DOTA_PARTICLE_MANAGER_EVENT_FROZEN = 12,
  DOTA_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT = 13,
  DOTA_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION = 14,
  DOTA_PARTICLE_MANAGER_EVENT_SET_FOW_PROPERTIES = 15,
  DOTA_PARTICLE_MANAGER_EVENT_SET_TEXT = 16
};
bool DOTA_PARTICLE_MESSAGE_IsValid(int value);
const DOTA_PARTICLE_MESSAGE DOTA_PARTICLE_MESSAGE_MIN = DOTA_PARTICLE_MANAGER_EVENT_CREATE;
const DOTA_PARTICLE_MESSAGE DOTA_PARTICLE_MESSAGE_MAX = DOTA_PARTICLE_MANAGER_EVENT_SET_TEXT;
const int DOTA_PARTICLE_MESSAGE_ARRAYSIZE = DOTA_PARTICLE_MESSAGE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_PARTICLE_MESSAGE_descriptor();
inline const ::std::string& DOTA_PARTICLE_MESSAGE_Name(DOTA_PARTICLE_MESSAGE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_PARTICLE_MESSAGE_descriptor(), value);
}
inline bool DOTA_PARTICLE_MESSAGE_Parse(
    const ::std::string& name, DOTA_PARTICLE_MESSAGE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_PARTICLE_MESSAGE>(
    DOTA_PARTICLE_MESSAGE_descriptor(), name, value);
}
enum DOTA_OVERHEAD_ALERT {
  OVERHEAD_ALERT_GOLD = 0,
  OVERHEAD_ALERT_DENY = 1,
  OVERHEAD_ALERT_CRITICAL = 2,
  OVERHEAD_ALERT_XP = 3,
  OVERHEAD_ALERT_BONUS_SPELL_DAMAGE = 4,
  OVERHEAD_ALERT_MISS = 5,
  OVERHEAD_ALERT_DAMAGE = 6,
  OVERHEAD_ALERT_EVADE = 7,
  OVERHEAD_ALERT_BLOCK = 8,
  OVERHEAD_ALERT_BONUS_POISON_DAMAGE = 9,
  OVERHEAD_ALERT_HEAL = 10,
  OVERHEAD_ALERT_MANA_ADD = 11,
  OVERHEAD_ALERT_MANA_LOSS = 12,
  OVERHEAD_ALERT_LAST_HIT_EARLY = 13,
  OVERHEAD_ALERT_LAST_HIT_CLOSE = 14,
  OVERHEAD_ALERT_LAST_HIT_MISS = 15,
  OVERHEAD_ALERT_MAGICAL_BLOCK = 16,
  OVERHEAD_ALERT_INCOMING_DAMAGE = 17,
  OVERHEAD_ALERT_OUTGOING_DAMAGE = 18,
  OVERHEAD_ALERT_DISABLE_RESIST = 19,
  OVERHEAD_ALERT_DEATH = 20
};
bool DOTA_OVERHEAD_ALERT_IsValid(int value);
const DOTA_OVERHEAD_ALERT DOTA_OVERHEAD_ALERT_MIN = OVERHEAD_ALERT_GOLD;
const DOTA_OVERHEAD_ALERT DOTA_OVERHEAD_ALERT_MAX = OVERHEAD_ALERT_DEATH;
const int DOTA_OVERHEAD_ALERT_ARRAYSIZE = DOTA_OVERHEAD_ALERT_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_OVERHEAD_ALERT_descriptor();
inline const ::std::string& DOTA_OVERHEAD_ALERT_Name(DOTA_OVERHEAD_ALERT value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_OVERHEAD_ALERT_descriptor(), value);
}
inline bool DOTA_OVERHEAD_ALERT_Parse(
    const ::std::string& name, DOTA_OVERHEAD_ALERT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_OVERHEAD_ALERT>(
    DOTA_OVERHEAD_ALERT_descriptor(), name, value);
}
enum DOTA_ROSHAN_PHASE {
  k_SRSP_ROSHAN_ALIVE = 0,
  k_SRSP_ROSHAN_BASE_TIMER = 1,
  k_SRSP_ROSHAN_VISIBLE_TIMER = 2
};
bool DOTA_ROSHAN_PHASE_IsValid(int value);
const DOTA_ROSHAN_PHASE DOTA_ROSHAN_PHASE_MIN = k_SRSP_ROSHAN_ALIVE;
const DOTA_ROSHAN_PHASE DOTA_ROSHAN_PHASE_MAX = k_SRSP_ROSHAN_VISIBLE_TIMER;
const int DOTA_ROSHAN_PHASE_ARRAYSIZE = DOTA_ROSHAN_PHASE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_ROSHAN_PHASE_descriptor();
inline const ::std::string& DOTA_ROSHAN_PHASE_Name(DOTA_ROSHAN_PHASE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_ROSHAN_PHASE_descriptor(), value);
}
inline bool DOTA_ROSHAN_PHASE_Parse(
    const ::std::string& name, DOTA_ROSHAN_PHASE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_ROSHAN_PHASE>(
    DOTA_ROSHAN_PHASE_descriptor(), name, value);
}
enum DOTA_POSITION_CATEGORY {
  DOTA_POSITION_NONE = 0,
  DOTA_POSITION_BOTTOM_LANE = 1,
  DOTA_POSITION_MID_LANE = 2,
  DOTA_POSITION_TOP_LANE = 3,
  DOTA_POSITION_RADIANT_JUNGLE = 4,
  DOTA_POSITION_DIRE_JUNGLE = 5,
  DOTA_POSITION_RADIANT_ANCIENTS = 6,
  DOTA_POSITION_DIRE_ANCIENTS = 7,
  DOTA_POSITION_RADIANT_SECRET_SHOP = 8,
  DOTA_POSITION_DIRE_SECRET_SHOP = 9,
  DOTA_POSITION_RIVER = 10,
  DOTA_POSITION_ROSHAN_PIT = 11,
  DOTA_POSITION_RADIANT_BASE = 12,
  DOTA_POSITION_DIRE_BASE = 13,
  DOTA_POSITION_FOUNTAIN = 14,
  DOTA_POSITION_OTHER = 15
};
bool DOTA_POSITION_CATEGORY_IsValid(int value);
const DOTA_POSITION_CATEGORY DOTA_POSITION_CATEGORY_MIN = DOTA_POSITION_NONE;
const DOTA_POSITION_CATEGORY DOTA_POSITION_CATEGORY_MAX = DOTA_POSITION_OTHER;
const int DOTA_POSITION_CATEGORY_ARRAYSIZE = DOTA_POSITION_CATEGORY_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_POSITION_CATEGORY_descriptor();
inline const ::std::string& DOTA_POSITION_CATEGORY_Name(DOTA_POSITION_CATEGORY value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_POSITION_CATEGORY_descriptor(), value);
}
inline bool DOTA_POSITION_CATEGORY_Parse(
    const ::std::string& name, DOTA_POSITION_CATEGORY* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_POSITION_CATEGORY>(
    DOTA_POSITION_CATEGORY_descriptor(), name, value);
}
enum DOTA_ABILITY_TARGET_TYPE {
  DOTA_ABILITY_TARGET_NONE = 0,
  DOTA_ABILITY_TARGET_SELF = 1,
  DOTA_ABILITY_TARGET_ALLY_HERO = 2,
  DOTA_ABILITY_TARGET_ALLY_CREEP = 3,
  DOTA_ABILITY_TARGET_ENEMY_HERO = 4,
  DOTA_ABILITY_TARGET_ENEMY_CREEP = 5
};
bool DOTA_ABILITY_TARGET_TYPE_IsValid(int value);
const DOTA_ABILITY_TARGET_TYPE DOTA_ABILITY_TARGET_TYPE_MIN = DOTA_ABILITY_TARGET_NONE;
const DOTA_ABILITY_TARGET_TYPE DOTA_ABILITY_TARGET_TYPE_MAX = DOTA_ABILITY_TARGET_ENEMY_CREEP;
const int DOTA_ABILITY_TARGET_TYPE_ARRAYSIZE = DOTA_ABILITY_TARGET_TYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_ABILITY_TARGET_TYPE_descriptor();
inline const ::std::string& DOTA_ABILITY_TARGET_TYPE_Name(DOTA_ABILITY_TARGET_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_ABILITY_TARGET_TYPE_descriptor(), value);
}
inline bool DOTA_ABILITY_TARGET_TYPE_Parse(
    const ::std::string& name, DOTA_ABILITY_TARGET_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_ABILITY_TARGET_TYPE>(
    DOTA_ABILITY_TARGET_TYPE_descriptor(), name, value);
}
enum EHeroStatType {
  k_EHeroStatType_None = 0,
  k_EHeroStatType_AxeTotalDamage = 2000,
  k_EHeroStatType_BattleHungerDamage = 2001,
  k_EHeroStatType_CounterHelixDamage = 2002,
  k_EHeroStatType_CullingBladeDamage = 2003,
  k_EHeroStatType_BerserkersCallCastCount = 2004,
  k_EHeroStatType_BerserkersCallHeroesHitAverage = 2005,
  k_EHeroStatType_BerserkersCallOtherUnitsHit = 2006,
  k_EHeroStatType_BerserkersCallHeroAttacksTaken = 2007,
  k_EHeroStatType_BerserkersCallOtherAttacksTaken = 2008,
  k_EHeroStatType_BattleHungerCastCount = 2009,
  k_EHeroStatType_BattleHungerPotentialDuration = 2010,
  k_EHeroStatType_BattleHungerAverageDuration = 2011,
  k_EHeroStatType_CounterHelixProcCount = 2012,
  k_EHeroStatType_CounterHelixHeroProcCount = 2013,
  k_EHeroStatType_CounterHelixHeroesHitAverage = 2014,
  k_EHeroStatType_CounterHelixOtherUnitsHitCount = 2015,
  k_EHeroStatType_CullingBladeCastCount = 2016,
  k_EHeroStatType_CullingBladeKillCount = 2017,
  k_EHeroStatType_CullingBladeAverageHealthCulled = 2018,
  k_EHeroStatType_CullingBladeAverageDamageAvailable = 2019,
  k_EHeroStatType_CullingBladeHeroBuffAverage = 2020
};
bool EHeroStatType_IsValid(int value);
const EHeroStatType EHeroStatType_MIN = k_EHeroStatType_None;
const EHeroStatType EHeroStatType_MAX = k_EHeroStatType_CullingBladeHeroBuffAverage;
const int EHeroStatType_ARRAYSIZE = EHeroStatType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EHeroStatType_descriptor();
inline const ::std::string& EHeroStatType_Name(EHeroStatType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EHeroStatType_descriptor(), value);
}
inline bool EHeroStatType_Parse(
    const ::std::string& name, EHeroStatType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EHeroStatType>(
    EHeroStatType_descriptor(), name, value);
}
enum EPlayerVoiceListenState {
  kPVLS_None = 0,
  kPVLS_DeniedChatBanned = 1,
  kPVLS_DeniedPartner = 2,
  kPVLS_DeniedHLTVTalkerNotSpectator = 3,
  kPVLS_DeniedHLTVNoTalkerPlayerID = 4,
  kPVLS_DeniedHLTVTalkerNotBroadcaster = 5,
  kPVLS_DeniedTeamSpectator = 6,
  kPVLS_DeniedStudent = 8,
  kPVLS_Denied = 64,
  kPVLS_AllowHLTVTalkerIsBroadcaster = 65,
  kPVLS_AllowCoBroadcaster = 66,
  kPVLS_AllowAllChat = 67,
  kPVLS_AllowStudentToCoach = 68,
  kPVLS_AllowFellowStudent = 69,
  kPVLS_AllowTalkerIsCoach = 70,
  kPVLS_AllowCoachHearTeam = 71,
  kPVLS_AllowSameTeam = 72,
  kPVLS_AllowShowcase = 73
};
bool EPlayerVoiceListenState_IsValid(int value);
const EPlayerVoiceListenState EPlayerVoiceListenState_MIN = kPVLS_None;
const EPlayerVoiceListenState EPlayerVoiceListenState_MAX = kPVLS_AllowShowcase;
const int EPlayerVoiceListenState_ARRAYSIZE = EPlayerVoiceListenState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPlayerVoiceListenState_descriptor();
inline const ::std::string& EPlayerVoiceListenState_Name(EPlayerVoiceListenState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPlayerVoiceListenState_descriptor(), value);
}
inline bool EPlayerVoiceListenState_Parse(
    const ::std::string& name, EPlayerVoiceListenState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPlayerVoiceListenState>(
    EPlayerVoiceListenState_descriptor(), name, value);
}
enum EProjectionEvent {
  ePE_FirstBlood = 0,
  ePE_Killstreak_godlike = 1
};
bool EProjectionEvent_IsValid(int value);
const EProjectionEvent EProjectionEvent_MIN = ePE_FirstBlood;
const EProjectionEvent EProjectionEvent_MAX = ePE_Killstreak_godlike;
const int EProjectionEvent_ARRAYSIZE = EProjectionEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* EProjectionEvent_descriptor();
inline const ::std::string& EProjectionEvent_Name(EProjectionEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    EProjectionEvent_descriptor(), value);
}
inline bool EProjectionEvent_Parse(
    const ::std::string& name, EProjectionEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EProjectionEvent>(
    EProjectionEvent_descriptor(), name, value);
}
// ===================================================================

class CDOTAUserMsg_AIDebugLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_AIDebugLine) */ {
 public:
  CDOTAUserMsg_AIDebugLine();
  virtual ~CDOTAUserMsg_AIDebugLine();

  CDOTAUserMsg_AIDebugLine(const CDOTAUserMsg_AIDebugLine& from);

  inline CDOTAUserMsg_AIDebugLine& operator=(const CDOTAUserMsg_AIDebugLine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_AIDebugLine& default_instance();

  static inline const CDOTAUserMsg_AIDebugLine* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_AIDebugLine*>(
               &_CDOTAUserMsg_AIDebugLine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CDOTAUserMsg_AIDebugLine* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_AIDebugLine* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_AIDebugLine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_AIDebugLine& from);
  void MergeFrom(const CDOTAUserMsg_AIDebugLine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_AIDebugLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_AIDebugLine)
 private:
  void set_has_message();
  void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_Ping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_Ping) */ {
 public:
  CDOTAUserMsg_Ping();
  virtual ~CDOTAUserMsg_Ping();

  CDOTAUserMsg_Ping(const CDOTAUserMsg_Ping& from);

  inline CDOTAUserMsg_Ping& operator=(const CDOTAUserMsg_Ping& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_Ping& default_instance();

  static inline const CDOTAUserMsg_Ping* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_Ping*>(
               &_CDOTAUserMsg_Ping_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CDOTAUserMsg_Ping* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_Ping* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_Ping* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_Ping& from);
  void MergeFrom(const CDOTAUserMsg_Ping& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_Ping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ping = 2;
  bool has_ping() const;
  void clear_ping();
  static const int kPingFieldNumber = 2;
  ::google::protobuf::uint32 ping() const;
  void set_ping(::google::protobuf::uint32 value);

  // optional uint32 loss = 3;
  bool has_loss() const;
  void clear_loss();
  static const int kLossFieldNumber = 3;
  ::google::protobuf::uint32 loss() const;
  void set_loss(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_Ping)
 private:
  void set_has_ping();
  void clear_has_ping();
  void set_has_loss();
  void clear_has_loss();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 ping_;
  ::google::protobuf::uint32 loss_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SwapVerify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SwapVerify) */ {
 public:
  CDOTAUserMsg_SwapVerify();
  virtual ~CDOTAUserMsg_SwapVerify();

  CDOTAUserMsg_SwapVerify(const CDOTAUserMsg_SwapVerify& from);

  inline CDOTAUserMsg_SwapVerify& operator=(const CDOTAUserMsg_SwapVerify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SwapVerify& default_instance();

  static inline const CDOTAUserMsg_SwapVerify* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SwapVerify*>(
               &_CDOTAUserMsg_SwapVerify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CDOTAUserMsg_SwapVerify* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SwapVerify* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SwapVerify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SwapVerify& from);
  void MergeFrom(const CDOTAUserMsg_SwapVerify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SwapVerify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SwapVerify)
 private:
  void set_has_player_id();
  void clear_has_player_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ChatEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ChatEvent) */ {
 public:
  CDOTAUserMsg_ChatEvent();
  virtual ~CDOTAUserMsg_ChatEvent();

  CDOTAUserMsg_ChatEvent(const CDOTAUserMsg_ChatEvent& from);

  inline CDOTAUserMsg_ChatEvent& operator=(const CDOTAUserMsg_ChatEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ChatEvent& default_instance();

  static inline const CDOTAUserMsg_ChatEvent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ChatEvent*>(
               &_CDOTAUserMsg_ChatEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CDOTAUserMsg_ChatEvent* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ChatEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ChatEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ChatEvent& from);
  void MergeFrom(const CDOTAUserMsg_ChatEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ChatEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // optional uint32 value2 = 9;
  bool has_value2() const;
  void clear_value2();
  static const int kValue2FieldNumber = 9;
  ::google::protobuf::uint32 value2() const;
  void set_value2(::google::protobuf::uint32 value);

  // optional uint32 value3 = 10;
  bool has_value3() const;
  void clear_value3();
  static const int kValue3FieldNumber = 10;
  ::google::protobuf::uint32 value3() const;
  void set_value3(::google::protobuf::uint32 value);

  // optional sint32 playerid_6 = 8 [default = -1];
  bool has_playerid_6() const;
  void clear_playerid_6();
  static const int kPlayerid6FieldNumber = 8;
  ::google::protobuf::int32 playerid_6() const;
  void set_playerid_6(::google::protobuf::int32 value);

  // required .proto.dota.DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::proto::dota::DOTA_CHAT_MESSAGE type() const;
  void set_type(::proto::dota::DOTA_CHAT_MESSAGE value);

  // optional sint32 playerid_1 = 3 [default = -1];
  bool has_playerid_1() const;
  void clear_playerid_1();
  static const int kPlayerid1FieldNumber = 3;
  ::google::protobuf::int32 playerid_1() const;
  void set_playerid_1(::google::protobuf::int32 value);

  // optional sint32 playerid_2 = 4 [default = -1];
  bool has_playerid_2() const;
  void clear_playerid_2();
  static const int kPlayerid2FieldNumber = 4;
  ::google::protobuf::int32 playerid_2() const;
  void set_playerid_2(::google::protobuf::int32 value);

  // optional sint32 playerid_3 = 5 [default = -1];
  bool has_playerid_3() const;
  void clear_playerid_3();
  static const int kPlayerid3FieldNumber = 5;
  ::google::protobuf::int32 playerid_3() const;
  void set_playerid_3(::google::protobuf::int32 value);

  // optional sint32 playerid_4 = 6 [default = -1];
  bool has_playerid_4() const;
  void clear_playerid_4();
  static const int kPlayerid4FieldNumber = 6;
  ::google::protobuf::int32 playerid_4() const;
  void set_playerid_4(::google::protobuf::int32 value);

  // optional sint32 playerid_5 = 7 [default = -1];
  bool has_playerid_5() const;
  void clear_playerid_5();
  static const int kPlayerid5FieldNumber = 7;
  ::google::protobuf::int32 playerid_5() const;
  void set_playerid_5(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ChatEvent)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_value();
  void clear_has_value();
  void set_has_playerid_1();
  void clear_has_playerid_1();
  void set_has_playerid_2();
  void clear_has_playerid_2();
  void set_has_playerid_3();
  void clear_has_playerid_3();
  void set_has_playerid_4();
  void clear_has_playerid_4();
  void set_has_playerid_5();
  void clear_has_playerid_5();
  void set_has_playerid_6();
  void clear_has_playerid_6();
  void set_has_value2();
  void clear_has_value2();
  void set_has_value3();
  void clear_has_value3();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 value_;
  ::google::protobuf::uint32 value2_;
  ::google::protobuf::uint32 value3_;
  ::google::protobuf::int32 playerid_6_;
  int type_;
  ::google::protobuf::int32 playerid_1_;
  ::google::protobuf::int32 playerid_2_;
  ::google::protobuf::int32 playerid_3_;
  ::google::protobuf::int32 playerid_4_;
  ::google::protobuf::int32 playerid_5_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CombatLogShowDeath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CombatLogShowDeath) */ {
 public:
  CDOTAUserMsg_CombatLogShowDeath();
  virtual ~CDOTAUserMsg_CombatLogShowDeath();

  CDOTAUserMsg_CombatLogShowDeath(const CDOTAUserMsg_CombatLogShowDeath& from);

  inline CDOTAUserMsg_CombatLogShowDeath& operator=(const CDOTAUserMsg_CombatLogShowDeath& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CombatLogShowDeath& default_instance();

  static inline const CDOTAUserMsg_CombatLogShowDeath* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CombatLogShowDeath*>(
               &_CDOTAUserMsg_CombatLogShowDeath_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CDOTAUserMsg_CombatLogShowDeath* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CombatLogShowDeath* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CombatLogShowDeath* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CombatLogShowDeath& from);
  void MergeFrom(const CDOTAUserMsg_CombatLogShowDeath& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CombatLogShowDeath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CombatLogShowDeath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_BotChat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_BotChat) */ {
 public:
  CDOTAUserMsg_BotChat();
  virtual ~CDOTAUserMsg_BotChat();

  CDOTAUserMsg_BotChat(const CDOTAUserMsg_BotChat& from);

  inline CDOTAUserMsg_BotChat& operator=(const CDOTAUserMsg_BotChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_BotChat& default_instance();

  static inline const CDOTAUserMsg_BotChat* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_BotChat*>(
               &_CDOTAUserMsg_BotChat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CDOTAUserMsg_BotChat* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_BotChat* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_BotChat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_BotChat& from);
  void MergeFrom(const CDOTAUserMsg_BotChat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_BotChat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional string target = 4;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 4;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  #if LANG_CXX11
  void set_target(::std::string&& value);
  #endif
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional bool team_only = 5;
  bool has_team_only() const;
  void clear_team_only();
  static const int kTeamOnlyFieldNumber = 5;
  bool team_only() const;
  void set_team_only(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_BotChat)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_message();
  void clear_has_message();
  void set_has_target();
  void clear_has_target();
  void set_has_team_only();
  void clear_has_team_only();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  ::google::protobuf::uint32 player_id_;
  bool team_only_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CombatHeroPositions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CombatHeroPositions) */ {
 public:
  CDOTAUserMsg_CombatHeroPositions();
  virtual ~CDOTAUserMsg_CombatHeroPositions();

  CDOTAUserMsg_CombatHeroPositions(const CDOTAUserMsg_CombatHeroPositions& from);

  inline CDOTAUserMsg_CombatHeroPositions& operator=(const CDOTAUserMsg_CombatHeroPositions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CombatHeroPositions& default_instance();

  static inline const CDOTAUserMsg_CombatHeroPositions* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CombatHeroPositions*>(
               &_CDOTAUserMsg_CombatHeroPositions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CDOTAUserMsg_CombatHeroPositions* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CombatHeroPositions* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CombatHeroPositions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CombatHeroPositions& from);
  void MergeFrom(const CDOTAUserMsg_CombatHeroPositions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CombatHeroPositions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector2D world_pos = 3;
  bool has_world_pos() const;
  void clear_world_pos();
  static const int kWorldPosFieldNumber = 3;
  const ::proto::dota::CMsgVector2D& world_pos() const;
  ::proto::dota::CMsgVector2D* mutable_world_pos();
  ::proto::dota::CMsgVector2D* release_world_pos();
  void set_allocated_world_pos(::proto::dota::CMsgVector2D* world_pos);

  // optional uint32 index = 1;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // optional int32 time = 2;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  ::google::protobuf::int32 time() const;
  void set_time(::google::protobuf::int32 value);

  // optional int32 health = 4;
  bool has_health() const;
  void clear_health();
  static const int kHealthFieldNumber = 4;
  ::google::protobuf::int32 health() const;
  void set_health(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CombatHeroPositions)
 private:
  void set_has_index();
  void clear_has_index();
  void set_has_time();
  void clear_has_time();
  void set_has_world_pos();
  void clear_has_world_pos();
  void set_has_health();
  void clear_has_health();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector2D* world_pos_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::int32 time_;
  ::google::protobuf::int32 health_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability) */ {
 public:
  CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability();
  virtual ~CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability();

  CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability(const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& from);

  inline CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& operator=(const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& default_instance();

  static inline const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability*>(
               &_CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& from);
  void MergeFrom(const CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ability = 1;
  bool has_ability() const;
  void clear_ability();
  static const int kAbilityFieldNumber = 1;
  ::google::protobuf::uint32 ability() const;
  void set_ability(::google::protobuf::uint32 value);

  // optional int32 damage = 2;
  bool has_damage() const;
  void clear_damage();
  static const int kDamageFieldNumber = 2;
  ::google::protobuf::int32 damage() const;
  void set_damage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability)
 private:
  void set_has_ability();
  void clear_has_ability();
  void set_has_damage();
  void clear_has_damage();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 ability_;
  ::google::protobuf::int32 damage_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MiniKillCamInfo_Attacker : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker) */ {
 public:
  CDOTAUserMsg_MiniKillCamInfo_Attacker();
  virtual ~CDOTAUserMsg_MiniKillCamInfo_Attacker();

  CDOTAUserMsg_MiniKillCamInfo_Attacker(const CDOTAUserMsg_MiniKillCamInfo_Attacker& from);

  inline CDOTAUserMsg_MiniKillCamInfo_Attacker& operator=(const CDOTAUserMsg_MiniKillCamInfo_Attacker& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_MiniKillCamInfo_Attacker& default_instance();

  static inline const CDOTAUserMsg_MiniKillCamInfo_Attacker* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MiniKillCamInfo_Attacker*>(
               &_CDOTAUserMsg_MiniKillCamInfo_Attacker_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CDOTAUserMsg_MiniKillCamInfo_Attacker* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MiniKillCamInfo_Attacker* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_MiniKillCamInfo_Attacker* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_MiniKillCamInfo_Attacker& from);
  void MergeFrom(const CDOTAUserMsg_MiniKillCamInfo_Attacker& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_MiniKillCamInfo_Attacker* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability Ability;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;
  int abilities_size() const;
  void clear_abilities();
  static const int kAbilitiesFieldNumber = 3;
  const ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& abilities(int index) const;
  ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* mutable_abilities(int index);
  ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* add_abilities();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability >*
      mutable_abilities();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability >&
      abilities() const;

  // optional string attacker_name = 4;
  bool has_attacker_name() const;
  void clear_attacker_name();
  static const int kAttackerNameFieldNumber = 4;
  const ::std::string& attacker_name() const;
  void set_attacker_name(const ::std::string& value);
  #if LANG_CXX11
  void set_attacker_name(::std::string&& value);
  #endif
  void set_attacker_name(const char* value);
  void set_attacker_name(const char* value, size_t size);
  ::std::string* mutable_attacker_name();
  ::std::string* release_attacker_name();
  void set_allocated_attacker_name(::std::string* attacker_name);

  // optional uint32 attacker = 1;
  bool has_attacker() const;
  void clear_attacker();
  static const int kAttackerFieldNumber = 1;
  ::google::protobuf::uint32 attacker() const;
  void set_attacker(::google::protobuf::uint32 value);

  // optional int32 total_damage = 2;
  bool has_total_damage() const;
  void clear_total_damage();
  static const int kTotalDamageFieldNumber = 2;
  ::google::protobuf::int32 total_damage() const;
  void set_total_damage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker)
 private:
  void set_has_attacker();
  void clear_has_attacker();
  void set_has_total_damage();
  void clear_has_total_damage();
  void set_has_attacker_name();
  void clear_has_attacker_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability > abilities_;
  ::google::protobuf::internal::ArenaStringPtr attacker_name_;
  ::google::protobuf::uint32 attacker_;
  ::google::protobuf::int32 total_damage_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MiniKillCamInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_MiniKillCamInfo) */ {
 public:
  CDOTAUserMsg_MiniKillCamInfo();
  virtual ~CDOTAUserMsg_MiniKillCamInfo();

  CDOTAUserMsg_MiniKillCamInfo(const CDOTAUserMsg_MiniKillCamInfo& from);

  inline CDOTAUserMsg_MiniKillCamInfo& operator=(const CDOTAUserMsg_MiniKillCamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_MiniKillCamInfo& default_instance();

  static inline const CDOTAUserMsg_MiniKillCamInfo* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MiniKillCamInfo*>(
               &_CDOTAUserMsg_MiniKillCamInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CDOTAUserMsg_MiniKillCamInfo* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MiniKillCamInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_MiniKillCamInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_MiniKillCamInfo& from);
  void MergeFrom(const CDOTAUserMsg_MiniKillCamInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_MiniKillCamInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_MiniKillCamInfo_Attacker Attacker;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;
  int attackers_size() const;
  void clear_attackers();
  static const int kAttackersFieldNumber = 1;
  const ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker& attackers(int index) const;
  ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker* mutable_attackers(int index);
  ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker* add_attackers();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker >*
      mutable_attackers();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker >&
      attackers() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_MiniKillCamInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker > attackers_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_GlobalLightColor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_GlobalLightColor) */ {
 public:
  CDOTAUserMsg_GlobalLightColor();
  virtual ~CDOTAUserMsg_GlobalLightColor();

  CDOTAUserMsg_GlobalLightColor(const CDOTAUserMsg_GlobalLightColor& from);

  inline CDOTAUserMsg_GlobalLightColor& operator=(const CDOTAUserMsg_GlobalLightColor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_GlobalLightColor& default_instance();

  static inline const CDOTAUserMsg_GlobalLightColor* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_GlobalLightColor*>(
               &_CDOTAUserMsg_GlobalLightColor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CDOTAUserMsg_GlobalLightColor* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_GlobalLightColor* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_GlobalLightColor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_GlobalLightColor& from);
  void MergeFrom(const CDOTAUserMsg_GlobalLightColor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_GlobalLightColor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 color = 1;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 1;
  ::google::protobuf::uint32 color() const;
  void set_color(::google::protobuf::uint32 value);

  // optional float duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  float duration() const;
  void set_duration(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_GlobalLightColor)
 private:
  void set_has_color();
  void clear_has_color();
  void set_has_duration();
  void clear_has_duration();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 color_;
  float duration_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_GlobalLightDirection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_GlobalLightDirection) */ {
 public:
  CDOTAUserMsg_GlobalLightDirection();
  virtual ~CDOTAUserMsg_GlobalLightDirection();

  CDOTAUserMsg_GlobalLightDirection(const CDOTAUserMsg_GlobalLightDirection& from);

  inline CDOTAUserMsg_GlobalLightDirection& operator=(const CDOTAUserMsg_GlobalLightDirection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_GlobalLightDirection& default_instance();

  static inline const CDOTAUserMsg_GlobalLightDirection* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_GlobalLightDirection*>(
               &_CDOTAUserMsg_GlobalLightDirection_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CDOTAUserMsg_GlobalLightDirection* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_GlobalLightDirection* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_GlobalLightDirection* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_GlobalLightDirection& from);
  void MergeFrom(const CDOTAUserMsg_GlobalLightDirection& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_GlobalLightDirection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector direction = 1;
  bool has_direction() const;
  void clear_direction();
  static const int kDirectionFieldNumber = 1;
  const ::proto::dota::CMsgVector& direction() const;
  ::proto::dota::CMsgVector* mutable_direction();
  ::proto::dota::CMsgVector* release_direction();
  void set_allocated_direction(::proto::dota::CMsgVector* direction);

  // optional float duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  float duration() const;
  void set_duration(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_GlobalLightDirection)
 private:
  void set_has_direction();
  void clear_has_direction();
  void set_has_duration();
  void clear_has_duration();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* direction_;
  float duration_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_LocationPing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_LocationPing) */ {
 public:
  CDOTAUserMsg_LocationPing();
  virtual ~CDOTAUserMsg_LocationPing();

  CDOTAUserMsg_LocationPing(const CDOTAUserMsg_LocationPing& from);

  inline CDOTAUserMsg_LocationPing& operator=(const CDOTAUserMsg_LocationPing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_LocationPing& default_instance();

  static inline const CDOTAUserMsg_LocationPing* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_LocationPing*>(
               &_CDOTAUserMsg_LocationPing_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CDOTAUserMsg_LocationPing* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_LocationPing* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_LocationPing* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_LocationPing& from);
  void MergeFrom(const CDOTAUserMsg_LocationPing& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_LocationPing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CDOTAMsg_LocationPing location_ping = 2;
  bool has_location_ping() const;
  void clear_location_ping();
  static const int kLocationPingFieldNumber = 2;
  const ::proto::dota::CDOTAMsg_LocationPing& location_ping() const;
  ::proto::dota::CDOTAMsg_LocationPing* mutable_location_ping();
  ::proto::dota::CDOTAMsg_LocationPing* release_location_ping();
  void set_allocated_location_ping(::proto::dota::CDOTAMsg_LocationPing* location_ping);

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_LocationPing)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_location_ping();
  void clear_has_location_ping();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CDOTAMsg_LocationPing* location_ping_;
  ::google::protobuf::uint32 player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ItemAlert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ItemAlert) */ {
 public:
  CDOTAUserMsg_ItemAlert();
  virtual ~CDOTAUserMsg_ItemAlert();

  CDOTAUserMsg_ItemAlert(const CDOTAUserMsg_ItemAlert& from);

  inline CDOTAUserMsg_ItemAlert& operator=(const CDOTAUserMsg_ItemAlert& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ItemAlert& default_instance();

  static inline const CDOTAUserMsg_ItemAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ItemAlert*>(
               &_CDOTAUserMsg_ItemAlert_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CDOTAUserMsg_ItemAlert* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ItemAlert* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ItemAlert* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ItemAlert& from);
  void MergeFrom(const CDOTAUserMsg_ItemAlert& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ItemAlert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CDOTAMsg_ItemAlert item_alert = 2;
  bool has_item_alert() const;
  void clear_item_alert();
  static const int kItemAlertFieldNumber = 2;
  const ::proto::dota::CDOTAMsg_ItemAlert& item_alert() const;
  ::proto::dota::CDOTAMsg_ItemAlert* mutable_item_alert();
  ::proto::dota::CDOTAMsg_ItemAlert* release_item_alert();
  void set_allocated_item_alert(::proto::dota::CDOTAMsg_ItemAlert* item_alert);

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ItemAlert)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_item_alert();
  void clear_has_item_alert();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CDOTAMsg_ItemAlert* item_alert_;
  ::google::protobuf::uint32 player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_EnemyItemAlert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_EnemyItemAlert) */ {
 public:
  CDOTAUserMsg_EnemyItemAlert();
  virtual ~CDOTAUserMsg_EnemyItemAlert();

  CDOTAUserMsg_EnemyItemAlert(const CDOTAUserMsg_EnemyItemAlert& from);

  inline CDOTAUserMsg_EnemyItemAlert& operator=(const CDOTAUserMsg_EnemyItemAlert& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_EnemyItemAlert& default_instance();

  static inline const CDOTAUserMsg_EnemyItemAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_EnemyItemAlert*>(
               &_CDOTAUserMsg_EnemyItemAlert_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CDOTAUserMsg_EnemyItemAlert* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_EnemyItemAlert* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_EnemyItemAlert* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_EnemyItemAlert& from);
  void MergeFrom(const CDOTAUserMsg_EnemyItemAlert& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_EnemyItemAlert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 target_player_id = 2;
  bool has_target_player_id() const;
  void clear_target_player_id();
  static const int kTargetPlayerIdFieldNumber = 2;
  ::google::protobuf::uint32 target_player_id() const;
  void set_target_player_id(::google::protobuf::uint32 value);

  // optional int32 itemid = 3;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 3;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional uint32 rune_type = 4;
  bool has_rune_type() const;
  void clear_rune_type();
  static const int kRuneTypeFieldNumber = 4;
  ::google::protobuf::uint32 rune_type() const;
  void set_rune_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_EnemyItemAlert)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_target_player_id();
  void clear_has_target_player_id();
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_rune_type();
  void clear_has_rune_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 target_player_id_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::uint32 rune_type_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ModifierAlert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ModifierAlert) */ {
 public:
  CDOTAUserMsg_ModifierAlert();
  virtual ~CDOTAUserMsg_ModifierAlert();

  CDOTAUserMsg_ModifierAlert(const CDOTAUserMsg_ModifierAlert& from);

  inline CDOTAUserMsg_ModifierAlert& operator=(const CDOTAUserMsg_ModifierAlert& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ModifierAlert& default_instance();

  static inline const CDOTAUserMsg_ModifierAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ModifierAlert*>(
               &_CDOTAUserMsg_ModifierAlert_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CDOTAUserMsg_ModifierAlert* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ModifierAlert* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ModifierAlert* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ModifierAlert& from);
  void MergeFrom(const CDOTAUserMsg_ModifierAlert& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ModifierAlert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string class_name = 2;
  bool has_class_name() const;
  void clear_class_name();
  static const int kClassNameFieldNumber = 2;
  const ::std::string& class_name() const;
  void set_class_name(const ::std::string& value);
  #if LANG_CXX11
  void set_class_name(::std::string&& value);
  #endif
  void set_class_name(const char* value);
  void set_class_name(const char* value, size_t size);
  ::std::string* mutable_class_name();
  ::std::string* release_class_name();
  void set_allocated_class_name(::std::string* class_name);

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 stack_count = 3;
  bool has_stack_count() const;
  void clear_stack_count();
  static const int kStackCountFieldNumber = 3;
  ::google::protobuf::uint32 stack_count() const;
  void set_stack_count(::google::protobuf::uint32 value);

  // optional bool is_debuff = 4;
  bool has_is_debuff() const;
  void clear_is_debuff();
  static const int kIsDebuffFieldNumber = 4;
  bool is_debuff() const;
  void set_is_debuff(bool value);

  // optional uint32 target_entindex = 5;
  bool has_target_entindex() const;
  void clear_target_entindex();
  static const int kTargetEntindexFieldNumber = 5;
  ::google::protobuf::uint32 target_entindex() const;
  void set_target_entindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ModifierAlert)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_class_name();
  void clear_has_class_name();
  void set_has_stack_count();
  void clear_has_stack_count();
  void set_has_is_debuff();
  void clear_has_is_debuff();
  void set_has_target_entindex();
  void clear_has_target_entindex();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr class_name_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 stack_count_;
  bool is_debuff_;
  ::google::protobuf::uint32 target_entindex_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_HPManaAlert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_HPManaAlert) */ {
 public:
  CDOTAUserMsg_HPManaAlert();
  virtual ~CDOTAUserMsg_HPManaAlert();

  CDOTAUserMsg_HPManaAlert(const CDOTAUserMsg_HPManaAlert& from);

  inline CDOTAUserMsg_HPManaAlert& operator=(const CDOTAUserMsg_HPManaAlert& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_HPManaAlert& default_instance();

  static inline const CDOTAUserMsg_HPManaAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_HPManaAlert*>(
               &_CDOTAUserMsg_HPManaAlert_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CDOTAUserMsg_HPManaAlert* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_HPManaAlert* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_HPManaAlert* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_HPManaAlert& from);
  void MergeFrom(const CDOTAUserMsg_HPManaAlert& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_HPManaAlert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 target_entindex = 2;
  bool has_target_entindex() const;
  void clear_target_entindex();
  static const int kTargetEntindexFieldNumber = 2;
  ::google::protobuf::uint32 target_entindex() const;
  void set_target_entindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_HPManaAlert)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_target_entindex();
  void clear_has_target_entindex();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 target_entindex_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_GlyphAlert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_GlyphAlert) */ {
 public:
  CDOTAUserMsg_GlyphAlert();
  virtual ~CDOTAUserMsg_GlyphAlert();

  CDOTAUserMsg_GlyphAlert(const CDOTAUserMsg_GlyphAlert& from);

  inline CDOTAUserMsg_GlyphAlert& operator=(const CDOTAUserMsg_GlyphAlert& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_GlyphAlert& default_instance();

  static inline const CDOTAUserMsg_GlyphAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_GlyphAlert*>(
               &_CDOTAUserMsg_GlyphAlert_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(CDOTAUserMsg_GlyphAlert* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_GlyphAlert* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_GlyphAlert* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_GlyphAlert& from);
  void MergeFrom(const CDOTAUserMsg_GlyphAlert& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_GlyphAlert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional bool negative = 2;
  bool has_negative() const;
  void clear_negative();
  static const int kNegativeFieldNumber = 2;
  bool negative() const;
  void set_negative(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_GlyphAlert)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_negative();
  void clear_has_negative();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  bool negative_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_WillPurchaseAlert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_WillPurchaseAlert) */ {
 public:
  CDOTAUserMsg_WillPurchaseAlert();
  virtual ~CDOTAUserMsg_WillPurchaseAlert();

  CDOTAUserMsg_WillPurchaseAlert(const CDOTAUserMsg_WillPurchaseAlert& from);

  inline CDOTAUserMsg_WillPurchaseAlert& operator=(const CDOTAUserMsg_WillPurchaseAlert& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_WillPurchaseAlert& default_instance();

  static inline const CDOTAUserMsg_WillPurchaseAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_WillPurchaseAlert*>(
               &_CDOTAUserMsg_WillPurchaseAlert_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CDOTAUserMsg_WillPurchaseAlert* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_WillPurchaseAlert* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_WillPurchaseAlert* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_WillPurchaseAlert& from);
  void MergeFrom(const CDOTAUserMsg_WillPurchaseAlert& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_WillPurchaseAlert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 itemid = 1;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 1;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional int32 player_id = 2;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // optional uint32 gold_remaining = 3;
  bool has_gold_remaining() const;
  void clear_gold_remaining();
  static const int kGoldRemainingFieldNumber = 3;
  ::google::protobuf::uint32 gold_remaining() const;
  void set_gold_remaining(::google::protobuf::uint32 value);

  // optional int32 suggestion_player_id = 4;
  bool has_suggestion_player_id() const;
  void clear_suggestion_player_id();
  static const int kSuggestionPlayerIdFieldNumber = 4;
  ::google::protobuf::int32 suggestion_player_id() const;
  void set_suggestion_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_WillPurchaseAlert)
 private:
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_gold_remaining();
  void clear_has_gold_remaining();
  void set_has_suggestion_player_id();
  void clear_has_suggestion_player_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::uint32 gold_remaining_;
  ::google::protobuf::int32 suggestion_player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_BuyBackStateAlert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_BuyBackStateAlert) */ {
 public:
  CDOTAUserMsg_BuyBackStateAlert();
  virtual ~CDOTAUserMsg_BuyBackStateAlert();

  CDOTAUserMsg_BuyBackStateAlert(const CDOTAUserMsg_BuyBackStateAlert& from);

  inline CDOTAUserMsg_BuyBackStateAlert& operator=(const CDOTAUserMsg_BuyBackStateAlert& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_BuyBackStateAlert& default_instance();

  static inline const CDOTAUserMsg_BuyBackStateAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_BuyBackStateAlert*>(
               &_CDOTAUserMsg_BuyBackStateAlert_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CDOTAUserMsg_BuyBackStateAlert* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_BuyBackStateAlert* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_BuyBackStateAlert* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_BuyBackStateAlert& from);
  void MergeFrom(const CDOTAUserMsg_BuyBackStateAlert& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_BuyBackStateAlert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_BuyBackStateAlert)
 private:
  void set_has_player_id();
  void clear_has_player_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_QuickBuyAlert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_QuickBuyAlert) */ {
 public:
  CDOTAUserMsg_QuickBuyAlert();
  virtual ~CDOTAUserMsg_QuickBuyAlert();

  CDOTAUserMsg_QuickBuyAlert(const CDOTAUserMsg_QuickBuyAlert& from);

  inline CDOTAUserMsg_QuickBuyAlert& operator=(const CDOTAUserMsg_QuickBuyAlert& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_QuickBuyAlert& default_instance();

  static inline const CDOTAUserMsg_QuickBuyAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_QuickBuyAlert*>(
               &_CDOTAUserMsg_QuickBuyAlert_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CDOTAUserMsg_QuickBuyAlert* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_QuickBuyAlert* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_QuickBuyAlert* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_QuickBuyAlert& from);
  void MergeFrom(const CDOTAUserMsg_QuickBuyAlert& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_QuickBuyAlert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // optional int32 itemid = 2;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 2;
  ::google::protobuf::int32 itemid() const;
  void set_itemid(::google::protobuf::int32 value);

  // optional int32 gold_required = 3;
  bool has_gold_required() const;
  void clear_gold_required();
  static const int kGoldRequiredFieldNumber = 3;
  ::google::protobuf::int32 gold_required() const;
  void set_gold_required(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_QuickBuyAlert)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_gold_required();
  void clear_has_gold_required();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 itemid_;
  ::google::protobuf::int32 gold_required_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CourierKilledAlert_LostItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CourierKilledAlert.LostItem) */ {
 public:
  CDOTAUserMsg_CourierKilledAlert_LostItem();
  virtual ~CDOTAUserMsg_CourierKilledAlert_LostItem();

  CDOTAUserMsg_CourierKilledAlert_LostItem(const CDOTAUserMsg_CourierKilledAlert_LostItem& from);

  inline CDOTAUserMsg_CourierKilledAlert_LostItem& operator=(const CDOTAUserMsg_CourierKilledAlert_LostItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CourierKilledAlert_LostItem& default_instance();

  static inline const CDOTAUserMsg_CourierKilledAlert_LostItem* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CourierKilledAlert_LostItem*>(
               &_CDOTAUserMsg_CourierKilledAlert_LostItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(CDOTAUserMsg_CourierKilledAlert_LostItem* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CourierKilledAlert_LostItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CourierKilledAlert_LostItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CourierKilledAlert_LostItem& from);
  void MergeFrom(const CDOTAUserMsg_CourierKilledAlert_LostItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CourierKilledAlert_LostItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 item = 1;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 1;
  ::google::protobuf::int32 item() const;
  void set_item(::google::protobuf::int32 value);

  // optional uint32 quantity = 2;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 2;
  ::google::protobuf::uint32 quantity() const;
  void set_quantity(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CourierKilledAlert.LostItem)
 private:
  void set_has_item();
  void clear_has_item();
  void set_has_quantity();
  void clear_has_quantity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 item_;
  ::google::protobuf::uint32 quantity_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CourierKilledAlert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CourierKilledAlert) */ {
 public:
  CDOTAUserMsg_CourierKilledAlert();
  virtual ~CDOTAUserMsg_CourierKilledAlert();

  CDOTAUserMsg_CourierKilledAlert(const CDOTAUserMsg_CourierKilledAlert& from);

  inline CDOTAUserMsg_CourierKilledAlert& operator=(const CDOTAUserMsg_CourierKilledAlert& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CourierKilledAlert& default_instance();

  static inline const CDOTAUserMsg_CourierKilledAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CourierKilledAlert*>(
               &_CDOTAUserMsg_CourierKilledAlert_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(CDOTAUserMsg_CourierKilledAlert* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CourierKilledAlert* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CourierKilledAlert* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CourierKilledAlert& from);
  void MergeFrom(const CDOTAUserMsg_CourierKilledAlert& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CourierKilledAlert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_CourierKilledAlert_LostItem LostItem;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTAUserMsg_CourierKilledAlert.LostItem lost_items = 5;
  int lost_items_size() const;
  void clear_lost_items();
  static const int kLostItemsFieldNumber = 5;
  const ::proto::dota::CDOTAUserMsg_CourierKilledAlert_LostItem& lost_items(int index) const;
  ::proto::dota::CDOTAUserMsg_CourierKilledAlert_LostItem* mutable_lost_items(int index);
  ::proto::dota::CDOTAUserMsg_CourierKilledAlert_LostItem* add_lost_items();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_CourierKilledAlert_LostItem >*
      mutable_lost_items();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_CourierKilledAlert_LostItem >&
      lost_items() const;

  // optional uint32 team = 1;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 1;
  ::google::protobuf::uint32 team() const;
  void set_team(::google::protobuf::uint32 value);

  // optional uint32 gold_value = 2;
  bool has_gold_value() const;
  void clear_gold_value();
  static const int kGoldValueFieldNumber = 2;
  ::google::protobuf::uint32 gold_value() const;
  void set_gold_value(::google::protobuf::uint32 value);

  // optional int32 entity_handle = 3;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 3;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // optional int32 timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  ::google::protobuf::int32 timestamp() const;
  void set_timestamp(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CourierKilledAlert)
 private:
  void set_has_team();
  void clear_has_team();
  void set_has_gold_value();
  void clear_has_gold_value();
  void set_has_entity_handle();
  void clear_has_entity_handle();
  void set_has_timestamp();
  void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_CourierKilledAlert_LostItem > lost_items_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 gold_value_;
  ::google::protobuf::int32 entity_handle_;
  ::google::protobuf::int32 timestamp_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MinimapEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_MinimapEvent) */ {
 public:
  CDOTAUserMsg_MinimapEvent();
  virtual ~CDOTAUserMsg_MinimapEvent();

  CDOTAUserMsg_MinimapEvent(const CDOTAUserMsg_MinimapEvent& from);

  inline CDOTAUserMsg_MinimapEvent& operator=(const CDOTAUserMsg_MinimapEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_MinimapEvent& default_instance();

  static inline const CDOTAUserMsg_MinimapEvent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MinimapEvent*>(
               &_CDOTAUserMsg_MinimapEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CDOTAUserMsg_MinimapEvent* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MinimapEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_MinimapEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_MinimapEvent& from);
  void MergeFrom(const CDOTAUserMsg_MinimapEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_MinimapEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 event_type = 1;
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  ::google::protobuf::int32 event_type() const;
  void set_event_type(::google::protobuf::int32 value);

  // optional int32 entity_handle = 2;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 2;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // optional int32 x = 3;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 3;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 4;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 4;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // optional int32 duration = 5;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 5;
  ::google::protobuf::int32 duration() const;
  void set_duration(::google::protobuf::int32 value);

  // optional int32 target_entity_handle = 6;
  bool has_target_entity_handle() const;
  void clear_target_entity_handle();
  static const int kTargetEntityHandleFieldNumber = 6;
  ::google::protobuf::int32 target_entity_handle() const;
  void set_target_entity_handle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_MinimapEvent)
 private:
  void set_has_event_type();
  void clear_has_event_type();
  void set_has_entity_handle();
  void clear_has_entity_handle();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_duration();
  void clear_has_duration();
  void set_has_target_entity_handle();
  void clear_has_target_entity_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 event_type_;
  ::google::protobuf::int32 entity_handle_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 duration_;
  ::google::protobuf::int32 target_entity_handle_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MapLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_MapLine) */ {
 public:
  CDOTAUserMsg_MapLine();
  virtual ~CDOTAUserMsg_MapLine();

  CDOTAUserMsg_MapLine(const CDOTAUserMsg_MapLine& from);

  inline CDOTAUserMsg_MapLine& operator=(const CDOTAUserMsg_MapLine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_MapLine& default_instance();

  static inline const CDOTAUserMsg_MapLine* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MapLine*>(
               &_CDOTAUserMsg_MapLine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CDOTAUserMsg_MapLine* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MapLine* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_MapLine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_MapLine& from);
  void MergeFrom(const CDOTAUserMsg_MapLine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_MapLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CDOTAMsg_MapLine mapline = 2;
  bool has_mapline() const;
  void clear_mapline();
  static const int kMaplineFieldNumber = 2;
  const ::proto::dota::CDOTAMsg_MapLine& mapline() const;
  ::proto::dota::CDOTAMsg_MapLine* mutable_mapline();
  ::proto::dota::CDOTAMsg_MapLine* release_mapline();
  void set_allocated_mapline(::proto::dota::CDOTAMsg_MapLine* mapline);

  // optional int32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_MapLine)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_mapline();
  void clear_has_mapline();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CDOTAMsg_MapLine* mapline_;
  ::google::protobuf::int32 player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MinimapDebugPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_MinimapDebugPoint) */ {
 public:
  CDOTAUserMsg_MinimapDebugPoint();
  virtual ~CDOTAUserMsg_MinimapDebugPoint();

  CDOTAUserMsg_MinimapDebugPoint(const CDOTAUserMsg_MinimapDebugPoint& from);

  inline CDOTAUserMsg_MinimapDebugPoint& operator=(const CDOTAUserMsg_MinimapDebugPoint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_MinimapDebugPoint& default_instance();

  static inline const CDOTAUserMsg_MinimapDebugPoint* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MinimapDebugPoint*>(
               &_CDOTAUserMsg_MinimapDebugPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(CDOTAUserMsg_MinimapDebugPoint* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MinimapDebugPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_MinimapDebugPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_MinimapDebugPoint& from);
  void MergeFrom(const CDOTAUserMsg_MinimapDebugPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_MinimapDebugPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector location = 1;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 1;
  const ::proto::dota::CMsgVector& location() const;
  ::proto::dota::CMsgVector* mutable_location();
  ::proto::dota::CMsgVector* release_location();
  void set_allocated_location(::proto::dota::CMsgVector* location);

  // optional uint32 color = 2;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 2;
  ::google::protobuf::uint32 color() const;
  void set_color(::google::protobuf::uint32 value);

  // optional int32 size = 3;
  bool has_size() const;
  void clear_size();
  static const int kSizeFieldNumber = 3;
  ::google::protobuf::int32 size() const;
  void set_size(::google::protobuf::int32 value);

  // optional float duration = 4;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 4;
  float duration() const;
  void set_duration(float value);

  // optional int32 index = 5;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 5;
  ::google::protobuf::int32 index() const;
  void set_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_MinimapDebugPoint)
 private:
  void set_has_location();
  void clear_has_location();
  void set_has_color();
  void clear_has_color();
  void set_has_size();
  void clear_has_size();
  void set_has_duration();
  void clear_has_duration();
  void set_has_index();
  void clear_has_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* location_;
  ::google::protobuf::uint32 color_;
  ::google::protobuf::int32 size_;
  float duration_;
  ::google::protobuf::int32 index_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CreateLinearProjectile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CreateLinearProjectile) */ {
 public:
  CDOTAUserMsg_CreateLinearProjectile();
  virtual ~CDOTAUserMsg_CreateLinearProjectile();

  CDOTAUserMsg_CreateLinearProjectile(const CDOTAUserMsg_CreateLinearProjectile& from);

  inline CDOTAUserMsg_CreateLinearProjectile& operator=(const CDOTAUserMsg_CreateLinearProjectile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CreateLinearProjectile& default_instance();

  static inline const CDOTAUserMsg_CreateLinearProjectile* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CreateLinearProjectile*>(
               &_CDOTAUserMsg_CreateLinearProjectile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(CDOTAUserMsg_CreateLinearProjectile* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CreateLinearProjectile* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CreateLinearProjectile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CreateLinearProjectile& from);
  void MergeFrom(const CDOTAUserMsg_CreateLinearProjectile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CreateLinearProjectile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector origin = 1;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 1;
  const ::proto::dota::CMsgVector& origin() const;
  ::proto::dota::CMsgVector* mutable_origin();
  ::proto::dota::CMsgVector* release_origin();
  void set_allocated_origin(::proto::dota::CMsgVector* origin);

  // optional .proto.dota.CMsgVector2D velocity = 2;
  bool has_velocity() const;
  void clear_velocity();
  static const int kVelocityFieldNumber = 2;
  const ::proto::dota::CMsgVector2D& velocity() const;
  ::proto::dota::CMsgVector2D* mutable_velocity();
  ::proto::dota::CMsgVector2D* release_velocity();
  void set_allocated_velocity(::proto::dota::CMsgVector2D* velocity);

  // optional .proto.dota.CMsgVector2D acceleration = 7;
  bool has_acceleration() const;
  void clear_acceleration();
  static const int kAccelerationFieldNumber = 7;
  const ::proto::dota::CMsgVector2D& acceleration() const;
  ::proto::dota::CMsgVector2D* mutable_acceleration();
  ::proto::dota::CMsgVector2D* release_acceleration();
  void set_allocated_acceleration(::proto::dota::CMsgVector2D* acceleration);

  // optional uint64 particle_index = 5;
  bool has_particle_index() const;
  void clear_particle_index();
  static const int kParticleIndexFieldNumber = 5;
  ::google::protobuf::uint64 particle_index() const;
  void set_particle_index(::google::protobuf::uint64 value);

  // optional int32 entindex = 4;
  bool has_entindex() const;
  void clear_entindex();
  static const int kEntindexFieldNumber = 4;
  ::google::protobuf::int32 entindex() const;
  void set_entindex(::google::protobuf::int32 value);

  // optional int32 handle = 6;
  bool has_handle() const;
  void clear_handle();
  static const int kHandleFieldNumber = 6;
  ::google::protobuf::int32 handle() const;
  void set_handle(::google::protobuf::int32 value);

  // optional float max_speed = 8;
  bool has_max_speed() const;
  void clear_max_speed();
  static const int kMaxSpeedFieldNumber = 8;
  float max_speed() const;
  void set_max_speed(float value);

  // optional float fow_radius = 9;
  bool has_fow_radius() const;
  void clear_fow_radius();
  static const int kFowRadiusFieldNumber = 9;
  float fow_radius() const;
  void set_fow_radius(float value);

  // optional bool sticky_fow_reveal = 10;
  bool has_sticky_fow_reveal() const;
  void clear_sticky_fow_reveal();
  static const int kStickyFowRevealFieldNumber = 10;
  bool sticky_fow_reveal() const;
  void set_sticky_fow_reveal(bool value);

  // optional float distance = 11;
  bool has_distance() const;
  void clear_distance();
  static const int kDistanceFieldNumber = 11;
  float distance() const;
  void set_distance(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CreateLinearProjectile)
 private:
  void set_has_origin();
  void clear_has_origin();
  void set_has_velocity();
  void clear_has_velocity();
  void set_has_entindex();
  void clear_has_entindex();
  void set_has_particle_index();
  void clear_has_particle_index();
  void set_has_handle();
  void clear_has_handle();
  void set_has_acceleration();
  void clear_has_acceleration();
  void set_has_max_speed();
  void clear_has_max_speed();
  void set_has_fow_radius();
  void clear_has_fow_radius();
  void set_has_sticky_fow_reveal();
  void clear_has_sticky_fow_reveal();
  void set_has_distance();
  void clear_has_distance();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* origin_;
  ::proto::dota::CMsgVector2D* velocity_;
  ::proto::dota::CMsgVector2D* acceleration_;
  ::google::protobuf::uint64 particle_index_;
  ::google::protobuf::int32 entindex_;
  ::google::protobuf::int32 handle_;
  float max_speed_;
  float fow_radius_;
  bool sticky_fow_reveal_;
  float distance_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_DestroyLinearProjectile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_DestroyLinearProjectile) */ {
 public:
  CDOTAUserMsg_DestroyLinearProjectile();
  virtual ~CDOTAUserMsg_DestroyLinearProjectile();

  CDOTAUserMsg_DestroyLinearProjectile(const CDOTAUserMsg_DestroyLinearProjectile& from);

  inline CDOTAUserMsg_DestroyLinearProjectile& operator=(const CDOTAUserMsg_DestroyLinearProjectile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_DestroyLinearProjectile& default_instance();

  static inline const CDOTAUserMsg_DestroyLinearProjectile* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_DestroyLinearProjectile*>(
               &_CDOTAUserMsg_DestroyLinearProjectile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CDOTAUserMsg_DestroyLinearProjectile* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_DestroyLinearProjectile* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_DestroyLinearProjectile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_DestroyLinearProjectile& from);
  void MergeFrom(const CDOTAUserMsg_DestroyLinearProjectile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_DestroyLinearProjectile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 handle = 1;
  bool has_handle() const;
  void clear_handle();
  static const int kHandleFieldNumber = 1;
  ::google::protobuf::int32 handle() const;
  void set_handle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_DestroyLinearProjectile)
 private:
  void set_has_handle();
  void clear_has_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 handle_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_DodgeTrackingProjectiles : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_DodgeTrackingProjectiles) */ {
 public:
  CDOTAUserMsg_DodgeTrackingProjectiles();
  virtual ~CDOTAUserMsg_DodgeTrackingProjectiles();

  CDOTAUserMsg_DodgeTrackingProjectiles(const CDOTAUserMsg_DodgeTrackingProjectiles& from);

  inline CDOTAUserMsg_DodgeTrackingProjectiles& operator=(const CDOTAUserMsg_DodgeTrackingProjectiles& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_DodgeTrackingProjectiles& default_instance();

  static inline const CDOTAUserMsg_DodgeTrackingProjectiles* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_DodgeTrackingProjectiles*>(
               &_CDOTAUserMsg_DodgeTrackingProjectiles_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(CDOTAUserMsg_DodgeTrackingProjectiles* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_DodgeTrackingProjectiles* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_DodgeTrackingProjectiles* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_DodgeTrackingProjectiles& from);
  void MergeFrom(const CDOTAUserMsg_DodgeTrackingProjectiles& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_DodgeTrackingProjectiles* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 entindex = 1;
  bool has_entindex() const;
  void clear_entindex();
  static const int kEntindexFieldNumber = 1;
  ::google::protobuf::int32 entindex() const;
  void set_entindex(::google::protobuf::int32 value);

  // optional bool attacks_only = 2;
  bool has_attacks_only() const;
  void clear_attacks_only();
  static const int kAttacksOnlyFieldNumber = 2;
  bool attacks_only() const;
  void set_attacks_only(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_DodgeTrackingProjectiles)
 private:
  void set_has_entindex();
  void clear_has_entindex();
  void set_has_attacks_only();
  void clear_has_attacks_only();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 entindex_;
  bool attacks_only_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SpectatorPlayerClick : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SpectatorPlayerClick) */ {
 public:
  CDOTAUserMsg_SpectatorPlayerClick();
  virtual ~CDOTAUserMsg_SpectatorPlayerClick();

  CDOTAUserMsg_SpectatorPlayerClick(const CDOTAUserMsg_SpectatorPlayerClick& from);

  inline CDOTAUserMsg_SpectatorPlayerClick& operator=(const CDOTAUserMsg_SpectatorPlayerClick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SpectatorPlayerClick& default_instance();

  static inline const CDOTAUserMsg_SpectatorPlayerClick* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SpectatorPlayerClick*>(
               &_CDOTAUserMsg_SpectatorPlayerClick_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(CDOTAUserMsg_SpectatorPlayerClick* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SpectatorPlayerClick* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SpectatorPlayerClick* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SpectatorPlayerClick& from);
  void MergeFrom(const CDOTAUserMsg_SpectatorPlayerClick& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SpectatorPlayerClick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 entindex = 1;
  bool has_entindex() const;
  void clear_entindex();
  static const int kEntindexFieldNumber = 1;
  ::google::protobuf::int32 entindex() const;
  void set_entindex(::google::protobuf::int32 value);

  // optional int32 order_type = 2;
  bool has_order_type() const;
  void clear_order_type();
  static const int kOrderTypeFieldNumber = 2;
  ::google::protobuf::int32 order_type() const;
  void set_order_type(::google::protobuf::int32 value);

  // optional int32 target_index = 3;
  bool has_target_index() const;
  void clear_target_index();
  static const int kTargetIndexFieldNumber = 3;
  ::google::protobuf::int32 target_index() const;
  void set_target_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SpectatorPlayerClick)
 private:
  void set_has_entindex();
  void clear_has_entindex();
  void set_has_order_type();
  void clear_has_order_type();
  void set_has_target_index();
  void clear_has_target_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 entindex_;
  ::google::protobuf::int32 order_type_;
  ::google::protobuf::int32 target_index_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SpectatorPlayerUnitOrders : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders) */ {
 public:
  CDOTAUserMsg_SpectatorPlayerUnitOrders();
  virtual ~CDOTAUserMsg_SpectatorPlayerUnitOrders();

  CDOTAUserMsg_SpectatorPlayerUnitOrders(const CDOTAUserMsg_SpectatorPlayerUnitOrders& from);

  inline CDOTAUserMsg_SpectatorPlayerUnitOrders& operator=(const CDOTAUserMsg_SpectatorPlayerUnitOrders& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SpectatorPlayerUnitOrders& default_instance();

  static inline const CDOTAUserMsg_SpectatorPlayerUnitOrders* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SpectatorPlayerUnitOrders*>(
               &_CDOTAUserMsg_SpectatorPlayerUnitOrders_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(CDOTAUserMsg_SpectatorPlayerUnitOrders* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SpectatorPlayerUnitOrders* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SpectatorPlayerUnitOrders* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SpectatorPlayerUnitOrders& from);
  void MergeFrom(const CDOTAUserMsg_SpectatorPlayerUnitOrders& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SpectatorPlayerUnitOrders* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 units = 3;
  int units_size() const;
  void clear_units();
  static const int kUnitsFieldNumber = 3;
  ::google::protobuf::int32 units(int index) const;
  void set_units(int index, ::google::protobuf::int32 value);
  void add_units(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      units() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_units();

  // optional .proto.dota.CMsgVector position = 6;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 6;
  const ::proto::dota::CMsgVector& position() const;
  ::proto::dota::CMsgVector* mutable_position();
  ::proto::dota::CMsgVector* release_position();
  void set_allocated_position(::proto::dota::CMsgVector* position);

  // optional int32 entindex = 1;
  bool has_entindex() const;
  void clear_entindex();
  static const int kEntindexFieldNumber = 1;
  ::google::protobuf::int32 entindex() const;
  void set_entindex(::google::protobuf::int32 value);

  // optional int32 order_type = 2;
  bool has_order_type() const;
  void clear_order_type();
  static const int kOrderTypeFieldNumber = 2;
  ::google::protobuf::int32 order_type() const;
  void set_order_type(::google::protobuf::int32 value);

  // optional int32 target_index = 4;
  bool has_target_index() const;
  void clear_target_index();
  static const int kTargetIndexFieldNumber = 4;
  ::google::protobuf::int32 target_index() const;
  void set_target_index(::google::protobuf::int32 value);

  // optional int32 ability_index = 5;
  bool has_ability_index() const;
  void clear_ability_index();
  static const int kAbilityIndexFieldNumber = 5;
  ::google::protobuf::int32 ability_index() const;
  void set_ability_index(::google::protobuf::int32 value);

  // optional bool queue = 7;
  bool has_queue() const;
  void clear_queue();
  static const int kQueueFieldNumber = 7;
  bool queue() const;
  void set_queue(bool value);

  // optional int32 sequence_number = 8;
  bool has_sequence_number() const;
  void clear_sequence_number();
  static const int kSequenceNumberFieldNumber = 8;
  ::google::protobuf::int32 sequence_number() const;
  void set_sequence_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders)
 private:
  void set_has_entindex();
  void clear_has_entindex();
  void set_has_order_type();
  void clear_has_order_type();
  void set_has_target_index();
  void clear_has_target_index();
  void set_has_ability_index();
  void clear_has_ability_index();
  void set_has_position();
  void clear_has_position();
  void set_has_queue();
  void clear_has_queue();
  void set_has_sequence_number();
  void clear_has_sequence_number();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > units_;
  ::proto::dota::CMsgVector* position_;
  ::google::protobuf::int32 entindex_;
  ::google::protobuf::int32 order_type_;
  ::google::protobuf::int32 target_index_;
  ::google::protobuf::int32 ability_index_;
  bool queue_;
  ::google::protobuf::int32 sequence_number_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_NevermoreRequiem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_NevermoreRequiem) */ {
 public:
  CDOTAUserMsg_NevermoreRequiem();
  virtual ~CDOTAUserMsg_NevermoreRequiem();

  CDOTAUserMsg_NevermoreRequiem(const CDOTAUserMsg_NevermoreRequiem& from);

  inline CDOTAUserMsg_NevermoreRequiem& operator=(const CDOTAUserMsg_NevermoreRequiem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_NevermoreRequiem& default_instance();

  static inline const CDOTAUserMsg_NevermoreRequiem* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_NevermoreRequiem*>(
               &_CDOTAUserMsg_NevermoreRequiem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(CDOTAUserMsg_NevermoreRequiem* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_NevermoreRequiem* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_NevermoreRequiem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_NevermoreRequiem& from);
  void MergeFrom(const CDOTAUserMsg_NevermoreRequiem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_NevermoreRequiem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector origin = 3;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 3;
  const ::proto::dota::CMsgVector& origin() const;
  ::proto::dota::CMsgVector* mutable_origin();
  ::proto::dota::CMsgVector* release_origin();
  void set_allocated_origin(::proto::dota::CMsgVector* origin);

  // optional int32 entity_handle = 1;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 1;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // optional int32 lines = 2;
  bool has_lines() const;
  void clear_lines();
  static const int kLinesFieldNumber = 2;
  ::google::protobuf::int32 lines() const;
  void set_lines(::google::protobuf::int32 value);

  // optional bool reverse = 4;
  bool has_reverse() const;
  void clear_reverse();
  static const int kReverseFieldNumber = 4;
  bool reverse() const;
  void set_reverse(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_NevermoreRequiem)
 private:
  void set_has_entity_handle();
  void clear_has_entity_handle();
  void set_has_lines();
  void clear_has_lines();
  void set_has_origin();
  void clear_has_origin();
  void set_has_reverse();
  void clear_has_reverse();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* origin_;
  ::google::protobuf::int32 entity_handle_;
  ::google::protobuf::int32 lines_;
  bool reverse_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_InvalidCommand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_InvalidCommand) */ {
 public:
  CDOTAUserMsg_InvalidCommand();
  virtual ~CDOTAUserMsg_InvalidCommand();

  CDOTAUserMsg_InvalidCommand(const CDOTAUserMsg_InvalidCommand& from);

  inline CDOTAUserMsg_InvalidCommand& operator=(const CDOTAUserMsg_InvalidCommand& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_InvalidCommand& default_instance();

  static inline const CDOTAUserMsg_InvalidCommand* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_InvalidCommand*>(
               &_CDOTAUserMsg_InvalidCommand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(CDOTAUserMsg_InvalidCommand* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_InvalidCommand* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_InvalidCommand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_InvalidCommand& from);
  void MergeFrom(const CDOTAUserMsg_InvalidCommand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_InvalidCommand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_InvalidCommand)
 private:
  void set_has_message();
  void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_HudError : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_HudError) */ {
 public:
  CDOTAUserMsg_HudError();
  virtual ~CDOTAUserMsg_HudError();

  CDOTAUserMsg_HudError(const CDOTAUserMsg_HudError& from);

  inline CDOTAUserMsg_HudError& operator=(const CDOTAUserMsg_HudError& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_HudError& default_instance();

  static inline const CDOTAUserMsg_HudError* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_HudError*>(
               &_CDOTAUserMsg_HudError_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(CDOTAUserMsg_HudError* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_HudError* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_HudError* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_HudError& from);
  void MergeFrom(const CDOTAUserMsg_HudError& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_HudError* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 order_id = 1;
  bool has_order_id() const;
  void clear_order_id();
  static const int kOrderIdFieldNumber = 1;
  ::google::protobuf::int32 order_id() const;
  void set_order_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_HudError)
 private:
  void set_has_order_id();
  void clear_has_order_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 order_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SharedCooldown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SharedCooldown) */ {
 public:
  CDOTAUserMsg_SharedCooldown();
  virtual ~CDOTAUserMsg_SharedCooldown();

  CDOTAUserMsg_SharedCooldown(const CDOTAUserMsg_SharedCooldown& from);

  inline CDOTAUserMsg_SharedCooldown& operator=(const CDOTAUserMsg_SharedCooldown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SharedCooldown& default_instance();

  static inline const CDOTAUserMsg_SharedCooldown* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SharedCooldown*>(
               &_CDOTAUserMsg_SharedCooldown_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(CDOTAUserMsg_SharedCooldown* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SharedCooldown* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SharedCooldown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SharedCooldown& from);
  void MergeFrom(const CDOTAUserMsg_SharedCooldown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SharedCooldown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 entindex = 1;
  bool has_entindex() const;
  void clear_entindex();
  static const int kEntindexFieldNumber = 1;
  ::google::protobuf::int32 entindex() const;
  void set_entindex(::google::protobuf::int32 value);

  // optional float cooldown = 3;
  bool has_cooldown() const;
  void clear_cooldown();
  static const int kCooldownFieldNumber = 3;
  float cooldown() const;
  void set_cooldown(float value);

  // optional int32 name_index = 4;
  bool has_name_index() const;
  void clear_name_index();
  static const int kNameIndexFieldNumber = 4;
  ::google::protobuf::int32 name_index() const;
  void set_name_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SharedCooldown)
 private:
  void set_has_entindex();
  void clear_has_entindex();
  void set_has_name();
  void clear_has_name();
  void set_has_cooldown();
  void clear_has_cooldown();
  void set_has_name_index();
  void clear_has_name_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 entindex_;
  float cooldown_;
  ::google::protobuf::int32 name_index_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SetNextAutobuyItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SetNextAutobuyItem) */ {
 public:
  CDOTAUserMsg_SetNextAutobuyItem();
  virtual ~CDOTAUserMsg_SetNextAutobuyItem();

  CDOTAUserMsg_SetNextAutobuyItem(const CDOTAUserMsg_SetNextAutobuyItem& from);

  inline CDOTAUserMsg_SetNextAutobuyItem& operator=(const CDOTAUserMsg_SetNextAutobuyItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SetNextAutobuyItem& default_instance();

  static inline const CDOTAUserMsg_SetNextAutobuyItem* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SetNextAutobuyItem*>(
               &_CDOTAUserMsg_SetNextAutobuyItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(CDOTAUserMsg_SetNextAutobuyItem* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SetNextAutobuyItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SetNextAutobuyItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SetNextAutobuyItem& from);
  void MergeFrom(const CDOTAUserMsg_SetNextAutobuyItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SetNextAutobuyItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SetNextAutobuyItem)
 private:
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_HalloweenDrops : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_HalloweenDrops) */ {
 public:
  CDOTAUserMsg_HalloweenDrops();
  virtual ~CDOTAUserMsg_HalloweenDrops();

  CDOTAUserMsg_HalloweenDrops(const CDOTAUserMsg_HalloweenDrops& from);

  inline CDOTAUserMsg_HalloweenDrops& operator=(const CDOTAUserMsg_HalloweenDrops& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_HalloweenDrops& default_instance();

  static inline const CDOTAUserMsg_HalloweenDrops* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_HalloweenDrops*>(
               &_CDOTAUserMsg_HalloweenDrops_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(CDOTAUserMsg_HalloweenDrops* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_HalloweenDrops* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_HalloweenDrops* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_HalloweenDrops& from);
  void MergeFrom(const CDOTAUserMsg_HalloweenDrops& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_HalloweenDrops* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 item_defs = 1;
  int item_defs_size() const;
  void clear_item_defs();
  static const int kItemDefsFieldNumber = 1;
  ::google::protobuf::uint32 item_defs(int index) const;
  void set_item_defs(int index, ::google::protobuf::uint32 value);
  void add_item_defs(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      item_defs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_item_defs();

  // repeated uint32 player_ids = 2;
  int player_ids_size() const;
  void clear_player_ids();
  static const int kPlayerIdsFieldNumber = 2;
  ::google::protobuf::uint32 player_ids(int index) const;
  void set_player_ids(int index, ::google::protobuf::uint32 value);
  void add_player_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      player_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_player_ids();

  // optional uint32 prize_list = 3;
  bool has_prize_list() const;
  void clear_prize_list();
  static const int kPrizeListFieldNumber = 3;
  ::google::protobuf::uint32 prize_list() const;
  void set_prize_list(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_HalloweenDrops)
 private:
  void set_has_prize_list();
  void clear_has_prize_list();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > item_defs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > player_ids_;
  ::google::protobuf::uint32 prize_list_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_PredictionResult_Prediction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_PredictionResult.Prediction) */ {
 public:
  CDOTAUserMsg_PredictionResult_Prediction();
  virtual ~CDOTAUserMsg_PredictionResult_Prediction();

  CDOTAUserMsg_PredictionResult_Prediction(const CDOTAUserMsg_PredictionResult_Prediction& from);

  inline CDOTAUserMsg_PredictionResult_Prediction& operator=(const CDOTAUserMsg_PredictionResult_Prediction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_PredictionResult_Prediction& default_instance();

  static inline const CDOTAUserMsg_PredictionResult_Prediction* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_PredictionResult_Prediction*>(
               &_CDOTAUserMsg_PredictionResult_Prediction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(CDOTAUserMsg_PredictionResult_Prediction* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_PredictionResult_Prediction* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_PredictionResult_Prediction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_PredictionResult_Prediction& from);
  void MergeFrom(const CDOTAUserMsg_PredictionResult_Prediction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_PredictionResult_Prediction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_PredictionResult_Prediction_EResult EResult;
  static const EResult k_eResult_ItemGranted =
    CDOTAUserMsg_PredictionResult_Prediction_EResult_k_eResult_ItemGranted;
  static const EResult k_eResult_Destroyed =
    CDOTAUserMsg_PredictionResult_Prediction_EResult_k_eResult_Destroyed;
  static inline bool EResult_IsValid(int value) {
    return CDOTAUserMsg_PredictionResult_Prediction_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CDOTAUserMsg_PredictionResult_Prediction_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CDOTAUserMsg_PredictionResult_Prediction_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CDOTAUserMsg_PredictionResult_Prediction_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CDOTAUserMsg_PredictionResult_Prediction_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint32 granted_item_defs = 6;
  int granted_item_defs_size() const;
  void clear_granted_item_defs();
  static const int kGrantedItemDefsFieldNumber = 6;
  ::google::protobuf::uint32 granted_item_defs(int index) const;
  void set_granted_item_defs(int index, ::google::protobuf::uint32 value);
  void add_granted_item_defs(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      granted_item_defs() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_granted_item_defs();

  // optional uint32 item_def = 1;
  bool has_item_def() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 1;
  ::google::protobuf::uint32 item_def() const;
  void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 num_correct = 2;
  bool has_num_correct() const;
  void clear_num_correct();
  static const int kNumCorrectFieldNumber = 2;
  ::google::protobuf::uint32 num_correct() const;
  void set_num_correct(::google::protobuf::uint32 value);

  // optional uint32 num_fails = 3;
  bool has_num_fails() const;
  void clear_num_fails();
  static const int kNumFailsFieldNumber = 3;
  ::google::protobuf::uint32 num_fails() const;
  void set_num_fails(::google::protobuf::uint32 value);

  // optional .proto.dota.CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 4;
  ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction_EResult result() const;
  void set_result(::proto::dota::CDOTAUserMsg_PredictionResult_Prediction_EResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_PredictionResult.Prediction)
 private:
  void set_has_item_def();
  void clear_has_item_def();
  void set_has_num_correct();
  void clear_has_num_correct();
  void set_has_num_fails();
  void clear_has_num_fails();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > granted_item_defs_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 num_correct_;
  ::google::protobuf::uint32 num_fails_;
  int result_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_PredictionResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_PredictionResult) */ {
 public:
  CDOTAUserMsg_PredictionResult();
  virtual ~CDOTAUserMsg_PredictionResult();

  CDOTAUserMsg_PredictionResult(const CDOTAUserMsg_PredictionResult& from);

  inline CDOTAUserMsg_PredictionResult& operator=(const CDOTAUserMsg_PredictionResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_PredictionResult& default_instance();

  static inline const CDOTAUserMsg_PredictionResult* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_PredictionResult*>(
               &_CDOTAUserMsg_PredictionResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(CDOTAUserMsg_PredictionResult* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_PredictionResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_PredictionResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_PredictionResult& from);
  void MergeFrom(const CDOTAUserMsg_PredictionResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_PredictionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_PredictionResult_Prediction Prediction;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTAUserMsg_PredictionResult.Prediction predictions = 4;
  int predictions_size() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 4;
  const ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction& predictions(int index) const;
  ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction* mutable_predictions(int index);
  ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction* add_predictions();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction >*
      mutable_predictions();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction >&
      predictions() const;

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional bool correct = 3;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 3;
  bool correct() const;
  void set_correct(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_PredictionResult)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_correct();
  void clear_has_correct();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction > predictions_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  bool correct_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAResponseQuerySerialized_Fact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAResponseQuerySerialized.Fact) */ {
 public:
  CDOTAResponseQuerySerialized_Fact();
  virtual ~CDOTAResponseQuerySerialized_Fact();

  CDOTAResponseQuerySerialized_Fact(const CDOTAResponseQuerySerialized_Fact& from);

  inline CDOTAResponseQuerySerialized_Fact& operator=(const CDOTAResponseQuerySerialized_Fact& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAResponseQuerySerialized_Fact& default_instance();

  static inline const CDOTAResponseQuerySerialized_Fact* internal_default_instance() {
    return reinterpret_cast<const CDOTAResponseQuerySerialized_Fact*>(
               &_CDOTAResponseQuerySerialized_Fact_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(CDOTAResponseQuerySerialized_Fact* other);

  // implements Message ----------------------------------------------

  inline CDOTAResponseQuerySerialized_Fact* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAResponseQuerySerialized_Fact* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAResponseQuerySerialized_Fact& from);
  void MergeFrom(const CDOTAResponseQuerySerialized_Fact& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAResponseQuerySerialized_Fact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDOTAResponseQuerySerialized_Fact_ValueType ValueType;
  static const ValueType NUMERIC =
    CDOTAResponseQuerySerialized_Fact_ValueType_NUMERIC;
  static const ValueType STRING =
    CDOTAResponseQuerySerialized_Fact_ValueType_STRING;
  static inline bool ValueType_IsValid(int value) {
    return CDOTAResponseQuerySerialized_Fact_ValueType_IsValid(value);
  }
  static const ValueType ValueType_MIN =
    CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_MIN;
  static const ValueType ValueType_MAX =
    CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_MAX;
  static const int ValueType_ARRAYSIZE =
    CDOTAResponseQuerySerialized_Fact_ValueType_ValueType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ValueType_descriptor() {
    return CDOTAResponseQuerySerialized_Fact_ValueType_descriptor();
  }
  static inline const ::std::string& ValueType_Name(ValueType value) {
    return CDOTAResponseQuerySerialized_Fact_ValueType_Name(value);
  }
  static inline bool ValueType_Parse(const ::std::string& name,
      ValueType* value) {
    return CDOTAResponseQuerySerialized_Fact_ValueType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string val_string = 4;
  bool has_val_string() const;
  void clear_val_string();
  static const int kValStringFieldNumber = 4;
  const ::std::string& val_string() const;
  void set_val_string(const ::std::string& value);
  #if LANG_CXX11
  void set_val_string(::std::string&& value);
  #endif
  void set_val_string(const char* value);
  void set_val_string(const char* value, size_t size);
  ::std::string* mutable_val_string();
  ::std::string* release_val_string();
  void set_allocated_val_string(::std::string* val_string);

  // required int32 key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  ::google::protobuf::int32 key() const;
  void set_key(::google::protobuf::int32 value);

  // optional float val_numeric = 3;
  bool has_val_numeric() const;
  void clear_val_numeric();
  static const int kValNumericFieldNumber = 3;
  float val_numeric() const;
  void set_val_numeric(float value);

  // required .proto.dota.CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];
  bool has_valtype() const;
  void clear_valtype();
  static const int kValtypeFieldNumber = 2;
  ::proto::dota::CDOTAResponseQuerySerialized_Fact_ValueType valtype() const;
  void set_valtype(::proto::dota::CDOTAResponseQuerySerialized_Fact_ValueType value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAResponseQuerySerialized.Fact)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_valtype();
  void clear_has_valtype();
  void set_has_val_numeric();
  void clear_has_val_numeric();
  void set_has_val_string();
  void clear_has_val_string();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr val_string_;
  ::google::protobuf::int32 key_;
  float val_numeric_;
  int valtype_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAResponseQuerySerialized : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAResponseQuerySerialized) */ {
 public:
  CDOTAResponseQuerySerialized();
  virtual ~CDOTAResponseQuerySerialized();

  CDOTAResponseQuerySerialized(const CDOTAResponseQuerySerialized& from);

  inline CDOTAResponseQuerySerialized& operator=(const CDOTAResponseQuerySerialized& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAResponseQuerySerialized& default_instance();

  static inline const CDOTAResponseQuerySerialized* internal_default_instance() {
    return reinterpret_cast<const CDOTAResponseQuerySerialized*>(
               &_CDOTAResponseQuerySerialized_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(CDOTAResponseQuerySerialized* other);

  // implements Message ----------------------------------------------

  inline CDOTAResponseQuerySerialized* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAResponseQuerySerialized* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAResponseQuerySerialized& from);
  void MergeFrom(const CDOTAResponseQuerySerialized& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAResponseQuerySerialized* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDOTAResponseQuerySerialized_Fact Fact;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTAResponseQuerySerialized.Fact facts = 1;
  int facts_size() const;
  void clear_facts();
  static const int kFactsFieldNumber = 1;
  const ::proto::dota::CDOTAResponseQuerySerialized_Fact& facts(int index) const;
  ::proto::dota::CDOTAResponseQuerySerialized_Fact* mutable_facts(int index);
  ::proto::dota::CDOTAResponseQuerySerialized_Fact* add_facts();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAResponseQuerySerialized_Fact >*
      mutable_facts();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAResponseQuerySerialized_Fact >&
      facts() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAResponseQuerySerialized)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAResponseQuerySerialized_Fact > facts_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTASpeechMatchOnClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTASpeechMatchOnClient) */ {
 public:
  CDOTASpeechMatchOnClient();
  virtual ~CDOTASpeechMatchOnClient();

  CDOTASpeechMatchOnClient(const CDOTASpeechMatchOnClient& from);

  inline CDOTASpeechMatchOnClient& operator=(const CDOTASpeechMatchOnClient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTASpeechMatchOnClient& default_instance();

  static inline const CDOTASpeechMatchOnClient* internal_default_instance() {
    return reinterpret_cast<const CDOTASpeechMatchOnClient*>(
               &_CDOTASpeechMatchOnClient_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(CDOTASpeechMatchOnClient* other);

  // implements Message ----------------------------------------------

  inline CDOTASpeechMatchOnClient* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTASpeechMatchOnClient* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTASpeechMatchOnClient& from);
  void MergeFrom(const CDOTASpeechMatchOnClient& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTASpeechMatchOnClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CDOTAResponseQuerySerialized responsequery = 3;
  bool has_responsequery() const;
  void clear_responsequery();
  static const int kResponsequeryFieldNumber = 3;
  const ::proto::dota::CDOTAResponseQuerySerialized& responsequery() const;
  ::proto::dota::CDOTAResponseQuerySerialized* mutable_responsequery();
  ::proto::dota::CDOTAResponseQuerySerialized* release_responsequery();
  void set_allocated_responsequery(::proto::dota::CDOTAResponseQuerySerialized* responsequery);

  // optional int32 concept = 1;
  bool has_concept() const;
  void clear_concept();
  static const int kConceptFieldNumber = 1;
  ::google::protobuf::int32 concept() const;
  void set_concept(::google::protobuf::int32 value);

  // optional int32 recipient_type = 2;
  bool has_recipient_type() const;
  void clear_recipient_type();
  static const int kRecipientTypeFieldNumber = 2;
  ::google::protobuf::int32 recipient_type() const;
  void set_recipient_type(::google::protobuf::int32 value);

  // optional sfixed32 randomseed = 4 [default = 0];
  bool has_randomseed() const;
  void clear_randomseed();
  static const int kRandomseedFieldNumber = 4;
  ::google::protobuf::int32 randomseed() const;
  void set_randomseed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTASpeechMatchOnClient)
 private:
  void set_has_concept();
  void clear_has_concept();
  void set_has_recipient_type();
  void clear_has_recipient_type();
  void set_has_responsequery();
  void clear_has_responsequery();
  void set_has_randomseed();
  void clear_has_randomseed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CDOTAResponseQuerySerialized* responsequery_;
  ::google::protobuf::int32 concept_;
  ::google::protobuf::int32 recipient_type_;
  ::google::protobuf::int32 randomseed_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_Speech : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_UnitEvent.Speech) */ {
 public:
  CDOTAUserMsg_UnitEvent_Speech();
  virtual ~CDOTAUserMsg_UnitEvent_Speech();

  CDOTAUserMsg_UnitEvent_Speech(const CDOTAUserMsg_UnitEvent_Speech& from);

  inline CDOTAUserMsg_UnitEvent_Speech& operator=(const CDOTAUserMsg_UnitEvent_Speech& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_UnitEvent_Speech& default_instance();

  static inline const CDOTAUserMsg_UnitEvent_Speech* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_Speech*>(
               &_CDOTAUserMsg_UnitEvent_Speech_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(CDOTAUserMsg_UnitEvent_Speech* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_Speech* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_UnitEvent_Speech* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_Speech& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_Speech& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_UnitEvent_Speech* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string response = 2;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 2;
  const ::std::string& response() const;
  void set_response(const ::std::string& value);
  #if LANG_CXX11
  void set_response(::std::string&& value);
  #endif
  void set_response(const char* value);
  void set_response(const char* value, size_t size);
  ::std::string* mutable_response();
  ::std::string* release_response();
  void set_allocated_response(::std::string* response);

  // optional int32 concept = 1;
  bool has_concept() const;
  void clear_concept();
  static const int kConceptFieldNumber = 1;
  ::google::protobuf::int32 concept() const;
  void set_concept(::google::protobuf::int32 value);

  // optional int32 recipient_type = 3;
  bool has_recipient_type() const;
  void clear_recipient_type();
  static const int kRecipientTypeFieldNumber = 3;
  ::google::protobuf::int32 recipient_type() const;
  void set_recipient_type(::google::protobuf::int32 value);

  // optional int32 level = 4;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 4;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional bool muteable = 5 [default = false];
  bool has_muteable() const;
  void clear_muteable();
  static const int kMuteableFieldNumber = 5;
  bool muteable() const;
  void set_muteable(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_UnitEvent.Speech)
 private:
  void set_has_concept();
  void clear_has_concept();
  void set_has_response();
  void clear_has_response();
  void set_has_recipient_type();
  void clear_has_recipient_type();
  void set_has_level();
  void clear_has_level();
  void set_has_muteable();
  void clear_has_muteable();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr response_;
  ::google::protobuf::int32 concept_;
  ::google::protobuf::int32 recipient_type_;
  ::google::protobuf::int32 level_;
  bool muteable_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_SpeechMute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_UnitEvent.SpeechMute) */ {
 public:
  CDOTAUserMsg_UnitEvent_SpeechMute();
  virtual ~CDOTAUserMsg_UnitEvent_SpeechMute();

  CDOTAUserMsg_UnitEvent_SpeechMute(const CDOTAUserMsg_UnitEvent_SpeechMute& from);

  inline CDOTAUserMsg_UnitEvent_SpeechMute& operator=(const CDOTAUserMsg_UnitEvent_SpeechMute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_UnitEvent_SpeechMute& default_instance();

  static inline const CDOTAUserMsg_UnitEvent_SpeechMute* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_SpeechMute*>(
               &_CDOTAUserMsg_UnitEvent_SpeechMute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(CDOTAUserMsg_UnitEvent_SpeechMute* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_SpeechMute* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_UnitEvent_SpeechMute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_SpeechMute& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_SpeechMute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_UnitEvent_SpeechMute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float delay = 1 [default = 0.5];
  bool has_delay() const;
  void clear_delay();
  static const int kDelayFieldNumber = 1;
  float delay() const;
  void set_delay(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_UnitEvent.SpeechMute)
 private:
  void set_has_delay();
  void clear_has_delay();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float delay_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_AddGesture : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_UnitEvent.AddGesture) */ {
 public:
  CDOTAUserMsg_UnitEvent_AddGesture();
  virtual ~CDOTAUserMsg_UnitEvent_AddGesture();

  CDOTAUserMsg_UnitEvent_AddGesture(const CDOTAUserMsg_UnitEvent_AddGesture& from);

  inline CDOTAUserMsg_UnitEvent_AddGesture& operator=(const CDOTAUserMsg_UnitEvent_AddGesture& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_UnitEvent_AddGesture& default_instance();

  static inline const CDOTAUserMsg_UnitEvent_AddGesture* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_AddGesture*>(
               &_CDOTAUserMsg_UnitEvent_AddGesture_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(CDOTAUserMsg_UnitEvent_AddGesture* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_AddGesture* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_UnitEvent_AddGesture* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_AddGesture& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_AddGesture& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_UnitEvent_AddGesture* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 activity = 1;
  bool has_activity() const;
  void clear_activity();
  static const int kActivityFieldNumber = 1;
  ::google::protobuf::int32 activity() const;
  void set_activity(::google::protobuf::int32 value);

  // optional int32 slot = 2;
  bool has_slot() const;
  void clear_slot();
  static const int kSlotFieldNumber = 2;
  ::google::protobuf::int32 slot() const;
  void set_slot(::google::protobuf::int32 value);

  // optional float fade_in = 3 [default = 0];
  bool has_fade_in() const;
  void clear_fade_in();
  static const int kFadeInFieldNumber = 3;
  float fade_in() const;
  void set_fade_in(float value);

  // optional float fade_out = 4 [default = 0.1];
  bool has_fade_out() const;
  void clear_fade_out();
  static const int kFadeOutFieldNumber = 4;
  float fade_out() const;
  void set_fade_out(float value);

  // optional float playback_rate = 5 [default = 1];
  bool has_playback_rate() const;
  void clear_playback_rate();
  static const int kPlaybackRateFieldNumber = 5;
  float playback_rate() const;
  void set_playback_rate(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_UnitEvent.AddGesture)
 private:
  void set_has_activity();
  void clear_has_activity();
  void set_has_slot();
  void clear_has_slot();
  void set_has_fade_in();
  void clear_has_fade_in();
  void set_has_fade_out();
  void clear_has_fade_out();
  void set_has_playback_rate();
  void clear_has_playback_rate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 activity_;
  ::google::protobuf::int32 slot_;
  float fade_in_;
  float fade_out_;
  float playback_rate_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_RemoveGesture : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_UnitEvent.RemoveGesture) */ {
 public:
  CDOTAUserMsg_UnitEvent_RemoveGesture();
  virtual ~CDOTAUserMsg_UnitEvent_RemoveGesture();

  CDOTAUserMsg_UnitEvent_RemoveGesture(const CDOTAUserMsg_UnitEvent_RemoveGesture& from);

  inline CDOTAUserMsg_UnitEvent_RemoveGesture& operator=(const CDOTAUserMsg_UnitEvent_RemoveGesture& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_UnitEvent_RemoveGesture& default_instance();

  static inline const CDOTAUserMsg_UnitEvent_RemoveGesture* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_RemoveGesture*>(
               &_CDOTAUserMsg_UnitEvent_RemoveGesture_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(CDOTAUserMsg_UnitEvent_RemoveGesture* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_RemoveGesture* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_UnitEvent_RemoveGesture* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_RemoveGesture& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_RemoveGesture& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_UnitEvent_RemoveGesture* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 activity = 1;
  bool has_activity() const;
  void clear_activity();
  static const int kActivityFieldNumber = 1;
  ::google::protobuf::int32 activity() const;
  void set_activity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_UnitEvent.RemoveGesture)
 private:
  void set_has_activity();
  void clear_has_activity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 activity_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_BloodImpact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_UnitEvent.BloodImpact) */ {
 public:
  CDOTAUserMsg_UnitEvent_BloodImpact();
  virtual ~CDOTAUserMsg_UnitEvent_BloodImpact();

  CDOTAUserMsg_UnitEvent_BloodImpact(const CDOTAUserMsg_UnitEvent_BloodImpact& from);

  inline CDOTAUserMsg_UnitEvent_BloodImpact& operator=(const CDOTAUserMsg_UnitEvent_BloodImpact& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_UnitEvent_BloodImpact& default_instance();

  static inline const CDOTAUserMsg_UnitEvent_BloodImpact* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_BloodImpact*>(
               &_CDOTAUserMsg_UnitEvent_BloodImpact_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(CDOTAUserMsg_UnitEvent_BloodImpact* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_BloodImpact* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_UnitEvent_BloodImpact* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_BloodImpact& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_BloodImpact& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_UnitEvent_BloodImpact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 scale = 1;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 1;
  ::google::protobuf::int32 scale() const;
  void set_scale(::google::protobuf::int32 value);

  // optional int32 x_normal = 2;
  bool has_x_normal() const;
  void clear_x_normal();
  static const int kXNormalFieldNumber = 2;
  ::google::protobuf::int32 x_normal() const;
  void set_x_normal(::google::protobuf::int32 value);

  // optional int32 y_normal = 3;
  bool has_y_normal() const;
  void clear_y_normal();
  static const int kYNormalFieldNumber = 3;
  ::google::protobuf::int32 y_normal() const;
  void set_y_normal(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_UnitEvent.BloodImpact)
 private:
  void set_has_scale();
  void clear_has_scale();
  void set_has_x_normal();
  void clear_has_x_normal();
  void set_has_y_normal();
  void clear_has_y_normal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 scale_;
  ::google::protobuf::int32 x_normal_;
  ::google::protobuf::int32 y_normal_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent_FadeGesture : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_UnitEvent.FadeGesture) */ {
 public:
  CDOTAUserMsg_UnitEvent_FadeGesture();
  virtual ~CDOTAUserMsg_UnitEvent_FadeGesture();

  CDOTAUserMsg_UnitEvent_FadeGesture(const CDOTAUserMsg_UnitEvent_FadeGesture& from);

  inline CDOTAUserMsg_UnitEvent_FadeGesture& operator=(const CDOTAUserMsg_UnitEvent_FadeGesture& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_UnitEvent_FadeGesture& default_instance();

  static inline const CDOTAUserMsg_UnitEvent_FadeGesture* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent_FadeGesture*>(
               &_CDOTAUserMsg_UnitEvent_FadeGesture_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(CDOTAUserMsg_UnitEvent_FadeGesture* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent_FadeGesture* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_UnitEvent_FadeGesture* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_UnitEvent_FadeGesture& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent_FadeGesture& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_UnitEvent_FadeGesture* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 activity = 1;
  bool has_activity() const;
  void clear_activity();
  static const int kActivityFieldNumber = 1;
  ::google::protobuf::int32 activity() const;
  void set_activity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_UnitEvent.FadeGesture)
 private:
  void set_has_activity();
  void clear_has_activity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 activity_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UnitEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_UnitEvent) */ {
 public:
  CDOTAUserMsg_UnitEvent();
  virtual ~CDOTAUserMsg_UnitEvent();

  CDOTAUserMsg_UnitEvent(const CDOTAUserMsg_UnitEvent& from);

  inline CDOTAUserMsg_UnitEvent& operator=(const CDOTAUserMsg_UnitEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_UnitEvent& default_instance();

  static inline const CDOTAUserMsg_UnitEvent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UnitEvent*>(
               &_CDOTAUserMsg_UnitEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(CDOTAUserMsg_UnitEvent* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UnitEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_UnitEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_UnitEvent& from);
  void MergeFrom(const CDOTAUserMsg_UnitEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_UnitEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_UnitEvent_Speech Speech;
  typedef CDOTAUserMsg_UnitEvent_SpeechMute SpeechMute;
  typedef CDOTAUserMsg_UnitEvent_AddGesture AddGesture;
  typedef CDOTAUserMsg_UnitEvent_RemoveGesture RemoveGesture;
  typedef CDOTAUserMsg_UnitEvent_BloodImpact BloodImpact;
  typedef CDOTAUserMsg_UnitEvent_FadeGesture FadeGesture;

  // accessors -------------------------------------------------------

  // optional .proto.dota.CDOTAUserMsg_UnitEvent.Speech speech = 3;
  bool has_speech() const;
  void clear_speech();
  static const int kSpeechFieldNumber = 3;
  const ::proto::dota::CDOTAUserMsg_UnitEvent_Speech& speech() const;
  ::proto::dota::CDOTAUserMsg_UnitEvent_Speech* mutable_speech();
  ::proto::dota::CDOTAUserMsg_UnitEvent_Speech* release_speech();
  void set_allocated_speech(::proto::dota::CDOTAUserMsg_UnitEvent_Speech* speech);

  // optional .proto.dota.CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;
  bool has_speech_mute() const;
  void clear_speech_mute();
  static const int kSpeechMuteFieldNumber = 4;
  const ::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute& speech_mute() const;
  ::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute* mutable_speech_mute();
  ::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute* release_speech_mute();
  void set_allocated_speech_mute(::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute* speech_mute);

  // optional .proto.dota.CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;
  bool has_add_gesture() const;
  void clear_add_gesture();
  static const int kAddGestureFieldNumber = 5;
  const ::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture& add_gesture() const;
  ::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture* mutable_add_gesture();
  ::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture* release_add_gesture();
  void set_allocated_add_gesture(::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture* add_gesture);

  // optional .proto.dota.CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;
  bool has_remove_gesture() const;
  void clear_remove_gesture();
  static const int kRemoveGestureFieldNumber = 6;
  const ::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture& remove_gesture() const;
  ::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture* mutable_remove_gesture();
  ::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture* release_remove_gesture();
  void set_allocated_remove_gesture(::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture* remove_gesture);

  // optional .proto.dota.CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;
  bool has_blood_impact() const;
  void clear_blood_impact();
  static const int kBloodImpactFieldNumber = 7;
  const ::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact& blood_impact() const;
  ::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact* mutable_blood_impact();
  ::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact* release_blood_impact();
  void set_allocated_blood_impact(::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact* blood_impact);

  // optional .proto.dota.CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;
  bool has_fade_gesture() const;
  void clear_fade_gesture();
  static const int kFadeGestureFieldNumber = 8;
  const ::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture& fade_gesture() const;
  ::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture* mutable_fade_gesture();
  ::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture* release_fade_gesture();
  void set_allocated_fade_gesture(::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture* fade_gesture);

  // optional .proto.dota.CDOTASpeechMatchOnClient speech_match_on_client = 9;
  bool has_speech_match_on_client() const;
  void clear_speech_match_on_client();
  static const int kSpeechMatchOnClientFieldNumber = 9;
  const ::proto::dota::CDOTASpeechMatchOnClient& speech_match_on_client() const;
  ::proto::dota::CDOTASpeechMatchOnClient* mutable_speech_match_on_client();
  ::proto::dota::CDOTASpeechMatchOnClient* release_speech_match_on_client();
  void set_allocated_speech_match_on_client(::proto::dota::CDOTASpeechMatchOnClient* speech_match_on_client);

  // required .proto.dota.EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];
  bool has_msg_type() const;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::proto::dota::EDotaEntityMessages msg_type() const;
  void set_msg_type(::proto::dota::EDotaEntityMessages value);

  // required int32 entity_index = 2;
  bool has_entity_index() const;
  void clear_entity_index();
  static const int kEntityIndexFieldNumber = 2;
  ::google::protobuf::int32 entity_index() const;
  void set_entity_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_UnitEvent)
 private:
  void set_has_msg_type();
  void clear_has_msg_type();
  void set_has_entity_index();
  void clear_has_entity_index();
  void set_has_speech();
  void clear_has_speech();
  void set_has_speech_mute();
  void clear_has_speech_mute();
  void set_has_add_gesture();
  void clear_has_add_gesture();
  void set_has_remove_gesture();
  void clear_has_remove_gesture();
  void set_has_blood_impact();
  void clear_has_blood_impact();
  void set_has_fade_gesture();
  void clear_has_fade_gesture();
  void set_has_speech_match_on_client();
  void clear_has_speech_match_on_client();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CDOTAUserMsg_UnitEvent_Speech* speech_;
  ::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute* speech_mute_;
  ::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture* add_gesture_;
  ::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture* remove_gesture_;
  ::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact* blood_impact_;
  ::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture* fade_gesture_;
  ::proto::dota::CDOTASpeechMatchOnClient* speech_match_on_client_;
  int msg_type_;
  ::google::protobuf::int32 entity_index_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ItemPurchased : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ItemPurchased) */ {
 public:
  CDOTAUserMsg_ItemPurchased();
  virtual ~CDOTAUserMsg_ItemPurchased();

  CDOTAUserMsg_ItemPurchased(const CDOTAUserMsg_ItemPurchased& from);

  inline CDOTAUserMsg_ItemPurchased& operator=(const CDOTAUserMsg_ItemPurchased& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ItemPurchased& default_instance();

  static inline const CDOTAUserMsg_ItemPurchased* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ItemPurchased*>(
               &_CDOTAUserMsg_ItemPurchased_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(CDOTAUserMsg_ItemPurchased* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ItemPurchased* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ItemPurchased* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ItemPurchased& from);
  void MergeFrom(const CDOTAUserMsg_ItemPurchased& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ItemPurchased* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 item_index = 1;
  bool has_item_index() const;
  void clear_item_index();
  static const int kItemIndexFieldNumber = 1;
  ::google::protobuf::int32 item_index() const;
  void set_item_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ItemPurchased)
 private:
  void set_has_item_index();
  void clear_has_item_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 item_index_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ItemFound : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ItemFound) */ {
 public:
  CDOTAUserMsg_ItemFound();
  virtual ~CDOTAUserMsg_ItemFound();

  CDOTAUserMsg_ItemFound(const CDOTAUserMsg_ItemFound& from);

  inline CDOTAUserMsg_ItemFound& operator=(const CDOTAUserMsg_ItemFound& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ItemFound& default_instance();

  static inline const CDOTAUserMsg_ItemFound* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ItemFound*>(
               &_CDOTAUserMsg_ItemFound_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(CDOTAUserMsg_ItemFound* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ItemFound* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ItemFound* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ItemFound& from);
  void MergeFrom(const CDOTAUserMsg_ItemFound& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ItemFound* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  ::google::protobuf::int32 player() const;
  void set_player(::google::protobuf::int32 value);

  // optional int32 quality = 2;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 2;
  ::google::protobuf::int32 quality() const;
  void set_quality(::google::protobuf::int32 value);

  // optional int32 rarity = 3;
  bool has_rarity() const;
  void clear_rarity();
  static const int kRarityFieldNumber = 3;
  ::google::protobuf::int32 rarity() const;
  void set_rarity(::google::protobuf::int32 value);

  // optional int32 method = 4;
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 4;
  ::google::protobuf::int32 method() const;
  void set_method(::google::protobuf::int32 value);

  // optional int32 itemdef = 5;
  bool has_itemdef() const;
  void clear_itemdef();
  static const int kItemdefFieldNumber = 5;
  ::google::protobuf::int32 itemdef() const;
  void set_itemdef(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ItemFound)
 private:
  void set_has_player();
  void clear_has_player();
  void set_has_quality();
  void clear_has_quality();
  void set_has_rarity();
  void clear_has_rarity();
  void set_has_method();
  void clear_has_method();
  void set_has_itemdef();
  void clear_has_itemdef();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 player_;
  ::google::protobuf::int32 quality_;
  ::google::protobuf::int32 rarity_;
  ::google::protobuf::int32 method_;
  ::google::protobuf::int32 itemdef_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_ReleaseParticleIndex : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex) */ {
 public:
  CDOTAUserMsg_ParticleManager_ReleaseParticleIndex();
  virtual ~CDOTAUserMsg_ParticleManager_ReleaseParticleIndex();

  CDOTAUserMsg_ParticleManager_ReleaseParticleIndex(const CDOTAUserMsg_ParticleManager_ReleaseParticleIndex& from);

  inline CDOTAUserMsg_ParticleManager_ReleaseParticleIndex& operator=(const CDOTAUserMsg_ParticleManager_ReleaseParticleIndex& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_ReleaseParticleIndex& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_ReleaseParticleIndex*>(
               &_CDOTAUserMsg_ParticleManager_ReleaseParticleIndex_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_ReleaseParticleIndex& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_ReleaseParticleIndex& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_CreateParticle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.CreateParticle) */ {
 public:
  CDOTAUserMsg_ParticleManager_CreateParticle();
  virtual ~CDOTAUserMsg_ParticleManager_CreateParticle();

  CDOTAUserMsg_ParticleManager_CreateParticle(const CDOTAUserMsg_ParticleManager_CreateParticle& from);

  inline CDOTAUserMsg_ParticleManager_CreateParticle& operator=(const CDOTAUserMsg_ParticleManager_CreateParticle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_CreateParticle& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_CreateParticle* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_CreateParticle*>(
               &_CDOTAUserMsg_ParticleManager_CreateParticle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(CDOTAUserMsg_ParticleManager_CreateParticle* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_CreateParticle* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_CreateParticle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_CreateParticle& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_CreateParticle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_CreateParticle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 particle_name_index = 1;
  bool has_particle_name_index() const;
  void clear_particle_name_index();
  static const int kParticleNameIndexFieldNumber = 1;
  ::google::protobuf::uint64 particle_name_index() const;
  void set_particle_name_index(::google::protobuf::uint64 value);

  // optional int32 attach_type = 2;
  bool has_attach_type() const;
  void clear_attach_type();
  static const int kAttachTypeFieldNumber = 2;
  ::google::protobuf::int32 attach_type() const;
  void set_attach_type(::google::protobuf::int32 value);

  // optional int32 entity_handle = 3;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 3;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // optional int32 entity_handle_for_modifiers = 4;
  bool has_entity_handle_for_modifiers() const;
  void clear_entity_handle_for_modifiers();
  static const int kEntityHandleForModifiersFieldNumber = 4;
  ::google::protobuf::int32 entity_handle_for_modifiers() const;
  void set_entity_handle_for_modifiers(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.CreateParticle)
 private:
  void set_has_particle_name_index();
  void clear_has_particle_name_index();
  void set_has_attach_type();
  void clear_has_attach_type();
  void set_has_entity_handle();
  void clear_has_entity_handle();
  void set_has_entity_handle_for_modifiers();
  void clear_has_entity_handle_for_modifiers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 particle_name_index_;
  ::google::protobuf::int32 attach_type_;
  ::google::protobuf::int32 entity_handle_;
  ::google::protobuf::int32 entity_handle_for_modifiers_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_DestroyParticle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticle) */ {
 public:
  CDOTAUserMsg_ParticleManager_DestroyParticle();
  virtual ~CDOTAUserMsg_ParticleManager_DestroyParticle();

  CDOTAUserMsg_ParticleManager_DestroyParticle(const CDOTAUserMsg_ParticleManager_DestroyParticle& from);

  inline CDOTAUserMsg_ParticleManager_DestroyParticle& operator=(const CDOTAUserMsg_ParticleManager_DestroyParticle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_DestroyParticle& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_DestroyParticle* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_DestroyParticle*>(
               &_CDOTAUserMsg_ParticleManager_DestroyParticle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(CDOTAUserMsg_ParticleManager_DestroyParticle* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_DestroyParticle* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_DestroyParticle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_DestroyParticle& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_DestroyParticle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_DestroyParticle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool destroy_immediately = 1;
  bool has_destroy_immediately() const;
  void clear_destroy_immediately();
  static const int kDestroyImmediatelyFieldNumber = 1;
  bool destroy_immediately() const;
  void set_destroy_immediately(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticle)
 private:
  void set_has_destroy_immediately();
  void clear_has_destroy_immediately();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool destroy_immediately_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_DestroyParticleInvolving : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving) */ {
 public:
  CDOTAUserMsg_ParticleManager_DestroyParticleInvolving();
  virtual ~CDOTAUserMsg_ParticleManager_DestroyParticleInvolving();

  CDOTAUserMsg_ParticleManager_DestroyParticleInvolving(const CDOTAUserMsg_ParticleManager_DestroyParticleInvolving& from);

  inline CDOTAUserMsg_ParticleManager_DestroyParticleInvolving& operator=(const CDOTAUserMsg_ParticleManager_DestroyParticleInvolving& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_DestroyParticleInvolving& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_DestroyParticleInvolving*>(
               &_CDOTAUserMsg_ParticleManager_DestroyParticleInvolving_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_DestroyParticleInvolving& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_DestroyParticleInvolving& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool destroy_immediately = 1;
  bool has_destroy_immediately() const;
  void clear_destroy_immediately();
  static const int kDestroyImmediatelyFieldNumber = 1;
  bool destroy_immediately() const;
  void set_destroy_immediately(bool value);

  // optional int32 entity_handle = 3;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 3;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving)
 private:
  void set_has_destroy_immediately();
  void clear_has_destroy_immediately();
  void set_has_entity_handle();
  void clear_has_entity_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool destroy_immediately_;
  ::google::protobuf::int32 entity_handle_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_UpdateParticle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticle) */ {
 public:
  CDOTAUserMsg_ParticleManager_UpdateParticle();
  virtual ~CDOTAUserMsg_ParticleManager_UpdateParticle();

  CDOTAUserMsg_ParticleManager_UpdateParticle(const CDOTAUserMsg_ParticleManager_UpdateParticle& from);

  inline CDOTAUserMsg_ParticleManager_UpdateParticle& operator=(const CDOTAUserMsg_ParticleManager_UpdateParticle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_UpdateParticle& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_UpdateParticle* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_UpdateParticle*>(
               &_CDOTAUserMsg_ParticleManager_UpdateParticle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(CDOTAUserMsg_ParticleManager_UpdateParticle* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_UpdateParticle* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_UpdateParticle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_UpdateParticle& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_UpdateParticle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_UpdateParticle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::proto::dota::CMsgVector& position() const;
  ::proto::dota::CMsgVector* mutable_position();
  ::proto::dota::CMsgVector* release_position();
  void set_allocated_position(::proto::dota::CMsgVector* position);

  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point();
  static const int kControlPointFieldNumber = 1;
  ::google::protobuf::int32 control_point() const;
  void set_control_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticle)
 private:
  void set_has_control_point();
  void clear_has_control_point();
  void set_has_position();
  void clear_has_position();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* position_;
  ::google::protobuf::int32 control_point_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_UpdateParticleFwd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFwd) */ {
 public:
  CDOTAUserMsg_ParticleManager_UpdateParticleFwd();
  virtual ~CDOTAUserMsg_ParticleManager_UpdateParticleFwd();

  CDOTAUserMsg_ParticleManager_UpdateParticleFwd(const CDOTAUserMsg_ParticleManager_UpdateParticleFwd& from);

  inline CDOTAUserMsg_ParticleManager_UpdateParticleFwd& operator=(const CDOTAUserMsg_ParticleManager_UpdateParticleFwd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_UpdateParticleFwd& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_UpdateParticleFwd* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_UpdateParticleFwd*>(
               &_CDOTAUserMsg_ParticleManager_UpdateParticleFwd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(CDOTAUserMsg_ParticleManager_UpdateParticleFwd* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_UpdateParticleFwd* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_UpdateParticleFwd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleFwd& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleFwd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_UpdateParticleFwd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector forward = 2;
  bool has_forward() const;
  void clear_forward();
  static const int kForwardFieldNumber = 2;
  const ::proto::dota::CMsgVector& forward() const;
  ::proto::dota::CMsgVector* mutable_forward();
  ::proto::dota::CMsgVector* release_forward();
  void set_allocated_forward(::proto::dota::CMsgVector* forward);

  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point();
  static const int kControlPointFieldNumber = 1;
  ::google::protobuf::int32 control_point() const;
  void set_control_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFwd)
 private:
  void set_has_control_point();
  void clear_has_control_point();
  void set_has_forward();
  void clear_has_forward();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* forward_;
  ::google::protobuf::int32 control_point_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_UpdateParticleOrient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient) */ {
 public:
  CDOTAUserMsg_ParticleManager_UpdateParticleOrient();
  virtual ~CDOTAUserMsg_ParticleManager_UpdateParticleOrient();

  CDOTAUserMsg_ParticleManager_UpdateParticleOrient(const CDOTAUserMsg_ParticleManager_UpdateParticleOrient& from);

  inline CDOTAUserMsg_ParticleManager_UpdateParticleOrient& operator=(const CDOTAUserMsg_ParticleManager_UpdateParticleOrient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_UpdateParticleOrient& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_UpdateParticleOrient* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_UpdateParticleOrient*>(
               &_CDOTAUserMsg_ParticleManager_UpdateParticleOrient_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(CDOTAUserMsg_ParticleManager_UpdateParticleOrient* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_UpdateParticleOrient* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_UpdateParticleOrient* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleOrient& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleOrient& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_UpdateParticleOrient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector forward = 2;
  bool has_forward() const;
  void clear_forward();
  static const int kForwardFieldNumber = 2;
  const ::proto::dota::CMsgVector& forward() const;
  ::proto::dota::CMsgVector* mutable_forward();
  ::proto::dota::CMsgVector* release_forward();
  void set_allocated_forward(::proto::dota::CMsgVector* forward);

  // optional .proto.dota.CMsgVector right = 3;
  bool has_right() const;
  void clear_right();
  static const int kRightFieldNumber = 3;
  const ::proto::dota::CMsgVector& right() const;
  ::proto::dota::CMsgVector* mutable_right();
  ::proto::dota::CMsgVector* release_right();
  void set_allocated_right(::proto::dota::CMsgVector* right);

  // optional .proto.dota.CMsgVector up = 4;
  bool has_up() const;
  void clear_up();
  static const int kUpFieldNumber = 4;
  const ::proto::dota::CMsgVector& up() const;
  ::proto::dota::CMsgVector* mutable_up();
  ::proto::dota::CMsgVector* release_up();
  void set_allocated_up(::proto::dota::CMsgVector* up);

  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point();
  static const int kControlPointFieldNumber = 1;
  ::google::protobuf::int32 control_point() const;
  void set_control_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient)
 private:
  void set_has_control_point();
  void clear_has_control_point();
  void set_has_forward();
  void clear_has_forward();
  void set_has_right();
  void clear_has_right();
  void set_has_up();
  void clear_has_up();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* forward_;
  ::proto::dota::CMsgVector* right_;
  ::proto::dota::CMsgVector* up_;
  ::google::protobuf::int32 control_point_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_UpdateParticleFallback : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFallback) */ {
 public:
  CDOTAUserMsg_ParticleManager_UpdateParticleFallback();
  virtual ~CDOTAUserMsg_ParticleManager_UpdateParticleFallback();

  CDOTAUserMsg_ParticleManager_UpdateParticleFallback(const CDOTAUserMsg_ParticleManager_UpdateParticleFallback& from);

  inline CDOTAUserMsg_ParticleManager_UpdateParticleFallback& operator=(const CDOTAUserMsg_ParticleManager_UpdateParticleFallback& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_UpdateParticleFallback& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_UpdateParticleFallback* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_UpdateParticleFallback*>(
               &_CDOTAUserMsg_ParticleManager_UpdateParticleFallback_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(CDOTAUserMsg_ParticleManager_UpdateParticleFallback* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_UpdateParticleFallback* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_UpdateParticleFallback* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleFallback& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleFallback& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_UpdateParticleFallback* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::proto::dota::CMsgVector& position() const;
  ::proto::dota::CMsgVector* mutable_position();
  ::proto::dota::CMsgVector* release_position();
  void set_allocated_position(::proto::dota::CMsgVector* position);

  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point();
  static const int kControlPointFieldNumber = 1;
  ::google::protobuf::int32 control_point() const;
  void set_control_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFallback)
 private:
  void set_has_control_point();
  void clear_has_control_point();
  void set_has_position();
  void clear_has_position();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* position_;
  ::google::protobuf::int32 control_point_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_UpdateParticleOffset : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOffset) */ {
 public:
  CDOTAUserMsg_ParticleManager_UpdateParticleOffset();
  virtual ~CDOTAUserMsg_ParticleManager_UpdateParticleOffset();

  CDOTAUserMsg_ParticleManager_UpdateParticleOffset(const CDOTAUserMsg_ParticleManager_UpdateParticleOffset& from);

  inline CDOTAUserMsg_ParticleManager_UpdateParticleOffset& operator=(const CDOTAUserMsg_ParticleManager_UpdateParticleOffset& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_UpdateParticleOffset& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_UpdateParticleOffset* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_UpdateParticleOffset*>(
               &_CDOTAUserMsg_ParticleManager_UpdateParticleOffset_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(CDOTAUserMsg_ParticleManager_UpdateParticleOffset* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_UpdateParticleOffset* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_UpdateParticleOffset* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleOffset& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleOffset& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_UpdateParticleOffset* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector origin_offset = 2;
  bool has_origin_offset() const;
  void clear_origin_offset();
  static const int kOriginOffsetFieldNumber = 2;
  const ::proto::dota::CMsgVector& origin_offset() const;
  ::proto::dota::CMsgVector* mutable_origin_offset();
  ::proto::dota::CMsgVector* release_origin_offset();
  void set_allocated_origin_offset(::proto::dota::CMsgVector* origin_offset);

  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point();
  static const int kControlPointFieldNumber = 1;
  ::google::protobuf::int32 control_point() const;
  void set_control_point(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOffset)
 private:
  void set_has_control_point();
  void clear_has_control_point();
  void set_has_origin_offset();
  void clear_has_origin_offset();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* origin_offset_;
  ::google::protobuf::int32 control_point_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_UpdateParticleEnt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt) */ {
 public:
  CDOTAUserMsg_ParticleManager_UpdateParticleEnt();
  virtual ~CDOTAUserMsg_ParticleManager_UpdateParticleEnt();

  CDOTAUserMsg_ParticleManager_UpdateParticleEnt(const CDOTAUserMsg_ParticleManager_UpdateParticleEnt& from);

  inline CDOTAUserMsg_ParticleManager_UpdateParticleEnt& operator=(const CDOTAUserMsg_ParticleManager_UpdateParticleEnt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_UpdateParticleEnt& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_UpdateParticleEnt* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_UpdateParticleEnt*>(
               &_CDOTAUserMsg_ParticleManager_UpdateParticleEnt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(CDOTAUserMsg_ParticleManager_UpdateParticleEnt* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_UpdateParticleEnt* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_UpdateParticleEnt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleEnt& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleEnt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_UpdateParticleEnt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector fallback_position = 5;
  bool has_fallback_position() const;
  void clear_fallback_position();
  static const int kFallbackPositionFieldNumber = 5;
  const ::proto::dota::CMsgVector& fallback_position() const;
  ::proto::dota::CMsgVector* mutable_fallback_position();
  ::proto::dota::CMsgVector* release_fallback_position();
  void set_allocated_fallback_position(::proto::dota::CMsgVector* fallback_position);

  // optional int32 control_point = 1;
  bool has_control_point() const;
  void clear_control_point();
  static const int kControlPointFieldNumber = 1;
  ::google::protobuf::int32 control_point() const;
  void set_control_point(::google::protobuf::int32 value);

  // optional int32 entity_handle = 2;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 2;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // optional int32 attach_type = 3;
  bool has_attach_type() const;
  void clear_attach_type();
  static const int kAttachTypeFieldNumber = 3;
  ::google::protobuf::int32 attach_type() const;
  void set_attach_type(::google::protobuf::int32 value);

  // optional int32 attachment = 4;
  bool has_attachment() const;
  void clear_attachment();
  static const int kAttachmentFieldNumber = 4;
  ::google::protobuf::int32 attachment() const;
  void set_attachment(::google::protobuf::int32 value);

  // optional bool include_wearables = 6;
  bool has_include_wearables() const;
  void clear_include_wearables();
  static const int kIncludeWearablesFieldNumber = 6;
  bool include_wearables() const;
  void set_include_wearables(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt)
 private:
  void set_has_control_point();
  void clear_has_control_point();
  void set_has_entity_handle();
  void clear_has_entity_handle();
  void set_has_attach_type();
  void clear_has_attach_type();
  void set_has_attachment();
  void clear_has_attachment();
  void set_has_fallback_position();
  void clear_has_fallback_position();
  void set_has_include_wearables();
  void clear_has_include_wearables();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* fallback_position_;
  ::google::protobuf::int32 control_point_;
  ::google::protobuf::int32 entity_handle_;
  ::google::protobuf::int32 attach_type_;
  ::google::protobuf::int32 attachment_;
  bool include_wearables_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen) */ {
 public:
  CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen();
  virtual ~CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen();

  CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen(const CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen& from);

  inline CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen& operator=(const CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen*>(
               &_CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool set_frozen = 1;
  bool has_set_frozen() const;
  void clear_set_frozen();
  static const int kSetFrozenFieldNumber = 1;
  bool set_frozen() const;
  void set_set_frozen(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen)
 private:
  void set_has_set_frozen();
  void clear_has_set_frozen();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool set_frozen_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw) */ {
 public:
  CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw();
  virtual ~CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw();

  CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw(const CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw& from);

  inline CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw& operator=(const CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw*>(
               &_CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool should_draw = 1;
  bool has_should_draw() const;
  void clear_should_draw();
  static const int kShouldDrawFieldNumber = 1;
  bool should_draw() const;
  void set_should_draw(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw)
 private:
  void set_has_should_draw();
  void clear_has_should_draw();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool should_draw_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment) */ {
 public:
  CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment();
  virtual ~CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment();

  CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment(const CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment& from);

  inline CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment& operator=(const CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment*>(
               &_CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 attachment_old = 1;
  bool has_attachment_old() const;
  void clear_attachment_old();
  static const int kAttachmentOldFieldNumber = 1;
  ::google::protobuf::int32 attachment_old() const;
  void set_attachment_old(::google::protobuf::int32 value);

  // optional int32 attachment_new = 2;
  bool has_attachment_new() const;
  void clear_attachment_new();
  static const int kAttachmentNewFieldNumber = 2;
  ::google::protobuf::int32 attachment_new() const;
  void set_attachment_new(::google::protobuf::int32 value);

  // optional int32 entity_handle = 3;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 3;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment)
 private:
  void set_has_attachment_old();
  void clear_has_attachment_old();
  void set_has_attachment_new();
  void clear_has_attachment_new();
  void set_has_entity_handle();
  void clear_has_entity_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 attachment_old_;
  ::google::protobuf::int32 attachment_new_;
  ::google::protobuf::int32 entity_handle_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_UpdateEntityPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.UpdateEntityPosition) */ {
 public:
  CDOTAUserMsg_ParticleManager_UpdateEntityPosition();
  virtual ~CDOTAUserMsg_ParticleManager_UpdateEntityPosition();

  CDOTAUserMsg_ParticleManager_UpdateEntityPosition(const CDOTAUserMsg_ParticleManager_UpdateEntityPosition& from);

  inline CDOTAUserMsg_ParticleManager_UpdateEntityPosition& operator=(const CDOTAUserMsg_ParticleManager_UpdateEntityPosition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_UpdateEntityPosition& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_UpdateEntityPosition* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_UpdateEntityPosition*>(
               &_CDOTAUserMsg_ParticleManager_UpdateEntityPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(CDOTAUserMsg_ParticleManager_UpdateEntityPosition* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_UpdateEntityPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_UpdateEntityPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_UpdateEntityPosition& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_UpdateEntityPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_UpdateEntityPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::proto::dota::CMsgVector& position() const;
  ::proto::dota::CMsgVector* mutable_position();
  ::proto::dota::CMsgVector* release_position();
  void set_allocated_position(::proto::dota::CMsgVector* position);

  // optional int32 entity_handle = 1;
  bool has_entity_handle() const;
  void clear_entity_handle();
  static const int kEntityHandleFieldNumber = 1;
  ::google::protobuf::int32 entity_handle() const;
  void set_entity_handle(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.UpdateEntityPosition)
 private:
  void set_has_entity_handle();
  void clear_has_entity_handle();
  void set_has_position();
  void clear_has_position();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* position_;
  ::google::protobuf::int32 entity_handle_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_SetParticleFoWProperties : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleFoWProperties) */ {
 public:
  CDOTAUserMsg_ParticleManager_SetParticleFoWProperties();
  virtual ~CDOTAUserMsg_ParticleManager_SetParticleFoWProperties();

  CDOTAUserMsg_ParticleManager_SetParticleFoWProperties(const CDOTAUserMsg_ParticleManager_SetParticleFoWProperties& from);

  inline CDOTAUserMsg_ParticleManager_SetParticleFoWProperties& operator=(const CDOTAUserMsg_ParticleManager_SetParticleFoWProperties& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_SetParticleFoWProperties& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_SetParticleFoWProperties*>(
               &_CDOTAUserMsg_ParticleManager_SetParticleFoWProperties_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_SetParticleFoWProperties& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_SetParticleFoWProperties& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 fow_control_point = 1;
  bool has_fow_control_point() const;
  void clear_fow_control_point();
  static const int kFowControlPointFieldNumber = 1;
  ::google::protobuf::int32 fow_control_point() const;
  void set_fow_control_point(::google::protobuf::int32 value);

  // optional int32 fow_control_point2 = 2;
  bool has_fow_control_point2() const;
  void clear_fow_control_point2();
  static const int kFowControlPoint2FieldNumber = 2;
  ::google::protobuf::int32 fow_control_point2() const;
  void set_fow_control_point2(::google::protobuf::int32 value);

  // optional float fow_radius = 3;
  bool has_fow_radius() const;
  void clear_fow_radius();
  static const int kFowRadiusFieldNumber = 3;
  float fow_radius() const;
  void set_fow_radius(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleFoWProperties)
 private:
  void set_has_fow_control_point();
  void clear_has_fow_control_point();
  void set_has_fow_control_point2();
  void clear_has_fow_control_point2();
  void set_has_fow_radius();
  void clear_has_fow_radius();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 fow_control_point_;
  ::google::protobuf::int32 fow_control_point2_;
  float fow_radius_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager_SetParticleText : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleText) */ {
 public:
  CDOTAUserMsg_ParticleManager_SetParticleText();
  virtual ~CDOTAUserMsg_ParticleManager_SetParticleText();

  CDOTAUserMsg_ParticleManager_SetParticleText(const CDOTAUserMsg_ParticleManager_SetParticleText& from);

  inline CDOTAUserMsg_ParticleManager_SetParticleText& operator=(const CDOTAUserMsg_ParticleManager_SetParticleText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager_SetParticleText& default_instance();

  static inline const CDOTAUserMsg_ParticleManager_SetParticleText* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager_SetParticleText*>(
               &_CDOTAUserMsg_ParticleManager_SetParticleText_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(CDOTAUserMsg_ParticleManager_SetParticleText* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager_SetParticleText* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager_SetParticleText* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager_SetParticleText& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager_SetParticleText& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager_SetParticleText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleText)
 private:
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ParticleManager : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ParticleManager) */ {
 public:
  CDOTAUserMsg_ParticleManager();
  virtual ~CDOTAUserMsg_ParticleManager();

  CDOTAUserMsg_ParticleManager(const CDOTAUserMsg_ParticleManager& from);

  inline CDOTAUserMsg_ParticleManager& operator=(const CDOTAUserMsg_ParticleManager& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ParticleManager& default_instance();

  static inline const CDOTAUserMsg_ParticleManager* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ParticleManager*>(
               &_CDOTAUserMsg_ParticleManager_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(CDOTAUserMsg_ParticleManager* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ParticleManager* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ParticleManager* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ParticleManager& from);
  void MergeFrom(const CDOTAUserMsg_ParticleManager& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ParticleManager* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_ParticleManager_ReleaseParticleIndex ReleaseParticleIndex;
  typedef CDOTAUserMsg_ParticleManager_CreateParticle CreateParticle;
  typedef CDOTAUserMsg_ParticleManager_DestroyParticle DestroyParticle;
  typedef CDOTAUserMsg_ParticleManager_DestroyParticleInvolving DestroyParticleInvolving;
  typedef CDOTAUserMsg_ParticleManager_UpdateParticle UpdateParticle;
  typedef CDOTAUserMsg_ParticleManager_UpdateParticleFwd UpdateParticleFwd;
  typedef CDOTAUserMsg_ParticleManager_UpdateParticleOrient UpdateParticleOrient;
  typedef CDOTAUserMsg_ParticleManager_UpdateParticleFallback UpdateParticleFallback;
  typedef CDOTAUserMsg_ParticleManager_UpdateParticleOffset UpdateParticleOffset;
  typedef CDOTAUserMsg_ParticleManager_UpdateParticleEnt UpdateParticleEnt;
  typedef CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen UpdateParticleSetFrozen;
  typedef CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw UpdateParticleShouldDraw;
  typedef CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment ChangeControlPointAttachment;
  typedef CDOTAUserMsg_ParticleManager_UpdateEntityPosition UpdateEntityPosition;
  typedef CDOTAUserMsg_ParticleManager_SetParticleFoWProperties SetParticleFoWProperties;
  typedef CDOTAUserMsg_ParticleManager_SetParticleText SetParticleText;

  // accessors -------------------------------------------------------

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
  bool has_release_particle_index() const;
  void clear_release_particle_index();
  static const int kReleaseParticleIndexFieldNumber = 3;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex& release_particle_index() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* mutable_release_particle_index();
  ::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* release_release_particle_index();
  void set_allocated_release_particle_index(::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* release_particle_index);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;
  bool has_create_particle() const;
  void clear_create_particle();
  static const int kCreateParticleFieldNumber = 4;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle& create_particle() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle* mutable_create_particle();
  ::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle* release_create_particle();
  void set_allocated_create_particle(::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle* create_particle);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
  bool has_destroy_particle() const;
  void clear_destroy_particle();
  static const int kDestroyParticleFieldNumber = 5;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle& destroy_particle() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle* mutable_destroy_particle();
  ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle* release_destroy_particle();
  void set_allocated_destroy_particle(::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle* destroy_particle);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
  bool has_destroy_particle_involving() const;
  void clear_destroy_particle_involving();
  static const int kDestroyParticleInvolvingFieldNumber = 6;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving& destroy_particle_involving() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* mutable_destroy_particle_involving();
  ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* release_destroy_particle_involving();
  void set_allocated_destroy_particle_involving(::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* destroy_particle_involving);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;
  bool has_update_particle() const;
  void clear_update_particle();
  static const int kUpdateParticleFieldNumber = 7;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle& update_particle() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle* mutable_update_particle();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle* release_update_particle();
  void set_allocated_update_particle(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle* update_particle);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;
  bool has_update_particle_fwd() const;
  void clear_update_particle_fwd();
  static const int kUpdateParticleFwdFieldNumber = 8;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd& update_particle_fwd() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd* mutable_update_particle_fwd();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd* release_update_particle_fwd();
  void set_allocated_update_particle_fwd(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd* update_particle_fwd);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;
  bool has_update_particle_orient() const;
  void clear_update_particle_orient();
  static const int kUpdateParticleOrientFieldNumber = 9;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient& update_particle_orient() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient* mutable_update_particle_orient();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient* release_update_particle_orient();
  void set_allocated_update_particle_orient(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient* update_particle_orient);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
  bool has_update_particle_fallback() const;
  void clear_update_particle_fallback();
  static const int kUpdateParticleFallbackFieldNumber = 10;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback& update_particle_fallback() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback* mutable_update_particle_fallback();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback* release_update_particle_fallback();
  void set_allocated_update_particle_fallback(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback* update_particle_fallback);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
  bool has_update_particle_offset() const;
  void clear_update_particle_offset();
  static const int kUpdateParticleOffsetFieldNumber = 11;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset& update_particle_offset() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset* mutable_update_particle_offset();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset* release_update_particle_offset();
  void set_allocated_update_particle_offset(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset* update_particle_offset);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
  bool has_update_particle_ent() const;
  void clear_update_particle_ent();
  static const int kUpdateParticleEntFieldNumber = 12;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt& update_particle_ent() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt* mutable_update_particle_ent();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt* release_update_particle_ent();
  void set_allocated_update_particle_ent(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt* update_particle_ent);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
  bool has_update_particle_should_draw() const;
  void clear_update_particle_should_draw();
  static const int kUpdateParticleShouldDrawFieldNumber = 14;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw& update_particle_should_draw() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* mutable_update_particle_should_draw();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* release_update_particle_should_draw();
  void set_allocated_update_particle_should_draw(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* update_particle_should_draw);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
  bool has_update_particle_set_frozen() const;
  void clear_update_particle_set_frozen();
  static const int kUpdateParticleSetFrozenFieldNumber = 15;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen& update_particle_set_frozen() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* mutable_update_particle_set_frozen();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* release_update_particle_set_frozen();
  void set_allocated_update_particle_set_frozen(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* update_particle_set_frozen);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;
  bool has_change_control_point_attachment() const;
  void clear_change_control_point_attachment();
  static const int kChangeControlPointAttachmentFieldNumber = 16;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment& change_control_point_attachment() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* mutable_change_control_point_attachment();
  ::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* release_change_control_point_attachment();
  void set_allocated_change_control_point_attachment(::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* change_control_point_attachment);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;
  bool has_update_entity_position() const;
  void clear_update_entity_position();
  static const int kUpdateEntityPositionFieldNumber = 17;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition& update_entity_position() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition* mutable_update_entity_position();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition* release_update_entity_position();
  void set_allocated_update_entity_position(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition* update_entity_position);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.SetParticleFoWProperties set_particle_fow_properties = 18;
  bool has_set_particle_fow_properties() const;
  void clear_set_particle_fow_properties();
  static const int kSetParticleFowPropertiesFieldNumber = 18;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties& set_particle_fow_properties() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* mutable_set_particle_fow_properties();
  ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* release_set_particle_fow_properties();
  void set_allocated_set_particle_fow_properties(::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* set_particle_fow_properties);

  // optional .proto.dota.CDOTAUserMsg_ParticleManager.SetParticleText set_particle_text = 19;
  bool has_set_particle_text() const;
  void clear_set_particle_text();
  static const int kSetParticleTextFieldNumber = 19;
  const ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText& set_particle_text() const;
  ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText* mutable_set_particle_text();
  ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText* release_set_particle_text();
  void set_allocated_set_particle_text(::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText* set_particle_text);

  // required .proto.dota.DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::proto::dota::DOTA_PARTICLE_MESSAGE type() const;
  void set_type(::proto::dota::DOTA_PARTICLE_MESSAGE value);

  // required uint32 index = 2;
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 2;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ParticleManager)
 private:
  void set_has_type();
  void clear_has_type();
  void set_has_index();
  void clear_has_index();
  void set_has_release_particle_index();
  void clear_has_release_particle_index();
  void set_has_create_particle();
  void clear_has_create_particle();
  void set_has_destroy_particle();
  void clear_has_destroy_particle();
  void set_has_destroy_particle_involving();
  void clear_has_destroy_particle_involving();
  void set_has_update_particle();
  void clear_has_update_particle();
  void set_has_update_particle_fwd();
  void clear_has_update_particle_fwd();
  void set_has_update_particle_orient();
  void clear_has_update_particle_orient();
  void set_has_update_particle_fallback();
  void clear_has_update_particle_fallback();
  void set_has_update_particle_offset();
  void clear_has_update_particle_offset();
  void set_has_update_particle_ent();
  void clear_has_update_particle_ent();
  void set_has_update_particle_should_draw();
  void clear_has_update_particle_should_draw();
  void set_has_update_particle_set_frozen();
  void clear_has_update_particle_set_frozen();
  void set_has_change_control_point_attachment();
  void clear_has_change_control_point_attachment();
  void set_has_update_entity_position();
  void clear_has_update_entity_position();
  void set_has_set_particle_fow_properties();
  void clear_has_set_particle_fow_properties();
  void set_has_set_particle_text();
  void clear_has_set_particle_text();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* release_particle_index_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle* create_particle_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle* destroy_particle_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* destroy_particle_involving_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle* update_particle_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd* update_particle_fwd_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient* update_particle_orient_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback* update_particle_fallback_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset* update_particle_offset_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt* update_particle_ent_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* update_particle_should_draw_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* update_particle_set_frozen_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* change_control_point_attachment_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition* update_entity_position_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* set_particle_fow_properties_;
  ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText* set_particle_text_;
  int type_;
  ::google::protobuf::uint32 index_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_OverheadEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_OverheadEvent) */ {
 public:
  CDOTAUserMsg_OverheadEvent();
  virtual ~CDOTAUserMsg_OverheadEvent();

  CDOTAUserMsg_OverheadEvent(const CDOTAUserMsg_OverheadEvent& from);

  inline CDOTAUserMsg_OverheadEvent& operator=(const CDOTAUserMsg_OverheadEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_OverheadEvent& default_instance();

  static inline const CDOTAUserMsg_OverheadEvent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_OverheadEvent*>(
               &_CDOTAUserMsg_OverheadEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(CDOTAUserMsg_OverheadEvent* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_OverheadEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_OverheadEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_OverheadEvent& from);
  void MergeFrom(const CDOTAUserMsg_OverheadEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_OverheadEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .proto.dota.DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];
  bool has_message_type() const;
  void clear_message_type();
  static const int kMessageTypeFieldNumber = 1;
  ::proto::dota::DOTA_OVERHEAD_ALERT message_type() const;
  void set_message_type(::proto::dota::DOTA_OVERHEAD_ALERT value);

  // optional int32 value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // optional int32 target_player_entindex = 3;
  bool has_target_player_entindex() const;
  void clear_target_player_entindex();
  static const int kTargetPlayerEntindexFieldNumber = 3;
  ::google::protobuf::int32 target_player_entindex() const;
  void set_target_player_entindex(::google::protobuf::int32 value);

  // optional int32 target_entindex = 4;
  bool has_target_entindex() const;
  void clear_target_entindex();
  static const int kTargetEntindexFieldNumber = 4;
  ::google::protobuf::int32 target_entindex() const;
  void set_target_entindex(::google::protobuf::int32 value);

  // optional int32 source_player_entindex = 5;
  bool has_source_player_entindex() const;
  void clear_source_player_entindex();
  static const int kSourcePlayerEntindexFieldNumber = 5;
  ::google::protobuf::int32 source_player_entindex() const;
  void set_source_player_entindex(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_OverheadEvent)
 private:
  void set_has_message_type();
  void clear_has_message_type();
  void set_has_value();
  void clear_has_value();
  void set_has_target_player_entindex();
  void clear_has_target_player_entindex();
  void set_has_target_entindex();
  void clear_has_target_entindex();
  void set_has_source_player_entindex();
  void clear_has_source_player_entindex();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int message_type_;
  ::google::protobuf::int32 value_;
  ::google::protobuf::int32 target_player_entindex_;
  ::google::protobuf::int32 target_entindex_;
  ::google::protobuf::int32 source_player_entindex_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TutorialTipInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_TutorialTipInfo) */ {
 public:
  CDOTAUserMsg_TutorialTipInfo();
  virtual ~CDOTAUserMsg_TutorialTipInfo();

  CDOTAUserMsg_TutorialTipInfo(const CDOTAUserMsg_TutorialTipInfo& from);

  inline CDOTAUserMsg_TutorialTipInfo& operator=(const CDOTAUserMsg_TutorialTipInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_TutorialTipInfo& default_instance();

  static inline const CDOTAUserMsg_TutorialTipInfo* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TutorialTipInfo*>(
               &_CDOTAUserMsg_TutorialTipInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(CDOTAUserMsg_TutorialTipInfo* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TutorialTipInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_TutorialTipInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_TutorialTipInfo& from);
  void MergeFrom(const CDOTAUserMsg_TutorialTipInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_TutorialTipInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 progress = 2;
  bool has_progress() const;
  void clear_progress();
  static const int kProgressFieldNumber = 2;
  ::google::protobuf::int32 progress() const;
  void set_progress(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_TutorialTipInfo)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_progress();
  void clear_has_progress();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 progress_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TutorialFinish : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_TutorialFinish) */ {
 public:
  CDOTAUserMsg_TutorialFinish();
  virtual ~CDOTAUserMsg_TutorialFinish();

  CDOTAUserMsg_TutorialFinish(const CDOTAUserMsg_TutorialFinish& from);

  inline CDOTAUserMsg_TutorialFinish& operator=(const CDOTAUserMsg_TutorialFinish& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_TutorialFinish& default_instance();

  static inline const CDOTAUserMsg_TutorialFinish* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TutorialFinish*>(
               &_CDOTAUserMsg_TutorialFinish_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(CDOTAUserMsg_TutorialFinish* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TutorialFinish* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_TutorialFinish* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_TutorialFinish& from);
  void MergeFrom(const CDOTAUserMsg_TutorialFinish& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_TutorialFinish* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string heading = 1;
  bool has_heading() const;
  void clear_heading();
  static const int kHeadingFieldNumber = 1;
  const ::std::string& heading() const;
  void set_heading(const ::std::string& value);
  #if LANG_CXX11
  void set_heading(::std::string&& value);
  #endif
  void set_heading(const char* value);
  void set_heading(const char* value, size_t size);
  ::std::string* mutable_heading();
  ::std::string* release_heading();
  void set_allocated_heading(::std::string* heading);

  // optional string emblem = 2;
  bool has_emblem() const;
  void clear_emblem();
  static const int kEmblemFieldNumber = 2;
  const ::std::string& emblem() const;
  void set_emblem(const ::std::string& value);
  #if LANG_CXX11
  void set_emblem(::std::string&& value);
  #endif
  void set_emblem(const char* value);
  void set_emblem(const char* value, size_t size);
  ::std::string* mutable_emblem();
  ::std::string* release_emblem();
  void set_allocated_emblem(::std::string* emblem);

  // optional string body = 3;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 3;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const char* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // optional bool success = 4;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 4;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_TutorialFinish)
 private:
  void set_has_heading();
  void clear_has_heading();
  void set_has_emblem();
  void clear_has_emblem();
  void set_has_body();
  void clear_has_body();
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr heading_;
  ::google::protobuf::internal::ArenaStringPtr emblem_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  bool success_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TutorialMinimapPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_TutorialMinimapPosition) */ {
 public:
  CDOTAUserMsg_TutorialMinimapPosition();
  virtual ~CDOTAUserMsg_TutorialMinimapPosition();

  CDOTAUserMsg_TutorialMinimapPosition(const CDOTAUserMsg_TutorialMinimapPosition& from);

  inline CDOTAUserMsg_TutorialMinimapPosition& operator=(const CDOTAUserMsg_TutorialMinimapPosition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_TutorialMinimapPosition& default_instance();

  static inline const CDOTAUserMsg_TutorialMinimapPosition* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TutorialMinimapPosition*>(
               &_CDOTAUserMsg_TutorialMinimapPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(CDOTAUserMsg_TutorialMinimapPosition* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TutorialMinimapPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_TutorialMinimapPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_TutorialMinimapPosition& from);
  void MergeFrom(const CDOTAUserMsg_TutorialMinimapPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_TutorialMinimapPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_TutorialMinimapPosition)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SendGenericToolTip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SendGenericToolTip) */ {
 public:
  CDOTAUserMsg_SendGenericToolTip();
  virtual ~CDOTAUserMsg_SendGenericToolTip();

  CDOTAUserMsg_SendGenericToolTip(const CDOTAUserMsg_SendGenericToolTip& from);

  inline CDOTAUserMsg_SendGenericToolTip& operator=(const CDOTAUserMsg_SendGenericToolTip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SendGenericToolTip& default_instance();

  static inline const CDOTAUserMsg_SendGenericToolTip* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SendGenericToolTip*>(
               &_CDOTAUserMsg_SendGenericToolTip_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(CDOTAUserMsg_SendGenericToolTip* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SendGenericToolTip* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SendGenericToolTip* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SendGenericToolTip& from);
  void MergeFrom(const CDOTAUserMsg_SendGenericToolTip& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SendGenericToolTip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string title = 1;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional int32 entindex = 3;
  bool has_entindex() const;
  void clear_entindex();
  static const int kEntindexFieldNumber = 3;
  ::google::protobuf::int32 entindex() const;
  void set_entindex(::google::protobuf::int32 value);

  // optional bool close = 4;
  bool has_close() const;
  void clear_close();
  static const int kCloseFieldNumber = 4;
  bool close() const;
  void set_close(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SendGenericToolTip)
 private:
  void set_has_title();
  void clear_has_title();
  void set_has_text();
  void clear_has_text();
  void set_has_entindex();
  void clear_has_entindex();
  void set_has_close();
  void clear_has_close();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::int32 entindex_;
  bool close_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_WorldLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_WorldLine) */ {
 public:
  CDOTAUserMsg_WorldLine();
  virtual ~CDOTAUserMsg_WorldLine();

  CDOTAUserMsg_WorldLine(const CDOTAUserMsg_WorldLine& from);

  inline CDOTAUserMsg_WorldLine& operator=(const CDOTAUserMsg_WorldLine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_WorldLine& default_instance();

  static inline const CDOTAUserMsg_WorldLine* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_WorldLine*>(
               &_CDOTAUserMsg_WorldLine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(CDOTAUserMsg_WorldLine* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_WorldLine* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_WorldLine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_WorldLine& from);
  void MergeFrom(const CDOTAUserMsg_WorldLine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_WorldLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CDOTAMsg_WorldLine worldline = 2;
  bool has_worldline() const;
  void clear_worldline();
  static const int kWorldlineFieldNumber = 2;
  const ::proto::dota::CDOTAMsg_WorldLine& worldline() const;
  ::proto::dota::CDOTAMsg_WorldLine* mutable_worldline();
  ::proto::dota::CDOTAMsg_WorldLine* release_worldline();
  void set_allocated_worldline(::proto::dota::CDOTAMsg_WorldLine* worldline);

  // optional int32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_WorldLine)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_worldline();
  void clear_has_worldline();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CDOTAMsg_WorldLine* worldline_;
  ::google::protobuf::int32 player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ChatWheel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ChatWheel) */ {
 public:
  CDOTAUserMsg_ChatWheel();
  virtual ~CDOTAUserMsg_ChatWheel();

  CDOTAUserMsg_ChatWheel(const CDOTAUserMsg_ChatWheel& from);

  inline CDOTAUserMsg_ChatWheel& operator=(const CDOTAUserMsg_ChatWheel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ChatWheel& default_instance();

  static inline const CDOTAUserMsg_ChatWheel* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ChatWheel*>(
               &_CDOTAUserMsg_ChatWheel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(CDOTAUserMsg_ChatWheel* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ChatWheel* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ChatWheel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ChatWheel& from);
  void MergeFrom(const CDOTAUserMsg_ChatWheel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ChatWheel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 chat_message_id = 1;
  bool has_chat_message_id() const;
  void clear_chat_message_id();
  static const int kChatMessageIdFieldNumber = 1;
  ::google::protobuf::uint32 chat_message_id() const;
  void set_chat_message_id(::google::protobuf::uint32 value);

  // optional uint32 player_id = 2;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 account_id = 3;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 3;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 param_hero_id = 4;
  bool has_param_hero_id() const;
  void clear_param_hero_id();
  static const int kParamHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 param_hero_id() const;
  void set_param_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ChatWheel)
 private:
  void set_has_chat_message_id();
  void clear_has_chat_message_id();
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_param_hero_id();
  void clear_has_param_hero_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 chat_message_id_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 param_hero_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ReceivedXmasGift : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ReceivedXmasGift) */ {
 public:
  CDOTAUserMsg_ReceivedXmasGift();
  virtual ~CDOTAUserMsg_ReceivedXmasGift();

  CDOTAUserMsg_ReceivedXmasGift(const CDOTAUserMsg_ReceivedXmasGift& from);

  inline CDOTAUserMsg_ReceivedXmasGift& operator=(const CDOTAUserMsg_ReceivedXmasGift& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ReceivedXmasGift& default_instance();

  static inline const CDOTAUserMsg_ReceivedXmasGift* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ReceivedXmasGift*>(
               &_CDOTAUserMsg_ReceivedXmasGift_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(CDOTAUserMsg_ReceivedXmasGift* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ReceivedXmasGift* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ReceivedXmasGift* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ReceivedXmasGift& from);
  void MergeFrom(const CDOTAUserMsg_ReceivedXmasGift& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ReceivedXmasGift* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string item_name = 2;
  bool has_item_name() const;
  void clear_item_name();
  static const int kItemNameFieldNumber = 2;
  const ::std::string& item_name() const;
  void set_item_name(const ::std::string& value);
  #if LANG_CXX11
  void set_item_name(::std::string&& value);
  #endif
  void set_item_name(const char* value);
  void set_item_name(const char* value, size_t size);
  ::std::string* mutable_item_name();
  ::std::string* release_item_name();
  void set_allocated_item_name(::std::string* item_name);

  // optional int32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // optional int32 inventory_slot = 3;
  bool has_inventory_slot() const;
  void clear_inventory_slot();
  static const int kInventorySlotFieldNumber = 3;
  ::google::protobuf::int32 inventory_slot() const;
  void set_inventory_slot(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ReceivedXmasGift)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_item_name();
  void clear_has_item_name();
  void set_has_inventory_slot();
  void clear_has_inventory_slot();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr item_name_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 inventory_slot_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ShowSurvey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ShowSurvey) */ {
 public:
  CDOTAUserMsg_ShowSurvey();
  virtual ~CDOTAUserMsg_ShowSurvey();

  CDOTAUserMsg_ShowSurvey(const CDOTAUserMsg_ShowSurvey& from);

  inline CDOTAUserMsg_ShowSurvey& operator=(const CDOTAUserMsg_ShowSurvey& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ShowSurvey& default_instance();

  static inline const CDOTAUserMsg_ShowSurvey* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ShowSurvey*>(
               &_CDOTAUserMsg_ShowSurvey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(CDOTAUserMsg_ShowSurvey* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ShowSurvey* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ShowSurvey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ShowSurvey& from);
  void MergeFrom(const CDOTAUserMsg_ShowSurvey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ShowSurvey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string response_style = 3;
  bool has_response_style() const;
  void clear_response_style();
  static const int kResponseStyleFieldNumber = 3;
  const ::std::string& response_style() const;
  void set_response_style(const ::std::string& value);
  #if LANG_CXX11
  void set_response_style(::std::string&& value);
  #endif
  void set_response_style(const char* value);
  void set_response_style(const char* value, size_t size);
  ::std::string* mutable_response_style();
  ::std::string* release_response_style();
  void set_allocated_response_style(::std::string* response_style);

  // optional string teammate_name = 5;
  bool has_teammate_name() const;
  void clear_teammate_name();
  static const int kTeammateNameFieldNumber = 5;
  const ::std::string& teammate_name() const;
  void set_teammate_name(const ::std::string& value);
  #if LANG_CXX11
  void set_teammate_name(::std::string&& value);
  #endif
  void set_teammate_name(const char* value);
  void set_teammate_name(const char* value, size_t size);
  ::std::string* mutable_teammate_name();
  ::std::string* release_teammate_name();
  void set_allocated_teammate_name(::std::string* teammate_name);

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional int32 survey_id = 1;
  bool has_survey_id() const;
  void clear_survey_id();
  static const int kSurveyIdFieldNumber = 1;
  ::google::protobuf::int32 survey_id() const;
  void set_survey_id(::google::protobuf::int32 value);

  // optional uint32 teammate_hero_id = 4;
  bool has_teammate_hero_id() const;
  void clear_teammate_hero_id();
  static const int kTeammateHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 teammate_hero_id() const;
  void set_teammate_hero_id(::google::protobuf::uint32 value);

  // optional uint32 teammate_account_id = 6;
  bool has_teammate_account_id() const;
  void clear_teammate_account_id();
  static const int kTeammateAccountIdFieldNumber = 6;
  ::google::protobuf::uint32 teammate_account_id() const;
  void set_teammate_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ShowSurvey)
 private:
  void set_has_survey_id();
  void clear_has_survey_id();
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_response_style();
  void clear_has_response_style();
  void set_has_teammate_hero_id();
  void clear_has_teammate_hero_id();
  void set_has_teammate_name();
  void clear_has_teammate_name();
  void set_has_teammate_account_id();
  void clear_has_teammate_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr response_style_;
  ::google::protobuf::internal::ArenaStringPtr teammate_name_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::int32 survey_id_;
  ::google::protobuf::uint32 teammate_hero_id_;
  ::google::protobuf::uint32 teammate_account_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UpdateSharedContent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_UpdateSharedContent) */ {
 public:
  CDOTAUserMsg_UpdateSharedContent();
  virtual ~CDOTAUserMsg_UpdateSharedContent();

  CDOTAUserMsg_UpdateSharedContent(const CDOTAUserMsg_UpdateSharedContent& from);

  inline CDOTAUserMsg_UpdateSharedContent& operator=(const CDOTAUserMsg_UpdateSharedContent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_UpdateSharedContent& default_instance();

  static inline const CDOTAUserMsg_UpdateSharedContent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UpdateSharedContent*>(
               &_CDOTAUserMsg_UpdateSharedContent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(CDOTAUserMsg_UpdateSharedContent* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UpdateSharedContent* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_UpdateSharedContent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_UpdateSharedContent& from);
  void MergeFrom(const CDOTAUserMsg_UpdateSharedContent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_UpdateSharedContent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 slot_type = 1;
  bool has_slot_type() const;
  void clear_slot_type();
  static const int kSlotTypeFieldNumber = 1;
  ::google::protobuf::int32 slot_type() const;
  void set_slot_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_UpdateSharedContent)
 private:
  void set_has_slot_type();
  void clear_has_slot_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 slot_type_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TutorialRequestExp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_TutorialRequestExp) */ {
 public:
  CDOTAUserMsg_TutorialRequestExp();
  virtual ~CDOTAUserMsg_TutorialRequestExp();

  CDOTAUserMsg_TutorialRequestExp(const CDOTAUserMsg_TutorialRequestExp& from);

  inline CDOTAUserMsg_TutorialRequestExp& operator=(const CDOTAUserMsg_TutorialRequestExp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_TutorialRequestExp& default_instance();

  static inline const CDOTAUserMsg_TutorialRequestExp* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TutorialRequestExp*>(
               &_CDOTAUserMsg_TutorialRequestExp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(CDOTAUserMsg_TutorialRequestExp* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TutorialRequestExp* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_TutorialRequestExp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_TutorialRequestExp& from);
  void MergeFrom(const CDOTAUserMsg_TutorialRequestExp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_TutorialRequestExp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_TutorialRequestExp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TutorialFade : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_TutorialFade) */ {
 public:
  CDOTAUserMsg_TutorialFade();
  virtual ~CDOTAUserMsg_TutorialFade();

  CDOTAUserMsg_TutorialFade(const CDOTAUserMsg_TutorialFade& from);

  inline CDOTAUserMsg_TutorialFade& operator=(const CDOTAUserMsg_TutorialFade& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_TutorialFade& default_instance();

  static inline const CDOTAUserMsg_TutorialFade* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TutorialFade*>(
               &_CDOTAUserMsg_TutorialFade_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(CDOTAUserMsg_TutorialFade* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TutorialFade* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_TutorialFade* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_TutorialFade& from);
  void MergeFrom(const CDOTAUserMsg_TutorialFade& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_TutorialFade* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 tgt_alpha = 1;
  bool has_tgt_alpha() const;
  void clear_tgt_alpha();
  static const int kTgtAlphaFieldNumber = 1;
  ::google::protobuf::int32 tgt_alpha() const;
  void set_tgt_alpha(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_TutorialFade)
 private:
  void set_has_tgt_alpha();
  void clear_has_tgt_alpha();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 tgt_alpha_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TutorialPingMinimap : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_TutorialPingMinimap) */ {
 public:
  CDOTAUserMsg_TutorialPingMinimap();
  virtual ~CDOTAUserMsg_TutorialPingMinimap();

  CDOTAUserMsg_TutorialPingMinimap(const CDOTAUserMsg_TutorialPingMinimap& from);

  inline CDOTAUserMsg_TutorialPingMinimap& operator=(const CDOTAUserMsg_TutorialPingMinimap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_TutorialPingMinimap& default_instance();

  static inline const CDOTAUserMsg_TutorialPingMinimap* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TutorialPingMinimap*>(
               &_CDOTAUserMsg_TutorialPingMinimap_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(CDOTAUserMsg_TutorialPingMinimap* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TutorialPingMinimap* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_TutorialPingMinimap* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_TutorialPingMinimap& from);
  void MergeFrom(const CDOTAUserMsg_TutorialPingMinimap& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_TutorialPingMinimap* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional float pos_x = 2;
  bool has_pos_x() const;
  void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  float pos_x() const;
  void set_pos_x(float value);

  // optional float pos_y = 3;
  bool has_pos_y() const;
  void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  float pos_y() const;
  void set_pos_y(float value);

  // optional float pos_z = 4;
  bool has_pos_z() const;
  void clear_pos_z();
  static const int kPosZFieldNumber = 4;
  float pos_z() const;
  void set_pos_z(float value);

  // optional int32 entity_index = 5;
  bool has_entity_index() const;
  void clear_entity_index();
  static const int kEntityIndexFieldNumber = 5;
  ::google::protobuf::int32 entity_index() const;
  void set_entity_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_TutorialPingMinimap)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_pos_x();
  void clear_has_pos_x();
  void set_has_pos_y();
  void clear_has_pos_y();
  void set_has_pos_z();
  void clear_has_pos_z();
  void set_has_entity_index();
  void clear_has_entity_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  float pos_x_;
  float pos_y_;
  float pos_z_;
  ::google::protobuf::int32 entity_index_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_GamerulesStateChanged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_GamerulesStateChanged) */ {
 public:
  CDOTAUserMsg_GamerulesStateChanged();
  virtual ~CDOTAUserMsg_GamerulesStateChanged();

  CDOTAUserMsg_GamerulesStateChanged(const CDOTAUserMsg_GamerulesStateChanged& from);

  inline CDOTAUserMsg_GamerulesStateChanged& operator=(const CDOTAUserMsg_GamerulesStateChanged& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_GamerulesStateChanged& default_instance();

  static inline const CDOTAUserMsg_GamerulesStateChanged* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_GamerulesStateChanged*>(
               &_CDOTAUserMsg_GamerulesStateChanged_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(CDOTAUserMsg_GamerulesStateChanged* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_GamerulesStateChanged* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_GamerulesStateChanged* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_GamerulesStateChanged& from);
  void MergeFrom(const CDOTAUserMsg_GamerulesStateChanged& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_GamerulesStateChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 state = 1;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 1;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_GamerulesStateChanged)
 private:
  void set_has_state();
  void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 state_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_AddQuestLogEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_AddQuestLogEntry) */ {
 public:
  CDOTAUserMsg_AddQuestLogEntry();
  virtual ~CDOTAUserMsg_AddQuestLogEntry();

  CDOTAUserMsg_AddQuestLogEntry(const CDOTAUserMsg_AddQuestLogEntry& from);

  inline CDOTAUserMsg_AddQuestLogEntry& operator=(const CDOTAUserMsg_AddQuestLogEntry& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_AddQuestLogEntry& default_instance();

  static inline const CDOTAUserMsg_AddQuestLogEntry* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_AddQuestLogEntry*>(
               &_CDOTAUserMsg_AddQuestLogEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(CDOTAUserMsg_AddQuestLogEntry* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_AddQuestLogEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_AddQuestLogEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_AddQuestLogEntry& from);
  void MergeFrom(const CDOTAUserMsg_AddQuestLogEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_AddQuestLogEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string npc_name = 1;
  bool has_npc_name() const;
  void clear_npc_name();
  static const int kNpcNameFieldNumber = 1;
  const ::std::string& npc_name() const;
  void set_npc_name(const ::std::string& value);
  #if LANG_CXX11
  void set_npc_name(::std::string&& value);
  #endif
  void set_npc_name(const char* value);
  void set_npc_name(const char* value, size_t size);
  ::std::string* mutable_npc_name();
  ::std::string* release_npc_name();
  void set_allocated_npc_name(::std::string* npc_name);

  // optional string npc_dialog = 2;
  bool has_npc_dialog() const;
  void clear_npc_dialog();
  static const int kNpcDialogFieldNumber = 2;
  const ::std::string& npc_dialog() const;
  void set_npc_dialog(const ::std::string& value);
  #if LANG_CXX11
  void set_npc_dialog(::std::string&& value);
  #endif
  void set_npc_dialog(const char* value);
  void set_npc_dialog(const char* value, size_t size);
  ::std::string* mutable_npc_dialog();
  ::std::string* release_npc_dialog();
  void set_allocated_npc_dialog(::std::string* npc_dialog);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_AddQuestLogEntry)
 private:
  void set_has_npc_name();
  void clear_has_npc_name();
  void set_has_npc_dialog();
  void clear_has_npc_dialog();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr npc_name_;
  ::google::protobuf::internal::ArenaStringPtr npc_dialog_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SendStatPopup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SendStatPopup) */ {
 public:
  CDOTAUserMsg_SendStatPopup();
  virtual ~CDOTAUserMsg_SendStatPopup();

  CDOTAUserMsg_SendStatPopup(const CDOTAUserMsg_SendStatPopup& from);

  inline CDOTAUserMsg_SendStatPopup& operator=(const CDOTAUserMsg_SendStatPopup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SendStatPopup& default_instance();

  static inline const CDOTAUserMsg_SendStatPopup* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SendStatPopup*>(
               &_CDOTAUserMsg_SendStatPopup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(CDOTAUserMsg_SendStatPopup* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SendStatPopup* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SendStatPopup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SendStatPopup& from);
  void MergeFrom(const CDOTAUserMsg_SendStatPopup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SendStatPopup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CDOTAMsg_SendStatPopup statpopup = 2;
  bool has_statpopup() const;
  void clear_statpopup();
  static const int kStatpopupFieldNumber = 2;
  const ::proto::dota::CDOTAMsg_SendStatPopup& statpopup() const;
  ::proto::dota::CDOTAMsg_SendStatPopup* mutable_statpopup();
  ::proto::dota::CDOTAMsg_SendStatPopup* release_statpopup();
  void set_allocated_statpopup(::proto::dota::CDOTAMsg_SendStatPopup* statpopup);

  // optional int32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SendStatPopup)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_statpopup();
  void clear_has_statpopup();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CDOTAMsg_SendStatPopup* statpopup_;
  ::google::protobuf::int32 player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_DismissAllStatPopups : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_DismissAllStatPopups) */ {
 public:
  CDOTAUserMsg_DismissAllStatPopups();
  virtual ~CDOTAUserMsg_DismissAllStatPopups();

  CDOTAUserMsg_DismissAllStatPopups(const CDOTAUserMsg_DismissAllStatPopups& from);

  inline CDOTAUserMsg_DismissAllStatPopups& operator=(const CDOTAUserMsg_DismissAllStatPopups& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_DismissAllStatPopups& default_instance();

  static inline const CDOTAUserMsg_DismissAllStatPopups* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_DismissAllStatPopups*>(
               &_CDOTAUserMsg_DismissAllStatPopups_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(CDOTAUserMsg_DismissAllStatPopups* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_DismissAllStatPopups* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_DismissAllStatPopups* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_DismissAllStatPopups& from);
  void MergeFrom(const CDOTAUserMsg_DismissAllStatPopups& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_DismissAllStatPopups* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CDOTAMsg_DismissAllStatPopups dismissallmsg = 1;
  bool has_dismissallmsg() const;
  void clear_dismissallmsg();
  static const int kDismissallmsgFieldNumber = 1;
  const ::proto::dota::CDOTAMsg_DismissAllStatPopups& dismissallmsg() const;
  ::proto::dota::CDOTAMsg_DismissAllStatPopups* mutable_dismissallmsg();
  ::proto::dota::CDOTAMsg_DismissAllStatPopups* release_dismissallmsg();
  void set_allocated_dismissallmsg(::proto::dota::CDOTAMsg_DismissAllStatPopups* dismissallmsg);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_DismissAllStatPopups)
 private:
  void set_has_dismissallmsg();
  void clear_has_dismissallmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CDOTAMsg_DismissAllStatPopups* dismissallmsg_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SendRoshanSpectatorPhase : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SendRoshanSpectatorPhase) */ {
 public:
  CDOTAUserMsg_SendRoshanSpectatorPhase();
  virtual ~CDOTAUserMsg_SendRoshanSpectatorPhase();

  CDOTAUserMsg_SendRoshanSpectatorPhase(const CDOTAUserMsg_SendRoshanSpectatorPhase& from);

  inline CDOTAUserMsg_SendRoshanSpectatorPhase& operator=(const CDOTAUserMsg_SendRoshanSpectatorPhase& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SendRoshanSpectatorPhase& default_instance();

  static inline const CDOTAUserMsg_SendRoshanSpectatorPhase* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SendRoshanSpectatorPhase*>(
               &_CDOTAUserMsg_SendRoshanSpectatorPhase_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(CDOTAUserMsg_SendRoshanSpectatorPhase* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SendRoshanSpectatorPhase* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SendRoshanSpectatorPhase* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SendRoshanSpectatorPhase& from);
  void MergeFrom(const CDOTAUserMsg_SendRoshanSpectatorPhase& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SendRoshanSpectatorPhase* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.DOTA_ROSHAN_PHASE phase = 1 [default = k_SRSP_ROSHAN_ALIVE];
  bool has_phase() const;
  void clear_phase();
  static const int kPhaseFieldNumber = 1;
  ::proto::dota::DOTA_ROSHAN_PHASE phase() const;
  void set_phase(::proto::dota::DOTA_ROSHAN_PHASE value);

  // optional int32 phase_start_time = 2;
  bool has_phase_start_time() const;
  void clear_phase_start_time();
  static const int kPhaseStartTimeFieldNumber = 2;
  ::google::protobuf::int32 phase_start_time() const;
  void set_phase_start_time(::google::protobuf::int32 value);

  // optional int32 phase_length = 3;
  bool has_phase_length() const;
  void clear_phase_length();
  static const int kPhaseLengthFieldNumber = 3;
  ::google::protobuf::int32 phase_length() const;
  void set_phase_length(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SendRoshanSpectatorPhase)
 private:
  void set_has_phase();
  void clear_has_phase();
  void set_has_phase_start_time();
  void clear_has_phase_start_time();
  void set_has_phase_length();
  void clear_has_phase_length();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int phase_;
  ::google::protobuf::int32 phase_start_time_;
  ::google::protobuf::int32 phase_length_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SendRoshanPopup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SendRoshanPopup) */ {
 public:
  CDOTAUserMsg_SendRoshanPopup();
  virtual ~CDOTAUserMsg_SendRoshanPopup();

  CDOTAUserMsg_SendRoshanPopup(const CDOTAUserMsg_SendRoshanPopup& from);

  inline CDOTAUserMsg_SendRoshanPopup& operator=(const CDOTAUserMsg_SendRoshanPopup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SendRoshanPopup& default_instance();

  static inline const CDOTAUserMsg_SendRoshanPopup* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SendRoshanPopup*>(
               &_CDOTAUserMsg_SendRoshanPopup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(CDOTAUserMsg_SendRoshanPopup* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SendRoshanPopup* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SendRoshanPopup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SendRoshanPopup& from);
  void MergeFrom(const CDOTAUserMsg_SendRoshanPopup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SendRoshanPopup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool reclaimed = 1;
  bool has_reclaimed() const;
  void clear_reclaimed();
  static const int kReclaimedFieldNumber = 1;
  bool reclaimed() const;
  void set_reclaimed(bool value);

  // optional int32 gametime = 2;
  bool has_gametime() const;
  void clear_gametime();
  static const int kGametimeFieldNumber = 2;
  ::google::protobuf::int32 gametime() const;
  void set_gametime(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SendRoshanPopup)
 private:
  void set_has_reclaimed();
  void clear_has_reclaimed();
  void set_has_gametime();
  void clear_has_gametime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool reclaimed_;
  ::google::protobuf::int32 gametime_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SendFinalGold : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SendFinalGold) */ {
 public:
  CDOTAUserMsg_SendFinalGold();
  virtual ~CDOTAUserMsg_SendFinalGold();

  CDOTAUserMsg_SendFinalGold(const CDOTAUserMsg_SendFinalGold& from);

  inline CDOTAUserMsg_SendFinalGold& operator=(const CDOTAUserMsg_SendFinalGold& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SendFinalGold& default_instance();

  static inline const CDOTAUserMsg_SendFinalGold* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SendFinalGold*>(
               &_CDOTAUserMsg_SendFinalGold_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(CDOTAUserMsg_SendFinalGold* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SendFinalGold* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SendFinalGold* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SendFinalGold& from);
  void MergeFrom(const CDOTAUserMsg_SendFinalGold& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SendFinalGold* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 reliable_gold = 1;
  int reliable_gold_size() const;
  void clear_reliable_gold();
  static const int kReliableGoldFieldNumber = 1;
  ::google::protobuf::uint32 reliable_gold(int index) const;
  void set_reliable_gold(int index, ::google::protobuf::uint32 value);
  void add_reliable_gold(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      reliable_gold() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_reliable_gold();

  // repeated uint32 unreliable_gold = 2;
  int unreliable_gold_size() const;
  void clear_unreliable_gold();
  static const int kUnreliableGoldFieldNumber = 2;
  ::google::protobuf::uint32 unreliable_gold(int index) const;
  void set_unreliable_gold(int index, ::google::protobuf::uint32 value);
  void add_unreliable_gold(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      unreliable_gold() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_unreliable_gold();

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SendFinalGold)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > reliable_gold_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > unreliable_gold_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CustomMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CustomMsg) */ {
 public:
  CDOTAUserMsg_CustomMsg();
  virtual ~CDOTAUserMsg_CustomMsg();

  CDOTAUserMsg_CustomMsg(const CDOTAUserMsg_CustomMsg& from);

  inline CDOTAUserMsg_CustomMsg& operator=(const CDOTAUserMsg_CustomMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CustomMsg& default_instance();

  static inline const CDOTAUserMsg_CustomMsg* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CustomMsg*>(
               &_CDOTAUserMsg_CustomMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(CDOTAUserMsg_CustomMsg* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CustomMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CustomMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CustomMsg& from);
  void MergeFrom(const CDOTAUserMsg_CustomMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CustomMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional int32 player_id = 2;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 2;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // optional int32 value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CustomMsg)
 private:
  void set_has_message();
  void clear_has_message();
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 value_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CoachHUDPing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CoachHUDPing) */ {
 public:
  CDOTAUserMsg_CoachHUDPing();
  virtual ~CDOTAUserMsg_CoachHUDPing();

  CDOTAUserMsg_CoachHUDPing(const CDOTAUserMsg_CoachHUDPing& from);

  inline CDOTAUserMsg_CoachHUDPing& operator=(const CDOTAUserMsg_CoachHUDPing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CoachHUDPing& default_instance();

  static inline const CDOTAUserMsg_CoachHUDPing* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CoachHUDPing*>(
               &_CDOTAUserMsg_CoachHUDPing_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(CDOTAUserMsg_CoachHUDPing* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CoachHUDPing* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CoachHUDPing* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CoachHUDPing& from);
  void MergeFrom(const CDOTAUserMsg_CoachHUDPing& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CoachHUDPing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CDOTAMsg_CoachHUDPing hud_ping = 2;
  bool has_hud_ping() const;
  void clear_hud_ping();
  static const int kHudPingFieldNumber = 2;
  const ::proto::dota::CDOTAMsg_CoachHUDPing& hud_ping() const;
  ::proto::dota::CDOTAMsg_CoachHUDPing* mutable_hud_ping();
  ::proto::dota::CDOTAMsg_CoachHUDPing* release_hud_ping();
  void set_allocated_hud_ping(::proto::dota::CDOTAMsg_CoachHUDPing* hud_ping);

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CoachHUDPing)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_hud_ping();
  void clear_has_hud_ping();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CDOTAMsg_CoachHUDPing* hud_ping_;
  ::google::protobuf::uint32 player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ClientLoadGridNav : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ClientLoadGridNav) */ {
 public:
  CDOTAUserMsg_ClientLoadGridNav();
  virtual ~CDOTAUserMsg_ClientLoadGridNav();

  CDOTAUserMsg_ClientLoadGridNav(const CDOTAUserMsg_ClientLoadGridNav& from);

  inline CDOTAUserMsg_ClientLoadGridNav& operator=(const CDOTAUserMsg_ClientLoadGridNav& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ClientLoadGridNav& default_instance();

  static inline const CDOTAUserMsg_ClientLoadGridNav* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ClientLoadGridNav*>(
               &_CDOTAUserMsg_ClientLoadGridNav_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(CDOTAUserMsg_ClientLoadGridNav* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ClientLoadGridNav* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ClientLoadGridNav* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ClientLoadGridNav& from);
  void MergeFrom(const CDOTAUserMsg_ClientLoadGridNav& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ClientLoadGridNav* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ClientLoadGridNav)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TE_Projectile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_TE_Projectile) */ {
 public:
  CDOTAUserMsg_TE_Projectile();
  virtual ~CDOTAUserMsg_TE_Projectile();

  CDOTAUserMsg_TE_Projectile(const CDOTAUserMsg_TE_Projectile& from);

  inline CDOTAUserMsg_TE_Projectile& operator=(const CDOTAUserMsg_TE_Projectile& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_TE_Projectile& default_instance();

  static inline const CDOTAUserMsg_TE_Projectile* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TE_Projectile*>(
               &_CDOTAUserMsg_TE_Projectile_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(CDOTAUserMsg_TE_Projectile* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TE_Projectile* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_TE_Projectile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_TE_Projectile& from);
  void MergeFrom(const CDOTAUserMsg_TE_Projectile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_TE_Projectile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 hSource = 1;
  bool has_hsource() const;
  void clear_hsource();
  static const int kHSourceFieldNumber = 1;
  ::google::protobuf::int32 hsource() const;
  void set_hsource(::google::protobuf::int32 value);

  // optional int32 hTarget = 2;
  bool has_htarget() const;
  void clear_htarget();
  static const int kHTargetFieldNumber = 2;
  ::google::protobuf::int32 htarget() const;
  void set_htarget(::google::protobuf::int32 value);

  // optional int32 moveSpeed = 3;
  bool has_movespeed() const;
  void clear_movespeed();
  static const int kMoveSpeedFieldNumber = 3;
  ::google::protobuf::int32 movespeed() const;
  void set_movespeed(::google::protobuf::int32 value);

  // optional int32 sourceAttachment = 4;
  bool has_sourceattachment() const;
  void clear_sourceattachment();
  static const int kSourceAttachmentFieldNumber = 4;
  ::google::protobuf::int32 sourceattachment() const;
  void set_sourceattachment(::google::protobuf::int32 value);

  // optional int64 particleSystemHandle = 5;
  bool has_particlesystemhandle() const;
  void clear_particlesystemhandle();
  static const int kParticleSystemHandleFieldNumber = 5;
  ::google::protobuf::int64 particlesystemhandle() const;
  void set_particlesystemhandle(::google::protobuf::int64 value);

  // optional bool dodgeable = 6;
  bool has_dodgeable() const;
  void clear_dodgeable();
  static const int kDodgeableFieldNumber = 6;
  bool dodgeable() const;
  void set_dodgeable(bool value);

  // optional bool isAttack = 7;
  bool has_isattack() const;
  void clear_isattack();
  static const int kIsAttackFieldNumber = 7;
  bool isattack() const;
  void set_isattack(bool value);

  // optional bool isEvaded = 8;
  bool has_isevaded() const;
  void clear_isevaded();
  static const int kIsEvadedFieldNumber = 8;
  bool isevaded() const;
  void set_isevaded(bool value);

  // optional float expireTime = 9;
  bool has_expiretime() const;
  void clear_expiretime();
  static const int kExpireTimeFieldNumber = 9;
  float expiretime() const;
  void set_expiretime(float value);

  // optional float maximpacttime = 10;
  bool has_maximpacttime() const;
  void clear_maximpacttime();
  static const int kMaximpacttimeFieldNumber = 10;
  float maximpacttime() const;
  void set_maximpacttime(float value);

  // optional fixed32 colorgemcolor = 11;
  bool has_colorgemcolor() const;
  void clear_colorgemcolor();
  static const int kColorgemcolorFieldNumber = 11;
  ::google::protobuf::uint32 colorgemcolor() const;
  void set_colorgemcolor(::google::protobuf::uint32 value);

  // optional int32 launch_tick = 12;
  bool has_launch_tick() const;
  void clear_launch_tick();
  static const int kLaunchTickFieldNumber = 12;
  ::google::protobuf::int32 launch_tick() const;
  void set_launch_tick(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_TE_Projectile)
 private:
  void set_has_hsource();
  void clear_has_hsource();
  void set_has_htarget();
  void clear_has_htarget();
  void set_has_movespeed();
  void clear_has_movespeed();
  void set_has_sourceattachment();
  void clear_has_sourceattachment();
  void set_has_particlesystemhandle();
  void clear_has_particlesystemhandle();
  void set_has_dodgeable();
  void clear_has_dodgeable();
  void set_has_isattack();
  void clear_has_isattack();
  void set_has_isevaded();
  void clear_has_isevaded();
  void set_has_expiretime();
  void clear_has_expiretime();
  void set_has_maximpacttime();
  void clear_has_maximpacttime();
  void set_has_colorgemcolor();
  void clear_has_colorgemcolor();
  void set_has_launch_tick();
  void clear_has_launch_tick();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 hsource_;
  ::google::protobuf::int32 htarget_;
  ::google::protobuf::int32 movespeed_;
  ::google::protobuf::int32 sourceattachment_;
  ::google::protobuf::int64 particlesystemhandle_;
  bool dodgeable_;
  bool isattack_;
  bool isevaded_;
  float expiretime_;
  float maximpacttime_;
  ::google::protobuf::uint32 colorgemcolor_;
  ::google::protobuf::int32 launch_tick_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TE_ProjectileLoc : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_TE_ProjectileLoc) */ {
 public:
  CDOTAUserMsg_TE_ProjectileLoc();
  virtual ~CDOTAUserMsg_TE_ProjectileLoc();

  CDOTAUserMsg_TE_ProjectileLoc(const CDOTAUserMsg_TE_ProjectileLoc& from);

  inline CDOTAUserMsg_TE_ProjectileLoc& operator=(const CDOTAUserMsg_TE_ProjectileLoc& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_TE_ProjectileLoc& default_instance();

  static inline const CDOTAUserMsg_TE_ProjectileLoc* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TE_ProjectileLoc*>(
               &_CDOTAUserMsg_TE_ProjectileLoc_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(CDOTAUserMsg_TE_ProjectileLoc* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TE_ProjectileLoc* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_TE_ProjectileLoc* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_TE_ProjectileLoc& from);
  void MergeFrom(const CDOTAUserMsg_TE_ProjectileLoc& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_TE_ProjectileLoc* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector vSourceLoc = 1;
  bool has_vsourceloc() const;
  void clear_vsourceloc();
  static const int kVSourceLocFieldNumber = 1;
  const ::proto::dota::CMsgVector& vsourceloc() const;
  ::proto::dota::CMsgVector* mutable_vsourceloc();
  ::proto::dota::CMsgVector* release_vsourceloc();
  void set_allocated_vsourceloc(::proto::dota::CMsgVector* vsourceloc);

  // optional .proto.dota.CMsgVector vTargetLoc = 10;
  bool has_vtargetloc() const;
  void clear_vtargetloc();
  static const int kVTargetLocFieldNumber = 10;
  const ::proto::dota::CMsgVector& vtargetloc() const;
  ::proto::dota::CMsgVector* mutable_vtargetloc();
  ::proto::dota::CMsgVector* release_vtargetloc();
  void set_allocated_vtargetloc(::proto::dota::CMsgVector* vtargetloc);

  // optional int32 hTarget = 2;
  bool has_htarget() const;
  void clear_htarget();
  static const int kHTargetFieldNumber = 2;
  ::google::protobuf::int32 htarget() const;
  void set_htarget(::google::protobuf::int32 value);

  // optional int32 moveSpeed = 3;
  bool has_movespeed() const;
  void clear_movespeed();
  static const int kMoveSpeedFieldNumber = 3;
  ::google::protobuf::int32 movespeed() const;
  void set_movespeed(::google::protobuf::int32 value);

  // optional int64 particleSystemHandle = 4;
  bool has_particlesystemhandle() const;
  void clear_particlesystemhandle();
  static const int kParticleSystemHandleFieldNumber = 4;
  ::google::protobuf::int64 particlesystemhandle() const;
  void set_particlesystemhandle(::google::protobuf::int64 value);

  // optional bool dodgeable = 5;
  bool has_dodgeable() const;
  void clear_dodgeable();
  static const int kDodgeableFieldNumber = 5;
  bool dodgeable() const;
  void set_dodgeable(bool value);

  // optional bool isAttack = 6;
  bool has_isattack() const;
  void clear_isattack();
  static const int kIsAttackFieldNumber = 6;
  bool isattack() const;
  void set_isattack(bool value);

  // optional bool isEvaded = 8;
  bool has_isevaded() const;
  void clear_isevaded();
  static const int kIsEvadedFieldNumber = 8;
  bool isevaded() const;
  void set_isevaded(bool value);

  // optional float expireTime = 9;
  bool has_expiretime() const;
  void clear_expiretime();
  static const int kExpireTimeFieldNumber = 9;
  float expiretime() const;
  void set_expiretime(float value);

  // optional fixed32 colorgemcolor = 11;
  bool has_colorgemcolor() const;
  void clear_colorgemcolor();
  static const int kColorgemcolorFieldNumber = 11;
  ::google::protobuf::uint32 colorgemcolor() const;
  void set_colorgemcolor(::google::protobuf::uint32 value);

  // optional int32 launch_tick = 12;
  bool has_launch_tick() const;
  void clear_launch_tick();
  static const int kLaunchTickFieldNumber = 12;
  ::google::protobuf::int32 launch_tick() const;
  void set_launch_tick(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_TE_ProjectileLoc)
 private:
  void set_has_vsourceloc();
  void clear_has_vsourceloc();
  void set_has_htarget();
  void clear_has_htarget();
  void set_has_movespeed();
  void clear_has_movespeed();
  void set_has_particlesystemhandle();
  void clear_has_particlesystemhandle();
  void set_has_dodgeable();
  void clear_has_dodgeable();
  void set_has_isattack();
  void clear_has_isattack();
  void set_has_isevaded();
  void clear_has_isevaded();
  void set_has_expiretime();
  void clear_has_expiretime();
  void set_has_vtargetloc();
  void clear_has_vtargetloc();
  void set_has_colorgemcolor();
  void clear_has_colorgemcolor();
  void set_has_launch_tick();
  void clear_has_launch_tick();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* vsourceloc_;
  ::proto::dota::CMsgVector* vtargetloc_;
  ::google::protobuf::int32 htarget_;
  ::google::protobuf::int32 movespeed_;
  ::google::protobuf::int64 particlesystemhandle_;
  bool dodgeable_;
  bool isattack_;
  bool isevaded_;
  float expiretime_;
  ::google::protobuf::uint32 colorgemcolor_;
  ::google::protobuf::int32 launch_tick_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TE_DotaBloodImpact : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_TE_DotaBloodImpact) */ {
 public:
  CDOTAUserMsg_TE_DotaBloodImpact();
  virtual ~CDOTAUserMsg_TE_DotaBloodImpact();

  CDOTAUserMsg_TE_DotaBloodImpact(const CDOTAUserMsg_TE_DotaBloodImpact& from);

  inline CDOTAUserMsg_TE_DotaBloodImpact& operator=(const CDOTAUserMsg_TE_DotaBloodImpact& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_TE_DotaBloodImpact& default_instance();

  static inline const CDOTAUserMsg_TE_DotaBloodImpact* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TE_DotaBloodImpact*>(
               &_CDOTAUserMsg_TE_DotaBloodImpact_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(CDOTAUserMsg_TE_DotaBloodImpact* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TE_DotaBloodImpact* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_TE_DotaBloodImpact* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_TE_DotaBloodImpact& from);
  void MergeFrom(const CDOTAUserMsg_TE_DotaBloodImpact& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_TE_DotaBloodImpact* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  ::google::protobuf::int32 entity() const;
  void set_entity(::google::protobuf::int32 value);

  // optional float scale = 2;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 2;
  float scale() const;
  void set_scale(float value);

  // optional float xnormal = 3;
  bool has_xnormal() const;
  void clear_xnormal();
  static const int kXnormalFieldNumber = 3;
  float xnormal() const;
  void set_xnormal(float value);

  // optional float ynormal = 4;
  bool has_ynormal() const;
  void clear_ynormal();
  static const int kYnormalFieldNumber = 4;
  float ynormal() const;
  void set_ynormal(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_TE_DotaBloodImpact)
 private:
  void set_has_entity();
  void clear_has_entity();
  void set_has_scale();
  void clear_has_scale();
  void set_has_xnormal();
  void clear_has_xnormal();
  void set_has_ynormal();
  void clear_has_ynormal();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 entity_;
  float scale_;
  float xnormal_;
  float ynormal_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_AbilityPing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_AbilityPing) */ {
 public:
  CDOTAUserMsg_AbilityPing();
  virtual ~CDOTAUserMsg_AbilityPing();

  CDOTAUserMsg_AbilityPing(const CDOTAUserMsg_AbilityPing& from);

  inline CDOTAUserMsg_AbilityPing& operator=(const CDOTAUserMsg_AbilityPing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_AbilityPing& default_instance();

  static inline const CDOTAUserMsg_AbilityPing* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_AbilityPing*>(
               &_CDOTAUserMsg_AbilityPing_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(CDOTAUserMsg_AbilityPing* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_AbilityPing* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_AbilityPing* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_AbilityPing& from);
  void MergeFrom(const CDOTAUserMsg_AbilityPing& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_AbilityPing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 ability_id = 2;
  bool has_ability_id() const;
  void clear_ability_id();
  static const int kAbilityIdFieldNumber = 2;
  ::google::protobuf::uint32 ability_id() const;
  void set_ability_id(::google::protobuf::uint32 value);

  // optional uint32 cooldown_seconds = 4;
  bool has_cooldown_seconds() const;
  void clear_cooldown_seconds();
  static const int kCooldownSecondsFieldNumber = 4;
  ::google::protobuf::uint32 cooldown_seconds() const;
  void set_cooldown_seconds(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional bool passive = 6;
  bool has_passive() const;
  void clear_passive();
  static const int kPassiveFieldNumber = 6;
  bool passive() const;
  void set_passive(bool value);

  // optional uint32 mana_needed = 7;
  bool has_mana_needed() const;
  void clear_mana_needed();
  static const int kManaNeededFieldNumber = 7;
  ::google::protobuf::uint32 mana_needed() const;
  void set_mana_needed(::google::protobuf::uint32 value);

  // optional .proto.dota.DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::proto::dota::DOTA_ABILITY_PING_TYPE type() const;
  void set_type(::proto::dota::DOTA_ABILITY_PING_TYPE value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_AbilityPing)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_ability_id();
  void clear_has_ability_id();
  void set_has_type();
  void clear_has_type();
  void set_has_cooldown_seconds();
  void clear_has_cooldown_seconds();
  void set_has_level();
  void clear_has_level();
  void set_has_passive();
  void clear_has_passive();
  void set_has_mana_needed();
  void clear_has_mana_needed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 ability_id_;
  ::google::protobuf::uint32 cooldown_seconds_;
  ::google::protobuf::uint32 level_;
  bool passive_;
  ::google::protobuf::uint32 mana_needed_;
  int type_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TE_UnitAnimation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_TE_UnitAnimation) */ {
 public:
  CDOTAUserMsg_TE_UnitAnimation();
  virtual ~CDOTAUserMsg_TE_UnitAnimation();

  CDOTAUserMsg_TE_UnitAnimation(const CDOTAUserMsg_TE_UnitAnimation& from);

  inline CDOTAUserMsg_TE_UnitAnimation& operator=(const CDOTAUserMsg_TE_UnitAnimation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_TE_UnitAnimation& default_instance();

  static inline const CDOTAUserMsg_TE_UnitAnimation* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TE_UnitAnimation*>(
               &_CDOTAUserMsg_TE_UnitAnimation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(CDOTAUserMsg_TE_UnitAnimation* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TE_UnitAnimation* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_TE_UnitAnimation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_TE_UnitAnimation& from);
  void MergeFrom(const CDOTAUserMsg_TE_UnitAnimation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_TE_UnitAnimation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  ::google::protobuf::int32 entity() const;
  void set_entity(::google::protobuf::int32 value);

  // optional int32 sequenceVariant = 2;
  bool has_sequencevariant() const;
  void clear_sequencevariant();
  static const int kSequenceVariantFieldNumber = 2;
  ::google::protobuf::int32 sequencevariant() const;
  void set_sequencevariant(::google::protobuf::int32 value);

  // optional float playbackrate = 3;
  bool has_playbackrate() const;
  void clear_playbackrate();
  static const int kPlaybackrateFieldNumber = 3;
  float playbackrate() const;
  void set_playbackrate(float value);

  // optional float castpoint = 4;
  bool has_castpoint() const;
  void clear_castpoint();
  static const int kCastpointFieldNumber = 4;
  float castpoint() const;
  void set_castpoint(float value);

  // optional int32 type = 5;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // optional int32 activity = 6;
  bool has_activity() const;
  void clear_activity();
  static const int kActivityFieldNumber = 6;
  ::google::protobuf::int32 activity() const;
  void set_activity(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_TE_UnitAnimation)
 private:
  void set_has_entity();
  void clear_has_entity();
  void set_has_sequencevariant();
  void clear_has_sequencevariant();
  void set_has_playbackrate();
  void clear_has_playbackrate();
  void set_has_castpoint();
  void clear_has_castpoint();
  void set_has_type();
  void clear_has_type();
  void set_has_activity();
  void clear_has_activity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 entity_;
  ::google::protobuf::int32 sequencevariant_;
  float playbackrate_;
  float castpoint_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 activity_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_TE_UnitAnimationEnd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_TE_UnitAnimationEnd) */ {
 public:
  CDOTAUserMsg_TE_UnitAnimationEnd();
  virtual ~CDOTAUserMsg_TE_UnitAnimationEnd();

  CDOTAUserMsg_TE_UnitAnimationEnd(const CDOTAUserMsg_TE_UnitAnimationEnd& from);

  inline CDOTAUserMsg_TE_UnitAnimationEnd& operator=(const CDOTAUserMsg_TE_UnitAnimationEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_TE_UnitAnimationEnd& default_instance();

  static inline const CDOTAUserMsg_TE_UnitAnimationEnd* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_TE_UnitAnimationEnd*>(
               &_CDOTAUserMsg_TE_UnitAnimationEnd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(CDOTAUserMsg_TE_UnitAnimationEnd* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_TE_UnitAnimationEnd* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_TE_UnitAnimationEnd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_TE_UnitAnimationEnd& from);
  void MergeFrom(const CDOTAUserMsg_TE_UnitAnimationEnd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_TE_UnitAnimationEnd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 entity = 1;
  bool has_entity() const;
  void clear_entity();
  static const int kEntityFieldNumber = 1;
  ::google::protobuf::int32 entity() const;
  void set_entity(::google::protobuf::int32 value);

  // optional bool snap = 2;
  bool has_snap() const;
  void clear_snap();
  static const int kSnapFieldNumber = 2;
  bool snap() const;
  void set_snap(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_TE_UnitAnimationEnd)
 private:
  void set_has_entity();
  void clear_has_entity();
  void set_has_snap();
  void clear_has_snap();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 entity_;
  bool snap_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ShowGenericPopup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ShowGenericPopup) */ {
 public:
  CDOTAUserMsg_ShowGenericPopup();
  virtual ~CDOTAUserMsg_ShowGenericPopup();

  CDOTAUserMsg_ShowGenericPopup(const CDOTAUserMsg_ShowGenericPopup& from);

  inline CDOTAUserMsg_ShowGenericPopup& operator=(const CDOTAUserMsg_ShowGenericPopup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ShowGenericPopup& default_instance();

  static inline const CDOTAUserMsg_ShowGenericPopup* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ShowGenericPopup*>(
               &_CDOTAUserMsg_ShowGenericPopup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(CDOTAUserMsg_ShowGenericPopup* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ShowGenericPopup* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ShowGenericPopup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ShowGenericPopup& from);
  void MergeFrom(const CDOTAUserMsg_ShowGenericPopup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ShowGenericPopup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::std::string& header() const;
  void set_header(const ::std::string& value);
  #if LANG_CXX11
  void set_header(::std::string&& value);
  #endif
  void set_header(const char* value);
  void set_header(const char* value, size_t size);
  ::std::string* mutable_header();
  ::std::string* release_header();
  void set_allocated_header(::std::string* header);

  // required string body = 2;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 2;
  const ::std::string& body() const;
  void set_body(const ::std::string& value);
  #if LANG_CXX11
  void set_body(::std::string&& value);
  #endif
  void set_body(const char* value);
  void set_body(const char* value, size_t size);
  ::std::string* mutable_body();
  ::std::string* release_body();
  void set_allocated_body(::std::string* body);

  // optional string param1 = 3;
  bool has_param1() const;
  void clear_param1();
  static const int kParam1FieldNumber = 3;
  const ::std::string& param1() const;
  void set_param1(const ::std::string& value);
  #if LANG_CXX11
  void set_param1(::std::string&& value);
  #endif
  void set_param1(const char* value);
  void set_param1(const char* value, size_t size);
  ::std::string* mutable_param1();
  ::std::string* release_param1();
  void set_allocated_param1(::std::string* param1);

  // optional string param2 = 4;
  bool has_param2() const;
  void clear_param2();
  static const int kParam2FieldNumber = 4;
  const ::std::string& param2() const;
  void set_param2(const ::std::string& value);
  #if LANG_CXX11
  void set_param2(::std::string&& value);
  #endif
  void set_param2(const char* value);
  void set_param2(const char* value, size_t size);
  ::std::string* mutable_param2();
  ::std::string* release_param2();
  void set_allocated_param2(::std::string* param2);

  // optional bool tint_screen = 5;
  bool has_tint_screen() const;
  void clear_tint_screen();
  static const int kTintScreenFieldNumber = 5;
  bool tint_screen() const;
  void set_tint_screen(bool value);

  // optional bool show_no_other_dialogs = 6;
  bool has_show_no_other_dialogs() const;
  void clear_show_no_other_dialogs();
  static const int kShowNoOtherDialogsFieldNumber = 6;
  bool show_no_other_dialogs() const;
  void set_show_no_other_dialogs(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ShowGenericPopup)
 private:
  void set_has_header();
  void clear_has_header();
  void set_has_body();
  void clear_has_body();
  void set_has_param1();
  void clear_has_param1();
  void set_has_param2();
  void clear_has_param2();
  void set_has_tint_screen();
  void clear_has_tint_screen();
  void set_has_show_no_other_dialogs();
  void clear_has_show_no_other_dialogs();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr header_;
  ::google::protobuf::internal::ArenaStringPtr body_;
  ::google::protobuf::internal::ArenaStringPtr param1_;
  ::google::protobuf::internal::ArenaStringPtr param2_;
  bool tint_screen_;
  bool show_no_other_dialogs_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_VoteStart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_VoteStart) */ {
 public:
  CDOTAUserMsg_VoteStart();
  virtual ~CDOTAUserMsg_VoteStart();

  CDOTAUserMsg_VoteStart(const CDOTAUserMsg_VoteStart& from);

  inline CDOTAUserMsg_VoteStart& operator=(const CDOTAUserMsg_VoteStart& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_VoteStart& default_instance();

  static inline const CDOTAUserMsg_VoteStart* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_VoteStart*>(
               &_CDOTAUserMsg_VoteStart_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(CDOTAUserMsg_VoteStart* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_VoteStart* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_VoteStart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_VoteStart& from);
  void MergeFrom(const CDOTAUserMsg_VoteStart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_VoteStart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string choices = 4;
  int choices_size() const;
  void clear_choices();
  static const int kChoicesFieldNumber = 4;
  const ::std::string& choices(int index) const;
  ::std::string* mutable_choices(int index);
  void set_choices(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_choices(int index, ::std::string&& value);
  #endif
  void set_choices(int index, const char* value);
  void set_choices(int index, const char* value, size_t size);
  ::std::string* add_choices();
  void add_choices(const ::std::string& value);
  #if LANG_CXX11
  void add_choices(::std::string&& value);
  #endif
  void add_choices(const char* value);
  void add_choices(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& choices() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_choices();

  // optional string title = 1;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 1;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional float duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  float duration() const;
  void set_duration(float value);

  // optional int32 choice_count = 3;
  bool has_choice_count() const;
  void clear_choice_count();
  static const int kChoiceCountFieldNumber = 3;
  ::google::protobuf::int32 choice_count() const;
  void set_choice_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_VoteStart)
 private:
  void set_has_title();
  void clear_has_title();
  void set_has_duration();
  void clear_has_duration();
  void set_has_choice_count();
  void clear_has_choice_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> choices_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  float duration_;
  ::google::protobuf::int32 choice_count_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_VoteUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_VoteUpdate) */ {
 public:
  CDOTAUserMsg_VoteUpdate();
  virtual ~CDOTAUserMsg_VoteUpdate();

  CDOTAUserMsg_VoteUpdate(const CDOTAUserMsg_VoteUpdate& from);

  inline CDOTAUserMsg_VoteUpdate& operator=(const CDOTAUserMsg_VoteUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_VoteUpdate& default_instance();

  static inline const CDOTAUserMsg_VoteUpdate* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_VoteUpdate*>(
               &_CDOTAUserMsg_VoteUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(CDOTAUserMsg_VoteUpdate* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_VoteUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_VoteUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_VoteUpdate& from);
  void MergeFrom(const CDOTAUserMsg_VoteUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_VoteUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 choice_counts = 1;
  int choice_counts_size() const;
  void clear_choice_counts();
  static const int kChoiceCountsFieldNumber = 1;
  ::google::protobuf::int32 choice_counts(int index) const;
  void set_choice_counts(int index, ::google::protobuf::int32 value);
  void add_choice_counts(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      choice_counts() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_choice_counts();

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_VoteUpdate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > choice_counts_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_VoteEnd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_VoteEnd) */ {
 public:
  CDOTAUserMsg_VoteEnd();
  virtual ~CDOTAUserMsg_VoteEnd();

  CDOTAUserMsg_VoteEnd(const CDOTAUserMsg_VoteEnd& from);

  inline CDOTAUserMsg_VoteEnd& operator=(const CDOTAUserMsg_VoteEnd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_VoteEnd& default_instance();

  static inline const CDOTAUserMsg_VoteEnd* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_VoteEnd*>(
               &_CDOTAUserMsg_VoteEnd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(CDOTAUserMsg_VoteEnd* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_VoteEnd* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_VoteEnd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_VoteEnd& from);
  void MergeFrom(const CDOTAUserMsg_VoteEnd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_VoteEnd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 selected_choice = 1;
  bool has_selected_choice() const;
  void clear_selected_choice();
  static const int kSelectedChoiceFieldNumber = 1;
  ::google::protobuf::int32 selected_choice() const;
  void set_selected_choice(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_VoteEnd)
 private:
  void set_has_selected_choice();
  void clear_has_selected_choice();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 selected_choice_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_BoosterStatePlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_BoosterStatePlayer) */ {
 public:
  CDOTAUserMsg_BoosterStatePlayer();
  virtual ~CDOTAUserMsg_BoosterStatePlayer();

  CDOTAUserMsg_BoosterStatePlayer(const CDOTAUserMsg_BoosterStatePlayer& from);

  inline CDOTAUserMsg_BoosterStatePlayer& operator=(const CDOTAUserMsg_BoosterStatePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_BoosterStatePlayer& default_instance();

  static inline const CDOTAUserMsg_BoosterStatePlayer* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_BoosterStatePlayer*>(
               &_CDOTAUserMsg_BoosterStatePlayer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(CDOTAUserMsg_BoosterStatePlayer* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_BoosterStatePlayer* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_BoosterStatePlayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_BoosterStatePlayer& from);
  void MergeFrom(const CDOTAUserMsg_BoosterStatePlayer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_BoosterStatePlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional float bonus = 2;
  bool has_bonus() const;
  void clear_bonus();
  static const int kBonusFieldNumber = 2;
  float bonus() const;
  void set_bonus(float value);

  // optional float event_bonus = 3;
  bool has_event_bonus() const;
  void clear_event_bonus();
  static const int kEventBonusFieldNumber = 3;
  float event_bonus() const;
  void set_event_bonus(float value);

  // optional uint32 bonus_item_id = 4;
  bool has_bonus_item_id() const;
  void clear_bonus_item_id();
  static const int kBonusItemIdFieldNumber = 4;
  ::google::protobuf::uint32 bonus_item_id() const;
  void set_bonus_item_id(::google::protobuf::uint32 value);

  // optional uint32 event_bonus_item_id = 5;
  bool has_event_bonus_item_id() const;
  void clear_event_bonus_item_id();
  static const int kEventBonusItemIdFieldNumber = 5;
  ::google::protobuf::uint32 event_bonus_item_id() const;
  void set_event_bonus_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_BoosterStatePlayer)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_bonus();
  void clear_has_bonus();
  void set_has_event_bonus();
  void clear_has_event_bonus();
  void set_has_bonus_item_id();
  void clear_has_bonus_item_id();
  void set_has_event_bonus_item_id();
  void clear_has_event_bonus_item_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  float bonus_;
  float event_bonus_;
  ::google::protobuf::uint32 bonus_item_id_;
  ::google::protobuf::uint32 event_bonus_item_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_BoosterState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_BoosterState) */ {
 public:
  CDOTAUserMsg_BoosterState();
  virtual ~CDOTAUserMsg_BoosterState();

  CDOTAUserMsg_BoosterState(const CDOTAUserMsg_BoosterState& from);

  inline CDOTAUserMsg_BoosterState& operator=(const CDOTAUserMsg_BoosterState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_BoosterState& default_instance();

  static inline const CDOTAUserMsg_BoosterState* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_BoosterState*>(
               &_CDOTAUserMsg_BoosterState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(CDOTAUserMsg_BoosterState* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_BoosterState* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_BoosterState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_BoosterState& from);
  void MergeFrom(const CDOTAUserMsg_BoosterState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_BoosterState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;
  int boosted_players_size() const;
  void clear_boosted_players();
  static const int kBoostedPlayersFieldNumber = 1;
  const ::proto::dota::CDOTAUserMsg_BoosterStatePlayer& boosted_players(int index) const;
  ::proto::dota::CDOTAUserMsg_BoosterStatePlayer* mutable_boosted_players(int index);
  ::proto::dota::CDOTAUserMsg_BoosterStatePlayer* add_boosted_players();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_BoosterStatePlayer >*
      mutable_boosted_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_BoosterStatePlayer >&
      boosted_players() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_BoosterState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_BoosterStatePlayer > boosted_players_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_PlayerMMR : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_PlayerMMR) */ {
 public:
  CDOTAUserMsg_PlayerMMR();
  virtual ~CDOTAUserMsg_PlayerMMR();

  CDOTAUserMsg_PlayerMMR(const CDOTAUserMsg_PlayerMMR& from);

  inline CDOTAUserMsg_PlayerMMR& operator=(const CDOTAUserMsg_PlayerMMR& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_PlayerMMR& default_instance();

  static inline const CDOTAUserMsg_PlayerMMR* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_PlayerMMR*>(
               &_CDOTAUserMsg_PlayerMMR_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(CDOTAUserMsg_PlayerMMR* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_PlayerMMR* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_PlayerMMR* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_PlayerMMR& from);
  void MergeFrom(const CDOTAUserMsg_PlayerMMR& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_PlayerMMR* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated sint32 mmr = 1 [packed = true];
  int mmr_size() const;
  void clear_mmr();
  static const int kMmrFieldNumber = 1;
  ::google::protobuf::int32 mmr(int index) const;
  void set_mmr(int index, ::google::protobuf::int32 value);
  void add_mmr(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      mmr() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_mmr();

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_PlayerMMR)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > mmr_;
  mutable int _mmr_cached_byte_size_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_AbilitySteal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_AbilitySteal) */ {
 public:
  CDOTAUserMsg_AbilitySteal();
  virtual ~CDOTAUserMsg_AbilitySteal();

  CDOTAUserMsg_AbilitySteal(const CDOTAUserMsg_AbilitySteal& from);

  inline CDOTAUserMsg_AbilitySteal& operator=(const CDOTAUserMsg_AbilitySteal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_AbilitySteal& default_instance();

  static inline const CDOTAUserMsg_AbilitySteal* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_AbilitySteal*>(
               &_CDOTAUserMsg_AbilitySteal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(CDOTAUserMsg_AbilitySteal* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_AbilitySteal* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_AbilitySteal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_AbilitySteal& from);
  void MergeFrom(const CDOTAUserMsg_AbilitySteal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_AbilitySteal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 ability_id = 2;
  bool has_ability_id() const;
  void clear_ability_id();
  static const int kAbilityIdFieldNumber = 2;
  ::google::protobuf::uint32 ability_id() const;
  void set_ability_id(::google::protobuf::uint32 value);

  // optional uint32 ability_level = 3;
  bool has_ability_level() const;
  void clear_ability_level();
  static const int kAbilityLevelFieldNumber = 3;
  ::google::protobuf::uint32 ability_level() const;
  void set_ability_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_AbilitySteal)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_ability_id();
  void clear_has_ability_id();
  void set_has_ability_level();
  void clear_has_ability_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 ability_id_;
  ::google::protobuf::uint32 ability_level_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsHeroLookup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_StatsHeroLookup) */ {
 public:
  CDOTAUserMsg_StatsHeroLookup();
  virtual ~CDOTAUserMsg_StatsHeroLookup();

  CDOTAUserMsg_StatsHeroLookup(const CDOTAUserMsg_StatsHeroLookup& from);

  inline CDOTAUserMsg_StatsHeroLookup& operator=(const CDOTAUserMsg_StatsHeroLookup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_StatsHeroLookup& default_instance();

  static inline const CDOTAUserMsg_StatsHeroLookup* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsHeroLookup*>(
               &_CDOTAUserMsg_StatsHeroLookup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(CDOTAUserMsg_StatsHeroLookup* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsHeroLookup* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_StatsHeroLookup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_StatsHeroLookup& from);
  void MergeFrom(const CDOTAUserMsg_StatsHeroLookup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_StatsHeroLookup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hero_name = 3;
  bool has_hero_name() const;
  void clear_hero_name();
  static const int kHeroNameFieldNumber = 3;
  const ::std::string& hero_name() const;
  void set_hero_name(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_name(::std::string&& value);
  #endif
  void set_hero_name(const char* value);
  void set_hero_name(const char* value, size_t size);
  ::std::string* mutable_hero_name();
  ::std::string* release_hero_name();
  void set_allocated_hero_name(::std::string* hero_name);

  // optional string persona = 4;
  bool has_persona() const;
  void clear_persona();
  static const int kPersonaFieldNumber = 4;
  const ::std::string& persona() const;
  void set_persona(const ::std::string& value);
  #if LANG_CXX11
  void set_persona(::std::string&& value);
  #endif
  void set_persona(const char* value);
  void set_persona(const char* value, size_t size);
  ::std::string* mutable_persona();
  ::std::string* release_persona();
  void set_allocated_persona(::std::string* persona);

  // optional int32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // optional int32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::int32 hero_id() const;
  void set_hero_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_StatsHeroLookup)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_hero_name();
  void clear_has_hero_name();
  void set_has_persona();
  void clear_has_persona();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hero_name_;
  ::google::protobuf::internal::ArenaStringPtr persona_;
  ::google::protobuf::int32 player_id_;
  ::google::protobuf::int32 hero_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsHeroPositionInfo_PositionPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair) */ {
 public:
  CDOTAUserMsg_StatsHeroPositionInfo_PositionPair();
  virtual ~CDOTAUserMsg_StatsHeroPositionInfo_PositionPair();

  CDOTAUserMsg_StatsHeroPositionInfo_PositionPair(const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& from);

  inline CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& operator=(const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& default_instance();

  static inline const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair*>(
               &_CDOTAUserMsg_StatsHeroPositionInfo_PositionPair_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& from);
  void MergeFrom(const CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];
  bool has_position_category() const;
  void clear_position_category();
  static const int kPositionCategoryFieldNumber = 1;
  ::proto::dota::DOTA_POSITION_CATEGORY position_category() const;
  void set_position_category(::proto::dota::DOTA_POSITION_CATEGORY value);

  // optional uint32 position_count = 2;
  bool has_position_count() const;
  void clear_position_count();
  static const int kPositionCountFieldNumber = 2;
  ::google::protobuf::uint32 position_count() const;
  void set_position_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair)
 private:
  void set_has_position_category();
  void clear_has_position_category();
  void set_has_position_count();
  void clear_has_position_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int position_category_;
  ::google::protobuf::uint32 position_count_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsHeroPositionInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo) */ {
 public:
  CDOTAUserMsg_StatsHeroPositionInfo();
  virtual ~CDOTAUserMsg_StatsHeroPositionInfo();

  CDOTAUserMsg_StatsHeroPositionInfo(const CDOTAUserMsg_StatsHeroPositionInfo& from);

  inline CDOTAUserMsg_StatsHeroPositionInfo& operator=(const CDOTAUserMsg_StatsHeroPositionInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_StatsHeroPositionInfo& default_instance();

  static inline const CDOTAUserMsg_StatsHeroPositionInfo* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsHeroPositionInfo*>(
               &_CDOTAUserMsg_StatsHeroPositionInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(CDOTAUserMsg_StatsHeroPositionInfo* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsHeroPositionInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_StatsHeroPositionInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_StatsHeroPositionInfo& from);
  void MergeFrom(const CDOTAUserMsg_StatsHeroPositionInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_StatsHeroPositionInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_StatsHeroPositionInfo_PositionPair PositionPair;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;
  int position_details_size() const;
  void clear_position_details();
  static const int kPositionDetailsFieldNumber = 2;
  const ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& position_details(int index) const;
  ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* mutable_position_details(int index);
  ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* add_position_details();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair >*
      mutable_position_details();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair >&
      position_details() const;

  // optional float average_position = 1;
  bool has_average_position() const;
  void clear_average_position();
  static const int kAveragePositionFieldNumber = 1;
  float average_position() const;
  void set_average_position(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo)
 private:
  void set_has_average_position();
  void clear_has_average_position();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair > position_details_;
  float average_position_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsHeroMinuteDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails) */ {
 public:
  CDOTAUserMsg_StatsHeroMinuteDetails();
  virtual ~CDOTAUserMsg_StatsHeroMinuteDetails();

  CDOTAUserMsg_StatsHeroMinuteDetails(const CDOTAUserMsg_StatsHeroMinuteDetails& from);

  inline CDOTAUserMsg_StatsHeroMinuteDetails& operator=(const CDOTAUserMsg_StatsHeroMinuteDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_StatsHeroMinuteDetails& default_instance();

  static inline const CDOTAUserMsg_StatsHeroMinuteDetails* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsHeroMinuteDetails*>(
               &_CDOTAUserMsg_StatsHeroMinuteDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(CDOTAUserMsg_StatsHeroMinuteDetails* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsHeroMinuteDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_StatsHeroMinuteDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_StatsHeroMinuteDetails& from);
  void MergeFrom(const CDOTAUserMsg_StatsHeroMinuteDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_StatsHeroMinuteDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 mana_spent = 13;
  int mana_spent_size() const;
  void clear_mana_spent();
  static const int kManaSpentFieldNumber = 13;
  ::google::protobuf::uint32 mana_spent(int index) const;
  void set_mana_spent(int index, ::google::protobuf::uint32 value);
  void add_mana_spent(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      mana_spent() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_mana_spent();

  // repeated uint32 damage_absorbed = 14;
  int damage_absorbed_size() const;
  void clear_damage_absorbed();
  static const int kDamageAbsorbedFieldNumber = 14;
  ::google::protobuf::uint32 damage_absorbed(int index) const;
  void set_damage_absorbed(int index, ::google::protobuf::uint32 value);
  void add_damage_absorbed(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      damage_absorbed() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_damage_absorbed();

  // repeated uint32 damage_done = 15;
  int damage_done_size() const;
  void clear_damage_done();
  static const int kDamageDoneFieldNumber = 15;
  ::google::protobuf::uint32 damage_done(int index) const;
  void set_damage_done(int index, ::google::protobuf::uint32 value);
  void add_damage_done(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      damage_done() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_damage_done();

  // optional .proto.dota.CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;
  bool has_position_info() const;
  void clear_position_info();
  static const int kPositionInfoFieldNumber = 5;
  const ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo& position_info() const;
  ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo* mutable_position_info();
  ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo* release_position_info();
  void set_allocated_position_info(::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo* position_info);

  // optional uint32 last_hits = 1;
  bool has_last_hits() const;
  void clear_last_hits();
  static const int kLastHitsFieldNumber = 1;
  ::google::protobuf::uint32 last_hits() const;
  void set_last_hits(::google::protobuf::uint32 value);

  // optional uint32 hero_kills = 2;
  bool has_hero_kills() const;
  void clear_hero_kills();
  static const int kHeroKillsFieldNumber = 2;
  ::google::protobuf::uint32 hero_kills() const;
  void set_hero_kills(::google::protobuf::uint32 value);

  // optional uint32 hero_damage = 3;
  bool has_hero_damage() const;
  void clear_hero_damage();
  static const int kHeroDamageFieldNumber = 3;
  ::google::protobuf::uint32 hero_damage() const;
  void set_hero_damage(::google::protobuf::uint32 value);

  // optional uint32 tower_damage = 4;
  bool has_tower_damage() const;
  void clear_tower_damage();
  static const int kTowerDamageFieldNumber = 4;
  ::google::protobuf::uint32 tower_damage() const;
  void set_tower_damage(::google::protobuf::uint32 value);

  // optional uint32 total_xp = 6;
  bool has_total_xp() const;
  void clear_total_xp();
  static const int kTotalXpFieldNumber = 6;
  ::google::protobuf::uint32 total_xp() const;
  void set_total_xp(::google::protobuf::uint32 value);

  // optional uint32 net_worth = 7;
  bool has_net_worth() const;
  void clear_net_worth();
  static const int kNetWorthFieldNumber = 7;
  ::google::protobuf::uint32 net_worth() const;
  void set_net_worth(::google::protobuf::uint32 value);

  // optional uint32 harvested_creep_gold = 8;
  bool has_harvested_creep_gold() const;
  void clear_harvested_creep_gold();
  static const int kHarvestedCreepGoldFieldNumber = 8;
  ::google::protobuf::uint32 harvested_creep_gold() const;
  void set_harvested_creep_gold(::google::protobuf::uint32 value);

  // optional uint32 claimed_farm = 9;
  bool has_claimed_farm() const;
  void clear_claimed_farm();
  static const int kClaimedFarmFieldNumber = 9;
  ::google::protobuf::uint32 claimed_farm() const;
  void set_claimed_farm(::google::protobuf::uint32 value);

  // optional uint32 wards_placed = 10;
  bool has_wards_placed() const;
  void clear_wards_placed();
  static const int kWardsPlacedFieldNumber = 10;
  ::google::protobuf::uint32 wards_placed() const;
  void set_wards_placed(::google::protobuf::uint32 value);

  // optional uint32 runes_collected = 11;
  bool has_runes_collected() const;
  void clear_runes_collected();
  static const int kRunesCollectedFieldNumber = 11;
  ::google::protobuf::uint32 runes_collected() const;
  void set_runes_collected(::google::protobuf::uint32 value);

  // optional uint32 tps_used = 12;
  bool has_tps_used() const;
  void clear_tps_used();
  static const int kTpsUsedFieldNumber = 12;
  ::google::protobuf::uint32 tps_used() const;
  void set_tps_used(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails)
 private:
  void set_has_last_hits();
  void clear_has_last_hits();
  void set_has_hero_kills();
  void clear_has_hero_kills();
  void set_has_hero_damage();
  void clear_has_hero_damage();
  void set_has_tower_damage();
  void clear_has_tower_damage();
  void set_has_position_info();
  void clear_has_position_info();
  void set_has_total_xp();
  void clear_has_total_xp();
  void set_has_net_worth();
  void clear_has_net_worth();
  void set_has_harvested_creep_gold();
  void clear_has_harvested_creep_gold();
  void set_has_claimed_farm();
  void clear_has_claimed_farm();
  void set_has_wards_placed();
  void clear_has_wards_placed();
  void set_has_runes_collected();
  void clear_has_runes_collected();
  void set_has_tps_used();
  void clear_has_tps_used();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > mana_spent_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > damage_absorbed_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > damage_done_;
  ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo* position_info_;
  ::google::protobuf::uint32 last_hits_;
  ::google::protobuf::uint32 hero_kills_;
  ::google::protobuf::uint32 hero_damage_;
  ::google::protobuf::uint32 tower_damage_;
  ::google::protobuf::uint32 total_xp_;
  ::google::protobuf::uint32 net_worth_;
  ::google::protobuf::uint32 harvested_creep_gold_;
  ::google::protobuf::uint32 claimed_farm_;
  ::google::protobuf::uint32 wards_placed_;
  ::google::protobuf::uint32 runes_collected_;
  ::google::protobuf::uint32 tps_used_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance) */ {
 public:
  CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance();
  virtual ~CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance();

  CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance(const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& from);

  inline CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& operator=(const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& default_instance();

  static inline const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance*>(
               &_CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& from);
  void MergeFrom(const CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 location_category = 1;
  bool has_location_category() const;
  void clear_location_category();
  static const int kLocationCategoryFieldNumber = 1;
  ::google::protobuf::uint32 location_category() const;
  void set_location_category(::google::protobuf::uint32 value);

  // optional uint32 stat_type = 2;
  bool has_stat_type() const;
  void clear_stat_type();
  static const int kStatTypeFieldNumber = 2;
  ::google::protobuf::uint32 stat_type() const;
  void set_stat_type(::google::protobuf::uint32 value);

  // optional uint32 value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance)
 private:
  void set_has_location_category();
  void clear_has_location_category();
  void set_has_stat_type();
  void clear_has_stat_type();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 location_category_;
  ::google::protobuf::uint32 stat_type_;
  ::google::protobuf::uint32 value_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsTeamMinuteDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails) */ {
 public:
  CDOTAUserMsg_StatsTeamMinuteDetails();
  virtual ~CDOTAUserMsg_StatsTeamMinuteDetails();

  CDOTAUserMsg_StatsTeamMinuteDetails(const CDOTAUserMsg_StatsTeamMinuteDetails& from);

  inline CDOTAUserMsg_StatsTeamMinuteDetails& operator=(const CDOTAUserMsg_StatsTeamMinuteDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_StatsTeamMinuteDetails& default_instance();

  static inline const CDOTAUserMsg_StatsTeamMinuteDetails* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsTeamMinuteDetails*>(
               &_CDOTAUserMsg_StatsTeamMinuteDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(CDOTAUserMsg_StatsTeamMinuteDetails* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsTeamMinuteDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_StatsTeamMinuteDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_StatsTeamMinuteDetails& from);
  void MergeFrom(const CDOTAUserMsg_StatsTeamMinuteDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_StatsTeamMinuteDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance LocationPerformance;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;
  int player_stats_size() const;
  void clear_player_stats();
  static const int kPlayerStatsFieldNumber = 1;
  const ::proto::dota::CDOTAUserMsg_StatsHeroMinuteDetails& player_stats(int index) const;
  ::proto::dota::CDOTAUserMsg_StatsHeroMinuteDetails* mutable_player_stats(int index);
  ::proto::dota::CDOTAUserMsg_StatsHeroMinuteDetails* add_player_stats();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroMinuteDetails >*
      mutable_player_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroMinuteDetails >&
      player_stats() const;

  // repeated .proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;
  int lane_performance_size() const;
  void clear_lane_performance();
  static const int kLanePerformanceFieldNumber = 10;
  const ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& lane_performance(int index) const;
  ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* mutable_lane_performance(int index);
  ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* add_lane_performance();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance >*
      mutable_lane_performance();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance >&
      lane_performance() const;

  // optional uint32 tower_kills = 2;
  bool has_tower_kills() const;
  void clear_tower_kills();
  static const int kTowerKillsFieldNumber = 2;
  ::google::protobuf::uint32 tower_kills() const;
  void set_tower_kills(::google::protobuf::uint32 value);

  // optional uint32 barrack_kills = 3;
  bool has_barrack_kills() const;
  void clear_barrack_kills();
  static const int kBarrackKillsFieldNumber = 3;
  ::google::protobuf::uint32 barrack_kills() const;
  void set_barrack_kills(::google::protobuf::uint32 value);

  // optional uint32 available_lane_creep_gold = 4;
  bool has_available_lane_creep_gold() const;
  void clear_available_lane_creep_gold();
  static const int kAvailableLaneCreepGoldFieldNumber = 4;
  ::google::protobuf::uint32 available_lane_creep_gold() const;
  void set_available_lane_creep_gold(::google::protobuf::uint32 value);

  // optional uint32 balance_kill_value = 5;
  bool has_balance_kill_value() const;
  void clear_balance_kill_value();
  static const int kBalanceKillValueFieldNumber = 5;
  ::google::protobuf::uint32 balance_kill_value() const;
  void set_balance_kill_value(::google::protobuf::uint32 value);

  // optional uint32 balance_tower_value = 6;
  bool has_balance_tower_value() const;
  void clear_balance_tower_value();
  static const int kBalanceTowerValueFieldNumber = 6;
  ::google::protobuf::uint32 balance_tower_value() const;
  void set_balance_tower_value(::google::protobuf::uint32 value);

  // optional uint32 balance_barracks_value = 7;
  bool has_balance_barracks_value() const;
  void clear_balance_barracks_value();
  static const int kBalanceBarracksValueFieldNumber = 7;
  ::google::protobuf::uint32 balance_barracks_value() const;
  void set_balance_barracks_value(::google::protobuf::uint32 value);

  // optional uint32 balance_gold_value = 8;
  bool has_balance_gold_value() const;
  void clear_balance_gold_value();
  static const int kBalanceGoldValueFieldNumber = 8;
  ::google::protobuf::uint32 balance_gold_value() const;
  void set_balance_gold_value(::google::protobuf::uint32 value);

  // optional uint32 balance_xp_value = 9;
  bool has_balance_xp_value() const;
  void clear_balance_xp_value();
  static const int kBalanceXpValueFieldNumber = 9;
  ::google::protobuf::uint32 balance_xp_value() const;
  void set_balance_xp_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails)
 private:
  void set_has_tower_kills();
  void clear_has_tower_kills();
  void set_has_barrack_kills();
  void clear_has_barrack_kills();
  void set_has_available_lane_creep_gold();
  void clear_has_available_lane_creep_gold();
  void set_has_balance_kill_value();
  void clear_has_balance_kill_value();
  void set_has_balance_tower_value();
  void clear_has_balance_tower_value();
  void set_has_balance_barracks_value();
  void clear_has_balance_barracks_value();
  void set_has_balance_gold_value();
  void clear_has_balance_gold_value();
  void set_has_balance_xp_value();
  void clear_has_balance_xp_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroMinuteDetails > player_stats_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance > lane_performance_;
  ::google::protobuf::uint32 tower_kills_;
  ::google::protobuf::uint32 barrack_kills_;
  ::google::protobuf::uint32 available_lane_creep_gold_;
  ::google::protobuf::uint32 balance_kill_value_;
  ::google::protobuf::uint32 balance_tower_value_;
  ::google::protobuf::uint32 balance_barracks_value_;
  ::google::protobuf::uint32 balance_gold_value_;
  ::google::protobuf::uint32 balance_xp_value_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsPlayerKillShare : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_StatsPlayerKillShare) */ {
 public:
  CDOTAUserMsg_StatsPlayerKillShare();
  virtual ~CDOTAUserMsg_StatsPlayerKillShare();

  CDOTAUserMsg_StatsPlayerKillShare(const CDOTAUserMsg_StatsPlayerKillShare& from);

  inline CDOTAUserMsg_StatsPlayerKillShare& operator=(const CDOTAUserMsg_StatsPlayerKillShare& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_StatsPlayerKillShare& default_instance();

  static inline const CDOTAUserMsg_StatsPlayerKillShare* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsPlayerKillShare*>(
               &_CDOTAUserMsg_StatsPlayerKillShare_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(CDOTAUserMsg_StatsPlayerKillShare* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsPlayerKillShare* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_StatsPlayerKillShare* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_StatsPlayerKillShare& from);
  void MergeFrom(const CDOTAUserMsg_StatsPlayerKillShare& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_StatsPlayerKillShare* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::int32 player_id() const;
  void set_player_id(::google::protobuf::int32 value);

  // optional float kill_share_percent = 2;
  bool has_kill_share_percent() const;
  void clear_kill_share_percent();
  static const int kKillSharePercentFieldNumber = 2;
  float kill_share_percent() const;
  void set_kill_share_percent(float value);

  // optional float player_loc_x = 3;
  bool has_player_loc_x() const;
  void clear_player_loc_x();
  static const int kPlayerLocXFieldNumber = 3;
  float player_loc_x() const;
  void set_player_loc_x(float value);

  // optional float player_loc_y = 4;
  bool has_player_loc_y() const;
  void clear_player_loc_y();
  static const int kPlayerLocYFieldNumber = 4;
  float player_loc_y() const;
  void set_player_loc_y(float value);

  // optional float health_percent = 5;
  bool has_health_percent() const;
  void clear_health_percent();
  static const int kHealthPercentFieldNumber = 5;
  float health_percent() const;
  void set_health_percent(float value);

  // optional float mana_percent = 6;
  bool has_mana_percent() const;
  void clear_mana_percent();
  static const int kManaPercentFieldNumber = 6;
  float mana_percent() const;
  void set_mana_percent(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_StatsPlayerKillShare)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_kill_share_percent();
  void clear_has_kill_share_percent();
  void set_has_player_loc_x();
  void clear_has_player_loc_x();
  void set_has_player_loc_y();
  void clear_has_player_loc_y();
  void set_has_health_percent();
  void clear_has_health_percent();
  void set_has_mana_percent();
  void clear_has_mana_percent();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 player_id_;
  float kill_share_percent_;
  float player_loc_x_;
  float player_loc_y_;
  float health_percent_;
  float mana_percent_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsKillDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_StatsKillDetails) */ {
 public:
  CDOTAUserMsg_StatsKillDetails();
  virtual ~CDOTAUserMsg_StatsKillDetails();

  CDOTAUserMsg_StatsKillDetails(const CDOTAUserMsg_StatsKillDetails& from);

  inline CDOTAUserMsg_StatsKillDetails& operator=(const CDOTAUserMsg_StatsKillDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_StatsKillDetails& default_instance();

  static inline const CDOTAUserMsg_StatsKillDetails* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsKillDetails*>(
               &_CDOTAUserMsg_StatsKillDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(CDOTAUserMsg_StatsKillDetails* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsKillDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_StatsKillDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_StatsKillDetails& from);
  void MergeFrom(const CDOTAUserMsg_StatsKillDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_StatsKillDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;
  int kill_shares_size() const;
  void clear_kill_shares();
  static const int kKillSharesFieldNumber = 2;
  const ::proto::dota::CDOTAUserMsg_StatsPlayerKillShare& kill_shares(int index) const;
  ::proto::dota::CDOTAUserMsg_StatsPlayerKillShare* mutable_kill_shares(int index);
  ::proto::dota::CDOTAUserMsg_StatsPlayerKillShare* add_kill_shares();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsPlayerKillShare >*
      mutable_kill_shares();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsPlayerKillShare >&
      kill_shares() const;

  // optional uint32 victim_id = 1;
  bool has_victim_id() const;
  void clear_victim_id();
  static const int kVictimIdFieldNumber = 1;
  ::google::protobuf::uint32 victim_id() const;
  void set_victim_id(::google::protobuf::uint32 value);

  // optional uint32 damage_to_kill = 3;
  bool has_damage_to_kill() const;
  void clear_damage_to_kill();
  static const int kDamageToKillFieldNumber = 3;
  ::google::protobuf::uint32 damage_to_kill() const;
  void set_damage_to_kill(::google::protobuf::uint32 value);

  // optional uint32 effective_health = 4;
  bool has_effective_health() const;
  void clear_effective_health();
  static const int kEffectiveHealthFieldNumber = 4;
  ::google::protobuf::uint32 effective_health() const;
  void set_effective_health(::google::protobuf::uint32 value);

  // optional float death_time = 5;
  bool has_death_time() const;
  void clear_death_time();
  static const int kDeathTimeFieldNumber = 5;
  float death_time() const;
  void set_death_time(float value);

  // optional uint32 killer_id = 6;
  bool has_killer_id() const;
  void clear_killer_id();
  static const int kKillerIdFieldNumber = 6;
  ::google::protobuf::uint32 killer_id() const;
  void set_killer_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_StatsKillDetails)
 private:
  void set_has_victim_id();
  void clear_has_victim_id();
  void set_has_damage_to_kill();
  void clear_has_damage_to_kill();
  void set_has_effective_health();
  void clear_has_effective_health();
  void set_has_death_time();
  void clear_has_death_time();
  void set_has_killer_id();
  void clear_has_killer_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsPlayerKillShare > kill_shares_;
  ::google::protobuf::uint32 victim_id_;
  ::google::protobuf::uint32 damage_to_kill_;
  ::google::protobuf::uint32 effective_health_;
  float death_time_;
  ::google::protobuf::uint32 killer_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails) */ {
 public:
  CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails();
  virtual ~CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails();

  CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& from);

  inline CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& operator=(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& default_instance();

  static inline const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails*>(
               &_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& from);
  void MergeFrom(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 participants = 1;
  int participants_size() const;
  void clear_participants();
  static const int kParticipantsFieldNumber = 1;
  ::google::protobuf::uint32 participants(int index) const;
  void set_participants(int index, ::google::protobuf::uint32 value);
  void add_participants(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      participants() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_participants();

  // repeated uint32 deaths = 2;
  int deaths_size() const;
  void clear_deaths();
  static const int kDeathsFieldNumber = 2;
  ::google::protobuf::uint32 deaths(int index) const;
  void set_deaths(int index, ::google::protobuf::uint32 value);
  void add_deaths(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      deaths() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_deaths();

  // optional uint32 gold_delta = 3;
  bool has_gold_delta() const;
  void clear_gold_delta();
  static const int kGoldDeltaFieldNumber = 3;
  ::google::protobuf::uint32 gold_delta() const;
  void set_gold_delta(::google::protobuf::uint32 value);

  // optional uint32 xp_delta = 4;
  bool has_xp_delta() const;
  void clear_xp_delta();
  static const int kXpDeltaFieldNumber = 4;
  ::google::protobuf::uint32 xp_delta() const;
  void set_xp_delta(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails)
 private:
  void set_has_gold_delta();
  void clear_has_gold_delta();
  void set_has_xp_delta();
  void clear_has_xp_delta();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > participants_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > deaths_;
  ::google::protobuf::uint32 gold_delta_;
  ::google::protobuf::uint32 xp_delta_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails) */ {
 public:
  CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails();
  virtual ~CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails();

  CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& from);

  inline CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& operator=(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& default_instance();

  static inline const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails*>(
               &_CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& from);
  void MergeFrom(const CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;
  bool has_radiant_fight_details() const;
  void clear_radiant_fight_details();
  static const int kRadiantFightDetailsFieldNumber = 3;
  const ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& radiant_fight_details() const;
  ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* mutable_radiant_fight_details();
  ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* release_radiant_fight_details();
  void set_allocated_radiant_fight_details(::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* radiant_fight_details);

  // optional .proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;
  bool has_dire_fight_details() const;
  void clear_dire_fight_details();
  static const int kDireFightDetailsFieldNumber = 4;
  const ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& dire_fight_details() const;
  ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* mutable_dire_fight_details();
  ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* release_dire_fight_details();
  void set_allocated_dire_fight_details(::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* dire_fight_details);

  // optional float start_time = 1;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  float start_time() const;
  void set_start_time(float value);

  // optional float end_time = 2;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  float end_time() const;
  void set_end_time(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails)
 private:
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_radiant_fight_details();
  void clear_has_radiant_fight_details();
  void set_has_dire_fight_details();
  void clear_has_dire_fight_details();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* radiant_fight_details_;
  ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* dire_fight_details_;
  float start_time_;
  float end_time_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_StatsMatchDetails : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_StatsMatchDetails) */ {
 public:
  CDOTAUserMsg_StatsMatchDetails();
  virtual ~CDOTAUserMsg_StatsMatchDetails();

  CDOTAUserMsg_StatsMatchDetails(const CDOTAUserMsg_StatsMatchDetails& from);

  inline CDOTAUserMsg_StatsMatchDetails& operator=(const CDOTAUserMsg_StatsMatchDetails& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_StatsMatchDetails& default_instance();

  static inline const CDOTAUserMsg_StatsMatchDetails* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_StatsMatchDetails*>(
               &_CDOTAUserMsg_StatsMatchDetails_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(CDOTAUserMsg_StatsMatchDetails* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_StatsMatchDetails* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_StatsMatchDetails* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_StatsMatchDetails& from);
  void MergeFrom(const CDOTAUserMsg_StatsMatchDetails& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_StatsMatchDetails* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails CDOTAUserMsg_StatsFightTeamDetails;
  typedef CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails CDOTAUserMsg_StatsFightDetails;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;
  int hero_lookup_size() const;
  void clear_hero_lookup();
  static const int kHeroLookupFieldNumber = 1;
  const ::proto::dota::CDOTAUserMsg_StatsHeroLookup& hero_lookup(int index) const;
  ::proto::dota::CDOTAUserMsg_StatsHeroLookup* mutable_hero_lookup(int index);
  ::proto::dota::CDOTAUserMsg_StatsHeroLookup* add_hero_lookup();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroLookup >*
      mutable_hero_lookup();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroLookup >&
      hero_lookup() const;

  // repeated .proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;
  int radiant_stats_size() const;
  void clear_radiant_stats();
  static const int kRadiantStatsFieldNumber = 2;
  const ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails& radiant_stats(int index) const;
  ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails* mutable_radiant_stats(int index);
  ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails* add_radiant_stats();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails >*
      mutable_radiant_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails >&
      radiant_stats() const;

  // repeated .proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;
  int dire_stats_size() const;
  void clear_dire_stats();
  static const int kDireStatsFieldNumber = 3;
  const ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails& dire_stats(int index) const;
  ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails* mutable_dire_stats(int index);
  ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails* add_dire_stats();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails >*
      mutable_dire_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails >&
      dire_stats() const;

  // repeated .proto.dota.CDOTAUserMsg_StatsKillDetails radiant_kills = 4;
  int radiant_kills_size() const;
  void clear_radiant_kills();
  static const int kRadiantKillsFieldNumber = 4;
  const ::proto::dota::CDOTAUserMsg_StatsKillDetails& radiant_kills(int index) const;
  ::proto::dota::CDOTAUserMsg_StatsKillDetails* mutable_radiant_kills(int index);
  ::proto::dota::CDOTAUserMsg_StatsKillDetails* add_radiant_kills();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsKillDetails >*
      mutable_radiant_kills();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsKillDetails >&
      radiant_kills() const;

  // repeated .proto.dota.CDOTAUserMsg_StatsKillDetails dire_kills = 5;
  int dire_kills_size() const;
  void clear_dire_kills();
  static const int kDireKillsFieldNumber = 5;
  const ::proto::dota::CDOTAUserMsg_StatsKillDetails& dire_kills(int index) const;
  ::proto::dota::CDOTAUserMsg_StatsKillDetails* mutable_dire_kills(int index);
  ::proto::dota::CDOTAUserMsg_StatsKillDetails* add_dire_kills();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsKillDetails >*
      mutable_dire_kills();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsKillDetails >&
      dire_kills() const;

  // repeated .proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;
  int fight_details_size() const;
  void clear_fight_details();
  static const int kFightDetailsFieldNumber = 6;
  const ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& fight_details(int index) const;
  ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* mutable_fight_details(int index);
  ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* add_fight_details();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails >*
      mutable_fight_details();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails >&
      fight_details() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_StatsMatchDetails)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroLookup > hero_lookup_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails > radiant_stats_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails > dire_stats_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsKillDetails > radiant_kills_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsKillDetails > dire_kills_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails > fight_details_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_MiniTaunt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_MiniTaunt) */ {
 public:
  CDOTAUserMsg_MiniTaunt();
  virtual ~CDOTAUserMsg_MiniTaunt();

  CDOTAUserMsg_MiniTaunt(const CDOTAUserMsg_MiniTaunt& from);

  inline CDOTAUserMsg_MiniTaunt& operator=(const CDOTAUserMsg_MiniTaunt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_MiniTaunt& default_instance();

  static inline const CDOTAUserMsg_MiniTaunt* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_MiniTaunt*>(
               &_CDOTAUserMsg_MiniTaunt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(CDOTAUserMsg_MiniTaunt* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_MiniTaunt* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_MiniTaunt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_MiniTaunt& from);
  void MergeFrom(const CDOTAUserMsg_MiniTaunt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_MiniTaunt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 taunting_player_id = 1;
  bool has_taunting_player_id() const;
  void clear_taunting_player_id();
  static const int kTauntingPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 taunting_player_id() const;
  void set_taunting_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_MiniTaunt)
 private:
  void set_has_taunting_player_id();
  void clear_has_taunting_player_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 taunting_player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SpeechBubble : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SpeechBubble) */ {
 public:
  CDOTAUserMsg_SpeechBubble();
  virtual ~CDOTAUserMsg_SpeechBubble();

  CDOTAUserMsg_SpeechBubble(const CDOTAUserMsg_SpeechBubble& from);

  inline CDOTAUserMsg_SpeechBubble& operator=(const CDOTAUserMsg_SpeechBubble& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SpeechBubble& default_instance();

  static inline const CDOTAUserMsg_SpeechBubble* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SpeechBubble*>(
               &_CDOTAUserMsg_SpeechBubble_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(CDOTAUserMsg_SpeechBubble* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SpeechBubble* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SpeechBubble* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SpeechBubble& from);
  void MergeFrom(const CDOTAUserMsg_SpeechBubble& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SpeechBubble* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool destroy_all = 1;
  bool has_destroy_all() const;
  void clear_destroy_all();
  static const int kDestroyAllFieldNumber = 1;
  bool destroy_all() const;
  void set_destroy_all(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SpeechBubble)
 private:
  void set_has_destroy_all();
  void clear_has_destroy_all();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool destroy_all_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CustomHeaderMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CustomHeaderMessage) */ {
 public:
  CDOTAUserMsg_CustomHeaderMessage();
  virtual ~CDOTAUserMsg_CustomHeaderMessage();

  CDOTAUserMsg_CustomHeaderMessage(const CDOTAUserMsg_CustomHeaderMessage& from);

  inline CDOTAUserMsg_CustomHeaderMessage& operator=(const CDOTAUserMsg_CustomHeaderMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CustomHeaderMessage& default_instance();

  static inline const CDOTAUserMsg_CustomHeaderMessage* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CustomHeaderMessage*>(
               &_CDOTAUserMsg_CustomHeaderMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(CDOTAUserMsg_CustomHeaderMessage* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CustomHeaderMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CustomHeaderMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CustomHeaderMessage& from);
  void MergeFrom(const CDOTAUserMsg_CustomHeaderMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CustomHeaderMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional float duration = 2;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 2;
  float duration() const;
  void set_duration(float value);

  // optional int32 value = 4;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 4;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CustomHeaderMessage)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_duration();
  void clear_has_duration();
  void set_has_message();
  void clear_has_message();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 player_id_;
  float duration_;
  ::google::protobuf::int32 value_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgHeroAbilityStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgHeroAbilityStat) */ {
 public:
  CMsgHeroAbilityStat();
  virtual ~CMsgHeroAbilityStat();

  CMsgHeroAbilityStat(const CMsgHeroAbilityStat& from);

  inline CMsgHeroAbilityStat& operator=(const CMsgHeroAbilityStat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHeroAbilityStat& default_instance();

  static inline const CMsgHeroAbilityStat* internal_default_instance() {
    return reinterpret_cast<const CMsgHeroAbilityStat*>(
               &_CMsgHeroAbilityStat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(CMsgHeroAbilityStat* other);

  // implements Message ----------------------------------------------

  inline CMsgHeroAbilityStat* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgHeroAbilityStat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgHeroAbilityStat& from);
  void MergeFrom(const CMsgHeroAbilityStat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgHeroAbilityStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];
  bool has_stat_type() const;
  void clear_stat_type();
  static const int kStatTypeFieldNumber = 1;
  ::proto::dota::EHeroStatType stat_type() const;
  void set_stat_type(::proto::dota::EHeroStatType value);

  // optional int32 int_value = 2;
  bool has_int_value() const;
  void clear_int_value();
  static const int kIntValueFieldNumber = 2;
  ::google::protobuf::int32 int_value() const;
  void set_int_value(::google::protobuf::int32 value);

  // optional float float_value = 3;
  bool has_float_value() const;
  void clear_float_value();
  static const int kFloatValueFieldNumber = 3;
  float float_value() const;
  void set_float_value(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgHeroAbilityStat)
 private:
  void set_has_stat_type();
  void clear_has_stat_type();
  void set_has_int_value();
  void clear_has_int_value();
  void set_has_float_value();
  void clear_has_float_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int stat_type_;
  ::google::protobuf::int32 int_value_;
  float float_value_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgCombatAnalyzerPlayerStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgCombatAnalyzerPlayerStat) */ {
 public:
  CMsgCombatAnalyzerPlayerStat();
  virtual ~CMsgCombatAnalyzerPlayerStat();

  CMsgCombatAnalyzerPlayerStat(const CMsgCombatAnalyzerPlayerStat& from);

  inline CMsgCombatAnalyzerPlayerStat& operator=(const CMsgCombatAnalyzerPlayerStat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCombatAnalyzerPlayerStat& default_instance();

  static inline const CMsgCombatAnalyzerPlayerStat* internal_default_instance() {
    return reinterpret_cast<const CMsgCombatAnalyzerPlayerStat*>(
               &_CMsgCombatAnalyzerPlayerStat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(CMsgCombatAnalyzerPlayerStat* other);

  // implements Message ----------------------------------------------

  inline CMsgCombatAnalyzerPlayerStat* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgCombatAnalyzerPlayerStat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgCombatAnalyzerPlayerStat& from);
  void MergeFrom(const CMsgCombatAnalyzerPlayerStat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgCombatAnalyzerPlayerStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgHeroAbilityStat hero_ability_stats = 2;
  int hero_ability_stats_size() const;
  void clear_hero_ability_stats();
  static const int kHeroAbilityStatsFieldNumber = 2;
  const ::proto::dota::CMsgHeroAbilityStat& hero_ability_stats(int index) const;
  ::proto::dota::CMsgHeroAbilityStat* mutable_hero_ability_stats(int index);
  ::proto::dota::CMsgHeroAbilityStat* add_hero_ability_stats();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroAbilityStat >*
      mutable_hero_ability_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroAbilityStat >&
      hero_ability_stats() const;

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgCombatAnalyzerPlayerStat)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroAbilityStat > hero_ability_stats_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgCombatAnalyzerStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgCombatAnalyzerStats) */ {
 public:
  CMsgCombatAnalyzerStats();
  virtual ~CMsgCombatAnalyzerStats();

  CMsgCombatAnalyzerStats(const CMsgCombatAnalyzerStats& from);

  inline CMsgCombatAnalyzerStats& operator=(const CMsgCombatAnalyzerStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCombatAnalyzerStats& default_instance();

  static inline const CMsgCombatAnalyzerStats* internal_default_instance() {
    return reinterpret_cast<const CMsgCombatAnalyzerStats*>(
               &_CMsgCombatAnalyzerStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(CMsgCombatAnalyzerStats* other);

  // implements Message ----------------------------------------------

  inline CMsgCombatAnalyzerStats* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgCombatAnalyzerStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgCombatAnalyzerStats& from);
  void MergeFrom(const CMsgCombatAnalyzerStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgCombatAnalyzerStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgCombatAnalyzerPlayerStat player_stats = 2;
  int player_stats_size() const;
  void clear_player_stats();
  static const int kPlayerStatsFieldNumber = 2;
  const ::proto::dota::CMsgCombatAnalyzerPlayerStat& player_stats(int index) const;
  ::proto::dota::CMsgCombatAnalyzerPlayerStat* mutable_player_stats(int index);
  ::proto::dota::CMsgCombatAnalyzerPlayerStat* add_player_stats();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgCombatAnalyzerPlayerStat >*
      mutable_player_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgCombatAnalyzerPlayerStat >&
      player_stats() const;

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgCombatAnalyzerStats)
 private:
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgCombatAnalyzerPlayerStat > player_stats_;
  ::google::protobuf::uint64 match_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_BeastChat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_BeastChat) */ {
 public:
  CDOTAUserMsg_BeastChat();
  virtual ~CDOTAUserMsg_BeastChat();

  CDOTAUserMsg_BeastChat(const CDOTAUserMsg_BeastChat& from);

  inline CDOTAUserMsg_BeastChat& operator=(const CDOTAUserMsg_BeastChat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_BeastChat& default_instance();

  static inline const CDOTAUserMsg_BeastChat* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_BeastChat*>(
               &_CDOTAUserMsg_BeastChat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(CDOTAUserMsg_BeastChat* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_BeastChat* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_BeastChat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_BeastChat& from);
  void MergeFrom(const CDOTAUserMsg_BeastChat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_BeastChat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string format = 2;
  bool has_format() const;
  void clear_format();
  static const int kFormatFieldNumber = 2;
  const ::std::string& format() const;
  void set_format(const ::std::string& value);
  #if LANG_CXX11
  void set_format(::std::string&& value);
  #endif
  void set_format(const char* value);
  void set_format(const char* value, size_t size);
  ::std::string* mutable_format();
  ::std::string* release_format();
  void set_allocated_format(::std::string* format);

  // optional string message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional string target = 4;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 4;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  #if LANG_CXX11
  void set_target(::std::string&& value);
  #endif
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // optional uint32 team = 1;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 1;
  ::google::protobuf::uint32 team() const;
  void set_team(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_BeastChat)
 private:
  void set_has_team();
  void clear_has_team();
  void set_has_format();
  void clear_has_format();
  void set_has_message();
  void clear_has_message();
  void set_has_target();
  void clear_has_target();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr format_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  ::google::protobuf::uint32 team_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CustomHudElement_Create : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CustomHudElement_Create) */ {
 public:
  CDOTAUserMsg_CustomHudElement_Create();
  virtual ~CDOTAUserMsg_CustomHudElement_Create();

  CDOTAUserMsg_CustomHudElement_Create(const CDOTAUserMsg_CustomHudElement_Create& from);

  inline CDOTAUserMsg_CustomHudElement_Create& operator=(const CDOTAUserMsg_CustomHudElement_Create& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CustomHudElement_Create& default_instance();

  static inline const CDOTAUserMsg_CustomHudElement_Create* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CustomHudElement_Create*>(
               &_CDOTAUserMsg_CustomHudElement_Create_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(CDOTAUserMsg_CustomHudElement_Create* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CustomHudElement_Create* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CustomHudElement_Create* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CustomHudElement_Create& from);
  void MergeFrom(const CDOTAUserMsg_CustomHudElement_Create& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CustomHudElement_Create* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string element_id = 1;
  bool has_element_id() const;
  void clear_element_id();
  static const int kElementIdFieldNumber = 1;
  const ::std::string& element_id() const;
  void set_element_id(const ::std::string& value);
  #if LANG_CXX11
  void set_element_id(::std::string&& value);
  #endif
  void set_element_id(const char* value);
  void set_element_id(const char* value, size_t size);
  ::std::string* mutable_element_id();
  ::std::string* release_element_id();
  void set_allocated_element_id(::std::string* element_id);

  // optional string layout_filename = 2;
  bool has_layout_filename() const;
  void clear_layout_filename();
  static const int kLayoutFilenameFieldNumber = 2;
  const ::std::string& layout_filename() const;
  void set_layout_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_layout_filename(::std::string&& value);
  #endif
  void set_layout_filename(const char* value);
  void set_layout_filename(const char* value, size_t size);
  ::std::string* mutable_layout_filename();
  ::std::string* release_layout_filename();
  void set_allocated_layout_filename(::std::string* layout_filename);

  // optional bytes data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CustomHudElement_Create)
 private:
  void set_has_element_id();
  void clear_has_element_id();
  void set_has_layout_filename();
  void clear_has_layout_filename();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr element_id_;
  ::google::protobuf::internal::ArenaStringPtr layout_filename_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CustomHudElement_Modify : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CustomHudElement_Modify) */ {
 public:
  CDOTAUserMsg_CustomHudElement_Modify();
  virtual ~CDOTAUserMsg_CustomHudElement_Modify();

  CDOTAUserMsg_CustomHudElement_Modify(const CDOTAUserMsg_CustomHudElement_Modify& from);

  inline CDOTAUserMsg_CustomHudElement_Modify& operator=(const CDOTAUserMsg_CustomHudElement_Modify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CustomHudElement_Modify& default_instance();

  static inline const CDOTAUserMsg_CustomHudElement_Modify* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CustomHudElement_Modify*>(
               &_CDOTAUserMsg_CustomHudElement_Modify_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(CDOTAUserMsg_CustomHudElement_Modify* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CustomHudElement_Modify* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CustomHudElement_Modify* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CustomHudElement_Modify& from);
  void MergeFrom(const CDOTAUserMsg_CustomHudElement_Modify& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CustomHudElement_Modify* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string element_id = 1;
  bool has_element_id() const;
  void clear_element_id();
  static const int kElementIdFieldNumber = 1;
  const ::std::string& element_id() const;
  void set_element_id(const ::std::string& value);
  #if LANG_CXX11
  void set_element_id(::std::string&& value);
  #endif
  void set_element_id(const char* value);
  void set_element_id(const char* value, size_t size);
  ::std::string* mutable_element_id();
  ::std::string* release_element_id();
  void set_allocated_element_id(::std::string* element_id);

  // optional bytes data = 3;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional bool modify_visible = 2;
  bool has_modify_visible() const;
  void clear_modify_visible();
  static const int kModifyVisibleFieldNumber = 2;
  bool modify_visible() const;
  void set_modify_visible(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CustomHudElement_Modify)
 private:
  void set_has_element_id();
  void clear_has_element_id();
  void set_has_modify_visible();
  void clear_has_modify_visible();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr element_id_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  bool modify_visible_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CustomHudElement_Destroy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CustomHudElement_Destroy) */ {
 public:
  CDOTAUserMsg_CustomHudElement_Destroy();
  virtual ~CDOTAUserMsg_CustomHudElement_Destroy();

  CDOTAUserMsg_CustomHudElement_Destroy(const CDOTAUserMsg_CustomHudElement_Destroy& from);

  inline CDOTAUserMsg_CustomHudElement_Destroy& operator=(const CDOTAUserMsg_CustomHudElement_Destroy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CustomHudElement_Destroy& default_instance();

  static inline const CDOTAUserMsg_CustomHudElement_Destroy* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CustomHudElement_Destroy*>(
               &_CDOTAUserMsg_CustomHudElement_Destroy_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(CDOTAUserMsg_CustomHudElement_Destroy* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CustomHudElement_Destroy* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CustomHudElement_Destroy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CustomHudElement_Destroy& from);
  void MergeFrom(const CDOTAUserMsg_CustomHudElement_Destroy& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CustomHudElement_Destroy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string element_id = 1;
  bool has_element_id() const;
  void clear_element_id();
  static const int kElementIdFieldNumber = 1;
  const ::std::string& element_id() const;
  void set_element_id(const ::std::string& value);
  #if LANG_CXX11
  void set_element_id(::std::string&& value);
  #endif
  void set_element_id(const char* value);
  void set_element_id(const char* value, size_t size);
  ::std::string* mutable_element_id();
  ::std::string* release_element_id();
  void set_allocated_element_id(::std::string* element_id);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CustomHudElement_Destroy)
 private:
  void set_has_element_id();
  void clear_has_element_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr element_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CompendiumStatePlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CompendiumStatePlayer) */ {
 public:
  CDOTAUserMsg_CompendiumStatePlayer();
  virtual ~CDOTAUserMsg_CompendiumStatePlayer();

  CDOTAUserMsg_CompendiumStatePlayer(const CDOTAUserMsg_CompendiumStatePlayer& from);

  inline CDOTAUserMsg_CompendiumStatePlayer& operator=(const CDOTAUserMsg_CompendiumStatePlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CompendiumStatePlayer& default_instance();

  static inline const CDOTAUserMsg_CompendiumStatePlayer* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CompendiumStatePlayer*>(
               &_CDOTAUserMsg_CompendiumStatePlayer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(CDOTAUserMsg_CompendiumStatePlayer* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CompendiumStatePlayer* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CompendiumStatePlayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CompendiumStatePlayer& from);
  void MergeFrom(const CDOTAUserMsg_CompendiumStatePlayer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CompendiumStatePlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 level = 2;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 2;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CompendiumStatePlayer)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_level();
  void clear_has_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 level_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_CompendiumState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_CompendiumState) */ {
 public:
  CDOTAUserMsg_CompendiumState();
  virtual ~CDOTAUserMsg_CompendiumState();

  CDOTAUserMsg_CompendiumState(const CDOTAUserMsg_CompendiumState& from);

  inline CDOTAUserMsg_CompendiumState& operator=(const CDOTAUserMsg_CompendiumState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_CompendiumState& default_instance();

  static inline const CDOTAUserMsg_CompendiumState* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_CompendiumState*>(
               &_CDOTAUserMsg_CompendiumState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(CDOTAUserMsg_CompendiumState* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_CompendiumState* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_CompendiumState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_CompendiumState& from);
  void MergeFrom(const CDOTAUserMsg_CompendiumState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_CompendiumState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;
  int compendium_players_size() const;
  void clear_compendium_players();
  static const int kCompendiumPlayersFieldNumber = 1;
  const ::proto::dota::CDOTAUserMsg_CompendiumStatePlayer& compendium_players(int index) const;
  ::proto::dota::CDOTAUserMsg_CompendiumStatePlayer* mutable_compendium_players(int index);
  ::proto::dota::CDOTAUserMsg_CompendiumStatePlayer* add_compendium_players();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_CompendiumStatePlayer >*
      mutable_compendium_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_CompendiumStatePlayer >&
      compendium_players() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_CompendiumState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_CompendiumStatePlayer > compendium_players_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ProjectionAbility : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ProjectionAbility) */ {
 public:
  CDOTAUserMsg_ProjectionAbility();
  virtual ~CDOTAUserMsg_ProjectionAbility();

  CDOTAUserMsg_ProjectionAbility(const CDOTAUserMsg_ProjectionAbility& from);

  inline CDOTAUserMsg_ProjectionAbility& operator=(const CDOTAUserMsg_ProjectionAbility& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ProjectionAbility& default_instance();

  static inline const CDOTAUserMsg_ProjectionAbility* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ProjectionAbility*>(
               &_CDOTAUserMsg_ProjectionAbility_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(CDOTAUserMsg_ProjectionAbility* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ProjectionAbility* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ProjectionAbility* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ProjectionAbility& from);
  void MergeFrom(const CDOTAUserMsg_ProjectionAbility& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ProjectionAbility* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector origin = 5;
  bool has_origin() const;
  void clear_origin();
  static const int kOriginFieldNumber = 5;
  const ::proto::dota::CMsgVector& origin() const;
  ::proto::dota::CMsgVector* mutable_origin();
  ::proto::dota::CMsgVector* release_origin();
  void set_allocated_origin(::proto::dota::CMsgVector* origin);

  // optional uint32 ability_id = 1;
  bool has_ability_id() const;
  void clear_ability_id();
  static const int kAbilityIdFieldNumber = 1;
  ::google::protobuf::uint32 ability_id() const;
  void set_ability_id(::google::protobuf::uint32 value);

  // optional int32 caster_ent_index = 2;
  bool has_caster_ent_index() const;
  void clear_caster_ent_index();
  static const int kCasterEntIndexFieldNumber = 2;
  ::google::protobuf::int32 caster_ent_index() const;
  void set_caster_ent_index(::google::protobuf::int32 value);

  // optional int32 caster_team = 3;
  bool has_caster_team() const;
  void clear_caster_team();
  static const int kCasterTeamFieldNumber = 3;
  ::google::protobuf::int32 caster_team() const;
  void set_caster_team(::google::protobuf::int32 value);

  // optional bool channel_end = 4;
  bool has_channel_end() const;
  void clear_channel_end();
  static const int kChannelEndFieldNumber = 4;
  bool channel_end() const;
  void set_channel_end(bool value);

  // optional bool track_caster_only = 6;
  bool has_track_caster_only() const;
  void clear_track_caster_only();
  static const int kTrackCasterOnlyFieldNumber = 6;
  bool track_caster_only() const;
  void set_track_caster_only(bool value);

  // optional float end_time = 7;
  bool has_end_time() const;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  float end_time() const;
  void set_end_time(float value);

  // optional int32 victim_ent_index = 8;
  bool has_victim_ent_index() const;
  void clear_victim_ent_index();
  static const int kVictimEntIndexFieldNumber = 8;
  ::google::protobuf::int32 victim_ent_index() const;
  void set_victim_ent_index(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ProjectionAbility)
 private:
  void set_has_ability_id();
  void clear_has_ability_id();
  void set_has_caster_ent_index();
  void clear_has_caster_ent_index();
  void set_has_caster_team();
  void clear_has_caster_team();
  void set_has_channel_end();
  void clear_has_channel_end();
  void set_has_origin();
  void clear_has_origin();
  void set_has_track_caster_only();
  void clear_has_track_caster_only();
  void set_has_end_time();
  void clear_has_end_time();
  void set_has_victim_ent_index();
  void clear_has_victim_ent_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* origin_;
  ::google::protobuf::uint32 ability_id_;
  ::google::protobuf::int32 caster_ent_index_;
  ::google::protobuf::int32 caster_team_;
  bool channel_end_;
  bool track_caster_only_;
  float end_time_;
  ::google::protobuf::int32 victim_ent_index_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ProjectionEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ProjectionEvent) */ {
 public:
  CDOTAUserMsg_ProjectionEvent();
  virtual ~CDOTAUserMsg_ProjectionEvent();

  CDOTAUserMsg_ProjectionEvent(const CDOTAUserMsg_ProjectionEvent& from);

  inline CDOTAUserMsg_ProjectionEvent& operator=(const CDOTAUserMsg_ProjectionEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ProjectionEvent& default_instance();

  static inline const CDOTAUserMsg_ProjectionEvent* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ProjectionEvent*>(
               &_CDOTAUserMsg_ProjectionEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    129;

  void Swap(CDOTAUserMsg_ProjectionEvent* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ProjectionEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ProjectionEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ProjectionEvent& from);
  void MergeFrom(const CDOTAUserMsg_ProjectionEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ProjectionEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EProjectionEvent event_id = 1 [default = ePE_FirstBlood];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EProjectionEvent event_id() const;
  void set_event_id(::proto::dota::EProjectionEvent value);

  // optional uint32 team = 2;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 2;
  ::google::protobuf::uint32 team() const;
  void set_team(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ProjectionEvent)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_team();
  void clear_has_team();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int event_id_;
  ::google::protobuf::uint32 team_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_XPAlert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_XPAlert) */ {
 public:
  CDOTAUserMsg_XPAlert();
  virtual ~CDOTAUserMsg_XPAlert();

  CDOTAUserMsg_XPAlert(const CDOTAUserMsg_XPAlert& from);

  inline CDOTAUserMsg_XPAlert& operator=(const CDOTAUserMsg_XPAlert& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_XPAlert& default_instance();

  static inline const CDOTAUserMsg_XPAlert* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_XPAlert*>(
               &_CDOTAUserMsg_XPAlert_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    130;

  void Swap(CDOTAUserMsg_XPAlert* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_XPAlert* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_XPAlert* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_XPAlert& from);
  void MergeFrom(const CDOTAUserMsg_XPAlert& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_XPAlert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 target_entindex = 2;
  bool has_target_entindex() const;
  void clear_target_entindex();
  static const int kTargetEntindexFieldNumber = 2;
  ::google::protobuf::uint32 target_entindex() const;
  void set_target_entindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_XPAlert)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_target_entindex();
  void clear_has_target_entindex();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 target_entindex_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_UpdateQuestProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_UpdateQuestProgress) */ {
 public:
  CDOTAUserMsg_UpdateQuestProgress();
  virtual ~CDOTAUserMsg_UpdateQuestProgress();

  CDOTAUserMsg_UpdateQuestProgress(const CDOTAUserMsg_UpdateQuestProgress& from);

  inline CDOTAUserMsg_UpdateQuestProgress& operator=(const CDOTAUserMsg_UpdateQuestProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_UpdateQuestProgress& default_instance();

  static inline const CDOTAUserMsg_UpdateQuestProgress* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_UpdateQuestProgress*>(
               &_CDOTAUserMsg_UpdateQuestProgress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    131;

  void Swap(CDOTAUserMsg_UpdateQuestProgress* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_UpdateQuestProgress* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_UpdateQuestProgress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_UpdateQuestProgress& from);
  void MergeFrom(const CDOTAUserMsg_UpdateQuestProgress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_UpdateQuestProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_UpdateQuestProgress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_QuestStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_QuestStatus) */ {
 public:
  CDOTAUserMsg_QuestStatus();
  virtual ~CDOTAUserMsg_QuestStatus();

  CDOTAUserMsg_QuestStatus(const CDOTAUserMsg_QuestStatus& from);

  inline CDOTAUserMsg_QuestStatus& operator=(const CDOTAUserMsg_QuestStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_QuestStatus& default_instance();

  static inline const CDOTAUserMsg_QuestStatus* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_QuestStatus*>(
               &_CDOTAUserMsg_QuestStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    132;

  void Swap(CDOTAUserMsg_QuestStatus* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_QuestStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_QuestStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_QuestStatus& from);
  void MergeFrom(const CDOTAUserMsg_QuestStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_QuestStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 quest_id = 2;
  bool has_quest_id() const;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 2;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // optional uint32 challenge_id = 3;
  bool has_challenge_id() const;
  void clear_challenge_id();
  static const int kChallengeIdFieldNumber = 3;
  ::google::protobuf::uint32 challenge_id() const;
  void set_challenge_id(::google::protobuf::uint32 value);

  // optional uint32 progress = 4;
  bool has_progress() const;
  void clear_progress();
  static const int kProgressFieldNumber = 4;
  ::google::protobuf::uint32 progress() const;
  void set_progress(::google::protobuf::uint32 value);

  // optional uint32 goal = 5;
  bool has_goal() const;
  void clear_goal();
  static const int kGoalFieldNumber = 5;
  ::google::protobuf::uint32 goal() const;
  void set_goal(::google::protobuf::uint32 value);

  // optional uint32 query = 6;
  bool has_query() const;
  void clear_query();
  static const int kQueryFieldNumber = 6;
  ::google::protobuf::uint32 query() const;
  void set_query(::google::protobuf::uint32 value);

  // optional float fail_gametime = 7;
  bool has_fail_gametime() const;
  void clear_fail_gametime();
  static const int kFailGametimeFieldNumber = 7;
  float fail_gametime() const;
  void set_fail_gametime(float value);

  // optional uint32 item_id = 8;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 8;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_QuestStatus)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_quest_id();
  void clear_has_quest_id();
  void set_has_challenge_id();
  void clear_has_challenge_id();
  void set_has_progress();
  void clear_has_progress();
  void set_has_goal();
  void clear_has_goal();
  void set_has_query();
  void clear_has_query();
  void set_has_fail_gametime();
  void clear_has_fail_gametime();
  void set_has_item_id();
  void clear_has_item_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 challenge_id_;
  ::google::protobuf::uint32 progress_;
  ::google::protobuf::uint32 goal_;
  ::google::protobuf::uint32 query_;
  float fail_gametime_;
  ::google::protobuf::uint32 item_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SuggestHeroPick : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SuggestHeroPick) */ {
 public:
  CDOTAUserMsg_SuggestHeroPick();
  virtual ~CDOTAUserMsg_SuggestHeroPick();

  CDOTAUserMsg_SuggestHeroPick(const CDOTAUserMsg_SuggestHeroPick& from);

  inline CDOTAUserMsg_SuggestHeroPick& operator=(const CDOTAUserMsg_SuggestHeroPick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SuggestHeroPick& default_instance();

  static inline const CDOTAUserMsg_SuggestHeroPick* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SuggestHeroPick*>(
               &_CDOTAUserMsg_SuggestHeroPick_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    133;

  void Swap(CDOTAUserMsg_SuggestHeroPick* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SuggestHeroPick* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SuggestHeroPick* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SuggestHeroPick& from);
  void MergeFrom(const CDOTAUserMsg_SuggestHeroPick& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SuggestHeroPick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional bool ban = 3;
  bool has_ban() const;
  void clear_ban();
  static const int kBanFieldNumber = 3;
  bool ban() const;
  void set_ban(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SuggestHeroPick)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_ban();
  void clear_has_ban();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 hero_id_;
  bool ban_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SuggestHeroRole : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SuggestHeroRole) */ {
 public:
  CDOTAUserMsg_SuggestHeroRole();
  virtual ~CDOTAUserMsg_SuggestHeroRole();

  CDOTAUserMsg_SuggestHeroRole(const CDOTAUserMsg_SuggestHeroRole& from);

  inline CDOTAUserMsg_SuggestHeroRole& operator=(const CDOTAUserMsg_SuggestHeroRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SuggestHeroRole& default_instance();

  static inline const CDOTAUserMsg_SuggestHeroRole* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SuggestHeroRole*>(
               &_CDOTAUserMsg_SuggestHeroRole_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(CDOTAUserMsg_SuggestHeroRole* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SuggestHeroRole* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SuggestHeroRole* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SuggestHeroRole& from);
  void MergeFrom(const CDOTAUserMsg_SuggestHeroRole& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SuggestHeroRole* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hero_role = 2;
  bool has_hero_role() const;
  void clear_hero_role();
  static const int kHeroRoleFieldNumber = 2;
  const ::std::string& hero_role() const;
  void set_hero_role(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_role(::std::string&& value);
  #endif
  void set_hero_role(const char* value);
  void set_hero_role(const char* value, size_t size);
  ::std::string* mutable_hero_role();
  ::std::string* release_hero_role();
  void set_allocated_hero_role(::std::string* hero_role);

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SuggestHeroRole)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_hero_role();
  void clear_has_hero_role();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hero_role_;
  ::google::protobuf::uint32 player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_KillcamDamageTaken : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_KillcamDamageTaken) */ {
 public:
  CDOTAUserMsg_KillcamDamageTaken();
  virtual ~CDOTAUserMsg_KillcamDamageTaken();

  CDOTAUserMsg_KillcamDamageTaken(const CDOTAUserMsg_KillcamDamageTaken& from);

  inline CDOTAUserMsg_KillcamDamageTaken& operator=(const CDOTAUserMsg_KillcamDamageTaken& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_KillcamDamageTaken& default_instance();

  static inline const CDOTAUserMsg_KillcamDamageTaken* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_KillcamDamageTaken*>(
               &_CDOTAUserMsg_KillcamDamageTaken_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    135;

  void Swap(CDOTAUserMsg_KillcamDamageTaken* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_KillcamDamageTaken* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_KillcamDamageTaken* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_KillcamDamageTaken& from);
  void MergeFrom(const CDOTAUserMsg_KillcamDamageTaken& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_KillcamDamageTaken* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string hero_name = 5;
  bool has_hero_name() const;
  void clear_hero_name();
  static const int kHeroNameFieldNumber = 5;
  const ::std::string& hero_name() const;
  void set_hero_name(const ::std::string& value);
  #if LANG_CXX11
  void set_hero_name(::std::string&& value);
  #endif
  void set_hero_name(const char* value);
  void set_hero_name(const char* value, size_t size);
  ::std::string* mutable_hero_name();
  ::std::string* release_hero_name();
  void set_allocated_hero_name(::std::string* hero_name);

  // optional string damage_color = 6;
  bool has_damage_color() const;
  void clear_damage_color();
  static const int kDamageColorFieldNumber = 6;
  const ::std::string& damage_color() const;
  void set_damage_color(const ::std::string& value);
  #if LANG_CXX11
  void set_damage_color(::std::string&& value);
  #endif
  void set_damage_color(const char* value);
  void set_damage_color(const char* value, size_t size);
  ::std::string* mutable_damage_color();
  ::std::string* release_damage_color();
  void set_allocated_damage_color(::std::string* damage_color);

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 damage_taken = 2;
  bool has_damage_taken() const;
  void clear_damage_taken();
  static const int kDamageTakenFieldNumber = 2;
  ::google::protobuf::uint32 damage_taken() const;
  void set_damage_taken(::google::protobuf::uint32 value);

  // optional uint32 item_type = 3;
  bool has_item_type() const;
  void clear_item_type();
  static const int kItemTypeFieldNumber = 3;
  ::google::protobuf::uint32 item_type() const;
  void set_item_type(::google::protobuf::uint32 value);

  // optional uint32 item_id = 4;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 4;
  ::google::protobuf::uint32 item_id() const;
  void set_item_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_KillcamDamageTaken)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_damage_taken();
  void clear_has_damage_taken();
  void set_has_item_type();
  void clear_has_item_type();
  void set_has_item_id();
  void clear_has_item_id();
  void set_has_hero_name();
  void clear_has_hero_name();
  void set_has_damage_color();
  void clear_has_damage_color();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr hero_name_;
  ::google::protobuf::internal::ArenaStringPtr damage_color_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 damage_taken_;
  ::google::protobuf::uint32 item_type_;
  ::google::protobuf::uint32 item_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_SelectPenaltyGold : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_SelectPenaltyGold) */ {
 public:
  CDOTAUserMsg_SelectPenaltyGold();
  virtual ~CDOTAUserMsg_SelectPenaltyGold();

  CDOTAUserMsg_SelectPenaltyGold(const CDOTAUserMsg_SelectPenaltyGold& from);

  inline CDOTAUserMsg_SelectPenaltyGold& operator=(const CDOTAUserMsg_SelectPenaltyGold& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_SelectPenaltyGold& default_instance();

  static inline const CDOTAUserMsg_SelectPenaltyGold* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_SelectPenaltyGold*>(
               &_CDOTAUserMsg_SelectPenaltyGold_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    136;

  void Swap(CDOTAUserMsg_SelectPenaltyGold* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_SelectPenaltyGold* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_SelectPenaltyGold* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_SelectPenaltyGold& from);
  void MergeFrom(const CDOTAUserMsg_SelectPenaltyGold& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_SelectPenaltyGold* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional sint32 cost = 2;
  bool has_cost() const;
  void clear_cost();
  static const int kCostFieldNumber = 2;
  ::google::protobuf::int32 cost() const;
  void set_cost(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_SelectPenaltyGold)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_cost();
  void clear_has_cost();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::int32 cost_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_RollDiceResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_RollDiceResult) */ {
 public:
  CDOTAUserMsg_RollDiceResult();
  virtual ~CDOTAUserMsg_RollDiceResult();

  CDOTAUserMsg_RollDiceResult(const CDOTAUserMsg_RollDiceResult& from);

  inline CDOTAUserMsg_RollDiceResult& operator=(const CDOTAUserMsg_RollDiceResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_RollDiceResult& default_instance();

  static inline const CDOTAUserMsg_RollDiceResult* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_RollDiceResult*>(
               &_CDOTAUserMsg_RollDiceResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    137;

  void Swap(CDOTAUserMsg_RollDiceResult* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_RollDiceResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_RollDiceResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_RollDiceResult& from);
  void MergeFrom(const CDOTAUserMsg_RollDiceResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_RollDiceResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 channel_type = 2;
  bool has_channel_type() const;
  void clear_channel_type();
  static const int kChannelTypeFieldNumber = 2;
  ::google::protobuf::uint32 channel_type() const;
  void set_channel_type(::google::protobuf::uint32 value);

  // optional uint32 roll_min = 3;
  bool has_roll_min() const;
  void clear_roll_min();
  static const int kRollMinFieldNumber = 3;
  ::google::protobuf::uint32 roll_min() const;
  void set_roll_min(::google::protobuf::uint32 value);

  // optional uint32 roll_max = 4;
  bool has_roll_max() const;
  void clear_roll_max();
  static const int kRollMaxFieldNumber = 4;
  ::google::protobuf::uint32 roll_max() const;
  void set_roll_max(::google::protobuf::uint32 value);

  // optional uint32 result = 5;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 5;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_RollDiceResult)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_channel_type();
  void clear_has_channel_type();
  void set_has_roll_min();
  void clear_has_roll_min();
  void set_has_roll_max();
  void clear_has_roll_max();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 channel_type_;
  ::google::protobuf::uint32 roll_min_;
  ::google::protobuf::uint32 roll_max_;
  ::google::protobuf::uint32 result_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_FlipCoinResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_FlipCoinResult) */ {
 public:
  CDOTAUserMsg_FlipCoinResult();
  virtual ~CDOTAUserMsg_FlipCoinResult();

  CDOTAUserMsg_FlipCoinResult(const CDOTAUserMsg_FlipCoinResult& from);

  inline CDOTAUserMsg_FlipCoinResult& operator=(const CDOTAUserMsg_FlipCoinResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_FlipCoinResult& default_instance();

  static inline const CDOTAUserMsg_FlipCoinResult* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_FlipCoinResult*>(
               &_CDOTAUserMsg_FlipCoinResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    138;

  void Swap(CDOTAUserMsg_FlipCoinResult* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_FlipCoinResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_FlipCoinResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_FlipCoinResult& from);
  void MergeFrom(const CDOTAUserMsg_FlipCoinResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_FlipCoinResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // optional uint32 channel_type = 2;
  bool has_channel_type() const;
  void clear_channel_type();
  static const int kChannelTypeFieldNumber = 2;
  ::google::protobuf::uint32 channel_type() const;
  void set_channel_type(::google::protobuf::uint32 value);

  // optional bool result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_FlipCoinResult)
 private:
  void set_has_player_id();
  void clear_has_player_id();
  void set_has_channel_type();
  void clear_has_channel_type();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  ::google::protobuf::uint32 channel_type_;
  bool result_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMessage_RequestItemSuggestions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMessage_RequestItemSuggestions) */ {
 public:
  CDOTAUserMessage_RequestItemSuggestions();
  virtual ~CDOTAUserMessage_RequestItemSuggestions();

  CDOTAUserMessage_RequestItemSuggestions(const CDOTAUserMessage_RequestItemSuggestions& from);

  inline CDOTAUserMessage_RequestItemSuggestions& operator=(const CDOTAUserMessage_RequestItemSuggestions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMessage_RequestItemSuggestions& default_instance();

  static inline const CDOTAUserMessage_RequestItemSuggestions* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMessage_RequestItemSuggestions*>(
               &_CDOTAUserMessage_RequestItemSuggestions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    139;

  void Swap(CDOTAUserMessage_RequestItemSuggestions* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMessage_RequestItemSuggestions* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMessage_RequestItemSuggestions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMessage_RequestItemSuggestions& from);
  void MergeFrom(const CDOTAUserMessage_RequestItemSuggestions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMessage_RequestItemSuggestions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 player_id = 1;
  bool has_player_id() const;
  void clear_player_id();
  static const int kPlayerIdFieldNumber = 1;
  ::google::protobuf::uint32 player_id() const;
  void set_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMessage_RequestItemSuggestions)
 private:
  void set_has_player_id();
  void clear_has_player_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMessage_TeamCaptainChanged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMessage_TeamCaptainChanged) */ {
 public:
  CDOTAUserMessage_TeamCaptainChanged();
  virtual ~CDOTAUserMessage_TeamCaptainChanged();

  CDOTAUserMessage_TeamCaptainChanged(const CDOTAUserMessage_TeamCaptainChanged& from);

  inline CDOTAUserMessage_TeamCaptainChanged& operator=(const CDOTAUserMessage_TeamCaptainChanged& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMessage_TeamCaptainChanged& default_instance();

  static inline const CDOTAUserMessage_TeamCaptainChanged* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMessage_TeamCaptainChanged*>(
               &_CDOTAUserMessage_TeamCaptainChanged_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(CDOTAUserMessage_TeamCaptainChanged* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMessage_TeamCaptainChanged* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMessage_TeamCaptainChanged* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMessage_TeamCaptainChanged& from);
  void MergeFrom(const CDOTAUserMessage_TeamCaptainChanged& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMessage_TeamCaptainChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team = 1;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 1;
  ::google::protobuf::uint32 team() const;
  void set_team(::google::protobuf::uint32 value);

  // optional uint32 captain_player_id = 2;
  bool has_captain_player_id() const;
  void clear_captain_player_id();
  static const int kCaptainPlayerIdFieldNumber = 2;
  ::google::protobuf::uint32 captain_player_id() const;
  void set_captain_player_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMessage_TeamCaptainChanged)
 private:
  void set_has_team();
  void clear_has_team();
  void set_has_captain_player_id();
  void clear_has_captain_player_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 team_;
  ::google::protobuf::uint32 captain_player_id_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDOTAUserMsg_ChatWheelCooldown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDOTAUserMsg_ChatWheelCooldown) */ {
 public:
  CDOTAUserMsg_ChatWheelCooldown();
  virtual ~CDOTAUserMsg_ChatWheelCooldown();

  CDOTAUserMsg_ChatWheelCooldown(const CDOTAUserMsg_ChatWheelCooldown& from);

  inline CDOTAUserMsg_ChatWheelCooldown& operator=(const CDOTAUserMsg_ChatWheelCooldown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDOTAUserMsg_ChatWheelCooldown& default_instance();

  static inline const CDOTAUserMsg_ChatWheelCooldown* internal_default_instance() {
    return reinterpret_cast<const CDOTAUserMsg_ChatWheelCooldown*>(
               &_CDOTAUserMsg_ChatWheelCooldown_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    141;

  void Swap(CDOTAUserMsg_ChatWheelCooldown* other);

  // implements Message ----------------------------------------------

  inline CDOTAUserMsg_ChatWheelCooldown* New() const PROTOBUF_FINAL { return New(NULL); }

  CDOTAUserMsg_ChatWheelCooldown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDOTAUserMsg_ChatWheelCooldown& from);
  void MergeFrom(const CDOTAUserMsg_ChatWheelCooldown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDOTAUserMsg_ChatWheelCooldown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 message_id = 1;
  bool has_message_id() const;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  ::google::protobuf::uint32 message_id() const;
  void set_message_id(::google::protobuf::uint32 value);

  // optional float cooldown_remaining = 2;
  bool has_cooldown_remaining() const;
  void clear_cooldown_remaining();
  static const int kCooldownRemainingFieldNumber = 2;
  float cooldown_remaining() const;
  void set_cooldown_remaining(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDOTAUserMsg_ChatWheelCooldown)
 private:
  void set_has_message_id();
  void clear_has_message_id();
  void set_has_cooldown_remaining();
  void clear_has_cooldown_remaining();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 message_id_;
  float cooldown_remaining_;
  friend struct protobuf_dota_5fusermessages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CDOTAUserMsg_AIDebugLine

// optional string message = 1;
inline bool CDOTAUserMsg_AIDebugLine::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_AIDebugLine::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_AIDebugLine::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_AIDebugLine::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CDOTAUserMsg_AIDebugLine::message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AIDebugLine.message)
  return message_.GetNoArena();
}
inline void CDOTAUserMsg_AIDebugLine::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AIDebugLine.message)
}
#if LANG_CXX11
inline void CDOTAUserMsg_AIDebugLine::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_AIDebugLine.message)
}
#endif
inline void CDOTAUserMsg_AIDebugLine::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_AIDebugLine.message)
}
inline void CDOTAUserMsg_AIDebugLine::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_AIDebugLine.message)
}
inline ::std::string* CDOTAUserMsg_AIDebugLine::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_AIDebugLine.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_AIDebugLine::release_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_AIDebugLine.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_AIDebugLine::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_AIDebugLine.message)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_Ping

// optional uint32 ping = 2;
inline bool CDOTAUserMsg_Ping::has_ping() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_Ping::set_has_ping() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_Ping::clear_has_ping() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_Ping::clear_ping() {
  ping_ = 0u;
  clear_has_ping();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_Ping::ping() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_Ping.ping)
  return ping_;
}
inline void CDOTAUserMsg_Ping::set_ping(::google::protobuf::uint32 value) {
  set_has_ping();
  ping_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_Ping.ping)
}

// optional uint32 loss = 3;
inline bool CDOTAUserMsg_Ping::has_loss() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_Ping::set_has_loss() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_Ping::clear_has_loss() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_Ping::clear_loss() {
  loss_ = 0u;
  clear_has_loss();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_Ping::loss() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_Ping.loss)
  return loss_;
}
inline void CDOTAUserMsg_Ping::set_loss(::google::protobuf::uint32 value) {
  set_has_loss();
  loss_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_Ping.loss)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SwapVerify

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_SwapVerify::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SwapVerify::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SwapVerify::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SwapVerify::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_SwapVerify::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SwapVerify.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_SwapVerify::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SwapVerify.player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ChatEvent

// required .proto.dota.DOTA_CHAT_MESSAGE type = 1 [default = CHAT_MESSAGE_INVALID];
inline bool CDOTAUserMsg_ChatEvent::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_ChatEvent::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_ChatEvent::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_ChatEvent::clear_type() {
  type_ = -1;
  clear_has_type();
}
inline ::proto::dota::DOTA_CHAT_MESSAGE CDOTAUserMsg_ChatEvent::type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatEvent.type)
  return static_cast< ::proto::dota::DOTA_CHAT_MESSAGE >(type_);
}
inline void CDOTAUserMsg_ChatEvent::set_type(::proto::dota::DOTA_CHAT_MESSAGE value) {
  assert(::proto::dota::DOTA_CHAT_MESSAGE_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatEvent.type)
}

// optional uint32 value = 2;
inline bool CDOTAUserMsg_ChatEvent::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ChatEvent::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ChatEvent::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ChatEvent::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ChatEvent::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatEvent.value)
  return value_;
}
inline void CDOTAUserMsg_ChatEvent::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatEvent.value)
}

// optional sint32 playerid_1 = 3 [default = -1];
inline bool CDOTAUserMsg_ChatEvent::has_playerid_1() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_ChatEvent::set_has_playerid_1() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_ChatEvent::clear_has_playerid_1() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_ChatEvent::clear_playerid_1() {
  playerid_1_ = -1;
  clear_has_playerid_1();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ChatEvent::playerid_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatEvent.playerid_1)
  return playerid_1_;
}
inline void CDOTAUserMsg_ChatEvent::set_playerid_1(::google::protobuf::int32 value) {
  set_has_playerid_1();
  playerid_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatEvent.playerid_1)
}

// optional sint32 playerid_2 = 4 [default = -1];
inline bool CDOTAUserMsg_ChatEvent::has_playerid_2() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAUserMsg_ChatEvent::set_has_playerid_2() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDOTAUserMsg_ChatEvent::clear_has_playerid_2() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDOTAUserMsg_ChatEvent::clear_playerid_2() {
  playerid_2_ = -1;
  clear_has_playerid_2();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ChatEvent::playerid_2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatEvent.playerid_2)
  return playerid_2_;
}
inline void CDOTAUserMsg_ChatEvent::set_playerid_2(::google::protobuf::int32 value) {
  set_has_playerid_2();
  playerid_2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatEvent.playerid_2)
}

// optional sint32 playerid_3 = 5 [default = -1];
inline bool CDOTAUserMsg_ChatEvent::has_playerid_3() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CDOTAUserMsg_ChatEvent::set_has_playerid_3() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CDOTAUserMsg_ChatEvent::clear_has_playerid_3() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CDOTAUserMsg_ChatEvent::clear_playerid_3() {
  playerid_3_ = -1;
  clear_has_playerid_3();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ChatEvent::playerid_3() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatEvent.playerid_3)
  return playerid_3_;
}
inline void CDOTAUserMsg_ChatEvent::set_playerid_3(::google::protobuf::int32 value) {
  set_has_playerid_3();
  playerid_3_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatEvent.playerid_3)
}

// optional sint32 playerid_4 = 6 [default = -1];
inline bool CDOTAUserMsg_ChatEvent::has_playerid_4() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CDOTAUserMsg_ChatEvent::set_has_playerid_4() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CDOTAUserMsg_ChatEvent::clear_has_playerid_4() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CDOTAUserMsg_ChatEvent::clear_playerid_4() {
  playerid_4_ = -1;
  clear_has_playerid_4();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ChatEvent::playerid_4() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatEvent.playerid_4)
  return playerid_4_;
}
inline void CDOTAUserMsg_ChatEvent::set_playerid_4(::google::protobuf::int32 value) {
  set_has_playerid_4();
  playerid_4_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatEvent.playerid_4)
}

// optional sint32 playerid_5 = 7 [default = -1];
inline bool CDOTAUserMsg_ChatEvent::has_playerid_5() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CDOTAUserMsg_ChatEvent::set_has_playerid_5() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CDOTAUserMsg_ChatEvent::clear_has_playerid_5() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CDOTAUserMsg_ChatEvent::clear_playerid_5() {
  playerid_5_ = -1;
  clear_has_playerid_5();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ChatEvent::playerid_5() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatEvent.playerid_5)
  return playerid_5_;
}
inline void CDOTAUserMsg_ChatEvent::set_playerid_5(::google::protobuf::int32 value) {
  set_has_playerid_5();
  playerid_5_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatEvent.playerid_5)
}

// optional sint32 playerid_6 = 8 [default = -1];
inline bool CDOTAUserMsg_ChatEvent::has_playerid_6() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_ChatEvent::set_has_playerid_6() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_ChatEvent::clear_has_playerid_6() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_ChatEvent::clear_playerid_6() {
  playerid_6_ = -1;
  clear_has_playerid_6();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ChatEvent::playerid_6() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatEvent.playerid_6)
  return playerid_6_;
}
inline void CDOTAUserMsg_ChatEvent::set_playerid_6(::google::protobuf::int32 value) {
  set_has_playerid_6();
  playerid_6_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatEvent.playerid_6)
}

// optional uint32 value2 = 9;
inline bool CDOTAUserMsg_ChatEvent::has_value2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ChatEvent::set_has_value2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ChatEvent::clear_has_value2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ChatEvent::clear_value2() {
  value2_ = 0u;
  clear_has_value2();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ChatEvent::value2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatEvent.value2)
  return value2_;
}
inline void CDOTAUserMsg_ChatEvent::set_value2(::google::protobuf::uint32 value) {
  set_has_value2();
  value2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatEvent.value2)
}

// optional uint32 value3 = 10;
inline bool CDOTAUserMsg_ChatEvent::has_value3() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ChatEvent::set_has_value3() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ChatEvent::clear_has_value3() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ChatEvent::clear_value3() {
  value3_ = 0u;
  clear_has_value3();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ChatEvent::value3() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatEvent.value3)
  return value3_;
}
inline void CDOTAUserMsg_ChatEvent::set_value3(::google::protobuf::uint32 value) {
  set_has_value3();
  value3_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatEvent.value3)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CombatLogShowDeath

// -------------------------------------------------------------------

// CDOTAUserMsg_BotChat

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_BotChat::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_BotChat::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_BotChat::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_BotChat::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_BotChat::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BotChat.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_BotChat::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BotChat.player_id)
}

// optional string message = 3;
inline bool CDOTAUserMsg_BotChat::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_BotChat::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_BotChat::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_BotChat::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CDOTAUserMsg_BotChat::message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BotChat.message)
  return message_.GetNoArena();
}
inline void CDOTAUserMsg_BotChat::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BotChat.message)
}
#if LANG_CXX11
inline void CDOTAUserMsg_BotChat::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_BotChat.message)
}
#endif
inline void CDOTAUserMsg_BotChat::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_BotChat.message)
}
inline void CDOTAUserMsg_BotChat::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_BotChat.message)
}
inline ::std::string* CDOTAUserMsg_BotChat::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_BotChat.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_BotChat::release_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_BotChat.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_BotChat::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_BotChat.message)
}

// optional string target = 4;
inline bool CDOTAUserMsg_BotChat::has_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_BotChat::set_has_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_BotChat::clear_has_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_BotChat::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target();
}
inline const ::std::string& CDOTAUserMsg_BotChat::target() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BotChat.target)
  return target_.GetNoArena();
}
inline void CDOTAUserMsg_BotChat::set_target(const ::std::string& value) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BotChat.target)
}
#if LANG_CXX11
inline void CDOTAUserMsg_BotChat::set_target(::std::string&& value) {
  set_has_target();
  target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_BotChat.target)
}
#endif
inline void CDOTAUserMsg_BotChat::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_BotChat.target)
}
inline void CDOTAUserMsg_BotChat::set_target(const char* value, size_t size) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_BotChat.target)
}
inline ::std::string* CDOTAUserMsg_BotChat::mutable_target() {
  set_has_target();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_BotChat.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_BotChat::release_target() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_BotChat.target)
  clear_has_target();
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_BotChat::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    set_has_target();
  } else {
    clear_has_target();
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_BotChat.target)
}

// optional bool team_only = 5;
inline bool CDOTAUserMsg_BotChat::has_team_only() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_BotChat::set_has_team_only() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_BotChat::clear_has_team_only() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_BotChat::clear_team_only() {
  team_only_ = false;
  clear_has_team_only();
}
inline bool CDOTAUserMsg_BotChat::team_only() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BotChat.team_only)
  return team_only_;
}
inline void CDOTAUserMsg_BotChat::set_team_only(bool value) {
  set_has_team_only();
  team_only_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BotChat.team_only)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CombatHeroPositions

// optional uint32 index = 1;
inline bool CDOTAUserMsg_CombatHeroPositions::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_CombatHeroPositions::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_CombatHeroPositions::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_CombatHeroPositions::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_CombatHeroPositions::index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CombatHeroPositions.index)
  return index_;
}
inline void CDOTAUserMsg_CombatHeroPositions::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CombatHeroPositions.index)
}

// optional int32 time = 2;
inline bool CDOTAUserMsg_CombatHeroPositions::has_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_CombatHeroPositions::set_has_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_CombatHeroPositions::clear_has_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_CombatHeroPositions::clear_time() {
  time_ = 0;
  clear_has_time();
}
inline ::google::protobuf::int32 CDOTAUserMsg_CombatHeroPositions::time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CombatHeroPositions.time)
  return time_;
}
inline void CDOTAUserMsg_CombatHeroPositions::set_time(::google::protobuf::int32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CombatHeroPositions.time)
}

// optional .proto.dota.CMsgVector2D world_pos = 3;
inline bool CDOTAUserMsg_CombatHeroPositions::has_world_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_CombatHeroPositions::set_has_world_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_CombatHeroPositions::clear_has_world_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_CombatHeroPositions::clear_world_pos() {
  if (world_pos_ != NULL) world_pos_->::proto::dota::CMsgVector2D::Clear();
  clear_has_world_pos();
}
inline const ::proto::dota::CMsgVector2D& CDOTAUserMsg_CombatHeroPositions::world_pos() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CombatHeroPositions.world_pos)
  return world_pos_ != NULL ? *world_pos_
                         : *::proto::dota::CMsgVector2D::internal_default_instance();
}
inline ::proto::dota::CMsgVector2D* CDOTAUserMsg_CombatHeroPositions::mutable_world_pos() {
  set_has_world_pos();
  if (world_pos_ == NULL) {
    world_pos_ = new ::proto::dota::CMsgVector2D;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CombatHeroPositions.world_pos)
  return world_pos_;
}
inline ::proto::dota::CMsgVector2D* CDOTAUserMsg_CombatHeroPositions::release_world_pos() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CombatHeroPositions.world_pos)
  clear_has_world_pos();
  ::proto::dota::CMsgVector2D* temp = world_pos_;
  world_pos_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_CombatHeroPositions::set_allocated_world_pos(::proto::dota::CMsgVector2D* world_pos) {
  delete world_pos_;
  world_pos_ = world_pos;
  if (world_pos) {
    set_has_world_pos();
  } else {
    clear_has_world_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CombatHeroPositions.world_pos)
}

// optional int32 health = 4;
inline bool CDOTAUserMsg_CombatHeroPositions::has_health() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_CombatHeroPositions::set_has_health() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_CombatHeroPositions::clear_has_health() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_CombatHeroPositions::clear_health() {
  health_ = 0;
  clear_has_health();
}
inline ::google::protobuf::int32 CDOTAUserMsg_CombatHeroPositions::health() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CombatHeroPositions.health)
  return health_;
}
inline void CDOTAUserMsg_CombatHeroPositions::set_health(::google::protobuf::int32 value) {
  set_has_health();
  health_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CombatHeroPositions.health)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability

// optional uint32 ability = 1;
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::has_ability() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::set_has_ability() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::clear_has_ability() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::clear_ability() {
  ability_ = 0u;
  clear_has_ability();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::ability() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.ability)
  return ability_;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::set_ability(::google::protobuf::uint32 value) {
  set_has_ability();
  ability_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.ability)
}

// optional int32 damage = 2;
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::has_damage() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::set_has_damage() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::clear_has_damage() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::clear_damage() {
  damage_ = 0;
  clear_has_damage();
}
inline ::google::protobuf::int32 CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::damage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.damage)
  return damage_;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability::set_damage(::google::protobuf::int32 value) {
  set_has_damage();
  damage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability.damage)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MiniKillCamInfo_Attacker

// optional uint32 attacker = 1;
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker::has_attacker() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_has_attacker() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_has_attacker() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_attacker() {
  attacker_ = 0u;
  clear_has_attacker();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_MiniKillCamInfo_Attacker::attacker() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker)
  return attacker_;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_attacker(::google::protobuf::uint32 value) {
  set_has_attacker();
  attacker_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker)
}

// optional int32 total_damage = 2;
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker::has_total_damage() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_has_total_damage() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_has_total_damage() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_total_damage() {
  total_damage_ = 0;
  clear_has_total_damage();
}
inline ::google::protobuf::int32 CDOTAUserMsg_MiniKillCamInfo_Attacker::total_damage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.total_damage)
  return total_damage_;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_total_damage(::google::protobuf::int32 value) {
  set_has_total_damage();
  total_damage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.total_damage)
}

// repeated .proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.Ability abilities = 3;
inline int CDOTAUserMsg_MiniKillCamInfo_Attacker::abilities_size() const {
  return abilities_.size();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_abilities() {
  abilities_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability& CDOTAUserMsg_MiniKillCamInfo_Attacker::abilities(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.abilities)
  return abilities_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* CDOTAUserMsg_MiniKillCamInfo_Attacker::mutable_abilities(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.abilities)
  return abilities_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability* CDOTAUserMsg_MiniKillCamInfo_Attacker::add_abilities() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.abilities)
  return abilities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability >*
CDOTAUserMsg_MiniKillCamInfo_Attacker::mutable_abilities() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.abilities)
  return &abilities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker_Ability >&
CDOTAUserMsg_MiniKillCamInfo_Attacker::abilities() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.abilities)
  return abilities_;
}

// optional string attacker_name = 4;
inline bool CDOTAUserMsg_MiniKillCamInfo_Attacker::has_attacker_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_has_attacker_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_has_attacker_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::clear_attacker_name() {
  attacker_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attacker_name();
}
inline const ::std::string& CDOTAUserMsg_MiniKillCamInfo_Attacker::attacker_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
  return attacker_name_.GetNoArena();
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_attacker_name(const ::std::string& value) {
  set_has_attacker_name();
  attacker_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
}
#if LANG_CXX11
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_attacker_name(::std::string&& value) {
  set_has_attacker_name();
  attacker_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
}
#endif
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_attacker_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_attacker_name();
  attacker_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_attacker_name(const char* value, size_t size) {
  set_has_attacker_name();
  attacker_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
}
inline ::std::string* CDOTAUserMsg_MiniKillCamInfo_Attacker::mutable_attacker_name() {
  set_has_attacker_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
  return attacker_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_MiniKillCamInfo_Attacker::release_attacker_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
  clear_has_attacker_name();
  return attacker_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_MiniKillCamInfo_Attacker::set_allocated_attacker_name(::std::string* attacker_name) {
  if (attacker_name != NULL) {
    set_has_attacker_name();
  } else {
    clear_has_attacker_name();
  }
  attacker_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attacker_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker.attacker_name)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MiniKillCamInfo

// repeated .proto.dota.CDOTAUserMsg_MiniKillCamInfo.Attacker attackers = 1;
inline int CDOTAUserMsg_MiniKillCamInfo::attackers_size() const {
  return attackers_.size();
}
inline void CDOTAUserMsg_MiniKillCamInfo::clear_attackers() {
  attackers_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker& CDOTAUserMsg_MiniKillCamInfo::attackers(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MiniKillCamInfo.attackers)
  return attackers_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker* CDOTAUserMsg_MiniKillCamInfo::mutable_attackers(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_MiniKillCamInfo.attackers)
  return attackers_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker* CDOTAUserMsg_MiniKillCamInfo::add_attackers() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_MiniKillCamInfo.attackers)
  return attackers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker >*
CDOTAUserMsg_MiniKillCamInfo::mutable_attackers() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_MiniKillCamInfo.attackers)
  return &attackers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_MiniKillCamInfo_Attacker >&
CDOTAUserMsg_MiniKillCamInfo::attackers() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_MiniKillCamInfo.attackers)
  return attackers_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_GlobalLightColor

// optional uint32 color = 1;
inline bool CDOTAUserMsg_GlobalLightColor::has_color() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_GlobalLightColor::set_has_color() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_GlobalLightColor::clear_has_color() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_GlobalLightColor::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_GlobalLightColor::color() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_GlobalLightColor.color)
  return color_;
}
inline void CDOTAUserMsg_GlobalLightColor::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_GlobalLightColor.color)
}

// optional float duration = 2;
inline bool CDOTAUserMsg_GlobalLightColor::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_GlobalLightColor::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_GlobalLightColor::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_GlobalLightColor::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CDOTAUserMsg_GlobalLightColor::duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_GlobalLightColor.duration)
  return duration_;
}
inline void CDOTAUserMsg_GlobalLightColor::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_GlobalLightColor.duration)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_GlobalLightDirection

// optional .proto.dota.CMsgVector direction = 1;
inline bool CDOTAUserMsg_GlobalLightDirection::has_direction() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_GlobalLightDirection::set_has_direction() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_GlobalLightDirection::clear_has_direction() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_GlobalLightDirection::clear_direction() {
  if (direction_ != NULL) direction_->::proto::dota::CMsgVector::Clear();
  clear_has_direction();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_GlobalLightDirection::direction() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_GlobalLightDirection.direction)
  return direction_ != NULL ? *direction_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_GlobalLightDirection::mutable_direction() {
  set_has_direction();
  if (direction_ == NULL) {
    direction_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_GlobalLightDirection.direction)
  return direction_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_GlobalLightDirection::release_direction() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_GlobalLightDirection.direction)
  clear_has_direction();
  ::proto::dota::CMsgVector* temp = direction_;
  direction_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_GlobalLightDirection::set_allocated_direction(::proto::dota::CMsgVector* direction) {
  delete direction_;
  direction_ = direction;
  if (direction) {
    set_has_direction();
  } else {
    clear_has_direction();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_GlobalLightDirection.direction)
}

// optional float duration = 2;
inline bool CDOTAUserMsg_GlobalLightDirection::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_GlobalLightDirection::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_GlobalLightDirection::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_GlobalLightDirection::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CDOTAUserMsg_GlobalLightDirection::duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_GlobalLightDirection.duration)
  return duration_;
}
inline void CDOTAUserMsg_GlobalLightDirection::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_GlobalLightDirection.duration)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_LocationPing

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_LocationPing::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_LocationPing::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_LocationPing::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_LocationPing::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_LocationPing::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_LocationPing.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_LocationPing::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_LocationPing.player_id)
}

// optional .proto.dota.CDOTAMsg_LocationPing location_ping = 2;
inline bool CDOTAUserMsg_LocationPing::has_location_ping() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_LocationPing::set_has_location_ping() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_LocationPing::clear_has_location_ping() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_LocationPing::clear_location_ping() {
  if (location_ping_ != NULL) location_ping_->::proto::dota::CDOTAMsg_LocationPing::Clear();
  clear_has_location_ping();
}
inline const ::proto::dota::CDOTAMsg_LocationPing& CDOTAUserMsg_LocationPing::location_ping() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_LocationPing.location_ping)
  return location_ping_ != NULL ? *location_ping_
                         : *::proto::dota::CDOTAMsg_LocationPing::internal_default_instance();
}
inline ::proto::dota::CDOTAMsg_LocationPing* CDOTAUserMsg_LocationPing::mutable_location_ping() {
  set_has_location_ping();
  if (location_ping_ == NULL) {
    location_ping_ = new ::proto::dota::CDOTAMsg_LocationPing;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_LocationPing.location_ping)
  return location_ping_;
}
inline ::proto::dota::CDOTAMsg_LocationPing* CDOTAUserMsg_LocationPing::release_location_ping() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_LocationPing.location_ping)
  clear_has_location_ping();
  ::proto::dota::CDOTAMsg_LocationPing* temp = location_ping_;
  location_ping_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_LocationPing::set_allocated_location_ping(::proto::dota::CDOTAMsg_LocationPing* location_ping) {
  delete location_ping_;
  location_ping_ = location_ping;
  if (location_ping) {
    set_has_location_ping();
  } else {
    clear_has_location_ping();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_LocationPing.location_ping)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ItemAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_ItemAlert::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ItemAlert::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ItemAlert::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ItemAlert::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ItemAlert::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ItemAlert.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_ItemAlert::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ItemAlert.player_id)
}

// optional .proto.dota.CDOTAMsg_ItemAlert item_alert = 2;
inline bool CDOTAUserMsg_ItemAlert::has_item_alert() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ItemAlert::set_has_item_alert() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ItemAlert::clear_has_item_alert() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ItemAlert::clear_item_alert() {
  if (item_alert_ != NULL) item_alert_->::proto::dota::CDOTAMsg_ItemAlert::Clear();
  clear_has_item_alert();
}
inline const ::proto::dota::CDOTAMsg_ItemAlert& CDOTAUserMsg_ItemAlert::item_alert() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ItemAlert.item_alert)
  return item_alert_ != NULL ? *item_alert_
                         : *::proto::dota::CDOTAMsg_ItemAlert::internal_default_instance();
}
inline ::proto::dota::CDOTAMsg_ItemAlert* CDOTAUserMsg_ItemAlert::mutable_item_alert() {
  set_has_item_alert();
  if (item_alert_ == NULL) {
    item_alert_ = new ::proto::dota::CDOTAMsg_ItemAlert;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ItemAlert.item_alert)
  return item_alert_;
}
inline ::proto::dota::CDOTAMsg_ItemAlert* CDOTAUserMsg_ItemAlert::release_item_alert() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ItemAlert.item_alert)
  clear_has_item_alert();
  ::proto::dota::CDOTAMsg_ItemAlert* temp = item_alert_;
  item_alert_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ItemAlert::set_allocated_item_alert(::proto::dota::CDOTAMsg_ItemAlert* item_alert) {
  delete item_alert_;
  item_alert_ = item_alert;
  if (item_alert) {
    set_has_item_alert();
  } else {
    clear_has_item_alert();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ItemAlert.item_alert)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_EnemyItemAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_EnemyItemAlert::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_EnemyItemAlert::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_EnemyItemAlert.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_EnemyItemAlert.player_id)
}

// optional uint32 target_player_id = 2;
inline bool CDOTAUserMsg_EnemyItemAlert::has_target_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_has_target_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_has_target_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_target_player_id() {
  target_player_id_ = 0u;
  clear_has_target_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_EnemyItemAlert::target_player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_EnemyItemAlert.target_player_id)
  return target_player_id_;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_target_player_id(::google::protobuf::uint32 value) {
  set_has_target_player_id();
  target_player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_EnemyItemAlert.target_player_id)
}

// optional int32 itemid = 3;
inline bool CDOTAUserMsg_EnemyItemAlert::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 CDOTAUserMsg_EnemyItemAlert::itemid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_EnemyItemAlert.itemid)
  return itemid_;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_EnemyItemAlert.itemid)
}

// optional uint32 rune_type = 4;
inline bool CDOTAUserMsg_EnemyItemAlert::has_rune_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_has_rune_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_has_rune_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_EnemyItemAlert::clear_rune_type() {
  rune_type_ = 0u;
  clear_has_rune_type();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_EnemyItemAlert::rune_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_EnemyItemAlert.rune_type)
  return rune_type_;
}
inline void CDOTAUserMsg_EnemyItemAlert::set_rune_type(::google::protobuf::uint32 value) {
  set_has_rune_type();
  rune_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_EnemyItemAlert.rune_type)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ModifierAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_ModifierAlert::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ModifierAlert::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ModifierAlert::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ModifierAlert::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ModifierAlert::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ModifierAlert.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_ModifierAlert::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ModifierAlert.player_id)
}

// optional string class_name = 2;
inline bool CDOTAUserMsg_ModifierAlert::has_class_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ModifierAlert::set_has_class_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ModifierAlert::clear_has_class_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ModifierAlert::clear_class_name() {
  class_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_class_name();
}
inline const ::std::string& CDOTAUserMsg_ModifierAlert::class_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ModifierAlert.class_name)
  return class_name_.GetNoArena();
}
inline void CDOTAUserMsg_ModifierAlert::set_class_name(const ::std::string& value) {
  set_has_class_name();
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ModifierAlert.class_name)
}
#if LANG_CXX11
inline void CDOTAUserMsg_ModifierAlert::set_class_name(::std::string&& value) {
  set_has_class_name();
  class_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_ModifierAlert.class_name)
}
#endif
inline void CDOTAUserMsg_ModifierAlert::set_class_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_class_name();
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_ModifierAlert.class_name)
}
inline void CDOTAUserMsg_ModifierAlert::set_class_name(const char* value, size_t size) {
  set_has_class_name();
  class_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_ModifierAlert.class_name)
}
inline ::std::string* CDOTAUserMsg_ModifierAlert::mutable_class_name() {
  set_has_class_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ModifierAlert.class_name)
  return class_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_ModifierAlert::release_class_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ModifierAlert.class_name)
  clear_has_class_name();
  return class_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_ModifierAlert::set_allocated_class_name(::std::string* class_name) {
  if (class_name != NULL) {
    set_has_class_name();
  } else {
    clear_has_class_name();
  }
  class_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ModifierAlert.class_name)
}

// optional uint32 stack_count = 3;
inline bool CDOTAUserMsg_ModifierAlert::has_stack_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ModifierAlert::set_has_stack_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ModifierAlert::clear_has_stack_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ModifierAlert::clear_stack_count() {
  stack_count_ = 0u;
  clear_has_stack_count();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ModifierAlert::stack_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ModifierAlert.stack_count)
  return stack_count_;
}
inline void CDOTAUserMsg_ModifierAlert::set_stack_count(::google::protobuf::uint32 value) {
  set_has_stack_count();
  stack_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ModifierAlert.stack_count)
}

// optional bool is_debuff = 4;
inline bool CDOTAUserMsg_ModifierAlert::has_is_debuff() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_ModifierAlert::set_has_is_debuff() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_ModifierAlert::clear_has_is_debuff() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_ModifierAlert::clear_is_debuff() {
  is_debuff_ = false;
  clear_has_is_debuff();
}
inline bool CDOTAUserMsg_ModifierAlert::is_debuff() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ModifierAlert.is_debuff)
  return is_debuff_;
}
inline void CDOTAUserMsg_ModifierAlert::set_is_debuff(bool value) {
  set_has_is_debuff();
  is_debuff_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ModifierAlert.is_debuff)
}

// optional uint32 target_entindex = 5;
inline bool CDOTAUserMsg_ModifierAlert::has_target_entindex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_ModifierAlert::set_has_target_entindex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_ModifierAlert::clear_has_target_entindex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_ModifierAlert::clear_target_entindex() {
  target_entindex_ = 0u;
  clear_has_target_entindex();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ModifierAlert::target_entindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ModifierAlert.target_entindex)
  return target_entindex_;
}
inline void CDOTAUserMsg_ModifierAlert::set_target_entindex(::google::protobuf::uint32 value) {
  set_has_target_entindex();
  target_entindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ModifierAlert.target_entindex)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_HPManaAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_HPManaAlert::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_HPManaAlert::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_HPManaAlert::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_HPManaAlert::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_HPManaAlert::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_HPManaAlert.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_HPManaAlert::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_HPManaAlert.player_id)
}

// optional uint32 target_entindex = 2;
inline bool CDOTAUserMsg_HPManaAlert::has_target_entindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_HPManaAlert::set_has_target_entindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_HPManaAlert::clear_has_target_entindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_HPManaAlert::clear_target_entindex() {
  target_entindex_ = 0u;
  clear_has_target_entindex();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_HPManaAlert::target_entindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_HPManaAlert.target_entindex)
  return target_entindex_;
}
inline void CDOTAUserMsg_HPManaAlert::set_target_entindex(::google::protobuf::uint32 value) {
  set_has_target_entindex();
  target_entindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_HPManaAlert.target_entindex)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_GlyphAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_GlyphAlert::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_GlyphAlert::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_GlyphAlert::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_GlyphAlert::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_GlyphAlert::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_GlyphAlert.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_GlyphAlert::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_GlyphAlert.player_id)
}

// optional bool negative = 2;
inline bool CDOTAUserMsg_GlyphAlert::has_negative() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_GlyphAlert::set_has_negative() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_GlyphAlert::clear_has_negative() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_GlyphAlert::clear_negative() {
  negative_ = false;
  clear_has_negative();
}
inline bool CDOTAUserMsg_GlyphAlert::negative() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_GlyphAlert.negative)
  return negative_;
}
inline void CDOTAUserMsg_GlyphAlert::set_negative(bool value) {
  set_has_negative();
  negative_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_GlyphAlert.negative)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_WillPurchaseAlert

// optional int32 itemid = 1;
inline bool CDOTAUserMsg_WillPurchaseAlert::has_itemid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_WillPurchaseAlert::set_has_itemid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_WillPurchaseAlert::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_WillPurchaseAlert::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 CDOTAUserMsg_WillPurchaseAlert::itemid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_WillPurchaseAlert.itemid)
  return itemid_;
}
inline void CDOTAUserMsg_WillPurchaseAlert::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_WillPurchaseAlert.itemid)
}

// optional int32 player_id = 2;
inline bool CDOTAUserMsg_WillPurchaseAlert::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_WillPurchaseAlert::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_WillPurchaseAlert::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_WillPurchaseAlert::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_WillPurchaseAlert::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_WillPurchaseAlert.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_WillPurchaseAlert::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_WillPurchaseAlert.player_id)
}

// optional uint32 gold_remaining = 3;
inline bool CDOTAUserMsg_WillPurchaseAlert::has_gold_remaining() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_WillPurchaseAlert::set_has_gold_remaining() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_WillPurchaseAlert::clear_has_gold_remaining() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_WillPurchaseAlert::clear_gold_remaining() {
  gold_remaining_ = 0u;
  clear_has_gold_remaining();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_WillPurchaseAlert::gold_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_WillPurchaseAlert.gold_remaining)
  return gold_remaining_;
}
inline void CDOTAUserMsg_WillPurchaseAlert::set_gold_remaining(::google::protobuf::uint32 value) {
  set_has_gold_remaining();
  gold_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_WillPurchaseAlert.gold_remaining)
}

// optional int32 suggestion_player_id = 4;
inline bool CDOTAUserMsg_WillPurchaseAlert::has_suggestion_player_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_WillPurchaseAlert::set_has_suggestion_player_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_WillPurchaseAlert::clear_has_suggestion_player_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_WillPurchaseAlert::clear_suggestion_player_id() {
  suggestion_player_id_ = 0;
  clear_has_suggestion_player_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_WillPurchaseAlert::suggestion_player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_WillPurchaseAlert.suggestion_player_id)
  return suggestion_player_id_;
}
inline void CDOTAUserMsg_WillPurchaseAlert::set_suggestion_player_id(::google::protobuf::int32 value) {
  set_has_suggestion_player_id();
  suggestion_player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_WillPurchaseAlert.suggestion_player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_BuyBackStateAlert

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_BuyBackStateAlert::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_BuyBackStateAlert::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_BuyBackStateAlert::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_BuyBackStateAlert::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_BuyBackStateAlert::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BuyBackStateAlert.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_BuyBackStateAlert::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BuyBackStateAlert.player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_QuickBuyAlert

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_QuickBuyAlert::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_QuickBuyAlert::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_QuickBuyAlert::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_QuickBuyAlert::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_QuickBuyAlert::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_QuickBuyAlert.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_QuickBuyAlert::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_QuickBuyAlert.player_id)
}

// optional int32 itemid = 2;
inline bool CDOTAUserMsg_QuickBuyAlert::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_QuickBuyAlert::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_QuickBuyAlert::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_QuickBuyAlert::clear_itemid() {
  itemid_ = 0;
  clear_has_itemid();
}
inline ::google::protobuf::int32 CDOTAUserMsg_QuickBuyAlert::itemid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_QuickBuyAlert.itemid)
  return itemid_;
}
inline void CDOTAUserMsg_QuickBuyAlert::set_itemid(::google::protobuf::int32 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_QuickBuyAlert.itemid)
}

// optional int32 gold_required = 3;
inline bool CDOTAUserMsg_QuickBuyAlert::has_gold_required() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_QuickBuyAlert::set_has_gold_required() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_QuickBuyAlert::clear_has_gold_required() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_QuickBuyAlert::clear_gold_required() {
  gold_required_ = 0;
  clear_has_gold_required();
}
inline ::google::protobuf::int32 CDOTAUserMsg_QuickBuyAlert::gold_required() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_QuickBuyAlert.gold_required)
  return gold_required_;
}
inline void CDOTAUserMsg_QuickBuyAlert::set_gold_required(::google::protobuf::int32 value) {
  set_has_gold_required();
  gold_required_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_QuickBuyAlert.gold_required)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CourierKilledAlert_LostItem

// optional int32 item = 1;
inline bool CDOTAUserMsg_CourierKilledAlert_LostItem::has_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::set_has_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::clear_has_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::clear_item() {
  item_ = 0;
  clear_has_item();
}
inline ::google::protobuf::int32 CDOTAUserMsg_CourierKilledAlert_LostItem::item() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CourierKilledAlert.LostItem.item)
  return item_;
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::set_item(::google::protobuf::int32 value) {
  set_has_item();
  item_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CourierKilledAlert.LostItem.item)
}

// optional uint32 quantity = 2;
inline bool CDOTAUserMsg_CourierKilledAlert_LostItem::has_quantity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::set_has_quantity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_CourierKilledAlert_LostItem::quantity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CourierKilledAlert.LostItem.quantity)
  return quantity_;
}
inline void CDOTAUserMsg_CourierKilledAlert_LostItem::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CourierKilledAlert.LostItem.quantity)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CourierKilledAlert

// optional uint32 team = 1;
inline bool CDOTAUserMsg_CourierKilledAlert::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_CourierKilledAlert::team() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CourierKilledAlert.team)
  return team_;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CourierKilledAlert.team)
}

// optional uint32 gold_value = 2;
inline bool CDOTAUserMsg_CourierKilledAlert::has_gold_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_has_gold_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_has_gold_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_gold_value() {
  gold_value_ = 0u;
  clear_has_gold_value();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_CourierKilledAlert::gold_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CourierKilledAlert.gold_value)
  return gold_value_;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_gold_value(::google::protobuf::uint32 value) {
  set_has_gold_value();
  gold_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CourierKilledAlert.gold_value)
}

// optional int32 entity_handle = 3;
inline bool CDOTAUserMsg_CourierKilledAlert::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_has_entity_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_has_entity_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_entity_handle() {
  entity_handle_ = 0;
  clear_has_entity_handle();
}
inline ::google::protobuf::int32 CDOTAUserMsg_CourierKilledAlert::entity_handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CourierKilledAlert.entity_handle)
  return entity_handle_;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_entity_handle(::google::protobuf::int32 value) {
  set_has_entity_handle();
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CourierKilledAlert.entity_handle)
}

// optional int32 timestamp = 4;
inline bool CDOTAUserMsg_CourierKilledAlert::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_timestamp() {
  timestamp_ = 0;
  clear_has_timestamp();
}
inline ::google::protobuf::int32 CDOTAUserMsg_CourierKilledAlert::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CourierKilledAlert.timestamp)
  return timestamp_;
}
inline void CDOTAUserMsg_CourierKilledAlert::set_timestamp(::google::protobuf::int32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CourierKilledAlert.timestamp)
}

// repeated .proto.dota.CDOTAUserMsg_CourierKilledAlert.LostItem lost_items = 5;
inline int CDOTAUserMsg_CourierKilledAlert::lost_items_size() const {
  return lost_items_.size();
}
inline void CDOTAUserMsg_CourierKilledAlert::clear_lost_items() {
  lost_items_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_CourierKilledAlert_LostItem& CDOTAUserMsg_CourierKilledAlert::lost_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CourierKilledAlert.lost_items)
  return lost_items_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_CourierKilledAlert_LostItem* CDOTAUserMsg_CourierKilledAlert::mutable_lost_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CourierKilledAlert.lost_items)
  return lost_items_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_CourierKilledAlert_LostItem* CDOTAUserMsg_CourierKilledAlert::add_lost_items() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_CourierKilledAlert.lost_items)
  return lost_items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_CourierKilledAlert_LostItem >*
CDOTAUserMsg_CourierKilledAlert::mutable_lost_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_CourierKilledAlert.lost_items)
  return &lost_items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_CourierKilledAlert_LostItem >&
CDOTAUserMsg_CourierKilledAlert::lost_items() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_CourierKilledAlert.lost_items)
  return lost_items_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MinimapEvent

// optional int32 event_type = 1;
inline bool CDOTAUserMsg_MinimapEvent::has_event_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_MinimapEvent::set_has_event_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_MinimapEvent::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_MinimapEvent::clear_event_type() {
  event_type_ = 0;
  clear_has_event_type();
}
inline ::google::protobuf::int32 CDOTAUserMsg_MinimapEvent::event_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MinimapEvent.event_type)
  return event_type_;
}
inline void CDOTAUserMsg_MinimapEvent::set_event_type(::google::protobuf::int32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MinimapEvent.event_type)
}

// optional int32 entity_handle = 2;
inline bool CDOTAUserMsg_MinimapEvent::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_MinimapEvent::set_has_entity_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_MinimapEvent::clear_has_entity_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_MinimapEvent::clear_entity_handle() {
  entity_handle_ = 0;
  clear_has_entity_handle();
}
inline ::google::protobuf::int32 CDOTAUserMsg_MinimapEvent::entity_handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MinimapEvent.entity_handle)
  return entity_handle_;
}
inline void CDOTAUserMsg_MinimapEvent::set_entity_handle(::google::protobuf::int32 value) {
  set_has_entity_handle();
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MinimapEvent.entity_handle)
}

// optional int32 x = 3;
inline bool CDOTAUserMsg_MinimapEvent::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_MinimapEvent::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_MinimapEvent::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_MinimapEvent::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 CDOTAUserMsg_MinimapEvent::x() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MinimapEvent.x)
  return x_;
}
inline void CDOTAUserMsg_MinimapEvent::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MinimapEvent.x)
}

// optional int32 y = 4;
inline bool CDOTAUserMsg_MinimapEvent::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_MinimapEvent::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_MinimapEvent::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_MinimapEvent::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 CDOTAUserMsg_MinimapEvent::y() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MinimapEvent.y)
  return y_;
}
inline void CDOTAUserMsg_MinimapEvent::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MinimapEvent.y)
}

// optional int32 duration = 5;
inline bool CDOTAUserMsg_MinimapEvent::has_duration() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_MinimapEvent::set_has_duration() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_MinimapEvent::clear_has_duration() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_MinimapEvent::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline ::google::protobuf::int32 CDOTAUserMsg_MinimapEvent::duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MinimapEvent.duration)
  return duration_;
}
inline void CDOTAUserMsg_MinimapEvent::set_duration(::google::protobuf::int32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MinimapEvent.duration)
}

// optional int32 target_entity_handle = 6;
inline bool CDOTAUserMsg_MinimapEvent::has_target_entity_handle() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_MinimapEvent::set_has_target_entity_handle() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_MinimapEvent::clear_has_target_entity_handle() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_MinimapEvent::clear_target_entity_handle() {
  target_entity_handle_ = 0;
  clear_has_target_entity_handle();
}
inline ::google::protobuf::int32 CDOTAUserMsg_MinimapEvent::target_entity_handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MinimapEvent.target_entity_handle)
  return target_entity_handle_;
}
inline void CDOTAUserMsg_MinimapEvent::set_target_entity_handle(::google::protobuf::int32 value) {
  set_has_target_entity_handle();
  target_entity_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MinimapEvent.target_entity_handle)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MapLine

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_MapLine::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_MapLine::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_MapLine::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_MapLine::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_MapLine::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MapLine.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_MapLine::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MapLine.player_id)
}

// optional .proto.dota.CDOTAMsg_MapLine mapline = 2;
inline bool CDOTAUserMsg_MapLine::has_mapline() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_MapLine::set_has_mapline() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_MapLine::clear_has_mapline() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_MapLine::clear_mapline() {
  if (mapline_ != NULL) mapline_->::proto::dota::CDOTAMsg_MapLine::Clear();
  clear_has_mapline();
}
inline const ::proto::dota::CDOTAMsg_MapLine& CDOTAUserMsg_MapLine::mapline() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MapLine.mapline)
  return mapline_ != NULL ? *mapline_
                         : *::proto::dota::CDOTAMsg_MapLine::internal_default_instance();
}
inline ::proto::dota::CDOTAMsg_MapLine* CDOTAUserMsg_MapLine::mutable_mapline() {
  set_has_mapline();
  if (mapline_ == NULL) {
    mapline_ = new ::proto::dota::CDOTAMsg_MapLine;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_MapLine.mapline)
  return mapline_;
}
inline ::proto::dota::CDOTAMsg_MapLine* CDOTAUserMsg_MapLine::release_mapline() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_MapLine.mapline)
  clear_has_mapline();
  ::proto::dota::CDOTAMsg_MapLine* temp = mapline_;
  mapline_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_MapLine::set_allocated_mapline(::proto::dota::CDOTAMsg_MapLine* mapline) {
  delete mapline_;
  mapline_ = mapline;
  if (mapline) {
    set_has_mapline();
  } else {
    clear_has_mapline();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_MapLine.mapline)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MinimapDebugPoint

// optional .proto.dota.CMsgVector location = 1;
inline bool CDOTAUserMsg_MinimapDebugPoint::has_location() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_has_location() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_has_location() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_location() {
  if (location_ != NULL) location_->::proto::dota::CMsgVector::Clear();
  clear_has_location();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_MinimapDebugPoint::location() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MinimapDebugPoint.location)
  return location_ != NULL ? *location_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_MinimapDebugPoint::mutable_location() {
  set_has_location();
  if (location_ == NULL) {
    location_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_MinimapDebugPoint.location)
  return location_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_MinimapDebugPoint::release_location() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_MinimapDebugPoint.location)
  clear_has_location();
  ::proto::dota::CMsgVector* temp = location_;
  location_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_allocated_location(::proto::dota::CMsgVector* location) {
  delete location_;
  location_ = location;
  if (location) {
    set_has_location();
  } else {
    clear_has_location();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_MinimapDebugPoint.location)
}

// optional uint32 color = 2;
inline bool CDOTAUserMsg_MinimapDebugPoint::has_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_has_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_has_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_color() {
  color_ = 0u;
  clear_has_color();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_MinimapDebugPoint::color() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MinimapDebugPoint.color)
  return color_;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_color(::google::protobuf::uint32 value) {
  set_has_color();
  color_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MinimapDebugPoint.color)
}

// optional int32 size = 3;
inline bool CDOTAUserMsg_MinimapDebugPoint::has_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_has_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_has_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_size() {
  size_ = 0;
  clear_has_size();
}
inline ::google::protobuf::int32 CDOTAUserMsg_MinimapDebugPoint::size() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MinimapDebugPoint.size)
  return size_;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_size(::google::protobuf::int32 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MinimapDebugPoint.size)
}

// optional float duration = 4;
inline bool CDOTAUserMsg_MinimapDebugPoint::has_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_has_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_has_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CDOTAUserMsg_MinimapDebugPoint::duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MinimapDebugPoint.duration)
  return duration_;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MinimapDebugPoint.duration)
}

// optional int32 index = 5;
inline bool CDOTAUserMsg_MinimapDebugPoint::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_MinimapDebugPoint::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 CDOTAUserMsg_MinimapDebugPoint::index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MinimapDebugPoint.index)
  return index_;
}
inline void CDOTAUserMsg_MinimapDebugPoint::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MinimapDebugPoint.index)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CreateLinearProjectile

// optional .proto.dota.CMsgVector origin = 1;
inline bool CDOTAUserMsg_CreateLinearProjectile::has_origin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_has_origin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_has_origin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_origin() {
  if (origin_ != NULL) origin_->::proto::dota::CMsgVector::Clear();
  clear_has_origin();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_CreateLinearProjectile::origin() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CreateLinearProjectile.origin)
  return origin_ != NULL ? *origin_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_CreateLinearProjectile::mutable_origin() {
  set_has_origin();
  if (origin_ == NULL) {
    origin_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CreateLinearProjectile.origin)
  return origin_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_CreateLinearProjectile::release_origin() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CreateLinearProjectile.origin)
  clear_has_origin();
  ::proto::dota::CMsgVector* temp = origin_;
  origin_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_allocated_origin(::proto::dota::CMsgVector* origin) {
  delete origin_;
  origin_ = origin;
  if (origin) {
    set_has_origin();
  } else {
    clear_has_origin();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CreateLinearProjectile.origin)
}

// optional .proto.dota.CMsgVector2D velocity = 2;
inline bool CDOTAUserMsg_CreateLinearProjectile::has_velocity() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_has_velocity() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_has_velocity() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_velocity() {
  if (velocity_ != NULL) velocity_->::proto::dota::CMsgVector2D::Clear();
  clear_has_velocity();
}
inline const ::proto::dota::CMsgVector2D& CDOTAUserMsg_CreateLinearProjectile::velocity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CreateLinearProjectile.velocity)
  return velocity_ != NULL ? *velocity_
                         : *::proto::dota::CMsgVector2D::internal_default_instance();
}
inline ::proto::dota::CMsgVector2D* CDOTAUserMsg_CreateLinearProjectile::mutable_velocity() {
  set_has_velocity();
  if (velocity_ == NULL) {
    velocity_ = new ::proto::dota::CMsgVector2D;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CreateLinearProjectile.velocity)
  return velocity_;
}
inline ::proto::dota::CMsgVector2D* CDOTAUserMsg_CreateLinearProjectile::release_velocity() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CreateLinearProjectile.velocity)
  clear_has_velocity();
  ::proto::dota::CMsgVector2D* temp = velocity_;
  velocity_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_allocated_velocity(::proto::dota::CMsgVector2D* velocity) {
  delete velocity_;
  velocity_ = velocity;
  if (velocity) {
    set_has_velocity();
  } else {
    clear_has_velocity();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CreateLinearProjectile.velocity)
}

// optional int32 entindex = 4;
inline bool CDOTAUserMsg_CreateLinearProjectile::has_entindex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_has_entindex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_has_entindex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_entindex() {
  entindex_ = 0;
  clear_has_entindex();
}
inline ::google::protobuf::int32 CDOTAUserMsg_CreateLinearProjectile::entindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CreateLinearProjectile.entindex)
  return entindex_;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_entindex(::google::protobuf::int32 value) {
  set_has_entindex();
  entindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CreateLinearProjectile.entindex)
}

// optional uint64 particle_index = 5;
inline bool CDOTAUserMsg_CreateLinearProjectile::has_particle_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_has_particle_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_has_particle_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_particle_index() {
  particle_index_ = GOOGLE_ULONGLONG(0);
  clear_has_particle_index();
}
inline ::google::protobuf::uint64 CDOTAUserMsg_CreateLinearProjectile::particle_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CreateLinearProjectile.particle_index)
  return particle_index_;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_particle_index(::google::protobuf::uint64 value) {
  set_has_particle_index();
  particle_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CreateLinearProjectile.particle_index)
}

// optional int32 handle = 6;
inline bool CDOTAUserMsg_CreateLinearProjectile::has_handle() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_has_handle() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_has_handle() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_handle() {
  handle_ = 0;
  clear_has_handle();
}
inline ::google::protobuf::int32 CDOTAUserMsg_CreateLinearProjectile::handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CreateLinearProjectile.handle)
  return handle_;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_handle(::google::protobuf::int32 value) {
  set_has_handle();
  handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CreateLinearProjectile.handle)
}

// optional .proto.dota.CMsgVector2D acceleration = 7;
inline bool CDOTAUserMsg_CreateLinearProjectile::has_acceleration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_has_acceleration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_has_acceleration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_acceleration() {
  if (acceleration_ != NULL) acceleration_->::proto::dota::CMsgVector2D::Clear();
  clear_has_acceleration();
}
inline const ::proto::dota::CMsgVector2D& CDOTAUserMsg_CreateLinearProjectile::acceleration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CreateLinearProjectile.acceleration)
  return acceleration_ != NULL ? *acceleration_
                         : *::proto::dota::CMsgVector2D::internal_default_instance();
}
inline ::proto::dota::CMsgVector2D* CDOTAUserMsg_CreateLinearProjectile::mutable_acceleration() {
  set_has_acceleration();
  if (acceleration_ == NULL) {
    acceleration_ = new ::proto::dota::CMsgVector2D;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CreateLinearProjectile.acceleration)
  return acceleration_;
}
inline ::proto::dota::CMsgVector2D* CDOTAUserMsg_CreateLinearProjectile::release_acceleration() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CreateLinearProjectile.acceleration)
  clear_has_acceleration();
  ::proto::dota::CMsgVector2D* temp = acceleration_;
  acceleration_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_allocated_acceleration(::proto::dota::CMsgVector2D* acceleration) {
  delete acceleration_;
  acceleration_ = acceleration;
  if (acceleration) {
    set_has_acceleration();
  } else {
    clear_has_acceleration();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CreateLinearProjectile.acceleration)
}

// optional float max_speed = 8;
inline bool CDOTAUserMsg_CreateLinearProjectile::has_max_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_has_max_speed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_has_max_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_max_speed() {
  max_speed_ = 0;
  clear_has_max_speed();
}
inline float CDOTAUserMsg_CreateLinearProjectile::max_speed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CreateLinearProjectile.max_speed)
  return max_speed_;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_max_speed(float value) {
  set_has_max_speed();
  max_speed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CreateLinearProjectile.max_speed)
}

// optional float fow_radius = 9;
inline bool CDOTAUserMsg_CreateLinearProjectile::has_fow_radius() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_has_fow_radius() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_has_fow_radius() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_fow_radius() {
  fow_radius_ = 0;
  clear_has_fow_radius();
}
inline float CDOTAUserMsg_CreateLinearProjectile::fow_radius() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CreateLinearProjectile.fow_radius)
  return fow_radius_;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_fow_radius(float value) {
  set_has_fow_radius();
  fow_radius_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CreateLinearProjectile.fow_radius)
}

// optional bool sticky_fow_reveal = 10;
inline bool CDOTAUserMsg_CreateLinearProjectile::has_sticky_fow_reveal() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_has_sticky_fow_reveal() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_has_sticky_fow_reveal() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_sticky_fow_reveal() {
  sticky_fow_reveal_ = false;
  clear_has_sticky_fow_reveal();
}
inline bool CDOTAUserMsg_CreateLinearProjectile::sticky_fow_reveal() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CreateLinearProjectile.sticky_fow_reveal)
  return sticky_fow_reveal_;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_sticky_fow_reveal(bool value) {
  set_has_sticky_fow_reveal();
  sticky_fow_reveal_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CreateLinearProjectile.sticky_fow_reveal)
}

// optional float distance = 11;
inline bool CDOTAUserMsg_CreateLinearProjectile::has_distance() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_has_distance() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_has_distance() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CDOTAUserMsg_CreateLinearProjectile::clear_distance() {
  distance_ = 0;
  clear_has_distance();
}
inline float CDOTAUserMsg_CreateLinearProjectile::distance() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CreateLinearProjectile.distance)
  return distance_;
}
inline void CDOTAUserMsg_CreateLinearProjectile::set_distance(float value) {
  set_has_distance();
  distance_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CreateLinearProjectile.distance)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_DestroyLinearProjectile

// optional int32 handle = 1;
inline bool CDOTAUserMsg_DestroyLinearProjectile::has_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_DestroyLinearProjectile::set_has_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_DestroyLinearProjectile::clear_has_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_DestroyLinearProjectile::clear_handle() {
  handle_ = 0;
  clear_has_handle();
}
inline ::google::protobuf::int32 CDOTAUserMsg_DestroyLinearProjectile::handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_DestroyLinearProjectile.handle)
  return handle_;
}
inline void CDOTAUserMsg_DestroyLinearProjectile::set_handle(::google::protobuf::int32 value) {
  set_has_handle();
  handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_DestroyLinearProjectile.handle)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_DodgeTrackingProjectiles

// required int32 entindex = 1;
inline bool CDOTAUserMsg_DodgeTrackingProjectiles::has_entindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::set_has_entindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::clear_has_entindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::clear_entindex() {
  entindex_ = 0;
  clear_has_entindex();
}
inline ::google::protobuf::int32 CDOTAUserMsg_DodgeTrackingProjectiles::entindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_DodgeTrackingProjectiles.entindex)
  return entindex_;
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::set_entindex(::google::protobuf::int32 value) {
  set_has_entindex();
  entindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_DodgeTrackingProjectiles.entindex)
}

// optional bool attacks_only = 2;
inline bool CDOTAUserMsg_DodgeTrackingProjectiles::has_attacks_only() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::set_has_attacks_only() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::clear_has_attacks_only() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::clear_attacks_only() {
  attacks_only_ = false;
  clear_has_attacks_only();
}
inline bool CDOTAUserMsg_DodgeTrackingProjectiles::attacks_only() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_DodgeTrackingProjectiles.attacks_only)
  return attacks_only_;
}
inline void CDOTAUserMsg_DodgeTrackingProjectiles::set_attacks_only(bool value) {
  set_has_attacks_only();
  attacks_only_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_DodgeTrackingProjectiles.attacks_only)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SpectatorPlayerClick

// required int32 entindex = 1;
inline bool CDOTAUserMsg_SpectatorPlayerClick::has_entindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::set_has_entindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::clear_has_entindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::clear_entindex() {
  entindex_ = 0;
  clear_has_entindex();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SpectatorPlayerClick::entindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SpectatorPlayerClick.entindex)
  return entindex_;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::set_entindex(::google::protobuf::int32 value) {
  set_has_entindex();
  entindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SpectatorPlayerClick.entindex)
}

// optional int32 order_type = 2;
inline bool CDOTAUserMsg_SpectatorPlayerClick::has_order_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::set_has_order_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::clear_has_order_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::clear_order_type() {
  order_type_ = 0;
  clear_has_order_type();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SpectatorPlayerClick::order_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SpectatorPlayerClick.order_type)
  return order_type_;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::set_order_type(::google::protobuf::int32 value) {
  set_has_order_type();
  order_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SpectatorPlayerClick.order_type)
}

// optional int32 target_index = 3;
inline bool CDOTAUserMsg_SpectatorPlayerClick::has_target_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::set_has_target_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::clear_has_target_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::clear_target_index() {
  target_index_ = 0;
  clear_has_target_index();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SpectatorPlayerClick::target_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SpectatorPlayerClick.target_index)
  return target_index_;
}
inline void CDOTAUserMsg_SpectatorPlayerClick::set_target_index(::google::protobuf::int32 value) {
  set_has_target_index();
  target_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SpectatorPlayerClick.target_index)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SpectatorPlayerUnitOrders

// optional int32 entindex = 1;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_entindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_has_entindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_has_entindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_entindex() {
  entindex_ = 0;
  clear_has_entindex();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::entindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.entindex)
  return entindex_;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_entindex(::google::protobuf::int32 value) {
  set_has_entindex();
  entindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.entindex)
}

// optional int32 order_type = 2;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_order_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_has_order_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_has_order_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_order_type() {
  order_type_ = 0;
  clear_has_order_type();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::order_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.order_type)
  return order_type_;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_order_type(::google::protobuf::int32 value) {
  set_has_order_type();
  order_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.order_type)
}

// repeated int32 units = 3;
inline int CDOTAUserMsg_SpectatorPlayerUnitOrders::units_size() const {
  return units_.size();
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_units() {
  units_.Clear();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::units(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.units)
  return units_.Get(index);
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_units(int index, ::google::protobuf::int32 value) {
  units_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.units)
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::add_units(::google::protobuf::int32 value) {
  units_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.units)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CDOTAUserMsg_SpectatorPlayerUnitOrders::units() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.units)
  return units_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CDOTAUserMsg_SpectatorPlayerUnitOrders::mutable_units() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.units)
  return &units_;
}

// optional int32 target_index = 4;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_target_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_has_target_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_has_target_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_target_index() {
  target_index_ = 0;
  clear_has_target_index();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::target_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.target_index)
  return target_index_;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_target_index(::google::protobuf::int32 value) {
  set_has_target_index();
  target_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.target_index)
}

// optional int32 ability_index = 5;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_ability_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_has_ability_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_has_ability_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_ability_index() {
  ability_index_ = 0;
  clear_has_ability_index();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::ability_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.ability_index)
  return ability_index_;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_ability_index(::google::protobuf::int32 value) {
  set_has_ability_index();
  ability_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.ability_index)
}

// optional .proto.dota.CMsgVector position = 6;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_position() {
  if (position_ != NULL) position_->::proto::dota::CMsgVector::Clear();
  clear_has_position();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_SpectatorPlayerUnitOrders::position() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.position)
  return position_ != NULL ? *position_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_SpectatorPlayerUnitOrders::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.position)
  return position_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_SpectatorPlayerUnitOrders::release_position() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.position)
  clear_has_position();
  ::proto::dota::CMsgVector* temp = position_;
  position_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_allocated_position(::proto::dota::CMsgVector* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.position)
}

// optional bool queue = 7;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_queue() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_has_queue() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_has_queue() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_queue() {
  queue_ = false;
  clear_has_queue();
}
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::queue() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.queue)
  return queue_;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_queue(bool value) {
  set_has_queue();
  queue_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.queue)
}

// optional int32 sequence_number = 8;
inline bool CDOTAUserMsg_SpectatorPlayerUnitOrders::has_sequence_number() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_has_sequence_number() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_has_sequence_number() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::clear_sequence_number() {
  sequence_number_ = 0;
  clear_has_sequence_number();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SpectatorPlayerUnitOrders::sequence_number() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.sequence_number)
  return sequence_number_;
}
inline void CDOTAUserMsg_SpectatorPlayerUnitOrders::set_sequence_number(::google::protobuf::int32 value) {
  set_has_sequence_number();
  sequence_number_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SpectatorPlayerUnitOrders.sequence_number)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_NevermoreRequiem

// optional int32 entity_handle = 1;
inline bool CDOTAUserMsg_NevermoreRequiem::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_NevermoreRequiem::set_has_entity_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_NevermoreRequiem::clear_has_entity_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_NevermoreRequiem::clear_entity_handle() {
  entity_handle_ = 0;
  clear_has_entity_handle();
}
inline ::google::protobuf::int32 CDOTAUserMsg_NevermoreRequiem::entity_handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_NevermoreRequiem.entity_handle)
  return entity_handle_;
}
inline void CDOTAUserMsg_NevermoreRequiem::set_entity_handle(::google::protobuf::int32 value) {
  set_has_entity_handle();
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_NevermoreRequiem.entity_handle)
}

// optional int32 lines = 2;
inline bool CDOTAUserMsg_NevermoreRequiem::has_lines() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_NevermoreRequiem::set_has_lines() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_NevermoreRequiem::clear_has_lines() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_NevermoreRequiem::clear_lines() {
  lines_ = 0;
  clear_has_lines();
}
inline ::google::protobuf::int32 CDOTAUserMsg_NevermoreRequiem::lines() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_NevermoreRequiem.lines)
  return lines_;
}
inline void CDOTAUserMsg_NevermoreRequiem::set_lines(::google::protobuf::int32 value) {
  set_has_lines();
  lines_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_NevermoreRequiem.lines)
}

// optional .proto.dota.CMsgVector origin = 3;
inline bool CDOTAUserMsg_NevermoreRequiem::has_origin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_NevermoreRequiem::set_has_origin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_NevermoreRequiem::clear_has_origin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_NevermoreRequiem::clear_origin() {
  if (origin_ != NULL) origin_->::proto::dota::CMsgVector::Clear();
  clear_has_origin();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_NevermoreRequiem::origin() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_NevermoreRequiem.origin)
  return origin_ != NULL ? *origin_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_NevermoreRequiem::mutable_origin() {
  set_has_origin();
  if (origin_ == NULL) {
    origin_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_NevermoreRequiem.origin)
  return origin_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_NevermoreRequiem::release_origin() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_NevermoreRequiem.origin)
  clear_has_origin();
  ::proto::dota::CMsgVector* temp = origin_;
  origin_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_NevermoreRequiem::set_allocated_origin(::proto::dota::CMsgVector* origin) {
  delete origin_;
  origin_ = origin;
  if (origin) {
    set_has_origin();
  } else {
    clear_has_origin();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_NevermoreRequiem.origin)
}

// optional bool reverse = 4;
inline bool CDOTAUserMsg_NevermoreRequiem::has_reverse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_NevermoreRequiem::set_has_reverse() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_NevermoreRequiem::clear_has_reverse() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_NevermoreRequiem::clear_reverse() {
  reverse_ = false;
  clear_has_reverse();
}
inline bool CDOTAUserMsg_NevermoreRequiem::reverse() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_NevermoreRequiem.reverse)
  return reverse_;
}
inline void CDOTAUserMsg_NevermoreRequiem::set_reverse(bool value) {
  set_has_reverse();
  reverse_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_NevermoreRequiem.reverse)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_InvalidCommand

// optional string message = 1;
inline bool CDOTAUserMsg_InvalidCommand::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_InvalidCommand::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_InvalidCommand::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_InvalidCommand::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CDOTAUserMsg_InvalidCommand::message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_InvalidCommand.message)
  return message_.GetNoArena();
}
inline void CDOTAUserMsg_InvalidCommand::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_InvalidCommand.message)
}
#if LANG_CXX11
inline void CDOTAUserMsg_InvalidCommand::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_InvalidCommand.message)
}
#endif
inline void CDOTAUserMsg_InvalidCommand::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_InvalidCommand.message)
}
inline void CDOTAUserMsg_InvalidCommand::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_InvalidCommand.message)
}
inline ::std::string* CDOTAUserMsg_InvalidCommand::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_InvalidCommand.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_InvalidCommand::release_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_InvalidCommand.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_InvalidCommand::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_InvalidCommand.message)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_HudError

// optional int32 order_id = 1;
inline bool CDOTAUserMsg_HudError::has_order_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_HudError::set_has_order_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_HudError::clear_has_order_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_HudError::clear_order_id() {
  order_id_ = 0;
  clear_has_order_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_HudError::order_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_HudError.order_id)
  return order_id_;
}
inline void CDOTAUserMsg_HudError::set_order_id(::google::protobuf::int32 value) {
  set_has_order_id();
  order_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_HudError.order_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SharedCooldown

// optional int32 entindex = 1;
inline bool CDOTAUserMsg_SharedCooldown::has_entindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_SharedCooldown::set_has_entindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_SharedCooldown::clear_has_entindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_SharedCooldown::clear_entindex() {
  entindex_ = 0;
  clear_has_entindex();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SharedCooldown::entindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SharedCooldown.entindex)
  return entindex_;
}
inline void CDOTAUserMsg_SharedCooldown::set_entindex(::google::protobuf::int32 value) {
  set_has_entindex();
  entindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SharedCooldown.entindex)
}

// optional string name = 2;
inline bool CDOTAUserMsg_SharedCooldown::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SharedCooldown::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SharedCooldown::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SharedCooldown::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CDOTAUserMsg_SharedCooldown::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SharedCooldown.name)
  return name_.GetNoArena();
}
inline void CDOTAUserMsg_SharedCooldown::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SharedCooldown.name)
}
#if LANG_CXX11
inline void CDOTAUserMsg_SharedCooldown::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_SharedCooldown.name)
}
#endif
inline void CDOTAUserMsg_SharedCooldown::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_SharedCooldown.name)
}
inline void CDOTAUserMsg_SharedCooldown::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_SharedCooldown.name)
}
inline ::std::string* CDOTAUserMsg_SharedCooldown::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_SharedCooldown.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_SharedCooldown::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_SharedCooldown.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_SharedCooldown::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_SharedCooldown.name)
}

// optional float cooldown = 3;
inline bool CDOTAUserMsg_SharedCooldown::has_cooldown() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_SharedCooldown::set_has_cooldown() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_SharedCooldown::clear_has_cooldown() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_SharedCooldown::clear_cooldown() {
  cooldown_ = 0;
  clear_has_cooldown();
}
inline float CDOTAUserMsg_SharedCooldown::cooldown() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SharedCooldown.cooldown)
  return cooldown_;
}
inline void CDOTAUserMsg_SharedCooldown::set_cooldown(float value) {
  set_has_cooldown();
  cooldown_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SharedCooldown.cooldown)
}

// optional int32 name_index = 4;
inline bool CDOTAUserMsg_SharedCooldown::has_name_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_SharedCooldown::set_has_name_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_SharedCooldown::clear_has_name_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_SharedCooldown::clear_name_index() {
  name_index_ = 0;
  clear_has_name_index();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SharedCooldown::name_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SharedCooldown.name_index)
  return name_index_;
}
inline void CDOTAUserMsg_SharedCooldown::set_name_index(::google::protobuf::int32 value) {
  set_has_name_index();
  name_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SharedCooldown.name_index)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SetNextAutobuyItem

// optional string name = 1;
inline bool CDOTAUserMsg_SetNextAutobuyItem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SetNextAutobuyItem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SetNextAutobuyItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SetNextAutobuyItem::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CDOTAUserMsg_SetNextAutobuyItem::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SetNextAutobuyItem.name)
  return name_.GetNoArena();
}
inline void CDOTAUserMsg_SetNextAutobuyItem::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SetNextAutobuyItem.name)
}
#if LANG_CXX11
inline void CDOTAUserMsg_SetNextAutobuyItem::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_SetNextAutobuyItem.name)
}
#endif
inline void CDOTAUserMsg_SetNextAutobuyItem::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_SetNextAutobuyItem.name)
}
inline void CDOTAUserMsg_SetNextAutobuyItem::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_SetNextAutobuyItem.name)
}
inline ::std::string* CDOTAUserMsg_SetNextAutobuyItem::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_SetNextAutobuyItem.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_SetNextAutobuyItem::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_SetNextAutobuyItem.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_SetNextAutobuyItem::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_SetNextAutobuyItem.name)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_HalloweenDrops

// repeated uint32 item_defs = 1;
inline int CDOTAUserMsg_HalloweenDrops::item_defs_size() const {
  return item_defs_.size();
}
inline void CDOTAUserMsg_HalloweenDrops::clear_item_defs() {
  item_defs_.Clear();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_HalloweenDrops::item_defs(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_HalloweenDrops.item_defs)
  return item_defs_.Get(index);
}
inline void CDOTAUserMsg_HalloweenDrops::set_item_defs(int index, ::google::protobuf::uint32 value) {
  item_defs_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_HalloweenDrops.item_defs)
}
inline void CDOTAUserMsg_HalloweenDrops::add_item_defs(::google::protobuf::uint32 value) {
  item_defs_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_HalloweenDrops.item_defs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CDOTAUserMsg_HalloweenDrops::item_defs() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_HalloweenDrops.item_defs)
  return item_defs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CDOTAUserMsg_HalloweenDrops::mutable_item_defs() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_HalloweenDrops.item_defs)
  return &item_defs_;
}

// repeated uint32 player_ids = 2;
inline int CDOTAUserMsg_HalloweenDrops::player_ids_size() const {
  return player_ids_.size();
}
inline void CDOTAUserMsg_HalloweenDrops::clear_player_ids() {
  player_ids_.Clear();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_HalloweenDrops::player_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_HalloweenDrops.player_ids)
  return player_ids_.Get(index);
}
inline void CDOTAUserMsg_HalloweenDrops::set_player_ids(int index, ::google::protobuf::uint32 value) {
  player_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_HalloweenDrops.player_ids)
}
inline void CDOTAUserMsg_HalloweenDrops::add_player_ids(::google::protobuf::uint32 value) {
  player_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_HalloweenDrops.player_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CDOTAUserMsg_HalloweenDrops::player_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_HalloweenDrops.player_ids)
  return player_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CDOTAUserMsg_HalloweenDrops::mutable_player_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_HalloweenDrops.player_ids)
  return &player_ids_;
}

// optional uint32 prize_list = 3;
inline bool CDOTAUserMsg_HalloweenDrops::has_prize_list() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_HalloweenDrops::set_has_prize_list() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_HalloweenDrops::clear_has_prize_list() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_HalloweenDrops::clear_prize_list() {
  prize_list_ = 0u;
  clear_has_prize_list();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_HalloweenDrops::prize_list() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_HalloweenDrops.prize_list)
  return prize_list_;
}
inline void CDOTAUserMsg_HalloweenDrops::set_prize_list(::google::protobuf::uint32 value) {
  set_has_prize_list();
  prize_list_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_HalloweenDrops.prize_list)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_PredictionResult_Prediction

// optional uint32 item_def = 1;
inline bool CDOTAUserMsg_PredictionResult_Prediction::has_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_has_item_def() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_PredictionResult_Prediction::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.item_def)
  return item_def_;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.item_def)
}

// optional uint32 num_correct = 2;
inline bool CDOTAUserMsg_PredictionResult_Prediction::has_num_correct() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_has_num_correct() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_has_num_correct() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_num_correct() {
  num_correct_ = 0u;
  clear_has_num_correct();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_PredictionResult_Prediction::num_correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.num_correct)
  return num_correct_;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_num_correct(::google::protobuf::uint32 value) {
  set_has_num_correct();
  num_correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.num_correct)
}

// optional uint32 num_fails = 3;
inline bool CDOTAUserMsg_PredictionResult_Prediction::has_num_fails() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_has_num_fails() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_has_num_fails() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_num_fails() {
  num_fails_ = 0u;
  clear_has_num_fails();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_PredictionResult_Prediction::num_fails() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.num_fails)
  return num_fails_;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_num_fails(::google::protobuf::uint32 value) {
  set_has_num_fails();
  num_fails_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.num_fails)
}

// optional .proto.dota.CDOTAUserMsg_PredictionResult.Prediction.EResult result = 4 [default = k_eResult_ItemGranted];
inline bool CDOTAUserMsg_PredictionResult_Prediction::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction_EResult CDOTAUserMsg_PredictionResult_Prediction::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.result)
  return static_cast< ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction_EResult >(result_);
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_result(::proto::dota::CDOTAUserMsg_PredictionResult_Prediction_EResult value) {
  assert(::proto::dota::CDOTAUserMsg_PredictionResult_Prediction_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.result)
}

// repeated uint32 granted_item_defs = 6;
inline int CDOTAUserMsg_PredictionResult_Prediction::granted_item_defs_size() const {
  return granted_item_defs_.size();
}
inline void CDOTAUserMsg_PredictionResult_Prediction::clear_granted_item_defs() {
  granted_item_defs_.Clear();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_PredictionResult_Prediction::granted_item_defs(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.granted_item_defs)
  return granted_item_defs_.Get(index);
}
inline void CDOTAUserMsg_PredictionResult_Prediction::set_granted_item_defs(int index, ::google::protobuf::uint32 value) {
  granted_item_defs_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.granted_item_defs)
}
inline void CDOTAUserMsg_PredictionResult_Prediction::add_granted_item_defs(::google::protobuf::uint32 value) {
  granted_item_defs_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.granted_item_defs)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CDOTAUserMsg_PredictionResult_Prediction::granted_item_defs() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.granted_item_defs)
  return granted_item_defs_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CDOTAUserMsg_PredictionResult_Prediction::mutable_granted_item_defs() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_PredictionResult.Prediction.granted_item_defs)
  return &granted_item_defs_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_PredictionResult

// optional uint32 account_id = 1;
inline bool CDOTAUserMsg_PredictionResult::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_PredictionResult::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_PredictionResult::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_PredictionResult::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_PredictionResult::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_PredictionResult.account_id)
  return account_id_;
}
inline void CDOTAUserMsg_PredictionResult::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_PredictionResult.account_id)
}

// optional uint64 match_id = 2;
inline bool CDOTAUserMsg_PredictionResult::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_PredictionResult::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_PredictionResult::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_PredictionResult::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CDOTAUserMsg_PredictionResult::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_PredictionResult.match_id)
  return match_id_;
}
inline void CDOTAUserMsg_PredictionResult::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_PredictionResult.match_id)
}

// optional bool correct = 3;
inline bool CDOTAUserMsg_PredictionResult::has_correct() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_PredictionResult::set_has_correct() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_PredictionResult::clear_has_correct() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_PredictionResult::clear_correct() {
  correct_ = false;
  clear_has_correct();
}
inline bool CDOTAUserMsg_PredictionResult::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_PredictionResult.correct)
  return correct_;
}
inline void CDOTAUserMsg_PredictionResult::set_correct(bool value) {
  set_has_correct();
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_PredictionResult.correct)
}

// repeated .proto.dota.CDOTAUserMsg_PredictionResult.Prediction predictions = 4;
inline int CDOTAUserMsg_PredictionResult::predictions_size() const {
  return predictions_.size();
}
inline void CDOTAUserMsg_PredictionResult::clear_predictions() {
  predictions_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction& CDOTAUserMsg_PredictionResult::predictions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_PredictionResult.predictions)
  return predictions_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction* CDOTAUserMsg_PredictionResult::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_PredictionResult.predictions)
  return predictions_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction* CDOTAUserMsg_PredictionResult::add_predictions() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_PredictionResult.predictions)
  return predictions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction >*
CDOTAUserMsg_PredictionResult::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_PredictionResult.predictions)
  return &predictions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction >&
CDOTAUserMsg_PredictionResult::predictions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_PredictionResult.predictions)
  return predictions_;
}

// -------------------------------------------------------------------

// CDOTAResponseQuerySerialized_Fact

// required int32 key = 1;
inline bool CDOTAResponseQuerySerialized_Fact::has_key() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAResponseQuerySerialized_Fact::set_has_key() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAResponseQuerySerialized_Fact::clear_has_key() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAResponseQuerySerialized_Fact::clear_key() {
  key_ = 0;
  clear_has_key();
}
inline ::google::protobuf::int32 CDOTAResponseQuerySerialized_Fact::key() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAResponseQuerySerialized.Fact.key)
  return key_;
}
inline void CDOTAResponseQuerySerialized_Fact::set_key(::google::protobuf::int32 value) {
  set_has_key();
  key_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAResponseQuerySerialized.Fact.key)
}

// required .proto.dota.CDOTAResponseQuerySerialized.Fact.ValueType valtype = 2 [default = NUMERIC];
inline bool CDOTAResponseQuerySerialized_Fact::has_valtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAResponseQuerySerialized_Fact::set_has_valtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAResponseQuerySerialized_Fact::clear_has_valtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAResponseQuerySerialized_Fact::clear_valtype() {
  valtype_ = 1;
  clear_has_valtype();
}
inline ::proto::dota::CDOTAResponseQuerySerialized_Fact_ValueType CDOTAResponseQuerySerialized_Fact::valtype() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAResponseQuerySerialized.Fact.valtype)
  return static_cast< ::proto::dota::CDOTAResponseQuerySerialized_Fact_ValueType >(valtype_);
}
inline void CDOTAResponseQuerySerialized_Fact::set_valtype(::proto::dota::CDOTAResponseQuerySerialized_Fact_ValueType value) {
  assert(::proto::dota::CDOTAResponseQuerySerialized_Fact_ValueType_IsValid(value));
  set_has_valtype();
  valtype_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAResponseQuerySerialized.Fact.valtype)
}

// optional float val_numeric = 3;
inline bool CDOTAResponseQuerySerialized_Fact::has_val_numeric() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAResponseQuerySerialized_Fact::set_has_val_numeric() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAResponseQuerySerialized_Fact::clear_has_val_numeric() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAResponseQuerySerialized_Fact::clear_val_numeric() {
  val_numeric_ = 0;
  clear_has_val_numeric();
}
inline float CDOTAResponseQuerySerialized_Fact::val_numeric() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAResponseQuerySerialized.Fact.val_numeric)
  return val_numeric_;
}
inline void CDOTAResponseQuerySerialized_Fact::set_val_numeric(float value) {
  set_has_val_numeric();
  val_numeric_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAResponseQuerySerialized.Fact.val_numeric)
}

// optional string val_string = 4;
inline bool CDOTAResponseQuerySerialized_Fact::has_val_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAResponseQuerySerialized_Fact::set_has_val_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAResponseQuerySerialized_Fact::clear_has_val_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAResponseQuerySerialized_Fact::clear_val_string() {
  val_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_val_string();
}
inline const ::std::string& CDOTAResponseQuerySerialized_Fact::val_string() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAResponseQuerySerialized.Fact.val_string)
  return val_string_.GetNoArena();
}
inline void CDOTAResponseQuerySerialized_Fact::set_val_string(const ::std::string& value) {
  set_has_val_string();
  val_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAResponseQuerySerialized.Fact.val_string)
}
#if LANG_CXX11
inline void CDOTAResponseQuerySerialized_Fact::set_val_string(::std::string&& value) {
  set_has_val_string();
  val_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAResponseQuerySerialized.Fact.val_string)
}
#endif
inline void CDOTAResponseQuerySerialized_Fact::set_val_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_val_string();
  val_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAResponseQuerySerialized.Fact.val_string)
}
inline void CDOTAResponseQuerySerialized_Fact::set_val_string(const char* value, size_t size) {
  set_has_val_string();
  val_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAResponseQuerySerialized.Fact.val_string)
}
inline ::std::string* CDOTAResponseQuerySerialized_Fact::mutable_val_string() {
  set_has_val_string();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAResponseQuerySerialized.Fact.val_string)
  return val_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAResponseQuerySerialized_Fact::release_val_string() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAResponseQuerySerialized.Fact.val_string)
  clear_has_val_string();
  return val_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAResponseQuerySerialized_Fact::set_allocated_val_string(::std::string* val_string) {
  if (val_string != NULL) {
    set_has_val_string();
  } else {
    clear_has_val_string();
  }
  val_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val_string);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAResponseQuerySerialized.Fact.val_string)
}

// -------------------------------------------------------------------

// CDOTAResponseQuerySerialized

// repeated .proto.dota.CDOTAResponseQuerySerialized.Fact facts = 1;
inline int CDOTAResponseQuerySerialized::facts_size() const {
  return facts_.size();
}
inline void CDOTAResponseQuerySerialized::clear_facts() {
  facts_.Clear();
}
inline const ::proto::dota::CDOTAResponseQuerySerialized_Fact& CDOTAResponseQuerySerialized::facts(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAResponseQuerySerialized.facts)
  return facts_.Get(index);
}
inline ::proto::dota::CDOTAResponseQuerySerialized_Fact* CDOTAResponseQuerySerialized::mutable_facts(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAResponseQuerySerialized.facts)
  return facts_.Mutable(index);
}
inline ::proto::dota::CDOTAResponseQuerySerialized_Fact* CDOTAResponseQuerySerialized::add_facts() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAResponseQuerySerialized.facts)
  return facts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAResponseQuerySerialized_Fact >*
CDOTAResponseQuerySerialized::mutable_facts() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAResponseQuerySerialized.facts)
  return &facts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAResponseQuerySerialized_Fact >&
CDOTAResponseQuerySerialized::facts() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAResponseQuerySerialized.facts)
  return facts_;
}

// -------------------------------------------------------------------

// CDOTASpeechMatchOnClient

// optional int32 concept = 1;
inline bool CDOTASpeechMatchOnClient::has_concept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTASpeechMatchOnClient::set_has_concept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTASpeechMatchOnClient::clear_has_concept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTASpeechMatchOnClient::clear_concept() {
  concept_ = 0;
  clear_has_concept();
}
inline ::google::protobuf::int32 CDOTASpeechMatchOnClient::concept() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTASpeechMatchOnClient.concept)
  return concept_;
}
inline void CDOTASpeechMatchOnClient::set_concept(::google::protobuf::int32 value) {
  set_has_concept();
  concept_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTASpeechMatchOnClient.concept)
}

// optional int32 recipient_type = 2;
inline bool CDOTASpeechMatchOnClient::has_recipient_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTASpeechMatchOnClient::set_has_recipient_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTASpeechMatchOnClient::clear_has_recipient_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTASpeechMatchOnClient::clear_recipient_type() {
  recipient_type_ = 0;
  clear_has_recipient_type();
}
inline ::google::protobuf::int32 CDOTASpeechMatchOnClient::recipient_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTASpeechMatchOnClient.recipient_type)
  return recipient_type_;
}
inline void CDOTASpeechMatchOnClient::set_recipient_type(::google::protobuf::int32 value) {
  set_has_recipient_type();
  recipient_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTASpeechMatchOnClient.recipient_type)
}

// optional .proto.dota.CDOTAResponseQuerySerialized responsequery = 3;
inline bool CDOTASpeechMatchOnClient::has_responsequery() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTASpeechMatchOnClient::set_has_responsequery() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTASpeechMatchOnClient::clear_has_responsequery() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTASpeechMatchOnClient::clear_responsequery() {
  if (responsequery_ != NULL) responsequery_->::proto::dota::CDOTAResponseQuerySerialized::Clear();
  clear_has_responsequery();
}
inline const ::proto::dota::CDOTAResponseQuerySerialized& CDOTASpeechMatchOnClient::responsequery() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTASpeechMatchOnClient.responsequery)
  return responsequery_ != NULL ? *responsequery_
                         : *::proto::dota::CDOTAResponseQuerySerialized::internal_default_instance();
}
inline ::proto::dota::CDOTAResponseQuerySerialized* CDOTASpeechMatchOnClient::mutable_responsequery() {
  set_has_responsequery();
  if (responsequery_ == NULL) {
    responsequery_ = new ::proto::dota::CDOTAResponseQuerySerialized;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTASpeechMatchOnClient.responsequery)
  return responsequery_;
}
inline ::proto::dota::CDOTAResponseQuerySerialized* CDOTASpeechMatchOnClient::release_responsequery() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTASpeechMatchOnClient.responsequery)
  clear_has_responsequery();
  ::proto::dota::CDOTAResponseQuerySerialized* temp = responsequery_;
  responsequery_ = NULL;
  return temp;
}
inline void CDOTASpeechMatchOnClient::set_allocated_responsequery(::proto::dota::CDOTAResponseQuerySerialized* responsequery) {
  delete responsequery_;
  responsequery_ = responsequery;
  if (responsequery) {
    set_has_responsequery();
  } else {
    clear_has_responsequery();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTASpeechMatchOnClient.responsequery)
}

// optional sfixed32 randomseed = 4 [default = 0];
inline bool CDOTASpeechMatchOnClient::has_randomseed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTASpeechMatchOnClient::set_has_randomseed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTASpeechMatchOnClient::clear_has_randomseed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTASpeechMatchOnClient::clear_randomseed() {
  randomseed_ = 0;
  clear_has_randomseed();
}
inline ::google::protobuf::int32 CDOTASpeechMatchOnClient::randomseed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTASpeechMatchOnClient.randomseed)
  return randomseed_;
}
inline void CDOTASpeechMatchOnClient::set_randomseed(::google::protobuf::int32 value) {
  set_has_randomseed();
  randomseed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTASpeechMatchOnClient.randomseed)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_Speech

// optional int32 concept = 1;
inline bool CDOTAUserMsg_UnitEvent_Speech::has_concept() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_has_concept() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_has_concept() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_concept() {
  concept_ = 0;
  clear_has_concept();
}
inline ::google::protobuf::int32 CDOTAUserMsg_UnitEvent_Speech::concept() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.Speech.concept)
  return concept_;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_concept(::google::protobuf::int32 value) {
  set_has_concept();
  concept_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.Speech.concept)
}

// optional string response = 2;
inline bool CDOTAUserMsg_UnitEvent_Speech::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_response() {
  response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_response();
}
inline const ::std::string& CDOTAUserMsg_UnitEvent_Speech::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.Speech.response)
  return response_.GetNoArena();
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_response(const ::std::string& value) {
  set_has_response();
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.Speech.response)
}
#if LANG_CXX11
inline void CDOTAUserMsg_UnitEvent_Speech::set_response(::std::string&& value) {
  set_has_response();
  response_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_UnitEvent.Speech.response)
}
#endif
inline void CDOTAUserMsg_UnitEvent_Speech::set_response(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_response();
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_UnitEvent.Speech.response)
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_response(const char* value, size_t size) {
  set_has_response();
  response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_UnitEvent.Speech.response)
}
inline ::std::string* CDOTAUserMsg_UnitEvent_Speech::mutable_response() {
  set_has_response();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_UnitEvent.Speech.response)
  return response_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_UnitEvent_Speech::release_response() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_UnitEvent.Speech.response)
  clear_has_response();
  return response_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_allocated_response(::std::string* response) {
  if (response != NULL) {
    set_has_response();
  } else {
    clear_has_response();
  }
  response_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_UnitEvent.Speech.response)
}

// optional int32 recipient_type = 3;
inline bool CDOTAUserMsg_UnitEvent_Speech::has_recipient_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_has_recipient_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_has_recipient_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_recipient_type() {
  recipient_type_ = 0;
  clear_has_recipient_type();
}
inline ::google::protobuf::int32 CDOTAUserMsg_UnitEvent_Speech::recipient_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.Speech.recipient_type)
  return recipient_type_;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_recipient_type(::google::protobuf::int32 value) {
  set_has_recipient_type();
  recipient_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.Speech.recipient_type)
}

// optional int32 level = 4;
inline bool CDOTAUserMsg_UnitEvent_Speech::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 CDOTAUserMsg_UnitEvent_Speech::level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.Speech.level)
  return level_;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.Speech.level)
}

// optional bool muteable = 5 [default = false];
inline bool CDOTAUserMsg_UnitEvent_Speech::has_muteable() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_has_muteable() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_has_muteable() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_UnitEvent_Speech::clear_muteable() {
  muteable_ = false;
  clear_has_muteable();
}
inline bool CDOTAUserMsg_UnitEvent_Speech::muteable() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.Speech.muteable)
  return muteable_;
}
inline void CDOTAUserMsg_UnitEvent_Speech::set_muteable(bool value) {
  set_has_muteable();
  muteable_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.Speech.muteable)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_SpeechMute

// optional float delay = 1 [default = 0.5];
inline bool CDOTAUserMsg_UnitEvent_SpeechMute::has_delay() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_SpeechMute::set_has_delay() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent_SpeechMute::clear_has_delay() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent_SpeechMute::clear_delay() {
  delay_ = 0.5f;
  clear_has_delay();
}
inline float CDOTAUserMsg_UnitEvent_SpeechMute::delay() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.SpeechMute.delay)
  return delay_;
}
inline void CDOTAUserMsg_UnitEvent_SpeechMute::set_delay(float value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.SpeechMute.delay)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_AddGesture

// optional int32 activity = 1;
inline bool CDOTAUserMsg_UnitEvent_AddGesture::has_activity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_has_activity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_has_activity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_activity() {
  activity_ = 0;
  clear_has_activity();
}
inline ::google::protobuf::int32 CDOTAUserMsg_UnitEvent_AddGesture::activity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.AddGesture.activity)
  return activity_;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_activity(::google::protobuf::int32 value) {
  set_has_activity();
  activity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.AddGesture.activity)
}

// optional int32 slot = 2;
inline bool CDOTAUserMsg_UnitEvent_AddGesture::has_slot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_has_slot() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_has_slot() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_slot() {
  slot_ = 0;
  clear_has_slot();
}
inline ::google::protobuf::int32 CDOTAUserMsg_UnitEvent_AddGesture::slot() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.AddGesture.slot)
  return slot_;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_slot(::google::protobuf::int32 value) {
  set_has_slot();
  slot_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.AddGesture.slot)
}

// optional float fade_in = 3 [default = 0];
inline bool CDOTAUserMsg_UnitEvent_AddGesture::has_fade_in() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_has_fade_in() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_has_fade_in() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_fade_in() {
  fade_in_ = 0;
  clear_has_fade_in();
}
inline float CDOTAUserMsg_UnitEvent_AddGesture::fade_in() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.AddGesture.fade_in)
  return fade_in_;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_fade_in(float value) {
  set_has_fade_in();
  fade_in_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.AddGesture.fade_in)
}

// optional float fade_out = 4 [default = 0.1];
inline bool CDOTAUserMsg_UnitEvent_AddGesture::has_fade_out() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_has_fade_out() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_has_fade_out() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_fade_out() {
  fade_out_ = 0.1f;
  clear_has_fade_out();
}
inline float CDOTAUserMsg_UnitEvent_AddGesture::fade_out() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.AddGesture.fade_out)
  return fade_out_;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_fade_out(float value) {
  set_has_fade_out();
  fade_out_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.AddGesture.fade_out)
}

// optional float playback_rate = 5 [default = 1];
inline bool CDOTAUserMsg_UnitEvent_AddGesture::has_playback_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_has_playback_rate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_has_playback_rate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::clear_playback_rate() {
  playback_rate_ = 1;
  clear_has_playback_rate();
}
inline float CDOTAUserMsg_UnitEvent_AddGesture::playback_rate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.AddGesture.playback_rate)
  return playback_rate_;
}
inline void CDOTAUserMsg_UnitEvent_AddGesture::set_playback_rate(float value) {
  set_has_playback_rate();
  playback_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.AddGesture.playback_rate)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_RemoveGesture

// optional int32 activity = 1;
inline bool CDOTAUserMsg_UnitEvent_RemoveGesture::has_activity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_RemoveGesture::set_has_activity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent_RemoveGesture::clear_has_activity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent_RemoveGesture::clear_activity() {
  activity_ = 0;
  clear_has_activity();
}
inline ::google::protobuf::int32 CDOTAUserMsg_UnitEvent_RemoveGesture::activity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.RemoveGesture.activity)
  return activity_;
}
inline void CDOTAUserMsg_UnitEvent_RemoveGesture::set_activity(::google::protobuf::int32 value) {
  set_has_activity();
  activity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.RemoveGesture.activity)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_BloodImpact

// optional int32 scale = 1;
inline bool CDOTAUserMsg_UnitEvent_BloodImpact::has_scale() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::set_has_scale() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::clear_has_scale() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::clear_scale() {
  scale_ = 0;
  clear_has_scale();
}
inline ::google::protobuf::int32 CDOTAUserMsg_UnitEvent_BloodImpact::scale() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.BloodImpact.scale)
  return scale_;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::set_scale(::google::protobuf::int32 value) {
  set_has_scale();
  scale_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.BloodImpact.scale)
}

// optional int32 x_normal = 2;
inline bool CDOTAUserMsg_UnitEvent_BloodImpact::has_x_normal() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::set_has_x_normal() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::clear_has_x_normal() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::clear_x_normal() {
  x_normal_ = 0;
  clear_has_x_normal();
}
inline ::google::protobuf::int32 CDOTAUserMsg_UnitEvent_BloodImpact::x_normal() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.BloodImpact.x_normal)
  return x_normal_;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::set_x_normal(::google::protobuf::int32 value) {
  set_has_x_normal();
  x_normal_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.BloodImpact.x_normal)
}

// optional int32 y_normal = 3;
inline bool CDOTAUserMsg_UnitEvent_BloodImpact::has_y_normal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::set_has_y_normal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::clear_has_y_normal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::clear_y_normal() {
  y_normal_ = 0;
  clear_has_y_normal();
}
inline ::google::protobuf::int32 CDOTAUserMsg_UnitEvent_BloodImpact::y_normal() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.BloodImpact.y_normal)
  return y_normal_;
}
inline void CDOTAUserMsg_UnitEvent_BloodImpact::set_y_normal(::google::protobuf::int32 value) {
  set_has_y_normal();
  y_normal_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.BloodImpact.y_normal)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent_FadeGesture

// optional int32 activity = 1;
inline bool CDOTAUserMsg_UnitEvent_FadeGesture::has_activity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_UnitEvent_FadeGesture::set_has_activity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent_FadeGesture::clear_has_activity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent_FadeGesture::clear_activity() {
  activity_ = 0;
  clear_has_activity();
}
inline ::google::protobuf::int32 CDOTAUserMsg_UnitEvent_FadeGesture::activity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.FadeGesture.activity)
  return activity_;
}
inline void CDOTAUserMsg_UnitEvent_FadeGesture::set_activity(::google::protobuf::int32 value) {
  set_has_activity();
  activity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.FadeGesture.activity)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UnitEvent

// required .proto.dota.EDotaEntityMessages msg_type = 1 [default = DOTA_UNIT_SPEECH];
inline bool CDOTAUserMsg_UnitEvent::has_msg_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CDOTAUserMsg_UnitEvent::set_has_msg_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CDOTAUserMsg_UnitEvent::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CDOTAUserMsg_UnitEvent::clear_msg_type() {
  msg_type_ = 0;
  clear_has_msg_type();
}
inline ::proto::dota::EDotaEntityMessages CDOTAUserMsg_UnitEvent::msg_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.msg_type)
  return static_cast< ::proto::dota::EDotaEntityMessages >(msg_type_);
}
inline void CDOTAUserMsg_UnitEvent::set_msg_type(::proto::dota::EDotaEntityMessages value) {
  assert(::proto::dota::EDotaEntityMessages_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.msg_type)
}

// required int32 entity_index = 2;
inline bool CDOTAUserMsg_UnitEvent::has_entity_index() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CDOTAUserMsg_UnitEvent::set_has_entity_index() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CDOTAUserMsg_UnitEvent::clear_has_entity_index() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CDOTAUserMsg_UnitEvent::clear_entity_index() {
  entity_index_ = 0;
  clear_has_entity_index();
}
inline ::google::protobuf::int32 CDOTAUserMsg_UnitEvent::entity_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.entity_index)
  return entity_index_;
}
inline void CDOTAUserMsg_UnitEvent::set_entity_index(::google::protobuf::int32 value) {
  set_has_entity_index();
  entity_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UnitEvent.entity_index)
}

// optional .proto.dota.CDOTAUserMsg_UnitEvent.Speech speech = 3;
inline bool CDOTAUserMsg_UnitEvent::has_speech() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_UnitEvent::set_has_speech() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent::clear_has_speech() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_UnitEvent::clear_speech() {
  if (speech_ != NULL) speech_->::proto::dota::CDOTAUserMsg_UnitEvent_Speech::Clear();
  clear_has_speech();
}
inline const ::proto::dota::CDOTAUserMsg_UnitEvent_Speech& CDOTAUserMsg_UnitEvent::speech() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.speech)
  return speech_ != NULL ? *speech_
                         : *::proto::dota::CDOTAUserMsg_UnitEvent_Speech::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_UnitEvent_Speech* CDOTAUserMsg_UnitEvent::mutable_speech() {
  set_has_speech();
  if (speech_ == NULL) {
    speech_ = new ::proto::dota::CDOTAUserMsg_UnitEvent_Speech;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_UnitEvent.speech)
  return speech_;
}
inline ::proto::dota::CDOTAUserMsg_UnitEvent_Speech* CDOTAUserMsg_UnitEvent::release_speech() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_UnitEvent.speech)
  clear_has_speech();
  ::proto::dota::CDOTAUserMsg_UnitEvent_Speech* temp = speech_;
  speech_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_speech(::proto::dota::CDOTAUserMsg_UnitEvent_Speech* speech) {
  delete speech_;
  speech_ = speech;
  if (speech) {
    set_has_speech();
  } else {
    clear_has_speech();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_UnitEvent.speech)
}

// optional .proto.dota.CDOTAUserMsg_UnitEvent.SpeechMute speech_mute = 4;
inline bool CDOTAUserMsg_UnitEvent::has_speech_mute() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_UnitEvent::set_has_speech_mute() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_UnitEvent::clear_has_speech_mute() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_UnitEvent::clear_speech_mute() {
  if (speech_mute_ != NULL) speech_mute_->::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute::Clear();
  clear_has_speech_mute();
}
inline const ::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute& CDOTAUserMsg_UnitEvent::speech_mute() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.speech_mute)
  return speech_mute_ != NULL ? *speech_mute_
                         : *::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute* CDOTAUserMsg_UnitEvent::mutable_speech_mute() {
  set_has_speech_mute();
  if (speech_mute_ == NULL) {
    speech_mute_ = new ::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_UnitEvent.speech_mute)
  return speech_mute_;
}
inline ::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute* CDOTAUserMsg_UnitEvent::release_speech_mute() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_UnitEvent.speech_mute)
  clear_has_speech_mute();
  ::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute* temp = speech_mute_;
  speech_mute_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_speech_mute(::proto::dota::CDOTAUserMsg_UnitEvent_SpeechMute* speech_mute) {
  delete speech_mute_;
  speech_mute_ = speech_mute;
  if (speech_mute) {
    set_has_speech_mute();
  } else {
    clear_has_speech_mute();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_UnitEvent.speech_mute)
}

// optional .proto.dota.CDOTAUserMsg_UnitEvent.AddGesture add_gesture = 5;
inline bool CDOTAUserMsg_UnitEvent::has_add_gesture() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_UnitEvent::set_has_add_gesture() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_UnitEvent::clear_has_add_gesture() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_UnitEvent::clear_add_gesture() {
  if (add_gesture_ != NULL) add_gesture_->::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture::Clear();
  clear_has_add_gesture();
}
inline const ::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture& CDOTAUserMsg_UnitEvent::add_gesture() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.add_gesture)
  return add_gesture_ != NULL ? *add_gesture_
                         : *::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture* CDOTAUserMsg_UnitEvent::mutable_add_gesture() {
  set_has_add_gesture();
  if (add_gesture_ == NULL) {
    add_gesture_ = new ::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_UnitEvent.add_gesture)
  return add_gesture_;
}
inline ::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture* CDOTAUserMsg_UnitEvent::release_add_gesture() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_UnitEvent.add_gesture)
  clear_has_add_gesture();
  ::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture* temp = add_gesture_;
  add_gesture_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_add_gesture(::proto::dota::CDOTAUserMsg_UnitEvent_AddGesture* add_gesture) {
  delete add_gesture_;
  add_gesture_ = add_gesture;
  if (add_gesture) {
    set_has_add_gesture();
  } else {
    clear_has_add_gesture();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_UnitEvent.add_gesture)
}

// optional .proto.dota.CDOTAUserMsg_UnitEvent.RemoveGesture remove_gesture = 6;
inline bool CDOTAUserMsg_UnitEvent::has_remove_gesture() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_UnitEvent::set_has_remove_gesture() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_UnitEvent::clear_has_remove_gesture() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_UnitEvent::clear_remove_gesture() {
  if (remove_gesture_ != NULL) remove_gesture_->::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture::Clear();
  clear_has_remove_gesture();
}
inline const ::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture& CDOTAUserMsg_UnitEvent::remove_gesture() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.remove_gesture)
  return remove_gesture_ != NULL ? *remove_gesture_
                         : *::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture* CDOTAUserMsg_UnitEvent::mutable_remove_gesture() {
  set_has_remove_gesture();
  if (remove_gesture_ == NULL) {
    remove_gesture_ = new ::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_UnitEvent.remove_gesture)
  return remove_gesture_;
}
inline ::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture* CDOTAUserMsg_UnitEvent::release_remove_gesture() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_UnitEvent.remove_gesture)
  clear_has_remove_gesture();
  ::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture* temp = remove_gesture_;
  remove_gesture_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_remove_gesture(::proto::dota::CDOTAUserMsg_UnitEvent_RemoveGesture* remove_gesture) {
  delete remove_gesture_;
  remove_gesture_ = remove_gesture;
  if (remove_gesture) {
    set_has_remove_gesture();
  } else {
    clear_has_remove_gesture();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_UnitEvent.remove_gesture)
}

// optional .proto.dota.CDOTAUserMsg_UnitEvent.BloodImpact blood_impact = 7;
inline bool CDOTAUserMsg_UnitEvent::has_blood_impact() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_UnitEvent::set_has_blood_impact() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_UnitEvent::clear_has_blood_impact() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_UnitEvent::clear_blood_impact() {
  if (blood_impact_ != NULL) blood_impact_->::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact::Clear();
  clear_has_blood_impact();
}
inline const ::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact& CDOTAUserMsg_UnitEvent::blood_impact() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.blood_impact)
  return blood_impact_ != NULL ? *blood_impact_
                         : *::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact* CDOTAUserMsg_UnitEvent::mutable_blood_impact() {
  set_has_blood_impact();
  if (blood_impact_ == NULL) {
    blood_impact_ = new ::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_UnitEvent.blood_impact)
  return blood_impact_;
}
inline ::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact* CDOTAUserMsg_UnitEvent::release_blood_impact() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_UnitEvent.blood_impact)
  clear_has_blood_impact();
  ::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact* temp = blood_impact_;
  blood_impact_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_blood_impact(::proto::dota::CDOTAUserMsg_UnitEvent_BloodImpact* blood_impact) {
  delete blood_impact_;
  blood_impact_ = blood_impact;
  if (blood_impact) {
    set_has_blood_impact();
  } else {
    clear_has_blood_impact();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_UnitEvent.blood_impact)
}

// optional .proto.dota.CDOTAUserMsg_UnitEvent.FadeGesture fade_gesture = 8;
inline bool CDOTAUserMsg_UnitEvent::has_fade_gesture() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_UnitEvent::set_has_fade_gesture() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_UnitEvent::clear_has_fade_gesture() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_UnitEvent::clear_fade_gesture() {
  if (fade_gesture_ != NULL) fade_gesture_->::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture::Clear();
  clear_has_fade_gesture();
}
inline const ::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture& CDOTAUserMsg_UnitEvent::fade_gesture() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.fade_gesture)
  return fade_gesture_ != NULL ? *fade_gesture_
                         : *::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture* CDOTAUserMsg_UnitEvent::mutable_fade_gesture() {
  set_has_fade_gesture();
  if (fade_gesture_ == NULL) {
    fade_gesture_ = new ::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_UnitEvent.fade_gesture)
  return fade_gesture_;
}
inline ::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture* CDOTAUserMsg_UnitEvent::release_fade_gesture() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_UnitEvent.fade_gesture)
  clear_has_fade_gesture();
  ::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture* temp = fade_gesture_;
  fade_gesture_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_fade_gesture(::proto::dota::CDOTAUserMsg_UnitEvent_FadeGesture* fade_gesture) {
  delete fade_gesture_;
  fade_gesture_ = fade_gesture;
  if (fade_gesture) {
    set_has_fade_gesture();
  } else {
    clear_has_fade_gesture();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_UnitEvent.fade_gesture)
}

// optional .proto.dota.CDOTASpeechMatchOnClient speech_match_on_client = 9;
inline bool CDOTAUserMsg_UnitEvent::has_speech_match_on_client() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAUserMsg_UnitEvent::set_has_speech_match_on_client() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDOTAUserMsg_UnitEvent::clear_has_speech_match_on_client() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDOTAUserMsg_UnitEvent::clear_speech_match_on_client() {
  if (speech_match_on_client_ != NULL) speech_match_on_client_->::proto::dota::CDOTASpeechMatchOnClient::Clear();
  clear_has_speech_match_on_client();
}
inline const ::proto::dota::CDOTASpeechMatchOnClient& CDOTAUserMsg_UnitEvent::speech_match_on_client() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UnitEvent.speech_match_on_client)
  return speech_match_on_client_ != NULL ? *speech_match_on_client_
                         : *::proto::dota::CDOTASpeechMatchOnClient::internal_default_instance();
}
inline ::proto::dota::CDOTASpeechMatchOnClient* CDOTAUserMsg_UnitEvent::mutable_speech_match_on_client() {
  set_has_speech_match_on_client();
  if (speech_match_on_client_ == NULL) {
    speech_match_on_client_ = new ::proto::dota::CDOTASpeechMatchOnClient;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_UnitEvent.speech_match_on_client)
  return speech_match_on_client_;
}
inline ::proto::dota::CDOTASpeechMatchOnClient* CDOTAUserMsg_UnitEvent::release_speech_match_on_client() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_UnitEvent.speech_match_on_client)
  clear_has_speech_match_on_client();
  ::proto::dota::CDOTASpeechMatchOnClient* temp = speech_match_on_client_;
  speech_match_on_client_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_UnitEvent::set_allocated_speech_match_on_client(::proto::dota::CDOTASpeechMatchOnClient* speech_match_on_client) {
  delete speech_match_on_client_;
  speech_match_on_client_ = speech_match_on_client;
  if (speech_match_on_client) {
    set_has_speech_match_on_client();
  } else {
    clear_has_speech_match_on_client();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_UnitEvent.speech_match_on_client)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ItemPurchased

// optional int32 item_index = 1;
inline bool CDOTAUserMsg_ItemPurchased::has_item_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ItemPurchased::set_has_item_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ItemPurchased::clear_has_item_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ItemPurchased::clear_item_index() {
  item_index_ = 0;
  clear_has_item_index();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ItemPurchased::item_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ItemPurchased.item_index)
  return item_index_;
}
inline void CDOTAUserMsg_ItemPurchased::set_item_index(::google::protobuf::int32 value) {
  set_has_item_index();
  item_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ItemPurchased.item_index)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ItemFound

// optional int32 player = 1;
inline bool CDOTAUserMsg_ItemFound::has_player() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ItemFound::set_has_player() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ItemFound::clear_has_player() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ItemFound::clear_player() {
  player_ = 0;
  clear_has_player();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ItemFound::player() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ItemFound.player)
  return player_;
}
inline void CDOTAUserMsg_ItemFound::set_player(::google::protobuf::int32 value) {
  set_has_player();
  player_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ItemFound.player)
}

// optional int32 quality = 2;
inline bool CDOTAUserMsg_ItemFound::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ItemFound::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ItemFound::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ItemFound::clear_quality() {
  quality_ = 0;
  clear_has_quality();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ItemFound::quality() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ItemFound.quality)
  return quality_;
}
inline void CDOTAUserMsg_ItemFound::set_quality(::google::protobuf::int32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ItemFound.quality)
}

// optional int32 rarity = 3;
inline bool CDOTAUserMsg_ItemFound::has_rarity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ItemFound::set_has_rarity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ItemFound::clear_has_rarity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ItemFound::clear_rarity() {
  rarity_ = 0;
  clear_has_rarity();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ItemFound::rarity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ItemFound.rarity)
  return rarity_;
}
inline void CDOTAUserMsg_ItemFound::set_rarity(::google::protobuf::int32 value) {
  set_has_rarity();
  rarity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ItemFound.rarity)
}

// optional int32 method = 4;
inline bool CDOTAUserMsg_ItemFound::has_method() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_ItemFound::set_has_method() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_ItemFound::clear_has_method() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_ItemFound::clear_method() {
  method_ = 0;
  clear_has_method();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ItemFound::method() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ItemFound.method)
  return method_;
}
inline void CDOTAUserMsg_ItemFound::set_method(::google::protobuf::int32 value) {
  set_has_method();
  method_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ItemFound.method)
}

// optional int32 itemdef = 5;
inline bool CDOTAUserMsg_ItemFound::has_itemdef() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_ItemFound::set_has_itemdef() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_ItemFound::clear_has_itemdef() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_ItemFound::clear_itemdef() {
  itemdef_ = 0;
  clear_has_itemdef();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ItemFound::itemdef() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ItemFound.itemdef)
  return itemdef_;
}
inline void CDOTAUserMsg_ItemFound::set_itemdef(::google::protobuf::int32 value) {
  set_has_itemdef();
  itemdef_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ItemFound.itemdef)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_ReleaseParticleIndex

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_CreateParticle

// optional fixed64 particle_name_index = 1;
inline bool CDOTAUserMsg_ParticleManager_CreateParticle::has_particle_name_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::set_has_particle_name_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::clear_has_particle_name_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::clear_particle_name_index() {
  particle_name_index_ = GOOGLE_ULONGLONG(0);
  clear_has_particle_name_index();
}
inline ::google::protobuf::uint64 CDOTAUserMsg_ParticleManager_CreateParticle::particle_name_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.CreateParticle.particle_name_index)
  return particle_name_index_;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::set_particle_name_index(::google::protobuf::uint64 value) {
  set_has_particle_name_index();
  particle_name_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.CreateParticle.particle_name_index)
}

// optional int32 attach_type = 2;
inline bool CDOTAUserMsg_ParticleManager_CreateParticle::has_attach_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::set_has_attach_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::clear_has_attach_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::clear_attach_type() {
  attach_type_ = 0;
  clear_has_attach_type();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_CreateParticle::attach_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.CreateParticle.attach_type)
  return attach_type_;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::set_attach_type(::google::protobuf::int32 value) {
  set_has_attach_type();
  attach_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.CreateParticle.attach_type)
}

// optional int32 entity_handle = 3;
inline bool CDOTAUserMsg_ParticleManager_CreateParticle::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::set_has_entity_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::clear_has_entity_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::clear_entity_handle() {
  entity_handle_ = 0;
  clear_has_entity_handle();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_CreateParticle::entity_handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.CreateParticle.entity_handle)
  return entity_handle_;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::set_entity_handle(::google::protobuf::int32 value) {
  set_has_entity_handle();
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.CreateParticle.entity_handle)
}

// optional int32 entity_handle_for_modifiers = 4;
inline bool CDOTAUserMsg_ParticleManager_CreateParticle::has_entity_handle_for_modifiers() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::set_has_entity_handle_for_modifiers() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::clear_has_entity_handle_for_modifiers() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::clear_entity_handle_for_modifiers() {
  entity_handle_for_modifiers_ = 0;
  clear_has_entity_handle_for_modifiers();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_CreateParticle::entity_handle_for_modifiers() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.CreateParticle.entity_handle_for_modifiers)
  return entity_handle_for_modifiers_;
}
inline void CDOTAUserMsg_ParticleManager_CreateParticle::set_entity_handle_for_modifiers(::google::protobuf::int32 value) {
  set_has_entity_handle_for_modifiers();
  entity_handle_for_modifiers_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.CreateParticle.entity_handle_for_modifiers)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_DestroyParticle

// optional bool destroy_immediately = 1;
inline bool CDOTAUserMsg_ParticleManager_DestroyParticle::has_destroy_immediately() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_DestroyParticle::set_has_destroy_immediately() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_DestroyParticle::clear_has_destroy_immediately() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_DestroyParticle::clear_destroy_immediately() {
  destroy_immediately_ = false;
  clear_has_destroy_immediately();
}
inline bool CDOTAUserMsg_ParticleManager_DestroyParticle::destroy_immediately() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticle.destroy_immediately)
  return destroy_immediately_;
}
inline void CDOTAUserMsg_ParticleManager_DestroyParticle::set_destroy_immediately(bool value) {
  set_has_destroy_immediately();
  destroy_immediately_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticle.destroy_immediately)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_DestroyParticleInvolving

// optional bool destroy_immediately = 1;
inline bool CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::has_destroy_immediately() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::set_has_destroy_immediately() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::clear_has_destroy_immediately() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::clear_destroy_immediately() {
  destroy_immediately_ = false;
  clear_has_destroy_immediately();
}
inline bool CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::destroy_immediately() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.destroy_immediately)
  return destroy_immediately_;
}
inline void CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::set_destroy_immediately(bool value) {
  set_has_destroy_immediately();
  destroy_immediately_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.destroy_immediately)
}

// optional int32 entity_handle = 3;
inline bool CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::set_has_entity_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::clear_has_entity_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::clear_entity_handle() {
  entity_handle_ = 0;
  clear_has_entity_handle();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::entity_handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.entity_handle)
  return entity_handle_;
}
inline void CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::set_entity_handle(::google::protobuf::int32 value) {
  set_has_entity_handle();
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving.entity_handle)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_UpdateParticle

// optional int32 control_point = 1;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticle::has_control_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticle::set_has_control_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticle::clear_has_control_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticle::clear_control_point() {
  control_point_ = 0;
  clear_has_control_point();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_UpdateParticle::control_point() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticle.control_point)
  return control_point_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticle::set_control_point(::google::protobuf::int32 value) {
  set_has_control_point();
  control_point_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticle.control_point)
}

// optional .proto.dota.CMsgVector position = 2;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticle::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticle::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticle::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticle::clear_position() {
  if (position_ != NULL) position_->::proto::dota::CMsgVector::Clear();
  clear_has_position();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_ParticleManager_UpdateParticle::position() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticle.position)
  return position_ != NULL ? *position_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticle::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticle.position)
  return position_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticle::release_position() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticle.position)
  clear_has_position();
  ::proto::dota::CMsgVector* temp = position_;
  position_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticle::set_allocated_position(::proto::dota::CMsgVector* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticle.position)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_UpdateParticleFwd

// optional int32 control_point = 1;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleFwd::has_control_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFwd::set_has_control_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFwd::clear_has_control_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFwd::clear_control_point() {
  control_point_ = 0;
  clear_has_control_point();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_UpdateParticleFwd::control_point() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.control_point)
  return control_point_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFwd::set_control_point(::google::protobuf::int32 value) {
  set_has_control_point();
  control_point_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.control_point)
}

// optional .proto.dota.CMsgVector forward = 2;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleFwd::has_forward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFwd::set_has_forward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFwd::clear_has_forward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFwd::clear_forward() {
  if (forward_ != NULL) forward_->::proto::dota::CMsgVector::Clear();
  clear_has_forward();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_ParticleManager_UpdateParticleFwd::forward() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.forward)
  return forward_ != NULL ? *forward_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleFwd::mutable_forward() {
  set_has_forward();
  if (forward_ == NULL) {
    forward_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.forward)
  return forward_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleFwd::release_forward() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.forward)
  clear_has_forward();
  ::proto::dota::CMsgVector* temp = forward_;
  forward_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFwd::set_allocated_forward(::proto::dota::CMsgVector* forward) {
  delete forward_;
  forward_ = forward;
  if (forward) {
    set_has_forward();
  } else {
    clear_has_forward();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFwd.forward)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_UpdateParticleOrient

// optional int32 control_point = 1;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleOrient::has_control_point() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::set_has_control_point() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::clear_has_control_point() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::clear_control_point() {
  control_point_ = 0;
  clear_has_control_point();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_UpdateParticleOrient::control_point() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.control_point)
  return control_point_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::set_control_point(::google::protobuf::int32 value) {
  set_has_control_point();
  control_point_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.control_point)
}

// optional .proto.dota.CMsgVector forward = 2;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleOrient::has_forward() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::set_has_forward() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::clear_has_forward() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::clear_forward() {
  if (forward_ != NULL) forward_->::proto::dota::CMsgVector::Clear();
  clear_has_forward();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_ParticleManager_UpdateParticleOrient::forward() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.forward)
  return forward_ != NULL ? *forward_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleOrient::mutable_forward() {
  set_has_forward();
  if (forward_ == NULL) {
    forward_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.forward)
  return forward_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleOrient::release_forward() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.forward)
  clear_has_forward();
  ::proto::dota::CMsgVector* temp = forward_;
  forward_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::set_allocated_forward(::proto::dota::CMsgVector* forward) {
  delete forward_;
  forward_ = forward;
  if (forward) {
    set_has_forward();
  } else {
    clear_has_forward();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.forward)
}

// optional .proto.dota.CMsgVector right = 3;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleOrient::has_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::set_has_right() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::clear_has_right() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::clear_right() {
  if (right_ != NULL) right_->::proto::dota::CMsgVector::Clear();
  clear_has_right();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_ParticleManager_UpdateParticleOrient::right() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.right)
  return right_ != NULL ? *right_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleOrient::mutable_right() {
  set_has_right();
  if (right_ == NULL) {
    right_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.right)
  return right_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleOrient::release_right() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.right)
  clear_has_right();
  ::proto::dota::CMsgVector* temp = right_;
  right_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::set_allocated_right(::proto::dota::CMsgVector* right) {
  delete right_;
  right_ = right;
  if (right) {
    set_has_right();
  } else {
    clear_has_right();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.right)
}

// optional .proto.dota.CMsgVector up = 4;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleOrient::has_up() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::set_has_up() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::clear_has_up() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::clear_up() {
  if (up_ != NULL) up_->::proto::dota::CMsgVector::Clear();
  clear_has_up();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_ParticleManager_UpdateParticleOrient::up() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.up)
  return up_ != NULL ? *up_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleOrient::mutable_up() {
  set_has_up();
  if (up_ == NULL) {
    up_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.up)
  return up_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleOrient::release_up() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.up)
  clear_has_up();
  ::proto::dota::CMsgVector* temp = up_;
  up_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOrient::set_allocated_up(::proto::dota::CMsgVector* up) {
  delete up_;
  up_ = up;
  if (up) {
    set_has_up();
  } else {
    clear_has_up();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient.up)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_UpdateParticleFallback

// optional int32 control_point = 1;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleFallback::has_control_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFallback::set_has_control_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFallback::clear_has_control_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFallback::clear_control_point() {
  control_point_ = 0;
  clear_has_control_point();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_UpdateParticleFallback::control_point() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.control_point)
  return control_point_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFallback::set_control_point(::google::protobuf::int32 value) {
  set_has_control_point();
  control_point_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.control_point)
}

// optional .proto.dota.CMsgVector position = 2;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleFallback::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFallback::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFallback::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFallback::clear_position() {
  if (position_ != NULL) position_->::proto::dota::CMsgVector::Clear();
  clear_has_position();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_ParticleManager_UpdateParticleFallback::position() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.position)
  return position_ != NULL ? *position_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleFallback::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.position)
  return position_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleFallback::release_position() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.position)
  clear_has_position();
  ::proto::dota::CMsgVector* temp = position_;
  position_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleFallback::set_allocated_position(::proto::dota::CMsgVector* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFallback.position)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_UpdateParticleOffset

// optional int32 control_point = 1;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleOffset::has_control_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOffset::set_has_control_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOffset::clear_has_control_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOffset::clear_control_point() {
  control_point_ = 0;
  clear_has_control_point();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_UpdateParticleOffset::control_point() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.control_point)
  return control_point_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOffset::set_control_point(::google::protobuf::int32 value) {
  set_has_control_point();
  control_point_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.control_point)
}

// optional .proto.dota.CMsgVector origin_offset = 2;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleOffset::has_origin_offset() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOffset::set_has_origin_offset() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOffset::clear_has_origin_offset() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOffset::clear_origin_offset() {
  if (origin_offset_ != NULL) origin_offset_->::proto::dota::CMsgVector::Clear();
  clear_has_origin_offset();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_ParticleManager_UpdateParticleOffset::origin_offset() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.origin_offset)
  return origin_offset_ != NULL ? *origin_offset_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleOffset::mutable_origin_offset() {
  set_has_origin_offset();
  if (origin_offset_ == NULL) {
    origin_offset_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.origin_offset)
  return origin_offset_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleOffset::release_origin_offset() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.origin_offset)
  clear_has_origin_offset();
  ::proto::dota::CMsgVector* temp = origin_offset_;
  origin_offset_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleOffset::set_allocated_origin_offset(::proto::dota::CMsgVector* origin_offset) {
  delete origin_offset_;
  origin_offset_ = origin_offset;
  if (origin_offset) {
    set_has_origin_offset();
  } else {
    clear_has_origin_offset();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOffset.origin_offset)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_UpdateParticleEnt

// optional int32 control_point = 1;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleEnt::has_control_point() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::set_has_control_point() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_has_control_point() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_control_point() {
  control_point_ = 0;
  clear_has_control_point();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_UpdateParticleEnt::control_point() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.control_point)
  return control_point_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::set_control_point(::google::protobuf::int32 value) {
  set_has_control_point();
  control_point_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.control_point)
}

// optional int32 entity_handle = 2;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleEnt::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::set_has_entity_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_has_entity_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_entity_handle() {
  entity_handle_ = 0;
  clear_has_entity_handle();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_UpdateParticleEnt::entity_handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.entity_handle)
  return entity_handle_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::set_entity_handle(::google::protobuf::int32 value) {
  set_has_entity_handle();
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.entity_handle)
}

// optional int32 attach_type = 3;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleEnt::has_attach_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::set_has_attach_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_has_attach_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_attach_type() {
  attach_type_ = 0;
  clear_has_attach_type();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_UpdateParticleEnt::attach_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.attach_type)
  return attach_type_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::set_attach_type(::google::protobuf::int32 value) {
  set_has_attach_type();
  attach_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.attach_type)
}

// optional int32 attachment = 4;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleEnt::has_attachment() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::set_has_attachment() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_has_attachment() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_attachment() {
  attachment_ = 0;
  clear_has_attachment();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_UpdateParticleEnt::attachment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.attachment)
  return attachment_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::set_attachment(::google::protobuf::int32 value) {
  set_has_attachment();
  attachment_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.attachment)
}

// optional .proto.dota.CMsgVector fallback_position = 5;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleEnt::has_fallback_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::set_has_fallback_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_has_fallback_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_fallback_position() {
  if (fallback_position_ != NULL) fallback_position_->::proto::dota::CMsgVector::Clear();
  clear_has_fallback_position();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_ParticleManager_UpdateParticleEnt::fallback_position() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.fallback_position)
  return fallback_position_ != NULL ? *fallback_position_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleEnt::mutable_fallback_position() {
  set_has_fallback_position();
  if (fallback_position_ == NULL) {
    fallback_position_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.fallback_position)
  return fallback_position_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateParticleEnt::release_fallback_position() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.fallback_position)
  clear_has_fallback_position();
  ::proto::dota::CMsgVector* temp = fallback_position_;
  fallback_position_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::set_allocated_fallback_position(::proto::dota::CMsgVector* fallback_position) {
  delete fallback_position_;
  fallback_position_ = fallback_position;
  if (fallback_position) {
    set_has_fallback_position();
  } else {
    clear_has_fallback_position();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.fallback_position)
}

// optional bool include_wearables = 6;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleEnt::has_include_wearables() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::set_has_include_wearables() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_has_include_wearables() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::clear_include_wearables() {
  include_wearables_ = false;
  clear_has_include_wearables();
}
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleEnt::include_wearables() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.include_wearables)
  return include_wearables_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleEnt::set_include_wearables(bool value) {
  set_has_include_wearables();
  include_wearables_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt.include_wearables)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen

// optional bool set_frozen = 1;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen::has_set_frozen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen::set_has_set_frozen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen::clear_has_set_frozen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen::clear_set_frozen() {
  set_frozen_ = false;
  clear_has_set_frozen();
}
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen::set_frozen() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.set_frozen)
  return set_frozen_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen::set_set_frozen(bool value) {
  set_has_set_frozen();
  set_frozen_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen.set_frozen)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw

// optional bool should_draw = 1;
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw::has_should_draw() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw::set_has_should_draw() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw::clear_has_should_draw() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw::clear_should_draw() {
  should_draw_ = false;
  clear_has_should_draw();
}
inline bool CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw::should_draw() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.should_draw)
  return should_draw_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw::set_should_draw(bool value) {
  set_has_should_draw();
  should_draw_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw.should_draw)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment

// optional int32 attachment_old = 1;
inline bool CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::has_attachment_old() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::set_has_attachment_old() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::clear_has_attachment_old() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::clear_attachment_old() {
  attachment_old_ = 0;
  clear_has_attachment_old();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::attachment_old() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.attachment_old)
  return attachment_old_;
}
inline void CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::set_attachment_old(::google::protobuf::int32 value) {
  set_has_attachment_old();
  attachment_old_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.attachment_old)
}

// optional int32 attachment_new = 2;
inline bool CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::has_attachment_new() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::set_has_attachment_new() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::clear_has_attachment_new() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::clear_attachment_new() {
  attachment_new_ = 0;
  clear_has_attachment_new();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::attachment_new() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.attachment_new)
  return attachment_new_;
}
inline void CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::set_attachment_new(::google::protobuf::int32 value) {
  set_has_attachment_new();
  attachment_new_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.attachment_new)
}

// optional int32 entity_handle = 3;
inline bool CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::set_has_entity_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::clear_has_entity_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::clear_entity_handle() {
  entity_handle_ = 0;
  clear_has_entity_handle();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::entity_handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.entity_handle)
  return entity_handle_;
}
inline void CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::set_entity_handle(::google::protobuf::int32 value) {
  set_has_entity_handle();
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment.entity_handle)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_UpdateEntityPosition

// optional int32 entity_handle = 1;
inline bool CDOTAUserMsg_ParticleManager_UpdateEntityPosition::has_entity_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateEntityPosition::set_has_entity_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateEntityPosition::clear_has_entity_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateEntityPosition::clear_entity_handle() {
  entity_handle_ = 0;
  clear_has_entity_handle();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_UpdateEntityPosition::entity_handle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.entity_handle)
  return entity_handle_;
}
inline void CDOTAUserMsg_ParticleManager_UpdateEntityPosition::set_entity_handle(::google::protobuf::int32 value) {
  set_has_entity_handle();
  entity_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.entity_handle)
}

// optional .proto.dota.CMsgVector position = 2;
inline bool CDOTAUserMsg_ParticleManager_UpdateEntityPosition::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_UpdateEntityPosition::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateEntityPosition::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_UpdateEntityPosition::clear_position() {
  if (position_ != NULL) position_->::proto::dota::CMsgVector::Clear();
  clear_has_position();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_ParticleManager_UpdateEntityPosition::position() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.position)
  return position_ != NULL ? *position_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateEntityPosition::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.position)
  return position_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ParticleManager_UpdateEntityPosition::release_position() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.position)
  clear_has_position();
  ::proto::dota::CMsgVector* temp = position_;
  position_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager_UpdateEntityPosition::set_allocated_position(::proto::dota::CMsgVector* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.UpdateEntityPosition.position)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_SetParticleFoWProperties

// optional int32 fow_control_point = 1;
inline bool CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::has_fow_control_point() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::set_has_fow_control_point() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::clear_has_fow_control_point() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::clear_fow_control_point() {
  fow_control_point_ = 0;
  clear_has_fow_control_point();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::fow_control_point() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleFoWProperties.fow_control_point)
  return fow_control_point_;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::set_fow_control_point(::google::protobuf::int32 value) {
  set_has_fow_control_point();
  fow_control_point_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleFoWProperties.fow_control_point)
}

// optional int32 fow_control_point2 = 2;
inline bool CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::has_fow_control_point2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::set_has_fow_control_point2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::clear_has_fow_control_point2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::clear_fow_control_point2() {
  fow_control_point2_ = 0;
  clear_has_fow_control_point2();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::fow_control_point2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleFoWProperties.fow_control_point2)
  return fow_control_point2_;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::set_fow_control_point2(::google::protobuf::int32 value) {
  set_has_fow_control_point2();
  fow_control_point2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleFoWProperties.fow_control_point2)
}

// optional float fow_radius = 3;
inline bool CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::has_fow_radius() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::set_has_fow_radius() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::clear_has_fow_radius() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::clear_fow_radius() {
  fow_radius_ = 0;
  clear_has_fow_radius();
}
inline float CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::fow_radius() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleFoWProperties.fow_radius)
  return fow_radius_;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::set_fow_radius(float value) {
  set_has_fow_radius();
  fow_radius_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleFoWProperties.fow_radius)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager_SetParticleText

// optional string text = 1;
inline bool CDOTAUserMsg_ParticleManager_SetParticleText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager_SetParticleText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CDOTAUserMsg_ParticleManager_SetParticleText::text() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleText.text)
  return text_.GetNoArena();
}
inline void CDOTAUserMsg_ParticleManager_SetParticleText::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleText.text)
}
#if LANG_CXX11
inline void CDOTAUserMsg_ParticleManager_SetParticleText::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleText.text)
}
#endif
inline void CDOTAUserMsg_ParticleManager_SetParticleText::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleText.text)
}
inline void CDOTAUserMsg_ParticleManager_SetParticleText::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleText.text)
}
inline ::std::string* CDOTAUserMsg_ParticleManager_SetParticleText::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_ParticleManager_SetParticleText::release_text() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleText.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_ParticleManager_SetParticleText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.SetParticleText.text)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ParticleManager

// required .proto.dota.DOTA_PARTICLE_MESSAGE type = 1 [default = DOTA_PARTICLE_MANAGER_EVENT_CREATE];
inline bool CDOTAUserMsg_ParticleManager::has_type() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_type() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_type() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CDOTAUserMsg_ParticleManager::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::proto::dota::DOTA_PARTICLE_MESSAGE CDOTAUserMsg_ParticleManager::type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.type)
  return static_cast< ::proto::dota::DOTA_PARTICLE_MESSAGE >(type_);
}
inline void CDOTAUserMsg_ParticleManager::set_type(::proto::dota::DOTA_PARTICLE_MESSAGE value) {
  assert(::proto::dota::DOTA_PARTICLE_MESSAGE_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.type)
}

// required uint32 index = 2;
inline bool CDOTAUserMsg_ParticleManager::has_index() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_index() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_index() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CDOTAUserMsg_ParticleManager::clear_index() {
  index_ = 0u;
  clear_has_index();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ParticleManager::index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.index)
  return index_;
}
inline void CDOTAUserMsg_ParticleManager::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ParticleManager.index)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.ReleaseParticleIndex release_particle_index = 3;
inline bool CDOTAUserMsg_ParticleManager::has_release_particle_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_release_particle_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_release_particle_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ParticleManager::clear_release_particle_index() {
  if (release_particle_index_ != NULL) release_particle_index_->::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex::Clear();
  clear_has_release_particle_index();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex& CDOTAUserMsg_ParticleManager::release_particle_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.release_particle_index)
  return release_particle_index_ != NULL ? *release_particle_index_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* CDOTAUserMsg_ParticleManager::mutable_release_particle_index() {
  set_has_release_particle_index();
  if (release_particle_index_ == NULL) {
    release_particle_index_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.release_particle_index)
  return release_particle_index_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* CDOTAUserMsg_ParticleManager::release_release_particle_index() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.release_particle_index)
  clear_has_release_particle_index();
  ::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* temp = release_particle_index_;
  release_particle_index_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_release_particle_index(::proto::dota::CDOTAUserMsg_ParticleManager_ReleaseParticleIndex* release_particle_index) {
  delete release_particle_index_;
  release_particle_index_ = release_particle_index;
  if (release_particle_index) {
    set_has_release_particle_index();
  } else {
    clear_has_release_particle_index();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.release_particle_index)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.CreateParticle create_particle = 4;
inline bool CDOTAUserMsg_ParticleManager::has_create_particle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_create_particle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_create_particle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ParticleManager::clear_create_particle() {
  if (create_particle_ != NULL) create_particle_->::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle::Clear();
  clear_has_create_particle();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle& CDOTAUserMsg_ParticleManager::create_particle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.create_particle)
  return create_particle_ != NULL ? *create_particle_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle* CDOTAUserMsg_ParticleManager::mutable_create_particle() {
  set_has_create_particle();
  if (create_particle_ == NULL) {
    create_particle_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.create_particle)
  return create_particle_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle* CDOTAUserMsg_ParticleManager::release_create_particle() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.create_particle)
  clear_has_create_particle();
  ::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle* temp = create_particle_;
  create_particle_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_create_particle(::proto::dota::CDOTAUserMsg_ParticleManager_CreateParticle* create_particle) {
  delete create_particle_;
  create_particle_ = create_particle;
  if (create_particle) {
    set_has_create_particle();
  } else {
    clear_has_create_particle();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.create_particle)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticle destroy_particle = 5;
inline bool CDOTAUserMsg_ParticleManager::has_destroy_particle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_destroy_particle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_destroy_particle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ParticleManager::clear_destroy_particle() {
  if (destroy_particle_ != NULL) destroy_particle_->::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle::Clear();
  clear_has_destroy_particle();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle& CDOTAUserMsg_ParticleManager::destroy_particle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.destroy_particle)
  return destroy_particle_ != NULL ? *destroy_particle_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle* CDOTAUserMsg_ParticleManager::mutable_destroy_particle() {
  set_has_destroy_particle();
  if (destroy_particle_ == NULL) {
    destroy_particle_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.destroy_particle)
  return destroy_particle_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle* CDOTAUserMsg_ParticleManager::release_destroy_particle() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.destroy_particle)
  clear_has_destroy_particle();
  ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle* temp = destroy_particle_;
  destroy_particle_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_destroy_particle(::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticle* destroy_particle) {
  delete destroy_particle_;
  destroy_particle_ = destroy_particle;
  if (destroy_particle) {
    set_has_destroy_particle();
  } else {
    clear_has_destroy_particle();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.destroy_particle)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.DestroyParticleInvolving destroy_particle_involving = 6;
inline bool CDOTAUserMsg_ParticleManager::has_destroy_particle_involving() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_destroy_particle_involving() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_destroy_particle_involving() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_ParticleManager::clear_destroy_particle_involving() {
  if (destroy_particle_involving_ != NULL) destroy_particle_involving_->::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::Clear();
  clear_has_destroy_particle_involving();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving& CDOTAUserMsg_ParticleManager::destroy_particle_involving() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.destroy_particle_involving)
  return destroy_particle_involving_ != NULL ? *destroy_particle_involving_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* CDOTAUserMsg_ParticleManager::mutable_destroy_particle_involving() {
  set_has_destroy_particle_involving();
  if (destroy_particle_involving_ == NULL) {
    destroy_particle_involving_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.destroy_particle_involving)
  return destroy_particle_involving_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* CDOTAUserMsg_ParticleManager::release_destroy_particle_involving() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.destroy_particle_involving)
  clear_has_destroy_particle_involving();
  ::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* temp = destroy_particle_involving_;
  destroy_particle_involving_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_destroy_particle_involving(::proto::dota::CDOTAUserMsg_ParticleManager_DestroyParticleInvolving* destroy_particle_involving) {
  delete destroy_particle_involving_;
  destroy_particle_involving_ = destroy_particle_involving;
  if (destroy_particle_involving) {
    set_has_destroy_particle_involving();
  } else {
    clear_has_destroy_particle_involving();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.destroy_particle_involving)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticle update_particle = 7;
inline bool CDOTAUserMsg_ParticleManager::has_update_particle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_update_particle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_update_particle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_ParticleManager::clear_update_particle() {
  if (update_particle_ != NULL) update_particle_->::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle::Clear();
  clear_has_update_particle();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle& CDOTAUserMsg_ParticleManager::update_particle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.update_particle)
  return update_particle_ != NULL ? *update_particle_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle* CDOTAUserMsg_ParticleManager::mutable_update_particle() {
  set_has_update_particle();
  if (update_particle_ == NULL) {
    update_particle_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.update_particle)
  return update_particle_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle* CDOTAUserMsg_ParticleManager::release_update_particle() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.update_particle)
  clear_has_update_particle();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle* temp = update_particle_;
  update_particle_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_update_particle(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticle* update_particle) {
  delete update_particle_;
  update_particle_ = update_particle;
  if (update_particle) {
    set_has_update_particle();
  } else {
    clear_has_update_particle();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.update_particle)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFwd update_particle_fwd = 8;
inline bool CDOTAUserMsg_ParticleManager::has_update_particle_fwd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_update_particle_fwd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_update_particle_fwd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_ParticleManager::clear_update_particle_fwd() {
  if (update_particle_fwd_ != NULL) update_particle_fwd_->::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd::Clear();
  clear_has_update_particle_fwd();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd& CDOTAUserMsg_ParticleManager::update_particle_fwd() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_fwd)
  return update_particle_fwd_ != NULL ? *update_particle_fwd_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd* CDOTAUserMsg_ParticleManager::mutable_update_particle_fwd() {
  set_has_update_particle_fwd();
  if (update_particle_fwd_ == NULL) {
    update_particle_fwd_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_fwd)
  return update_particle_fwd_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd* CDOTAUserMsg_ParticleManager::release_update_particle_fwd() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_fwd)
  clear_has_update_particle_fwd();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd* temp = update_particle_fwd_;
  update_particle_fwd_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_update_particle_fwd(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFwd* update_particle_fwd) {
  delete update_particle_fwd_;
  update_particle_fwd_ = update_particle_fwd;
  if (update_particle_fwd) {
    set_has_update_particle_fwd();
  } else {
    clear_has_update_particle_fwd();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_fwd)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOrient update_particle_orient = 9;
inline bool CDOTAUserMsg_ParticleManager::has_update_particle_orient() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_update_particle_orient() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_update_particle_orient() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDOTAUserMsg_ParticleManager::clear_update_particle_orient() {
  if (update_particle_orient_ != NULL) update_particle_orient_->::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient::Clear();
  clear_has_update_particle_orient();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient& CDOTAUserMsg_ParticleManager::update_particle_orient() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_orient)
  return update_particle_orient_ != NULL ? *update_particle_orient_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient* CDOTAUserMsg_ParticleManager::mutable_update_particle_orient() {
  set_has_update_particle_orient();
  if (update_particle_orient_ == NULL) {
    update_particle_orient_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_orient)
  return update_particle_orient_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient* CDOTAUserMsg_ParticleManager::release_update_particle_orient() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_orient)
  clear_has_update_particle_orient();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient* temp = update_particle_orient_;
  update_particle_orient_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_update_particle_orient(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOrient* update_particle_orient) {
  delete update_particle_orient_;
  update_particle_orient_ = update_particle_orient;
  if (update_particle_orient) {
    set_has_update_particle_orient();
  } else {
    clear_has_update_particle_orient();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_orient)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleFallback update_particle_fallback = 10;
inline bool CDOTAUserMsg_ParticleManager::has_update_particle_fallback() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_update_particle_fallback() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_update_particle_fallback() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CDOTAUserMsg_ParticleManager::clear_update_particle_fallback() {
  if (update_particle_fallback_ != NULL) update_particle_fallback_->::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback::Clear();
  clear_has_update_particle_fallback();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback& CDOTAUserMsg_ParticleManager::update_particle_fallback() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_fallback)
  return update_particle_fallback_ != NULL ? *update_particle_fallback_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback* CDOTAUserMsg_ParticleManager::mutable_update_particle_fallback() {
  set_has_update_particle_fallback();
  if (update_particle_fallback_ == NULL) {
    update_particle_fallback_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_fallback)
  return update_particle_fallback_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback* CDOTAUserMsg_ParticleManager::release_update_particle_fallback() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_fallback)
  clear_has_update_particle_fallback();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback* temp = update_particle_fallback_;
  update_particle_fallback_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_update_particle_fallback(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleFallback* update_particle_fallback) {
  delete update_particle_fallback_;
  update_particle_fallback_ = update_particle_fallback;
  if (update_particle_fallback) {
    set_has_update_particle_fallback();
  } else {
    clear_has_update_particle_fallback();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_fallback)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleOffset update_particle_offset = 11;
inline bool CDOTAUserMsg_ParticleManager::has_update_particle_offset() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_update_particle_offset() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_update_particle_offset() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CDOTAUserMsg_ParticleManager::clear_update_particle_offset() {
  if (update_particle_offset_ != NULL) update_particle_offset_->::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset::Clear();
  clear_has_update_particle_offset();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset& CDOTAUserMsg_ParticleManager::update_particle_offset() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_offset)
  return update_particle_offset_ != NULL ? *update_particle_offset_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset* CDOTAUserMsg_ParticleManager::mutable_update_particle_offset() {
  set_has_update_particle_offset();
  if (update_particle_offset_ == NULL) {
    update_particle_offset_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_offset)
  return update_particle_offset_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset* CDOTAUserMsg_ParticleManager::release_update_particle_offset() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_offset)
  clear_has_update_particle_offset();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset* temp = update_particle_offset_;
  update_particle_offset_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_update_particle_offset(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleOffset* update_particle_offset) {
  delete update_particle_offset_;
  update_particle_offset_ = update_particle_offset;
  if (update_particle_offset) {
    set_has_update_particle_offset();
  } else {
    clear_has_update_particle_offset();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_offset)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleEnt update_particle_ent = 12;
inline bool CDOTAUserMsg_ParticleManager::has_update_particle_ent() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_update_particle_ent() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_update_particle_ent() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CDOTAUserMsg_ParticleManager::clear_update_particle_ent() {
  if (update_particle_ent_ != NULL) update_particle_ent_->::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt::Clear();
  clear_has_update_particle_ent();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt& CDOTAUserMsg_ParticleManager::update_particle_ent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_ent)
  return update_particle_ent_ != NULL ? *update_particle_ent_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt* CDOTAUserMsg_ParticleManager::mutable_update_particle_ent() {
  set_has_update_particle_ent();
  if (update_particle_ent_ == NULL) {
    update_particle_ent_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_ent)
  return update_particle_ent_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt* CDOTAUserMsg_ParticleManager::release_update_particle_ent() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_ent)
  clear_has_update_particle_ent();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt* temp = update_particle_ent_;
  update_particle_ent_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_update_particle_ent(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleEnt* update_particle_ent) {
  delete update_particle_ent_;
  update_particle_ent_ = update_particle_ent;
  if (update_particle_ent) {
    set_has_update_particle_ent();
  } else {
    clear_has_update_particle_ent();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_ent)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleShouldDraw update_particle_should_draw = 14;
inline bool CDOTAUserMsg_ParticleManager::has_update_particle_should_draw() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_update_particle_should_draw() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_update_particle_should_draw() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CDOTAUserMsg_ParticleManager::clear_update_particle_should_draw() {
  if (update_particle_should_draw_ != NULL) update_particle_should_draw_->::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw::Clear();
  clear_has_update_particle_should_draw();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw& CDOTAUserMsg_ParticleManager::update_particle_should_draw() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_should_draw)
  return update_particle_should_draw_ != NULL ? *update_particle_should_draw_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* CDOTAUserMsg_ParticleManager::mutable_update_particle_should_draw() {
  set_has_update_particle_should_draw();
  if (update_particle_should_draw_ == NULL) {
    update_particle_should_draw_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_should_draw)
  return update_particle_should_draw_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* CDOTAUserMsg_ParticleManager::release_update_particle_should_draw() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_should_draw)
  clear_has_update_particle_should_draw();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* temp = update_particle_should_draw_;
  update_particle_should_draw_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_update_particle_should_draw(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleShouldDraw* update_particle_should_draw) {
  delete update_particle_should_draw_;
  update_particle_should_draw_ = update_particle_should_draw;
  if (update_particle_should_draw) {
    set_has_update_particle_should_draw();
  } else {
    clear_has_update_particle_should_draw();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_should_draw)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateParticleSetFrozen update_particle_set_frozen = 15;
inline bool CDOTAUserMsg_ParticleManager::has_update_particle_set_frozen() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_update_particle_set_frozen() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_update_particle_set_frozen() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CDOTAUserMsg_ParticleManager::clear_update_particle_set_frozen() {
  if (update_particle_set_frozen_ != NULL) update_particle_set_frozen_->::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen::Clear();
  clear_has_update_particle_set_frozen();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen& CDOTAUserMsg_ParticleManager::update_particle_set_frozen() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_set_frozen)
  return update_particle_set_frozen_ != NULL ? *update_particle_set_frozen_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* CDOTAUserMsg_ParticleManager::mutable_update_particle_set_frozen() {
  set_has_update_particle_set_frozen();
  if (update_particle_set_frozen_ == NULL) {
    update_particle_set_frozen_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_set_frozen)
  return update_particle_set_frozen_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* CDOTAUserMsg_ParticleManager::release_update_particle_set_frozen() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_set_frozen)
  clear_has_update_particle_set_frozen();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* temp = update_particle_set_frozen_;
  update_particle_set_frozen_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_update_particle_set_frozen(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateParticleSetFrozen* update_particle_set_frozen) {
  delete update_particle_set_frozen_;
  update_particle_set_frozen_ = update_particle_set_frozen;
  if (update_particle_set_frozen) {
    set_has_update_particle_set_frozen();
  } else {
    clear_has_update_particle_set_frozen();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.update_particle_set_frozen)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.ChangeControlPointAttachment change_control_point_attachment = 16;
inline bool CDOTAUserMsg_ParticleManager::has_change_control_point_attachment() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_change_control_point_attachment() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_change_control_point_attachment() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CDOTAUserMsg_ParticleManager::clear_change_control_point_attachment() {
  if (change_control_point_attachment_ != NULL) change_control_point_attachment_->::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::Clear();
  clear_has_change_control_point_attachment();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment& CDOTAUserMsg_ParticleManager::change_control_point_attachment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.change_control_point_attachment)
  return change_control_point_attachment_ != NULL ? *change_control_point_attachment_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* CDOTAUserMsg_ParticleManager::mutable_change_control_point_attachment() {
  set_has_change_control_point_attachment();
  if (change_control_point_attachment_ == NULL) {
    change_control_point_attachment_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.change_control_point_attachment)
  return change_control_point_attachment_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* CDOTAUserMsg_ParticleManager::release_change_control_point_attachment() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.change_control_point_attachment)
  clear_has_change_control_point_attachment();
  ::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* temp = change_control_point_attachment_;
  change_control_point_attachment_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_change_control_point_attachment(::proto::dota::CDOTAUserMsg_ParticleManager_ChangeControlPointAttachment* change_control_point_attachment) {
  delete change_control_point_attachment_;
  change_control_point_attachment_ = change_control_point_attachment;
  if (change_control_point_attachment) {
    set_has_change_control_point_attachment();
  } else {
    clear_has_change_control_point_attachment();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.change_control_point_attachment)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.UpdateEntityPosition update_entity_position = 17;
inline bool CDOTAUserMsg_ParticleManager::has_update_entity_position() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_update_entity_position() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_update_entity_position() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CDOTAUserMsg_ParticleManager::clear_update_entity_position() {
  if (update_entity_position_ != NULL) update_entity_position_->::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition::Clear();
  clear_has_update_entity_position();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition& CDOTAUserMsg_ParticleManager::update_entity_position() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.update_entity_position)
  return update_entity_position_ != NULL ? *update_entity_position_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition* CDOTAUserMsg_ParticleManager::mutable_update_entity_position() {
  set_has_update_entity_position();
  if (update_entity_position_ == NULL) {
    update_entity_position_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.update_entity_position)
  return update_entity_position_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition* CDOTAUserMsg_ParticleManager::release_update_entity_position() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.update_entity_position)
  clear_has_update_entity_position();
  ::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition* temp = update_entity_position_;
  update_entity_position_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_update_entity_position(::proto::dota::CDOTAUserMsg_ParticleManager_UpdateEntityPosition* update_entity_position) {
  delete update_entity_position_;
  update_entity_position_ = update_entity_position;
  if (update_entity_position) {
    set_has_update_entity_position();
  } else {
    clear_has_update_entity_position();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.update_entity_position)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.SetParticleFoWProperties set_particle_fow_properties = 18;
inline bool CDOTAUserMsg_ParticleManager::has_set_particle_fow_properties() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_set_particle_fow_properties() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_set_particle_fow_properties() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CDOTAUserMsg_ParticleManager::clear_set_particle_fow_properties() {
  if (set_particle_fow_properties_ != NULL) set_particle_fow_properties_->::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::Clear();
  clear_has_set_particle_fow_properties();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties& CDOTAUserMsg_ParticleManager::set_particle_fow_properties() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.set_particle_fow_properties)
  return set_particle_fow_properties_ != NULL ? *set_particle_fow_properties_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* CDOTAUserMsg_ParticleManager::mutable_set_particle_fow_properties() {
  set_has_set_particle_fow_properties();
  if (set_particle_fow_properties_ == NULL) {
    set_particle_fow_properties_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.set_particle_fow_properties)
  return set_particle_fow_properties_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* CDOTAUserMsg_ParticleManager::release_set_particle_fow_properties() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.set_particle_fow_properties)
  clear_has_set_particle_fow_properties();
  ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* temp = set_particle_fow_properties_;
  set_particle_fow_properties_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_set_particle_fow_properties(::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleFoWProperties* set_particle_fow_properties) {
  delete set_particle_fow_properties_;
  set_particle_fow_properties_ = set_particle_fow_properties;
  if (set_particle_fow_properties) {
    set_has_set_particle_fow_properties();
  } else {
    clear_has_set_particle_fow_properties();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.set_particle_fow_properties)
}

// optional .proto.dota.CDOTAUserMsg_ParticleManager.SetParticleText set_particle_text = 19;
inline bool CDOTAUserMsg_ParticleManager::has_set_particle_text() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CDOTAUserMsg_ParticleManager::set_has_set_particle_text() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CDOTAUserMsg_ParticleManager::clear_has_set_particle_text() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CDOTAUserMsg_ParticleManager::clear_set_particle_text() {
  if (set_particle_text_ != NULL) set_particle_text_->::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText::Clear();
  clear_has_set_particle_text();
}
inline const ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText& CDOTAUserMsg_ParticleManager::set_particle_text() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ParticleManager.set_particle_text)
  return set_particle_text_ != NULL ? *set_particle_text_
                         : *::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText* CDOTAUserMsg_ParticleManager::mutable_set_particle_text() {
  set_has_set_particle_text();
  if (set_particle_text_ == NULL) {
    set_particle_text_ = new ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ParticleManager.set_particle_text)
  return set_particle_text_;
}
inline ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText* CDOTAUserMsg_ParticleManager::release_set_particle_text() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ParticleManager.set_particle_text)
  clear_has_set_particle_text();
  ::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText* temp = set_particle_text_;
  set_particle_text_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ParticleManager::set_allocated_set_particle_text(::proto::dota::CDOTAUserMsg_ParticleManager_SetParticleText* set_particle_text) {
  delete set_particle_text_;
  set_particle_text_ = set_particle_text;
  if (set_particle_text) {
    set_has_set_particle_text();
  } else {
    clear_has_set_particle_text();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ParticleManager.set_particle_text)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_OverheadEvent

// required .proto.dota.DOTA_OVERHEAD_ALERT message_type = 1 [default = OVERHEAD_ALERT_GOLD];
inline bool CDOTAUserMsg_OverheadEvent::has_message_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_OverheadEvent::set_has_message_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_OverheadEvent::clear_has_message_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_OverheadEvent::clear_message_type() {
  message_type_ = 0;
  clear_has_message_type();
}
inline ::proto::dota::DOTA_OVERHEAD_ALERT CDOTAUserMsg_OverheadEvent::message_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_OverheadEvent.message_type)
  return static_cast< ::proto::dota::DOTA_OVERHEAD_ALERT >(message_type_);
}
inline void CDOTAUserMsg_OverheadEvent::set_message_type(::proto::dota::DOTA_OVERHEAD_ALERT value) {
  assert(::proto::dota::DOTA_OVERHEAD_ALERT_IsValid(value));
  set_has_message_type();
  message_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_OverheadEvent.message_type)
}

// optional int32 value = 2;
inline bool CDOTAUserMsg_OverheadEvent::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_OverheadEvent::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_OverheadEvent::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_OverheadEvent::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 CDOTAUserMsg_OverheadEvent::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_OverheadEvent.value)
  return value_;
}
inline void CDOTAUserMsg_OverheadEvent::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_OverheadEvent.value)
}

// optional int32 target_player_entindex = 3;
inline bool CDOTAUserMsg_OverheadEvent::has_target_player_entindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_OverheadEvent::set_has_target_player_entindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_OverheadEvent::clear_has_target_player_entindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_OverheadEvent::clear_target_player_entindex() {
  target_player_entindex_ = 0;
  clear_has_target_player_entindex();
}
inline ::google::protobuf::int32 CDOTAUserMsg_OverheadEvent::target_player_entindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_OverheadEvent.target_player_entindex)
  return target_player_entindex_;
}
inline void CDOTAUserMsg_OverheadEvent::set_target_player_entindex(::google::protobuf::int32 value) {
  set_has_target_player_entindex();
  target_player_entindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_OverheadEvent.target_player_entindex)
}

// optional int32 target_entindex = 4;
inline bool CDOTAUserMsg_OverheadEvent::has_target_entindex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_OverheadEvent::set_has_target_entindex() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_OverheadEvent::clear_has_target_entindex() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_OverheadEvent::clear_target_entindex() {
  target_entindex_ = 0;
  clear_has_target_entindex();
}
inline ::google::protobuf::int32 CDOTAUserMsg_OverheadEvent::target_entindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_OverheadEvent.target_entindex)
  return target_entindex_;
}
inline void CDOTAUserMsg_OverheadEvent::set_target_entindex(::google::protobuf::int32 value) {
  set_has_target_entindex();
  target_entindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_OverheadEvent.target_entindex)
}

// optional int32 source_player_entindex = 5;
inline bool CDOTAUserMsg_OverheadEvent::has_source_player_entindex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_OverheadEvent::set_has_source_player_entindex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_OverheadEvent::clear_has_source_player_entindex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_OverheadEvent::clear_source_player_entindex() {
  source_player_entindex_ = 0;
  clear_has_source_player_entindex();
}
inline ::google::protobuf::int32 CDOTAUserMsg_OverheadEvent::source_player_entindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_OverheadEvent.source_player_entindex)
  return source_player_entindex_;
}
inline void CDOTAUserMsg_OverheadEvent::set_source_player_entindex(::google::protobuf::int32 value) {
  set_has_source_player_entindex();
  source_player_entindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_OverheadEvent.source_player_entindex)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TutorialTipInfo

// optional string name = 1;
inline bool CDOTAUserMsg_TutorialTipInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_TutorialTipInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_TutorialTipInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_TutorialTipInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CDOTAUserMsg_TutorialTipInfo::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TutorialTipInfo.name)
  return name_.GetNoArena();
}
inline void CDOTAUserMsg_TutorialTipInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TutorialTipInfo.name)
}
#if LANG_CXX11
inline void CDOTAUserMsg_TutorialTipInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_TutorialTipInfo.name)
}
#endif
inline void CDOTAUserMsg_TutorialTipInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_TutorialTipInfo.name)
}
inline void CDOTAUserMsg_TutorialTipInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_TutorialTipInfo.name)
}
inline ::std::string* CDOTAUserMsg_TutorialTipInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_TutorialTipInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_TutorialTipInfo::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_TutorialTipInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_TutorialTipInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_TutorialTipInfo.name)
}

// optional int32 progress = 2;
inline bool CDOTAUserMsg_TutorialTipInfo::has_progress() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_TutorialTipInfo::set_has_progress() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_TutorialTipInfo::clear_has_progress() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_TutorialTipInfo::clear_progress() {
  progress_ = 0;
  clear_has_progress();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TutorialTipInfo::progress() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TutorialTipInfo.progress)
  return progress_;
}
inline void CDOTAUserMsg_TutorialTipInfo::set_progress(::google::protobuf::int32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TutorialTipInfo.progress)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TutorialFinish

// optional string heading = 1;
inline bool CDOTAUserMsg_TutorialFinish::has_heading() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_TutorialFinish::set_has_heading() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_TutorialFinish::clear_has_heading() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_TutorialFinish::clear_heading() {
  heading_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_heading();
}
inline const ::std::string& CDOTAUserMsg_TutorialFinish::heading() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TutorialFinish.heading)
  return heading_.GetNoArena();
}
inline void CDOTAUserMsg_TutorialFinish::set_heading(const ::std::string& value) {
  set_has_heading();
  heading_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TutorialFinish.heading)
}
#if LANG_CXX11
inline void CDOTAUserMsg_TutorialFinish::set_heading(::std::string&& value) {
  set_has_heading();
  heading_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_TutorialFinish.heading)
}
#endif
inline void CDOTAUserMsg_TutorialFinish::set_heading(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_heading();
  heading_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_TutorialFinish.heading)
}
inline void CDOTAUserMsg_TutorialFinish::set_heading(const char* value, size_t size) {
  set_has_heading();
  heading_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_TutorialFinish.heading)
}
inline ::std::string* CDOTAUserMsg_TutorialFinish::mutable_heading() {
  set_has_heading();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_TutorialFinish.heading)
  return heading_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_TutorialFinish::release_heading() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_TutorialFinish.heading)
  clear_has_heading();
  return heading_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_TutorialFinish::set_allocated_heading(::std::string* heading) {
  if (heading != NULL) {
    set_has_heading();
  } else {
    clear_has_heading();
  }
  heading_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), heading);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_TutorialFinish.heading)
}

// optional string emblem = 2;
inline bool CDOTAUserMsg_TutorialFinish::has_emblem() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_TutorialFinish::set_has_emblem() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_TutorialFinish::clear_has_emblem() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_TutorialFinish::clear_emblem() {
  emblem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_emblem();
}
inline const ::std::string& CDOTAUserMsg_TutorialFinish::emblem() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TutorialFinish.emblem)
  return emblem_.GetNoArena();
}
inline void CDOTAUserMsg_TutorialFinish::set_emblem(const ::std::string& value) {
  set_has_emblem();
  emblem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TutorialFinish.emblem)
}
#if LANG_CXX11
inline void CDOTAUserMsg_TutorialFinish::set_emblem(::std::string&& value) {
  set_has_emblem();
  emblem_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_TutorialFinish.emblem)
}
#endif
inline void CDOTAUserMsg_TutorialFinish::set_emblem(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_emblem();
  emblem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_TutorialFinish.emblem)
}
inline void CDOTAUserMsg_TutorialFinish::set_emblem(const char* value, size_t size) {
  set_has_emblem();
  emblem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_TutorialFinish.emblem)
}
inline ::std::string* CDOTAUserMsg_TutorialFinish::mutable_emblem() {
  set_has_emblem();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_TutorialFinish.emblem)
  return emblem_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_TutorialFinish::release_emblem() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_TutorialFinish.emblem)
  clear_has_emblem();
  return emblem_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_TutorialFinish::set_allocated_emblem(::std::string* emblem) {
  if (emblem != NULL) {
    set_has_emblem();
  } else {
    clear_has_emblem();
  }
  emblem_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), emblem);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_TutorialFinish.emblem)
}

// optional string body = 3;
inline bool CDOTAUserMsg_TutorialFinish::has_body() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_TutorialFinish::set_has_body() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_TutorialFinish::clear_has_body() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_TutorialFinish::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
inline const ::std::string& CDOTAUserMsg_TutorialFinish::body() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TutorialFinish.body)
  return body_.GetNoArena();
}
inline void CDOTAUserMsg_TutorialFinish::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TutorialFinish.body)
}
#if LANG_CXX11
inline void CDOTAUserMsg_TutorialFinish::set_body(::std::string&& value) {
  set_has_body();
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_TutorialFinish.body)
}
#endif
inline void CDOTAUserMsg_TutorialFinish::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_TutorialFinish.body)
}
inline void CDOTAUserMsg_TutorialFinish::set_body(const char* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_TutorialFinish.body)
}
inline ::std::string* CDOTAUserMsg_TutorialFinish::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_TutorialFinish.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_TutorialFinish::release_body() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_TutorialFinish.body)
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_TutorialFinish::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_TutorialFinish.body)
}

// optional bool success = 4;
inline bool CDOTAUserMsg_TutorialFinish::has_success() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_TutorialFinish::set_has_success() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_TutorialFinish::clear_has_success() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_TutorialFinish::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CDOTAUserMsg_TutorialFinish::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TutorialFinish.success)
  return success_;
}
inline void CDOTAUserMsg_TutorialFinish::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TutorialFinish.success)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TutorialMinimapPosition

// -------------------------------------------------------------------

// CDOTAUserMsg_SendGenericToolTip

// optional string title = 1;
inline bool CDOTAUserMsg_SendGenericToolTip::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SendGenericToolTip::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SendGenericToolTip::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SendGenericToolTip::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& CDOTAUserMsg_SendGenericToolTip::title() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendGenericToolTip.title)
  return title_.GetNoArena();
}
inline void CDOTAUserMsg_SendGenericToolTip::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SendGenericToolTip.title)
}
#if LANG_CXX11
inline void CDOTAUserMsg_SendGenericToolTip::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_SendGenericToolTip.title)
}
#endif
inline void CDOTAUserMsg_SendGenericToolTip::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_SendGenericToolTip.title)
}
inline void CDOTAUserMsg_SendGenericToolTip::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_SendGenericToolTip.title)
}
inline ::std::string* CDOTAUserMsg_SendGenericToolTip::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_SendGenericToolTip.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_SendGenericToolTip::release_title() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_SendGenericToolTip.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_SendGenericToolTip::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_SendGenericToolTip.title)
}

// optional string text = 2;
inline bool CDOTAUserMsg_SendGenericToolTip::has_text() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_SendGenericToolTip::set_has_text() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_SendGenericToolTip::clear_has_text() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_SendGenericToolTip::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CDOTAUserMsg_SendGenericToolTip::text() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendGenericToolTip.text)
  return text_.GetNoArena();
}
inline void CDOTAUserMsg_SendGenericToolTip::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SendGenericToolTip.text)
}
#if LANG_CXX11
inline void CDOTAUserMsg_SendGenericToolTip::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_SendGenericToolTip.text)
}
#endif
inline void CDOTAUserMsg_SendGenericToolTip::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_SendGenericToolTip.text)
}
inline void CDOTAUserMsg_SendGenericToolTip::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_SendGenericToolTip.text)
}
inline ::std::string* CDOTAUserMsg_SendGenericToolTip::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_SendGenericToolTip.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_SendGenericToolTip::release_text() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_SendGenericToolTip.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_SendGenericToolTip::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_SendGenericToolTip.text)
}

// optional int32 entindex = 3;
inline bool CDOTAUserMsg_SendGenericToolTip::has_entindex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_SendGenericToolTip::set_has_entindex() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_SendGenericToolTip::clear_has_entindex() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_SendGenericToolTip::clear_entindex() {
  entindex_ = 0;
  clear_has_entindex();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SendGenericToolTip::entindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendGenericToolTip.entindex)
  return entindex_;
}
inline void CDOTAUserMsg_SendGenericToolTip::set_entindex(::google::protobuf::int32 value) {
  set_has_entindex();
  entindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SendGenericToolTip.entindex)
}

// optional bool close = 4;
inline bool CDOTAUserMsg_SendGenericToolTip::has_close() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_SendGenericToolTip::set_has_close() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_SendGenericToolTip::clear_has_close() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_SendGenericToolTip::clear_close() {
  close_ = false;
  clear_has_close();
}
inline bool CDOTAUserMsg_SendGenericToolTip::close() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendGenericToolTip.close)
  return close_;
}
inline void CDOTAUserMsg_SendGenericToolTip::set_close(bool value) {
  set_has_close();
  close_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SendGenericToolTip.close)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_WorldLine

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_WorldLine::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_WorldLine::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_WorldLine::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_WorldLine::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_WorldLine::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_WorldLine.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_WorldLine::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_WorldLine.player_id)
}

// optional .proto.dota.CDOTAMsg_WorldLine worldline = 2;
inline bool CDOTAUserMsg_WorldLine::has_worldline() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_WorldLine::set_has_worldline() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_WorldLine::clear_has_worldline() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_WorldLine::clear_worldline() {
  if (worldline_ != NULL) worldline_->::proto::dota::CDOTAMsg_WorldLine::Clear();
  clear_has_worldline();
}
inline const ::proto::dota::CDOTAMsg_WorldLine& CDOTAUserMsg_WorldLine::worldline() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_WorldLine.worldline)
  return worldline_ != NULL ? *worldline_
                         : *::proto::dota::CDOTAMsg_WorldLine::internal_default_instance();
}
inline ::proto::dota::CDOTAMsg_WorldLine* CDOTAUserMsg_WorldLine::mutable_worldline() {
  set_has_worldline();
  if (worldline_ == NULL) {
    worldline_ = new ::proto::dota::CDOTAMsg_WorldLine;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_WorldLine.worldline)
  return worldline_;
}
inline ::proto::dota::CDOTAMsg_WorldLine* CDOTAUserMsg_WorldLine::release_worldline() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_WorldLine.worldline)
  clear_has_worldline();
  ::proto::dota::CDOTAMsg_WorldLine* temp = worldline_;
  worldline_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_WorldLine::set_allocated_worldline(::proto::dota::CDOTAMsg_WorldLine* worldline) {
  delete worldline_;
  worldline_ = worldline;
  if (worldline) {
    set_has_worldline();
  } else {
    clear_has_worldline();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_WorldLine.worldline)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ChatWheel

// optional uint32 chat_message_id = 1;
inline bool CDOTAUserMsg_ChatWheel::has_chat_message_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ChatWheel::set_has_chat_message_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ChatWheel::clear_has_chat_message_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ChatWheel::clear_chat_message_id() {
  chat_message_id_ = 0u;
  clear_has_chat_message_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ChatWheel::chat_message_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatWheel.chat_message_id)
  return chat_message_id_;
}
inline void CDOTAUserMsg_ChatWheel::set_chat_message_id(::google::protobuf::uint32 value) {
  set_has_chat_message_id();
  chat_message_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatWheel.chat_message_id)
}

// optional uint32 player_id = 2;
inline bool CDOTAUserMsg_ChatWheel::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ChatWheel::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ChatWheel::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ChatWheel::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ChatWheel::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatWheel.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_ChatWheel::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatWheel.player_id)
}

// optional uint32 account_id = 3;
inline bool CDOTAUserMsg_ChatWheel::has_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ChatWheel::set_has_account_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ChatWheel::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ChatWheel::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ChatWheel::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatWheel.account_id)
  return account_id_;
}
inline void CDOTAUserMsg_ChatWheel::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatWheel.account_id)
}

// optional uint32 param_hero_id = 4;
inline bool CDOTAUserMsg_ChatWheel::has_param_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_ChatWheel::set_has_param_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_ChatWheel::clear_has_param_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_ChatWheel::clear_param_hero_id() {
  param_hero_id_ = 0u;
  clear_has_param_hero_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ChatWheel::param_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatWheel.param_hero_id)
  return param_hero_id_;
}
inline void CDOTAUserMsg_ChatWheel::set_param_hero_id(::google::protobuf::uint32 value) {
  set_has_param_hero_id();
  param_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatWheel.param_hero_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ReceivedXmasGift

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_ReceivedXmasGift::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ReceivedXmasGift::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ReceivedXmasGift::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ReceivedXmasGift::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ReceivedXmasGift.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ReceivedXmasGift.player_id)
}

// optional string item_name = 2;
inline bool CDOTAUserMsg_ReceivedXmasGift::has_item_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_has_item_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ReceivedXmasGift::clear_has_item_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ReceivedXmasGift::clear_item_name() {
  item_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_name();
}
inline const ::std::string& CDOTAUserMsg_ReceivedXmasGift::item_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ReceivedXmasGift.item_name)
  return item_name_.GetNoArena();
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_item_name(const ::std::string& value) {
  set_has_item_name();
  item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ReceivedXmasGift.item_name)
}
#if LANG_CXX11
inline void CDOTAUserMsg_ReceivedXmasGift::set_item_name(::std::string&& value) {
  set_has_item_name();
  item_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_ReceivedXmasGift.item_name)
}
#endif
inline void CDOTAUserMsg_ReceivedXmasGift::set_item_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_item_name();
  item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_ReceivedXmasGift.item_name)
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_item_name(const char* value, size_t size) {
  set_has_item_name();
  item_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_ReceivedXmasGift.item_name)
}
inline ::std::string* CDOTAUserMsg_ReceivedXmasGift::mutable_item_name() {
  set_has_item_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ReceivedXmasGift.item_name)
  return item_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_ReceivedXmasGift::release_item_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ReceivedXmasGift.item_name)
  clear_has_item_name();
  return item_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_allocated_item_name(::std::string* item_name) {
  if (item_name != NULL) {
    set_has_item_name();
  } else {
    clear_has_item_name();
  }
  item_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ReceivedXmasGift.item_name)
}

// optional int32 inventory_slot = 3;
inline bool CDOTAUserMsg_ReceivedXmasGift::has_inventory_slot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_has_inventory_slot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ReceivedXmasGift::clear_has_inventory_slot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ReceivedXmasGift::clear_inventory_slot() {
  inventory_slot_ = 0;
  clear_has_inventory_slot();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ReceivedXmasGift::inventory_slot() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ReceivedXmasGift.inventory_slot)
  return inventory_slot_;
}
inline void CDOTAUserMsg_ReceivedXmasGift::set_inventory_slot(::google::protobuf::int32 value) {
  set_has_inventory_slot();
  inventory_slot_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ReceivedXmasGift.inventory_slot)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ShowSurvey

// optional int32 survey_id = 1;
inline bool CDOTAUserMsg_ShowSurvey::has_survey_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_ShowSurvey::set_has_survey_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_ShowSurvey::clear_has_survey_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_ShowSurvey::clear_survey_id() {
  survey_id_ = 0;
  clear_has_survey_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ShowSurvey::survey_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ShowSurvey.survey_id)
  return survey_id_;
}
inline void CDOTAUserMsg_ShowSurvey::set_survey_id(::google::protobuf::int32 value) {
  set_has_survey_id();
  survey_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ShowSurvey.survey_id)
}

// optional uint64 match_id = 2;
inline bool CDOTAUserMsg_ShowSurvey::has_match_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ShowSurvey::set_has_match_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ShowSurvey::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ShowSurvey::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CDOTAUserMsg_ShowSurvey::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ShowSurvey.match_id)
  return match_id_;
}
inline void CDOTAUserMsg_ShowSurvey::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ShowSurvey.match_id)
}

// optional string response_style = 3;
inline bool CDOTAUserMsg_ShowSurvey::has_response_style() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ShowSurvey::set_has_response_style() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ShowSurvey::clear_has_response_style() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ShowSurvey::clear_response_style() {
  response_style_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_response_style();
}
inline const ::std::string& CDOTAUserMsg_ShowSurvey::response_style() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ShowSurvey.response_style)
  return response_style_.GetNoArena();
}
inline void CDOTAUserMsg_ShowSurvey::set_response_style(const ::std::string& value) {
  set_has_response_style();
  response_style_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ShowSurvey.response_style)
}
#if LANG_CXX11
inline void CDOTAUserMsg_ShowSurvey::set_response_style(::std::string&& value) {
  set_has_response_style();
  response_style_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_ShowSurvey.response_style)
}
#endif
inline void CDOTAUserMsg_ShowSurvey::set_response_style(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_response_style();
  response_style_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_ShowSurvey.response_style)
}
inline void CDOTAUserMsg_ShowSurvey::set_response_style(const char* value, size_t size) {
  set_has_response_style();
  response_style_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_ShowSurvey.response_style)
}
inline ::std::string* CDOTAUserMsg_ShowSurvey::mutable_response_style() {
  set_has_response_style();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ShowSurvey.response_style)
  return response_style_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_ShowSurvey::release_response_style() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ShowSurvey.response_style)
  clear_has_response_style();
  return response_style_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_ShowSurvey::set_allocated_response_style(::std::string* response_style) {
  if (response_style != NULL) {
    set_has_response_style();
  } else {
    clear_has_response_style();
  }
  response_style_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), response_style);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ShowSurvey.response_style)
}

// optional uint32 teammate_hero_id = 4;
inline bool CDOTAUserMsg_ShowSurvey::has_teammate_hero_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_ShowSurvey::set_has_teammate_hero_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_ShowSurvey::clear_has_teammate_hero_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_ShowSurvey::clear_teammate_hero_id() {
  teammate_hero_id_ = 0u;
  clear_has_teammate_hero_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ShowSurvey::teammate_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ShowSurvey.teammate_hero_id)
  return teammate_hero_id_;
}
inline void CDOTAUserMsg_ShowSurvey::set_teammate_hero_id(::google::protobuf::uint32 value) {
  set_has_teammate_hero_id();
  teammate_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ShowSurvey.teammate_hero_id)
}

// optional string teammate_name = 5;
inline bool CDOTAUserMsg_ShowSurvey::has_teammate_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ShowSurvey::set_has_teammate_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ShowSurvey::clear_has_teammate_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ShowSurvey::clear_teammate_name() {
  teammate_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_teammate_name();
}
inline const ::std::string& CDOTAUserMsg_ShowSurvey::teammate_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ShowSurvey.teammate_name)
  return teammate_name_.GetNoArena();
}
inline void CDOTAUserMsg_ShowSurvey::set_teammate_name(const ::std::string& value) {
  set_has_teammate_name();
  teammate_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ShowSurvey.teammate_name)
}
#if LANG_CXX11
inline void CDOTAUserMsg_ShowSurvey::set_teammate_name(::std::string&& value) {
  set_has_teammate_name();
  teammate_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_ShowSurvey.teammate_name)
}
#endif
inline void CDOTAUserMsg_ShowSurvey::set_teammate_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_teammate_name();
  teammate_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_ShowSurvey.teammate_name)
}
inline void CDOTAUserMsg_ShowSurvey::set_teammate_name(const char* value, size_t size) {
  set_has_teammate_name();
  teammate_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_ShowSurvey.teammate_name)
}
inline ::std::string* CDOTAUserMsg_ShowSurvey::mutable_teammate_name() {
  set_has_teammate_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ShowSurvey.teammate_name)
  return teammate_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_ShowSurvey::release_teammate_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ShowSurvey.teammate_name)
  clear_has_teammate_name();
  return teammate_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_ShowSurvey::set_allocated_teammate_name(::std::string* teammate_name) {
  if (teammate_name != NULL) {
    set_has_teammate_name();
  } else {
    clear_has_teammate_name();
  }
  teammate_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), teammate_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ShowSurvey.teammate_name)
}

// optional uint32 teammate_account_id = 6;
inline bool CDOTAUserMsg_ShowSurvey::has_teammate_account_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_ShowSurvey::set_has_teammate_account_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_ShowSurvey::clear_has_teammate_account_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_ShowSurvey::clear_teammate_account_id() {
  teammate_account_id_ = 0u;
  clear_has_teammate_account_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ShowSurvey::teammate_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ShowSurvey.teammate_account_id)
  return teammate_account_id_;
}
inline void CDOTAUserMsg_ShowSurvey::set_teammate_account_id(::google::protobuf::uint32 value) {
  set_has_teammate_account_id();
  teammate_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ShowSurvey.teammate_account_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UpdateSharedContent

// optional int32 slot_type = 1;
inline bool CDOTAUserMsg_UpdateSharedContent::has_slot_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_UpdateSharedContent::set_has_slot_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_UpdateSharedContent::clear_has_slot_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_UpdateSharedContent::clear_slot_type() {
  slot_type_ = 0;
  clear_has_slot_type();
}
inline ::google::protobuf::int32 CDOTAUserMsg_UpdateSharedContent::slot_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_UpdateSharedContent.slot_type)
  return slot_type_;
}
inline void CDOTAUserMsg_UpdateSharedContent::set_slot_type(::google::protobuf::int32 value) {
  set_has_slot_type();
  slot_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_UpdateSharedContent.slot_type)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TutorialRequestExp

// -------------------------------------------------------------------

// CDOTAUserMsg_TutorialFade

// optional int32 tgt_alpha = 1;
inline bool CDOTAUserMsg_TutorialFade::has_tgt_alpha() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_TutorialFade::set_has_tgt_alpha() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_TutorialFade::clear_has_tgt_alpha() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_TutorialFade::clear_tgt_alpha() {
  tgt_alpha_ = 0;
  clear_has_tgt_alpha();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TutorialFade::tgt_alpha() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TutorialFade.tgt_alpha)
  return tgt_alpha_;
}
inline void CDOTAUserMsg_TutorialFade::set_tgt_alpha(::google::protobuf::int32 value) {
  set_has_tgt_alpha();
  tgt_alpha_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TutorialFade.tgt_alpha)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TutorialPingMinimap

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_TutorialPingMinimap::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_TutorialPingMinimap::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TutorialPingMinimap.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TutorialPingMinimap.player_id)
}

// optional float pos_x = 2;
inline bool CDOTAUserMsg_TutorialPingMinimap::has_pos_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_has_pos_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline float CDOTAUserMsg_TutorialPingMinimap::pos_x() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TutorialPingMinimap.pos_x)
  return pos_x_;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_pos_x(float value) {
  set_has_pos_x();
  pos_x_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TutorialPingMinimap.pos_x)
}

// optional float pos_y = 3;
inline bool CDOTAUserMsg_TutorialPingMinimap::has_pos_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_has_pos_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline float CDOTAUserMsg_TutorialPingMinimap::pos_y() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TutorialPingMinimap.pos_y)
  return pos_y_;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_pos_y(float value) {
  set_has_pos_y();
  pos_y_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TutorialPingMinimap.pos_y)
}

// optional float pos_z = 4;
inline bool CDOTAUserMsg_TutorialPingMinimap::has_pos_z() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_has_pos_z() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_has_pos_z() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_pos_z() {
  pos_z_ = 0;
  clear_has_pos_z();
}
inline float CDOTAUserMsg_TutorialPingMinimap::pos_z() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TutorialPingMinimap.pos_z)
  return pos_z_;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_pos_z(float value) {
  set_has_pos_z();
  pos_z_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TutorialPingMinimap.pos_z)
}

// optional int32 entity_index = 5;
inline bool CDOTAUserMsg_TutorialPingMinimap::has_entity_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_has_entity_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_has_entity_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_TutorialPingMinimap::clear_entity_index() {
  entity_index_ = 0;
  clear_has_entity_index();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TutorialPingMinimap::entity_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TutorialPingMinimap.entity_index)
  return entity_index_;
}
inline void CDOTAUserMsg_TutorialPingMinimap::set_entity_index(::google::protobuf::int32 value) {
  set_has_entity_index();
  entity_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TutorialPingMinimap.entity_index)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_GamerulesStateChanged

// optional uint32 state = 1;
inline bool CDOTAUserMsg_GamerulesStateChanged::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_GamerulesStateChanged::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_GamerulesStateChanged::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_GamerulesStateChanged::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_GamerulesStateChanged::state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_GamerulesStateChanged.state)
  return state_;
}
inline void CDOTAUserMsg_GamerulesStateChanged::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_GamerulesStateChanged.state)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_AddQuestLogEntry

// optional string npc_name = 1;
inline bool CDOTAUserMsg_AddQuestLogEntry::has_npc_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_has_npc_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_AddQuestLogEntry::clear_has_npc_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_AddQuestLogEntry::clear_npc_name() {
  npc_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_npc_name();
}
inline const ::std::string& CDOTAUserMsg_AddQuestLogEntry::npc_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_name)
  return npc_name_.GetNoArena();
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_name(const ::std::string& value) {
  set_has_npc_name();
  npc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_name)
}
#if LANG_CXX11
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_name(::std::string&& value) {
  set_has_npc_name();
  npc_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_name)
}
#endif
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_npc_name();
  npc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_name)
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_name(const char* value, size_t size) {
  set_has_npc_name();
  npc_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_name)
}
inline ::std::string* CDOTAUserMsg_AddQuestLogEntry::mutable_npc_name() {
  set_has_npc_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_name)
  return npc_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_AddQuestLogEntry::release_npc_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_name)
  clear_has_npc_name();
  return npc_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_allocated_npc_name(::std::string* npc_name) {
  if (npc_name != NULL) {
    set_has_npc_name();
  } else {
    clear_has_npc_name();
  }
  npc_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), npc_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_name)
}

// optional string npc_dialog = 2;
inline bool CDOTAUserMsg_AddQuestLogEntry::has_npc_dialog() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_has_npc_dialog() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_AddQuestLogEntry::clear_has_npc_dialog() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_AddQuestLogEntry::clear_npc_dialog() {
  npc_dialog_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_npc_dialog();
}
inline const ::std::string& CDOTAUserMsg_AddQuestLogEntry::npc_dialog() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
  return npc_dialog_.GetNoArena();
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_dialog(const ::std::string& value) {
  set_has_npc_dialog();
  npc_dialog_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
}
#if LANG_CXX11
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_dialog(::std::string&& value) {
  set_has_npc_dialog();
  npc_dialog_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
}
#endif
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_dialog(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_npc_dialog();
  npc_dialog_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_npc_dialog(const char* value, size_t size) {
  set_has_npc_dialog();
  npc_dialog_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
}
inline ::std::string* CDOTAUserMsg_AddQuestLogEntry::mutable_npc_dialog() {
  set_has_npc_dialog();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
  return npc_dialog_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_AddQuestLogEntry::release_npc_dialog() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
  clear_has_npc_dialog();
  return npc_dialog_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_AddQuestLogEntry::set_allocated_npc_dialog(::std::string* npc_dialog) {
  if (npc_dialog != NULL) {
    set_has_npc_dialog();
  } else {
    clear_has_npc_dialog();
  }
  npc_dialog_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), npc_dialog);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_AddQuestLogEntry.npc_dialog)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SendStatPopup

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_SendStatPopup::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_SendStatPopup::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_SendStatPopup::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_SendStatPopup::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SendStatPopup::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendStatPopup.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_SendStatPopup::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SendStatPopup.player_id)
}

// optional .proto.dota.CDOTAMsg_SendStatPopup statpopup = 2;
inline bool CDOTAUserMsg_SendStatPopup::has_statpopup() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SendStatPopup::set_has_statpopup() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SendStatPopup::clear_has_statpopup() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SendStatPopup::clear_statpopup() {
  if (statpopup_ != NULL) statpopup_->::proto::dota::CDOTAMsg_SendStatPopup::Clear();
  clear_has_statpopup();
}
inline const ::proto::dota::CDOTAMsg_SendStatPopup& CDOTAUserMsg_SendStatPopup::statpopup() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendStatPopup.statpopup)
  return statpopup_ != NULL ? *statpopup_
                         : *::proto::dota::CDOTAMsg_SendStatPopup::internal_default_instance();
}
inline ::proto::dota::CDOTAMsg_SendStatPopup* CDOTAUserMsg_SendStatPopup::mutable_statpopup() {
  set_has_statpopup();
  if (statpopup_ == NULL) {
    statpopup_ = new ::proto::dota::CDOTAMsg_SendStatPopup;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_SendStatPopup.statpopup)
  return statpopup_;
}
inline ::proto::dota::CDOTAMsg_SendStatPopup* CDOTAUserMsg_SendStatPopup::release_statpopup() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_SendStatPopup.statpopup)
  clear_has_statpopup();
  ::proto::dota::CDOTAMsg_SendStatPopup* temp = statpopup_;
  statpopup_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_SendStatPopup::set_allocated_statpopup(::proto::dota::CDOTAMsg_SendStatPopup* statpopup) {
  delete statpopup_;
  statpopup_ = statpopup;
  if (statpopup) {
    set_has_statpopup();
  } else {
    clear_has_statpopup();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_SendStatPopup.statpopup)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_DismissAllStatPopups

// optional .proto.dota.CDOTAMsg_DismissAllStatPopups dismissallmsg = 1;
inline bool CDOTAUserMsg_DismissAllStatPopups::has_dismissallmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_DismissAllStatPopups::set_has_dismissallmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_DismissAllStatPopups::clear_has_dismissallmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_DismissAllStatPopups::clear_dismissallmsg() {
  if (dismissallmsg_ != NULL) dismissallmsg_->::proto::dota::CDOTAMsg_DismissAllStatPopups::Clear();
  clear_has_dismissallmsg();
}
inline const ::proto::dota::CDOTAMsg_DismissAllStatPopups& CDOTAUserMsg_DismissAllStatPopups::dismissallmsg() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_DismissAllStatPopups.dismissallmsg)
  return dismissallmsg_ != NULL ? *dismissallmsg_
                         : *::proto::dota::CDOTAMsg_DismissAllStatPopups::internal_default_instance();
}
inline ::proto::dota::CDOTAMsg_DismissAllStatPopups* CDOTAUserMsg_DismissAllStatPopups::mutable_dismissallmsg() {
  set_has_dismissallmsg();
  if (dismissallmsg_ == NULL) {
    dismissallmsg_ = new ::proto::dota::CDOTAMsg_DismissAllStatPopups;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_DismissAllStatPopups.dismissallmsg)
  return dismissallmsg_;
}
inline ::proto::dota::CDOTAMsg_DismissAllStatPopups* CDOTAUserMsg_DismissAllStatPopups::release_dismissallmsg() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_DismissAllStatPopups.dismissallmsg)
  clear_has_dismissallmsg();
  ::proto::dota::CDOTAMsg_DismissAllStatPopups* temp = dismissallmsg_;
  dismissallmsg_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_DismissAllStatPopups::set_allocated_dismissallmsg(::proto::dota::CDOTAMsg_DismissAllStatPopups* dismissallmsg) {
  delete dismissallmsg_;
  dismissallmsg_ = dismissallmsg;
  if (dismissallmsg) {
    set_has_dismissallmsg();
  } else {
    clear_has_dismissallmsg();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_DismissAllStatPopups.dismissallmsg)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SendRoshanSpectatorPhase

// optional .proto.dota.DOTA_ROSHAN_PHASE phase = 1 [default = k_SRSP_ROSHAN_ALIVE];
inline bool CDOTAUserMsg_SendRoshanSpectatorPhase::has_phase() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::set_has_phase() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::clear_has_phase() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::clear_phase() {
  phase_ = 0;
  clear_has_phase();
}
inline ::proto::dota::DOTA_ROSHAN_PHASE CDOTAUserMsg_SendRoshanSpectatorPhase::phase() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendRoshanSpectatorPhase.phase)
  return static_cast< ::proto::dota::DOTA_ROSHAN_PHASE >(phase_);
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::set_phase(::proto::dota::DOTA_ROSHAN_PHASE value) {
  assert(::proto::dota::DOTA_ROSHAN_PHASE_IsValid(value));
  set_has_phase();
  phase_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SendRoshanSpectatorPhase.phase)
}

// optional int32 phase_start_time = 2;
inline bool CDOTAUserMsg_SendRoshanSpectatorPhase::has_phase_start_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::set_has_phase_start_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::clear_has_phase_start_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::clear_phase_start_time() {
  phase_start_time_ = 0;
  clear_has_phase_start_time();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SendRoshanSpectatorPhase::phase_start_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendRoshanSpectatorPhase.phase_start_time)
  return phase_start_time_;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::set_phase_start_time(::google::protobuf::int32 value) {
  set_has_phase_start_time();
  phase_start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SendRoshanSpectatorPhase.phase_start_time)
}

// optional int32 phase_length = 3;
inline bool CDOTAUserMsg_SendRoshanSpectatorPhase::has_phase_length() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::set_has_phase_length() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::clear_has_phase_length() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::clear_phase_length() {
  phase_length_ = 0;
  clear_has_phase_length();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SendRoshanSpectatorPhase::phase_length() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendRoshanSpectatorPhase.phase_length)
  return phase_length_;
}
inline void CDOTAUserMsg_SendRoshanSpectatorPhase::set_phase_length(::google::protobuf::int32 value) {
  set_has_phase_length();
  phase_length_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SendRoshanSpectatorPhase.phase_length)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SendRoshanPopup

// optional bool reclaimed = 1;
inline bool CDOTAUserMsg_SendRoshanPopup::has_reclaimed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SendRoshanPopup::set_has_reclaimed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SendRoshanPopup::clear_has_reclaimed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SendRoshanPopup::clear_reclaimed() {
  reclaimed_ = false;
  clear_has_reclaimed();
}
inline bool CDOTAUserMsg_SendRoshanPopup::reclaimed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendRoshanPopup.reclaimed)
  return reclaimed_;
}
inline void CDOTAUserMsg_SendRoshanPopup::set_reclaimed(bool value) {
  set_has_reclaimed();
  reclaimed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SendRoshanPopup.reclaimed)
}

// optional int32 gametime = 2;
inline bool CDOTAUserMsg_SendRoshanPopup::has_gametime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_SendRoshanPopup::set_has_gametime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_SendRoshanPopup::clear_has_gametime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_SendRoshanPopup::clear_gametime() {
  gametime_ = 0;
  clear_has_gametime();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SendRoshanPopup::gametime() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendRoshanPopup.gametime)
  return gametime_;
}
inline void CDOTAUserMsg_SendRoshanPopup::set_gametime(::google::protobuf::int32 value) {
  set_has_gametime();
  gametime_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SendRoshanPopup.gametime)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SendFinalGold

// repeated uint32 reliable_gold = 1;
inline int CDOTAUserMsg_SendFinalGold::reliable_gold_size() const {
  return reliable_gold_.size();
}
inline void CDOTAUserMsg_SendFinalGold::clear_reliable_gold() {
  reliable_gold_.Clear();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_SendFinalGold::reliable_gold(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendFinalGold.reliable_gold)
  return reliable_gold_.Get(index);
}
inline void CDOTAUserMsg_SendFinalGold::set_reliable_gold(int index, ::google::protobuf::uint32 value) {
  reliable_gold_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SendFinalGold.reliable_gold)
}
inline void CDOTAUserMsg_SendFinalGold::add_reliable_gold(::google::protobuf::uint32 value) {
  reliable_gold_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_SendFinalGold.reliable_gold)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CDOTAUserMsg_SendFinalGold::reliable_gold() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_SendFinalGold.reliable_gold)
  return reliable_gold_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CDOTAUserMsg_SendFinalGold::mutable_reliable_gold() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_SendFinalGold.reliable_gold)
  return &reliable_gold_;
}

// repeated uint32 unreliable_gold = 2;
inline int CDOTAUserMsg_SendFinalGold::unreliable_gold_size() const {
  return unreliable_gold_.size();
}
inline void CDOTAUserMsg_SendFinalGold::clear_unreliable_gold() {
  unreliable_gold_.Clear();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_SendFinalGold::unreliable_gold(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SendFinalGold.unreliable_gold)
  return unreliable_gold_.Get(index);
}
inline void CDOTAUserMsg_SendFinalGold::set_unreliable_gold(int index, ::google::protobuf::uint32 value) {
  unreliable_gold_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SendFinalGold.unreliable_gold)
}
inline void CDOTAUserMsg_SendFinalGold::add_unreliable_gold(::google::protobuf::uint32 value) {
  unreliable_gold_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_SendFinalGold.unreliable_gold)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CDOTAUserMsg_SendFinalGold::unreliable_gold() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_SendFinalGold.unreliable_gold)
  return unreliable_gold_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CDOTAUserMsg_SendFinalGold::mutable_unreliable_gold() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_SendFinalGold.unreliable_gold)
  return &unreliable_gold_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CustomMsg

// optional string message = 1;
inline bool CDOTAUserMsg_CustomMsg::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_CustomMsg::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_CustomMsg::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_CustomMsg::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CDOTAUserMsg_CustomMsg::message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomMsg.message)
  return message_.GetNoArena();
}
inline void CDOTAUserMsg_CustomMsg::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomMsg.message)
}
#if LANG_CXX11
inline void CDOTAUserMsg_CustomMsg::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_CustomMsg.message)
}
#endif
inline void CDOTAUserMsg_CustomMsg::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_CustomMsg.message)
}
inline void CDOTAUserMsg_CustomMsg::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_CustomMsg.message)
}
inline ::std::string* CDOTAUserMsg_CustomMsg::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CustomMsg.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_CustomMsg::release_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CustomMsg.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_CustomMsg::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CustomMsg.message)
}

// optional int32 player_id = 2;
inline bool CDOTAUserMsg_CustomMsg::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_CustomMsg::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_CustomMsg::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_CustomMsg::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_CustomMsg::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomMsg.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_CustomMsg::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomMsg.player_id)
}

// optional int32 value = 3;
inline bool CDOTAUserMsg_CustomMsg::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_CustomMsg::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_CustomMsg::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_CustomMsg::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 CDOTAUserMsg_CustomMsg::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomMsg.value)
  return value_;
}
inline void CDOTAUserMsg_CustomMsg::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomMsg.value)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CoachHUDPing

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_CoachHUDPing::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_CoachHUDPing::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_CoachHUDPing::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_CoachHUDPing::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_CoachHUDPing::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CoachHUDPing.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_CoachHUDPing::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CoachHUDPing.player_id)
}

// optional .proto.dota.CDOTAMsg_CoachHUDPing hud_ping = 2;
inline bool CDOTAUserMsg_CoachHUDPing::has_hud_ping() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_CoachHUDPing::set_has_hud_ping() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_CoachHUDPing::clear_has_hud_ping() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_CoachHUDPing::clear_hud_ping() {
  if (hud_ping_ != NULL) hud_ping_->::proto::dota::CDOTAMsg_CoachHUDPing::Clear();
  clear_has_hud_ping();
}
inline const ::proto::dota::CDOTAMsg_CoachHUDPing& CDOTAUserMsg_CoachHUDPing::hud_ping() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CoachHUDPing.hud_ping)
  return hud_ping_ != NULL ? *hud_ping_
                         : *::proto::dota::CDOTAMsg_CoachHUDPing::internal_default_instance();
}
inline ::proto::dota::CDOTAMsg_CoachHUDPing* CDOTAUserMsg_CoachHUDPing::mutable_hud_ping() {
  set_has_hud_ping();
  if (hud_ping_ == NULL) {
    hud_ping_ = new ::proto::dota::CDOTAMsg_CoachHUDPing;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CoachHUDPing.hud_ping)
  return hud_ping_;
}
inline ::proto::dota::CDOTAMsg_CoachHUDPing* CDOTAUserMsg_CoachHUDPing::release_hud_ping() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CoachHUDPing.hud_ping)
  clear_has_hud_ping();
  ::proto::dota::CDOTAMsg_CoachHUDPing* temp = hud_ping_;
  hud_ping_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_CoachHUDPing::set_allocated_hud_ping(::proto::dota::CDOTAMsg_CoachHUDPing* hud_ping) {
  delete hud_ping_;
  hud_ping_ = hud_ping;
  if (hud_ping) {
    set_has_hud_ping();
  } else {
    clear_has_hud_ping();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CoachHUDPing.hud_ping)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ClientLoadGridNav

// -------------------------------------------------------------------

// CDOTAUserMsg_TE_Projectile

// optional int32 hSource = 1;
inline bool CDOTAUserMsg_TE_Projectile::has_hsource() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_TE_Projectile::set_has_hsource() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_has_hsource() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_hsource() {
  hsource_ = 0;
  clear_has_hsource();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_Projectile::hsource() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_Projectile.hSource)
  return hsource_;
}
inline void CDOTAUserMsg_TE_Projectile::set_hsource(::google::protobuf::int32 value) {
  set_has_hsource();
  hsource_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_Projectile.hSource)
}

// optional int32 hTarget = 2;
inline bool CDOTAUserMsg_TE_Projectile::has_htarget() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_TE_Projectile::set_has_htarget() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_has_htarget() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_htarget() {
  htarget_ = 0;
  clear_has_htarget();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_Projectile::htarget() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_Projectile.hTarget)
  return htarget_;
}
inline void CDOTAUserMsg_TE_Projectile::set_htarget(::google::protobuf::int32 value) {
  set_has_htarget();
  htarget_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_Projectile.hTarget)
}

// optional int32 moveSpeed = 3;
inline bool CDOTAUserMsg_TE_Projectile::has_movespeed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_TE_Projectile::set_has_movespeed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_has_movespeed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_movespeed() {
  movespeed_ = 0;
  clear_has_movespeed();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_Projectile::movespeed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_Projectile.moveSpeed)
  return movespeed_;
}
inline void CDOTAUserMsg_TE_Projectile::set_movespeed(::google::protobuf::int32 value) {
  set_has_movespeed();
  movespeed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_Projectile.moveSpeed)
}

// optional int32 sourceAttachment = 4;
inline bool CDOTAUserMsg_TE_Projectile::has_sourceattachment() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_TE_Projectile::set_has_sourceattachment() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_has_sourceattachment() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_sourceattachment() {
  sourceattachment_ = 0;
  clear_has_sourceattachment();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_Projectile::sourceattachment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_Projectile.sourceAttachment)
  return sourceattachment_;
}
inline void CDOTAUserMsg_TE_Projectile::set_sourceattachment(::google::protobuf::int32 value) {
  set_has_sourceattachment();
  sourceattachment_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_Projectile.sourceAttachment)
}

// optional int64 particleSystemHandle = 5;
inline bool CDOTAUserMsg_TE_Projectile::has_particlesystemhandle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_TE_Projectile::set_has_particlesystemhandle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_has_particlesystemhandle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_particlesystemhandle() {
  particlesystemhandle_ = GOOGLE_LONGLONG(0);
  clear_has_particlesystemhandle();
}
inline ::google::protobuf::int64 CDOTAUserMsg_TE_Projectile::particlesystemhandle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_Projectile.particleSystemHandle)
  return particlesystemhandle_;
}
inline void CDOTAUserMsg_TE_Projectile::set_particlesystemhandle(::google::protobuf::int64 value) {
  set_has_particlesystemhandle();
  particlesystemhandle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_Projectile.particleSystemHandle)
}

// optional bool dodgeable = 6;
inline bool CDOTAUserMsg_TE_Projectile::has_dodgeable() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_TE_Projectile::set_has_dodgeable() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_has_dodgeable() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_dodgeable() {
  dodgeable_ = false;
  clear_has_dodgeable();
}
inline bool CDOTAUserMsg_TE_Projectile::dodgeable() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_Projectile.dodgeable)
  return dodgeable_;
}
inline void CDOTAUserMsg_TE_Projectile::set_dodgeable(bool value) {
  set_has_dodgeable();
  dodgeable_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_Projectile.dodgeable)
}

// optional bool isAttack = 7;
inline bool CDOTAUserMsg_TE_Projectile::has_isattack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAUserMsg_TE_Projectile::set_has_isattack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_has_isattack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_isattack() {
  isattack_ = false;
  clear_has_isattack();
}
inline bool CDOTAUserMsg_TE_Projectile::isattack() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_Projectile.isAttack)
  return isattack_;
}
inline void CDOTAUserMsg_TE_Projectile::set_isattack(bool value) {
  set_has_isattack();
  isattack_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_Projectile.isAttack)
}

// optional bool isEvaded = 8;
inline bool CDOTAUserMsg_TE_Projectile::has_isevaded() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CDOTAUserMsg_TE_Projectile::set_has_isevaded() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_has_isevaded() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_isevaded() {
  isevaded_ = false;
  clear_has_isevaded();
}
inline bool CDOTAUserMsg_TE_Projectile::isevaded() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_Projectile.isEvaded)
  return isevaded_;
}
inline void CDOTAUserMsg_TE_Projectile::set_isevaded(bool value) {
  set_has_isevaded();
  isevaded_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_Projectile.isEvaded)
}

// optional float expireTime = 9;
inline bool CDOTAUserMsg_TE_Projectile::has_expiretime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CDOTAUserMsg_TE_Projectile::set_has_expiretime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_expiretime() {
  expiretime_ = 0;
  clear_has_expiretime();
}
inline float CDOTAUserMsg_TE_Projectile::expiretime() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_Projectile.expireTime)
  return expiretime_;
}
inline void CDOTAUserMsg_TE_Projectile::set_expiretime(float value) {
  set_has_expiretime();
  expiretime_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_Projectile.expireTime)
}

// optional float maximpacttime = 10;
inline bool CDOTAUserMsg_TE_Projectile::has_maximpacttime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CDOTAUserMsg_TE_Projectile::set_has_maximpacttime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_has_maximpacttime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_maximpacttime() {
  maximpacttime_ = 0;
  clear_has_maximpacttime();
}
inline float CDOTAUserMsg_TE_Projectile::maximpacttime() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_Projectile.maximpacttime)
  return maximpacttime_;
}
inline void CDOTAUserMsg_TE_Projectile::set_maximpacttime(float value) {
  set_has_maximpacttime();
  maximpacttime_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_Projectile.maximpacttime)
}

// optional fixed32 colorgemcolor = 11;
inline bool CDOTAUserMsg_TE_Projectile::has_colorgemcolor() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CDOTAUserMsg_TE_Projectile::set_has_colorgemcolor() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_has_colorgemcolor() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_colorgemcolor() {
  colorgemcolor_ = 0u;
  clear_has_colorgemcolor();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_TE_Projectile::colorgemcolor() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_Projectile.colorgemcolor)
  return colorgemcolor_;
}
inline void CDOTAUserMsg_TE_Projectile::set_colorgemcolor(::google::protobuf::uint32 value) {
  set_has_colorgemcolor();
  colorgemcolor_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_Projectile.colorgemcolor)
}

// optional int32 launch_tick = 12;
inline bool CDOTAUserMsg_TE_Projectile::has_launch_tick() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CDOTAUserMsg_TE_Projectile::set_has_launch_tick() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_has_launch_tick() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CDOTAUserMsg_TE_Projectile::clear_launch_tick() {
  launch_tick_ = 0;
  clear_has_launch_tick();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_Projectile::launch_tick() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_Projectile.launch_tick)
  return launch_tick_;
}
inline void CDOTAUserMsg_TE_Projectile::set_launch_tick(::google::protobuf::int32 value) {
  set_has_launch_tick();
  launch_tick_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_Projectile.launch_tick)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TE_ProjectileLoc

// optional .proto.dota.CMsgVector vSourceLoc = 1;
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_vsourceloc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_has_vsourceloc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_has_vsourceloc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_vsourceloc() {
  if (vsourceloc_ != NULL) vsourceloc_->::proto::dota::CMsgVector::Clear();
  clear_has_vsourceloc();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_TE_ProjectileLoc::vsourceloc() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.vSourceLoc)
  return vsourceloc_ != NULL ? *vsourceloc_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_TE_ProjectileLoc::mutable_vsourceloc() {
  set_has_vsourceloc();
  if (vsourceloc_ == NULL) {
    vsourceloc_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.vSourceLoc)
  return vsourceloc_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_TE_ProjectileLoc::release_vsourceloc() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.vSourceLoc)
  clear_has_vsourceloc();
  ::proto::dota::CMsgVector* temp = vsourceloc_;
  vsourceloc_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_allocated_vsourceloc(::proto::dota::CMsgVector* vsourceloc) {
  delete vsourceloc_;
  vsourceloc_ = vsourceloc;
  if (vsourceloc) {
    set_has_vsourceloc();
  } else {
    clear_has_vsourceloc();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.vSourceLoc)
}

// optional int32 hTarget = 2;
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_htarget() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_has_htarget() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_has_htarget() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_htarget() {
  htarget_ = 0;
  clear_has_htarget();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_ProjectileLoc::htarget() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.hTarget)
  return htarget_;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_htarget(::google::protobuf::int32 value) {
  set_has_htarget();
  htarget_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.hTarget)
}

// optional int32 moveSpeed = 3;
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_movespeed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_has_movespeed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_has_movespeed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_movespeed() {
  movespeed_ = 0;
  clear_has_movespeed();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_ProjectileLoc::movespeed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.moveSpeed)
  return movespeed_;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_movespeed(::google::protobuf::int32 value) {
  set_has_movespeed();
  movespeed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.moveSpeed)
}

// optional int64 particleSystemHandle = 4;
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_particlesystemhandle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_has_particlesystemhandle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_has_particlesystemhandle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_particlesystemhandle() {
  particlesystemhandle_ = GOOGLE_LONGLONG(0);
  clear_has_particlesystemhandle();
}
inline ::google::protobuf::int64 CDOTAUserMsg_TE_ProjectileLoc::particlesystemhandle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.particleSystemHandle)
  return particlesystemhandle_;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_particlesystemhandle(::google::protobuf::int64 value) {
  set_has_particlesystemhandle();
  particlesystemhandle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.particleSystemHandle)
}

// optional bool dodgeable = 5;
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_dodgeable() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_has_dodgeable() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_has_dodgeable() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_dodgeable() {
  dodgeable_ = false;
  clear_has_dodgeable();
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::dodgeable() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.dodgeable)
  return dodgeable_;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_dodgeable(bool value) {
  set_has_dodgeable();
  dodgeable_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.dodgeable)
}

// optional bool isAttack = 6;
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_isattack() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_has_isattack() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_has_isattack() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_isattack() {
  isattack_ = false;
  clear_has_isattack();
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::isattack() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.isAttack)
  return isattack_;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_isattack(bool value) {
  set_has_isattack();
  isattack_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.isAttack)
}

// optional bool isEvaded = 8;
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_isevaded() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_has_isevaded() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_has_isevaded() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_isevaded() {
  isevaded_ = false;
  clear_has_isevaded();
}
inline bool CDOTAUserMsg_TE_ProjectileLoc::isevaded() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.isEvaded)
  return isevaded_;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_isevaded(bool value) {
  set_has_isevaded();
  isevaded_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.isEvaded)
}

// optional float expireTime = 9;
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_expiretime() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_has_expiretime() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_has_expiretime() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_expiretime() {
  expiretime_ = 0;
  clear_has_expiretime();
}
inline float CDOTAUserMsg_TE_ProjectileLoc::expiretime() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.expireTime)
  return expiretime_;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_expiretime(float value) {
  set_has_expiretime();
  expiretime_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.expireTime)
}

// optional .proto.dota.CMsgVector vTargetLoc = 10;
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_vtargetloc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_has_vtargetloc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_has_vtargetloc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_vtargetloc() {
  if (vtargetloc_ != NULL) vtargetloc_->::proto::dota::CMsgVector::Clear();
  clear_has_vtargetloc();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_TE_ProjectileLoc::vtargetloc() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.vTargetLoc)
  return vtargetloc_ != NULL ? *vtargetloc_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_TE_ProjectileLoc::mutable_vtargetloc() {
  set_has_vtargetloc();
  if (vtargetloc_ == NULL) {
    vtargetloc_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.vTargetLoc)
  return vtargetloc_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_TE_ProjectileLoc::release_vtargetloc() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.vTargetLoc)
  clear_has_vtargetloc();
  ::proto::dota::CMsgVector* temp = vtargetloc_;
  vtargetloc_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_allocated_vtargetloc(::proto::dota::CMsgVector* vtargetloc) {
  delete vtargetloc_;
  vtargetloc_ = vtargetloc;
  if (vtargetloc) {
    set_has_vtargetloc();
  } else {
    clear_has_vtargetloc();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.vTargetLoc)
}

// optional fixed32 colorgemcolor = 11;
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_colorgemcolor() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_has_colorgemcolor() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_has_colorgemcolor() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_colorgemcolor() {
  colorgemcolor_ = 0u;
  clear_has_colorgemcolor();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_TE_ProjectileLoc::colorgemcolor() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.colorgemcolor)
  return colorgemcolor_;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_colorgemcolor(::google::protobuf::uint32 value) {
  set_has_colorgemcolor();
  colorgemcolor_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.colorgemcolor)
}

// optional int32 launch_tick = 12;
inline bool CDOTAUserMsg_TE_ProjectileLoc::has_launch_tick() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_has_launch_tick() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_has_launch_tick() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::clear_launch_tick() {
  launch_tick_ = 0;
  clear_has_launch_tick();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_ProjectileLoc::launch_tick() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.launch_tick)
  return launch_tick_;
}
inline void CDOTAUserMsg_TE_ProjectileLoc::set_launch_tick(::google::protobuf::int32 value) {
  set_has_launch_tick();
  launch_tick_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_ProjectileLoc.launch_tick)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TE_DotaBloodImpact

// optional int32 entity = 1;
inline bool CDOTAUserMsg_TE_DotaBloodImpact::has_entity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::set_has_entity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::clear_has_entity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::clear_entity() {
  entity_ = 0;
  clear_has_entity();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_DotaBloodImpact::entity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_DotaBloodImpact.entity)
  return entity_;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::set_entity(::google::protobuf::int32 value) {
  set_has_entity();
  entity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_DotaBloodImpact.entity)
}

// optional float scale = 2;
inline bool CDOTAUserMsg_TE_DotaBloodImpact::has_scale() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::set_has_scale() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::clear_has_scale() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::clear_scale() {
  scale_ = 0;
  clear_has_scale();
}
inline float CDOTAUserMsg_TE_DotaBloodImpact::scale() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_DotaBloodImpact.scale)
  return scale_;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::set_scale(float value) {
  set_has_scale();
  scale_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_DotaBloodImpact.scale)
}

// optional float xnormal = 3;
inline bool CDOTAUserMsg_TE_DotaBloodImpact::has_xnormal() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::set_has_xnormal() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::clear_has_xnormal() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::clear_xnormal() {
  xnormal_ = 0;
  clear_has_xnormal();
}
inline float CDOTAUserMsg_TE_DotaBloodImpact::xnormal() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_DotaBloodImpact.xnormal)
  return xnormal_;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::set_xnormal(float value) {
  set_has_xnormal();
  xnormal_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_DotaBloodImpact.xnormal)
}

// optional float ynormal = 4;
inline bool CDOTAUserMsg_TE_DotaBloodImpact::has_ynormal() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::set_has_ynormal() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::clear_has_ynormal() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::clear_ynormal() {
  ynormal_ = 0;
  clear_has_ynormal();
}
inline float CDOTAUserMsg_TE_DotaBloodImpact::ynormal() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_DotaBloodImpact.ynormal)
  return ynormal_;
}
inline void CDOTAUserMsg_TE_DotaBloodImpact::set_ynormal(float value) {
  set_has_ynormal();
  ynormal_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_DotaBloodImpact.ynormal)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_AbilityPing

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_AbilityPing::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_AbilityPing::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_AbilityPing::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_AbilityPing::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_AbilityPing::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AbilityPing.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_AbilityPing::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AbilityPing.player_id)
}

// optional uint32 ability_id = 2;
inline bool CDOTAUserMsg_AbilityPing::has_ability_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_AbilityPing::set_has_ability_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_AbilityPing::clear_has_ability_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_AbilityPing::clear_ability_id() {
  ability_id_ = 0u;
  clear_has_ability_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_AbilityPing::ability_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AbilityPing.ability_id)
  return ability_id_;
}
inline void CDOTAUserMsg_AbilityPing::set_ability_id(::google::protobuf::uint32 value) {
  set_has_ability_id();
  ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AbilityPing.ability_id)
}

// optional .proto.dota.DOTA_ABILITY_PING_TYPE type = 3 [default = ABILITY_PING_READY];
inline bool CDOTAUserMsg_AbilityPing::has_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAUserMsg_AbilityPing::set_has_type() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDOTAUserMsg_AbilityPing::clear_has_type() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDOTAUserMsg_AbilityPing::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline ::proto::dota::DOTA_ABILITY_PING_TYPE CDOTAUserMsg_AbilityPing::type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AbilityPing.type)
  return static_cast< ::proto::dota::DOTA_ABILITY_PING_TYPE >(type_);
}
inline void CDOTAUserMsg_AbilityPing::set_type(::proto::dota::DOTA_ABILITY_PING_TYPE value) {
  assert(::proto::dota::DOTA_ABILITY_PING_TYPE_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AbilityPing.type)
}

// optional uint32 cooldown_seconds = 4;
inline bool CDOTAUserMsg_AbilityPing::has_cooldown_seconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_AbilityPing::set_has_cooldown_seconds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_AbilityPing::clear_has_cooldown_seconds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_AbilityPing::clear_cooldown_seconds() {
  cooldown_seconds_ = 0u;
  clear_has_cooldown_seconds();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_AbilityPing::cooldown_seconds() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AbilityPing.cooldown_seconds)
  return cooldown_seconds_;
}
inline void CDOTAUserMsg_AbilityPing::set_cooldown_seconds(::google::protobuf::uint32 value) {
  set_has_cooldown_seconds();
  cooldown_seconds_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AbilityPing.cooldown_seconds)
}

// optional uint32 level = 5;
inline bool CDOTAUserMsg_AbilityPing::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_AbilityPing::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_AbilityPing::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_AbilityPing::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_AbilityPing::level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AbilityPing.level)
  return level_;
}
inline void CDOTAUserMsg_AbilityPing::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AbilityPing.level)
}

// optional bool passive = 6;
inline bool CDOTAUserMsg_AbilityPing::has_passive() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_AbilityPing::set_has_passive() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_AbilityPing::clear_has_passive() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_AbilityPing::clear_passive() {
  passive_ = false;
  clear_has_passive();
}
inline bool CDOTAUserMsg_AbilityPing::passive() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AbilityPing.passive)
  return passive_;
}
inline void CDOTAUserMsg_AbilityPing::set_passive(bool value) {
  set_has_passive();
  passive_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AbilityPing.passive)
}

// optional uint32 mana_needed = 7;
inline bool CDOTAUserMsg_AbilityPing::has_mana_needed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_AbilityPing::set_has_mana_needed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_AbilityPing::clear_has_mana_needed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_AbilityPing::clear_mana_needed() {
  mana_needed_ = 0u;
  clear_has_mana_needed();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_AbilityPing::mana_needed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AbilityPing.mana_needed)
  return mana_needed_;
}
inline void CDOTAUserMsg_AbilityPing::set_mana_needed(::google::protobuf::uint32 value) {
  set_has_mana_needed();
  mana_needed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AbilityPing.mana_needed)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TE_UnitAnimation

// optional int32 entity = 1;
inline bool CDOTAUserMsg_TE_UnitAnimation::has_entity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_has_entity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_has_entity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_entity() {
  entity_ = 0;
  clear_has_entity();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_UnitAnimation::entity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_UnitAnimation.entity)
  return entity_;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_entity(::google::protobuf::int32 value) {
  set_has_entity();
  entity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_UnitAnimation.entity)
}

// optional int32 sequenceVariant = 2;
inline bool CDOTAUserMsg_TE_UnitAnimation::has_sequencevariant() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_has_sequencevariant() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_has_sequencevariant() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_sequencevariant() {
  sequencevariant_ = 0;
  clear_has_sequencevariant();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_UnitAnimation::sequencevariant() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_UnitAnimation.sequenceVariant)
  return sequencevariant_;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_sequencevariant(::google::protobuf::int32 value) {
  set_has_sequencevariant();
  sequencevariant_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_UnitAnimation.sequenceVariant)
}

// optional float playbackrate = 3;
inline bool CDOTAUserMsg_TE_UnitAnimation::has_playbackrate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_has_playbackrate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_has_playbackrate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_playbackrate() {
  playbackrate_ = 0;
  clear_has_playbackrate();
}
inline float CDOTAUserMsg_TE_UnitAnimation::playbackrate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_UnitAnimation.playbackrate)
  return playbackrate_;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_playbackrate(float value) {
  set_has_playbackrate();
  playbackrate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_UnitAnimation.playbackrate)
}

// optional float castpoint = 4;
inline bool CDOTAUserMsg_TE_UnitAnimation::has_castpoint() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_has_castpoint() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_has_castpoint() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_castpoint() {
  castpoint_ = 0;
  clear_has_castpoint();
}
inline float CDOTAUserMsg_TE_UnitAnimation::castpoint() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_UnitAnimation.castpoint)
  return castpoint_;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_castpoint(float value) {
  set_has_castpoint();
  castpoint_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_UnitAnimation.castpoint)
}

// optional int32 type = 5;
inline bool CDOTAUserMsg_TE_UnitAnimation::has_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_has_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_has_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_UnitAnimation::type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_UnitAnimation.type)
  return type_;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_type(::google::protobuf::int32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_UnitAnimation.type)
}

// optional int32 activity = 6;
inline bool CDOTAUserMsg_TE_UnitAnimation::has_activity() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_has_activity() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_has_activity() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_TE_UnitAnimation::clear_activity() {
  activity_ = 0;
  clear_has_activity();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_UnitAnimation::activity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_UnitAnimation.activity)
  return activity_;
}
inline void CDOTAUserMsg_TE_UnitAnimation::set_activity(::google::protobuf::int32 value) {
  set_has_activity();
  activity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_UnitAnimation.activity)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_TE_UnitAnimationEnd

// optional int32 entity = 1;
inline bool CDOTAUserMsg_TE_UnitAnimationEnd::has_entity() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::set_has_entity() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::clear_has_entity() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::clear_entity() {
  entity_ = 0;
  clear_has_entity();
}
inline ::google::protobuf::int32 CDOTAUserMsg_TE_UnitAnimationEnd::entity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_UnitAnimationEnd.entity)
  return entity_;
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::set_entity(::google::protobuf::int32 value) {
  set_has_entity();
  entity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_UnitAnimationEnd.entity)
}

// optional bool snap = 2;
inline bool CDOTAUserMsg_TE_UnitAnimationEnd::has_snap() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::set_has_snap() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::clear_has_snap() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::clear_snap() {
  snap_ = false;
  clear_has_snap();
}
inline bool CDOTAUserMsg_TE_UnitAnimationEnd::snap() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_TE_UnitAnimationEnd.snap)
  return snap_;
}
inline void CDOTAUserMsg_TE_UnitAnimationEnd::set_snap(bool value) {
  set_has_snap();
  snap_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_TE_UnitAnimationEnd.snap)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ShowGenericPopup

// required string header = 1;
inline bool CDOTAUserMsg_ShowGenericPopup::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ShowGenericPopup::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_header() {
  header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_header();
}
inline const ::std::string& CDOTAUserMsg_ShowGenericPopup::header() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ShowGenericPopup.header)
  return header_.GetNoArena();
}
inline void CDOTAUserMsg_ShowGenericPopup::set_header(const ::std::string& value) {
  set_has_header();
  header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ShowGenericPopup.header)
}
#if LANG_CXX11
inline void CDOTAUserMsg_ShowGenericPopup::set_header(::std::string&& value) {
  set_has_header();
  header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_ShowGenericPopup.header)
}
#endif
inline void CDOTAUserMsg_ShowGenericPopup::set_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_header();
  header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_ShowGenericPopup.header)
}
inline void CDOTAUserMsg_ShowGenericPopup::set_header(const char* value, size_t size) {
  set_has_header();
  header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_ShowGenericPopup.header)
}
inline ::std::string* CDOTAUserMsg_ShowGenericPopup::mutable_header() {
  set_has_header();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ShowGenericPopup.header)
  return header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_ShowGenericPopup::release_header() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ShowGenericPopup.header)
  clear_has_header();
  return header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_ShowGenericPopup::set_allocated_header(::std::string* header) {
  if (header != NULL) {
    set_has_header();
  } else {
    clear_has_header();
  }
  header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ShowGenericPopup.header)
}

// required string body = 2;
inline bool CDOTAUserMsg_ShowGenericPopup::has_body() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ShowGenericPopup::set_has_body() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_has_body() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_body() {
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_body();
}
inline const ::std::string& CDOTAUserMsg_ShowGenericPopup::body() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ShowGenericPopup.body)
  return body_.GetNoArena();
}
inline void CDOTAUserMsg_ShowGenericPopup::set_body(const ::std::string& value) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ShowGenericPopup.body)
}
#if LANG_CXX11
inline void CDOTAUserMsg_ShowGenericPopup::set_body(::std::string&& value) {
  set_has_body();
  body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_ShowGenericPopup.body)
}
#endif
inline void CDOTAUserMsg_ShowGenericPopup::set_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_ShowGenericPopup.body)
}
inline void CDOTAUserMsg_ShowGenericPopup::set_body(const char* value, size_t size) {
  set_has_body();
  body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_ShowGenericPopup.body)
}
inline ::std::string* CDOTAUserMsg_ShowGenericPopup::mutable_body() {
  set_has_body();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ShowGenericPopup.body)
  return body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_ShowGenericPopup::release_body() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ShowGenericPopup.body)
  clear_has_body();
  return body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_ShowGenericPopup::set_allocated_body(::std::string* body) {
  if (body != NULL) {
    set_has_body();
  } else {
    clear_has_body();
  }
  body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), body);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ShowGenericPopup.body)
}

// optional string param1 = 3;
inline bool CDOTAUserMsg_ShowGenericPopup::has_param1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ShowGenericPopup::set_has_param1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_has_param1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_param1() {
  param1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param1();
}
inline const ::std::string& CDOTAUserMsg_ShowGenericPopup::param1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ShowGenericPopup.param1)
  return param1_.GetNoArena();
}
inline void CDOTAUserMsg_ShowGenericPopup::set_param1(const ::std::string& value) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ShowGenericPopup.param1)
}
#if LANG_CXX11
inline void CDOTAUserMsg_ShowGenericPopup::set_param1(::std::string&& value) {
  set_has_param1();
  param1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_ShowGenericPopup.param1)
}
#endif
inline void CDOTAUserMsg_ShowGenericPopup::set_param1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_ShowGenericPopup.param1)
}
inline void CDOTAUserMsg_ShowGenericPopup::set_param1(const char* value, size_t size) {
  set_has_param1();
  param1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_ShowGenericPopup.param1)
}
inline ::std::string* CDOTAUserMsg_ShowGenericPopup::mutable_param1() {
  set_has_param1();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ShowGenericPopup.param1)
  return param1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_ShowGenericPopup::release_param1() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ShowGenericPopup.param1)
  clear_has_param1();
  return param1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_ShowGenericPopup::set_allocated_param1(::std::string* param1) {
  if (param1 != NULL) {
    set_has_param1();
  } else {
    clear_has_param1();
  }
  param1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param1);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ShowGenericPopup.param1)
}

// optional string param2 = 4;
inline bool CDOTAUserMsg_ShowGenericPopup::has_param2() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_ShowGenericPopup::set_has_param2() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_has_param2() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_param2() {
  param2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_param2();
}
inline const ::std::string& CDOTAUserMsg_ShowGenericPopup::param2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ShowGenericPopup.param2)
  return param2_.GetNoArena();
}
inline void CDOTAUserMsg_ShowGenericPopup::set_param2(const ::std::string& value) {
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ShowGenericPopup.param2)
}
#if LANG_CXX11
inline void CDOTAUserMsg_ShowGenericPopup::set_param2(::std::string&& value) {
  set_has_param2();
  param2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_ShowGenericPopup.param2)
}
#endif
inline void CDOTAUserMsg_ShowGenericPopup::set_param2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_ShowGenericPopup.param2)
}
inline void CDOTAUserMsg_ShowGenericPopup::set_param2(const char* value, size_t size) {
  set_has_param2();
  param2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_ShowGenericPopup.param2)
}
inline ::std::string* CDOTAUserMsg_ShowGenericPopup::mutable_param2() {
  set_has_param2();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ShowGenericPopup.param2)
  return param2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_ShowGenericPopup::release_param2() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ShowGenericPopup.param2)
  clear_has_param2();
  return param2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_ShowGenericPopup::set_allocated_param2(::std::string* param2) {
  if (param2 != NULL) {
    set_has_param2();
  } else {
    clear_has_param2();
  }
  param2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), param2);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ShowGenericPopup.param2)
}

// optional bool tint_screen = 5;
inline bool CDOTAUserMsg_ShowGenericPopup::has_tint_screen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_ShowGenericPopup::set_has_tint_screen() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_has_tint_screen() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_tint_screen() {
  tint_screen_ = false;
  clear_has_tint_screen();
}
inline bool CDOTAUserMsg_ShowGenericPopup::tint_screen() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ShowGenericPopup.tint_screen)
  return tint_screen_;
}
inline void CDOTAUserMsg_ShowGenericPopup::set_tint_screen(bool value) {
  set_has_tint_screen();
  tint_screen_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ShowGenericPopup.tint_screen)
}

// optional bool show_no_other_dialogs = 6;
inline bool CDOTAUserMsg_ShowGenericPopup::has_show_no_other_dialogs() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_ShowGenericPopup::set_has_show_no_other_dialogs() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_has_show_no_other_dialogs() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_ShowGenericPopup::clear_show_no_other_dialogs() {
  show_no_other_dialogs_ = false;
  clear_has_show_no_other_dialogs();
}
inline bool CDOTAUserMsg_ShowGenericPopup::show_no_other_dialogs() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ShowGenericPopup.show_no_other_dialogs)
  return show_no_other_dialogs_;
}
inline void CDOTAUserMsg_ShowGenericPopup::set_show_no_other_dialogs(bool value) {
  set_has_show_no_other_dialogs();
  show_no_other_dialogs_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ShowGenericPopup.show_no_other_dialogs)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_VoteStart

// optional string title = 1;
inline bool CDOTAUserMsg_VoteStart::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_VoteStart::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_VoteStart::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_VoteStart::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& CDOTAUserMsg_VoteStart::title() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_VoteStart.title)
  return title_.GetNoArena();
}
inline void CDOTAUserMsg_VoteStart::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_VoteStart.title)
}
#if LANG_CXX11
inline void CDOTAUserMsg_VoteStart::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_VoteStart.title)
}
#endif
inline void CDOTAUserMsg_VoteStart::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_VoteStart.title)
}
inline void CDOTAUserMsg_VoteStart::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_VoteStart.title)
}
inline ::std::string* CDOTAUserMsg_VoteStart::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_VoteStart.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_VoteStart::release_title() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_VoteStart.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_VoteStart::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_VoteStart.title)
}

// optional float duration = 2;
inline bool CDOTAUserMsg_VoteStart::has_duration() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_VoteStart::set_has_duration() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_VoteStart::clear_has_duration() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_VoteStart::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CDOTAUserMsg_VoteStart::duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_VoteStart.duration)
  return duration_;
}
inline void CDOTAUserMsg_VoteStart::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_VoteStart.duration)
}

// optional int32 choice_count = 3;
inline bool CDOTAUserMsg_VoteStart::has_choice_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_VoteStart::set_has_choice_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_VoteStart::clear_has_choice_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_VoteStart::clear_choice_count() {
  choice_count_ = 0;
  clear_has_choice_count();
}
inline ::google::protobuf::int32 CDOTAUserMsg_VoteStart::choice_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_VoteStart.choice_count)
  return choice_count_;
}
inline void CDOTAUserMsg_VoteStart::set_choice_count(::google::protobuf::int32 value) {
  set_has_choice_count();
  choice_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_VoteStart.choice_count)
}

// repeated string choices = 4;
inline int CDOTAUserMsg_VoteStart::choices_size() const {
  return choices_.size();
}
inline void CDOTAUserMsg_VoteStart::clear_choices() {
  choices_.Clear();
}
inline const ::std::string& CDOTAUserMsg_VoteStart::choices(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_VoteStart.choices)
  return choices_.Get(index);
}
inline ::std::string* CDOTAUserMsg_VoteStart::mutable_choices(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_VoteStart.choices)
  return choices_.Mutable(index);
}
inline void CDOTAUserMsg_VoteStart::set_choices(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_VoteStart.choices)
  choices_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CDOTAUserMsg_VoteStart::set_choices(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_VoteStart.choices)
  choices_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CDOTAUserMsg_VoteStart::set_choices(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  choices_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_VoteStart.choices)
}
inline void CDOTAUserMsg_VoteStart::set_choices(int index, const char* value, size_t size) {
  choices_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_VoteStart.choices)
}
inline ::std::string* CDOTAUserMsg_VoteStart::add_choices() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CDOTAUserMsg_VoteStart.choices)
  return choices_.Add();
}
inline void CDOTAUserMsg_VoteStart::add_choices(const ::std::string& value) {
  choices_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_VoteStart.choices)
}
#if LANG_CXX11
inline void CDOTAUserMsg_VoteStart::add_choices(::std::string&& value) {
  choices_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_VoteStart.choices)
}
#endif
inline void CDOTAUserMsg_VoteStart::add_choices(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  choices_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CDOTAUserMsg_VoteStart.choices)
}
inline void CDOTAUserMsg_VoteStart::add_choices(const char* value, size_t size) {
  choices_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CDOTAUserMsg_VoteStart.choices)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CDOTAUserMsg_VoteStart::choices() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_VoteStart.choices)
  return choices_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CDOTAUserMsg_VoteStart::mutable_choices() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_VoteStart.choices)
  return &choices_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_VoteUpdate

// repeated int32 choice_counts = 1;
inline int CDOTAUserMsg_VoteUpdate::choice_counts_size() const {
  return choice_counts_.size();
}
inline void CDOTAUserMsg_VoteUpdate::clear_choice_counts() {
  choice_counts_.Clear();
}
inline ::google::protobuf::int32 CDOTAUserMsg_VoteUpdate::choice_counts(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_VoteUpdate.choice_counts)
  return choice_counts_.Get(index);
}
inline void CDOTAUserMsg_VoteUpdate::set_choice_counts(int index, ::google::protobuf::int32 value) {
  choice_counts_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_VoteUpdate.choice_counts)
}
inline void CDOTAUserMsg_VoteUpdate::add_choice_counts(::google::protobuf::int32 value) {
  choice_counts_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_VoteUpdate.choice_counts)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CDOTAUserMsg_VoteUpdate::choice_counts() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_VoteUpdate.choice_counts)
  return choice_counts_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CDOTAUserMsg_VoteUpdate::mutable_choice_counts() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_VoteUpdate.choice_counts)
  return &choice_counts_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_VoteEnd

// optional int32 selected_choice = 1;
inline bool CDOTAUserMsg_VoteEnd::has_selected_choice() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_VoteEnd::set_has_selected_choice() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_VoteEnd::clear_has_selected_choice() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_VoteEnd::clear_selected_choice() {
  selected_choice_ = 0;
  clear_has_selected_choice();
}
inline ::google::protobuf::int32 CDOTAUserMsg_VoteEnd::selected_choice() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_VoteEnd.selected_choice)
  return selected_choice_;
}
inline void CDOTAUserMsg_VoteEnd::set_selected_choice(::google::protobuf::int32 value) {
  set_has_selected_choice();
  selected_choice_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_VoteEnd.selected_choice)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_BoosterStatePlayer

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_BoosterStatePlayer::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_BoosterStatePlayer::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BoosterStatePlayer.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BoosterStatePlayer.player_id)
}

// optional float bonus = 2;
inline bool CDOTAUserMsg_BoosterStatePlayer::has_bonus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_has_bonus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_has_bonus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_bonus() {
  bonus_ = 0;
  clear_has_bonus();
}
inline float CDOTAUserMsg_BoosterStatePlayer::bonus() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BoosterStatePlayer.bonus)
  return bonus_;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_bonus(float value) {
  set_has_bonus();
  bonus_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BoosterStatePlayer.bonus)
}

// optional float event_bonus = 3;
inline bool CDOTAUserMsg_BoosterStatePlayer::has_event_bonus() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_has_event_bonus() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_has_event_bonus() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_event_bonus() {
  event_bonus_ = 0;
  clear_has_event_bonus();
}
inline float CDOTAUserMsg_BoosterStatePlayer::event_bonus() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BoosterStatePlayer.event_bonus)
  return event_bonus_;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_event_bonus(float value) {
  set_has_event_bonus();
  event_bonus_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BoosterStatePlayer.event_bonus)
}

// optional uint32 bonus_item_id = 4;
inline bool CDOTAUserMsg_BoosterStatePlayer::has_bonus_item_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_has_bonus_item_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_has_bonus_item_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_bonus_item_id() {
  bonus_item_id_ = 0u;
  clear_has_bonus_item_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_BoosterStatePlayer::bonus_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BoosterStatePlayer.bonus_item_id)
  return bonus_item_id_;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_bonus_item_id(::google::protobuf::uint32 value) {
  set_has_bonus_item_id();
  bonus_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BoosterStatePlayer.bonus_item_id)
}

// optional uint32 event_bonus_item_id = 5;
inline bool CDOTAUserMsg_BoosterStatePlayer::has_event_bonus_item_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_has_event_bonus_item_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_has_event_bonus_item_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_BoosterStatePlayer::clear_event_bonus_item_id() {
  event_bonus_item_id_ = 0u;
  clear_has_event_bonus_item_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_BoosterStatePlayer::event_bonus_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BoosterStatePlayer.event_bonus_item_id)
  return event_bonus_item_id_;
}
inline void CDOTAUserMsg_BoosterStatePlayer::set_event_bonus_item_id(::google::protobuf::uint32 value) {
  set_has_event_bonus_item_id();
  event_bonus_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BoosterStatePlayer.event_bonus_item_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_BoosterState

// repeated .proto.dota.CDOTAUserMsg_BoosterStatePlayer boosted_players = 1;
inline int CDOTAUserMsg_BoosterState::boosted_players_size() const {
  return boosted_players_.size();
}
inline void CDOTAUserMsg_BoosterState::clear_boosted_players() {
  boosted_players_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_BoosterStatePlayer& CDOTAUserMsg_BoosterState::boosted_players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BoosterState.boosted_players)
  return boosted_players_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_BoosterStatePlayer* CDOTAUserMsg_BoosterState::mutable_boosted_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_BoosterState.boosted_players)
  return boosted_players_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_BoosterStatePlayer* CDOTAUserMsg_BoosterState::add_boosted_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_BoosterState.boosted_players)
  return boosted_players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_BoosterStatePlayer >*
CDOTAUserMsg_BoosterState::mutable_boosted_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_BoosterState.boosted_players)
  return &boosted_players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_BoosterStatePlayer >&
CDOTAUserMsg_BoosterState::boosted_players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_BoosterState.boosted_players)
  return boosted_players_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_PlayerMMR

// repeated sint32 mmr = 1 [packed = true];
inline int CDOTAUserMsg_PlayerMMR::mmr_size() const {
  return mmr_.size();
}
inline void CDOTAUserMsg_PlayerMMR::clear_mmr() {
  mmr_.Clear();
}
inline ::google::protobuf::int32 CDOTAUserMsg_PlayerMMR::mmr(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_PlayerMMR.mmr)
  return mmr_.Get(index);
}
inline void CDOTAUserMsg_PlayerMMR::set_mmr(int index, ::google::protobuf::int32 value) {
  mmr_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_PlayerMMR.mmr)
}
inline void CDOTAUserMsg_PlayerMMR::add_mmr(::google::protobuf::int32 value) {
  mmr_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_PlayerMMR.mmr)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CDOTAUserMsg_PlayerMMR::mmr() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_PlayerMMR.mmr)
  return mmr_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CDOTAUserMsg_PlayerMMR::mutable_mmr() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_PlayerMMR.mmr)
  return &mmr_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_AbilitySteal

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_AbilitySteal::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_AbilitySteal::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_AbilitySteal::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_AbilitySteal::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_AbilitySteal::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AbilitySteal.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_AbilitySteal::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AbilitySteal.player_id)
}

// optional uint32 ability_id = 2;
inline bool CDOTAUserMsg_AbilitySteal::has_ability_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_AbilitySteal::set_has_ability_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_AbilitySteal::clear_has_ability_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_AbilitySteal::clear_ability_id() {
  ability_id_ = 0u;
  clear_has_ability_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_AbilitySteal::ability_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AbilitySteal.ability_id)
  return ability_id_;
}
inline void CDOTAUserMsg_AbilitySteal::set_ability_id(::google::protobuf::uint32 value) {
  set_has_ability_id();
  ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AbilitySteal.ability_id)
}

// optional uint32 ability_level = 3;
inline bool CDOTAUserMsg_AbilitySteal::has_ability_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_AbilitySteal::set_has_ability_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_AbilitySteal::clear_has_ability_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_AbilitySteal::clear_ability_level() {
  ability_level_ = 0u;
  clear_has_ability_level();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_AbilitySteal::ability_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_AbilitySteal.ability_level)
  return ability_level_;
}
inline void CDOTAUserMsg_AbilitySteal::set_ability_level(::google::protobuf::uint32 value) {
  set_has_ability_level();
  ability_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_AbilitySteal.ability_level)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsHeroLookup

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_StatsHeroLookup::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_StatsHeroLookup::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_StatsHeroLookup::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_StatsHeroLookup::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_StatsHeroLookup::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroLookup.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_StatsHeroLookup::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroLookup.player_id)
}

// optional int32 hero_id = 2;
inline bool CDOTAUserMsg_StatsHeroLookup::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_StatsHeroLookup::set_has_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_StatsHeroLookup::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_StatsHeroLookup::clear_hero_id() {
  hero_id_ = 0;
  clear_has_hero_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_StatsHeroLookup::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroLookup.hero_id)
  return hero_id_;
}
inline void CDOTAUserMsg_StatsHeroLookup::set_hero_id(::google::protobuf::int32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroLookup.hero_id)
}

// optional string hero_name = 3;
inline bool CDOTAUserMsg_StatsHeroLookup::has_hero_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_StatsHeroLookup::set_has_hero_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_StatsHeroLookup::clear_has_hero_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_StatsHeroLookup::clear_hero_name() {
  hero_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hero_name();
}
inline const ::std::string& CDOTAUserMsg_StatsHeroLookup::hero_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroLookup.hero_name)
  return hero_name_.GetNoArena();
}
inline void CDOTAUserMsg_StatsHeroLookup::set_hero_name(const ::std::string& value) {
  set_has_hero_name();
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroLookup.hero_name)
}
#if LANG_CXX11
inline void CDOTAUserMsg_StatsHeroLookup::set_hero_name(::std::string&& value) {
  set_has_hero_name();
  hero_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_StatsHeroLookup.hero_name)
}
#endif
inline void CDOTAUserMsg_StatsHeroLookup::set_hero_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hero_name();
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_StatsHeroLookup.hero_name)
}
inline void CDOTAUserMsg_StatsHeroLookup::set_hero_name(const char* value, size_t size) {
  set_has_hero_name();
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_StatsHeroLookup.hero_name)
}
inline ::std::string* CDOTAUserMsg_StatsHeroLookup::mutable_hero_name() {
  set_has_hero_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsHeroLookup.hero_name)
  return hero_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_StatsHeroLookup::release_hero_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_StatsHeroLookup.hero_name)
  clear_has_hero_name();
  return hero_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_StatsHeroLookup::set_allocated_hero_name(::std::string* hero_name) {
  if (hero_name != NULL) {
    set_has_hero_name();
  } else {
    clear_has_hero_name();
  }
  hero_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_StatsHeroLookup.hero_name)
}

// optional string persona = 4;
inline bool CDOTAUserMsg_StatsHeroLookup::has_persona() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_StatsHeroLookup::set_has_persona() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_StatsHeroLookup::clear_has_persona() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_StatsHeroLookup::clear_persona() {
  persona_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_persona();
}
inline const ::std::string& CDOTAUserMsg_StatsHeroLookup::persona() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroLookup.persona)
  return persona_.GetNoArena();
}
inline void CDOTAUserMsg_StatsHeroLookup::set_persona(const ::std::string& value) {
  set_has_persona();
  persona_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroLookup.persona)
}
#if LANG_CXX11
inline void CDOTAUserMsg_StatsHeroLookup::set_persona(::std::string&& value) {
  set_has_persona();
  persona_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_StatsHeroLookup.persona)
}
#endif
inline void CDOTAUserMsg_StatsHeroLookup::set_persona(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_persona();
  persona_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_StatsHeroLookup.persona)
}
inline void CDOTAUserMsg_StatsHeroLookup::set_persona(const char* value, size_t size) {
  set_has_persona();
  persona_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_StatsHeroLookup.persona)
}
inline ::std::string* CDOTAUserMsg_StatsHeroLookup::mutable_persona() {
  set_has_persona();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsHeroLookup.persona)
  return persona_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_StatsHeroLookup::release_persona() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_StatsHeroLookup.persona)
  clear_has_persona();
  return persona_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_StatsHeroLookup::set_allocated_persona(::std::string* persona) {
  if (persona != NULL) {
    set_has_persona();
  } else {
    clear_has_persona();
  }
  persona_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_StatsHeroLookup.persona)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsHeroPositionInfo_PositionPair

// optional .proto.dota.DOTA_POSITION_CATEGORY position_category = 1 [default = DOTA_POSITION_NONE];
inline bool CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::has_position_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::set_has_position_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::clear_has_position_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::clear_position_category() {
  position_category_ = 0;
  clear_has_position_category();
}
inline ::proto::dota::DOTA_POSITION_CATEGORY CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::position_category() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.position_category)
  return static_cast< ::proto::dota::DOTA_POSITION_CATEGORY >(position_category_);
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::set_position_category(::proto::dota::DOTA_POSITION_CATEGORY value) {
  assert(::proto::dota::DOTA_POSITION_CATEGORY_IsValid(value));
  set_has_position_category();
  position_category_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.position_category)
}

// optional uint32 position_count = 2;
inline bool CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::has_position_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::set_has_position_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::clear_has_position_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::clear_position_count() {
  position_count_ = 0u;
  clear_has_position_count();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::position_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.position_count)
  return position_count_;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo_PositionPair::set_position_count(::google::protobuf::uint32 value) {
  set_has_position_count();
  position_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair.position_count)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsHeroPositionInfo

// optional float average_position = 1;
inline bool CDOTAUserMsg_StatsHeroPositionInfo::has_average_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo::set_has_average_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo::clear_has_average_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo::clear_average_position() {
  average_position_ = 0;
  clear_has_average_position();
}
inline float CDOTAUserMsg_StatsHeroPositionInfo::average_position() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.average_position)
  return average_position_;
}
inline void CDOTAUserMsg_StatsHeroPositionInfo::set_average_position(float value) {
  set_has_average_position();
  average_position_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.average_position)
}

// repeated .proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.PositionPair position_details = 2;
inline int CDOTAUserMsg_StatsHeroPositionInfo::position_details_size() const {
  return position_details_.size();
}
inline void CDOTAUserMsg_StatsHeroPositionInfo::clear_position_details() {
  position_details_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair& CDOTAUserMsg_StatsHeroPositionInfo::position_details(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.position_details)
  return position_details_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* CDOTAUserMsg_StatsHeroPositionInfo::mutable_position_details(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.position_details)
  return position_details_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair* CDOTAUserMsg_StatsHeroPositionInfo::add_position_details() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.position_details)
  return position_details_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair >*
CDOTAUserMsg_StatsHeroPositionInfo::mutable_position_details() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.position_details)
  return &position_details_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo_PositionPair >&
CDOTAUserMsg_StatsHeroPositionInfo::position_details() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsHeroPositionInfo.position_details)
  return position_details_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsHeroMinuteDetails

// optional uint32 last_hits = 1;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_last_hits() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_has_last_hits() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_has_last_hits() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_last_hits() {
  last_hits_ = 0u;
  clear_has_last_hits();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::last_hits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.last_hits)
  return last_hits_;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_last_hits(::google::protobuf::uint32 value) {
  set_has_last_hits();
  last_hits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.last_hits)
}

// optional uint32 hero_kills = 2;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_hero_kills() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_has_hero_kills() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_has_hero_kills() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_hero_kills() {
  hero_kills_ = 0u;
  clear_has_hero_kills();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::hero_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.hero_kills)
  return hero_kills_;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_hero_kills(::google::protobuf::uint32 value) {
  set_has_hero_kills();
  hero_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.hero_kills)
}

// optional uint32 hero_damage = 3;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_hero_damage() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_has_hero_damage() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_has_hero_damage() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_hero_damage() {
  hero_damage_ = 0u;
  clear_has_hero_damage();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::hero_damage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.hero_damage)
  return hero_damage_;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_hero_damage(::google::protobuf::uint32 value) {
  set_has_hero_damage();
  hero_damage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.hero_damage)
}

// optional uint32 tower_damage = 4;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_tower_damage() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_has_tower_damage() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_has_tower_damage() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_tower_damage() {
  tower_damage_ = 0u;
  clear_has_tower_damage();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::tower_damage() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.tower_damage)
  return tower_damage_;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_tower_damage(::google::protobuf::uint32 value) {
  set_has_tower_damage();
  tower_damage_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.tower_damage)
}

// optional .proto.dota.CDOTAUserMsg_StatsHeroPositionInfo position_info = 5;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_position_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_has_position_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_has_position_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_position_info() {
  if (position_info_ != NULL) position_info_->::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo::Clear();
  clear_has_position_info();
}
inline const ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo& CDOTAUserMsg_StatsHeroMinuteDetails::position_info() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.position_info)
  return position_info_ != NULL ? *position_info_
                         : *::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo* CDOTAUserMsg_StatsHeroMinuteDetails::mutable_position_info() {
  set_has_position_info();
  if (position_info_ == NULL) {
    position_info_ = new ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.position_info)
  return position_info_;
}
inline ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo* CDOTAUserMsg_StatsHeroMinuteDetails::release_position_info() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.position_info)
  clear_has_position_info();
  ::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo* temp = position_info_;
  position_info_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_allocated_position_info(::proto::dota::CDOTAUserMsg_StatsHeroPositionInfo* position_info) {
  delete position_info_;
  position_info_ = position_info;
  if (position_info) {
    set_has_position_info();
  } else {
    clear_has_position_info();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.position_info)
}

// optional uint32 total_xp = 6;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_total_xp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_has_total_xp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_has_total_xp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_total_xp() {
  total_xp_ = 0u;
  clear_has_total_xp();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::total_xp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.total_xp)
  return total_xp_;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_total_xp(::google::protobuf::uint32 value) {
  set_has_total_xp();
  total_xp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.total_xp)
}

// optional uint32 net_worth = 7;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_net_worth() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_has_net_worth() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_has_net_worth() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_net_worth() {
  net_worth_ = 0u;
  clear_has_net_worth();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::net_worth() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.net_worth)
  return net_worth_;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_net_worth(::google::protobuf::uint32 value) {
  set_has_net_worth();
  net_worth_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.net_worth)
}

// optional uint32 harvested_creep_gold = 8;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_harvested_creep_gold() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_has_harvested_creep_gold() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_has_harvested_creep_gold() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_harvested_creep_gold() {
  harvested_creep_gold_ = 0u;
  clear_has_harvested_creep_gold();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::harvested_creep_gold() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.harvested_creep_gold)
  return harvested_creep_gold_;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_harvested_creep_gold(::google::protobuf::uint32 value) {
  set_has_harvested_creep_gold();
  harvested_creep_gold_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.harvested_creep_gold)
}

// optional uint32 claimed_farm = 9;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_claimed_farm() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_has_claimed_farm() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_has_claimed_farm() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_claimed_farm() {
  claimed_farm_ = 0u;
  clear_has_claimed_farm();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::claimed_farm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.claimed_farm)
  return claimed_farm_;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_claimed_farm(::google::protobuf::uint32 value) {
  set_has_claimed_farm();
  claimed_farm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.claimed_farm)
}

// optional uint32 wards_placed = 10;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_wards_placed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_has_wards_placed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_has_wards_placed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_wards_placed() {
  wards_placed_ = 0u;
  clear_has_wards_placed();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::wards_placed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.wards_placed)
  return wards_placed_;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_wards_placed(::google::protobuf::uint32 value) {
  set_has_wards_placed();
  wards_placed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.wards_placed)
}

// optional uint32 runes_collected = 11;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_runes_collected() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_has_runes_collected() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_has_runes_collected() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_runes_collected() {
  runes_collected_ = 0u;
  clear_has_runes_collected();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::runes_collected() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.runes_collected)
  return runes_collected_;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_runes_collected(::google::protobuf::uint32 value) {
  set_has_runes_collected();
  runes_collected_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.runes_collected)
}

// optional uint32 tps_used = 12;
inline bool CDOTAUserMsg_StatsHeroMinuteDetails::has_tps_used() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_has_tps_used() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_has_tps_used() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_tps_used() {
  tps_used_ = 0u;
  clear_has_tps_used();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::tps_used() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.tps_used)
  return tps_used_;
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_tps_used(::google::protobuf::uint32 value) {
  set_has_tps_used();
  tps_used_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.tps_used)
}

// repeated uint32 mana_spent = 13;
inline int CDOTAUserMsg_StatsHeroMinuteDetails::mana_spent_size() const {
  return mana_spent_.size();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_mana_spent() {
  mana_spent_.Clear();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::mana_spent(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.mana_spent)
  return mana_spent_.Get(index);
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_mana_spent(int index, ::google::protobuf::uint32 value) {
  mana_spent_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.mana_spent)
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::add_mana_spent(::google::protobuf::uint32 value) {
  mana_spent_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.mana_spent)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CDOTAUserMsg_StatsHeroMinuteDetails::mana_spent() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.mana_spent)
  return mana_spent_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CDOTAUserMsg_StatsHeroMinuteDetails::mutable_mana_spent() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.mana_spent)
  return &mana_spent_;
}

// repeated uint32 damage_absorbed = 14;
inline int CDOTAUserMsg_StatsHeroMinuteDetails::damage_absorbed_size() const {
  return damage_absorbed_.size();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_damage_absorbed() {
  damage_absorbed_.Clear();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::damage_absorbed(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.damage_absorbed)
  return damage_absorbed_.Get(index);
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_damage_absorbed(int index, ::google::protobuf::uint32 value) {
  damage_absorbed_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.damage_absorbed)
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::add_damage_absorbed(::google::protobuf::uint32 value) {
  damage_absorbed_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.damage_absorbed)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CDOTAUserMsg_StatsHeroMinuteDetails::damage_absorbed() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.damage_absorbed)
  return damage_absorbed_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CDOTAUserMsg_StatsHeroMinuteDetails::mutable_damage_absorbed() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.damage_absorbed)
  return &damage_absorbed_;
}

// repeated uint32 damage_done = 15;
inline int CDOTAUserMsg_StatsHeroMinuteDetails::damage_done_size() const {
  return damage_done_.size();
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::clear_damage_done() {
  damage_done_.Clear();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsHeroMinuteDetails::damage_done(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.damage_done)
  return damage_done_.Get(index);
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::set_damage_done(int index, ::google::protobuf::uint32 value) {
  damage_done_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.damage_done)
}
inline void CDOTAUserMsg_StatsHeroMinuteDetails::add_damage_done(::google::protobuf::uint32 value) {
  damage_done_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.damage_done)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CDOTAUserMsg_StatsHeroMinuteDetails::damage_done() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.damage_done)
  return damage_done_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CDOTAUserMsg_StatsHeroMinuteDetails::mutable_damage_done() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails.damage_done)
  return &damage_done_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance

// optional uint32 location_category = 1;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::has_location_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::set_has_location_category() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::clear_has_location_category() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::clear_location_category() {
  location_category_ = 0u;
  clear_has_location_category();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::location_category() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.location_category)
  return location_category_;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::set_location_category(::google::protobuf::uint32 value) {
  set_has_location_category();
  location_category_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.location_category)
}

// optional uint32 stat_type = 2;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::has_stat_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::set_has_stat_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::clear_has_stat_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::clear_stat_type() {
  stat_type_ = 0u;
  clear_has_stat_type();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::stat_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.stat_type)
  return stat_type_;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::set_stat_type(::google::protobuf::uint32 value) {
  set_has_stat_type();
  stat_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.stat_type)
}

// optional uint32 value = 3;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.value)
  return value_;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance.value)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsTeamMinuteDetails

// repeated .proto.dota.CDOTAUserMsg_StatsHeroMinuteDetails player_stats = 1;
inline int CDOTAUserMsg_StatsTeamMinuteDetails::player_stats_size() const {
  return player_stats_.size();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_player_stats() {
  player_stats_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_StatsHeroMinuteDetails& CDOTAUserMsg_StatsTeamMinuteDetails::player_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.player_stats)
  return player_stats_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsHeroMinuteDetails* CDOTAUserMsg_StatsTeamMinuteDetails::mutable_player_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.player_stats)
  return player_stats_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsHeroMinuteDetails* CDOTAUserMsg_StatsTeamMinuteDetails::add_player_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.player_stats)
  return player_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroMinuteDetails >*
CDOTAUserMsg_StatsTeamMinuteDetails::mutable_player_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.player_stats)
  return &player_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroMinuteDetails >&
CDOTAUserMsg_StatsTeamMinuteDetails::player_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.player_stats)
  return player_stats_;
}

// optional uint32 tower_kills = 2;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_tower_kills() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_has_tower_kills() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_has_tower_kills() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_tower_kills() {
  tower_kills_ = 0u;
  clear_has_tower_kills();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::tower_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.tower_kills)
  return tower_kills_;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_tower_kills(::google::protobuf::uint32 value) {
  set_has_tower_kills();
  tower_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.tower_kills)
}

// optional uint32 barrack_kills = 3;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_barrack_kills() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_has_barrack_kills() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_has_barrack_kills() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_barrack_kills() {
  barrack_kills_ = 0u;
  clear_has_barrack_kills();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::barrack_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.barrack_kills)
  return barrack_kills_;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_barrack_kills(::google::protobuf::uint32 value) {
  set_has_barrack_kills();
  barrack_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.barrack_kills)
}

// optional uint32 available_lane_creep_gold = 4;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_available_lane_creep_gold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_has_available_lane_creep_gold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_has_available_lane_creep_gold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_available_lane_creep_gold() {
  available_lane_creep_gold_ = 0u;
  clear_has_available_lane_creep_gold();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::available_lane_creep_gold() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.available_lane_creep_gold)
  return available_lane_creep_gold_;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_available_lane_creep_gold(::google::protobuf::uint32 value) {
  set_has_available_lane_creep_gold();
  available_lane_creep_gold_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.available_lane_creep_gold)
}

// optional uint32 balance_kill_value = 5;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_balance_kill_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_has_balance_kill_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_has_balance_kill_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_balance_kill_value() {
  balance_kill_value_ = 0u;
  clear_has_balance_kill_value();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::balance_kill_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.balance_kill_value)
  return balance_kill_value_;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_balance_kill_value(::google::protobuf::uint32 value) {
  set_has_balance_kill_value();
  balance_kill_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.balance_kill_value)
}

// optional uint32 balance_tower_value = 6;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_balance_tower_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_has_balance_tower_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_has_balance_tower_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_balance_tower_value() {
  balance_tower_value_ = 0u;
  clear_has_balance_tower_value();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::balance_tower_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.balance_tower_value)
  return balance_tower_value_;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_balance_tower_value(::google::protobuf::uint32 value) {
  set_has_balance_tower_value();
  balance_tower_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.balance_tower_value)
}

// optional uint32 balance_barracks_value = 7;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_balance_barracks_value() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_has_balance_barracks_value() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_has_balance_barracks_value() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_balance_barracks_value() {
  balance_barracks_value_ = 0u;
  clear_has_balance_barracks_value();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::balance_barracks_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.balance_barracks_value)
  return balance_barracks_value_;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_balance_barracks_value(::google::protobuf::uint32 value) {
  set_has_balance_barracks_value();
  balance_barracks_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.balance_barracks_value)
}

// optional uint32 balance_gold_value = 8;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_balance_gold_value() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_has_balance_gold_value() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_has_balance_gold_value() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_balance_gold_value() {
  balance_gold_value_ = 0u;
  clear_has_balance_gold_value();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::balance_gold_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.balance_gold_value)
  return balance_gold_value_;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_balance_gold_value(::google::protobuf::uint32 value) {
  set_has_balance_gold_value();
  balance_gold_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.balance_gold_value)
}

// optional uint32 balance_xp_value = 9;
inline bool CDOTAUserMsg_StatsTeamMinuteDetails::has_balance_xp_value() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_has_balance_xp_value() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_has_balance_xp_value() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_balance_xp_value() {
  balance_xp_value_ = 0u;
  clear_has_balance_xp_value();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsTeamMinuteDetails::balance_xp_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.balance_xp_value)
  return balance_xp_value_;
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::set_balance_xp_value(::google::protobuf::uint32 value) {
  set_has_balance_xp_value();
  balance_xp_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.balance_xp_value)
}

// repeated .proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.LocationPerformance lane_performance = 10;
inline int CDOTAUserMsg_StatsTeamMinuteDetails::lane_performance_size() const {
  return lane_performance_.size();
}
inline void CDOTAUserMsg_StatsTeamMinuteDetails::clear_lane_performance() {
  lane_performance_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance& CDOTAUserMsg_StatsTeamMinuteDetails::lane_performance(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.lane_performance)
  return lane_performance_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* CDOTAUserMsg_StatsTeamMinuteDetails::mutable_lane_performance(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.lane_performance)
  return lane_performance_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance* CDOTAUserMsg_StatsTeamMinuteDetails::add_lane_performance() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.lane_performance)
  return lane_performance_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance >*
CDOTAUserMsg_StatsTeamMinuteDetails::mutable_lane_performance() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.lane_performance)
  return &lane_performance_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails_LocationPerformance >&
CDOTAUserMsg_StatsTeamMinuteDetails::lane_performance() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails.lane_performance)
  return lane_performance_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsPlayerKillShare

// optional int32 player_id = 1;
inline bool CDOTAUserMsg_StatsPlayerKillShare::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_player_id() {
  player_id_ = 0;
  clear_has_player_id();
}
inline ::google::protobuf::int32 CDOTAUserMsg_StatsPlayerKillShare::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsPlayerKillShare.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_player_id(::google::protobuf::int32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsPlayerKillShare.player_id)
}

// optional float kill_share_percent = 2;
inline bool CDOTAUserMsg_StatsPlayerKillShare::has_kill_share_percent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_has_kill_share_percent() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_has_kill_share_percent() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_kill_share_percent() {
  kill_share_percent_ = 0;
  clear_has_kill_share_percent();
}
inline float CDOTAUserMsg_StatsPlayerKillShare::kill_share_percent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsPlayerKillShare.kill_share_percent)
  return kill_share_percent_;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_kill_share_percent(float value) {
  set_has_kill_share_percent();
  kill_share_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsPlayerKillShare.kill_share_percent)
}

// optional float player_loc_x = 3;
inline bool CDOTAUserMsg_StatsPlayerKillShare::has_player_loc_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_has_player_loc_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_has_player_loc_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_player_loc_x() {
  player_loc_x_ = 0;
  clear_has_player_loc_x();
}
inline float CDOTAUserMsg_StatsPlayerKillShare::player_loc_x() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsPlayerKillShare.player_loc_x)
  return player_loc_x_;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_player_loc_x(float value) {
  set_has_player_loc_x();
  player_loc_x_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsPlayerKillShare.player_loc_x)
}

// optional float player_loc_y = 4;
inline bool CDOTAUserMsg_StatsPlayerKillShare::has_player_loc_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_has_player_loc_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_has_player_loc_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_player_loc_y() {
  player_loc_y_ = 0;
  clear_has_player_loc_y();
}
inline float CDOTAUserMsg_StatsPlayerKillShare::player_loc_y() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsPlayerKillShare.player_loc_y)
  return player_loc_y_;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_player_loc_y(float value) {
  set_has_player_loc_y();
  player_loc_y_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsPlayerKillShare.player_loc_y)
}

// optional float health_percent = 5;
inline bool CDOTAUserMsg_StatsPlayerKillShare::has_health_percent() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_has_health_percent() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_has_health_percent() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_health_percent() {
  health_percent_ = 0;
  clear_has_health_percent();
}
inline float CDOTAUserMsg_StatsPlayerKillShare::health_percent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsPlayerKillShare.health_percent)
  return health_percent_;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_health_percent(float value) {
  set_has_health_percent();
  health_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsPlayerKillShare.health_percent)
}

// optional float mana_percent = 6;
inline bool CDOTAUserMsg_StatsPlayerKillShare::has_mana_percent() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_has_mana_percent() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_has_mana_percent() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::clear_mana_percent() {
  mana_percent_ = 0;
  clear_has_mana_percent();
}
inline float CDOTAUserMsg_StatsPlayerKillShare::mana_percent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsPlayerKillShare.mana_percent)
  return mana_percent_;
}
inline void CDOTAUserMsg_StatsPlayerKillShare::set_mana_percent(float value) {
  set_has_mana_percent();
  mana_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsPlayerKillShare.mana_percent)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsKillDetails

// optional uint32 victim_id = 1;
inline bool CDOTAUserMsg_StatsKillDetails::has_victim_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_StatsKillDetails::set_has_victim_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_StatsKillDetails::clear_has_victim_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_StatsKillDetails::clear_victim_id() {
  victim_id_ = 0u;
  clear_has_victim_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsKillDetails::victim_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsKillDetails.victim_id)
  return victim_id_;
}
inline void CDOTAUserMsg_StatsKillDetails::set_victim_id(::google::protobuf::uint32 value) {
  set_has_victim_id();
  victim_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsKillDetails.victim_id)
}

// repeated .proto.dota.CDOTAUserMsg_StatsPlayerKillShare kill_shares = 2;
inline int CDOTAUserMsg_StatsKillDetails::kill_shares_size() const {
  return kill_shares_.size();
}
inline void CDOTAUserMsg_StatsKillDetails::clear_kill_shares() {
  kill_shares_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_StatsPlayerKillShare& CDOTAUserMsg_StatsKillDetails::kill_shares(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsKillDetails.kill_shares)
  return kill_shares_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsPlayerKillShare* CDOTAUserMsg_StatsKillDetails::mutable_kill_shares(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsKillDetails.kill_shares)
  return kill_shares_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsPlayerKillShare* CDOTAUserMsg_StatsKillDetails::add_kill_shares() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsKillDetails.kill_shares)
  return kill_shares_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsPlayerKillShare >*
CDOTAUserMsg_StatsKillDetails::mutable_kill_shares() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsKillDetails.kill_shares)
  return &kill_shares_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsPlayerKillShare >&
CDOTAUserMsg_StatsKillDetails::kill_shares() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsKillDetails.kill_shares)
  return kill_shares_;
}

// optional uint32 damage_to_kill = 3;
inline bool CDOTAUserMsg_StatsKillDetails::has_damage_to_kill() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_StatsKillDetails::set_has_damage_to_kill() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_StatsKillDetails::clear_has_damage_to_kill() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_StatsKillDetails::clear_damage_to_kill() {
  damage_to_kill_ = 0u;
  clear_has_damage_to_kill();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsKillDetails::damage_to_kill() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsKillDetails.damage_to_kill)
  return damage_to_kill_;
}
inline void CDOTAUserMsg_StatsKillDetails::set_damage_to_kill(::google::protobuf::uint32 value) {
  set_has_damage_to_kill();
  damage_to_kill_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsKillDetails.damage_to_kill)
}

// optional uint32 effective_health = 4;
inline bool CDOTAUserMsg_StatsKillDetails::has_effective_health() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_StatsKillDetails::set_has_effective_health() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_StatsKillDetails::clear_has_effective_health() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_StatsKillDetails::clear_effective_health() {
  effective_health_ = 0u;
  clear_has_effective_health();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsKillDetails::effective_health() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsKillDetails.effective_health)
  return effective_health_;
}
inline void CDOTAUserMsg_StatsKillDetails::set_effective_health(::google::protobuf::uint32 value) {
  set_has_effective_health();
  effective_health_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsKillDetails.effective_health)
}

// optional float death_time = 5;
inline bool CDOTAUserMsg_StatsKillDetails::has_death_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_StatsKillDetails::set_has_death_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_StatsKillDetails::clear_has_death_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_StatsKillDetails::clear_death_time() {
  death_time_ = 0;
  clear_has_death_time();
}
inline float CDOTAUserMsg_StatsKillDetails::death_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsKillDetails.death_time)
  return death_time_;
}
inline void CDOTAUserMsg_StatsKillDetails::set_death_time(float value) {
  set_has_death_time();
  death_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsKillDetails.death_time)
}

// optional uint32 killer_id = 6;
inline bool CDOTAUserMsg_StatsKillDetails::has_killer_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_StatsKillDetails::set_has_killer_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_StatsKillDetails::clear_has_killer_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_StatsKillDetails::clear_killer_id() {
  killer_id_ = 0u;
  clear_has_killer_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsKillDetails::killer_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsKillDetails.killer_id)
  return killer_id_;
}
inline void CDOTAUserMsg_StatsKillDetails::set_killer_id(::google::protobuf::uint32 value) {
  set_has_killer_id();
  killer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsKillDetails.killer_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails

// repeated uint32 participants = 1;
inline int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::participants_size() const {
  return participants_.size();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::clear_participants() {
  participants_.Clear();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::participants(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.participants)
  return participants_.Get(index);
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::set_participants(int index, ::google::protobuf::uint32 value) {
  participants_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.participants)
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::add_participants(::google::protobuf::uint32 value) {
  participants_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.participants)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::participants() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.participants)
  return participants_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::mutable_participants() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.participants)
  return &participants_;
}

// repeated uint32 deaths = 2;
inline int CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::deaths_size() const {
  return deaths_.size();
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::clear_deaths() {
  deaths_.Clear();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::deaths(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.deaths)
  return deaths_.Get(index);
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::set_deaths(int index, ::google::protobuf::uint32 value) {
  deaths_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.deaths)
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::add_deaths(::google::protobuf::uint32 value) {
  deaths_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.deaths)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::deaths() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.deaths)
  return deaths_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::mutable_deaths() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.deaths)
  return &deaths_;
}

// optional uint32 gold_delta = 3;
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::has_gold_delta() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::set_has_gold_delta() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::clear_has_gold_delta() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::clear_gold_delta() {
  gold_delta_ = 0u;
  clear_has_gold_delta();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::gold_delta() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.gold_delta)
  return gold_delta_;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::set_gold_delta(::google::protobuf::uint32 value) {
  set_has_gold_delta();
  gold_delta_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.gold_delta)
}

// optional uint32 xp_delta = 4;
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::has_xp_delta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::set_has_xp_delta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::clear_has_xp_delta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::clear_xp_delta() {
  xp_delta_ = 0u;
  clear_has_xp_delta();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::xp_delta() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.xp_delta)
  return xp_delta_;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::set_xp_delta(::google::protobuf::uint32 value) {
  set_has_xp_delta();
  xp_delta_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails.xp_delta)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails

// optional float start_time = 1;
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::clear_start_time() {
  start_time_ = 0;
  clear_has_start_time();
}
inline float CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::start_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.start_time)
  return start_time_;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::set_start_time(float value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.start_time)
}

// optional float end_time = 2;
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::has_end_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::set_has_end_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::clear_end_time() {
  end_time_ = 0;
  clear_has_end_time();
}
inline float CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::end_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.end_time)
  return end_time_;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::set_end_time(float value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.end_time)
}

// optional .proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails radiant_fight_details = 3;
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::has_radiant_fight_details() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::set_has_radiant_fight_details() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::clear_has_radiant_fight_details() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::clear_radiant_fight_details() {
  if (radiant_fight_details_ != NULL) radiant_fight_details_->::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::Clear();
  clear_has_radiant_fight_details();
}
inline const ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::radiant_fight_details() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.radiant_fight_details)
  return radiant_fight_details_ != NULL ? *radiant_fight_details_
                         : *::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::mutable_radiant_fight_details() {
  set_has_radiant_fight_details();
  if (radiant_fight_details_ == NULL) {
    radiant_fight_details_ = new ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.radiant_fight_details)
  return radiant_fight_details_;
}
inline ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::release_radiant_fight_details() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.radiant_fight_details)
  clear_has_radiant_fight_details();
  ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* temp = radiant_fight_details_;
  radiant_fight_details_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::set_allocated_radiant_fight_details(::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* radiant_fight_details) {
  delete radiant_fight_details_;
  radiant_fight_details_ = radiant_fight_details;
  if (radiant_fight_details) {
    set_has_radiant_fight_details();
  } else {
    clear_has_radiant_fight_details();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.radiant_fight_details)
}

// optional .proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightTeamDetails dire_fight_details = 4;
inline bool CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::has_dire_fight_details() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::set_has_dire_fight_details() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::clear_has_dire_fight_details() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::clear_dire_fight_details() {
  if (dire_fight_details_ != NULL) dire_fight_details_->::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::Clear();
  clear_has_dire_fight_details();
}
inline const ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails& CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::dire_fight_details() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.dire_fight_details)
  return dire_fight_details_ != NULL ? *dire_fight_details_
                         : *::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails::internal_default_instance();
}
inline ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::mutable_dire_fight_details() {
  set_has_dire_fight_details();
  if (dire_fight_details_ == NULL) {
    dire_fight_details_ = new ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.dire_fight_details)
  return dire_fight_details_;
}
inline ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::release_dire_fight_details() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.dire_fight_details)
  clear_has_dire_fight_details();
  ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* temp = dire_fight_details_;
  dire_fight_details_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails::set_allocated_dire_fight_details(::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightTeamDetails* dire_fight_details) {
  delete dire_fight_details_;
  dire_fight_details_ = dire_fight_details;
  if (dire_fight_details) {
    set_has_dire_fight_details();
  } else {
    clear_has_dire_fight_details();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails.dire_fight_details)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_StatsMatchDetails

// repeated .proto.dota.CDOTAUserMsg_StatsHeroLookup hero_lookup = 1;
inline int CDOTAUserMsg_StatsMatchDetails::hero_lookup_size() const {
  return hero_lookup_.size();
}
inline void CDOTAUserMsg_StatsMatchDetails::clear_hero_lookup() {
  hero_lookup_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_StatsHeroLookup& CDOTAUserMsg_StatsMatchDetails::hero_lookup(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.hero_lookup)
  return hero_lookup_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsHeroLookup* CDOTAUserMsg_StatsMatchDetails::mutable_hero_lookup(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsMatchDetails.hero_lookup)
  return hero_lookup_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsHeroLookup* CDOTAUserMsg_StatsMatchDetails::add_hero_lookup() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsMatchDetails.hero_lookup)
  return hero_lookup_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroLookup >*
CDOTAUserMsg_StatsMatchDetails::mutable_hero_lookup() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.hero_lookup)
  return &hero_lookup_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsHeroLookup >&
CDOTAUserMsg_StatsMatchDetails::hero_lookup() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.hero_lookup)
  return hero_lookup_;
}

// repeated .proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails radiant_stats = 2;
inline int CDOTAUserMsg_StatsMatchDetails::radiant_stats_size() const {
  return radiant_stats_.size();
}
inline void CDOTAUserMsg_StatsMatchDetails::clear_radiant_stats() {
  radiant_stats_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails& CDOTAUserMsg_StatsMatchDetails::radiant_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.radiant_stats)
  return radiant_stats_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails* CDOTAUserMsg_StatsMatchDetails::mutable_radiant_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsMatchDetails.radiant_stats)
  return radiant_stats_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails* CDOTAUserMsg_StatsMatchDetails::add_radiant_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsMatchDetails.radiant_stats)
  return radiant_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails >*
CDOTAUserMsg_StatsMatchDetails::mutable_radiant_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.radiant_stats)
  return &radiant_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails >&
CDOTAUserMsg_StatsMatchDetails::radiant_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.radiant_stats)
  return radiant_stats_;
}

// repeated .proto.dota.CDOTAUserMsg_StatsTeamMinuteDetails dire_stats = 3;
inline int CDOTAUserMsg_StatsMatchDetails::dire_stats_size() const {
  return dire_stats_.size();
}
inline void CDOTAUserMsg_StatsMatchDetails::clear_dire_stats() {
  dire_stats_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails& CDOTAUserMsg_StatsMatchDetails::dire_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.dire_stats)
  return dire_stats_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails* CDOTAUserMsg_StatsMatchDetails::mutable_dire_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsMatchDetails.dire_stats)
  return dire_stats_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails* CDOTAUserMsg_StatsMatchDetails::add_dire_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsMatchDetails.dire_stats)
  return dire_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails >*
CDOTAUserMsg_StatsMatchDetails::mutable_dire_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.dire_stats)
  return &dire_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsTeamMinuteDetails >&
CDOTAUserMsg_StatsMatchDetails::dire_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.dire_stats)
  return dire_stats_;
}

// repeated .proto.dota.CDOTAUserMsg_StatsKillDetails radiant_kills = 4;
inline int CDOTAUserMsg_StatsMatchDetails::radiant_kills_size() const {
  return radiant_kills_.size();
}
inline void CDOTAUserMsg_StatsMatchDetails::clear_radiant_kills() {
  radiant_kills_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_StatsKillDetails& CDOTAUserMsg_StatsMatchDetails::radiant_kills(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.radiant_kills)
  return radiant_kills_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsKillDetails* CDOTAUserMsg_StatsMatchDetails::mutable_radiant_kills(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsMatchDetails.radiant_kills)
  return radiant_kills_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsKillDetails* CDOTAUserMsg_StatsMatchDetails::add_radiant_kills() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsMatchDetails.radiant_kills)
  return radiant_kills_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsKillDetails >*
CDOTAUserMsg_StatsMatchDetails::mutable_radiant_kills() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.radiant_kills)
  return &radiant_kills_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsKillDetails >&
CDOTAUserMsg_StatsMatchDetails::radiant_kills() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.radiant_kills)
  return radiant_kills_;
}

// repeated .proto.dota.CDOTAUserMsg_StatsKillDetails dire_kills = 5;
inline int CDOTAUserMsg_StatsMatchDetails::dire_kills_size() const {
  return dire_kills_.size();
}
inline void CDOTAUserMsg_StatsMatchDetails::clear_dire_kills() {
  dire_kills_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_StatsKillDetails& CDOTAUserMsg_StatsMatchDetails::dire_kills(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.dire_kills)
  return dire_kills_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsKillDetails* CDOTAUserMsg_StatsMatchDetails::mutable_dire_kills(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsMatchDetails.dire_kills)
  return dire_kills_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsKillDetails* CDOTAUserMsg_StatsMatchDetails::add_dire_kills() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsMatchDetails.dire_kills)
  return dire_kills_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsKillDetails >*
CDOTAUserMsg_StatsMatchDetails::mutable_dire_kills() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.dire_kills)
  return &dire_kills_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsKillDetails >&
CDOTAUserMsg_StatsMatchDetails::dire_kills() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.dire_kills)
  return dire_kills_;
}

// repeated .proto.dota.CDOTAUserMsg_StatsMatchDetails.CDOTAUserMsg_StatsFightDetails fight_details = 6;
inline int CDOTAUserMsg_StatsMatchDetails::fight_details_size() const {
  return fight_details_.size();
}
inline void CDOTAUserMsg_StatsMatchDetails::clear_fight_details() {
  fight_details_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails& CDOTAUserMsg_StatsMatchDetails::fight_details(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_StatsMatchDetails.fight_details)
  return fight_details_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* CDOTAUserMsg_StatsMatchDetails::mutable_fight_details(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_StatsMatchDetails.fight_details)
  return fight_details_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails* CDOTAUserMsg_StatsMatchDetails::add_fight_details() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_StatsMatchDetails.fight_details)
  return fight_details_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails >*
CDOTAUserMsg_StatsMatchDetails::mutable_fight_details() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.fight_details)
  return &fight_details_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_StatsMatchDetails_CDOTAUserMsg_StatsFightDetails >&
CDOTAUserMsg_StatsMatchDetails::fight_details() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_StatsMatchDetails.fight_details)
  return fight_details_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_MiniTaunt

// optional uint32 taunting_player_id = 1;
inline bool CDOTAUserMsg_MiniTaunt::has_taunting_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_MiniTaunt::set_has_taunting_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_MiniTaunt::clear_has_taunting_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_MiniTaunt::clear_taunting_player_id() {
  taunting_player_id_ = 0u;
  clear_has_taunting_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_MiniTaunt::taunting_player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_MiniTaunt.taunting_player_id)
  return taunting_player_id_;
}
inline void CDOTAUserMsg_MiniTaunt::set_taunting_player_id(::google::protobuf::uint32 value) {
  set_has_taunting_player_id();
  taunting_player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_MiniTaunt.taunting_player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SpeechBubble

// optional bool destroy_all = 1;
inline bool CDOTAUserMsg_SpeechBubble::has_destroy_all() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SpeechBubble::set_has_destroy_all() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SpeechBubble::clear_has_destroy_all() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SpeechBubble::clear_destroy_all() {
  destroy_all_ = false;
  clear_has_destroy_all();
}
inline bool CDOTAUserMsg_SpeechBubble::destroy_all() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SpeechBubble.destroy_all)
  return destroy_all_;
}
inline void CDOTAUserMsg_SpeechBubble::set_destroy_all(bool value) {
  set_has_destroy_all();
  destroy_all_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SpeechBubble.destroy_all)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CustomHeaderMessage

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_CustomHeaderMessage::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_CustomHeaderMessage::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_CustomHeaderMessage::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_CustomHeaderMessage::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomHeaderMessage.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomHeaderMessage.player_id)
}

// optional float duration = 2;
inline bool CDOTAUserMsg_CustomHeaderMessage::has_duration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_has_duration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_CustomHeaderMessage::clear_has_duration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_CustomHeaderMessage::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CDOTAUserMsg_CustomHeaderMessage::duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomHeaderMessage.duration)
  return duration_;
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomHeaderMessage.duration)
}

// optional string message = 3;
inline bool CDOTAUserMsg_CustomHeaderMessage::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_CustomHeaderMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_CustomHeaderMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CDOTAUserMsg_CustomHeaderMessage::message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomHeaderMessage.message)
  return message_.GetNoArena();
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomHeaderMessage.message)
}
#if LANG_CXX11
inline void CDOTAUserMsg_CustomHeaderMessage::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_CustomHeaderMessage.message)
}
#endif
inline void CDOTAUserMsg_CustomHeaderMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_CustomHeaderMessage.message)
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_CustomHeaderMessage.message)
}
inline ::std::string* CDOTAUserMsg_CustomHeaderMessage::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CustomHeaderMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_CustomHeaderMessage::release_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CustomHeaderMessage.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CustomHeaderMessage.message)
}

// optional int32 value = 4;
inline bool CDOTAUserMsg_CustomHeaderMessage::has_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_has_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_CustomHeaderMessage::clear_has_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_CustomHeaderMessage::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline ::google::protobuf::int32 CDOTAUserMsg_CustomHeaderMessage::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomHeaderMessage.value)
  return value_;
}
inline void CDOTAUserMsg_CustomHeaderMessage::set_value(::google::protobuf::int32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomHeaderMessage.value)
}

// -------------------------------------------------------------------

// CMsgHeroAbilityStat

// optional .proto.dota.EHeroStatType stat_type = 1 [default = k_EHeroStatType_None];
inline bool CMsgHeroAbilityStat::has_stat_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHeroAbilityStat::set_has_stat_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHeroAbilityStat::clear_has_stat_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHeroAbilityStat::clear_stat_type() {
  stat_type_ = 0;
  clear_has_stat_type();
}
inline ::proto::dota::EHeroStatType CMsgHeroAbilityStat::stat_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroAbilityStat.stat_type)
  return static_cast< ::proto::dota::EHeroStatType >(stat_type_);
}
inline void CMsgHeroAbilityStat::set_stat_type(::proto::dota::EHeroStatType value) {
  assert(::proto::dota::EHeroStatType_IsValid(value));
  set_has_stat_type();
  stat_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroAbilityStat.stat_type)
}

// optional int32 int_value = 2;
inline bool CMsgHeroAbilityStat::has_int_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHeroAbilityStat::set_has_int_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHeroAbilityStat::clear_has_int_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHeroAbilityStat::clear_int_value() {
  int_value_ = 0;
  clear_has_int_value();
}
inline ::google::protobuf::int32 CMsgHeroAbilityStat::int_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroAbilityStat.int_value)
  return int_value_;
}
inline void CMsgHeroAbilityStat::set_int_value(::google::protobuf::int32 value) {
  set_has_int_value();
  int_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroAbilityStat.int_value)
}

// optional float float_value = 3;
inline bool CMsgHeroAbilityStat::has_float_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHeroAbilityStat::set_has_float_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgHeroAbilityStat::clear_has_float_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgHeroAbilityStat::clear_float_value() {
  float_value_ = 0;
  clear_has_float_value();
}
inline float CMsgHeroAbilityStat::float_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgHeroAbilityStat.float_value)
  return float_value_;
}
inline void CMsgHeroAbilityStat::set_float_value(float value) {
  set_has_float_value();
  float_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgHeroAbilityStat.float_value)
}

// -------------------------------------------------------------------

// CMsgCombatAnalyzerPlayerStat

// optional uint32 account_id = 1;
inline bool CMsgCombatAnalyzerPlayerStat::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCombatAnalyzerPlayerStat::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCombatAnalyzerPlayerStat::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCombatAnalyzerPlayerStat::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgCombatAnalyzerPlayerStat::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCombatAnalyzerPlayerStat.account_id)
  return account_id_;
}
inline void CMsgCombatAnalyzerPlayerStat::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCombatAnalyzerPlayerStat.account_id)
}

// repeated .proto.dota.CMsgHeroAbilityStat hero_ability_stats = 2;
inline int CMsgCombatAnalyzerPlayerStat::hero_ability_stats_size() const {
  return hero_ability_stats_.size();
}
inline void CMsgCombatAnalyzerPlayerStat::clear_hero_ability_stats() {
  hero_ability_stats_.Clear();
}
inline const ::proto::dota::CMsgHeroAbilityStat& CMsgCombatAnalyzerPlayerStat::hero_ability_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCombatAnalyzerPlayerStat.hero_ability_stats)
  return hero_ability_stats_.Get(index);
}
inline ::proto::dota::CMsgHeroAbilityStat* CMsgCombatAnalyzerPlayerStat::mutable_hero_ability_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgCombatAnalyzerPlayerStat.hero_ability_stats)
  return hero_ability_stats_.Mutable(index);
}
inline ::proto::dota::CMsgHeroAbilityStat* CMsgCombatAnalyzerPlayerStat::add_hero_ability_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgCombatAnalyzerPlayerStat.hero_ability_stats)
  return hero_ability_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroAbilityStat >*
CMsgCombatAnalyzerPlayerStat::mutable_hero_ability_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgCombatAnalyzerPlayerStat.hero_ability_stats)
  return &hero_ability_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgHeroAbilityStat >&
CMsgCombatAnalyzerPlayerStat::hero_ability_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgCombatAnalyzerPlayerStat.hero_ability_stats)
  return hero_ability_stats_;
}

// -------------------------------------------------------------------

// CMsgCombatAnalyzerStats

// optional uint64 match_id = 1;
inline bool CMsgCombatAnalyzerStats::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCombatAnalyzerStats::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCombatAnalyzerStats::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCombatAnalyzerStats::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgCombatAnalyzerStats::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCombatAnalyzerStats.match_id)
  return match_id_;
}
inline void CMsgCombatAnalyzerStats::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCombatAnalyzerStats.match_id)
}

// repeated .proto.dota.CMsgCombatAnalyzerPlayerStat player_stats = 2;
inline int CMsgCombatAnalyzerStats::player_stats_size() const {
  return player_stats_.size();
}
inline void CMsgCombatAnalyzerStats::clear_player_stats() {
  player_stats_.Clear();
}
inline const ::proto::dota::CMsgCombatAnalyzerPlayerStat& CMsgCombatAnalyzerStats::player_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCombatAnalyzerStats.player_stats)
  return player_stats_.Get(index);
}
inline ::proto::dota::CMsgCombatAnalyzerPlayerStat* CMsgCombatAnalyzerStats::mutable_player_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgCombatAnalyzerStats.player_stats)
  return player_stats_.Mutable(index);
}
inline ::proto::dota::CMsgCombatAnalyzerPlayerStat* CMsgCombatAnalyzerStats::add_player_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgCombatAnalyzerStats.player_stats)
  return player_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgCombatAnalyzerPlayerStat >*
CMsgCombatAnalyzerStats::mutable_player_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgCombatAnalyzerStats.player_stats)
  return &player_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgCombatAnalyzerPlayerStat >&
CMsgCombatAnalyzerStats::player_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgCombatAnalyzerStats.player_stats)
  return player_stats_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_BeastChat

// optional uint32 team = 1;
inline bool CDOTAUserMsg_BeastChat::has_team() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_BeastChat::set_has_team() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_BeastChat::clear_has_team() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_BeastChat::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_BeastChat::team() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BeastChat.team)
  return team_;
}
inline void CDOTAUserMsg_BeastChat::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BeastChat.team)
}

// optional string format = 2;
inline bool CDOTAUserMsg_BeastChat::has_format() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_BeastChat::set_has_format() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_BeastChat::clear_has_format() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_BeastChat::clear_format() {
  format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_format();
}
inline const ::std::string& CDOTAUserMsg_BeastChat::format() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BeastChat.format)
  return format_.GetNoArena();
}
inline void CDOTAUserMsg_BeastChat::set_format(const ::std::string& value) {
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BeastChat.format)
}
#if LANG_CXX11
inline void CDOTAUserMsg_BeastChat::set_format(::std::string&& value) {
  set_has_format();
  format_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_BeastChat.format)
}
#endif
inline void CDOTAUserMsg_BeastChat::set_format(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_BeastChat.format)
}
inline void CDOTAUserMsg_BeastChat::set_format(const char* value, size_t size) {
  set_has_format();
  format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_BeastChat.format)
}
inline ::std::string* CDOTAUserMsg_BeastChat::mutable_format() {
  set_has_format();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_BeastChat.format)
  return format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_BeastChat::release_format() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_BeastChat.format)
  clear_has_format();
  return format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_BeastChat::set_allocated_format(::std::string* format) {
  if (format != NULL) {
    set_has_format();
  } else {
    clear_has_format();
  }
  format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), format);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_BeastChat.format)
}

// optional string message = 3;
inline bool CDOTAUserMsg_BeastChat::has_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_BeastChat::set_has_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_BeastChat::clear_has_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_BeastChat::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CDOTAUserMsg_BeastChat::message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BeastChat.message)
  return message_.GetNoArena();
}
inline void CDOTAUserMsg_BeastChat::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BeastChat.message)
}
#if LANG_CXX11
inline void CDOTAUserMsg_BeastChat::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_BeastChat.message)
}
#endif
inline void CDOTAUserMsg_BeastChat::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_BeastChat.message)
}
inline void CDOTAUserMsg_BeastChat::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_BeastChat.message)
}
inline ::std::string* CDOTAUserMsg_BeastChat::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_BeastChat.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_BeastChat::release_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_BeastChat.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_BeastChat::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_BeastChat.message)
}

// optional string target = 4;
inline bool CDOTAUserMsg_BeastChat::has_target() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_BeastChat::set_has_target() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_BeastChat::clear_has_target() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_BeastChat::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target();
}
inline const ::std::string& CDOTAUserMsg_BeastChat::target() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_BeastChat.target)
  return target_.GetNoArena();
}
inline void CDOTAUserMsg_BeastChat::set_target(const ::std::string& value) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_BeastChat.target)
}
#if LANG_CXX11
inline void CDOTAUserMsg_BeastChat::set_target(::std::string&& value) {
  set_has_target();
  target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_BeastChat.target)
}
#endif
inline void CDOTAUserMsg_BeastChat::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_BeastChat.target)
}
inline void CDOTAUserMsg_BeastChat::set_target(const char* value, size_t size) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_BeastChat.target)
}
inline ::std::string* CDOTAUserMsg_BeastChat::mutable_target() {
  set_has_target();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_BeastChat.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_BeastChat::release_target() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_BeastChat.target)
  clear_has_target();
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_BeastChat::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    set_has_target();
  } else {
    clear_has_target();
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_BeastChat.target)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CustomHudElement_Create

// optional string element_id = 1;
inline bool CDOTAUserMsg_CustomHudElement_Create::has_element_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_has_element_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_CustomHudElement_Create::clear_has_element_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_CustomHudElement_Create::clear_element_id() {
  element_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_element_id();
}
inline const ::std::string& CDOTAUserMsg_CustomHudElement_Create::element_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomHudElement_Create.element_id)
  return element_id_.GetNoArena();
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_element_id(const ::std::string& value) {
  set_has_element_id();
  element_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomHudElement_Create.element_id)
}
#if LANG_CXX11
inline void CDOTAUserMsg_CustomHudElement_Create::set_element_id(::std::string&& value) {
  set_has_element_id();
  element_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_CustomHudElement_Create.element_id)
}
#endif
inline void CDOTAUserMsg_CustomHudElement_Create::set_element_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_element_id();
  element_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_CustomHudElement_Create.element_id)
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_element_id(const char* value, size_t size) {
  set_has_element_id();
  element_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_CustomHudElement_Create.element_id)
}
inline ::std::string* CDOTAUserMsg_CustomHudElement_Create::mutable_element_id() {
  set_has_element_id();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CustomHudElement_Create.element_id)
  return element_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_CustomHudElement_Create::release_element_id() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CustomHudElement_Create.element_id)
  clear_has_element_id();
  return element_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_allocated_element_id(::std::string* element_id) {
  if (element_id != NULL) {
    set_has_element_id();
  } else {
    clear_has_element_id();
  }
  element_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), element_id);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CustomHudElement_Create.element_id)
}

// optional string layout_filename = 2;
inline bool CDOTAUserMsg_CustomHudElement_Create::has_layout_filename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_has_layout_filename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_CustomHudElement_Create::clear_has_layout_filename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_CustomHudElement_Create::clear_layout_filename() {
  layout_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_layout_filename();
}
inline const ::std::string& CDOTAUserMsg_CustomHudElement_Create::layout_filename() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomHudElement_Create.layout_filename)
  return layout_filename_.GetNoArena();
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_layout_filename(const ::std::string& value) {
  set_has_layout_filename();
  layout_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomHudElement_Create.layout_filename)
}
#if LANG_CXX11
inline void CDOTAUserMsg_CustomHudElement_Create::set_layout_filename(::std::string&& value) {
  set_has_layout_filename();
  layout_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_CustomHudElement_Create.layout_filename)
}
#endif
inline void CDOTAUserMsg_CustomHudElement_Create::set_layout_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_layout_filename();
  layout_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_CustomHudElement_Create.layout_filename)
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_layout_filename(const char* value, size_t size) {
  set_has_layout_filename();
  layout_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_CustomHudElement_Create.layout_filename)
}
inline ::std::string* CDOTAUserMsg_CustomHudElement_Create::mutable_layout_filename() {
  set_has_layout_filename();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CustomHudElement_Create.layout_filename)
  return layout_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_CustomHudElement_Create::release_layout_filename() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CustomHudElement_Create.layout_filename)
  clear_has_layout_filename();
  return layout_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_allocated_layout_filename(::std::string* layout_filename) {
  if (layout_filename != NULL) {
    set_has_layout_filename();
  } else {
    clear_has_layout_filename();
  }
  layout_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), layout_filename);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CustomHudElement_Create.layout_filename)
}

// optional bytes data = 3;
inline bool CDOTAUserMsg_CustomHudElement_Create::has_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_has_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_CustomHudElement_Create::clear_has_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_CustomHudElement_Create::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& CDOTAUserMsg_CustomHudElement_Create::data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomHudElement_Create.data)
  return data_.GetNoArena();
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomHudElement_Create.data)
}
#if LANG_CXX11
inline void CDOTAUserMsg_CustomHudElement_Create::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_CustomHudElement_Create.data)
}
#endif
inline void CDOTAUserMsg_CustomHudElement_Create::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_CustomHudElement_Create.data)
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_CustomHudElement_Create.data)
}
inline ::std::string* CDOTAUserMsg_CustomHudElement_Create::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CustomHudElement_Create.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_CustomHudElement_Create::release_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CustomHudElement_Create.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_CustomHudElement_Create::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CustomHudElement_Create.data)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CustomHudElement_Modify

// optional string element_id = 1;
inline bool CDOTAUserMsg_CustomHudElement_Modify::has_element_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_has_element_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_CustomHudElement_Modify::clear_has_element_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_CustomHudElement_Modify::clear_element_id() {
  element_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_element_id();
}
inline const ::std::string& CDOTAUserMsg_CustomHudElement_Modify::element_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.element_id)
  return element_id_.GetNoArena();
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_element_id(const ::std::string& value) {
  set_has_element_id();
  element_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.element_id)
}
#if LANG_CXX11
inline void CDOTAUserMsg_CustomHudElement_Modify::set_element_id(::std::string&& value) {
  set_has_element_id();
  element_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.element_id)
}
#endif
inline void CDOTAUserMsg_CustomHudElement_Modify::set_element_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_element_id();
  element_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.element_id)
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_element_id(const char* value, size_t size) {
  set_has_element_id();
  element_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.element_id)
}
inline ::std::string* CDOTAUserMsg_CustomHudElement_Modify::mutable_element_id() {
  set_has_element_id();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.element_id)
  return element_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_CustomHudElement_Modify::release_element_id() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.element_id)
  clear_has_element_id();
  return element_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_allocated_element_id(::std::string* element_id) {
  if (element_id != NULL) {
    set_has_element_id();
  } else {
    clear_has_element_id();
  }
  element_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), element_id);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.element_id)
}

// optional bool modify_visible = 2;
inline bool CDOTAUserMsg_CustomHudElement_Modify::has_modify_visible() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_has_modify_visible() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_CustomHudElement_Modify::clear_has_modify_visible() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_CustomHudElement_Modify::clear_modify_visible() {
  modify_visible_ = false;
  clear_has_modify_visible();
}
inline bool CDOTAUserMsg_CustomHudElement_Modify::modify_visible() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.modify_visible)
  return modify_visible_;
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_modify_visible(bool value) {
  set_has_modify_visible();
  modify_visible_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.modify_visible)
}

// optional bytes data = 3;
inline bool CDOTAUserMsg_CustomHudElement_Modify::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_CustomHudElement_Modify::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_CustomHudElement_Modify::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& CDOTAUserMsg_CustomHudElement_Modify::data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.data)
  return data_.GetNoArena();
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.data)
}
#if LANG_CXX11
inline void CDOTAUserMsg_CustomHudElement_Modify::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.data)
}
#endif
inline void CDOTAUserMsg_CustomHudElement_Modify::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.data)
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.data)
}
inline ::std::string* CDOTAUserMsg_CustomHudElement_Modify::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_CustomHudElement_Modify::release_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_CustomHudElement_Modify::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CustomHudElement_Modify.data)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CustomHudElement_Destroy

// optional string element_id = 1;
inline bool CDOTAUserMsg_CustomHudElement_Destroy::has_element_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::set_has_element_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::clear_has_element_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::clear_element_id() {
  element_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_element_id();
}
inline const ::std::string& CDOTAUserMsg_CustomHudElement_Destroy::element_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CustomHudElement_Destroy.element_id)
  return element_id_.GetNoArena();
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::set_element_id(const ::std::string& value) {
  set_has_element_id();
  element_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CustomHudElement_Destroy.element_id)
}
#if LANG_CXX11
inline void CDOTAUserMsg_CustomHudElement_Destroy::set_element_id(::std::string&& value) {
  set_has_element_id();
  element_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_CustomHudElement_Destroy.element_id)
}
#endif
inline void CDOTAUserMsg_CustomHudElement_Destroy::set_element_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_element_id();
  element_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_CustomHudElement_Destroy.element_id)
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::set_element_id(const char* value, size_t size) {
  set_has_element_id();
  element_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_CustomHudElement_Destroy.element_id)
}
inline ::std::string* CDOTAUserMsg_CustomHudElement_Destroy::mutable_element_id() {
  set_has_element_id();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CustomHudElement_Destroy.element_id)
  return element_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_CustomHudElement_Destroy::release_element_id() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_CustomHudElement_Destroy.element_id)
  clear_has_element_id();
  return element_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_CustomHudElement_Destroy::set_allocated_element_id(::std::string* element_id) {
  if (element_id != NULL) {
    set_has_element_id();
  } else {
    clear_has_element_id();
  }
  element_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), element_id);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_CustomHudElement_Destroy.element_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CompendiumStatePlayer

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_CompendiumStatePlayer::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_CompendiumStatePlayer::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_CompendiumStatePlayer::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_CompendiumStatePlayer::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_CompendiumStatePlayer::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CompendiumStatePlayer.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_CompendiumStatePlayer::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CompendiumStatePlayer.player_id)
}

// optional uint32 level = 2;
inline bool CDOTAUserMsg_CompendiumStatePlayer::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_CompendiumStatePlayer::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_CompendiumStatePlayer::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_CompendiumStatePlayer::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_CompendiumStatePlayer::level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CompendiumStatePlayer.level)
  return level_;
}
inline void CDOTAUserMsg_CompendiumStatePlayer::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_CompendiumStatePlayer.level)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_CompendiumState

// repeated .proto.dota.CDOTAUserMsg_CompendiumStatePlayer compendium_players = 1;
inline int CDOTAUserMsg_CompendiumState::compendium_players_size() const {
  return compendium_players_.size();
}
inline void CDOTAUserMsg_CompendiumState::clear_compendium_players() {
  compendium_players_.Clear();
}
inline const ::proto::dota::CDOTAUserMsg_CompendiumStatePlayer& CDOTAUserMsg_CompendiumState::compendium_players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_CompendiumState.compendium_players)
  return compendium_players_.Get(index);
}
inline ::proto::dota::CDOTAUserMsg_CompendiumStatePlayer* CDOTAUserMsg_CompendiumState::mutable_compendium_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_CompendiumState.compendium_players)
  return compendium_players_.Mutable(index);
}
inline ::proto::dota::CDOTAUserMsg_CompendiumStatePlayer* CDOTAUserMsg_CompendiumState::add_compendium_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CDOTAUserMsg_CompendiumState.compendium_players)
  return compendium_players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_CompendiumStatePlayer >*
CDOTAUserMsg_CompendiumState::mutable_compendium_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CDOTAUserMsg_CompendiumState.compendium_players)
  return &compendium_players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTAUserMsg_CompendiumStatePlayer >&
CDOTAUserMsg_CompendiumState::compendium_players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CDOTAUserMsg_CompendiumState.compendium_players)
  return compendium_players_;
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ProjectionAbility

// optional uint32 ability_id = 1;
inline bool CDOTAUserMsg_ProjectionAbility::has_ability_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ProjectionAbility::set_has_ability_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_has_ability_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_ability_id() {
  ability_id_ = 0u;
  clear_has_ability_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ProjectionAbility::ability_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ProjectionAbility.ability_id)
  return ability_id_;
}
inline void CDOTAUserMsg_ProjectionAbility::set_ability_id(::google::protobuf::uint32 value) {
  set_has_ability_id();
  ability_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ProjectionAbility.ability_id)
}

// optional int32 caster_ent_index = 2;
inline bool CDOTAUserMsg_ProjectionAbility::has_caster_ent_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_ProjectionAbility::set_has_caster_ent_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_has_caster_ent_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_caster_ent_index() {
  caster_ent_index_ = 0;
  clear_has_caster_ent_index();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ProjectionAbility::caster_ent_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ProjectionAbility.caster_ent_index)
  return caster_ent_index_;
}
inline void CDOTAUserMsg_ProjectionAbility::set_caster_ent_index(::google::protobuf::int32 value) {
  set_has_caster_ent_index();
  caster_ent_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ProjectionAbility.caster_ent_index)
}

// optional int32 caster_team = 3;
inline bool CDOTAUserMsg_ProjectionAbility::has_caster_team() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_ProjectionAbility::set_has_caster_team() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_has_caster_team() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_caster_team() {
  caster_team_ = 0;
  clear_has_caster_team();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ProjectionAbility::caster_team() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ProjectionAbility.caster_team)
  return caster_team_;
}
inline void CDOTAUserMsg_ProjectionAbility::set_caster_team(::google::protobuf::int32 value) {
  set_has_caster_team();
  caster_team_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ProjectionAbility.caster_team)
}

// optional bool channel_end = 4;
inline bool CDOTAUserMsg_ProjectionAbility::has_channel_end() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_ProjectionAbility::set_has_channel_end() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_has_channel_end() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_channel_end() {
  channel_end_ = false;
  clear_has_channel_end();
}
inline bool CDOTAUserMsg_ProjectionAbility::channel_end() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ProjectionAbility.channel_end)
  return channel_end_;
}
inline void CDOTAUserMsg_ProjectionAbility::set_channel_end(bool value) {
  set_has_channel_end();
  channel_end_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ProjectionAbility.channel_end)
}

// optional .proto.dota.CMsgVector origin = 5;
inline bool CDOTAUserMsg_ProjectionAbility::has_origin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ProjectionAbility::set_has_origin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_has_origin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_origin() {
  if (origin_ != NULL) origin_->::proto::dota::CMsgVector::Clear();
  clear_has_origin();
}
inline const ::proto::dota::CMsgVector& CDOTAUserMsg_ProjectionAbility::origin() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ProjectionAbility.origin)
  return origin_ != NULL ? *origin_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ProjectionAbility::mutable_origin() {
  set_has_origin();
  if (origin_ == NULL) {
    origin_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_ProjectionAbility.origin)
  return origin_;
}
inline ::proto::dota::CMsgVector* CDOTAUserMsg_ProjectionAbility::release_origin() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_ProjectionAbility.origin)
  clear_has_origin();
  ::proto::dota::CMsgVector* temp = origin_;
  origin_ = NULL;
  return temp;
}
inline void CDOTAUserMsg_ProjectionAbility::set_allocated_origin(::proto::dota::CMsgVector* origin) {
  delete origin_;
  origin_ = origin;
  if (origin) {
    set_has_origin();
  } else {
    clear_has_origin();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_ProjectionAbility.origin)
}

// optional bool track_caster_only = 6;
inline bool CDOTAUserMsg_ProjectionAbility::has_track_caster_only() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_ProjectionAbility::set_has_track_caster_only() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_has_track_caster_only() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_track_caster_only() {
  track_caster_only_ = false;
  clear_has_track_caster_only();
}
inline bool CDOTAUserMsg_ProjectionAbility::track_caster_only() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ProjectionAbility.track_caster_only)
  return track_caster_only_;
}
inline void CDOTAUserMsg_ProjectionAbility::set_track_caster_only(bool value) {
  set_has_track_caster_only();
  track_caster_only_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ProjectionAbility.track_caster_only)
}

// optional float end_time = 7;
inline bool CDOTAUserMsg_ProjectionAbility::has_end_time() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAUserMsg_ProjectionAbility::set_has_end_time() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_has_end_time() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_end_time() {
  end_time_ = 0;
  clear_has_end_time();
}
inline float CDOTAUserMsg_ProjectionAbility::end_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ProjectionAbility.end_time)
  return end_time_;
}
inline void CDOTAUserMsg_ProjectionAbility::set_end_time(float value) {
  set_has_end_time();
  end_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ProjectionAbility.end_time)
}

// optional int32 victim_ent_index = 8;
inline bool CDOTAUserMsg_ProjectionAbility::has_victim_ent_index() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CDOTAUserMsg_ProjectionAbility::set_has_victim_ent_index() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_has_victim_ent_index() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CDOTAUserMsg_ProjectionAbility::clear_victim_ent_index() {
  victim_ent_index_ = 0;
  clear_has_victim_ent_index();
}
inline ::google::protobuf::int32 CDOTAUserMsg_ProjectionAbility::victim_ent_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ProjectionAbility.victim_ent_index)
  return victim_ent_index_;
}
inline void CDOTAUserMsg_ProjectionAbility::set_victim_ent_index(::google::protobuf::int32 value) {
  set_has_victim_ent_index();
  victim_ent_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ProjectionAbility.victim_ent_index)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ProjectionEvent

// optional .proto.dota.EProjectionEvent event_id = 1 [default = ePE_FirstBlood];
inline bool CDOTAUserMsg_ProjectionEvent::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ProjectionEvent::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ProjectionEvent::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ProjectionEvent::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::proto::dota::EProjectionEvent CDOTAUserMsg_ProjectionEvent::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ProjectionEvent.event_id)
  return static_cast< ::proto::dota::EProjectionEvent >(event_id_);
}
inline void CDOTAUserMsg_ProjectionEvent::set_event_id(::proto::dota::EProjectionEvent value) {
  assert(::proto::dota::EProjectionEvent_IsValid(value));
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ProjectionEvent.event_id)
}

// optional uint32 team = 2;
inline bool CDOTAUserMsg_ProjectionEvent::has_team() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ProjectionEvent::set_has_team() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ProjectionEvent::clear_has_team() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ProjectionEvent::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ProjectionEvent::team() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ProjectionEvent.team)
  return team_;
}
inline void CDOTAUserMsg_ProjectionEvent::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ProjectionEvent.team)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_XPAlert

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_XPAlert::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_XPAlert::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_XPAlert::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_XPAlert::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_XPAlert::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_XPAlert.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_XPAlert::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_XPAlert.player_id)
}

// optional uint32 target_entindex = 2;
inline bool CDOTAUserMsg_XPAlert::has_target_entindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_XPAlert::set_has_target_entindex() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_XPAlert::clear_has_target_entindex() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_XPAlert::clear_target_entindex() {
  target_entindex_ = 0u;
  clear_has_target_entindex();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_XPAlert::target_entindex() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_XPAlert.target_entindex)
  return target_entindex_;
}
inline void CDOTAUserMsg_XPAlert::set_target_entindex(::google::protobuf::uint32 value) {
  set_has_target_entindex();
  target_entindex_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_XPAlert.target_entindex)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_UpdateQuestProgress

// -------------------------------------------------------------------

// CDOTAUserMsg_QuestStatus

// required uint32 player_id = 1;
inline bool CDOTAUserMsg_QuestStatus::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_QuestStatus::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_QuestStatus::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_QuestStatus::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_QuestStatus::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_QuestStatus.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_QuestStatus::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_QuestStatus.player_id)
}

// optional uint32 quest_id = 2;
inline bool CDOTAUserMsg_QuestStatus::has_quest_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_QuestStatus::set_has_quest_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_QuestStatus::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_QuestStatus::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_QuestStatus::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_QuestStatus.quest_id)
  return quest_id_;
}
inline void CDOTAUserMsg_QuestStatus::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_QuestStatus.quest_id)
}

// optional uint32 challenge_id = 3;
inline bool CDOTAUserMsg_QuestStatus::has_challenge_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_QuestStatus::set_has_challenge_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_QuestStatus::clear_has_challenge_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_QuestStatus::clear_challenge_id() {
  challenge_id_ = 0u;
  clear_has_challenge_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_QuestStatus::challenge_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_QuestStatus.challenge_id)
  return challenge_id_;
}
inline void CDOTAUserMsg_QuestStatus::set_challenge_id(::google::protobuf::uint32 value) {
  set_has_challenge_id();
  challenge_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_QuestStatus.challenge_id)
}

// optional uint32 progress = 4;
inline bool CDOTAUserMsg_QuestStatus::has_progress() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_QuestStatus::set_has_progress() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_QuestStatus::clear_has_progress() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_QuestStatus::clear_progress() {
  progress_ = 0u;
  clear_has_progress();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_QuestStatus::progress() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_QuestStatus.progress)
  return progress_;
}
inline void CDOTAUserMsg_QuestStatus::set_progress(::google::protobuf::uint32 value) {
  set_has_progress();
  progress_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_QuestStatus.progress)
}

// optional uint32 goal = 5;
inline bool CDOTAUserMsg_QuestStatus::has_goal() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_QuestStatus::set_has_goal() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_QuestStatus::clear_has_goal() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_QuestStatus::clear_goal() {
  goal_ = 0u;
  clear_has_goal();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_QuestStatus::goal() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_QuestStatus.goal)
  return goal_;
}
inline void CDOTAUserMsg_QuestStatus::set_goal(::google::protobuf::uint32 value) {
  set_has_goal();
  goal_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_QuestStatus.goal)
}

// optional uint32 query = 6;
inline bool CDOTAUserMsg_QuestStatus::has_query() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_QuestStatus::set_has_query() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_QuestStatus::clear_has_query() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_QuestStatus::clear_query() {
  query_ = 0u;
  clear_has_query();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_QuestStatus::query() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_QuestStatus.query)
  return query_;
}
inline void CDOTAUserMsg_QuestStatus::set_query(::google::protobuf::uint32 value) {
  set_has_query();
  query_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_QuestStatus.query)
}

// optional float fail_gametime = 7;
inline bool CDOTAUserMsg_QuestStatus::has_fail_gametime() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDOTAUserMsg_QuestStatus::set_has_fail_gametime() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDOTAUserMsg_QuestStatus::clear_has_fail_gametime() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDOTAUserMsg_QuestStatus::clear_fail_gametime() {
  fail_gametime_ = 0;
  clear_has_fail_gametime();
}
inline float CDOTAUserMsg_QuestStatus::fail_gametime() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_QuestStatus.fail_gametime)
  return fail_gametime_;
}
inline void CDOTAUserMsg_QuestStatus::set_fail_gametime(float value) {
  set_has_fail_gametime();
  fail_gametime_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_QuestStatus.fail_gametime)
}

// optional uint32 item_id = 8;
inline bool CDOTAUserMsg_QuestStatus::has_item_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CDOTAUserMsg_QuestStatus::set_has_item_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CDOTAUserMsg_QuestStatus::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CDOTAUserMsg_QuestStatus::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_QuestStatus::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_QuestStatus.item_id)
  return item_id_;
}
inline void CDOTAUserMsg_QuestStatus::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_QuestStatus.item_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SuggestHeroPick

// required uint32 player_id = 1;
inline bool CDOTAUserMsg_SuggestHeroPick::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SuggestHeroPick::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SuggestHeroPick::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SuggestHeroPick::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_SuggestHeroPick::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SuggestHeroPick.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_SuggestHeroPick::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SuggestHeroPick.player_id)
}

// optional uint32 hero_id = 2;
inline bool CDOTAUserMsg_SuggestHeroPick::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_SuggestHeroPick::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_SuggestHeroPick::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_SuggestHeroPick::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_SuggestHeroPick::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SuggestHeroPick.hero_id)
  return hero_id_;
}
inline void CDOTAUserMsg_SuggestHeroPick::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SuggestHeroPick.hero_id)
}

// optional bool ban = 3;
inline bool CDOTAUserMsg_SuggestHeroPick::has_ban() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_SuggestHeroPick::set_has_ban() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_SuggestHeroPick::clear_has_ban() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_SuggestHeroPick::clear_ban() {
  ban_ = false;
  clear_has_ban();
}
inline bool CDOTAUserMsg_SuggestHeroPick::ban() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SuggestHeroPick.ban)
  return ban_;
}
inline void CDOTAUserMsg_SuggestHeroPick::set_ban(bool value) {
  set_has_ban();
  ban_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SuggestHeroPick.ban)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SuggestHeroRole

// required uint32 player_id = 1;
inline bool CDOTAUserMsg_SuggestHeroRole::has_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_SuggestHeroRole::set_has_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_SuggestHeroRole::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_SuggestHeroRole::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_SuggestHeroRole::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SuggestHeroRole.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_SuggestHeroRole::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SuggestHeroRole.player_id)
}

// optional string hero_role = 2;
inline bool CDOTAUserMsg_SuggestHeroRole::has_hero_role() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SuggestHeroRole::set_has_hero_role() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SuggestHeroRole::clear_has_hero_role() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SuggestHeroRole::clear_hero_role() {
  hero_role_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hero_role();
}
inline const ::std::string& CDOTAUserMsg_SuggestHeroRole::hero_role() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SuggestHeroRole.hero_role)
  return hero_role_.GetNoArena();
}
inline void CDOTAUserMsg_SuggestHeroRole::set_hero_role(const ::std::string& value) {
  set_has_hero_role();
  hero_role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SuggestHeroRole.hero_role)
}
#if LANG_CXX11
inline void CDOTAUserMsg_SuggestHeroRole::set_hero_role(::std::string&& value) {
  set_has_hero_role();
  hero_role_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_SuggestHeroRole.hero_role)
}
#endif
inline void CDOTAUserMsg_SuggestHeroRole::set_hero_role(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hero_role();
  hero_role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_SuggestHeroRole.hero_role)
}
inline void CDOTAUserMsg_SuggestHeroRole::set_hero_role(const char* value, size_t size) {
  set_has_hero_role();
  hero_role_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_SuggestHeroRole.hero_role)
}
inline ::std::string* CDOTAUserMsg_SuggestHeroRole::mutable_hero_role() {
  set_has_hero_role();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_SuggestHeroRole.hero_role)
  return hero_role_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_SuggestHeroRole::release_hero_role() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_SuggestHeroRole.hero_role)
  clear_has_hero_role();
  return hero_role_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_SuggestHeroRole::set_allocated_hero_role(::std::string* hero_role) {
  if (hero_role != NULL) {
    set_has_hero_role();
  } else {
    clear_has_hero_role();
  }
  hero_role_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_role);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_SuggestHeroRole.hero_role)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_KillcamDamageTaken

// required uint32 player_id = 1;
inline bool CDOTAUserMsg_KillcamDamageTaken::has_player_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_has_player_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_KillcamDamageTaken::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_KillcamDamageTaken.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_KillcamDamageTaken.player_id)
}

// optional uint32 damage_taken = 2;
inline bool CDOTAUserMsg_KillcamDamageTaken::has_damage_taken() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_has_damage_taken() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_has_damage_taken() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_damage_taken() {
  damage_taken_ = 0u;
  clear_has_damage_taken();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_KillcamDamageTaken::damage_taken() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_KillcamDamageTaken.damage_taken)
  return damage_taken_;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_damage_taken(::google::protobuf::uint32 value) {
  set_has_damage_taken();
  damage_taken_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_KillcamDamageTaken.damage_taken)
}

// optional uint32 item_type = 3;
inline bool CDOTAUserMsg_KillcamDamageTaken::has_item_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_has_item_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_has_item_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_item_type() {
  item_type_ = 0u;
  clear_has_item_type();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_KillcamDamageTaken::item_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_KillcamDamageTaken.item_type)
  return item_type_;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_item_type(::google::protobuf::uint32 value) {
  set_has_item_type();
  item_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_KillcamDamageTaken.item_type)
}

// optional uint32 item_id = 4;
inline bool CDOTAUserMsg_KillcamDamageTaken::has_item_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_has_item_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_item_id() {
  item_id_ = 0u;
  clear_has_item_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_KillcamDamageTaken::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_KillcamDamageTaken.item_id)
  return item_id_;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_item_id(::google::protobuf::uint32 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_KillcamDamageTaken.item_id)
}

// optional string hero_name = 5;
inline bool CDOTAUserMsg_KillcamDamageTaken::has_hero_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_has_hero_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_has_hero_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_hero_name() {
  hero_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hero_name();
}
inline const ::std::string& CDOTAUserMsg_KillcamDamageTaken::hero_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_KillcamDamageTaken.hero_name)
  return hero_name_.GetNoArena();
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_hero_name(const ::std::string& value) {
  set_has_hero_name();
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_KillcamDamageTaken.hero_name)
}
#if LANG_CXX11
inline void CDOTAUserMsg_KillcamDamageTaken::set_hero_name(::std::string&& value) {
  set_has_hero_name();
  hero_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_KillcamDamageTaken.hero_name)
}
#endif
inline void CDOTAUserMsg_KillcamDamageTaken::set_hero_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_hero_name();
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_KillcamDamageTaken.hero_name)
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_hero_name(const char* value, size_t size) {
  set_has_hero_name();
  hero_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_KillcamDamageTaken.hero_name)
}
inline ::std::string* CDOTAUserMsg_KillcamDamageTaken::mutable_hero_name() {
  set_has_hero_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_KillcamDamageTaken.hero_name)
  return hero_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_KillcamDamageTaken::release_hero_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_KillcamDamageTaken.hero_name)
  clear_has_hero_name();
  return hero_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_allocated_hero_name(::std::string* hero_name) {
  if (hero_name != NULL) {
    set_has_hero_name();
  } else {
    clear_has_hero_name();
  }
  hero_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hero_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_KillcamDamageTaken.hero_name)
}

// optional string damage_color = 6;
inline bool CDOTAUserMsg_KillcamDamageTaken::has_damage_color() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_has_damage_color() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_has_damage_color() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_KillcamDamageTaken::clear_damage_color() {
  damage_color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_damage_color();
}
inline const ::std::string& CDOTAUserMsg_KillcamDamageTaken::damage_color() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_KillcamDamageTaken.damage_color)
  return damage_color_.GetNoArena();
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_damage_color(const ::std::string& value) {
  set_has_damage_color();
  damage_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_KillcamDamageTaken.damage_color)
}
#if LANG_CXX11
inline void CDOTAUserMsg_KillcamDamageTaken::set_damage_color(::std::string&& value) {
  set_has_damage_color();
  damage_color_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CDOTAUserMsg_KillcamDamageTaken.damage_color)
}
#endif
inline void CDOTAUserMsg_KillcamDamageTaken::set_damage_color(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_damage_color();
  damage_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CDOTAUserMsg_KillcamDamageTaken.damage_color)
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_damage_color(const char* value, size_t size) {
  set_has_damage_color();
  damage_color_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CDOTAUserMsg_KillcamDamageTaken.damage_color)
}
inline ::std::string* CDOTAUserMsg_KillcamDamageTaken::mutable_damage_color() {
  set_has_damage_color();
  // @@protoc_insertion_point(field_mutable:proto.dota.CDOTAUserMsg_KillcamDamageTaken.damage_color)
  return damage_color_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDOTAUserMsg_KillcamDamageTaken::release_damage_color() {
  // @@protoc_insertion_point(field_release:proto.dota.CDOTAUserMsg_KillcamDamageTaken.damage_color)
  clear_has_damage_color();
  return damage_color_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDOTAUserMsg_KillcamDamageTaken::set_allocated_damage_color(::std::string* damage_color) {
  if (damage_color != NULL) {
    set_has_damage_color();
  } else {
    clear_has_damage_color();
  }
  damage_color_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), damage_color);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CDOTAUserMsg_KillcamDamageTaken.damage_color)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_SelectPenaltyGold

// required uint32 player_id = 1;
inline bool CDOTAUserMsg_SelectPenaltyGold::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_SelectPenaltyGold::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_SelectPenaltyGold::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_SelectPenaltyGold::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_SelectPenaltyGold::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SelectPenaltyGold.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_SelectPenaltyGold::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SelectPenaltyGold.player_id)
}

// optional sint32 cost = 2;
inline bool CDOTAUserMsg_SelectPenaltyGold::has_cost() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_SelectPenaltyGold::set_has_cost() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_SelectPenaltyGold::clear_has_cost() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_SelectPenaltyGold::clear_cost() {
  cost_ = 0;
  clear_has_cost();
}
inline ::google::protobuf::int32 CDOTAUserMsg_SelectPenaltyGold::cost() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_SelectPenaltyGold.cost)
  return cost_;
}
inline void CDOTAUserMsg_SelectPenaltyGold::set_cost(::google::protobuf::int32 value) {
  set_has_cost();
  cost_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_SelectPenaltyGold.cost)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_RollDiceResult

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_RollDiceResult::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_RollDiceResult::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_RollDiceResult::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_RollDiceResult::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_RollDiceResult::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_RollDiceResult.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_RollDiceResult::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_RollDiceResult.player_id)
}

// optional uint32 channel_type = 2;
inline bool CDOTAUserMsg_RollDiceResult::has_channel_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_RollDiceResult::set_has_channel_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_RollDiceResult::clear_has_channel_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_RollDiceResult::clear_channel_type() {
  channel_type_ = 0u;
  clear_has_channel_type();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_RollDiceResult::channel_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_RollDiceResult.channel_type)
  return channel_type_;
}
inline void CDOTAUserMsg_RollDiceResult::set_channel_type(::google::protobuf::uint32 value) {
  set_has_channel_type();
  channel_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_RollDiceResult.channel_type)
}

// optional uint32 roll_min = 3;
inline bool CDOTAUserMsg_RollDiceResult::has_roll_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_RollDiceResult::set_has_roll_min() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_RollDiceResult::clear_has_roll_min() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_RollDiceResult::clear_roll_min() {
  roll_min_ = 0u;
  clear_has_roll_min();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_RollDiceResult::roll_min() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_RollDiceResult.roll_min)
  return roll_min_;
}
inline void CDOTAUserMsg_RollDiceResult::set_roll_min(::google::protobuf::uint32 value) {
  set_has_roll_min();
  roll_min_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_RollDiceResult.roll_min)
}

// optional uint32 roll_max = 4;
inline bool CDOTAUserMsg_RollDiceResult::has_roll_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDOTAUserMsg_RollDiceResult::set_has_roll_max() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDOTAUserMsg_RollDiceResult::clear_has_roll_max() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDOTAUserMsg_RollDiceResult::clear_roll_max() {
  roll_max_ = 0u;
  clear_has_roll_max();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_RollDiceResult::roll_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_RollDiceResult.roll_max)
  return roll_max_;
}
inline void CDOTAUserMsg_RollDiceResult::set_roll_max(::google::protobuf::uint32 value) {
  set_has_roll_max();
  roll_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_RollDiceResult.roll_max)
}

// optional uint32 result = 5;
inline bool CDOTAUserMsg_RollDiceResult::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDOTAUserMsg_RollDiceResult::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDOTAUserMsg_RollDiceResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDOTAUserMsg_RollDiceResult::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_RollDiceResult::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_RollDiceResult.result)
  return result_;
}
inline void CDOTAUserMsg_RollDiceResult::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_RollDiceResult.result)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_FlipCoinResult

// optional uint32 player_id = 1;
inline bool CDOTAUserMsg_FlipCoinResult::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_FlipCoinResult::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_FlipCoinResult::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_FlipCoinResult::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_FlipCoinResult::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_FlipCoinResult.player_id)
  return player_id_;
}
inline void CDOTAUserMsg_FlipCoinResult::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_FlipCoinResult.player_id)
}

// optional uint32 channel_type = 2;
inline bool CDOTAUserMsg_FlipCoinResult::has_channel_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_FlipCoinResult::set_has_channel_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_FlipCoinResult::clear_has_channel_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_FlipCoinResult::clear_channel_type() {
  channel_type_ = 0u;
  clear_has_channel_type();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_FlipCoinResult::channel_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_FlipCoinResult.channel_type)
  return channel_type_;
}
inline void CDOTAUserMsg_FlipCoinResult::set_channel_type(::google::protobuf::uint32 value) {
  set_has_channel_type();
  channel_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_FlipCoinResult.channel_type)
}

// optional bool result = 3;
inline bool CDOTAUserMsg_FlipCoinResult::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDOTAUserMsg_FlipCoinResult::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDOTAUserMsg_FlipCoinResult::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDOTAUserMsg_FlipCoinResult::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CDOTAUserMsg_FlipCoinResult::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_FlipCoinResult.result)
  return result_;
}
inline void CDOTAUserMsg_FlipCoinResult::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_FlipCoinResult.result)
}

// -------------------------------------------------------------------

// CDOTAUserMessage_RequestItemSuggestions

// optional uint32 player_id = 1;
inline bool CDOTAUserMessage_RequestItemSuggestions::has_player_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMessage_RequestItemSuggestions::set_has_player_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMessage_RequestItemSuggestions::clear_has_player_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMessage_RequestItemSuggestions::clear_player_id() {
  player_id_ = 0u;
  clear_has_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMessage_RequestItemSuggestions::player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMessage_RequestItemSuggestions.player_id)
  return player_id_;
}
inline void CDOTAUserMessage_RequestItemSuggestions::set_player_id(::google::protobuf::uint32 value) {
  set_has_player_id();
  player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMessage_RequestItemSuggestions.player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMessage_TeamCaptainChanged

// optional uint32 team = 1;
inline bool CDOTAUserMessage_TeamCaptainChanged::has_team() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMessage_TeamCaptainChanged::set_has_team() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMessage_TeamCaptainChanged::clear_has_team() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMessage_TeamCaptainChanged::clear_team() {
  team_ = 0u;
  clear_has_team();
}
inline ::google::protobuf::uint32 CDOTAUserMessage_TeamCaptainChanged::team() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMessage_TeamCaptainChanged.team)
  return team_;
}
inline void CDOTAUserMessage_TeamCaptainChanged::set_team(::google::protobuf::uint32 value) {
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMessage_TeamCaptainChanged.team)
}

// optional uint32 captain_player_id = 2;
inline bool CDOTAUserMessage_TeamCaptainChanged::has_captain_player_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMessage_TeamCaptainChanged::set_has_captain_player_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMessage_TeamCaptainChanged::clear_has_captain_player_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMessage_TeamCaptainChanged::clear_captain_player_id() {
  captain_player_id_ = 0u;
  clear_has_captain_player_id();
}
inline ::google::protobuf::uint32 CDOTAUserMessage_TeamCaptainChanged::captain_player_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMessage_TeamCaptainChanged.captain_player_id)
  return captain_player_id_;
}
inline void CDOTAUserMessage_TeamCaptainChanged::set_captain_player_id(::google::protobuf::uint32 value) {
  set_has_captain_player_id();
  captain_player_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMessage_TeamCaptainChanged.captain_player_id)
}

// -------------------------------------------------------------------

// CDOTAUserMsg_ChatWheelCooldown

// optional uint32 message_id = 1;
inline bool CDOTAUserMsg_ChatWheelCooldown::has_message_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDOTAUserMsg_ChatWheelCooldown::set_has_message_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDOTAUserMsg_ChatWheelCooldown::clear_has_message_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDOTAUserMsg_ChatWheelCooldown::clear_message_id() {
  message_id_ = 0u;
  clear_has_message_id();
}
inline ::google::protobuf::uint32 CDOTAUserMsg_ChatWheelCooldown::message_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatWheelCooldown.message_id)
  return message_id_;
}
inline void CDOTAUserMsg_ChatWheelCooldown::set_message_id(::google::protobuf::uint32 value) {
  set_has_message_id();
  message_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatWheelCooldown.message_id)
}

// optional float cooldown_remaining = 2;
inline bool CDOTAUserMsg_ChatWheelCooldown::has_cooldown_remaining() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDOTAUserMsg_ChatWheelCooldown::set_has_cooldown_remaining() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDOTAUserMsg_ChatWheelCooldown::clear_has_cooldown_remaining() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDOTAUserMsg_ChatWheelCooldown::clear_cooldown_remaining() {
  cooldown_remaining_ = 0;
  clear_has_cooldown_remaining();
}
inline float CDOTAUserMsg_ChatWheelCooldown::cooldown_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDOTAUserMsg_ChatWheelCooldown.cooldown_remaining)
  return cooldown_remaining_;
}
inline void CDOTAUserMsg_ChatWheelCooldown::set_cooldown_remaining(float value) {
  set_has_cooldown_remaining();
  cooldown_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDOTAUserMsg_ChatWheelCooldown.cooldown_remaining)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace dota
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction_EResult>() {
  return ::proto::dota::CDOTAUserMsg_PredictionResult_Prediction_EResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CDOTAResponseQuerySerialized_Fact_ValueType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CDOTAResponseQuerySerialized_Fact_ValueType>() {
  return ::proto::dota::CDOTAResponseQuerySerialized_Fact_ValueType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EDotaUserMessages> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EDotaUserMessages>() {
  return ::proto::dota::EDotaUserMessages_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DOTA_CHAT_MESSAGE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_CHAT_MESSAGE>() {
  return ::proto::dota::DOTA_CHAT_MESSAGE_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DOTA_NO_BATTLE_POINTS_REASONS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_NO_BATTLE_POINTS_REASONS>() {
  return ::proto::dota::DOTA_NO_BATTLE_POINTS_REASONS_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DOTA_CHAT_INFORMATIONAL> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_CHAT_INFORMATIONAL>() {
  return ::proto::dota::DOTA_CHAT_INFORMATIONAL_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DOTA_ABILITY_PING_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_ABILITY_PING_TYPE>() {
  return ::proto::dota::DOTA_ABILITY_PING_TYPE_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DOTA_REPLAY_STATE_EVENT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_REPLAY_STATE_EVENT>() {
  return ::proto::dota::DOTA_REPLAY_STATE_EVENT_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EDotaEntityMessages> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EDotaEntityMessages>() {
  return ::proto::dota::EDotaEntityMessages_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DOTA_PARTICLE_MESSAGE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_PARTICLE_MESSAGE>() {
  return ::proto::dota::DOTA_PARTICLE_MESSAGE_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DOTA_OVERHEAD_ALERT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_OVERHEAD_ALERT>() {
  return ::proto::dota::DOTA_OVERHEAD_ALERT_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DOTA_ROSHAN_PHASE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_ROSHAN_PHASE>() {
  return ::proto::dota::DOTA_ROSHAN_PHASE_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DOTA_POSITION_CATEGORY> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_POSITION_CATEGORY>() {
  return ::proto::dota::DOTA_POSITION_CATEGORY_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DOTA_ABILITY_TARGET_TYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_ABILITY_TARGET_TYPE>() {
  return ::proto::dota::DOTA_ABILITY_TARGET_TYPE_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EHeroStatType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EHeroStatType>() {
  return ::proto::dota::EHeroStatType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EPlayerVoiceListenState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EPlayerVoiceListenState>() {
  return ::proto::dota::EPlayerVoiceListenState_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EProjectionEvent> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EProjectionEvent>() {
  return ::proto::dota::EProjectionEvent_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dota_5fusermessages_2eproto__INCLUDED
