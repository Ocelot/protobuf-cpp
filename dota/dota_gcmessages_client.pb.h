// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dota_gcmessages_client.proto

#ifndef PROTOBUF_dota_5fgcmessages_5fclient_2eproto__INCLUDED
#define PROTOBUF_dota_5fgcmessages_5fclient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages.pb.h"
#include "dota_shared_enums.pb.h"
#include "dota_gcmessages_common.pb.h"
#include "gcsdk_gcmessages.pb.h"
#include "dota_gcmessages_common_match_management.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
namespace dota {
class CAdditionalEquipSlot;
class CAdditionalEquipSlotDefaultTypeInternal;
extern CAdditionalEquipSlotDefaultTypeInternal _CAdditionalEquipSlot_default_instance_;
class CBroadcast_PostGameDataFrame_Request;
class CBroadcast_PostGameDataFrame_RequestDefaultTypeInternal;
extern CBroadcast_PostGameDataFrame_RequestDefaultTypeInternal _CBroadcast_PostGameDataFrame_Request_default_instance_;
class CCompendiumGameList;
class CCompendiumGameListDefaultTypeInternal;
extern CCompendiumGameListDefaultTypeInternal _CCompendiumGameList_default_instance_;
class CCompendiumGameTimeline;
class CCompendiumGameTimelineDefaultTypeInternal;
extern CCompendiumGameTimelineDefaultTypeInternal _CCompendiumGameTimeline_default_instance_;
class CCompendiumTimestampedData;
class CCompendiumTimestampedDataDefaultTypeInternal;
extern CCompendiumTimestampedDataDefaultTypeInternal _CCompendiumTimestampedData_default_instance_;
class CDOTAClientHardwareSpecs;
class CDOTAClientHardwareSpecsDefaultTypeInternal;
extern CDOTAClientHardwareSpecsDefaultTypeInternal _CDOTAClientHardwareSpecs_default_instance_;
class CDOTALobbyMember;
class CDOTALobbyMemberDefaultTypeInternal;
extern CDOTALobbyMemberDefaultTypeInternal _CDOTALobbyMember_default_instance_;
class CDOTALobbyMember_CDOTALobbyMemberXPBonus;
class CDOTALobbyMember_CDOTALobbyMemberXPBonusDefaultTypeInternal;
extern CDOTALobbyMember_CDOTALobbyMemberXPBonusDefaultTypeInternal _CDOTALobbyMember_CDOTALobbyMemberXPBonus_default_instance_;
class CDOTASaveGame;
class CDOTASaveGameDefaultTypeInternal;
extern CDOTASaveGameDefaultTypeInternal _CDOTASaveGame_default_instance_;
class CDOTASaveGame_Player;
class CDOTASaveGame_PlayerDefaultTypeInternal;
extern CDOTASaveGame_PlayerDefaultTypeInternal _CDOTASaveGame_Player_default_instance_;
class CDOTASaveGame_SaveInstance;
class CDOTASaveGame_SaveInstanceDefaultTypeInternal;
extern CDOTASaveGame_SaveInstanceDefaultTypeInternal _CDOTASaveGame_SaveInstance_default_instance_;
class CDOTASaveGame_SaveInstance_PlayerPositions;
class CDOTASaveGame_SaveInstance_PlayerPositionsDefaultTypeInternal;
extern CDOTASaveGame_SaveInstance_PlayerPositionsDefaultTypeInternal _CDOTASaveGame_SaveInstance_PlayerPositions_default_instance_;
class CDynamicLeagueData;
class CDynamicLeagueDataDefaultTypeInternal;
extern CDynamicLeagueDataDefaultTypeInternal _CDynamicLeagueData_default_instance_;
class CGCMsgGetIPASN;
class CGCMsgGetIPASNDefaultTypeInternal;
extern CGCMsgGetIPASNDefaultTypeInternal _CGCMsgGetIPASN_default_instance_;
class CGCMsgGetIPASNResponse;
class CGCMsgGetIPASNResponseDefaultTypeInternal;
extern CGCMsgGetIPASNResponseDefaultTypeInternal _CGCMsgGetIPASNResponse_default_instance_;
class CGCMsgGetIPLocation;
class CGCMsgGetIPLocationDefaultTypeInternal;
extern CGCMsgGetIPLocationDefaultTypeInternal _CGCMsgGetIPLocation_default_instance_;
class CGCMsgGetIPLocationResponse;
class CGCMsgGetIPLocationResponseDefaultTypeInternal;
extern CGCMsgGetIPLocationResponseDefaultTypeInternal _CGCMsgGetIPLocationResponse_default_instance_;
class CGCMsgGetSystemStats;
class CGCMsgGetSystemStatsDefaultTypeInternal;
extern CGCMsgGetSystemStatsDefaultTypeInternal _CGCMsgGetSystemStats_default_instance_;
class CGCMsgGetSystemStatsResponse;
class CGCMsgGetSystemStatsResponseDefaultTypeInternal;
extern CGCMsgGetSystemStatsResponseDefaultTypeInternal _CGCMsgGetSystemStatsResponse_default_instance_;
class CGCMsgMemCachedDelete;
class CGCMsgMemCachedDeleteDefaultTypeInternal;
extern CGCMsgMemCachedDeleteDefaultTypeInternal _CGCMsgMemCachedDelete_default_instance_;
class CGCMsgMemCachedGet;
class CGCMsgMemCachedGetDefaultTypeInternal;
extern CGCMsgMemCachedGetDefaultTypeInternal _CGCMsgMemCachedGet_default_instance_;
class CGCMsgMemCachedGetResponse;
class CGCMsgMemCachedGetResponseDefaultTypeInternal;
extern CGCMsgMemCachedGetResponseDefaultTypeInternal _CGCMsgMemCachedGetResponse_default_instance_;
class CGCMsgMemCachedGetResponse_ValueTag;
class CGCMsgMemCachedGetResponse_ValueTagDefaultTypeInternal;
extern CGCMsgMemCachedGetResponse_ValueTagDefaultTypeInternal _CGCMsgMemCachedGetResponse_ValueTag_default_instance_;
class CGCMsgMemCachedSet;
class CGCMsgMemCachedSetDefaultTypeInternal;
extern CGCMsgMemCachedSetDefaultTypeInternal _CGCMsgMemCachedSet_default_instance_;
class CGCMsgMemCachedSet_KeyPair;
class CGCMsgMemCachedSet_KeyPairDefaultTypeInternal;
extern CGCMsgMemCachedSet_KeyPairDefaultTypeInternal _CGCMsgMemCachedSet_KeyPair_default_instance_;
class CGCMsgMemCachedStats;
class CGCMsgMemCachedStatsDefaultTypeInternal;
extern CGCMsgMemCachedStatsDefaultTypeInternal _CGCMsgMemCachedStats_default_instance_;
class CGCMsgMemCachedStatsResponse;
class CGCMsgMemCachedStatsResponseDefaultTypeInternal;
extern CGCMsgMemCachedStatsResponseDefaultTypeInternal _CGCMsgMemCachedStatsResponse_default_instance_;
class CGCMsgSQLStats;
class CGCMsgSQLStatsDefaultTypeInternal;
extern CGCMsgSQLStatsDefaultTypeInternal _CGCMsgSQLStats_default_instance_;
class CGCMsgSQLStatsResponse;
class CGCMsgSQLStatsResponseDefaultTypeInternal;
extern CGCMsgSQLStatsResponseDefaultTypeInternal _CGCMsgSQLStatsResponse_default_instance_;
class CGCMsgSystemStatsSchema;
class CGCMsgSystemStatsSchemaDefaultTypeInternal;
extern CGCMsgSystemStatsSchemaDefaultTypeInternal _CGCMsgSystemStatsSchema_default_instance_;
class CGCSystemMsg_GetAccountDetails;
class CGCSystemMsg_GetAccountDetailsDefaultTypeInternal;
extern CGCSystemMsg_GetAccountDetailsDefaultTypeInternal _CGCSystemMsg_GetAccountDetails_default_instance_;
class CGCSystemMsg_GetAccountDetails_Response;
class CGCSystemMsg_GetAccountDetails_ResponseDefaultTypeInternal;
extern CGCSystemMsg_GetAccountDetails_ResponseDefaultTypeInternal _CGCSystemMsg_GetAccountDetails_Response_default_instance_;
class CGCSystemMsg_GetPurchaseTrust_Request;
class CGCSystemMsg_GetPurchaseTrust_RequestDefaultTypeInternal;
extern CGCSystemMsg_GetPurchaseTrust_RequestDefaultTypeInternal _CGCSystemMsg_GetPurchaseTrust_Request_default_instance_;
class CGCSystemMsg_GetPurchaseTrust_Response;
class CGCSystemMsg_GetPurchaseTrust_ResponseDefaultTypeInternal;
extern CGCSystemMsg_GetPurchaseTrust_ResponseDefaultTypeInternal _CGCSystemMsg_GetPurchaseTrust_Response_default_instance_;
class CGCToGCMsgMasterAck;
class CGCToGCMsgMasterAckDefaultTypeInternal;
extern CGCToGCMsgMasterAckDefaultTypeInternal _CGCToGCMsgMasterAck_default_instance_;
class CGCToGCMsgMasterAck_Process;
class CGCToGCMsgMasterAck_ProcessDefaultTypeInternal;
extern CGCToGCMsgMasterAck_ProcessDefaultTypeInternal _CGCToGCMsgMasterAck_Process_default_instance_;
class CGCToGCMsgMasterAck_Response;
class CGCToGCMsgMasterAck_ResponseDefaultTypeInternal;
extern CGCToGCMsgMasterAck_ResponseDefaultTypeInternal _CGCToGCMsgMasterAck_Response_default_instance_;
class CGCToGCMsgMasterStartupComplete;
class CGCToGCMsgMasterStartupCompleteDefaultTypeInternal;
extern CGCToGCMsgMasterStartupCompleteDefaultTypeInternal _CGCToGCMsgMasterStartupComplete_default_instance_;
class CGCToGCMsgMasterStartupComplete_GCInfo;
class CGCToGCMsgMasterStartupComplete_GCInfoDefaultTypeInternal;
extern CGCToGCMsgMasterStartupComplete_GCInfoDefaultTypeInternal _CGCToGCMsgMasterStartupComplete_GCInfo_default_instance_;
class CGCToGCMsgRouted;
class CGCToGCMsgRoutedDefaultTypeInternal;
extern CGCToGCMsgRoutedDefaultTypeInternal _CGCToGCMsgRouted_default_instance_;
class CGCToGCMsgRoutedReply;
class CGCToGCMsgRoutedReplyDefaultTypeInternal;
extern CGCToGCMsgRoutedReplyDefaultTypeInternal _CGCToGCMsgRoutedReply_default_instance_;
class CIPASNInfo;
class CIPASNInfoDefaultTypeInternal;
extern CIPASNInfoDefaultTypeInternal _CIPASNInfo_default_instance_;
class CIPLocationInfo;
class CIPLocationInfoDefaultTypeInternal;
extern CIPLocationInfoDefaultTypeInternal _CIPLocationInfo_default_instance_;
class CLeagueData;
class CLeagueDataDefaultTypeInternal;
extern CLeagueDataDefaultTypeInternal _CLeagueData_default_instance_;
class CLobbyBroadcastChannelInfo;
class CLobbyBroadcastChannelInfoDefaultTypeInternal;
extern CLobbyBroadcastChannelInfoDefaultTypeInternal _CLobbyBroadcastChannelInfo_default_instance_;
class CLobbyTeamDetails;
class CLobbyTeamDetailsDefaultTypeInternal;
extern CLobbyTeamDetailsDefaultTypeInternal _CLobbyTeamDetails_default_instance_;
class CLobbyTimedRewardDetails;
class CLobbyTimedRewardDetailsDefaultTypeInternal;
extern CLobbyTimedRewardDetailsDefaultTypeInternal _CLobbyTimedRewardDetails_default_instance_;
class CMatchAdditionalUnitInventory;
class CMatchAdditionalUnitInventoryDefaultTypeInternal;
extern CMatchAdditionalUnitInventoryDefaultTypeInternal _CMatchAdditionalUnitInventory_default_instance_;
class CMatchHeroSelectEvent;
class CMatchHeroSelectEventDefaultTypeInternal;
extern CMatchHeroSelectEventDefaultTypeInternal _CMatchHeroSelectEvent_default_instance_;
class CMatchPlayerAbilityUpgrade;
class CMatchPlayerAbilityUpgradeDefaultTypeInternal;
extern CMatchPlayerAbilityUpgradeDefaultTypeInternal _CMatchPlayerAbilityUpgrade_default_instance_;
class CMatchPlayerPermanentBuff;
class CMatchPlayerPermanentBuffDefaultTypeInternal;
extern CMatchPlayerPermanentBuffDefaultTypeInternal _CMatchPlayerPermanentBuff_default_instance_;
class CMsgAMAddFreeLicense;
class CMsgAMAddFreeLicenseDefaultTypeInternal;
extern CMsgAMAddFreeLicenseDefaultTypeInternal _CMsgAMAddFreeLicense_default_instance_;
class CMsgAMAddFreeLicenseResponse;
class CMsgAMAddFreeLicenseResponseDefaultTypeInternal;
extern CMsgAMAddFreeLicenseResponseDefaultTypeInternal _CMsgAMAddFreeLicenseResponse_default_instance_;
class CMsgAMFindAccounts;
class CMsgAMFindAccountsDefaultTypeInternal;
extern CMsgAMFindAccountsDefaultTypeInternal _CMsgAMFindAccounts_default_instance_;
class CMsgAMFindAccountsResponse;
class CMsgAMFindAccountsResponseDefaultTypeInternal;
extern CMsgAMFindAccountsResponseDefaultTypeInternal _CMsgAMFindAccountsResponse_default_instance_;
class CMsgAMGetLicenses;
class CMsgAMGetLicensesDefaultTypeInternal;
extern CMsgAMGetLicensesDefaultTypeInternal _CMsgAMGetLicenses_default_instance_;
class CMsgAMGetLicensesResponse;
class CMsgAMGetLicensesResponseDefaultTypeInternal;
extern CMsgAMGetLicensesResponseDefaultTypeInternal _CMsgAMGetLicensesResponse_default_instance_;
class CMsgAMGetUserGameStats;
class CMsgAMGetUserGameStatsDefaultTypeInternal;
extern CMsgAMGetUserGameStatsDefaultTypeInternal _CMsgAMGetUserGameStats_default_instance_;
class CMsgAMGetUserGameStatsResponse;
class CMsgAMGetUserGameStatsResponseDefaultTypeInternal;
extern CMsgAMGetUserGameStatsResponseDefaultTypeInternal _CMsgAMGetUserGameStatsResponse_default_instance_;
class CMsgAMGetUserGameStatsResponse_Achievement_Blocks;
class CMsgAMGetUserGameStatsResponse_Achievement_BlocksDefaultTypeInternal;
extern CMsgAMGetUserGameStatsResponse_Achievement_BlocksDefaultTypeInternal _CMsgAMGetUserGameStatsResponse_Achievement_Blocks_default_instance_;
class CMsgAMGetUserGameStatsResponse_Stats;
class CMsgAMGetUserGameStatsResponse_StatsDefaultTypeInternal;
extern CMsgAMGetUserGameStatsResponse_StatsDefaultTypeInternal _CMsgAMGetUserGameStatsResponse_Stats_default_instance_;
class CMsgAMGrantGuestPasses2;
class CMsgAMGrantGuestPasses2DefaultTypeInternal;
extern CMsgAMGrantGuestPasses2DefaultTypeInternal _CMsgAMGrantGuestPasses2_default_instance_;
class CMsgAMGrantGuestPasses2Response;
class CMsgAMGrantGuestPasses2ResponseDefaultTypeInternal;
extern CMsgAMGrantGuestPasses2ResponseDefaultTypeInternal _CMsgAMGrantGuestPasses2Response_default_instance_;
class CMsgAMSendEmail;
class CMsgAMSendEmailDefaultTypeInternal;
extern CMsgAMSendEmailDefaultTypeInternal _CMsgAMSendEmail_default_instance_;
class CMsgAMSendEmailResponse;
class CMsgAMSendEmailResponseDefaultTypeInternal;
extern CMsgAMSendEmailResponseDefaultTypeInternal _CMsgAMSendEmailResponse_default_instance_;
class CMsgAMSendEmail_PersonaNameReplacementToken;
class CMsgAMSendEmail_PersonaNameReplacementTokenDefaultTypeInternal;
extern CMsgAMSendEmail_PersonaNameReplacementTokenDefaultTypeInternal _CMsgAMSendEmail_PersonaNameReplacementToken_default_instance_;
class CMsgAMSendEmail_ReplacementToken;
class CMsgAMSendEmail_ReplacementTokenDefaultTypeInternal;
extern CMsgAMSendEmail_ReplacementTokenDefaultTypeInternal _CMsgAMSendEmail_ReplacementToken_default_instance_;
class CMsgArcanaVotes;
class CMsgArcanaVotesDefaultTypeInternal;
extern CMsgArcanaVotesDefaultTypeInternal _CMsgArcanaVotes_default_instance_;
class CMsgArcanaVotes_Match;
class CMsgArcanaVotes_MatchDefaultTypeInternal;
extern CMsgArcanaVotes_MatchDefaultTypeInternal _CMsgArcanaVotes_Match_default_instance_;
class CMsgBalancedShuffleLobby;
class CMsgBalancedShuffleLobbyDefaultTypeInternal;
extern CMsgBalancedShuffleLobbyDefaultTypeInternal _CMsgBalancedShuffleLobby_default_instance_;
class CMsgBattleCupVictory;
class CMsgBattleCupVictoryDefaultTypeInternal;
extern CMsgBattleCupVictoryDefaultTypeInternal _CMsgBattleCupVictory_default_instance_;
class CMsgCastMatchVote;
class CMsgCastMatchVoteDefaultTypeInternal;
extern CMsgCastMatchVoteDefaultTypeInternal _CMsgCastMatchVote_default_instance_;
class CMsgClientHello;
class CMsgClientHelloDefaultTypeInternal;
extern CMsgClientHelloDefaultTypeInternal _CMsgClientHello_default_instance_;
class CMsgClientProvideSurveyResult;
class CMsgClientProvideSurveyResultDefaultTypeInternal;
extern CMsgClientProvideSurveyResultDefaultTypeInternal _CMsgClientProvideSurveyResult_default_instance_;
class CMsgClientProvideSurveyResult_Response;
class CMsgClientProvideSurveyResult_ResponseDefaultTypeInternal;
extern CMsgClientProvideSurveyResult_ResponseDefaultTypeInternal _CMsgClientProvideSurveyResult_Response_default_instance_;
class CMsgClientSuspended;
class CMsgClientSuspendedDefaultTypeInternal;
extern CMsgClientSuspendedDefaultTypeInternal _CMsgClientSuspended_default_instance_;
class CMsgClientToGCAddTI6TreeProgress;
class CMsgClientToGCAddTI6TreeProgressDefaultTypeInternal;
extern CMsgClientToGCAddTI6TreeProgressDefaultTypeInternal _CMsgClientToGCAddTI6TreeProgress_default_instance_;
class CMsgClientToGCApplyGemCombiner;
class CMsgClientToGCApplyGemCombinerDefaultTypeInternal;
extern CMsgClientToGCApplyGemCombinerDefaultTypeInternal _CMsgClientToGCApplyGemCombiner_default_instance_;
class CMsgClientToGCCreateHeroStatue;
class CMsgClientToGCCreateHeroStatueDefaultTypeInternal;
extern CMsgClientToGCCreateHeroStatueDefaultTypeInternal _CMsgClientToGCCreateHeroStatue_default_instance_;
class CMsgClientToGCCreatePlayerCardPack;
class CMsgClientToGCCreatePlayerCardPackDefaultTypeInternal;
extern CMsgClientToGCCreatePlayerCardPackDefaultTypeInternal _CMsgClientToGCCreatePlayerCardPack_default_instance_;
class CMsgClientToGCCreatePlayerCardPackResponse;
class CMsgClientToGCCreatePlayerCardPackResponseDefaultTypeInternal;
extern CMsgClientToGCCreatePlayerCardPackResponseDefaultTypeInternal _CMsgClientToGCCreatePlayerCardPackResponse_default_instance_;
class CMsgClientToGCCustomGamePlayerCountRequest;
class CMsgClientToGCCustomGamePlayerCountRequestDefaultTypeInternal;
extern CMsgClientToGCCustomGamePlayerCountRequestDefaultTypeInternal _CMsgClientToGCCustomGamePlayerCountRequest_default_instance_;
class CMsgClientToGCCustomGamesFriendsPlayedRequest;
class CMsgClientToGCCustomGamesFriendsPlayedRequestDefaultTypeInternal;
extern CMsgClientToGCCustomGamesFriendsPlayedRequestDefaultTypeInternal _CMsgClientToGCCustomGamesFriendsPlayedRequest_default_instance_;
class CMsgClientToGCEmoticonDataRequest;
class CMsgClientToGCEmoticonDataRequestDefaultTypeInternal;
extern CMsgClientToGCEmoticonDataRequestDefaultTypeInternal _CMsgClientToGCEmoticonDataRequest_default_instance_;
class CMsgClientToGCFeaturedHeroesRequest;
class CMsgClientToGCFeaturedHeroesRequestDefaultTypeInternal;
extern CMsgClientToGCFeaturedHeroesRequestDefaultTypeInternal _CMsgClientToGCFeaturedHeroesRequest_default_instance_;
class CMsgClientToGCFriendsPlayedCustomGameRequest;
class CMsgClientToGCFriendsPlayedCustomGameRequestDefaultTypeInternal;
extern CMsgClientToGCFriendsPlayedCustomGameRequestDefaultTypeInternal _CMsgClientToGCFriendsPlayedCustomGameRequest_default_instance_;
class CMsgClientToGCGetAdditionalEquips;
class CMsgClientToGCGetAdditionalEquipsDefaultTypeInternal;
extern CMsgClientToGCGetAdditionalEquipsDefaultTypeInternal _CMsgClientToGCGetAdditionalEquips_default_instance_;
class CMsgClientToGCGetAdditionalEquipsResponse;
class CMsgClientToGCGetAdditionalEquipsResponseDefaultTypeInternal;
extern CMsgClientToGCGetAdditionalEquipsResponseDefaultTypeInternal _CMsgClientToGCGetAdditionalEquipsResponse_default_instance_;
class CMsgClientToGCGetAllHeroOrder;
class CMsgClientToGCGetAllHeroOrderDefaultTypeInternal;
extern CMsgClientToGCGetAllHeroOrderDefaultTypeInternal _CMsgClientToGCGetAllHeroOrder_default_instance_;
class CMsgClientToGCGetAllHeroOrderResponse;
class CMsgClientToGCGetAllHeroOrderResponseDefaultTypeInternal;
extern CMsgClientToGCGetAllHeroOrderResponseDefaultTypeInternal _CMsgClientToGCGetAllHeroOrderResponse_default_instance_;
class CMsgClientToGCGetAllHeroProgress;
class CMsgClientToGCGetAllHeroProgressDefaultTypeInternal;
extern CMsgClientToGCGetAllHeroProgressDefaultTypeInternal _CMsgClientToGCGetAllHeroProgress_default_instance_;
class CMsgClientToGCGetAllHeroProgressResponse;
class CMsgClientToGCGetAllHeroProgressResponseDefaultTypeInternal;
extern CMsgClientToGCGetAllHeroProgressResponseDefaultTypeInternal _CMsgClientToGCGetAllHeroProgressResponse_default_instance_;
class CMsgClientToGCGetEventGoals;
class CMsgClientToGCGetEventGoalsDefaultTypeInternal;
extern CMsgClientToGCGetEventGoalsDefaultTypeInternal _CMsgClientToGCGetEventGoals_default_instance_;
class CMsgClientToGCGetLeagueSeries;
class CMsgClientToGCGetLeagueSeriesDefaultTypeInternal;
extern CMsgClientToGCGetLeagueSeriesDefaultTypeInternal _CMsgClientToGCGetLeagueSeries_default_instance_;
class CMsgClientToGCGetLeagueSeriesResponse;
class CMsgClientToGCGetLeagueSeriesResponseDefaultTypeInternal;
extern CMsgClientToGCGetLeagueSeriesResponseDefaultTypeInternal _CMsgClientToGCGetLeagueSeriesResponse_default_instance_;
class CMsgClientToGCGetLeagueSeriesResponse_Series;
class CMsgClientToGCGetLeagueSeriesResponse_SeriesDefaultTypeInternal;
extern CMsgClientToGCGetLeagueSeriesResponse_SeriesDefaultTypeInternal _CMsgClientToGCGetLeagueSeriesResponse_Series_default_instance_;
class CMsgClientToGCGetLeagueSeriesResponse_Series_Team;
class CMsgClientToGCGetLeagueSeriesResponse_Series_TeamDefaultTypeInternal;
extern CMsgClientToGCGetLeagueSeriesResponse_Series_TeamDefaultTypeInternal _CMsgClientToGCGetLeagueSeriesResponse_Series_Team_default_instance_;
class CMsgClientToGCGetProfileCard;
class CMsgClientToGCGetProfileCardDefaultTypeInternal;
extern CMsgClientToGCGetProfileCardDefaultTypeInternal _CMsgClientToGCGetProfileCard_default_instance_;
class CMsgClientToGCGetProfileCardStats;
class CMsgClientToGCGetProfileCardStatsDefaultTypeInternal;
extern CMsgClientToGCGetProfileCardStatsDefaultTypeInternal _CMsgClientToGCGetProfileCardStats_default_instance_;
class CMsgClientToGCGetProfileTickets;
class CMsgClientToGCGetProfileTicketsDefaultTypeInternal;
extern CMsgClientToGCGetProfileTicketsDefaultTypeInternal _CMsgClientToGCGetProfileTickets_default_instance_;
class CMsgClientToGCGetQuestProgress;
class CMsgClientToGCGetQuestProgressDefaultTypeInternal;
extern CMsgClientToGCGetQuestProgressDefaultTypeInternal _CMsgClientToGCGetQuestProgress_default_instance_;
class CMsgClientToGCGetQuestProgressResponse;
class CMsgClientToGCGetQuestProgressResponseDefaultTypeInternal;
extern CMsgClientToGCGetQuestProgressResponseDefaultTypeInternal _CMsgClientToGCGetQuestProgressResponse_default_instance_;
class CMsgClientToGCGetQuestProgressResponse_Challenge;
class CMsgClientToGCGetQuestProgressResponse_ChallengeDefaultTypeInternal;
extern CMsgClientToGCGetQuestProgressResponse_ChallengeDefaultTypeInternal _CMsgClientToGCGetQuestProgressResponse_Challenge_default_instance_;
class CMsgClientToGCGetQuestProgressResponse_Quest;
class CMsgClientToGCGetQuestProgressResponse_QuestDefaultTypeInternal;
extern CMsgClientToGCGetQuestProgressResponse_QuestDefaultTypeInternal _CMsgClientToGCGetQuestProgressResponse_Quest_default_instance_;
class CMsgClientToGCGetTrophyList;
class CMsgClientToGCGetTrophyListDefaultTypeInternal;
extern CMsgClientToGCGetTrophyListDefaultTypeInternal _CMsgClientToGCGetTrophyList_default_instance_;
class CMsgClientToGCGetTrophyListResponse;
class CMsgClientToGCGetTrophyListResponseDefaultTypeInternal;
extern CMsgClientToGCGetTrophyListResponseDefaultTypeInternal _CMsgClientToGCGetTrophyListResponse_default_instance_;
class CMsgClientToGCGetTrophyListResponse_Trophy;
class CMsgClientToGCGetTrophyListResponse_TrophyDefaultTypeInternal;
extern CMsgClientToGCGetTrophyListResponse_TrophyDefaultTypeInternal _CMsgClientToGCGetTrophyListResponse_Trophy_default_instance_;
class CMsgClientToGCGiveTip;
class CMsgClientToGCGiveTipDefaultTypeInternal;
extern CMsgClientToGCGiveTipDefaultTypeInternal _CMsgClientToGCGiveTip_default_instance_;
class CMsgClientToGCGiveTipResponse;
class CMsgClientToGCGiveTipResponseDefaultTypeInternal;
extern CMsgClientToGCGiveTipResponseDefaultTypeInternal _CMsgClientToGCGiveTipResponse_default_instance_;
class CMsgClientToGCH264Unsupported;
class CMsgClientToGCH264UnsupportedDefaultTypeInternal;
extern CMsgClientToGCH264UnsupportedDefaultTypeInternal _CMsgClientToGCH264Unsupported_default_instance_;
class CMsgClientToGCHasPlayerVotedForMVP;
class CMsgClientToGCHasPlayerVotedForMVPDefaultTypeInternal;
extern CMsgClientToGCHasPlayerVotedForMVPDefaultTypeInternal _CMsgClientToGCHasPlayerVotedForMVP_default_instance_;
class CMsgClientToGCHasPlayerVotedForMVPResponse;
class CMsgClientToGCHasPlayerVotedForMVPResponseDefaultTypeInternal;
extern CMsgClientToGCHasPlayerVotedForMVPResponseDefaultTypeInternal _CMsgClientToGCHasPlayerVotedForMVPResponse_default_instance_;
class CMsgClientToGCJoinPlaytest;
class CMsgClientToGCJoinPlaytestDefaultTypeInternal;
extern CMsgClientToGCJoinPlaytestDefaultTypeInternal _CMsgClientToGCJoinPlaytest_default_instance_;
class CMsgClientToGCJoinPlaytestResponse;
class CMsgClientToGCJoinPlaytestResponseDefaultTypeInternal;
extern CMsgClientToGCJoinPlaytestResponseDefaultTypeInternal _CMsgClientToGCJoinPlaytestResponse_default_instance_;
class CMsgClientToGCMarkNotificationListRead;
class CMsgClientToGCMarkNotificationListReadDefaultTypeInternal;
extern CMsgClientToGCMarkNotificationListReadDefaultTypeInternal _CMsgClientToGCMarkNotificationListRead_default_instance_;
class CMsgClientToGCOpenPlayerCardPack;
class CMsgClientToGCOpenPlayerCardPackDefaultTypeInternal;
extern CMsgClientToGCOpenPlayerCardPackDefaultTypeInternal _CMsgClientToGCOpenPlayerCardPack_default_instance_;
class CMsgClientToGCOpenPlayerCardPackResponse;
class CMsgClientToGCOpenPlayerCardPackResponseDefaultTypeInternal;
extern CMsgClientToGCOpenPlayerCardPackResponseDefaultTypeInternal _CMsgClientToGCOpenPlayerCardPackResponse_default_instance_;
class CMsgClientToGCPlayerStatsRequest;
class CMsgClientToGCPlayerStatsRequestDefaultTypeInternal;
extern CMsgClientToGCPlayerStatsRequestDefaultTypeInternal _CMsgClientToGCPlayerStatsRequest_default_instance_;
class CMsgClientToGCPublishUserStat;
class CMsgClientToGCPublishUserStatDefaultTypeInternal;
extern CMsgClientToGCPublishUserStatDefaultTypeInternal _CMsgClientToGCPublishUserStat_default_instance_;
class CMsgClientToGCRecordCompendiumStats;
class CMsgClientToGCRecordCompendiumStatsDefaultTypeInternal;
extern CMsgClientToGCRecordCompendiumStatsDefaultTypeInternal _CMsgClientToGCRecordCompendiumStats_default_instance_;
class CMsgClientToGCRecyclePlayerCard;
class CMsgClientToGCRecyclePlayerCardDefaultTypeInternal;
extern CMsgClientToGCRecyclePlayerCardDefaultTypeInternal _CMsgClientToGCRecyclePlayerCard_default_instance_;
class CMsgClientToGCRecyclePlayerCardResponse;
class CMsgClientToGCRecyclePlayerCardResponseDefaultTypeInternal;
extern CMsgClientToGCRecyclePlayerCardResponseDefaultTypeInternal _CMsgClientToGCRecyclePlayerCardResponse_default_instance_;
class CMsgClientToGCRequestArcanaVotesRemaining;
class CMsgClientToGCRequestArcanaVotesRemainingDefaultTypeInternal;
extern CMsgClientToGCRequestArcanaVotesRemainingDefaultTypeInternal _CMsgClientToGCRequestArcanaVotesRemaining_default_instance_;
class CMsgClientToGCRequestArcanaVotesRemainingResponse;
class CMsgClientToGCRequestArcanaVotesRemainingResponseDefaultTypeInternal;
extern CMsgClientToGCRequestArcanaVotesRemainingResponseDefaultTypeInternal _CMsgClientToGCRequestArcanaVotesRemainingResponse_default_instance_;
class CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote;
class CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVoteDefaultTypeInternal;
extern CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVoteDefaultTypeInternal _CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote_default_instance_;
class CMsgClientToGCRequestEventPointLog;
class CMsgClientToGCRequestEventPointLogDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogDefaultTypeInternal _CMsgClientToGCRequestEventPointLog_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse;
class CMsgClientToGCRequestEventPointLogResponseDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponseDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent;
class CMsgClientToGCRequestEventPointLogResponse_ActionRewardEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_ActionRewardEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent;
class CMsgClientToGCRequestEventPointLogResponse_BracketRewardEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_BracketRewardEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent;
class CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction;
class CMsgClientToGCRequestEventPointLogResponse_EventPointTransactionDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_EventPointTransactionDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent;
class CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent;
class CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent;
class CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent;
class CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent;
class CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent;
class CMsgClientToGCRequestEventPointLogResponse_RecycledItemEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_RecycledItemEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent;
class CMsgClientToGCRequestEventPointLogResponse_TipGivenEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_TipGivenEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent;
class CMsgClientToGCRequestEventPointLogResponse_TipReceivedEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_TipReceivedEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent;
class CMsgClientToGCRequestEventPointLogResponse_WagerWonEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_WagerWonEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent;
class CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent_default_instance_;
class CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent;
class CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEventDefaultTypeInternal;
extern CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEventDefaultTypeInternal _CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent_default_instance_;
class CMsgClientToGCRequestH264Support;
class CMsgClientToGCRequestH264SupportDefaultTypeInternal;
extern CMsgClientToGCRequestH264SupportDefaultTypeInternal _CMsgClientToGCRequestH264Support_default_instance_;
class CMsgClientToGCRequestLinaGameResult;
class CMsgClientToGCRequestLinaGameResultDefaultTypeInternal;
extern CMsgClientToGCRequestLinaGameResultDefaultTypeInternal _CMsgClientToGCRequestLinaGameResult_default_instance_;
class CMsgClientToGCRequestLinaGameResultResponse;
class CMsgClientToGCRequestLinaGameResultResponseDefaultTypeInternal;
extern CMsgClientToGCRequestLinaGameResultResponseDefaultTypeInternal _CMsgClientToGCRequestLinaGameResultResponse_default_instance_;
class CMsgClientToGCRequestLinaPlaysRemaining;
class CMsgClientToGCRequestLinaPlaysRemainingDefaultTypeInternal;
extern CMsgClientToGCRequestLinaPlaysRemainingDefaultTypeInternal _CMsgClientToGCRequestLinaPlaysRemaining_default_instance_;
class CMsgClientToGCRequestLinaPlaysRemainingResponse;
class CMsgClientToGCRequestLinaPlaysRemainingResponseDefaultTypeInternal;
extern CMsgClientToGCRequestLinaPlaysRemainingResponseDefaultTypeInternal _CMsgClientToGCRequestLinaPlaysRemainingResponse_default_instance_;
class CMsgClientToGCRequestSlarkGameResult;
class CMsgClientToGCRequestSlarkGameResultDefaultTypeInternal;
extern CMsgClientToGCRequestSlarkGameResultDefaultTypeInternal _CMsgClientToGCRequestSlarkGameResult_default_instance_;
class CMsgClientToGCRequestSlarkGameResultResponse;
class CMsgClientToGCRequestSlarkGameResultResponseDefaultTypeInternal;
extern CMsgClientToGCRequestSlarkGameResultResponseDefaultTypeInternal _CMsgClientToGCRequestSlarkGameResultResponse_default_instance_;
class CMsgClientToGCRerollPlayerChallenge;
class CMsgClientToGCRerollPlayerChallengeDefaultTypeInternal;
extern CMsgClientToGCRerollPlayerChallengeDefaultTypeInternal _CMsgClientToGCRerollPlayerChallenge_default_instance_;
class CMsgClientToGCSelectCompendiumInGamePrediction;
class CMsgClientToGCSelectCompendiumInGamePredictionDefaultTypeInternal;
extern CMsgClientToGCSelectCompendiumInGamePredictionDefaultTypeInternal _CMsgClientToGCSelectCompendiumInGamePrediction_default_instance_;
class CMsgClientToGCSelectCompendiumInGamePredictionResponse;
class CMsgClientToGCSelectCompendiumInGamePredictionResponseDefaultTypeInternal;
extern CMsgClientToGCSelectCompendiumInGamePredictionResponseDefaultTypeInternal _CMsgClientToGCSelectCompendiumInGamePredictionResponse_default_instance_;
class CMsgClientToGCSelectCompendiumInGamePrediction_Prediction;
class CMsgClientToGCSelectCompendiumInGamePrediction_PredictionDefaultTypeInternal;
extern CMsgClientToGCSelectCompendiumInGamePrediction_PredictionDefaultTypeInternal _CMsgClientToGCSelectCompendiumInGamePrediction_Prediction_default_instance_;
class CMsgClientToGCSetAdditionalEquips;
class CMsgClientToGCSetAdditionalEquipsDefaultTypeInternal;
extern CMsgClientToGCSetAdditionalEquipsDefaultTypeInternal _CMsgClientToGCSetAdditionalEquips_default_instance_;
class CMsgClientToGCSetAdditionalEquipsResponse;
class CMsgClientToGCSetAdditionalEquipsResponseDefaultTypeInternal;
extern CMsgClientToGCSetAdditionalEquipsResponseDefaultTypeInternal _CMsgClientToGCSetAdditionalEquipsResponse_default_instance_;
class CMsgClientToGCSetProfileCardSlots;
class CMsgClientToGCSetProfileCardSlotsDefaultTypeInternal;
extern CMsgClientToGCSetProfileCardSlotsDefaultTypeInternal _CMsgClientToGCSetProfileCardSlots_default_instance_;
class CMsgClientToGCSetProfileCardSlots_CardSlot;
class CMsgClientToGCSetProfileCardSlots_CardSlotDefaultTypeInternal;
extern CMsgClientToGCSetProfileCardSlots_CardSlotDefaultTypeInternal _CMsgClientToGCSetProfileCardSlots_CardSlot_default_instance_;
class CMsgClientToGCSocialFeedPostCommentRequest;
class CMsgClientToGCSocialFeedPostCommentRequestDefaultTypeInternal;
extern CMsgClientToGCSocialFeedPostCommentRequestDefaultTypeInternal _CMsgClientToGCSocialFeedPostCommentRequest_default_instance_;
class CMsgClientToGCSocialFeedPostMessageRequest;
class CMsgClientToGCSocialFeedPostMessageRequestDefaultTypeInternal;
extern CMsgClientToGCSocialFeedPostMessageRequestDefaultTypeInternal _CMsgClientToGCSocialFeedPostMessageRequest_default_instance_;
class CMsgClientToGCSocialMatchDetailsRequest;
class CMsgClientToGCSocialMatchDetailsRequestDefaultTypeInternal;
extern CMsgClientToGCSocialMatchDetailsRequestDefaultTypeInternal _CMsgClientToGCSocialMatchDetailsRequest_default_instance_;
class CMsgClientToGCSocialMatchPostCommentRequest;
class CMsgClientToGCSocialMatchPostCommentRequestDefaultTypeInternal;
extern CMsgClientToGCSocialMatchPostCommentRequestDefaultTypeInternal _CMsgClientToGCSocialMatchPostCommentRequest_default_instance_;
class CMsgClientToGCSuspiciousActivity;
class CMsgClientToGCSuspiciousActivityDefaultTypeInternal;
extern CMsgClientToGCSuspiciousActivityDefaultTypeInternal _CMsgClientToGCSuspiciousActivity_default_instance_;
class CMsgClientToGCTeammateStatsRequest;
class CMsgClientToGCTeammateStatsRequestDefaultTypeInternal;
extern CMsgClientToGCTeammateStatsRequestDefaultTypeInternal _CMsgClientToGCTeammateStatsRequest_default_instance_;
class CMsgClientToGCTeammateStatsResponse;
class CMsgClientToGCTeammateStatsResponseDefaultTypeInternal;
extern CMsgClientToGCTeammateStatsResponseDefaultTypeInternal _CMsgClientToGCTeammateStatsResponse_default_instance_;
class CMsgClientToGCTeammateStatsResponse_TeammateStat;
class CMsgClientToGCTeammateStatsResponse_TeammateStatDefaultTypeInternal;
extern CMsgClientToGCTeammateStatsResponse_TeammateStatDefaultTypeInternal _CMsgClientToGCTeammateStatsResponse_TeammateStat_default_instance_;
class CMsgClientToGCTrackDialogResult;
class CMsgClientToGCTrackDialogResultDefaultTypeInternal;
extern CMsgClientToGCTrackDialogResultDefaultTypeInternal _CMsgClientToGCTrackDialogResult_default_instance_;
class CMsgClientToGCTransferSeasonalMMRRequest;
class CMsgClientToGCTransferSeasonalMMRRequestDefaultTypeInternal;
extern CMsgClientToGCTransferSeasonalMMRRequestDefaultTypeInternal _CMsgClientToGCTransferSeasonalMMRRequest_default_instance_;
class CMsgClientToGCTransferSeasonalMMRResponse;
class CMsgClientToGCTransferSeasonalMMRResponseDefaultTypeInternal;
extern CMsgClientToGCTransferSeasonalMMRResponseDefaultTypeInternal _CMsgClientToGCTransferSeasonalMMRResponse_default_instance_;
class CMsgClientToGCVoteForArcana;
class CMsgClientToGCVoteForArcanaDefaultTypeInternal;
extern CMsgClientToGCVoteForArcanaDefaultTypeInternal _CMsgClientToGCVoteForArcana_default_instance_;
class CMsgClientToGCVoteForArcanaResponse;
class CMsgClientToGCVoteForArcanaResponseDefaultTypeInternal;
extern CMsgClientToGCVoteForArcanaResponseDefaultTypeInternal _CMsgClientToGCVoteForArcanaResponse_default_instance_;
class CMsgClientToGCVoteForArcana_MatchVote;
class CMsgClientToGCVoteForArcana_MatchVoteDefaultTypeInternal;
extern CMsgClientToGCVoteForArcana_MatchVoteDefaultTypeInternal _CMsgClientToGCVoteForArcana_MatchVote_default_instance_;
class CMsgClientToGCVoteForMVP;
class CMsgClientToGCVoteForMVPDefaultTypeInternal;
extern CMsgClientToGCVoteForMVPDefaultTypeInternal _CMsgClientToGCVoteForMVP_default_instance_;
class CMsgClientToGCVoteForMVPResponse;
class CMsgClientToGCVoteForMVPResponseDefaultTypeInternal;
extern CMsgClientToGCVoteForMVPResponseDefaultTypeInternal _CMsgClientToGCVoteForMVPResponse_default_instance_;
class CMsgClientToGCWageringRequest;
class CMsgClientToGCWageringRequestDefaultTypeInternal;
extern CMsgClientToGCWageringRequestDefaultTypeInternal _CMsgClientToGCWageringRequest_default_instance_;
class CMsgClientWelcome;
class CMsgClientWelcomeDefaultTypeInternal;
extern CMsgClientWelcomeDefaultTypeInternal _CMsgClientWelcome_default_instance_;
class CMsgClientWelcome_Location;
class CMsgClientWelcome_LocationDefaultTypeInternal;
extern CMsgClientWelcome_LocationDefaultTypeInternal _CMsgClientWelcome_Location_default_instance_;
class CMsgClientsRejoinChatChannels;
class CMsgClientsRejoinChatChannelsDefaultTypeInternal;
extern CMsgClientsRejoinChatChannelsDefaultTypeInternal _CMsgClientsRejoinChatChannels_default_instance_;
class CMsgConnectionStatus;
class CMsgConnectionStatusDefaultTypeInternal;
extern CMsgConnectionStatusDefaultTypeInternal _CMsgConnectionStatus_default_instance_;
class CMsgDOTAAnchorPhoneNumberRequest;
class CMsgDOTAAnchorPhoneNumberRequestDefaultTypeInternal;
extern CMsgDOTAAnchorPhoneNumberRequestDefaultTypeInternal _CMsgDOTAAnchorPhoneNumberRequest_default_instance_;
class CMsgDOTAAnchorPhoneNumberResponse;
class CMsgDOTAAnchorPhoneNumberResponseDefaultTypeInternal;
extern CMsgDOTAAnchorPhoneNumberResponseDefaultTypeInternal _CMsgDOTAAnchorPhoneNumberResponse_default_instance_;
class CMsgDOTABotDebugInfo;
class CMsgDOTABotDebugInfoDefaultTypeInternal;
extern CMsgDOTABotDebugInfoDefaultTypeInternal _CMsgDOTABotDebugInfo_default_instance_;
class CMsgDOTABotDebugInfo_Bot;
class CMsgDOTABotDebugInfo_BotDefaultTypeInternal;
extern CMsgDOTABotDebugInfo_BotDefaultTypeInternal _CMsgDOTABotDebugInfo_Bot_default_instance_;
class CMsgDOTABotDebugInfo_Bot_Action;
class CMsgDOTABotDebugInfo_Bot_ActionDefaultTypeInternal;
extern CMsgDOTABotDebugInfo_Bot_ActionDefaultTypeInternal _CMsgDOTABotDebugInfo_Bot_Action_default_instance_;
class CMsgDOTABotDebugInfo_Bot_Mode;
class CMsgDOTABotDebugInfo_Bot_ModeDefaultTypeInternal;
extern CMsgDOTABotDebugInfo_Bot_ModeDefaultTypeInternal _CMsgDOTABotDebugInfo_Bot_Mode_default_instance_;
class CMsgDOTABroadcastNotification;
class CMsgDOTABroadcastNotificationDefaultTypeInternal;
extern CMsgDOTABroadcastNotificationDefaultTypeInternal _CMsgDOTABroadcastNotification_default_instance_;
class CMsgDOTAClaimEventAction;
class CMsgDOTAClaimEventActionDefaultTypeInternal;
extern CMsgDOTAClaimEventActionDefaultTypeInternal _CMsgDOTAClaimEventAction_default_instance_;
class CMsgDOTAClaimEventActionResponse;
class CMsgDOTAClaimEventActionResponseDefaultTypeInternal;
extern CMsgDOTAClaimEventActionResponseDefaultTypeInternal _CMsgDOTAClaimEventActionResponse_default_instance_;
class CMsgDOTAClaimEventActionResponse_GrantedRewardData;
class CMsgDOTAClaimEventActionResponse_GrantedRewardDataDefaultTypeInternal;
extern CMsgDOTAClaimEventActionResponse_GrantedRewardDataDefaultTypeInternal _CMsgDOTAClaimEventActionResponse_GrantedRewardData_default_instance_;
class CMsgDOTAClaimEventActionResponse_LootListRewardData;
class CMsgDOTAClaimEventActionResponse_LootListRewardDataDefaultTypeInternal;
extern CMsgDOTAClaimEventActionResponse_LootListRewardDataDefaultTypeInternal _CMsgDOTAClaimEventActionResponse_LootListRewardData_default_instance_;
class CMsgDOTAClaimEventActionResponse_MysteryItemRewardData;
class CMsgDOTAClaimEventActionResponse_MysteryItemRewardDataDefaultTypeInternal;
extern CMsgDOTAClaimEventActionResponse_MysteryItemRewardDataDefaultTypeInternal _CMsgDOTAClaimEventActionResponse_MysteryItemRewardData_default_instance_;
class CMsgDOTAClearNotifySuccessfulReport;
class CMsgDOTAClearNotifySuccessfulReportDefaultTypeInternal;
extern CMsgDOTAClearNotifySuccessfulReportDefaultTypeInternal _CMsgDOTAClearNotifySuccessfulReport_default_instance_;
class CMsgDOTACombatLogEntry;
class CMsgDOTACombatLogEntryDefaultTypeInternal;
extern CMsgDOTACombatLogEntryDefaultTypeInternal _CMsgDOTACombatLogEntry_default_instance_;
class CMsgDOTACompendiumData;
class CMsgDOTACompendiumDataDefaultTypeInternal;
extern CMsgDOTACompendiumDataDefaultTypeInternal _CMsgDOTACompendiumData_default_instance_;
class CMsgDOTACompendiumDataRequest;
class CMsgDOTACompendiumDataRequestDefaultTypeInternal;
extern CMsgDOTACompendiumDataRequestDefaultTypeInternal _CMsgDOTACompendiumDataRequest_default_instance_;
class CMsgDOTACompendiumDataResponse;
class CMsgDOTACompendiumDataResponseDefaultTypeInternal;
extern CMsgDOTACompendiumDataResponseDefaultTypeInternal _CMsgDOTACompendiumDataResponse_default_instance_;
class CMsgDOTACompendiumInGamePredictionResults;
class CMsgDOTACompendiumInGamePredictionResultsDefaultTypeInternal;
extern CMsgDOTACompendiumInGamePredictionResultsDefaultTypeInternal _CMsgDOTACompendiumInGamePredictionResults_default_instance_;
class CMsgDOTACompendiumInGamePredictionResults_PredictionResult;
class CMsgDOTACompendiumInGamePredictionResults_PredictionResultDefaultTypeInternal;
extern CMsgDOTACompendiumInGamePredictionResults_PredictionResultDefaultTypeInternal _CMsgDOTACompendiumInGamePredictionResults_PredictionResult_default_instance_;
class CMsgDOTACompendiumSelection;
class CMsgDOTACompendiumSelectionDefaultTypeInternal;
extern CMsgDOTACompendiumSelectionDefaultTypeInternal _CMsgDOTACompendiumSelection_default_instance_;
class CMsgDOTACompendiumSelectionResponse;
class CMsgDOTACompendiumSelectionResponseDefaultTypeInternal;
extern CMsgDOTACompendiumSelectionResponseDefaultTypeInternal _CMsgDOTACompendiumSelectionResponse_default_instance_;
class CMsgDOTACustomGameClientFinishedLoading;
class CMsgDOTACustomGameClientFinishedLoadingDefaultTypeInternal;
extern CMsgDOTACustomGameClientFinishedLoadingDefaultTypeInternal _CMsgDOTACustomGameClientFinishedLoading_default_instance_;
class CMsgDOTACustomGameListenServerStartedLoading;
class CMsgDOTACustomGameListenServerStartedLoadingDefaultTypeInternal;
extern CMsgDOTACustomGameListenServerStartedLoadingDefaultTypeInternal _CMsgDOTACustomGameListenServerStartedLoading_default_instance_;
class CMsgDOTAEmoticonAccessSDO;
class CMsgDOTAEmoticonAccessSDODefaultTypeInternal;
extern CMsgDOTAEmoticonAccessSDODefaultTypeInternal _CMsgDOTAEmoticonAccessSDO_default_instance_;
class CMsgDOTAEventInvite;
class CMsgDOTAEventInviteDefaultTypeInternal;
extern CMsgDOTAEventInviteDefaultTypeInternal _CMsgDOTAEventInvite_default_instance_;
class CMsgDOTAEventInvite_Team;
class CMsgDOTAEventInvite_TeamDefaultTypeInternal;
extern CMsgDOTAEventInvite_TeamDefaultTypeInternal _CMsgDOTAEventInvite_Team_default_instance_;
class CMsgDOTAFantasyPlayerMatchStats;
class CMsgDOTAFantasyPlayerMatchStatsDefaultTypeInternal;
extern CMsgDOTAFantasyPlayerMatchStatsDefaultTypeInternal _CMsgDOTAFantasyPlayerMatchStats_default_instance_;
class CMsgDOTAFantasyPlayerStats;
class CMsgDOTAFantasyPlayerStatsDefaultTypeInternal;
extern CMsgDOTAFantasyPlayerStatsDefaultTypeInternal _CMsgDOTAFantasyPlayerStats_default_instance_;
class CMsgDOTAFeaturedItems;
class CMsgDOTAFeaturedItemsDefaultTypeInternal;
extern CMsgDOTAFeaturedItemsDefaultTypeInternal _CMsgDOTAFeaturedItems_default_instance_;
class CMsgDOTAFriendRecruitInviteAcceptDecline;
class CMsgDOTAFriendRecruitInviteAcceptDeclineDefaultTypeInternal;
extern CMsgDOTAFriendRecruitInviteAcceptDeclineDefaultTypeInternal _CMsgDOTAFriendRecruitInviteAcceptDecline_default_instance_;
class CMsgDOTAFriendRecruitsRequest;
class CMsgDOTAFriendRecruitsRequestDefaultTypeInternal;
extern CMsgDOTAFriendRecruitsRequestDefaultTypeInternal _CMsgDOTAFriendRecruitsRequest_default_instance_;
class CMsgDOTAFriendRecruitsResponse;
class CMsgDOTAFriendRecruitsResponseDefaultTypeInternal;
extern CMsgDOTAFriendRecruitsResponseDefaultTypeInternal _CMsgDOTAFriendRecruitsResponse_default_instance_;
class CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus;
class CMsgDOTAFriendRecruitsResponse_FriendRecruitStatusDefaultTypeInternal;
extern CMsgDOTAFriendRecruitsResponse_FriendRecruitStatusDefaultTypeInternal _CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus_default_instance_;
class CMsgDOTAGetEventPoints;
class CMsgDOTAGetEventPointsDefaultTypeInternal;
extern CMsgDOTAGetEventPointsDefaultTypeInternal _CMsgDOTAGetEventPoints_default_instance_;
class CMsgDOTAGetEventPointsResponse;
class CMsgDOTAGetEventPointsResponseDefaultTypeInternal;
extern CMsgDOTAGetEventPointsResponseDefaultTypeInternal _CMsgDOTAGetEventPointsResponse_default_instance_;
class CMsgDOTAGetEventPointsResponse_Action;
class CMsgDOTAGetEventPointsResponse_ActionDefaultTypeInternal;
extern CMsgDOTAGetEventPointsResponse_ActionDefaultTypeInternal _CMsgDOTAGetEventPointsResponse_Action_default_instance_;
class CMsgDOTAGetPeriodicResource;
class CMsgDOTAGetPeriodicResourceDefaultTypeInternal;
extern CMsgDOTAGetPeriodicResourceDefaultTypeInternal _CMsgDOTAGetPeriodicResource_default_instance_;
class CMsgDOTAGetPeriodicResourceResponse;
class CMsgDOTAGetPeriodicResourceResponseDefaultTypeInternal;
extern CMsgDOTAGetPeriodicResourceResponseDefaultTypeInternal _CMsgDOTAGetPeriodicResourceResponse_default_instance_;
class CMsgDOTAGetPlayerMatchHistory;
class CMsgDOTAGetPlayerMatchHistoryDefaultTypeInternal;
extern CMsgDOTAGetPlayerMatchHistoryDefaultTypeInternal _CMsgDOTAGetPlayerMatchHistory_default_instance_;
class CMsgDOTAGetPlayerMatchHistoryResponse;
class CMsgDOTAGetPlayerMatchHistoryResponseDefaultTypeInternal;
extern CMsgDOTAGetPlayerMatchHistoryResponseDefaultTypeInternal _CMsgDOTAGetPlayerMatchHistoryResponse_default_instance_;
class CMsgDOTAGetPlayerMatchHistoryResponse_Match;
class CMsgDOTAGetPlayerMatchHistoryResponse_MatchDefaultTypeInternal;
extern CMsgDOTAGetPlayerMatchHistoryResponse_MatchDefaultTypeInternal _CMsgDOTAGetPlayerMatchHistoryResponse_Match_default_instance_;
class CMsgDOTAHallOfFame;
class CMsgDOTAHallOfFameDefaultTypeInternal;
extern CMsgDOTAHallOfFameDefaultTypeInternal _CMsgDOTAHallOfFame_default_instance_;
class CMsgDOTAHallOfFameRequest;
class CMsgDOTAHallOfFameRequestDefaultTypeInternal;
extern CMsgDOTAHallOfFameRequestDefaultTypeInternal _CMsgDOTAHallOfFameRequest_default_instance_;
class CMsgDOTAHallOfFameResponse;
class CMsgDOTAHallOfFameResponseDefaultTypeInternal;
extern CMsgDOTAHallOfFameResponseDefaultTypeInternal _CMsgDOTAHallOfFameResponse_default_instance_;
class CMsgDOTAHallOfFame_FeaturedFarmer;
class CMsgDOTAHallOfFame_FeaturedFarmerDefaultTypeInternal;
extern CMsgDOTAHallOfFame_FeaturedFarmerDefaultTypeInternal _CMsgDOTAHallOfFame_FeaturedFarmer_default_instance_;
class CMsgDOTAHallOfFame_FeaturedPlayer;
class CMsgDOTAHallOfFame_FeaturedPlayerDefaultTypeInternal;
extern CMsgDOTAHallOfFame_FeaturedPlayerDefaultTypeInternal _CMsgDOTAHallOfFame_FeaturedPlayer_default_instance_;
class CMsgDOTAHalloweenHighScoreRequest;
class CMsgDOTAHalloweenHighScoreRequestDefaultTypeInternal;
extern CMsgDOTAHalloweenHighScoreRequestDefaultTypeInternal _CMsgDOTAHalloweenHighScoreRequest_default_instance_;
class CMsgDOTAHalloweenHighScoreResponse;
class CMsgDOTAHalloweenHighScoreResponseDefaultTypeInternal;
extern CMsgDOTAHalloweenHighScoreResponseDefaultTypeInternal _CMsgDOTAHalloweenHighScoreResponse_default_instance_;
class CMsgDOTAHasItemDefsQuery;
class CMsgDOTAHasItemDefsQueryDefaultTypeInternal;
extern CMsgDOTAHasItemDefsQueryDefaultTypeInternal _CMsgDOTAHasItemDefsQuery_default_instance_;
class CMsgDOTAHasItemDefsResponse;
class CMsgDOTAHasItemDefsResponseDefaultTypeInternal;
extern CMsgDOTAHasItemDefsResponseDefaultTypeInternal _CMsgDOTAHasItemDefsResponse_default_instance_;
class CMsgDOTAHasItemQuery;
class CMsgDOTAHasItemQueryDefaultTypeInternal;
extern CMsgDOTAHasItemQueryDefaultTypeInternal _CMsgDOTAHasItemQuery_default_instance_;
class CMsgDOTAHasItemResponse;
class CMsgDOTAHasItemResponseDefaultTypeInternal;
extern CMsgDOTAHasItemResponseDefaultTypeInternal _CMsgDOTAHasItemResponse_default_instance_;
class CMsgDOTAHeroFavoritesAdd;
class CMsgDOTAHeroFavoritesAddDefaultTypeInternal;
extern CMsgDOTAHeroFavoritesAddDefaultTypeInternal _CMsgDOTAHeroFavoritesAdd_default_instance_;
class CMsgDOTAHeroFavoritesRemove;
class CMsgDOTAHeroFavoritesRemoveDefaultTypeInternal;
extern CMsgDOTAHeroFavoritesRemoveDefaultTypeInternal _CMsgDOTAHeroFavoritesRemove_default_instance_;
class CMsgDOTAKickedFromMatchmakingQueue;
class CMsgDOTAKickedFromMatchmakingQueueDefaultTypeInternal;
extern CMsgDOTAKickedFromMatchmakingQueueDefaultTypeInternal _CMsgDOTAKickedFromMatchmakingQueue_default_instance_;
class CMsgDOTALastHitChallengeHighScorePost;
class CMsgDOTALastHitChallengeHighScorePostDefaultTypeInternal;
extern CMsgDOTALastHitChallengeHighScorePostDefaultTypeInternal _CMsgDOTALastHitChallengeHighScorePost_default_instance_;
class CMsgDOTALastHitChallengeHighScoreRequest;
class CMsgDOTALastHitChallengeHighScoreRequestDefaultTypeInternal;
extern CMsgDOTALastHitChallengeHighScoreRequestDefaultTypeInternal _CMsgDOTALastHitChallengeHighScoreRequest_default_instance_;
class CMsgDOTALastHitChallengeHighScoreResponse;
class CMsgDOTALastHitChallengeHighScoreResponseDefaultTypeInternal;
extern CMsgDOTALastHitChallengeHighScoreResponseDefaultTypeInternal _CMsgDOTALastHitChallengeHighScoreResponse_default_instance_;
class CMsgDOTALeague;
class CMsgDOTALeagueDefaultTypeInternal;
extern CMsgDOTALeagueDefaultTypeInternal _CMsgDOTALeague_default_instance_;
class CMsgDOTALeagueScheduleEdit;
class CMsgDOTALeagueScheduleEditDefaultTypeInternal;
extern CMsgDOTALeagueScheduleEditDefaultTypeInternal _CMsgDOTALeagueScheduleEdit_default_instance_;
class CMsgDOTALeagueScheduleEditResponse;
class CMsgDOTALeagueScheduleEditResponseDefaultTypeInternal;
extern CMsgDOTALeagueScheduleEditResponseDefaultTypeInternal _CMsgDOTALeagueScheduleEditResponse_default_instance_;
class CMsgDOTALeagueScheduleRequest;
class CMsgDOTALeagueScheduleRequestDefaultTypeInternal;
extern CMsgDOTALeagueScheduleRequestDefaultTypeInternal _CMsgDOTALeagueScheduleRequest_default_instance_;
class CMsgDOTALeagueScheduleResponse;
class CMsgDOTALeagueScheduleResponseDefaultTypeInternal;
extern CMsgDOTALeagueScheduleResponseDefaultTypeInternal _CMsgDOTALeagueScheduleResponse_default_instance_;
class CMsgDOTALeaguesInMonthRequest;
class CMsgDOTALeaguesInMonthRequestDefaultTypeInternal;
extern CMsgDOTALeaguesInMonthRequestDefaultTypeInternal _CMsgDOTALeaguesInMonthRequest_default_instance_;
class CMsgDOTALeaguesInMonthResponse;
class CMsgDOTALeaguesInMonthResponseDefaultTypeInternal;
extern CMsgDOTALeaguesInMonthResponseDefaultTypeInternal _CMsgDOTALeaguesInMonthResponse_default_instance_;
class CMsgDOTALiveLeagueGameUpdate;
class CMsgDOTALiveLeagueGameUpdateDefaultTypeInternal;
extern CMsgDOTALiveLeagueGameUpdateDefaultTypeInternal _CMsgDOTALiveLeagueGameUpdate_default_instance_;
class CMsgDOTALobbyMVPAwarded;
class CMsgDOTALobbyMVPAwardedDefaultTypeInternal;
extern CMsgDOTALobbyMVPAwardedDefaultTypeInternal _CMsgDOTALobbyMVPAwarded_default_instance_;
class CMsgDOTALobbyMVPNotifyRecipient;
class CMsgDOTALobbyMVPNotifyRecipientDefaultTypeInternal;
extern CMsgDOTALobbyMVPNotifyRecipientDefaultTypeInternal _CMsgDOTALobbyMVPNotifyRecipient_default_instance_;
class CMsgDOTALobbyRichPresence;
class CMsgDOTALobbyRichPresenceDefaultTypeInternal;
extern CMsgDOTALobbyRichPresenceDefaultTypeInternal _CMsgDOTALobbyRichPresence_default_instance_;
class CMsgDOTAMatch;
class CMsgDOTAMatchDefaultTypeInternal;
extern CMsgDOTAMatchDefaultTypeInternal _CMsgDOTAMatch_default_instance_;
class CMsgDOTAMatchHistoryFilter;
class CMsgDOTAMatchHistoryFilterDefaultTypeInternal;
extern CMsgDOTAMatchHistoryFilterDefaultTypeInternal _CMsgDOTAMatchHistoryFilter_default_instance_;
class CMsgDOTAMatchVotes;
class CMsgDOTAMatchVotesDefaultTypeInternal;
extern CMsgDOTAMatchVotesDefaultTypeInternal _CMsgDOTAMatchVotes_default_instance_;
class CMsgDOTAMatchVotes_PlayerVote;
class CMsgDOTAMatchVotes_PlayerVoteDefaultTypeInternal;
extern CMsgDOTAMatchVotes_PlayerVoteDefaultTypeInternal _CMsgDOTAMatchVotes_PlayerVote_default_instance_;
class CMsgDOTAMatch_BroadcasterChannel;
class CMsgDOTAMatch_BroadcasterChannelDefaultTypeInternal;
extern CMsgDOTAMatch_BroadcasterChannelDefaultTypeInternal _CMsgDOTAMatch_BroadcasterChannel_default_instance_;
class CMsgDOTAMatch_BroadcasterInfo;
class CMsgDOTAMatch_BroadcasterInfoDefaultTypeInternal;
extern CMsgDOTAMatch_BroadcasterInfoDefaultTypeInternal _CMsgDOTAMatch_BroadcasterInfo_default_instance_;
class CMsgDOTAMatch_CustomGameData;
class CMsgDOTAMatch_CustomGameDataDefaultTypeInternal;
extern CMsgDOTAMatch_CustomGameDataDefaultTypeInternal _CMsgDOTAMatch_CustomGameData_default_instance_;
class CMsgDOTAMatch_Player;
class CMsgDOTAMatch_PlayerDefaultTypeInternal;
extern CMsgDOTAMatch_PlayerDefaultTypeInternal _CMsgDOTAMatch_Player_default_instance_;
class CMsgDOTAMatch_Player_CustomGameData;
class CMsgDOTAMatch_Player_CustomGameDataDefaultTypeInternal;
extern CMsgDOTAMatch_Player_CustomGameDataDefaultTypeInternal _CMsgDOTAMatch_Player_CustomGameData_default_instance_;
class CMsgDOTAMatchmakingStatsRequest;
class CMsgDOTAMatchmakingStatsRequestDefaultTypeInternal;
extern CMsgDOTAMatchmakingStatsRequestDefaultTypeInternal _CMsgDOTAMatchmakingStatsRequest_default_instance_;
class CMsgDOTAMatchmakingStatsResponse;
class CMsgDOTAMatchmakingStatsResponseDefaultTypeInternal;
extern CMsgDOTAMatchmakingStatsResponseDefaultTypeInternal _CMsgDOTAMatchmakingStatsResponse_default_instance_;
class CMsgDOTANotifyAccountFlagsChange;
class CMsgDOTANotifyAccountFlagsChangeDefaultTypeInternal;
extern CMsgDOTANotifyAccountFlagsChangeDefaultTypeInternal _CMsgDOTANotifyAccountFlagsChange_default_instance_;
class CMsgDOTAPCBangTimedReward;
class CMsgDOTAPCBangTimedRewardDefaultTypeInternal;
extern CMsgDOTAPCBangTimedRewardDefaultTypeInternal _CMsgDOTAPCBangTimedReward_default_instance_;
class CMsgDOTAPartyRichPresence;
class CMsgDOTAPartyRichPresenceDefaultTypeInternal;
extern CMsgDOTAPartyRichPresenceDefaultTypeInternal _CMsgDOTAPartyRichPresence_default_instance_;
class CMsgDOTAPartyRichPresence_Member;
class CMsgDOTAPartyRichPresence_MemberDefaultTypeInternal;
extern CMsgDOTAPartyRichPresence_MemberDefaultTypeInternal _CMsgDOTAPartyRichPresence_Member_default_instance_;
class CMsgDOTAPartyRichPresence_WeekendTourney;
class CMsgDOTAPartyRichPresence_WeekendTourneyDefaultTypeInternal;
extern CMsgDOTAPartyRichPresence_WeekendTourneyDefaultTypeInternal _CMsgDOTAPartyRichPresence_WeekendTourney_default_instance_;
class CMsgDOTAPeriodicResourceUpdated;
class CMsgDOTAPeriodicResourceUpdatedDefaultTypeInternal;
extern CMsgDOTAPeriodicResourceUpdatedDefaultTypeInternal _CMsgDOTAPeriodicResourceUpdated_default_instance_;
class CMsgDOTAPlayerMatchHistory;
class CMsgDOTAPlayerMatchHistoryDefaultTypeInternal;
extern CMsgDOTAPlayerMatchHistoryDefaultTypeInternal _CMsgDOTAPlayerMatchHistory_default_instance_;
class CMsgDOTAPopup;
class CMsgDOTAPopupDefaultTypeInternal;
extern CMsgDOTAPopupDefaultTypeInternal _CMsgDOTAPopup_default_instance_;
class CMsgDOTAProcessFantasyScheduledEvent;
class CMsgDOTAProcessFantasyScheduledEventDefaultTypeInternal;
extern CMsgDOTAProcessFantasyScheduledEventDefaultTypeInternal _CMsgDOTAProcessFantasyScheduledEvent_default_instance_;
class CMsgDOTAProfileCard;
class CMsgDOTAProfileCardDefaultTypeInternal;
extern CMsgDOTAProfileCardDefaultTypeInternal _CMsgDOTAProfileCard_default_instance_;
class CMsgDOTAProfileCard_Slot;
class CMsgDOTAProfileCard_SlotDefaultTypeInternal;
extern CMsgDOTAProfileCard_SlotDefaultTypeInternal _CMsgDOTAProfileCard_Slot_default_instance_;
class CMsgDOTAProfileCard_Slot_Emoticon;
class CMsgDOTAProfileCard_Slot_EmoticonDefaultTypeInternal;
extern CMsgDOTAProfileCard_Slot_EmoticonDefaultTypeInternal _CMsgDOTAProfileCard_Slot_Emoticon_default_instance_;
class CMsgDOTAProfileCard_Slot_Hero;
class CMsgDOTAProfileCard_Slot_HeroDefaultTypeInternal;
extern CMsgDOTAProfileCard_Slot_HeroDefaultTypeInternal _CMsgDOTAProfileCard_Slot_Hero_default_instance_;
class CMsgDOTAProfileCard_Slot_Item;
class CMsgDOTAProfileCard_Slot_ItemDefaultTypeInternal;
extern CMsgDOTAProfileCard_Slot_ItemDefaultTypeInternal _CMsgDOTAProfileCard_Slot_Item_default_instance_;
class CMsgDOTAProfileCard_Slot_Stat;
class CMsgDOTAProfileCard_Slot_StatDefaultTypeInternal;
extern CMsgDOTAProfileCard_Slot_StatDefaultTypeInternal _CMsgDOTAProfileCard_Slot_Stat_default_instance_;
class CMsgDOTAProfileCard_Slot_Team;
class CMsgDOTAProfileCard_Slot_TeamDefaultTypeInternal;
extern CMsgDOTAProfileCard_Slot_TeamDefaultTypeInternal _CMsgDOTAProfileCard_Slot_Team_default_instance_;
class CMsgDOTAProfileCard_Slot_Trophy;
class CMsgDOTAProfileCard_Slot_TrophyDefaultTypeInternal;
extern CMsgDOTAProfileCard_Slot_TrophyDefaultTypeInternal _CMsgDOTAProfileCard_Slot_Trophy_default_instance_;
class CMsgDOTAProfileRequest;
class CMsgDOTAProfileRequestDefaultTypeInternal;
extern CMsgDOTAProfileRequestDefaultTypeInternal _CMsgDOTAProfileRequest_default_instance_;
class CMsgDOTAProfileResponse;
class CMsgDOTAProfileResponseDefaultTypeInternal;
extern CMsgDOTAProfileResponseDefaultTypeInternal _CMsgDOTAProfileResponse_default_instance_;
class CMsgDOTAProfileResponse_EventTicket;
class CMsgDOTAProfileResponse_EventTicketDefaultTypeInternal;
extern CMsgDOTAProfileResponse_EventTicketDefaultTypeInternal _CMsgDOTAProfileResponse_EventTicket_default_instance_;
class CMsgDOTAProfileResponse_FeaturedItem;
class CMsgDOTAProfileResponse_FeaturedItemDefaultTypeInternal;
extern CMsgDOTAProfileResponse_FeaturedItemDefaultTypeInternal _CMsgDOTAProfileResponse_FeaturedItem_default_instance_;
class CMsgDOTAProfileResponse_LeaguePass;
class CMsgDOTAProfileResponse_LeaguePassDefaultTypeInternal;
extern CMsgDOTAProfileResponse_LeaguePassDefaultTypeInternal _CMsgDOTAProfileResponse_LeaguePass_default_instance_;
class CMsgDOTAProfileResponse_PlayedHero;
class CMsgDOTAProfileResponse_PlayedHeroDefaultTypeInternal;
extern CMsgDOTAProfileResponse_PlayedHeroDefaultTypeInternal _CMsgDOTAProfileResponse_PlayedHero_default_instance_;
class CMsgDOTAProfileResponse_ShowcaseHero;
class CMsgDOTAProfileResponse_ShowcaseHeroDefaultTypeInternal;
extern CMsgDOTAProfileResponse_ShowcaseHeroDefaultTypeInternal _CMsgDOTAProfileResponse_ShowcaseHero_default_instance_;
class CMsgDOTAProfileTickets;
class CMsgDOTAProfileTicketsDefaultTypeInternal;
extern CMsgDOTAProfileTicketsDefaultTypeInternal _CMsgDOTAProfileTickets_default_instance_;
class CMsgDOTAProfileTickets_EventTicket;
class CMsgDOTAProfileTickets_EventTicketDefaultTypeInternal;
extern CMsgDOTAProfileTickets_EventTicketDefaultTypeInternal _CMsgDOTAProfileTickets_EventTicket_default_instance_;
class CMsgDOTAProfileTickets_LeaguePass;
class CMsgDOTAProfileTickets_LeaguePassDefaultTypeInternal;
extern CMsgDOTAProfileTickets_LeaguePassDefaultTypeInternal _CMsgDOTAProfileTickets_LeaguePass_default_instance_;
class CMsgDOTARealtimeGameStats;
class CMsgDOTARealtimeGameStatsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStatsDefaultTypeInternal _CMsgDOTARealtimeGameStats_default_instance_;
class CMsgDOTARealtimeGameStatsTerse;
class CMsgDOTARealtimeGameStatsTerseDefaultTypeInternal;
extern CMsgDOTARealtimeGameStatsTerseDefaultTypeInternal _CMsgDOTARealtimeGameStatsTerse_default_instance_;
class CMsgDOTARealtimeGameStatsTerse_BuildingDetails;
class CMsgDOTARealtimeGameStatsTerse_BuildingDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStatsTerse_BuildingDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStatsTerse_BuildingDetails_default_instance_;
class CMsgDOTARealtimeGameStatsTerse_GraphData;
class CMsgDOTARealtimeGameStatsTerse_GraphDataDefaultTypeInternal;
extern CMsgDOTARealtimeGameStatsTerse_GraphDataDefaultTypeInternal _CMsgDOTARealtimeGameStatsTerse_GraphData_default_instance_;
class CMsgDOTARealtimeGameStatsTerse_MatchDetails;
class CMsgDOTARealtimeGameStatsTerse_MatchDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStatsTerse_MatchDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStatsTerse_MatchDetails_default_instance_;
class CMsgDOTARealtimeGameStatsTerse_PlayerDetails;
class CMsgDOTARealtimeGameStatsTerse_PlayerDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStatsTerse_PlayerDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStatsTerse_PlayerDetails_default_instance_;
class CMsgDOTARealtimeGameStatsTerse_TeamDetails;
class CMsgDOTARealtimeGameStatsTerse_TeamDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStatsTerse_TeamDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStatsTerse_TeamDetails_default_instance_;
class CMsgDOTARealtimeGameStats_AbilityDetails;
class CMsgDOTARealtimeGameStats_AbilityDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_AbilityDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStats_AbilityDetails_default_instance_;
class CMsgDOTARealtimeGameStats_AbilityList;
class CMsgDOTARealtimeGameStats_AbilityListDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_AbilityListDefaultTypeInternal _CMsgDOTARealtimeGameStats_AbilityList_default_instance_;
class CMsgDOTARealtimeGameStats_BroadcasterDetails;
class CMsgDOTARealtimeGameStats_BroadcasterDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_BroadcasterDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStats_BroadcasterDetails_default_instance_;
class CMsgDOTARealtimeGameStats_BuildingDetails;
class CMsgDOTARealtimeGameStats_BuildingDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_BuildingDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStats_BuildingDetails_default_instance_;
class CMsgDOTARealtimeGameStats_GraphData;
class CMsgDOTARealtimeGameStats_GraphDataDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_GraphDataDefaultTypeInternal _CMsgDOTARealtimeGameStats_GraphData_default_instance_;
class CMsgDOTARealtimeGameStats_GraphData_LocationStats;
class CMsgDOTARealtimeGameStats_GraphData_LocationStatsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_GraphData_LocationStatsDefaultTypeInternal _CMsgDOTARealtimeGameStats_GraphData_LocationStats_default_instance_;
class CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats;
class CMsgDOTARealtimeGameStats_GraphData_TeamLocationStatsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_GraphData_TeamLocationStatsDefaultTypeInternal _CMsgDOTARealtimeGameStats_GraphData_TeamLocationStats_default_instance_;
class CMsgDOTARealtimeGameStats_HeroToHeroStats;
class CMsgDOTARealtimeGameStats_HeroToHeroStatsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_HeroToHeroStatsDefaultTypeInternal _CMsgDOTARealtimeGameStats_HeroToHeroStats_default_instance_;
class CMsgDOTARealtimeGameStats_ItemDetails;
class CMsgDOTARealtimeGameStats_ItemDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_ItemDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStats_ItemDetails_default_instance_;
class CMsgDOTARealtimeGameStats_KillDetails;
class CMsgDOTARealtimeGameStats_KillDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_KillDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStats_KillDetails_default_instance_;
class CMsgDOTARealtimeGameStats_MatchDetails;
class CMsgDOTARealtimeGameStats_MatchDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_MatchDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStats_MatchDetails_default_instance_;
class CMsgDOTARealtimeGameStats_PickBanDetails;
class CMsgDOTARealtimeGameStats_PickBanDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_PickBanDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStats_PickBanDetails_default_instance_;
class CMsgDOTARealtimeGameStats_PlayerDetails;
class CMsgDOTARealtimeGameStats_PlayerDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_PlayerDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStats_PlayerDetails_default_instance_;
class CMsgDOTARealtimeGameStats_TeamDetails;
class CMsgDOTARealtimeGameStats_TeamDetailsDefaultTypeInternal;
extern CMsgDOTARealtimeGameStats_TeamDetailsDefaultTypeInternal _CMsgDOTARealtimeGameStats_TeamDetails_default_instance_;
class CMsgDOTARedeemItem;
class CMsgDOTARedeemItemDefaultTypeInternal;
extern CMsgDOTARedeemItemDefaultTypeInternal _CMsgDOTARedeemItem_default_instance_;
class CMsgDOTARedeemItemResponse;
class CMsgDOTARedeemItemResponseDefaultTypeInternal;
extern CMsgDOTARedeemItemResponseDefaultTypeInternal _CMsgDOTARedeemItemResponse_default_instance_;
class CMsgDOTAReportCountsRequest;
class CMsgDOTAReportCountsRequestDefaultTypeInternal;
extern CMsgDOTAReportCountsRequestDefaultTypeInternal _CMsgDOTAReportCountsRequest_default_instance_;
class CMsgDOTAReportCountsResponse;
class CMsgDOTAReportCountsResponseDefaultTypeInternal;
extern CMsgDOTAReportCountsResponseDefaultTypeInternal _CMsgDOTAReportCountsResponse_default_instance_;
class CMsgDOTAReportsRemainingRequest;
class CMsgDOTAReportsRemainingRequestDefaultTypeInternal;
extern CMsgDOTAReportsRemainingRequestDefaultTypeInternal _CMsgDOTAReportsRemainingRequest_default_instance_;
class CMsgDOTAReportsRemainingResponse;
class CMsgDOTAReportsRemainingResponseDefaultTypeInternal;
extern CMsgDOTAReportsRemainingResponseDefaultTypeInternal _CMsgDOTAReportsRemainingResponse_default_instance_;
class CMsgDOTARequestMatches;
class CMsgDOTARequestMatchesDefaultTypeInternal;
extern CMsgDOTARequestMatchesDefaultTypeInternal _CMsgDOTARequestMatches_default_instance_;
class CMsgDOTARequestMatchesResponse;
class CMsgDOTARequestMatchesResponseDefaultTypeInternal;
extern CMsgDOTARequestMatchesResponseDefaultTypeInternal _CMsgDOTARequestMatchesResponse_default_instance_;
class CMsgDOTARequestMatchesResponse_Series;
class CMsgDOTARequestMatchesResponse_SeriesDefaultTypeInternal;
extern CMsgDOTARequestMatchesResponse_SeriesDefaultTypeInternal _CMsgDOTARequestMatchesResponse_Series_default_instance_;
class CMsgDOTARequestSaveGames;
class CMsgDOTARequestSaveGamesDefaultTypeInternal;
extern CMsgDOTARequestSaveGamesDefaultTypeInternal _CMsgDOTARequestSaveGames_default_instance_;
class CMsgDOTARequestSaveGamesResponse;
class CMsgDOTARequestSaveGamesResponseDefaultTypeInternal;
extern CMsgDOTARequestSaveGamesResponseDefaultTypeInternal _CMsgDOTARequestSaveGamesResponse_default_instance_;
class CMsgDOTARewardTutorialPrizes;
class CMsgDOTARewardTutorialPrizesDefaultTypeInternal;
extern CMsgDOTARewardTutorialPrizesDefaultTypeInternal _CMsgDOTARewardTutorialPrizes_default_instance_;
class CMsgDOTASDOHeroStatsHistory;
class CMsgDOTASDOHeroStatsHistoryDefaultTypeInternal;
extern CMsgDOTASDOHeroStatsHistoryDefaultTypeInternal _CMsgDOTASDOHeroStatsHistory_default_instance_;
class CMsgDOTASeasonAchievements;
class CMsgDOTASeasonAchievementsDefaultTypeInternal;
extern CMsgDOTASeasonAchievementsDefaultTypeInternal _CMsgDOTASeasonAchievements_default_instance_;
class CMsgDOTASeasonAchievements_Achievement;
class CMsgDOTASeasonAchievements_AchievementDefaultTypeInternal;
extern CMsgDOTASeasonAchievements_AchievementDefaultTypeInternal _CMsgDOTASeasonAchievements_Achievement_default_instance_;
class CMsgDOTASeasonPredictions;
class CMsgDOTASeasonPredictionsDefaultTypeInternal;
extern CMsgDOTASeasonPredictionsDefaultTypeInternal _CMsgDOTASeasonPredictions_default_instance_;
class CMsgDOTASeasonPredictions_Answers;
class CMsgDOTASeasonPredictions_AnswersDefaultTypeInternal;
extern CMsgDOTASeasonPredictions_AnswersDefaultTypeInternal _CMsgDOTASeasonPredictions_Answers_default_instance_;
class CMsgDOTASeasonPredictions_Choice;
class CMsgDOTASeasonPredictions_ChoiceDefaultTypeInternal;
extern CMsgDOTASeasonPredictions_ChoiceDefaultTypeInternal _CMsgDOTASeasonPredictions_Choice_default_instance_;
class CMsgDOTASeasonPredictions_InGamePrediction;
class CMsgDOTASeasonPredictions_InGamePredictionDefaultTypeInternal;
extern CMsgDOTASeasonPredictions_InGamePredictionDefaultTypeInternal _CMsgDOTASeasonPredictions_InGamePrediction_default_instance_;
class CMsgDOTASeasonPredictions_Prediction;
class CMsgDOTASeasonPredictions_PredictionDefaultTypeInternal;
extern CMsgDOTASeasonPredictions_PredictionDefaultTypeInternal _CMsgDOTASeasonPredictions_Prediction_default_instance_;
class CMsgDOTASeasonPredictions_QueryKeyValues;
class CMsgDOTASeasonPredictions_QueryKeyValuesDefaultTypeInternal;
extern CMsgDOTASeasonPredictions_QueryKeyValuesDefaultTypeInternal _CMsgDOTASeasonPredictions_QueryKeyValues_default_instance_;
class CMsgDOTASeasonRewards;
class CMsgDOTASeasonRewardsDefaultTypeInternal;
extern CMsgDOTASeasonRewardsDefaultTypeInternal _CMsgDOTASeasonRewards_default_instance_;
class CMsgDOTASeasonRewards_Reward;
class CMsgDOTASeasonRewards_RewardDefaultTypeInternal;
extern CMsgDOTASeasonRewards_RewardDefaultTypeInternal _CMsgDOTASeasonRewards_Reward_default_instance_;
class CMsgDOTASendFriendRecruits;
class CMsgDOTASendFriendRecruitsDefaultTypeInternal;
extern CMsgDOTASendFriendRecruitsDefaultTypeInternal _CMsgDOTASendFriendRecruits_default_instance_;
class CMsgDOTASetFavoriteTeam;
class CMsgDOTASetFavoriteTeamDefaultTypeInternal;
extern CMsgDOTASetFavoriteTeamDefaultTypeInternal _CMsgDOTASetFavoriteTeam_default_instance_;
class CMsgDOTASetMatchHistoryAccess;
class CMsgDOTASetMatchHistoryAccessDefaultTypeInternal;
extern CMsgDOTASetMatchHistoryAccessDefaultTypeInternal _CMsgDOTASetMatchHistoryAccess_default_instance_;
class CMsgDOTASetMatchHistoryAccessResponse;
class CMsgDOTASetMatchHistoryAccessResponseDefaultTypeInternal;
extern CMsgDOTASetMatchHistoryAccessResponseDefaultTypeInternal _CMsgDOTASetMatchHistoryAccessResponse_default_instance_;
class CMsgDOTASetProfilePrivacy;
class CMsgDOTASetProfilePrivacyDefaultTypeInternal;
extern CMsgDOTASetProfilePrivacyDefaultTypeInternal _CMsgDOTASetProfilePrivacy_default_instance_;
class CMsgDOTASetProfilePrivacyResponse;
class CMsgDOTASetProfilePrivacyResponseDefaultTypeInternal;
extern CMsgDOTASetProfilePrivacyResponseDefaultTypeInternal _CMsgDOTASetProfilePrivacyResponse_default_instance_;
class CMsgDOTAStartDailyHeroChallenge;
class CMsgDOTAStartDailyHeroChallengeDefaultTypeInternal;
extern CMsgDOTAStartDailyHeroChallengeDefaultTypeInternal _CMsgDOTAStartDailyHeroChallenge_default_instance_;
class CMsgDOTAStartTriviaSession;
class CMsgDOTAStartTriviaSessionDefaultTypeInternal;
extern CMsgDOTAStartTriviaSessionDefaultTypeInternal _CMsgDOTAStartTriviaSession_default_instance_;
class CMsgDOTAStartTriviaSessionResponse;
class CMsgDOTAStartTriviaSessionResponseDefaultTypeInternal;
extern CMsgDOTAStartTriviaSessionResponseDefaultTypeInternal _CMsgDOTAStartTriviaSessionResponse_default_instance_;
class CMsgDOTAStorePromoPagesRequest;
class CMsgDOTAStorePromoPagesRequestDefaultTypeInternal;
extern CMsgDOTAStorePromoPagesRequestDefaultTypeInternal _CMsgDOTAStorePromoPagesRequest_default_instance_;
class CMsgDOTAStorePromoPagesResponse;
class CMsgDOTAStorePromoPagesResponseDefaultTypeInternal;
extern CMsgDOTAStorePromoPagesResponseDefaultTypeInternal _CMsgDOTAStorePromoPagesResponse_default_instance_;
class CMsgDOTAStorePromoPagesResponse_PromoPage;
class CMsgDOTAStorePromoPagesResponse_PromoPageDefaultTypeInternal;
extern CMsgDOTAStorePromoPagesResponse_PromoPageDefaultTypeInternal _CMsgDOTAStorePromoPagesResponse_PromoPage_default_instance_;
class CMsgDOTASubmitLobbyMVPVote;
class CMsgDOTASubmitLobbyMVPVoteDefaultTypeInternal;
extern CMsgDOTASubmitLobbyMVPVoteDefaultTypeInternal _CMsgDOTASubmitLobbyMVPVote_default_instance_;
class CMsgDOTASubmitLobbyMVPVoteResponse;
class CMsgDOTASubmitLobbyMVPVoteResponseDefaultTypeInternal;
extern CMsgDOTASubmitLobbyMVPVoteResponseDefaultTypeInternal _CMsgDOTASubmitLobbyMVPVoteResponse_default_instance_;
class CMsgDOTASubmitPlayerReport;
class CMsgDOTASubmitPlayerReportDefaultTypeInternal;
extern CMsgDOTASubmitPlayerReportDefaultTypeInternal _CMsgDOTASubmitPlayerReport_default_instance_;
class CMsgDOTASubmitPlayerReportResponse;
class CMsgDOTASubmitPlayerReportResponseDefaultTypeInternal;
extern CMsgDOTASubmitPlayerReportResponseDefaultTypeInternal _CMsgDOTASubmitPlayerReportResponse_default_instance_;
class CMsgDOTASubmitTriviaQuestionAnswer;
class CMsgDOTASubmitTriviaQuestionAnswerDefaultTypeInternal;
extern CMsgDOTASubmitTriviaQuestionAnswerDefaultTypeInternal _CMsgDOTASubmitTriviaQuestionAnswer_default_instance_;
class CMsgDOTASubmitTriviaQuestionAnswerResponse;
class CMsgDOTASubmitTriviaQuestionAnswerResponseDefaultTypeInternal;
extern CMsgDOTASubmitTriviaQuestionAnswerResponseDefaultTypeInternal _CMsgDOTASubmitTriviaQuestionAnswerResponse_default_instance_;
class CMsgDOTATriviaCurrentQuestions;
class CMsgDOTATriviaCurrentQuestionsDefaultTypeInternal;
extern CMsgDOTATriviaCurrentQuestionsDefaultTypeInternal _CMsgDOTATriviaCurrentQuestions_default_instance_;
class CMsgDOTATriviaQuestion;
class CMsgDOTATriviaQuestionDefaultTypeInternal;
extern CMsgDOTATriviaQuestionDefaultTypeInternal _CMsgDOTATriviaQuestion_default_instance_;
class CMsgDOTATriviaQuestionAnswersSummary;
class CMsgDOTATriviaQuestionAnswersSummaryDefaultTypeInternal;
extern CMsgDOTATriviaQuestionAnswersSummaryDefaultTypeInternal _CMsgDOTATriviaQuestionAnswersSummary_default_instance_;
class CMsgDOTAUnanchorPhoneNumberRequest;
class CMsgDOTAUnanchorPhoneNumberRequestDefaultTypeInternal;
extern CMsgDOTAUnanchorPhoneNumberRequestDefaultTypeInternal _CMsgDOTAUnanchorPhoneNumberRequest_default_instance_;
class CMsgDOTAUnanchorPhoneNumberResponse;
class CMsgDOTAUnanchorPhoneNumberResponseDefaultTypeInternal;
extern CMsgDOTAUnanchorPhoneNumberResponseDefaultTypeInternal _CMsgDOTAUnanchorPhoneNumberResponse_default_instance_;
class CMsgDOTAUpdateMatchManagementStats;
class CMsgDOTAUpdateMatchManagementStatsDefaultTypeInternal;
extern CMsgDOTAUpdateMatchManagementStatsDefaultTypeInternal _CMsgDOTAUpdateMatchManagementStats_default_instance_;
class CMsgDOTAUpdateMatchmakingStats;
class CMsgDOTAUpdateMatchmakingStatsDefaultTypeInternal;
extern CMsgDOTAUpdateMatchmakingStatsDefaultTypeInternal _CMsgDOTAUpdateMatchmakingStats_default_instance_;
class CMsgDOTAWelcome;
class CMsgDOTAWelcomeDefaultTypeInternal;
extern CMsgDOTAWelcomeDefaultTypeInternal _CMsgDOTAWelcome_default_instance_;
class CMsgDOTAWelcome_CExtraMsg;
class CMsgDOTAWelcome_CExtraMsgDefaultTypeInternal;
extern CMsgDOTAWelcome_CExtraMsgDefaultTypeInternal _CMsgDOTAWelcome_CExtraMsg_default_instance_;
class CMsgDOTAWelcome_LocalizationDigest;
class CMsgDOTAWelcome_LocalizationDigestDefaultTypeInternal;
extern CMsgDOTAWelcome_LocalizationDigestDefaultTypeInternal _CMsgDOTAWelcome_LocalizationDigest_default_instance_;
class CMsgDPPartnerMicroTxns;
class CMsgDPPartnerMicroTxnsDefaultTypeInternal;
extern CMsgDPPartnerMicroTxnsDefaultTypeInternal _CMsgDPPartnerMicroTxns_default_instance_;
class CMsgDPPartnerMicroTxnsResponse;
class CMsgDPPartnerMicroTxnsResponseDefaultTypeInternal;
extern CMsgDPPartnerMicroTxnsResponseDefaultTypeInternal _CMsgDPPartnerMicroTxnsResponse_default_instance_;
class CMsgDPPartnerMicroTxns_PartnerInfo;
class CMsgDPPartnerMicroTxns_PartnerInfoDefaultTypeInternal;
extern CMsgDPPartnerMicroTxns_PartnerInfoDefaultTypeInternal _CMsgDPPartnerMicroTxns_PartnerInfo_default_instance_;
class CMsgDPPartnerMicroTxns_PartnerMicroTxn;
class CMsgDPPartnerMicroTxns_PartnerMicroTxnDefaultTypeInternal;
extern CMsgDPPartnerMicroTxns_PartnerMicroTxnDefaultTypeInternal _CMsgDPPartnerMicroTxns_PartnerMicroTxn_default_instance_;
class CMsgEventGoals;
class CMsgEventGoalsDefaultTypeInternal;
extern CMsgEventGoalsDefaultTypeInternal _CMsgEventGoals_default_instance_;
class CMsgEventGoals_EventGoal;
class CMsgEventGoals_EventGoalDefaultTypeInternal;
extern CMsgEventGoals_EventGoalDefaultTypeInternal _CMsgEventGoals_EventGoal_default_instance_;
class CMsgFlipLobbyTeams;
class CMsgFlipLobbyTeamsDefaultTypeInternal;
extern CMsgFlipLobbyTeamsDefaultTypeInternal _CMsgFlipLobbyTeams_default_instance_;
class CMsgGCCheckFriendship;
class CMsgGCCheckFriendshipDefaultTypeInternal;
extern CMsgGCCheckFriendshipDefaultTypeInternal _CMsgGCCheckFriendship_default_instance_;
class CMsgGCCheckFriendship_Response;
class CMsgGCCheckFriendship_ResponseDefaultTypeInternal;
extern CMsgGCCheckFriendship_ResponseDefaultTypeInternal _CMsgGCCheckFriendship_Response_default_instance_;
class CMsgGCClientPing;
class CMsgGCClientPingDefaultTypeInternal;
extern CMsgGCClientPingDefaultTypeInternal _CMsgGCClientPing_default_instance_;
class CMsgGCGetAppFriendsList;
class CMsgGCGetAppFriendsListDefaultTypeInternal;
extern CMsgGCGetAppFriendsListDefaultTypeInternal _CMsgGCGetAppFriendsList_default_instance_;
class CMsgGCGetAppFriendsList_Response;
class CMsgGCGetAppFriendsList_ResponseDefaultTypeInternal;
extern CMsgGCGetAppFriendsList_ResponseDefaultTypeInternal _CMsgGCGetAppFriendsList_Response_default_instance_;
class CMsgGCGetCommandList;
class CMsgGCGetCommandListDefaultTypeInternal;
extern CMsgGCGetCommandListDefaultTypeInternal _CMsgGCGetCommandList_default_instance_;
class CMsgGCGetCommandListResponse;
class CMsgGCGetCommandListResponseDefaultTypeInternal;
extern CMsgGCGetCommandListResponseDefaultTypeInternal _CMsgGCGetCommandListResponse_default_instance_;
class CMsgGCGetEmailTemplate;
class CMsgGCGetEmailTemplateDefaultTypeInternal;
extern CMsgGCGetEmailTemplateDefaultTypeInternal _CMsgGCGetEmailTemplate_default_instance_;
class CMsgGCGetEmailTemplateResponse;
class CMsgGCGetEmailTemplateResponseDefaultTypeInternal;
extern CMsgGCGetEmailTemplateResponseDefaultTypeInternal _CMsgGCGetEmailTemplateResponse_default_instance_;
class CMsgGCGetHeroStandings;
class CMsgGCGetHeroStandingsDefaultTypeInternal;
extern CMsgGCGetHeroStandingsDefaultTypeInternal _CMsgGCGetHeroStandings_default_instance_;
class CMsgGCGetHeroStandingsResponse;
class CMsgGCGetHeroStandingsResponseDefaultTypeInternal;
extern CMsgGCGetHeroStandingsResponseDefaultTypeInternal _CMsgGCGetHeroStandingsResponse_default_instance_;
class CMsgGCGetHeroStandingsResponse_Hero;
class CMsgGCGetHeroStandingsResponse_HeroDefaultTypeInternal;
extern CMsgGCGetHeroStandingsResponse_HeroDefaultTypeInternal _CMsgGCGetHeroStandingsResponse_Hero_default_instance_;
class CMsgGCGetHeroStatsHistory;
class CMsgGCGetHeroStatsHistoryDefaultTypeInternal;
extern CMsgGCGetHeroStatsHistoryDefaultTypeInternal _CMsgGCGetHeroStatsHistory_default_instance_;
class CMsgGCGetHeroStatsHistoryResponse;
class CMsgGCGetHeroStatsHistoryResponseDefaultTypeInternal;
extern CMsgGCGetHeroStatsHistoryResponseDefaultTypeInternal _CMsgGCGetHeroStatsHistoryResponse_default_instance_;
class CMsgGCGetPartnerAccountLink;
class CMsgGCGetPartnerAccountLinkDefaultTypeInternal;
extern CMsgGCGetPartnerAccountLinkDefaultTypeInternal _CMsgGCGetPartnerAccountLink_default_instance_;
class CMsgGCGetPartnerAccountLink_Response;
class CMsgGCGetPartnerAccountLink_ResponseDefaultTypeInternal;
extern CMsgGCGetPartnerAccountLink_ResponseDefaultTypeInternal _CMsgGCGetPartnerAccountLink_Response_default_instance_;
class CMsgGCGetPersonaNames;
class CMsgGCGetPersonaNamesDefaultTypeInternal;
extern CMsgGCGetPersonaNamesDefaultTypeInternal _CMsgGCGetPersonaNames_default_instance_;
class CMsgGCGetPersonaNames_Response;
class CMsgGCGetPersonaNames_ResponseDefaultTypeInternal;
extern CMsgGCGetPersonaNames_ResponseDefaultTypeInternal _CMsgGCGetPersonaNames_Response_default_instance_;
class CMsgGCGetPersonaNames_Response_PersonaName;
class CMsgGCGetPersonaNames_Response_PersonaNameDefaultTypeInternal;
extern CMsgGCGetPersonaNames_Response_PersonaNameDefaultTypeInternal _CMsgGCGetPersonaNames_Response_PersonaName_default_instance_;
class CMsgGCGetPlayerCardItemInfo;
class CMsgGCGetPlayerCardItemInfoDefaultTypeInternal;
extern CMsgGCGetPlayerCardItemInfoDefaultTypeInternal _CMsgGCGetPlayerCardItemInfo_default_instance_;
class CMsgGCGetPlayerCardItemInfoResponse;
class CMsgGCGetPlayerCardItemInfoResponseDefaultTypeInternal;
extern CMsgGCGetPlayerCardItemInfoResponseDefaultTypeInternal _CMsgGCGetPlayerCardItemInfoResponse_default_instance_;
class CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo;
class CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfoDefaultTypeInternal;
extern CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfoDefaultTypeInternal _CMsgGCGetPlayerCardItemInfoResponse_PlayerCardInfo_default_instance_;
class CMsgGCHAccountVacStatusChange;
class CMsgGCHAccountVacStatusChangeDefaultTypeInternal;
extern CMsgGCHAccountVacStatusChangeDefaultTypeInternal _CMsgGCHAccountVacStatusChange_default_instance_;
class CMsgGCHUpdateSession;
class CMsgGCHUpdateSessionDefaultTypeInternal;
extern CMsgGCHUpdateSessionDefaultTypeInternal _CMsgGCHUpdateSession_default_instance_;
class CMsgGCHUpdateSession_ExtraField;
class CMsgGCHUpdateSession_ExtraFieldDefaultTypeInternal;
extern CMsgGCHUpdateSession_ExtraFieldDefaultTypeInternal _CMsgGCHUpdateSession_ExtraField_default_instance_;
class CMsgGCHVacVerificationChange;
class CMsgGCHVacVerificationChangeDefaultTypeInternal;
extern CMsgGCHVacVerificationChangeDefaultTypeInternal _CMsgGCHVacVerificationChange_default_instance_;
class CMsgGCIsProQuery;
class CMsgGCIsProQueryDefaultTypeInternal;
extern CMsgGCIsProQueryDefaultTypeInternal _CMsgGCIsProQuery_default_instance_;
class CMsgGCIsProResponse;
class CMsgGCIsProResponseDefaultTypeInternal;
extern CMsgGCIsProResponseDefaultTypeInternal _CMsgGCIsProResponse_default_instance_;
class CMsgGCItemEditorLeagueInfoResponse;
class CMsgGCItemEditorLeagueInfoResponseDefaultTypeInternal;
extern CMsgGCItemEditorLeagueInfoResponseDefaultTypeInternal _CMsgGCItemEditorLeagueInfoResponse_default_instance_;
class CMsgGCItemEditorReleaseReservation;
class CMsgGCItemEditorReleaseReservationDefaultTypeInternal;
extern CMsgGCItemEditorReleaseReservationDefaultTypeInternal _CMsgGCItemEditorReleaseReservation_default_instance_;
class CMsgGCItemEditorReleaseReservationResponse;
class CMsgGCItemEditorReleaseReservationResponseDefaultTypeInternal;
extern CMsgGCItemEditorReleaseReservationResponseDefaultTypeInternal _CMsgGCItemEditorReleaseReservationResponse_default_instance_;
class CMsgGCItemEditorRequestLeagueInfo;
class CMsgGCItemEditorRequestLeagueInfoDefaultTypeInternal;
extern CMsgGCItemEditorRequestLeagueInfoDefaultTypeInternal _CMsgGCItemEditorRequestLeagueInfo_default_instance_;
class CMsgGCItemEditorReservation;
class CMsgGCItemEditorReservationDefaultTypeInternal;
extern CMsgGCItemEditorReservationDefaultTypeInternal _CMsgGCItemEditorReservation_default_instance_;
class CMsgGCItemEditorReservationsRequest;
class CMsgGCItemEditorReservationsRequestDefaultTypeInternal;
extern CMsgGCItemEditorReservationsRequestDefaultTypeInternal _CMsgGCItemEditorReservationsRequest_default_instance_;
class CMsgGCItemEditorReservationsResponse;
class CMsgGCItemEditorReservationsResponseDefaultTypeInternal;
extern CMsgGCItemEditorReservationsResponseDefaultTypeInternal _CMsgGCItemEditorReservationsResponse_default_instance_;
class CMsgGCItemEditorReserveItemDef;
class CMsgGCItemEditorReserveItemDefDefaultTypeInternal;
extern CMsgGCItemEditorReserveItemDefDefaultTypeInternal _CMsgGCItemEditorReserveItemDef_default_instance_;
class CMsgGCItemEditorReserveItemDefResponse;
class CMsgGCItemEditorReserveItemDefResponseDefaultTypeInternal;
extern CMsgGCItemEditorReserveItemDefResponseDefaultTypeInternal _CMsgGCItemEditorReserveItemDefResponse_default_instance_;
class CMsgGCLeagueAdminState;
class CMsgGCLeagueAdminStateDefaultTypeInternal;
extern CMsgGCLeagueAdminStateDefaultTypeInternal _CMsgGCLeagueAdminState_default_instance_;
class CMsgGCLeagueAdminState_PrivateLeagueKeys;
class CMsgGCLeagueAdminState_PrivateLeagueKeysDefaultTypeInternal;
extern CMsgGCLeagueAdminState_PrivateLeagueKeysDefaultTypeInternal _CMsgGCLeagueAdminState_PrivateLeagueKeys_default_instance_;
class CMsgGCLobbyUpdateBroadcastChannelInfo;
class CMsgGCLobbyUpdateBroadcastChannelInfoDefaultTypeInternal;
extern CMsgGCLobbyUpdateBroadcastChannelInfoDefaultTypeInternal _CMsgGCLobbyUpdateBroadcastChannelInfo_default_instance_;
class CMsgGCMatchDetailsRequest;
class CMsgGCMatchDetailsRequestDefaultTypeInternal;
extern CMsgGCMatchDetailsRequestDefaultTypeInternal _CMsgGCMatchDetailsRequest_default_instance_;
class CMsgGCMatchDetailsResponse;
class CMsgGCMatchDetailsResponseDefaultTypeInternal;
extern CMsgGCMatchDetailsResponseDefaultTypeInternal _CMsgGCMatchDetailsResponse_default_instance_;
class CMsgGCMsgMasterSetClientMsgRouting;
class CMsgGCMsgMasterSetClientMsgRoutingDefaultTypeInternal;
extern CMsgGCMsgMasterSetClientMsgRoutingDefaultTypeInternal _CMsgGCMsgMasterSetClientMsgRouting_default_instance_;
class CMsgGCMsgMasterSetClientMsgRouting_Entry;
class CMsgGCMsgMasterSetClientMsgRouting_EntryDefaultTypeInternal;
extern CMsgGCMsgMasterSetClientMsgRouting_EntryDefaultTypeInternal _CMsgGCMsgMasterSetClientMsgRouting_Entry_default_instance_;
class CMsgGCMsgMasterSetClientMsgRouting_Response;
class CMsgGCMsgMasterSetClientMsgRouting_ResponseDefaultTypeInternal;
extern CMsgGCMsgMasterSetClientMsgRouting_ResponseDefaultTypeInternal _CMsgGCMsgMasterSetClientMsgRouting_Response_default_instance_;
class CMsgGCMsgMasterSetDirectory;
class CMsgGCMsgMasterSetDirectoryDefaultTypeInternal;
extern CMsgGCMsgMasterSetDirectoryDefaultTypeInternal _CMsgGCMsgMasterSetDirectory_default_instance_;
class CMsgGCMsgMasterSetDirectory_Response;
class CMsgGCMsgMasterSetDirectory_ResponseDefaultTypeInternal;
extern CMsgGCMsgMasterSetDirectory_ResponseDefaultTypeInternal _CMsgGCMsgMasterSetDirectory_Response_default_instance_;
class CMsgGCMsgMasterSetDirectory_SubGC;
class CMsgGCMsgMasterSetDirectory_SubGCDefaultTypeInternal;
extern CMsgGCMsgMasterSetDirectory_SubGCDefaultTypeInternal _CMsgGCMsgMasterSetDirectory_SubGC_default_instance_;
class CMsgGCMsgMasterSetWebAPIRouting;
class CMsgGCMsgMasterSetWebAPIRoutingDefaultTypeInternal;
extern CMsgGCMsgMasterSetWebAPIRoutingDefaultTypeInternal _CMsgGCMsgMasterSetWebAPIRouting_default_instance_;
class CMsgGCMsgMasterSetWebAPIRouting_Entry;
class CMsgGCMsgMasterSetWebAPIRouting_EntryDefaultTypeInternal;
extern CMsgGCMsgMasterSetWebAPIRouting_EntryDefaultTypeInternal _CMsgGCMsgMasterSetWebAPIRouting_Entry_default_instance_;
class CMsgGCMsgMasterSetWebAPIRouting_Response;
class CMsgGCMsgMasterSetWebAPIRouting_ResponseDefaultTypeInternal;
extern CMsgGCMsgMasterSetWebAPIRouting_ResponseDefaultTypeInternal _CMsgGCMsgMasterSetWebAPIRouting_Response_default_instance_;
class CMsgGCMsgSetOptions;
class CMsgGCMsgSetOptionsDefaultTypeInternal;
extern CMsgGCMsgSetOptionsDefaultTypeInternal _CMsgGCMsgSetOptions_default_instance_;
class CMsgGCMsgSetOptions_MessageRange;
class CMsgGCMsgSetOptions_MessageRangeDefaultTypeInternal;
extern CMsgGCMsgSetOptions_MessageRangeDefaultTypeInternal _CMsgGCMsgSetOptions_MessageRange_default_instance_;
class CMsgGCMsgWebAPIJobRequestForwardResponse;
class CMsgGCMsgWebAPIJobRequestForwardResponseDefaultTypeInternal;
extern CMsgGCMsgWebAPIJobRequestForwardResponseDefaultTypeInternal _CMsgGCMsgWebAPIJobRequestForwardResponse_default_instance_;
class CMsgGCMultiplexMessage;
class CMsgGCMultiplexMessageDefaultTypeInternal;
extern CMsgGCMultiplexMessageDefaultTypeInternal _CMsgGCMultiplexMessage_default_instance_;
class CMsgGCNotificationsMarkReadRequest;
class CMsgGCNotificationsMarkReadRequestDefaultTypeInternal;
extern CMsgGCNotificationsMarkReadRequestDefaultTypeInternal _CMsgGCNotificationsMarkReadRequest_default_instance_;
class CMsgGCNotificationsRequest;
class CMsgGCNotificationsRequestDefaultTypeInternal;
extern CMsgGCNotificationsRequestDefaultTypeInternal _CMsgGCNotificationsRequest_default_instance_;
class CMsgGCNotificationsResponse;
class CMsgGCNotificationsResponseDefaultTypeInternal;
extern CMsgGCNotificationsResponseDefaultTypeInternal _CMsgGCNotificationsResponse_default_instance_;
class CMsgGCNotificationsResponse_Notification;
class CMsgGCNotificationsResponse_NotificationDefaultTypeInternal;
extern CMsgGCNotificationsResponse_NotificationDefaultTypeInternal _CMsgGCNotificationsResponse_Notification_default_instance_;
class CMsgGCPlayerInfoRequest;
class CMsgGCPlayerInfoRequestDefaultTypeInternal;
extern CMsgGCPlayerInfoRequestDefaultTypeInternal _CMsgGCPlayerInfoRequest_default_instance_;
class CMsgGCPlayerInfoRequest_PlayerInfo;
class CMsgGCPlayerInfoRequest_PlayerInfoDefaultTypeInternal;
extern CMsgGCPlayerInfoRequest_PlayerInfoDefaultTypeInternal _CMsgGCPlayerInfoRequest_PlayerInfo_default_instance_;
class CMsgGCPlayerInfoSubmit;
class CMsgGCPlayerInfoSubmitDefaultTypeInternal;
extern CMsgGCPlayerInfoSubmitDefaultTypeInternal _CMsgGCPlayerInfoSubmit_default_instance_;
class CMsgGCPlayerInfoSubmitResponse;
class CMsgGCPlayerInfoSubmitResponseDefaultTypeInternal;
extern CMsgGCPlayerInfoSubmitResponseDefaultTypeInternal _CMsgGCPlayerInfoSubmitResponse_default_instance_;
class CMsgGCRequestSubGCSessionInfo;
class CMsgGCRequestSubGCSessionInfoDefaultTypeInternal;
extern CMsgGCRequestSubGCSessionInfoDefaultTypeInternal _CMsgGCRequestSubGCSessionInfo_default_instance_;
class CMsgGCRequestSubGCSessionInfoResponse;
class CMsgGCRequestSubGCSessionInfoResponseDefaultTypeInternal;
extern CMsgGCRequestSubGCSessionInfoResponseDefaultTypeInternal _CMsgGCRequestSubGCSessionInfoResponse_default_instance_;
class CMsgGCRerollPlayerChallengeResponse;
class CMsgGCRerollPlayerChallengeResponseDefaultTypeInternal;
extern CMsgGCRerollPlayerChallengeResponseDefaultTypeInternal _CMsgGCRerollPlayerChallengeResponse_default_instance_;
class CMsgGCRoutingInfo;
class CMsgGCRoutingInfoDefaultTypeInternal;
extern CMsgGCRoutingInfoDefaultTypeInternal _CMsgGCRoutingInfo_default_instance_;
class CMsgGCSteamProfileRequest;
class CMsgGCSteamProfileRequestDefaultTypeInternal;
extern CMsgGCSteamProfileRequestDefaultTypeInternal _CMsgGCSteamProfileRequest_default_instance_;
class CMsgGCSteamProfileRequestResponse;
class CMsgGCSteamProfileRequestResponseDefaultTypeInternal;
extern CMsgGCSteamProfileRequestResponseDefaultTypeInternal _CMsgGCSteamProfileRequestResponse_default_instance_;
class CMsgGCToClientArcanaVotesUpdate;
class CMsgGCToClientArcanaVotesUpdateDefaultTypeInternal;
extern CMsgGCToClientArcanaVotesUpdateDefaultTypeInternal _CMsgGCToClientArcanaVotesUpdate_default_instance_;
class CMsgGCToClientBattlePassRollupListRequest;
class CMsgGCToClientBattlePassRollupListRequestDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollupListRequestDefaultTypeInternal _CMsgGCToClientBattlePassRollupListRequest_default_instance_;
class CMsgGCToClientBattlePassRollupListResponse;
class CMsgGCToClientBattlePassRollupListResponseDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollupListResponseDefaultTypeInternal _CMsgGCToClientBattlePassRollupListResponse_default_instance_;
class CMsgGCToClientBattlePassRollupRequest;
class CMsgGCToClientBattlePassRollupRequestDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollupRequestDefaultTypeInternal _CMsgGCToClientBattlePassRollupRequest_default_instance_;
class CMsgGCToClientBattlePassRollupResponse;
class CMsgGCToClientBattlePassRollupResponseDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollupResponseDefaultTypeInternal _CMsgGCToClientBattlePassRollupResponse_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016;
class CMsgGCToClientBattlePassRollup_Fall2016DefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016DefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_Achievements;
class CMsgGCToClientBattlePassRollup_Fall2016_AchievementsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_AchievementsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_Achievements_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_BattleCup;
class CMsgGCToClientBattlePassRollup_Fall2016_BattleCupDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_BattleCupDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_BattleCup_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_Bracket;
class CMsgGCToClientBattlePassRollup_Fall2016_BracketDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_BracketDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_Bracket_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge;
class CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallengeDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallengeDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard;
class CMsgGCToClientBattlePassRollup_Fall2016_PlayerCardDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_PlayerCardDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_Predictions;
class CMsgGCToClientBattlePassRollup_Fall2016_PredictionsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_PredictionsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_Predictions_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_Questlines;
class CMsgGCToClientBattlePassRollup_Fall2016_QuestlinesDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_QuestlinesDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_Questlines_default_instance_;
class CMsgGCToClientBattlePassRollup_Fall2016_Wagering;
class CMsgGCToClientBattlePassRollup_Fall2016_WageringDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_Fall2016_WageringDefaultTypeInternal _CMsgGCToClientBattlePassRollup_Fall2016_Wagering_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016;
class CMsgGCToClientBattlePassRollup_International2016DefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016DefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_Achievements;
class CMsgGCToClientBattlePassRollup_International2016_AchievementsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_AchievementsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_Achievements_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_BattleCup;
class CMsgGCToClientBattlePassRollup_International2016_BattleCupDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_BattleCupDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_BattleCup_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_Bracket;
class CMsgGCToClientBattlePassRollup_International2016_BracketDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_BracketDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_Bracket_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge;
class CMsgGCToClientBattlePassRollup_International2016_FantasyChallengeDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_FantasyChallengeDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_PlayerCard;
class CMsgGCToClientBattlePassRollup_International2016_PlayerCardDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_PlayerCardDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_PlayerCard_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_Predictions;
class CMsgGCToClientBattlePassRollup_International2016_PredictionsDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_PredictionsDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_Predictions_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_Questlines;
class CMsgGCToClientBattlePassRollup_International2016_QuestlinesDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_QuestlinesDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_Questlines_default_instance_;
class CMsgGCToClientBattlePassRollup_International2016_Wagering;
class CMsgGCToClientBattlePassRollup_International2016_WageringDefaultTypeInternal;
extern CMsgGCToClientBattlePassRollup_International2016_WageringDefaultTypeInternal _CMsgGCToClientBattlePassRollup_International2016_Wagering_default_instance_;
class CMsgGCToClientCustomGamePlayerCountResponse;
class CMsgGCToClientCustomGamePlayerCountResponseDefaultTypeInternal;
extern CMsgGCToClientCustomGamePlayerCountResponseDefaultTypeInternal _CMsgGCToClientCustomGamePlayerCountResponse_default_instance_;
class CMsgGCToClientCustomGamesFriendsPlayedResponse;
class CMsgGCToClientCustomGamesFriendsPlayedResponseDefaultTypeInternal;
extern CMsgGCToClientCustomGamesFriendsPlayedResponseDefaultTypeInternal _CMsgGCToClientCustomGamesFriendsPlayedResponse_default_instance_;
class CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame;
class CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGameDefaultTypeInternal;
extern CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGameDefaultTypeInternal _CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame_default_instance_;
class CMsgGCToClientEmoticonData;
class CMsgGCToClientEmoticonDataDefaultTypeInternal;
extern CMsgGCToClientEmoticonDataDefaultTypeInternal _CMsgGCToClientEmoticonData_default_instance_;
class CMsgGCToClientEventStatusChanged;
class CMsgGCToClientEventStatusChangedDefaultTypeInternal;
extern CMsgGCToClientEventStatusChangedDefaultTypeInternal _CMsgGCToClientEventStatusChanged_default_instance_;
class CMsgGCToClientFeaturedHeroesResponse;
class CMsgGCToClientFeaturedHeroesResponseDefaultTypeInternal;
extern CMsgGCToClientFeaturedHeroesResponseDefaultTypeInternal _CMsgGCToClientFeaturedHeroesResponse_default_instance_;
class CMsgGCToClientFeaturedHeroesResponse_Category;
class CMsgGCToClientFeaturedHeroesResponse_CategoryDefaultTypeInternal;
extern CMsgGCToClientFeaturedHeroesResponse_CategoryDefaultTypeInternal _CMsgGCToClientFeaturedHeroesResponse_Category_default_instance_;
class CMsgGCToClientFeaturedHeroesResponse_DataField;
class CMsgGCToClientFeaturedHeroesResponse_DataFieldDefaultTypeInternal;
extern CMsgGCToClientFeaturedHeroesResponse_DataFieldDefaultTypeInternal _CMsgGCToClientFeaturedHeroesResponse_DataField_default_instance_;
class CMsgGCToClientFeaturedHeroesResponse_FeaturedHero;
class CMsgGCToClientFeaturedHeroesResponse_FeaturedHeroDefaultTypeInternal;
extern CMsgGCToClientFeaturedHeroesResponse_FeaturedHeroDefaultTypeInternal _CMsgGCToClientFeaturedHeroesResponse_FeaturedHero_default_instance_;
class CMsgGCToClientFriendsPlayedCustomGameResponse;
class CMsgGCToClientFriendsPlayedCustomGameResponseDefaultTypeInternal;
extern CMsgGCToClientFriendsPlayedCustomGameResponseDefaultTypeInternal _CMsgGCToClientFriendsPlayedCustomGameResponse_default_instance_;
class CMsgGCToClientHeroStatueCreateResult;
class CMsgGCToClientHeroStatueCreateResultDefaultTypeInternal;
extern CMsgGCToClientHeroStatueCreateResultDefaultTypeInternal _CMsgGCToClientHeroStatueCreateResult_default_instance_;
class CMsgGCToClientMatchGroupsVersion;
class CMsgGCToClientMatchGroupsVersionDefaultTypeInternal;
extern CMsgGCToClientMatchGroupsVersionDefaultTypeInternal _CMsgGCToClientMatchGroupsVersion_default_instance_;
class CMsgGCToClientMatchSignedOut;
class CMsgGCToClientMatchSignedOutDefaultTypeInternal;
extern CMsgGCToClientMatchSignedOutDefaultTypeInternal _CMsgGCToClientMatchSignedOut_default_instance_;
class CMsgGCToClientPlayerStatsResponse;
class CMsgGCToClientPlayerStatsResponseDefaultTypeInternal;
extern CMsgGCToClientPlayerStatsResponseDefaultTypeInternal _CMsgGCToClientPlayerStatsResponse_default_instance_;
class CMsgGCToClientPlaytestStatus;
class CMsgGCToClientPlaytestStatusDefaultTypeInternal;
extern CMsgGCToClientPlaytestStatusDefaultTypeInternal _CMsgGCToClientPlaytestStatus_default_instance_;
class CMsgGCToClientPollConvarRequest;
class CMsgGCToClientPollConvarRequestDefaultTypeInternal;
extern CMsgGCToClientPollConvarRequestDefaultTypeInternal _CMsgGCToClientPollConvarRequest_default_instance_;
class CMsgGCToClientPollConvarResponse;
class CMsgGCToClientPollConvarResponseDefaultTypeInternal;
extern CMsgGCToClientPollConvarResponseDefaultTypeInternal _CMsgGCToClientPollConvarResponse_default_instance_;
class CMsgGCToClientQuestProgressUpdated;
class CMsgGCToClientQuestProgressUpdatedDefaultTypeInternal;
extern CMsgGCToClientQuestProgressUpdatedDefaultTypeInternal _CMsgGCToClientQuestProgressUpdated_default_instance_;
class CMsgGCToClientQuestProgressUpdated_Challenge;
class CMsgGCToClientQuestProgressUpdated_ChallengeDefaultTypeInternal;
extern CMsgGCToClientQuestProgressUpdated_ChallengeDefaultTypeInternal _CMsgGCToClientQuestProgressUpdated_Challenge_default_instance_;
class CMsgGCToClientSocialFeedPostCommentResponse;
class CMsgGCToClientSocialFeedPostCommentResponseDefaultTypeInternal;
extern CMsgGCToClientSocialFeedPostCommentResponseDefaultTypeInternal _CMsgGCToClientSocialFeedPostCommentResponse_default_instance_;
class CMsgGCToClientSocialFeedPostMessageResponse;
class CMsgGCToClientSocialFeedPostMessageResponseDefaultTypeInternal;
extern CMsgGCToClientSocialFeedPostMessageResponseDefaultTypeInternal _CMsgGCToClientSocialFeedPostMessageResponse_default_instance_;
class CMsgGCToClientSocialMatchDetailsResponse;
class CMsgGCToClientSocialMatchDetailsResponseDefaultTypeInternal;
extern CMsgGCToClientSocialMatchDetailsResponseDefaultTypeInternal _CMsgGCToClientSocialMatchDetailsResponse_default_instance_;
class CMsgGCToClientSocialMatchDetailsResponse_Comment;
class CMsgGCToClientSocialMatchDetailsResponse_CommentDefaultTypeInternal;
extern CMsgGCToClientSocialMatchDetailsResponse_CommentDefaultTypeInternal _CMsgGCToClientSocialMatchDetailsResponse_Comment_default_instance_;
class CMsgGCToClientSocialMatchPostCommentResponse;
class CMsgGCToClientSocialMatchPostCommentResponseDefaultTypeInternal;
extern CMsgGCToClientSocialMatchPostCommentResponseDefaultTypeInternal _CMsgGCToClientSocialMatchPostCommentResponse_default_instance_;
class CMsgGCToClientTipNotification;
class CMsgGCToClientTipNotificationDefaultTypeInternal;
extern CMsgGCToClientTipNotificationDefaultTypeInternal _CMsgGCToClientTipNotification_default_instance_;
class CMsgGCToClientTournamentItemDrop;
class CMsgGCToClientTournamentItemDropDefaultTypeInternal;
extern CMsgGCToClientTournamentItemDropDefaultTypeInternal _CMsgGCToClientTournamentItemDrop_default_instance_;
class CMsgGCToClientTrophyAwarded;
class CMsgGCToClientTrophyAwardedDefaultTypeInternal;
extern CMsgGCToClientTrophyAwardedDefaultTypeInternal _CMsgGCToClientTrophyAwarded_default_instance_;
class CMsgGCToClientWageringResponse;
class CMsgGCToClientWageringResponseDefaultTypeInternal;
extern CMsgGCToClientWageringResponseDefaultTypeInternal _CMsgGCToClientWageringResponse_default_instance_;
class CMsgGCToClientWageringUpdate;
class CMsgGCToClientWageringUpdateDefaultTypeInternal;
extern CMsgGCToClientWageringUpdateDefaultTypeInternal _CMsgGCToClientWageringUpdate_default_instance_;
class CMsgGCToGCFantasySetMatchLeague;
class CMsgGCToGCFantasySetMatchLeagueDefaultTypeInternal;
extern CMsgGCToGCFantasySetMatchLeagueDefaultTypeInternal _CMsgGCToGCFantasySetMatchLeague_default_instance_;
class CMsgGCToGCForwardAccountDetails;
class CMsgGCToGCForwardAccountDetailsDefaultTypeInternal;
extern CMsgGCToGCForwardAccountDetailsDefaultTypeInternal _CMsgGCToGCForwardAccountDetails_default_instance_;
class CMsgGCToGCLeaguePredictions;
class CMsgGCToGCLeaguePredictionsDefaultTypeInternal;
extern CMsgGCToGCLeaguePredictionsDefaultTypeInternal _CMsgGCToGCLeaguePredictions_default_instance_;
class CMsgGCToGCLoadSessionSOCache;
class CMsgGCToGCLoadSessionSOCacheDefaultTypeInternal;
extern CMsgGCToGCLoadSessionSOCacheDefaultTypeInternal _CMsgGCToGCLoadSessionSOCache_default_instance_;
class CMsgGCToGCLoadSessionSOCacheResponse;
class CMsgGCToGCLoadSessionSOCacheResponseDefaultTypeInternal;
extern CMsgGCToGCLoadSessionSOCacheResponseDefaultTypeInternal _CMsgGCToGCLoadSessionSOCacheResponse_default_instance_;
class CMsgGCToGCSOCacheSubscribe;
class CMsgGCToGCSOCacheSubscribeDefaultTypeInternal;
extern CMsgGCToGCSOCacheSubscribeDefaultTypeInternal _CMsgGCToGCSOCacheSubscribe_default_instance_;
class CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions;
class CMsgGCToGCSOCacheSubscribe_CMsgHaveVersionsDefaultTypeInternal;
extern CMsgGCToGCSOCacheSubscribe_CMsgHaveVersionsDefaultTypeInternal _CMsgGCToGCSOCacheSubscribe_CMsgHaveVersions_default_instance_;
class CMsgGCToGCSOCacheUnsubscribe;
class CMsgGCToGCSOCacheUnsubscribeDefaultTypeInternal;
extern CMsgGCToGCSOCacheUnsubscribeDefaultTypeInternal _CMsgGCToGCSOCacheUnsubscribe_default_instance_;
class CMsgGCToGCUniverseStartup;
class CMsgGCToGCUniverseStartupDefaultTypeInternal;
extern CMsgGCToGCUniverseStartupDefaultTypeInternal _CMsgGCToGCUniverseStartup_default_instance_;
class CMsgGCToGCUniverseStartupResponse;
class CMsgGCToGCUniverseStartupResponseDefaultTypeInternal;
extern CMsgGCToGCUniverseStartupResponseDefaultTypeInternal _CMsgGCToGCUniverseStartupResponse_default_instance_;
class CMsgGCToGCUpdateSessionStats;
class CMsgGCToGCUpdateSessionStatsDefaultTypeInternal;
extern CMsgGCToGCUpdateSessionStatsDefaultTypeInternal _CMsgGCToGCUpdateSessionStats_default_instance_;
class CMsgGCToServerMatchDetailsResponse;
class CMsgGCToServerMatchDetailsResponseDefaultTypeInternal;
extern CMsgGCToServerMatchDetailsResponseDefaultTypeInternal _CMsgGCToServerMatchDetailsResponse_default_instance_;
class CMsgGCTopCustomGamesList;
class CMsgGCTopCustomGamesListDefaultTypeInternal;
extern CMsgGCTopCustomGamesListDefaultTypeInternal _CMsgGCTopCustomGamesList_default_instance_;
class CMsgGCUpdateSubGCSessionInfo;
class CMsgGCUpdateSubGCSessionInfoDefaultTypeInternal;
extern CMsgGCUpdateSubGCSessionInfoDefaultTypeInternal _CMsgGCUpdateSubGCSessionInfo_default_instance_;
class CMsgGCUpdateSubGCSessionInfo_CMsgUpdate;
class CMsgGCUpdateSubGCSessionInfo_CMsgUpdateDefaultTypeInternal;
extern CMsgGCUpdateSubGCSessionInfo_CMsgUpdateDefaultTypeInternal _CMsgGCUpdateSubGCSessionInfo_CMsgUpdate_default_instance_;
class CMsgGCWatchDownloadedReplay;
class CMsgGCWatchDownloadedReplayDefaultTypeInternal;
extern CMsgGCWatchDownloadedReplayDefaultTypeInternal _CMsgGCWatchDownloadedReplay_default_instance_;
class CMsgHttpRequest;
class CMsgHttpRequestDefaultTypeInternal;
extern CMsgHttpRequestDefaultTypeInternal _CMsgHttpRequest_default_instance_;
class CMsgHttpRequest_QueryParam;
class CMsgHttpRequest_QueryParamDefaultTypeInternal;
extern CMsgHttpRequest_QueryParamDefaultTypeInternal _CMsgHttpRequest_QueryParam_default_instance_;
class CMsgHttpRequest_RequestHeader;
class CMsgHttpRequest_RequestHeaderDefaultTypeInternal;
extern CMsgHttpRequest_RequestHeaderDefaultTypeInternal _CMsgHttpRequest_RequestHeader_default_instance_;
class CMsgHttpResponse;
class CMsgHttpResponseDefaultTypeInternal;
extern CMsgHttpResponseDefaultTypeInternal _CMsgHttpResponse_default_instance_;
class CMsgHttpResponse_ResponseHeader;
class CMsgHttpResponse_ResponseHeaderDefaultTypeInternal;
extern CMsgHttpResponse_ResponseHeaderDefaultTypeInternal _CMsgHttpResponse_ResponseHeader_default_instance_;
class CMsgInitialQuestionnaireResponse;
class CMsgInitialQuestionnaireResponseDefaultTypeInternal;
extern CMsgInitialQuestionnaireResponseDefaultTypeInternal _CMsgInitialQuestionnaireResponse_default_instance_;
class CMsgLeagueAdminList;
class CMsgLeagueAdminListDefaultTypeInternal;
extern CMsgLeagueAdminListDefaultTypeInternal _CMsgLeagueAdminList_default_instance_;
class CMsgLeaguePrizePool;
class CMsgLeaguePrizePoolDefaultTypeInternal;
extern CMsgLeaguePrizePoolDefaultTypeInternal _CMsgLeaguePrizePool_default_instance_;
class CMsgLeagueScheduleBlock;
class CMsgLeagueScheduleBlockDefaultTypeInternal;
extern CMsgLeagueScheduleBlockDefaultTypeInternal _CMsgLeagueScheduleBlock_default_instance_;
class CMsgLeagueScheduleBlockTeamInfo;
class CMsgLeagueScheduleBlockTeamInfoDefaultTypeInternal;
extern CMsgLeagueScheduleBlockTeamInfoDefaultTypeInternal _CMsgLeagueScheduleBlockTeamInfo_default_instance_;
class CMsgLeaverState;
class CMsgLeaverStateDefaultTypeInternal;
extern CMsgLeaverStateDefaultTypeInternal _CMsgLeaverState_default_instance_;
class CMsgLobbyBattleCupVictoryList;
class CMsgLobbyBattleCupVictoryListDefaultTypeInternal;
extern CMsgLobbyBattleCupVictoryListDefaultTypeInternal _CMsgLobbyBattleCupVictoryList_default_instance_;
class CMsgLobbyEventPoints;
class CMsgLobbyEventPointsDefaultTypeInternal;
extern CMsgLobbyEventPointsDefaultTypeInternal _CMsgLobbyEventPoints_default_instance_;
class CMsgLobbyEventPoints_AccountPoints;
class CMsgLobbyEventPoints_AccountPointsDefaultTypeInternal;
extern CMsgLobbyEventPoints_AccountPointsDefaultTypeInternal _CMsgLobbyEventPoints_AccountPoints_default_instance_;
class CMsgLobbyEventPoints_ChatWheelMessageRange;
class CMsgLobbyEventPoints_ChatWheelMessageRangeDefaultTypeInternal;
extern CMsgLobbyEventPoints_ChatWheelMessageRangeDefaultTypeInternal _CMsgLobbyEventPoints_ChatWheelMessageRange_default_instance_;
class CMsgLobbyPlaytestDetails;
class CMsgLobbyPlaytestDetailsDefaultTypeInternal;
extern CMsgLobbyPlaytestDetailsDefaultTypeInternal _CMsgLobbyPlaytestDetails_default_instance_;
class CMsgMVPVotesForMatch;
class CMsgMVPVotesForMatchDefaultTypeInternal;
extern CMsgMVPVotesForMatchDefaultTypeInternal _CMsgMVPVotesForMatch_default_instance_;
class CMsgMVPVotesForMatch_Player;
class CMsgMVPVotesForMatch_PlayerDefaultTypeInternal;
extern CMsgMVPVotesForMatch_PlayerDefaultTypeInternal _CMsgMVPVotesForMatch_Player_default_instance_;
class CMsgMakeOffering;
class CMsgMakeOfferingDefaultTypeInternal;
extern CMsgMakeOfferingDefaultTypeInternal _CMsgMakeOffering_default_instance_;
class CMsgMatchVoteResponse;
class CMsgMatchVoteResponseDefaultTypeInternal;
extern CMsgMatchVoteResponseDefaultTypeInternal _CMsgMatchVoteResponse_default_instance_;
class CMsgMatchmakingMatchGroupInfo;
class CMsgMatchmakingMatchGroupInfoDefaultTypeInternal;
extern CMsgMatchmakingMatchGroupInfoDefaultTypeInternal _CMsgMatchmakingMatchGroupInfo_default_instance_;
class CMsgNexonPartnerUpdate;
class CMsgNexonPartnerUpdateDefaultTypeInternal;
extern CMsgNexonPartnerUpdateDefaultTypeInternal _CMsgNexonPartnerUpdate_default_instance_;
class CMsgNotificationOfSuspiciousActivity;
class CMsgNotificationOfSuspiciousActivityDefaultTypeInternal;
extern CMsgNotificationOfSuspiciousActivityDefaultTypeInternal _CMsgNotificationOfSuspiciousActivity_default_instance_;
class CMsgNotificationOfSuspiciousActivity_MultipleGameInstances;
class CMsgNotificationOfSuspiciousActivity_MultipleGameInstancesDefaultTypeInternal;
extern CMsgNotificationOfSuspiciousActivity_MultipleGameInstancesDefaultTypeInternal _CMsgNotificationOfSuspiciousActivity_MultipleGameInstances_default_instance_;
class CMsgNotifyWatchdog;
class CMsgNotifyWatchdogDefaultTypeInternal;
extern CMsgNotifyWatchdogDefaultTypeInternal _CMsgNotifyWatchdog_default_instance_;
class CMsgPackageLicense;
class CMsgPackageLicenseDefaultTypeInternal;
extern CMsgPackageLicenseDefaultTypeInternal _CMsgPackageLicense_default_instance_;
class CMsgPerfectWorldUserLookupRequest;
class CMsgPerfectWorldUserLookupRequestDefaultTypeInternal;
extern CMsgPerfectWorldUserLookupRequestDefaultTypeInternal _CMsgPerfectWorldUserLookupRequest_default_instance_;
class CMsgPerfectWorldUserLookupResponse;
class CMsgPerfectWorldUserLookupResponseDefaultTypeInternal;
extern CMsgPerfectWorldUserLookupResponseDefaultTypeInternal _CMsgPerfectWorldUserLookupResponse_default_instance_;
class CMsgPlayerCard;
class CMsgPlayerCardDefaultTypeInternal;
extern CMsgPlayerCardDefaultTypeInternal _CMsgPlayerCard_default_instance_;
class CMsgPlayerCard_StatModifier;
class CMsgPlayerCard_StatModifierDefaultTypeInternal;
extern CMsgPlayerCard_StatModifierDefaultTypeInternal _CMsgPlayerCard_StatModifier_default_instance_;
class CMsgPlayerConductScorecard;
class CMsgPlayerConductScorecardDefaultTypeInternal;
extern CMsgPlayerConductScorecardDefaultTypeInternal _CMsgPlayerConductScorecard_default_instance_;
class CMsgPlayerConductScorecardRequest;
class CMsgPlayerConductScorecardRequestDefaultTypeInternal;
extern CMsgPlayerConductScorecardRequestDefaultTypeInternal _CMsgPlayerConductScorecardRequest_default_instance_;
class CMsgPredictionRankings;
class CMsgPredictionRankingsDefaultTypeInternal;
extern CMsgPredictionRankingsDefaultTypeInternal _CMsgPredictionRankings_default_instance_;
class CMsgPredictionRankings_Prediction;
class CMsgPredictionRankings_PredictionDefaultTypeInternal;
extern CMsgPredictionRankings_PredictionDefaultTypeInternal _CMsgPredictionRankings_Prediction_default_instance_;
class CMsgPredictionRankings_PredictionLine;
class CMsgPredictionRankings_PredictionLineDefaultTypeInternal;
extern CMsgPredictionRankings_PredictionLineDefaultTypeInternal _CMsgPredictionRankings_PredictionLine_default_instance_;
class CMsgPredictionResults;
class CMsgPredictionResultsDefaultTypeInternal;
extern CMsgPredictionResultsDefaultTypeInternal _CMsgPredictionResults_default_instance_;
class CMsgPredictionResults_Result;
class CMsgPredictionResults_ResultDefaultTypeInternal;
extern CMsgPredictionResults_ResultDefaultTypeInternal _CMsgPredictionResults_Result_default_instance_;
class CMsgPredictionResults_ResultBreakdown;
class CMsgPredictionResults_ResultBreakdownDefaultTypeInternal;
extern CMsgPredictionResults_ResultBreakdownDefaultTypeInternal _CMsgPredictionResults_ResultBreakdown_default_instance_;
class CMsgPresentedClientTerminateDlg;
class CMsgPresentedClientTerminateDlgDefaultTypeInternal;
extern CMsgPresentedClientTerminateDlgDefaultTypeInternal _CMsgPresentedClientTerminateDlg_default_instance_;
class CMsgProtoBufHeader;
class CMsgProtoBufHeaderDefaultTypeInternal;
extern CMsgProtoBufHeaderDefaultTypeInternal _CMsgProtoBufHeader_default_instance_;
class CMsgRefreshPartnerAccountLink;
class CMsgRefreshPartnerAccountLinkDefaultTypeInternal;
extern CMsgRefreshPartnerAccountLinkDefaultTypeInternal _CMsgRefreshPartnerAccountLink_default_instance_;
class CMsgRequestInternationalTicket;
class CMsgRequestInternationalTicketDefaultTypeInternal;
extern CMsgRequestInternationalTicketDefaultTypeInternal _CMsgRequestInternationalTicket_default_instance_;
class CMsgRequestLeagueInfo;
class CMsgRequestLeagueInfoDefaultTypeInternal;
extern CMsgRequestLeagueInfoDefaultTypeInternal _CMsgRequestLeagueInfo_default_instance_;
class CMsgRequestLeaguePrizePool;
class CMsgRequestLeaguePrizePoolDefaultTypeInternal;
extern CMsgRequestLeaguePrizePoolDefaultTypeInternal _CMsgRequestLeaguePrizePool_default_instance_;
class CMsgRequestLeaguePrizePoolResponse;
class CMsgRequestLeaguePrizePoolResponseDefaultTypeInternal;
extern CMsgRequestLeaguePrizePoolResponseDefaultTypeInternal _CMsgRequestLeaguePrizePoolResponse_default_instance_;
class CMsgRequestOfferings;
class CMsgRequestOfferingsDefaultTypeInternal;
extern CMsgRequestOfferingsDefaultTypeInternal _CMsgRequestOfferings_default_instance_;
class CMsgRequestOfferingsResponse;
class CMsgRequestOfferingsResponseDefaultTypeInternal;
extern CMsgRequestOfferingsResponseDefaultTypeInternal _CMsgRequestOfferingsResponse_default_instance_;
class CMsgRequestOfferingsResponse_NewYearsOffering;
class CMsgRequestOfferingsResponse_NewYearsOfferingDefaultTypeInternal;
extern CMsgRequestOfferingsResponse_NewYearsOfferingDefaultTypeInternal _CMsgRequestOfferingsResponse_NewYearsOffering_default_instance_;
class CMsgResetMapLocations;
class CMsgResetMapLocationsDefaultTypeInternal;
extern CMsgResetMapLocationsDefaultTypeInternal _CMsgResetMapLocations_default_instance_;
class CMsgResetMapLocationsResponse;
class CMsgResetMapLocationsResponseDefaultTypeInternal;
extern CMsgResetMapLocationsResponseDefaultTypeInternal _CMsgResetMapLocationsResponse_default_instance_;
class CMsgResponseLeagueInfo;
class CMsgResponseLeagueInfoDefaultTypeInternal;
extern CMsgResponseLeagueInfoDefaultTypeInternal _CMsgResponseLeagueInfo_default_instance_;
class CMsgRetrieveMatchVote;
class CMsgRetrieveMatchVoteDefaultTypeInternal;
extern CMsgRetrieveMatchVoteDefaultTypeInternal _CMsgRetrieveMatchVote_default_instance_;
class CMsgSHA1Digest;
class CMsgSHA1DigestDefaultTypeInternal;
extern CMsgSHA1DigestDefaultTypeInternal _CMsgSHA1Digest_default_instance_;
class CMsgSOCacheHaveVersion;
class CMsgSOCacheHaveVersionDefaultTypeInternal;
extern CMsgSOCacheHaveVersionDefaultTypeInternal _CMsgSOCacheHaveVersion_default_instance_;
class CMsgSOCacheSubscribed;
class CMsgSOCacheSubscribedDefaultTypeInternal;
extern CMsgSOCacheSubscribedDefaultTypeInternal _CMsgSOCacheSubscribed_default_instance_;
class CMsgSOCacheSubscribedUpToDate;
class CMsgSOCacheSubscribedUpToDateDefaultTypeInternal;
extern CMsgSOCacheSubscribedUpToDateDefaultTypeInternal _CMsgSOCacheSubscribedUpToDate_default_instance_;
class CMsgSOCacheSubscribed_SubscribedType;
class CMsgSOCacheSubscribed_SubscribedTypeDefaultTypeInternal;
extern CMsgSOCacheSubscribed_SubscribedTypeDefaultTypeInternal _CMsgSOCacheSubscribed_SubscribedType_default_instance_;
class CMsgSOCacheSubscriptionCheck;
class CMsgSOCacheSubscriptionCheckDefaultTypeInternal;
extern CMsgSOCacheSubscriptionCheckDefaultTypeInternal _CMsgSOCacheSubscriptionCheck_default_instance_;
class CMsgSOCacheSubscriptionRefresh;
class CMsgSOCacheSubscriptionRefreshDefaultTypeInternal;
extern CMsgSOCacheSubscriptionRefreshDefaultTypeInternal _CMsgSOCacheSubscriptionRefresh_default_instance_;
class CMsgSOCacheUnsubscribed;
class CMsgSOCacheUnsubscribedDefaultTypeInternal;
extern CMsgSOCacheUnsubscribedDefaultTypeInternal _CMsgSOCacheUnsubscribed_default_instance_;
class CMsgSOCacheVersion;
class CMsgSOCacheVersionDefaultTypeInternal;
extern CMsgSOCacheVersionDefaultTypeInternal _CMsgSOCacheVersion_default_instance_;
class CMsgSOIDOwner;
class CMsgSOIDOwnerDefaultTypeInternal;
extern CMsgSOIDOwnerDefaultTypeInternal _CMsgSOIDOwner_default_instance_;
class CMsgSOMultipleObjects;
class CMsgSOMultipleObjectsDefaultTypeInternal;
extern CMsgSOMultipleObjectsDefaultTypeInternal _CMsgSOMultipleObjects_default_instance_;
class CMsgSOMultipleObjects_SingleObject;
class CMsgSOMultipleObjects_SingleObjectDefaultTypeInternal;
extern CMsgSOMultipleObjects_SingleObjectDefaultTypeInternal _CMsgSOMultipleObjects_SingleObject_default_instance_;
class CMsgSOSingleObject;
class CMsgSOSingleObjectDefaultTypeInternal;
extern CMsgSOSingleObjectDefaultTypeInternal _CMsgSOSingleObject_default_instance_;
class CMsgSerializedSOCache;
class CMsgSerializedSOCacheDefaultTypeInternal;
extern CMsgSerializedSOCacheDefaultTypeInternal _CMsgSerializedSOCache_default_instance_;
class CMsgSerializedSOCache_Cache;
class CMsgSerializedSOCache_CacheDefaultTypeInternal;
extern CMsgSerializedSOCache_CacheDefaultTypeInternal _CMsgSerializedSOCache_Cache_default_instance_;
class CMsgSerializedSOCache_Cache_Version;
class CMsgSerializedSOCache_Cache_VersionDefaultTypeInternal;
extern CMsgSerializedSOCache_Cache_VersionDefaultTypeInternal _CMsgSerializedSOCache_Cache_Version_default_instance_;
class CMsgSerializedSOCache_TypeCache;
class CMsgSerializedSOCache_TypeCacheDefaultTypeInternal;
extern CMsgSerializedSOCache_TypeCacheDefaultTypeInternal _CMsgSerializedSOCache_TypeCache_default_instance_;
class CMsgServerToGCMatchDetailsRequest;
class CMsgServerToGCMatchDetailsRequestDefaultTypeInternal;
extern CMsgServerToGCMatchDetailsRequestDefaultTypeInternal _CMsgServerToGCMatchDetailsRequest_default_instance_;
class CMsgSetFeaturedItems;
class CMsgSetFeaturedItemsDefaultTypeInternal;
extern CMsgSetFeaturedItemsDefaultTypeInternal _CMsgSetFeaturedItems_default_instance_;
class CMsgSetMapLocationState;
class CMsgSetMapLocationStateDefaultTypeInternal;
extern CMsgSetMapLocationStateDefaultTypeInternal _CMsgSetMapLocationState_default_instance_;
class CMsgSetMapLocationStateResponse;
class CMsgSetMapLocationStateResponseDefaultTypeInternal;
extern CMsgSetMapLocationStateResponseDefaultTypeInternal _CMsgSetMapLocationStateResponse_default_instance_;
class CMsgSetShowcaseHero;
class CMsgSetShowcaseHeroDefaultTypeInternal;
extern CMsgSetShowcaseHeroDefaultTypeInternal _CMsgSetShowcaseHero_default_instance_;
class CMsgUpgradeLeagueItem;
class CMsgUpgradeLeagueItemDefaultTypeInternal;
extern CMsgUpgradeLeagueItemDefaultTypeInternal _CMsgUpgradeLeagueItem_default_instance_;
class CMsgUpgradeLeagueItemResponse;
class CMsgUpgradeLeagueItemResponseDefaultTypeInternal;
extern CMsgUpgradeLeagueItemResponseDefaultTypeInternal _CMsgUpgradeLeagueItemResponse_default_instance_;
class CMsgWebAPIKey;
class CMsgWebAPIKeyDefaultTypeInternal;
extern CMsgWebAPIKeyDefaultTypeInternal _CMsgWebAPIKey_default_instance_;
class CMsgWebAPIRequest;
class CMsgWebAPIRequestDefaultTypeInternal;
extern CMsgWebAPIRequestDefaultTypeInternal _CMsgWebAPIRequest_default_instance_;
class CProtoItemHeroStatue;
class CProtoItemHeroStatueDefaultTypeInternal;
extern CProtoItemHeroStatueDefaultTypeInternal _CProtoItemHeroStatue_default_instance_;
class CProtoItemTeamShowcase;
class CProtoItemTeamShowcaseDefaultTypeInternal;
extern CProtoItemTeamShowcaseDefaultTypeInternal _CProtoItemTeamShowcase_default_instance_;
class CSODOTAGameAccountClient;
class CSODOTAGameAccountClientDefaultTypeInternal;
extern CSODOTAGameAccountClientDefaultTypeInternal _CSODOTAGameAccountClient_default_instance_;
class CSODOTAGameHeroFavorites;
class CSODOTAGameHeroFavoritesDefaultTypeInternal;
extern CSODOTAGameHeroFavoritesDefaultTypeInternal _CSODOTAGameHeroFavorites_default_instance_;
class CSODOTALobby;
class CSODOTALobbyDefaultTypeInternal;
extern CSODOTALobbyDefaultTypeInternal _CSODOTALobby_default_instance_;
class CSODOTALobbyInvite;
class CSODOTALobbyInviteDefaultTypeInternal;
extern CSODOTALobbyInviteDefaultTypeInternal _CSODOTALobbyInvite_default_instance_;
class CSODOTALobbyInvite_LobbyMember;
class CSODOTALobbyInvite_LobbyMemberDefaultTypeInternal;
extern CSODOTALobbyInvite_LobbyMemberDefaultTypeInternal _CSODOTALobbyInvite_LobbyMember_default_instance_;
class CSODOTALobby_CExtraMsg;
class CSODOTALobby_CExtraMsgDefaultTypeInternal;
extern CSODOTALobby_CExtraMsgDefaultTypeInternal _CSODOTALobby_CExtraMsg_default_instance_;
class CSODOTAMapLocationState;
class CSODOTAMapLocationStateDefaultTypeInternal;
extern CSODOTAMapLocationStateDefaultTypeInternal _CSODOTAMapLocationState_default_instance_;
class CSODOTAParty;
class CSODOTAPartyDefaultTypeInternal;
extern CSODOTAPartyDefaultTypeInternal _CSODOTAParty_default_instance_;
class CSODOTAPartyInvite;
class CSODOTAPartyInviteDefaultTypeInternal;
extern CSODOTAPartyInviteDefaultTypeInternal _CSODOTAPartyInvite_default_instance_;
class CSODOTAPartyInvite_PartyMember;
class CSODOTAPartyInvite_PartyMemberDefaultTypeInternal;
extern CSODOTAPartyInvite_PartyMemberDefaultTypeInternal _CSODOTAPartyInvite_PartyMember_default_instance_;
class CSODOTAPartyMember;
class CSODOTAPartyMemberDefaultTypeInternal;
extern CSODOTAPartyMemberDefaultTypeInternal _CSODOTAPartyMember_default_instance_;
class CSODOTAPlayerChallenge;
class CSODOTAPlayerChallengeDefaultTypeInternal;
extern CSODOTAPlayerChallengeDefaultTypeInternal _CSODOTAPlayerChallenge_default_instance_;
class CStaticLeagueData;
class CStaticLeagueDataDefaultTypeInternal;
extern CStaticLeagueDataDefaultTypeInternal _CStaticLeagueData_default_instance_;
class CWorkshop_GetContributors_Request;
class CWorkshop_GetContributors_RequestDefaultTypeInternal;
extern CWorkshop_GetContributors_RequestDefaultTypeInternal _CWorkshop_GetContributors_Request_default_instance_;
class CWorkshop_GetContributors_Response;
class CWorkshop_GetContributors_ResponseDefaultTypeInternal;
extern CWorkshop_GetContributors_ResponseDefaultTypeInternal _CWorkshop_GetContributors_Response_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request;
class CWorkshop_PopulateItemDescriptions_RequestDefaultTypeInternal;
extern CWorkshop_PopulateItemDescriptions_RequestDefaultTypeInternal _CWorkshop_PopulateItemDescriptions_Request_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock;
class CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlockDefaultTypeInternal;
extern CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlockDefaultTypeInternal _CWorkshop_PopulateItemDescriptions_Request_ItemDescriptionsLanguageBlock_default_instance_;
class CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription;
class CWorkshop_PopulateItemDescriptions_Request_SingleItemDescriptionDefaultTypeInternal;
extern CWorkshop_PopulateItemDescriptions_Request_SingleItemDescriptionDefaultTypeInternal _CWorkshop_PopulateItemDescriptions_Request_SingleItemDescription_default_instance_;
class CWorkshop_SetItemPaymentRules_Request;
class CWorkshop_SetItemPaymentRules_RequestDefaultTypeInternal;
extern CWorkshop_SetItemPaymentRules_RequestDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Request_default_instance_;
class CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule;
class CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRuleDefaultTypeInternal;
extern CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRuleDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Request_PartnerItemPaymentRule_default_instance_;
class CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule;
class CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRuleDefaultTypeInternal;
extern CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRuleDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Request_WorkshopItemPaymentRule_default_instance_;
class CWorkshop_SetItemPaymentRules_Response;
class CWorkshop_SetItemPaymentRules_ResponseDefaultTypeInternal;
extern CWorkshop_SetItemPaymentRules_ResponseDefaultTypeInternal _CWorkshop_SetItemPaymentRules_Response_default_instance_;
}  // namespace dota
}  // namespace proto

namespace proto {
namespace dota {

namespace protobuf_dota_5fgcmessages_5fclient_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_dota_5fgcmessages_5fclient_2eproto

enum CMsgDOTARequestMatches_SkillLevel {
  CMsgDOTARequestMatches_SkillLevel_Any = 0,
  CMsgDOTARequestMatches_SkillLevel_Normal = 1,
  CMsgDOTARequestMatches_SkillLevel_High = 2,
  CMsgDOTARequestMatches_SkillLevel_VeryHigh = 3
};
bool CMsgDOTARequestMatches_SkillLevel_IsValid(int value);
const CMsgDOTARequestMatches_SkillLevel CMsgDOTARequestMatches_SkillLevel_SkillLevel_MIN = CMsgDOTARequestMatches_SkillLevel_Any;
const CMsgDOTARequestMatches_SkillLevel CMsgDOTARequestMatches_SkillLevel_SkillLevel_MAX = CMsgDOTARequestMatches_SkillLevel_VeryHigh;
const int CMsgDOTARequestMatches_SkillLevel_SkillLevel_ARRAYSIZE = CMsgDOTARequestMatches_SkillLevel_SkillLevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTARequestMatches_SkillLevel_descriptor();
inline const ::std::string& CMsgDOTARequestMatches_SkillLevel_Name(CMsgDOTARequestMatches_SkillLevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTARequestMatches_SkillLevel_descriptor(), value);
}
inline bool CMsgDOTARequestMatches_SkillLevel_Parse(
    const ::std::string& name, CMsgDOTARequestMatches_SkillLevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTARequestMatches_SkillLevel>(
    CMsgDOTARequestMatches_SkillLevel_descriptor(), name, value);
}
enum CMsgDOTAPopup_PopupID {
  CMsgDOTAPopup_PopupID_NONE = -1,
  CMsgDOTAPopup_PopupID_KICKED_FROM_LOBBY = 0,
  CMsgDOTAPopup_PopupID_KICKED_FROM_PARTY = 1,
  CMsgDOTAPopup_PopupID_KICKED_FROM_TEAM = 2,
  CMsgDOTAPopup_PopupID_TEAM_WAS_DISBANDED = 3,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_MATCH = 4,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_FINDING = 5,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FULL = 6,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD = 7,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD_CURRENT = 8,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAILED_TEAM_MEMBER = 9,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_GAME = 10,
  CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_GET_PARTY = 11,
  CMsgDOTAPopup_PopupID_MATCHMAKING_DISABLED = 12,
  CMsgDOTAPopup_PopupID_INVITE_DENIED = 13,
  CMsgDOTAPopup_PopupID_PARTY_FULL = 14,
  CMsgDOTAPopup_PopupID_MADE_ADMIN = 15,
  CMsgDOTAPopup_PopupID_NEED_TO_PURCHASE = 16,
  CMsgDOTAPopup_PopupID_SIGNON_MESSAGE = 17,
  CMsgDOTAPopup_PopupID_GUILD_KICKED = 18,
  CMsgDOTAPopup_PopupID_MATCHMAKING_REGION_OFFLINE = 19,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_NOT_FOUND = 21,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_LOBBY_ID = 22,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_MATCH_ID = 23,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM = 24,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_DIRE_TEAM = 25,
  CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_SQL_UPDATE_FAILED = 26,
  CMsgDOTAPopup_PopupID_NOT_LEAGUE_ADMIN = 27,
  CMsgDOTAPopup_PopupID_IN_ANOTHER_GAME = 29,
  CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_ANOTHER_GAME = 30,
  CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_LOW_PRIORITY = 31,
  CMsgDOTAPopup_PopupID_CLIENT_OUT_OF_DATE = 32,
  CMsgDOTAPopup_PopupID_SAVE_GAME_CORRUPT = 38,
  CMsgDOTAPopup_PopupID_INSUFFICIENT_INGOTS = 39,
  CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL = 42,
  CMsgDOTAPopup_PopupID_PARTY_LEADER_JOINED_LOBBY = 44,
  CMsgDOTAPopup_PopupID_WEEKEND_TOURNEY_UNMATCHED = 48,
  CMsgDOTAPopup_PopupID_POST_MATCH_SURVEY = 49,
  CMsgDOTAPopup_PopupID_TROPHY_AWARDED = 50,
  CMsgDOTAPopup_PopupID_TROPHY_LEVEL_UP = 51,
  CMsgDOTAPopup_PopupID_ALL_HERO_CHALLENGE_PROGRESS = 52,
  CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL = 53,
  CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL_IN_PARTY = 54,
  CMsgDOTAPopup_PopupID_TARGET_ENGINE_MISMATCH = 55,
  CMsgDOTAPopup_PopupID_VAC_NOT_VERIFIED = 56,
  CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_STARTING = 57,
  CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_ENDING = 58,
  CMsgDOTAPopup_PopupID_LOBBY_FULL = 62,
  CMsgDOTAPopup_PopupID_EVENT_POINTS_EARNED = 63,
  CMsgDOTAPopup_PopupID_CUSTOM_GAME_INCORRECT_VERSION = 64,
  CMsgDOTAPopup_PopupID_LIMITED_USER_CHAT = 66,
  CMsgDOTAPopup_PopupID_EVENT_PREMIUM_POINTS_EARNED = 67,
  CMsgDOTAPopup_PopupID_LOBBY_MVP_AWARDED = 68,
  CMsgDOTAPopup_PopupID_LOW_BADGE_LEVEL_CHAT = 71,
  CMsgDOTAPopup_PopupID_LOW_WINS_CHAT = 72,
  CMsgDOTAPopup_PopupID_UNVERIFIED_USER_CHAT = 73,
  CMsgDOTAPopup_PopupID_PARTY_STARTED_FINDING_EVENT_MATCH = 74,
  CMsgDOTAPopup_PopupID_GENERIC_INFO = 69,
  CMsgDOTAPopup_PopupID_GENERIC_ERROR = 70
};
bool CMsgDOTAPopup_PopupID_IsValid(int value);
const CMsgDOTAPopup_PopupID CMsgDOTAPopup_PopupID_PopupID_MIN = CMsgDOTAPopup_PopupID_NONE;
const CMsgDOTAPopup_PopupID CMsgDOTAPopup_PopupID_PopupID_MAX = CMsgDOTAPopup_PopupID_PARTY_STARTED_FINDING_EVENT_MATCH;
const int CMsgDOTAPopup_PopupID_PopupID_ARRAYSIZE = CMsgDOTAPopup_PopupID_PopupID_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAPopup_PopupID_descriptor();
inline const ::std::string& CMsgDOTAPopup_PopupID_Name(CMsgDOTAPopup_PopupID value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAPopup_PopupID_descriptor(), value);
}
inline bool CMsgDOTAPopup_PopupID_Parse(
    const ::std::string& name, CMsgDOTAPopup_PopupID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAPopup_PopupID>(
    CMsgDOTAPopup_PopupID_descriptor(), name, value);
}
enum CMsgDOTAFriendRecruitsResponse_EResult {
  CMsgDOTAFriendRecruitsResponse_EResult_SUCCESS = 0,
  CMsgDOTAFriendRecruitsResponse_EResult_ERROR_UNSPECIFIED = 1
};
bool CMsgDOTAFriendRecruitsResponse_EResult_IsValid(int value);
const CMsgDOTAFriendRecruitsResponse_EResult CMsgDOTAFriendRecruitsResponse_EResult_EResult_MIN = CMsgDOTAFriendRecruitsResponse_EResult_SUCCESS;
const CMsgDOTAFriendRecruitsResponse_EResult CMsgDOTAFriendRecruitsResponse_EResult_EResult_MAX = CMsgDOTAFriendRecruitsResponse_EResult_ERROR_UNSPECIFIED;
const int CMsgDOTAFriendRecruitsResponse_EResult_EResult_ARRAYSIZE = CMsgDOTAFriendRecruitsResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAFriendRecruitsResponse_EResult_descriptor();
inline const ::std::string& CMsgDOTAFriendRecruitsResponse_EResult_Name(CMsgDOTAFriendRecruitsResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAFriendRecruitsResponse_EResult_descriptor(), value);
}
inline bool CMsgDOTAFriendRecruitsResponse_EResult_Parse(
    const ::std::string& name, CMsgDOTAFriendRecruitsResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAFriendRecruitsResponse_EResult>(
    CMsgDOTAFriendRecruitsResponse_EResult_descriptor(), name, value);
}
enum CMsgDOTAClaimEventActionResponse_ResultCode {
  CMsgDOTAClaimEventActionResponse_ResultCode_Success = 0,
  CMsgDOTAClaimEventActionResponse_ResultCode_InvalidEvent = 1,
  CMsgDOTAClaimEventActionResponse_ResultCode_EventNotActive = 2,
  CMsgDOTAClaimEventActionResponse_ResultCode_InvalidAction = 3,
  CMsgDOTAClaimEventActionResponse_ResultCode_ServerError = 4,
  CMsgDOTAClaimEventActionResponse_ResultCode_InsufficientPoints = 5,
  CMsgDOTAClaimEventActionResponse_ResultCode_InsufficentLevel = 6,
  CMsgDOTAClaimEventActionResponse_ResultCode_AlreadyClaimed = 7,
  CMsgDOTAClaimEventActionResponse_ResultCode_SDOLockFailure = 8,
  CMsgDOTAClaimEventActionResponse_ResultCode_SDOLoadFailure = 9,
  CMsgDOTAClaimEventActionResponse_ResultCode_EventNotOwned = 10,
  CMsgDOTAClaimEventActionResponse_ResultCode_Timeout = 11
};
bool CMsgDOTAClaimEventActionResponse_ResultCode_IsValid(int value);
const CMsgDOTAClaimEventActionResponse_ResultCode CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_MIN = CMsgDOTAClaimEventActionResponse_ResultCode_Success;
const CMsgDOTAClaimEventActionResponse_ResultCode CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_MAX = CMsgDOTAClaimEventActionResponse_ResultCode_Timeout;
const int CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_ARRAYSIZE = CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAClaimEventActionResponse_ResultCode_descriptor();
inline const ::std::string& CMsgDOTAClaimEventActionResponse_ResultCode_Name(CMsgDOTAClaimEventActionResponse_ResultCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAClaimEventActionResponse_ResultCode_descriptor(), value);
}
inline bool CMsgDOTAClaimEventActionResponse_ResultCode_Parse(
    const ::std::string& name, CMsgDOTAClaimEventActionResponse_ResultCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAClaimEventActionResponse_ResultCode>(
    CMsgDOTAClaimEventActionResponse_ResultCode_descriptor(), name, value);
}
enum CMsgGCNotificationsResponse_EResult {
  CMsgGCNotificationsResponse_EResult_SUCCESS = 0,
  CMsgGCNotificationsResponse_EResult_ERROR_UNSPECIFIED = 1
};
bool CMsgGCNotificationsResponse_EResult_IsValid(int value);
const CMsgGCNotificationsResponse_EResult CMsgGCNotificationsResponse_EResult_EResult_MIN = CMsgGCNotificationsResponse_EResult_SUCCESS;
const CMsgGCNotificationsResponse_EResult CMsgGCNotificationsResponse_EResult_EResult_MAX = CMsgGCNotificationsResponse_EResult_ERROR_UNSPECIFIED;
const int CMsgGCNotificationsResponse_EResult_EResult_ARRAYSIZE = CMsgGCNotificationsResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCNotificationsResponse_EResult_descriptor();
inline const ::std::string& CMsgGCNotificationsResponse_EResult_Name(CMsgGCNotificationsResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCNotificationsResponse_EResult_descriptor(), value);
}
inline bool CMsgGCNotificationsResponse_EResult_Parse(
    const ::std::string& name, CMsgGCNotificationsResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCNotificationsResponse_EResult>(
    CMsgGCNotificationsResponse_EResult_descriptor(), name, value);
}
enum CMsgGCPlayerInfoSubmitResponse_EResult {
  CMsgGCPlayerInfoSubmitResponse_EResult_SUCCESS = 0,
  CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_UNSPECIFIED = 1,
  CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_INFO_LOCKED = 2
};
bool CMsgGCPlayerInfoSubmitResponse_EResult_IsValid(int value);
const CMsgGCPlayerInfoSubmitResponse_EResult CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MIN = CMsgGCPlayerInfoSubmitResponse_EResult_SUCCESS;
const CMsgGCPlayerInfoSubmitResponse_EResult CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MAX = CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_INFO_LOCKED;
const int CMsgGCPlayerInfoSubmitResponse_EResult_EResult_ARRAYSIZE = CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgGCPlayerInfoSubmitResponse_EResult_descriptor();
inline const ::std::string& CMsgGCPlayerInfoSubmitResponse_EResult_Name(CMsgGCPlayerInfoSubmitResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgGCPlayerInfoSubmitResponse_EResult_descriptor(), value);
}
inline bool CMsgGCPlayerInfoSubmitResponse_EResult_Parse(
    const ::std::string& name, CMsgGCPlayerInfoSubmitResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgGCPlayerInfoSubmitResponse_EResult>(
    CMsgGCPlayerInfoSubmitResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCVoteForArcanaResponse_Result {
  CMsgClientToGCVoteForArcanaResponse_Result_SUCCEEDED = 0,
  CMsgClientToGCVoteForArcanaResponse_Result_VOTING_NOT_ENABLED_FOR_ROUND = 1,
  CMsgClientToGCVoteForArcanaResponse_Result_UNKNOWN_FAILURE = 2
};
bool CMsgClientToGCVoteForArcanaResponse_Result_IsValid(int value);
const CMsgClientToGCVoteForArcanaResponse_Result CMsgClientToGCVoteForArcanaResponse_Result_Result_MIN = CMsgClientToGCVoteForArcanaResponse_Result_SUCCEEDED;
const CMsgClientToGCVoteForArcanaResponse_Result CMsgClientToGCVoteForArcanaResponse_Result_Result_MAX = CMsgClientToGCVoteForArcanaResponse_Result_UNKNOWN_FAILURE;
const int CMsgClientToGCVoteForArcanaResponse_Result_Result_ARRAYSIZE = CMsgClientToGCVoteForArcanaResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCVoteForArcanaResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCVoteForArcanaResponse_Result_Name(CMsgClientToGCVoteForArcanaResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCVoteForArcanaResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCVoteForArcanaResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCVoteForArcanaResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCVoteForArcanaResponse_Result>(
    CMsgClientToGCVoteForArcanaResponse_Result_descriptor(), name, value);
}
enum CMsgArcanaVotes_VotingState {
  CMsgArcanaVotes_VotingState_FINISHED = 0,
  CMsgArcanaVotes_VotingState_IN_PROGRESS = 1,
  CMsgArcanaVotes_VotingState_IN_FUTURE = 2
};
bool CMsgArcanaVotes_VotingState_IsValid(int value);
const CMsgArcanaVotes_VotingState CMsgArcanaVotes_VotingState_VotingState_MIN = CMsgArcanaVotes_VotingState_FINISHED;
const CMsgArcanaVotes_VotingState CMsgArcanaVotes_VotingState_VotingState_MAX = CMsgArcanaVotes_VotingState_IN_FUTURE;
const int CMsgArcanaVotes_VotingState_VotingState_ARRAYSIZE = CMsgArcanaVotes_VotingState_VotingState_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgArcanaVotes_VotingState_descriptor();
inline const ::std::string& CMsgArcanaVotes_VotingState_Name(CMsgArcanaVotes_VotingState value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgArcanaVotes_VotingState_descriptor(), value);
}
inline bool CMsgArcanaVotes_VotingState_Parse(
    const ::std::string& name, CMsgArcanaVotes_VotingState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgArcanaVotes_VotingState>(
    CMsgArcanaVotes_VotingState_descriptor(), name, value);
}
enum CMsgDOTARedeemItemResponse_EResultCode {
  CMsgDOTARedeemItemResponse_EResultCode_k_Succeeded = 0,
  CMsgDOTARedeemItemResponse_EResultCode_k_Failed = 1
};
bool CMsgDOTARedeemItemResponse_EResultCode_IsValid(int value);
const CMsgDOTARedeemItemResponse_EResultCode CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MIN = CMsgDOTARedeemItemResponse_EResultCode_k_Succeeded;
const CMsgDOTARedeemItemResponse_EResultCode CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MAX = CMsgDOTARedeemItemResponse_EResultCode_k_Failed;
const int CMsgDOTARedeemItemResponse_EResultCode_EResultCode_ARRAYSIZE = CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTARedeemItemResponse_EResultCode_descriptor();
inline const ::std::string& CMsgDOTARedeemItemResponse_EResultCode_Name(CMsgDOTARedeemItemResponse_EResultCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTARedeemItemResponse_EResultCode_descriptor(), value);
}
inline bool CMsgDOTARedeemItemResponse_EResultCode_Parse(
    const ::std::string& name, CMsgDOTARedeemItemResponse_EResultCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTARedeemItemResponse_EResultCode>(
    CMsgDOTARedeemItemResponse_EResultCode_descriptor(), name, value);
}
enum CMsgPerfectWorldUserLookupResponse_EResultCode {
  CMsgPerfectWorldUserLookupResponse_EResultCode_SUCCESS_ACCOUNT_FOUND = 0,
  CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_UNKNOWN = 1,
  CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_USER_NAME_WRONG_FORMAT = 2,
  CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND = 3,
  CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND = 4
};
bool CMsgPerfectWorldUserLookupResponse_EResultCode_IsValid(int value);
const CMsgPerfectWorldUserLookupResponse_EResultCode CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MIN = CMsgPerfectWorldUserLookupResponse_EResultCode_SUCCESS_ACCOUNT_FOUND;
const CMsgPerfectWorldUserLookupResponse_EResultCode CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MAX = CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND;
const int CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_ARRAYSIZE = CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor();
inline const ::std::string& CMsgPerfectWorldUserLookupResponse_EResultCode_Name(CMsgPerfectWorldUserLookupResponse_EResultCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor(), value);
}
inline bool CMsgPerfectWorldUserLookupResponse_EResultCode_Parse(
    const ::std::string& name, CMsgPerfectWorldUserLookupResponse_EResultCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgPerfectWorldUserLookupResponse_EResultCode>(
    CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor(), name, value);
}
enum CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult {
  CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_SUCCESS = 0,
  CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_INVALID_MATCH = 1,
  CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_PREDICTIONS_ARE_CLOSED = 2,
  CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_OTHER_ERROR = 3
};
bool CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_IsValid(int value);
const CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MIN = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_SUCCESS;
const CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MAX = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_OTHER_ERROR;
const int CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_ARRAYSIZE = CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor();
inline const ::std::string& CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_Name(CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor(), value);
}
inline bool CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_Parse(
    const ::std::string& name, CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult>(
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor(), name, value);
}
enum CMsgClientToGCOpenPlayerCardPackResponse_Result {
  CMsgClientToGCOpenPlayerCardPackResponse_Result_SUCCESS = 1,
  CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_INTERNAL = 2,
  CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_TO_FIND_PACK = 3,
  CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_ITEM_NOT_CARD_PACK = 4,
  CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_CARD_CREATE = 5
};
bool CMsgClientToGCOpenPlayerCardPackResponse_Result_IsValid(int value);
const CMsgClientToGCOpenPlayerCardPackResponse_Result CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MIN = CMsgClientToGCOpenPlayerCardPackResponse_Result_SUCCESS;
const CMsgClientToGCOpenPlayerCardPackResponse_Result CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MAX = CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_CARD_CREATE;
const int CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_ARRAYSIZE = CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCOpenPlayerCardPackResponse_Result_Name(CMsgClientToGCOpenPlayerCardPackResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCOpenPlayerCardPackResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCOpenPlayerCardPackResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCOpenPlayerCardPackResponse_Result>(
    CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCRecyclePlayerCardResponse_Result {
  CMsgClientToGCRecyclePlayerCardResponse_Result_SUCCESS = 1,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_INTERNAL = 2,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_FAILED_TO_FIND_PLAYER_CARD = 3,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_ITEM_NOT_PLAYER_CARD = 4,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_FAILED_DUST_CARD_CREATE = 5,
  CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_CARD_LOCKED = 6
};
bool CMsgClientToGCRecyclePlayerCardResponse_Result_IsValid(int value);
const CMsgClientToGCRecyclePlayerCardResponse_Result CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MIN = CMsgClientToGCRecyclePlayerCardResponse_Result_SUCCESS;
const CMsgClientToGCRecyclePlayerCardResponse_Result CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MAX = CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_CARD_LOCKED;
const int CMsgClientToGCRecyclePlayerCardResponse_Result_Result_ARRAYSIZE = CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCRecyclePlayerCardResponse_Result_Name(CMsgClientToGCRecyclePlayerCardResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCRecyclePlayerCardResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCRecyclePlayerCardResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCRecyclePlayerCardResponse_Result>(
    CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCCreatePlayerCardPackResponse_Result {
  CMsgClientToGCCreatePlayerCardPackResponse_Result_SUCCESS = 1,
  CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_INTERNAL = 2,
  CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_INSUFFICIENT_DUST = 3,
  CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_ITEM_NOT_DUST_ITEM = 4,
  CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_FAILED_CARD_PACK_CREATE = 5
};
bool CMsgClientToGCCreatePlayerCardPackResponse_Result_IsValid(int value);
const CMsgClientToGCCreatePlayerCardPackResponse_Result CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MIN = CMsgClientToGCCreatePlayerCardPackResponse_Result_SUCCESS;
const CMsgClientToGCCreatePlayerCardPackResponse_Result CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MAX = CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_FAILED_CARD_PACK_CREATE;
const int CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_ARRAYSIZE = CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCCreatePlayerCardPackResponse_Result_Name(CMsgClientToGCCreatePlayerCardPackResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCCreatePlayerCardPackResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCCreatePlayerCardPackResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCCreatePlayerCardPackResponse_Result>(
    CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor(), name, value);
}
enum CMsgClientToGCGiveTipResponse_Result {
  CMsgClientToGCGiveTipResponse_Result_SUCCESS = 0,
  CMsgClientToGCGiveTipResponse_Result_ERROR_ALREADY_TIPPED = 1,
  CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_MATCH_ID = 2,
  CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_EVENT_ID = 3,
  CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_MATCH_TIME = 4,
  CMsgClientToGCGiveTipResponse_Result_ERROR_NOT_WINNER = 5,
  CMsgClientToGCGiveTipResponse_Result_ERROR_UNOWNED_EVENT = 6,
  CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_LOBBY_TYPE = 7,
  CMsgClientToGCGiveTipResponse_Result_ERROR_UNKNOWN = 8
};
bool CMsgClientToGCGiveTipResponse_Result_IsValid(int value);
const CMsgClientToGCGiveTipResponse_Result CMsgClientToGCGiveTipResponse_Result_Result_MIN = CMsgClientToGCGiveTipResponse_Result_SUCCESS;
const CMsgClientToGCGiveTipResponse_Result CMsgClientToGCGiveTipResponse_Result_Result_MAX = CMsgClientToGCGiveTipResponse_Result_ERROR_UNKNOWN;
const int CMsgClientToGCGiveTipResponse_Result_Result_ARRAYSIZE = CMsgClientToGCGiveTipResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgClientToGCGiveTipResponse_Result_descriptor();
inline const ::std::string& CMsgClientToGCGiveTipResponse_Result_Name(CMsgClientToGCGiveTipResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgClientToGCGiveTipResponse_Result_descriptor(), value);
}
inline bool CMsgClientToGCGiveTipResponse_Result_Parse(
    const ::std::string& name, CMsgClientToGCGiveTipResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgClientToGCGiveTipResponse_Result>(
    CMsgClientToGCGiveTipResponse_Result_descriptor(), name, value);
}
enum CMsgDOTAAnchorPhoneNumberResponse_Result {
  CMsgDOTAAnchorPhoneNumberResponse_Result_SUCCESS = 0,
  CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_UNKNOWN = 1,
  CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_NO_STEAM_PHONE = 2,
  CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_ALREADY_IN_USE = 3,
  CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_COOLDOWN_ACTIVE = 4
};
bool CMsgDOTAAnchorPhoneNumberResponse_Result_IsValid(int value);
const CMsgDOTAAnchorPhoneNumberResponse_Result CMsgDOTAAnchorPhoneNumberResponse_Result_Result_MIN = CMsgDOTAAnchorPhoneNumberResponse_Result_SUCCESS;
const CMsgDOTAAnchorPhoneNumberResponse_Result CMsgDOTAAnchorPhoneNumberResponse_Result_Result_MAX = CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_COOLDOWN_ACTIVE;
const int CMsgDOTAAnchorPhoneNumberResponse_Result_Result_ARRAYSIZE = CMsgDOTAAnchorPhoneNumberResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAAnchorPhoneNumberResponse_Result_descriptor();
inline const ::std::string& CMsgDOTAAnchorPhoneNumberResponse_Result_Name(CMsgDOTAAnchorPhoneNumberResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAAnchorPhoneNumberResponse_Result_descriptor(), value);
}
inline bool CMsgDOTAAnchorPhoneNumberResponse_Result_Parse(
    const ::std::string& name, CMsgDOTAAnchorPhoneNumberResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAAnchorPhoneNumberResponse_Result>(
    CMsgDOTAAnchorPhoneNumberResponse_Result_descriptor(), name, value);
}
enum CMsgDOTAUnanchorPhoneNumberResponse_Result {
  CMsgDOTAUnanchorPhoneNumberResponse_Result_SUCCESS = 0,
  CMsgDOTAUnanchorPhoneNumberResponse_Result_ERROR_UNKNOWN = 1
};
bool CMsgDOTAUnanchorPhoneNumberResponse_Result_IsValid(int value);
const CMsgDOTAUnanchorPhoneNumberResponse_Result CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_MIN = CMsgDOTAUnanchorPhoneNumberResponse_Result_SUCCESS;
const CMsgDOTAUnanchorPhoneNumberResponse_Result CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_MAX = CMsgDOTAUnanchorPhoneNumberResponse_Result_ERROR_UNKNOWN;
const int CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_ARRAYSIZE = CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_MAX + 1;

const ::google::protobuf::EnumDescriptor* CMsgDOTAUnanchorPhoneNumberResponse_Result_descriptor();
inline const ::std::string& CMsgDOTAUnanchorPhoneNumberResponse_Result_Name(CMsgDOTAUnanchorPhoneNumberResponse_Result value) {
  return ::google::protobuf::internal::NameOfEnum(
    CMsgDOTAUnanchorPhoneNumberResponse_Result_descriptor(), value);
}
inline bool CMsgDOTAUnanchorPhoneNumberResponse_Result_Parse(
    const ::std::string& name, CMsgDOTAUnanchorPhoneNumberResponse_Result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CMsgDOTAUnanchorPhoneNumberResponse_Result>(
    CMsgDOTAUnanchorPhoneNumberResponse_Result_descriptor(), name, value);
}
enum DOTA_WatchReplayType {
  DOTA_WATCH_REPLAY_NORMAL = 0,
  DOTA_WATCH_REPLAY_HIGHLIGHTS = 1
};
bool DOTA_WatchReplayType_IsValid(int value);
const DOTA_WatchReplayType DOTA_WatchReplayType_MIN = DOTA_WATCH_REPLAY_NORMAL;
const DOTA_WatchReplayType DOTA_WatchReplayType_MAX = DOTA_WATCH_REPLAY_HIGHLIGHTS;
const int DOTA_WatchReplayType_ARRAYSIZE = DOTA_WatchReplayType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DOTA_WatchReplayType_descriptor();
inline const ::std::string& DOTA_WatchReplayType_Name(DOTA_WatchReplayType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DOTA_WatchReplayType_descriptor(), value);
}
inline bool DOTA_WatchReplayType_Parse(
    const ::std::string& name, DOTA_WatchReplayType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DOTA_WatchReplayType>(
    DOTA_WatchReplayType_descriptor(), name, value);
}
enum EItemEditorReservationResult {
  k_EItemEditorReservationResult_OK = 1,
  k_EItemEditorReservationResult_AlreadyExists = 2,
  k_EItemEditorReservationResult_Reserved = 3,
  k_EItemEditorReservationResult_TimedOut = 4
};
bool EItemEditorReservationResult_IsValid(int value);
const EItemEditorReservationResult EItemEditorReservationResult_MIN = k_EItemEditorReservationResult_OK;
const EItemEditorReservationResult EItemEditorReservationResult_MAX = k_EItemEditorReservationResult_TimedOut;
const int EItemEditorReservationResult_ARRAYSIZE = EItemEditorReservationResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* EItemEditorReservationResult_descriptor();
inline const ::std::string& EItemEditorReservationResult_Name(EItemEditorReservationResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    EItemEditorReservationResult_descriptor(), value);
}
inline bool EItemEditorReservationResult_Parse(
    const ::std::string& name, EItemEditorReservationResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EItemEditorReservationResult>(
    EItemEditorReservationResult_descriptor(), name, value);
}
enum EFeaturedHeroTextField {
  k_EFeaturedHeroTextField_NewHero = 0,
  k_EFeaturedHeroTextField_NewItem = 1,
  k_EFeaturedHeroTextField_ItemSetDescription = 2,
  k_EFeaturedHeroTextField_ItemDescription = 3,
  k_EFeaturedHeroTextField_Hype = 4,
  k_EFeaturedHeroTextField_HeroWinLoss = 5,
  k_EFeaturedHeroTextField_FrequentlyPlayedHero = 6,
  k_EFeaturedHeroTextField_FeaturedItem = 7,
  k_EFeaturedHeroTextField_PopularItem = 8,
  k_EFeaturedHeroTextField_SaleItem = 9,
  k_EFeaturedHeroTextField_SaleDiscount = 10,
  k_EFeaturedHeroTextField_Container = 11
};
bool EFeaturedHeroTextField_IsValid(int value);
const EFeaturedHeroTextField EFeaturedHeroTextField_MIN = k_EFeaturedHeroTextField_NewHero;
const EFeaturedHeroTextField EFeaturedHeroTextField_MAX = k_EFeaturedHeroTextField_Container;
const int EFeaturedHeroTextField_ARRAYSIZE = EFeaturedHeroTextField_MAX + 1;

const ::google::protobuf::EnumDescriptor* EFeaturedHeroTextField_descriptor();
inline const ::std::string& EFeaturedHeroTextField_Name(EFeaturedHeroTextField value) {
  return ::google::protobuf::internal::NameOfEnum(
    EFeaturedHeroTextField_descriptor(), value);
}
inline bool EFeaturedHeroTextField_Parse(
    const ::std::string& name, EFeaturedHeroTextField* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EFeaturedHeroTextField>(
    EFeaturedHeroTextField_descriptor(), name, value);
}
enum EFeaturedHeroDataType {
  k_EFeaturedHeroDataType_HeroID = 0,
  k_EFeaturedHeroDataType_ItemDef = 1,
  k_EFeaturedHeroDataType_HypeString = 2,
  k_EFeaturedHeroDataType_StartTimestamp = 3,
  k_EFeaturedHeroDataType_ExpireTimestamp = 4,
  k_EFeaturedHeroDataType_HeroWins = 5,
  k_EFeaturedHeroDataType_HeroLosses = 6,
  k_EFeaturedHeroDataType_SaleDiscount = 7,
  k_EFeaturedHeroDataType_ContainerItemDef = 8
};
bool EFeaturedHeroDataType_IsValid(int value);
const EFeaturedHeroDataType EFeaturedHeroDataType_MIN = k_EFeaturedHeroDataType_HeroID;
const EFeaturedHeroDataType EFeaturedHeroDataType_MAX = k_EFeaturedHeroDataType_ContainerItemDef;
const int EFeaturedHeroDataType_ARRAYSIZE = EFeaturedHeroDataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EFeaturedHeroDataType_descriptor();
inline const ::std::string& EFeaturedHeroDataType_Name(EFeaturedHeroDataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EFeaturedHeroDataType_descriptor(), value);
}
inline bool EFeaturedHeroDataType_Parse(
    const ::std::string& name, EFeaturedHeroDataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EFeaturedHeroDataType>(
    EFeaturedHeroDataType_descriptor(), name, value);
}
enum EWeekendTourneyRichPresenceEvent {
  k_EWeekendTourneyRichPresenceEvent_None = 0,
  k_EWeekendTourneyRichPresenceEvent_StartedMatch = 1,
  k_EWeekendTourneyRichPresenceEvent_WonMatch = 2,
  k_EWeekendTourneyRichPresenceEvent_Eliminated = 3
};
bool EWeekendTourneyRichPresenceEvent_IsValid(int value);
const EWeekendTourneyRichPresenceEvent EWeekendTourneyRichPresenceEvent_MIN = k_EWeekendTourneyRichPresenceEvent_None;
const EWeekendTourneyRichPresenceEvent EWeekendTourneyRichPresenceEvent_MAX = k_EWeekendTourneyRichPresenceEvent_Eliminated;
const int EWeekendTourneyRichPresenceEvent_ARRAYSIZE = EWeekendTourneyRichPresenceEvent_MAX + 1;

const ::google::protobuf::EnumDescriptor* EWeekendTourneyRichPresenceEvent_descriptor();
inline const ::std::string& EWeekendTourneyRichPresenceEvent_Name(EWeekendTourneyRichPresenceEvent value) {
  return ::google::protobuf::internal::NameOfEnum(
    EWeekendTourneyRichPresenceEvent_descriptor(), value);
}
inline bool EWeekendTourneyRichPresenceEvent_Parse(
    const ::std::string& name, EWeekendTourneyRichPresenceEvent* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EWeekendTourneyRichPresenceEvent>(
    EWeekendTourneyRichPresenceEvent_descriptor(), name, value);
}
enum EDOTAEventInviteType {
  k_EDOTAEventInviteType_Direct = 0,
  k_EDOTAEventInviteType_OpenQualifier = 1,
  k_EDOTAEventInviteType_ChampionsCup = 2
};
bool EDOTAEventInviteType_IsValid(int value);
const EDOTAEventInviteType EDOTAEventInviteType_MIN = k_EDOTAEventInviteType_Direct;
const EDOTAEventInviteType EDOTAEventInviteType_MAX = k_EDOTAEventInviteType_ChampionsCup;
const int EDOTAEventInviteType_ARRAYSIZE = EDOTAEventInviteType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDOTAEventInviteType_descriptor();
inline const ::std::string& EDOTAEventInviteType_Name(EDOTAEventInviteType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDOTAEventInviteType_descriptor(), value);
}
inline bool EDOTAEventInviteType_Parse(
    const ::std::string& name, EDOTAEventInviteType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDOTAEventInviteType>(
    EDOTAEventInviteType_descriptor(), name, value);
}
enum EDOTATriviaQuestionCategory {
  k_EDOTATriviaQuestionCategory_AbilityIcon = 0,
  k_EDOTATriviaQuestionCategory_AbilityCooldown = 1,
  k_EDOTATriviaQuestionCategory_HeroAttributes = 2,
  k_EDOTATriviaQuestionCategory_HeroMovementSpeed = 3,
  k_EDOTATriviaQuestionCategory_TalentTree = 4,
  k_EDOTATriviaQuestionCategory_HeroStats = 5,
  k_EDOTATriviaQuestionCategory_ItemPrice = 6,
  k_EDOTATriviaQuestionCategory_AbilitySound = 7,
  k_EDOTATriviaQuestionCategory_InvokerSpells = 8,
  k_EDOTATriviaQuestionCategory_AbilityManaCost = 9,
  k_EDOTATriviaQuestionCategory_HeroAttackSound = 10,
  k_EDOTATriviaQuestionCategory_AbilityName = 11,
  k_EDOTATriviaQuestionCategory_ItemComponents = 12,
  k_EDOTATriviaQuestionCategory_ItemLore = 13
};
bool EDOTATriviaQuestionCategory_IsValid(int value);
const EDOTATriviaQuestionCategory EDOTATriviaQuestionCategory_MIN = k_EDOTATriviaQuestionCategory_AbilityIcon;
const EDOTATriviaQuestionCategory EDOTATriviaQuestionCategory_MAX = k_EDOTATriviaQuestionCategory_ItemLore;
const int EDOTATriviaQuestionCategory_ARRAYSIZE = EDOTATriviaQuestionCategory_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDOTATriviaQuestionCategory_descriptor();
inline const ::std::string& EDOTATriviaQuestionCategory_Name(EDOTATriviaQuestionCategory value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDOTATriviaQuestionCategory_descriptor(), value);
}
inline bool EDOTATriviaQuestionCategory_Parse(
    const ::std::string& name, EDOTATriviaQuestionCategory* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDOTATriviaQuestionCategory>(
    EDOTATriviaQuestionCategory_descriptor(), name, value);
}
enum EDOTATriviaAnswerResult {
  k_EDOTATriviaAnswerResult_Success = 0,
  k_EDOTATriviaAnswerResult_InvalidQuestion = 1,
  k_EDOTATriviaAnswerResult_InvalidAnswer = 2,
  k_EDOTATriviaAnswerResult_QuestionLocked = 3,
  k_EDOTATriviaAnswerResult_AlreadyAnswered = 4,
  k_EDOTATriviaAnswerResult_TriviaDisabled = 5
};
bool EDOTATriviaAnswerResult_IsValid(int value);
const EDOTATriviaAnswerResult EDOTATriviaAnswerResult_MIN = k_EDOTATriviaAnswerResult_Success;
const EDOTATriviaAnswerResult EDOTATriviaAnswerResult_MAX = k_EDOTATriviaAnswerResult_TriviaDisabled;
const int EDOTATriviaAnswerResult_ARRAYSIZE = EDOTATriviaAnswerResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* EDOTATriviaAnswerResult_descriptor();
inline const ::std::string& EDOTATriviaAnswerResult_Name(EDOTATriviaAnswerResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    EDOTATriviaAnswerResult_descriptor(), value);
}
inline bool EDOTATriviaAnswerResult_Parse(
    const ::std::string& name, EDOTATriviaAnswerResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EDOTATriviaAnswerResult>(
    EDOTATriviaAnswerResult_descriptor(), name, value);
}
// ===================================================================

class CMsgClientSuspended : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientSuspended) */ {
 public:
  CMsgClientSuspended();
  virtual ~CMsgClientSuspended();

  CMsgClientSuspended(const CMsgClientSuspended& from);

  inline CMsgClientSuspended& operator=(const CMsgClientSuspended& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientSuspended& default_instance();

  static inline const CMsgClientSuspended* internal_default_instance() {
    return reinterpret_cast<const CMsgClientSuspended*>(
               &_CMsgClientSuspended_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMsgClientSuspended* other);

  // implements Message ----------------------------------------------

  inline CMsgClientSuspended* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientSuspended* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientSuspended& from);
  void MergeFrom(const CMsgClientSuspended& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientSuspended* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 time_end = 1;
  bool has_time_end() const;
  void clear_time_end();
  static const int kTimeEndFieldNumber = 1;
  ::google::protobuf::uint32 time_end() const;
  void set_time_end(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientSuspended)
 private:
  void set_has_time_end();
  void clear_has_time_end();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 time_end_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgRequestInternationalTicket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRequestInternationalTicket) */ {
 public:
  CMsgRequestInternationalTicket();
  virtual ~CMsgRequestInternationalTicket();

  CMsgRequestInternationalTicket(const CMsgRequestInternationalTicket& from);

  inline CMsgRequestInternationalTicket& operator=(const CMsgRequestInternationalTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestInternationalTicket& default_instance();

  static inline const CMsgRequestInternationalTicket* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestInternationalTicket*>(
               &_CMsgRequestInternationalTicket_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMsgRequestInternationalTicket* other);

  // implements Message ----------------------------------------------

  inline CMsgRequestInternationalTicket* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgRequestInternationalTicket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgRequestInternationalTicket& from);
  void MergeFrom(const CMsgRequestInternationalTicket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgRequestInternationalTicket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRequestInternationalTicket)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgBalancedShuffleLobby : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgBalancedShuffleLobby) */ {
 public:
  CMsgBalancedShuffleLobby();
  virtual ~CMsgBalancedShuffleLobby();

  CMsgBalancedShuffleLobby(const CMsgBalancedShuffleLobby& from);

  inline CMsgBalancedShuffleLobby& operator=(const CMsgBalancedShuffleLobby& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBalancedShuffleLobby& default_instance();

  static inline const CMsgBalancedShuffleLobby* internal_default_instance() {
    return reinterpret_cast<const CMsgBalancedShuffleLobby*>(
               &_CMsgBalancedShuffleLobby_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMsgBalancedShuffleLobby* other);

  // implements Message ----------------------------------------------

  inline CMsgBalancedShuffleLobby* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgBalancedShuffleLobby* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgBalancedShuffleLobby& from);
  void MergeFrom(const CMsgBalancedShuffleLobby& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgBalancedShuffleLobby* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgBalancedShuffleLobby)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgInitialQuestionnaireResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgInitialQuestionnaireResponse) */ {
 public:
  CMsgInitialQuestionnaireResponse();
  virtual ~CMsgInitialQuestionnaireResponse();

  CMsgInitialQuestionnaireResponse(const CMsgInitialQuestionnaireResponse& from);

  inline CMsgInitialQuestionnaireResponse& operator=(const CMsgInitialQuestionnaireResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgInitialQuestionnaireResponse& default_instance();

  static inline const CMsgInitialQuestionnaireResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgInitialQuestionnaireResponse*>(
               &_CMsgInitialQuestionnaireResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMsgInitialQuestionnaireResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgInitialQuestionnaireResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgInitialQuestionnaireResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgInitialQuestionnaireResponse& from);
  void MergeFrom(const CMsgInitialQuestionnaireResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgInitialQuestionnaireResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 initial_skill = 1;
  bool has_initial_skill() const;
  void clear_initial_skill();
  static const int kInitialSkillFieldNumber = 1;
  ::google::protobuf::uint32 initial_skill() const;
  void set_initial_skill(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgInitialQuestionnaireResponse)
 private:
  void set_has_initial_skill();
  void clear_has_initial_skill();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 initial_skill_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAPlayerMatchHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPlayerMatchHistory) */ {
 public:
  CMsgDOTAPlayerMatchHistory();
  virtual ~CMsgDOTAPlayerMatchHistory();

  CMsgDOTAPlayerMatchHistory(const CMsgDOTAPlayerMatchHistory& from);

  inline CMsgDOTAPlayerMatchHistory& operator=(const CMsgDOTAPlayerMatchHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPlayerMatchHistory& default_instance();

  static inline const CMsgDOTAPlayerMatchHistory* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPlayerMatchHistory*>(
               &_CMsgDOTAPlayerMatchHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CMsgDOTAPlayerMatchHistory* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAPlayerMatchHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAPlayerMatchHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAPlayerMatchHistory& from);
  void MergeFrom(const CMsgDOTAPlayerMatchHistory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAPlayerMatchHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 match_ids = 1;
  int match_ids_size() const;
  void clear_match_ids();
  static const int kMatchIdsFieldNumber = 1;
  ::google::protobuf::uint64 match_ids(int index) const;
  void set_match_ids(int index, ::google::protobuf::uint64 value);
  void add_match_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      match_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_match_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPlayerMatchHistory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > match_ids_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchHistoryFilter : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAMatchHistoryFilter) */ {
 public:
  CMsgDOTAMatchHistoryFilter();
  virtual ~CMsgDOTAMatchHistoryFilter();

  CMsgDOTAMatchHistoryFilter(const CMsgDOTAMatchHistoryFilter& from);

  inline CMsgDOTAMatchHistoryFilter& operator=(const CMsgDOTAMatchHistoryFilter& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchHistoryFilter& default_instance();

  static inline const CMsgDOTAMatchHistoryFilter* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAMatchHistoryFilter*>(
               &_CMsgDOTAMatchHistoryFilter_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CMsgDOTAMatchHistoryFilter* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAMatchHistoryFilter* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAMatchHistoryFilter* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAMatchHistoryFilter& from);
  void MergeFrom(const CMsgDOTAMatchHistoryFilter& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAMatchHistoryFilter* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 match_ids = 1;
  int match_ids_size() const;
  void clear_match_ids();
  static const int kMatchIdsFieldNumber = 1;
  ::google::protobuf::uint64 match_ids(int index) const;
  void set_match_ids(int index, ::google::protobuf::uint64 value);
  void add_match_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      match_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_match_ids();

  // optional uint64 newest_match_id_at_last_query = 2;
  bool has_newest_match_id_at_last_query() const;
  void clear_newest_match_id_at_last_query();
  static const int kNewestMatchIdAtLastQueryFieldNumber = 2;
  ::google::protobuf::uint64 newest_match_id_at_last_query() const;
  void set_newest_match_id_at_last_query(::google::protobuf::uint64 value);

  // optional uint32 time_last_query = 3;
  bool has_time_last_query() const;
  void clear_time_last_query();
  static const int kTimeLastQueryFieldNumber = 3;
  ::google::protobuf::uint32 time_last_query() const;
  void set_time_last_query(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAMatchHistoryFilter)
 private:
  void set_has_newest_match_id_at_last_query();
  void clear_has_newest_match_id_at_last_query();
  void set_has_time_last_query();
  void clear_has_time_last_query();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > match_ids_;
  ::google::protobuf::uint64 newest_match_id_at_last_query_;
  ::google::protobuf::uint32 time_last_query_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTARequestMatches : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestMatches) */ {
 public:
  CMsgDOTARequestMatches();
  virtual ~CMsgDOTARequestMatches();

  CMsgDOTARequestMatches(const CMsgDOTARequestMatches& from);

  inline CMsgDOTARequestMatches& operator=(const CMsgDOTARequestMatches& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestMatches& default_instance();

  static inline const CMsgDOTARequestMatches* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestMatches*>(
               &_CMsgDOTARequestMatches_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CMsgDOTARequestMatches* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestMatches* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTARequestMatches* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTARequestMatches& from);
  void MergeFrom(const CMsgDOTARequestMatches& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTARequestMatches* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARequestMatches_SkillLevel SkillLevel;
  static const SkillLevel Any =
    CMsgDOTARequestMatches_SkillLevel_Any;
  static const SkillLevel Normal =
    CMsgDOTARequestMatches_SkillLevel_Normal;
  static const SkillLevel High =
    CMsgDOTARequestMatches_SkillLevel_High;
  static const SkillLevel VeryHigh =
    CMsgDOTARequestMatches_SkillLevel_VeryHigh;
  static inline bool SkillLevel_IsValid(int value) {
    return CMsgDOTARequestMatches_SkillLevel_IsValid(value);
  }
  static const SkillLevel SkillLevel_MIN =
    CMsgDOTARequestMatches_SkillLevel_SkillLevel_MIN;
  static const SkillLevel SkillLevel_MAX =
    CMsgDOTARequestMatches_SkillLevel_SkillLevel_MAX;
  static const int SkillLevel_ARRAYSIZE =
    CMsgDOTARequestMatches_SkillLevel_SkillLevel_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SkillLevel_descriptor() {
    return CMsgDOTARequestMatches_SkillLevel_descriptor();
  }
  static inline const ::std::string& SkillLevel_Name(SkillLevel value) {
    return CMsgDOTARequestMatches_SkillLevel_Name(value);
  }
  static inline bool SkillLevel_Parse(const ::std::string& name,
      SkillLevel* value) {
    return CMsgDOTARequestMatches_SkillLevel_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 game_mode = 3;
  bool has_game_mode() const;
  void clear_game_mode();
  static const int kGameModeFieldNumber = 3;
  ::google::protobuf::uint32 game_mode() const;
  void set_game_mode(::google::protobuf::uint32 value);

  // optional fixed32 date_min = 6;
  bool has_date_min() const;
  void clear_date_min();
  static const int kDateMinFieldNumber = 6;
  ::google::protobuf::uint32 date_min() const;
  void set_date_min(::google::protobuf::uint32 value);

  // optional fixed32 date_max = 7;
  bool has_date_max() const;
  void clear_date_max();
  static const int kDateMaxFieldNumber = 7;
  ::google::protobuf::uint32 date_max() const;
  void set_date_max(::google::protobuf::uint32 value);

  // optional uint64 start_at_match_id = 11;
  bool has_start_at_match_id() const;
  void clear_start_at_match_id();
  static const int kStartAtMatchIdFieldNumber = 11;
  ::google::protobuf::uint64 start_at_match_id() const;
  void set_start_at_match_id(::google::protobuf::uint64 value);

  // optional uint32 matches_requested = 10;
  bool has_matches_requested() const;
  void clear_matches_requested();
  static const int kMatchesRequestedFieldNumber = 10;
  ::google::protobuf::uint32 matches_requested() const;
  void set_matches_requested(::google::protobuf::uint32 value);

  // optional fixed32 min_players = 12;
  bool has_min_players() const;
  void clear_min_players();
  static const int kMinPlayersFieldNumber = 12;
  ::google::protobuf::uint32 min_players() const;
  void set_min_players(::google::protobuf::uint32 value);

  // optional uint32 request_id = 13;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 13;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // optional bool tournament_games_only = 14;
  bool has_tournament_games_only() const;
  void clear_tournament_games_only();
  static const int kTournamentGamesOnlyFieldNumber = 14;
  bool tournament_games_only() const;
  void set_tournament_games_only(bool value);

  // optional uint32 account_id = 15;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 15;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 league_id = 16;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 16;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional .proto.dota.CMsgDOTARequestMatches.SkillLevel skill = 17 [default = Any];
  bool has_skill() const;
  void clear_skill();
  static const int kSkillFieldNumber = 17;
  ::proto::dota::CMsgDOTARequestMatches_SkillLevel skill() const;
  void set_skill(::proto::dota::CMsgDOTARequestMatches_SkillLevel value);

  // optional uint32 team_id = 18;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 18;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // optional uint64 custom_game_id = 20;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 20;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestMatches)
 private:
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_game_mode();
  void clear_has_game_mode();
  void set_has_date_min();
  void clear_has_date_min();
  void set_has_date_max();
  void clear_has_date_max();
  void set_has_matches_requested();
  void clear_has_matches_requested();
  void set_has_start_at_match_id();
  void clear_has_start_at_match_id();
  void set_has_min_players();
  void clear_has_min_players();
  void set_has_request_id();
  void clear_has_request_id();
  void set_has_tournament_games_only();
  void clear_has_tournament_games_only();
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_league_id();
  void clear_has_league_id();
  void set_has_skill();
  void clear_has_skill();
  void set_has_team_id();
  void clear_has_team_id();
  void set_has_custom_game_id();
  void clear_has_custom_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 game_mode_;
  ::google::protobuf::uint32 date_min_;
  ::google::protobuf::uint32 date_max_;
  ::google::protobuf::uint64 start_at_match_id_;
  ::google::protobuf::uint32 matches_requested_;
  ::google::protobuf::uint32 min_players_;
  ::google::protobuf::uint32 request_id_;
  bool tournament_games_only_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 league_id_;
  int skill_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint64 custom_game_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTARequestMatchesResponse_Series : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestMatchesResponse.Series) */ {
 public:
  CMsgDOTARequestMatchesResponse_Series();
  virtual ~CMsgDOTARequestMatchesResponse_Series();

  CMsgDOTARequestMatchesResponse_Series(const CMsgDOTARequestMatchesResponse_Series& from);

  inline CMsgDOTARequestMatchesResponse_Series& operator=(const CMsgDOTARequestMatchesResponse_Series& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestMatchesResponse_Series& default_instance();

  static inline const CMsgDOTARequestMatchesResponse_Series* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestMatchesResponse_Series*>(
               &_CMsgDOTARequestMatchesResponse_Series_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CMsgDOTARequestMatchesResponse_Series* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestMatchesResponse_Series* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTARequestMatchesResponse_Series* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTARequestMatchesResponse_Series& from);
  void MergeFrom(const CMsgDOTARequestMatchesResponse_Series& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTARequestMatchesResponse_Series* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAMatch matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  const ::proto::dota::CMsgDOTAMatch& matches(int index) const;
  ::proto::dota::CMsgDOTAMatch* mutable_matches(int index);
  ::proto::dota::CMsgDOTAMatch* add_matches();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
      mutable_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
      matches() const;

  // optional uint32 series_id = 2;
  bool has_series_id() const;
  void clear_series_id();
  static const int kSeriesIdFieldNumber = 2;
  ::google::protobuf::uint32 series_id() const;
  void set_series_id(::google::protobuf::uint32 value);

  // optional uint32 series_type = 3;
  bool has_series_type() const;
  void clear_series_type();
  static const int kSeriesTypeFieldNumber = 3;
  ::google::protobuf::uint32 series_type() const;
  void set_series_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestMatchesResponse.Series)
 private:
  void set_has_series_id();
  void clear_has_series_id();
  void set_has_series_type();
  void clear_has_series_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch > matches_;
  ::google::protobuf::uint32 series_id_;
  ::google::protobuf::uint32 series_type_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTARequestMatchesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestMatchesResponse) */ {
 public:
  CMsgDOTARequestMatchesResponse();
  virtual ~CMsgDOTARequestMatchesResponse();

  CMsgDOTARequestMatchesResponse(const CMsgDOTARequestMatchesResponse& from);

  inline CMsgDOTARequestMatchesResponse& operator=(const CMsgDOTARequestMatchesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestMatchesResponse& default_instance();

  static inline const CMsgDOTARequestMatchesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestMatchesResponse*>(
               &_CMsgDOTARequestMatchesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CMsgDOTARequestMatchesResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestMatchesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTARequestMatchesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTARequestMatchesResponse& from);
  void MergeFrom(const CMsgDOTARequestMatchesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTARequestMatchesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARequestMatchesResponse_Series Series;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAMatch matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  const ::proto::dota::CMsgDOTAMatch& matches(int index) const;
  ::proto::dota::CMsgDOTAMatch* mutable_matches(int index);
  ::proto::dota::CMsgDOTAMatch* add_matches();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
      mutable_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
      matches() const;

  // repeated .proto.dota.CMsgDOTARequestMatchesResponse.Series series = 2;
  int series_size() const;
  void clear_series();
  static const int kSeriesFieldNumber = 2;
  const ::proto::dota::CMsgDOTARequestMatchesResponse_Series& series(int index) const;
  ::proto::dota::CMsgDOTARequestMatchesResponse_Series* mutable_series(int index);
  ::proto::dota::CMsgDOTARequestMatchesResponse_Series* add_series();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestMatchesResponse_Series >*
      mutable_series();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestMatchesResponse_Series >&
      series() const;

  // optional uint32 request_id = 3;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 3;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // optional uint32 total_results = 4;
  bool has_total_results() const;
  void clear_total_results();
  static const int kTotalResultsFieldNumber = 4;
  ::google::protobuf::uint32 total_results() const;
  void set_total_results(::google::protobuf::uint32 value);

  // optional uint32 results_remaining = 5;
  bool has_results_remaining() const;
  void clear_results_remaining();
  static const int kResultsRemainingFieldNumber = 5;
  ::google::protobuf::uint32 results_remaining() const;
  void set_results_remaining(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestMatchesResponse)
 private:
  void set_has_request_id();
  void clear_has_request_id();
  void set_has_total_results();
  void clear_has_total_results();
  void set_has_results_remaining();
  void clear_has_results_remaining();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch > matches_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestMatchesResponse_Series > series_;
  ::google::protobuf::uint32 request_id_;
  ::google::protobuf::uint32 total_results_;
  ::google::protobuf::uint32 results_remaining_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAPopup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPopup) */ {
 public:
  CMsgDOTAPopup();
  virtual ~CMsgDOTAPopup();

  CMsgDOTAPopup(const CMsgDOTAPopup& from);

  inline CMsgDOTAPopup& operator=(const CMsgDOTAPopup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPopup& default_instance();

  static inline const CMsgDOTAPopup* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPopup*>(
               &_CMsgDOTAPopup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CMsgDOTAPopup* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAPopup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAPopup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAPopup& from);
  void MergeFrom(const CMsgDOTAPopup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAPopup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAPopup_PopupID PopupID;
  static const PopupID NONE =
    CMsgDOTAPopup_PopupID_NONE;
  static const PopupID KICKED_FROM_LOBBY =
    CMsgDOTAPopup_PopupID_KICKED_FROM_LOBBY;
  static const PopupID KICKED_FROM_PARTY =
    CMsgDOTAPopup_PopupID_KICKED_FROM_PARTY;
  static const PopupID KICKED_FROM_TEAM =
    CMsgDOTAPopup_PopupID_KICKED_FROM_TEAM;
  static const PopupID TEAM_WAS_DISBANDED =
    CMsgDOTAPopup_PopupID_TEAM_WAS_DISBANDED;
  static const PopupID TEAM_MATCHMAKE_ALREADY_MATCH =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_MATCH;
  static const PopupID TEAM_MATCHMAKE_ALREADY_FINDING =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_FINDING;
  static const PopupID TEAM_MATCHMAKE_FULL =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FULL;
  static const PopupID TEAM_MATCHMAKE_FAIL_ADD =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD;
  static const PopupID TEAM_MATCHMAKE_FAIL_ADD_CURRENT =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_ADD_CURRENT;
  static const PopupID TEAM_MATCHMAKE_FAILED_TEAM_MEMBER =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAILED_TEAM_MEMBER;
  static const PopupID TEAM_MATCHMAKE_ALREADY_GAME =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_ALREADY_GAME;
  static const PopupID TEAM_MATCHMAKE_FAIL_GET_PARTY =
    CMsgDOTAPopup_PopupID_TEAM_MATCHMAKE_FAIL_GET_PARTY;
  static const PopupID MATCHMAKING_DISABLED =
    CMsgDOTAPopup_PopupID_MATCHMAKING_DISABLED;
  static const PopupID INVITE_DENIED =
    CMsgDOTAPopup_PopupID_INVITE_DENIED;
  static const PopupID PARTY_FULL =
    CMsgDOTAPopup_PopupID_PARTY_FULL;
  static const PopupID MADE_ADMIN =
    CMsgDOTAPopup_PopupID_MADE_ADMIN;
  static const PopupID NEED_TO_PURCHASE =
    CMsgDOTAPopup_PopupID_NEED_TO_PURCHASE;
  static const PopupID SIGNON_MESSAGE =
    CMsgDOTAPopup_PopupID_SIGNON_MESSAGE;
  static const PopupID GUILD_KICKED =
    CMsgDOTAPopup_PopupID_GUILD_KICKED;
  static const PopupID MATCHMAKING_REGION_OFFLINE =
    CMsgDOTAPopup_PopupID_MATCHMAKING_REGION_OFFLINE;
  static const PopupID TOURNAMENT_GAME_NOT_FOUND =
    CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_NOT_FOUND;
  static const PopupID TOURNAMENT_GAME_HAS_LOBBY_ID =
    CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_LOBBY_ID;
  static const PopupID TOURNAMENT_GAME_HAS_MATCH_ID =
    CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_MATCH_ID;
  static const PopupID TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM =
    CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM;
  static const PopupID TOURNAMENT_GAME_HAS_NO_DIRE_TEAM =
    CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_HAS_NO_DIRE_TEAM;
  static const PopupID TOURNAMENT_GAME_SQL_UPDATE_FAILED =
    CMsgDOTAPopup_PopupID_TOURNAMENT_GAME_SQL_UPDATE_FAILED;
  static const PopupID NOT_LEAGUE_ADMIN =
    CMsgDOTAPopup_PopupID_NOT_LEAGUE_ADMIN;
  static const PopupID IN_ANOTHER_GAME =
    CMsgDOTAPopup_PopupID_IN_ANOTHER_GAME;
  static const PopupID PARTY_MEMBER_IN_ANOTHER_GAME =
    CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_ANOTHER_GAME;
  static const PopupID PARTY_MEMBER_IN_LOW_PRIORITY =
    CMsgDOTAPopup_PopupID_PARTY_MEMBER_IN_LOW_PRIORITY;
  static const PopupID CLIENT_OUT_OF_DATE =
    CMsgDOTAPopup_PopupID_CLIENT_OUT_OF_DATE;
  static const PopupID SAVE_GAME_CORRUPT =
    CMsgDOTAPopup_PopupID_SAVE_GAME_CORRUPT;
  static const PopupID INSUFFICIENT_INGOTS =
    CMsgDOTAPopup_PopupID_INSUFFICIENT_INGOTS;
  static const PopupID COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL =
    CMsgDOTAPopup_PopupID_COMPETITIVE_MM_NOT_ENOUGH_SKILL_DATA_PLAY_MORE_CASUAL;
  static const PopupID PARTY_LEADER_JOINED_LOBBY =
    CMsgDOTAPopup_PopupID_PARTY_LEADER_JOINED_LOBBY;
  static const PopupID WEEKEND_TOURNEY_UNMATCHED =
    CMsgDOTAPopup_PopupID_WEEKEND_TOURNEY_UNMATCHED;
  static const PopupID POST_MATCH_SURVEY =
    CMsgDOTAPopup_PopupID_POST_MATCH_SURVEY;
  static const PopupID TROPHY_AWARDED =
    CMsgDOTAPopup_PopupID_TROPHY_AWARDED;
  static const PopupID TROPHY_LEVEL_UP =
    CMsgDOTAPopup_PopupID_TROPHY_LEVEL_UP;
  static const PopupID ALL_HERO_CHALLENGE_PROGRESS =
    CMsgDOTAPopup_PopupID_ALL_HERO_CHALLENGE_PROGRESS;
  static const PopupID NEED_INITIAL_SKILL =
    CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL;
  static const PopupID NEED_INITIAL_SKILL_IN_PARTY =
    CMsgDOTAPopup_PopupID_NEED_INITIAL_SKILL_IN_PARTY;
  static const PopupID TARGET_ENGINE_MISMATCH =
    CMsgDOTAPopup_PopupID_TARGET_ENGINE_MISMATCH;
  static const PopupID VAC_NOT_VERIFIED =
    CMsgDOTAPopup_PopupID_VAC_NOT_VERIFIED;
  static const PopupID KICKED_FROM_QUEUE_EVENT_STARTING =
    CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_STARTING;
  static const PopupID KICKED_FROM_QUEUE_EVENT_ENDING =
    CMsgDOTAPopup_PopupID_KICKED_FROM_QUEUE_EVENT_ENDING;
  static const PopupID LOBBY_FULL =
    CMsgDOTAPopup_PopupID_LOBBY_FULL;
  static const PopupID EVENT_POINTS_EARNED =
    CMsgDOTAPopup_PopupID_EVENT_POINTS_EARNED;
  static const PopupID CUSTOM_GAME_INCORRECT_VERSION =
    CMsgDOTAPopup_PopupID_CUSTOM_GAME_INCORRECT_VERSION;
  static const PopupID LIMITED_USER_CHAT =
    CMsgDOTAPopup_PopupID_LIMITED_USER_CHAT;
  static const PopupID EVENT_PREMIUM_POINTS_EARNED =
    CMsgDOTAPopup_PopupID_EVENT_PREMIUM_POINTS_EARNED;
  static const PopupID LOBBY_MVP_AWARDED =
    CMsgDOTAPopup_PopupID_LOBBY_MVP_AWARDED;
  static const PopupID LOW_BADGE_LEVEL_CHAT =
    CMsgDOTAPopup_PopupID_LOW_BADGE_LEVEL_CHAT;
  static const PopupID LOW_WINS_CHAT =
    CMsgDOTAPopup_PopupID_LOW_WINS_CHAT;
  static const PopupID UNVERIFIED_USER_CHAT =
    CMsgDOTAPopup_PopupID_UNVERIFIED_USER_CHAT;
  static const PopupID PARTY_STARTED_FINDING_EVENT_MATCH =
    CMsgDOTAPopup_PopupID_PARTY_STARTED_FINDING_EVENT_MATCH;
  static const PopupID GENERIC_INFO =
    CMsgDOTAPopup_PopupID_GENERIC_INFO;
  static const PopupID GENERIC_ERROR =
    CMsgDOTAPopup_PopupID_GENERIC_ERROR;
  static inline bool PopupID_IsValid(int value) {
    return CMsgDOTAPopup_PopupID_IsValid(value);
  }
  static const PopupID PopupID_MIN =
    CMsgDOTAPopup_PopupID_PopupID_MIN;
  static const PopupID PopupID_MAX =
    CMsgDOTAPopup_PopupID_PopupID_MAX;
  static const int PopupID_ARRAYSIZE =
    CMsgDOTAPopup_PopupID_PopupID_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  PopupID_descriptor() {
    return CMsgDOTAPopup_PopupID_descriptor();
  }
  static inline const ::std::string& PopupID_Name(PopupID value) {
    return CMsgDOTAPopup_PopupID_Name(value);
  }
  static inline bool PopupID_Parse(const ::std::string& name,
      PopupID* value) {
    return CMsgDOTAPopup_PopupID_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated string var_names = 7;
  int var_names_size() const;
  void clear_var_names();
  static const int kVarNamesFieldNumber = 7;
  const ::std::string& var_names(int index) const;
  ::std::string* mutable_var_names(int index);
  void set_var_names(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_var_names(int index, ::std::string&& value);
  #endif
  void set_var_names(int index, const char* value);
  void set_var_names(int index, const char* value, size_t size);
  ::std::string* add_var_names();
  void add_var_names(const ::std::string& value);
  #if LANG_CXX11
  void add_var_names(::std::string&& value);
  #endif
  void add_var_names(const char* value);
  void add_var_names(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& var_names() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_var_names();

  // repeated string var_values = 8;
  int var_values_size() const;
  void clear_var_values();
  static const int kVarValuesFieldNumber = 8;
  const ::std::string& var_values(int index) const;
  ::std::string* mutable_var_values(int index);
  void set_var_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_var_values(int index, ::std::string&& value);
  #endif
  void set_var_values(int index, const char* value);
  void set_var_values(int index, const char* value, size_t size);
  ::std::string* add_var_values();
  void add_var_values(const ::std::string& value);
  #if LANG_CXX11
  void add_var_values(::std::string&& value);
  #endif
  void add_var_values(const char* value);
  void add_var_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& var_values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_var_values();

  // optional string custom_text = 2;
  bool has_custom_text() const;
  void clear_custom_text();
  static const int kCustomTextFieldNumber = 2;
  const ::std::string& custom_text() const;
  void set_custom_text(const ::std::string& value);
  #if LANG_CXX11
  void set_custom_text(::std::string&& value);
  #endif
  void set_custom_text(const char* value);
  void set_custom_text(const char* value, size_t size);
  ::std::string* mutable_custom_text();
  ::std::string* release_custom_text();
  void set_allocated_custom_text(::std::string* custom_text);

  // optional bytes popup_data = 4;
  bool has_popup_data() const;
  void clear_popup_data();
  static const int kPopupDataFieldNumber = 4;
  const ::std::string& popup_data() const;
  void set_popup_data(const ::std::string& value);
  #if LANG_CXX11
  void set_popup_data(::std::string&& value);
  #endif
  void set_popup_data(const char* value);
  void set_popup_data(const void* value, size_t size);
  ::std::string* mutable_popup_data();
  ::std::string* release_popup_data();
  void set_allocated_popup_data(::std::string* popup_data);

  // optional string loc_token_header = 5;
  bool has_loc_token_header() const;
  void clear_loc_token_header();
  static const int kLocTokenHeaderFieldNumber = 5;
  const ::std::string& loc_token_header() const;
  void set_loc_token_header(const ::std::string& value);
  #if LANG_CXX11
  void set_loc_token_header(::std::string&& value);
  #endif
  void set_loc_token_header(const char* value);
  void set_loc_token_header(const char* value, size_t size);
  ::std::string* mutable_loc_token_header();
  ::std::string* release_loc_token_header();
  void set_allocated_loc_token_header(::std::string* loc_token_header);

  // optional string loc_token_msg = 6;
  bool has_loc_token_msg() const;
  void clear_loc_token_msg();
  static const int kLocTokenMsgFieldNumber = 6;
  const ::std::string& loc_token_msg() const;
  void set_loc_token_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_loc_token_msg(::std::string&& value);
  #endif
  void set_loc_token_msg(const char* value);
  void set_loc_token_msg(const char* value, size_t size);
  ::std::string* mutable_loc_token_msg();
  ::std::string* release_loc_token_msg();
  void set_allocated_loc_token_msg(::std::string* loc_token_msg);

  // optional string debug_text = 9;
  bool has_debug_text() const;
  void clear_debug_text();
  static const int kDebugTextFieldNumber = 9;
  const ::std::string& debug_text() const;
  void set_debug_text(const ::std::string& value);
  #if LANG_CXX11
  void set_debug_text(::std::string&& value);
  #endif
  void set_debug_text(const char* value);
  void set_debug_text(const char* value, size_t size);
  ::std::string* mutable_debug_text();
  ::std::string* release_debug_text();
  void set_allocated_debug_text(::std::string* debug_text);

  // optional sint32 int_data = 3;
  bool has_int_data() const;
  void clear_int_data();
  static const int kIntDataFieldNumber = 3;
  ::google::protobuf::int32 int_data() const;
  void set_int_data(::google::protobuf::int32 value);

  // optional .proto.dota.CMsgDOTAPopup.PopupID id = 1 [default = NONE];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::proto::dota::CMsgDOTAPopup_PopupID id() const;
  void set_id(::proto::dota::CMsgDOTAPopup_PopupID value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPopup)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_custom_text();
  void clear_has_custom_text();
  void set_has_int_data();
  void clear_has_int_data();
  void set_has_popup_data();
  void clear_has_popup_data();
  void set_has_loc_token_header();
  void clear_has_loc_token_header();
  void set_has_loc_token_msg();
  void clear_has_loc_token_msg();
  void set_has_debug_text();
  void clear_has_debug_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> var_names_;
  ::google::protobuf::RepeatedPtrField< ::std::string> var_values_;
  ::google::protobuf::internal::ArenaStringPtr custom_text_;
  ::google::protobuf::internal::ArenaStringPtr popup_data_;
  ::google::protobuf::internal::ArenaStringPtr loc_token_header_;
  ::google::protobuf::internal::ArenaStringPtr loc_token_msg_;
  ::google::protobuf::internal::ArenaStringPtr debug_text_;
  ::google::protobuf::int32 int_data_;
  int id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAReportsRemainingRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAReportsRemainingRequest) */ {
 public:
  CMsgDOTAReportsRemainingRequest();
  virtual ~CMsgDOTAReportsRemainingRequest();

  CMsgDOTAReportsRemainingRequest(const CMsgDOTAReportsRemainingRequest& from);

  inline CMsgDOTAReportsRemainingRequest& operator=(const CMsgDOTAReportsRemainingRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAReportsRemainingRequest& default_instance();

  static inline const CMsgDOTAReportsRemainingRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAReportsRemainingRequest*>(
               &_CMsgDOTAReportsRemainingRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CMsgDOTAReportsRemainingRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAReportsRemainingRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAReportsRemainingRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAReportsRemainingRequest& from);
  void MergeFrom(const CMsgDOTAReportsRemainingRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAReportsRemainingRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAReportsRemainingRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAReportsRemainingResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAReportsRemainingResponse) */ {
 public:
  CMsgDOTAReportsRemainingResponse();
  virtual ~CMsgDOTAReportsRemainingResponse();

  CMsgDOTAReportsRemainingResponse(const CMsgDOTAReportsRemainingResponse& from);

  inline CMsgDOTAReportsRemainingResponse& operator=(const CMsgDOTAReportsRemainingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAReportsRemainingResponse& default_instance();

  static inline const CMsgDOTAReportsRemainingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAReportsRemainingResponse*>(
               &_CMsgDOTAReportsRemainingResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CMsgDOTAReportsRemainingResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAReportsRemainingResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAReportsRemainingResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAReportsRemainingResponse& from);
  void MergeFrom(const CMsgDOTAReportsRemainingResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAReportsRemainingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 num_positive_reports_remaining = 1;
  bool has_num_positive_reports_remaining() const;
  void clear_num_positive_reports_remaining();
  static const int kNumPositiveReportsRemainingFieldNumber = 1;
  ::google::protobuf::uint32 num_positive_reports_remaining() const;
  void set_num_positive_reports_remaining(::google::protobuf::uint32 value);

  // optional uint32 num_negative_reports_remaining = 2;
  bool has_num_negative_reports_remaining() const;
  void clear_num_negative_reports_remaining();
  static const int kNumNegativeReportsRemainingFieldNumber = 2;
  ::google::protobuf::uint32 num_negative_reports_remaining() const;
  void set_num_negative_reports_remaining(::google::protobuf::uint32 value);

  // optional uint32 num_positive_reports_total = 3;
  bool has_num_positive_reports_total() const;
  void clear_num_positive_reports_total();
  static const int kNumPositiveReportsTotalFieldNumber = 3;
  ::google::protobuf::uint32 num_positive_reports_total() const;
  void set_num_positive_reports_total(::google::protobuf::uint32 value);

  // optional uint32 num_negative_reports_total = 4;
  bool has_num_negative_reports_total() const;
  void clear_num_negative_reports_total();
  static const int kNumNegativeReportsTotalFieldNumber = 4;
  ::google::protobuf::uint32 num_negative_reports_total() const;
  void set_num_negative_reports_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAReportsRemainingResponse)
 private:
  void set_has_num_positive_reports_remaining();
  void clear_has_num_positive_reports_remaining();
  void set_has_num_negative_reports_remaining();
  void clear_has_num_negative_reports_remaining();
  void set_has_num_positive_reports_total();
  void clear_has_num_positive_reports_total();
  void set_has_num_negative_reports_total();
  void clear_has_num_negative_reports_total();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 num_positive_reports_remaining_;
  ::google::protobuf::uint32 num_negative_reports_remaining_;
  ::google::protobuf::uint32 num_positive_reports_total_;
  ::google::protobuf::uint32 num_negative_reports_total_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitPlayerReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASubmitPlayerReport) */ {
 public:
  CMsgDOTASubmitPlayerReport();
  virtual ~CMsgDOTASubmitPlayerReport();

  CMsgDOTASubmitPlayerReport(const CMsgDOTASubmitPlayerReport& from);

  inline CMsgDOTASubmitPlayerReport& operator=(const CMsgDOTASubmitPlayerReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASubmitPlayerReport& default_instance();

  static inline const CMsgDOTASubmitPlayerReport* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASubmitPlayerReport*>(
               &_CMsgDOTASubmitPlayerReport_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CMsgDOTASubmitPlayerReport* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTASubmitPlayerReport* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTASubmitPlayerReport* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTASubmitPlayerReport& from);
  void MergeFrom(const CMsgDOTASubmitPlayerReport& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTASubmitPlayerReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string comment = 5;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 5;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 target_account_id() const;
  void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 report_flags = 2;
  bool has_report_flags() const;
  void clear_report_flags();
  static const int kReportFlagsFieldNumber = 2;
  ::google::protobuf::uint32 report_flags() const;
  void set_report_flags(::google::protobuf::uint32 value);

  // optional uint64 lobby_id = 4;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 4;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASubmitPlayerReport)
 private:
  void set_has_target_account_id();
  void clear_has_target_account_id();
  void set_has_report_flags();
  void clear_has_report_flags();
  void set_has_lobby_id();
  void clear_has_lobby_id();
  void set_has_comment();
  void clear_has_comment();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 report_flags_;
  ::google::protobuf::uint64 lobby_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitPlayerReportResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASubmitPlayerReportResponse) */ {
 public:
  CMsgDOTASubmitPlayerReportResponse();
  virtual ~CMsgDOTASubmitPlayerReportResponse();

  CMsgDOTASubmitPlayerReportResponse(const CMsgDOTASubmitPlayerReportResponse& from);

  inline CMsgDOTASubmitPlayerReportResponse& operator=(const CMsgDOTASubmitPlayerReportResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASubmitPlayerReportResponse& default_instance();

  static inline const CMsgDOTASubmitPlayerReportResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASubmitPlayerReportResponse*>(
               &_CMsgDOTASubmitPlayerReportResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CMsgDOTASubmitPlayerReportResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTASubmitPlayerReportResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTASubmitPlayerReportResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTASubmitPlayerReportResponse& from);
  void MergeFrom(const CMsgDOTASubmitPlayerReportResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTASubmitPlayerReportResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string debug_message = 4;
  bool has_debug_message() const;
  void clear_debug_message();
  static const int kDebugMessageFieldNumber = 4;
  const ::std::string& debug_message() const;
  void set_debug_message(const ::std::string& value);
  #if LANG_CXX11
  void set_debug_message(::std::string&& value);
  #endif
  void set_debug_message(const char* value);
  void set_debug_message(const char* value, size_t size);
  ::std::string* mutable_debug_message();
  ::std::string* release_debug_message();
  void set_allocated_debug_message(::std::string* debug_message);

  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 target_account_id() const;
  void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 report_flags = 2;
  bool has_report_flags() const;
  void clear_report_flags();
  static const int kReportFlagsFieldNumber = 2;
  ::google::protobuf::uint32 report_flags() const;
  void set_report_flags(::google::protobuf::uint32 value);

  // optional uint32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASubmitPlayerReportResponse)
 private:
  void set_has_target_account_id();
  void clear_has_target_account_id();
  void set_has_report_flags();
  void clear_has_report_flags();
  void set_has_result();
  void clear_has_result();
  void set_has_debug_message();
  void clear_has_debug_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr debug_message_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 report_flags_;
  ::google::protobuf::uint32 result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAReportCountsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAReportCountsRequest) */ {
 public:
  CMsgDOTAReportCountsRequest();
  virtual ~CMsgDOTAReportCountsRequest();

  CMsgDOTAReportCountsRequest(const CMsgDOTAReportCountsRequest& from);

  inline CMsgDOTAReportCountsRequest& operator=(const CMsgDOTAReportCountsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAReportCountsRequest& default_instance();

  static inline const CMsgDOTAReportCountsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAReportCountsRequest*>(
               &_CMsgDOTAReportCountsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CMsgDOTAReportCountsRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAReportCountsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAReportCountsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAReportCountsRequest& from);
  void MergeFrom(const CMsgDOTAReportCountsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAReportCountsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 target_account_id() const;
  void set_target_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAReportCountsRequest)
 private:
  void set_has_target_account_id();
  void clear_has_target_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAReportCountsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAReportCountsResponse) */ {
 public:
  CMsgDOTAReportCountsResponse();
  virtual ~CMsgDOTAReportCountsResponse();

  CMsgDOTAReportCountsResponse(const CMsgDOTAReportCountsResponse& from);

  inline CMsgDOTAReportCountsResponse& operator=(const CMsgDOTAReportCountsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAReportCountsResponse& default_instance();

  static inline const CMsgDOTAReportCountsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAReportCountsResponse*>(
               &_CMsgDOTAReportCountsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CMsgDOTAReportCountsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAReportCountsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAReportCountsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAReportCountsResponse& from);
  void MergeFrom(const CMsgDOTAReportCountsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAReportCountsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 target_account_id() const;
  void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 leadership_count = 2;
  bool has_leadership_count() const;
  void clear_leadership_count();
  static const int kLeadershipCountFieldNumber = 2;
  ::google::protobuf::uint32 leadership_count() const;
  void set_leadership_count(::google::protobuf::uint32 value);

  // optional uint32 teaching_count = 3;
  bool has_teaching_count() const;
  void clear_teaching_count();
  static const int kTeachingCountFieldNumber = 3;
  ::google::protobuf::uint32 teaching_count() const;
  void set_teaching_count(::google::protobuf::uint32 value);

  // optional uint32 friendly_count = 4;
  bool has_friendly_count() const;
  void clear_friendly_count();
  static const int kFriendlyCountFieldNumber = 4;
  ::google::protobuf::uint32 friendly_count() const;
  void set_friendly_count(::google::protobuf::uint32 value);

  // optional uint32 forgiving_count = 5;
  bool has_forgiving_count() const;
  void clear_forgiving_count();
  static const int kForgivingCountFieldNumber = 5;
  ::google::protobuf::uint32 forgiving_count() const;
  void set_forgiving_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAReportCountsResponse)
 private:
  void set_has_target_account_id();
  void clear_has_target_account_id();
  void set_has_leadership_count();
  void clear_has_leadership_count();
  void set_has_teaching_count();
  void clear_has_teaching_count();
  void set_has_friendly_count();
  void clear_has_friendly_count();
  void set_has_forgiving_count();
  void clear_has_forgiving_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 leadership_count_;
  ::google::protobuf::uint32 teaching_count_;
  ::google::protobuf::uint32 friendly_count_;
  ::google::protobuf::uint32 forgiving_count_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitLobbyMVPVote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASubmitLobbyMVPVote) */ {
 public:
  CMsgDOTASubmitLobbyMVPVote();
  virtual ~CMsgDOTASubmitLobbyMVPVote();

  CMsgDOTASubmitLobbyMVPVote(const CMsgDOTASubmitLobbyMVPVote& from);

  inline CMsgDOTASubmitLobbyMVPVote& operator=(const CMsgDOTASubmitLobbyMVPVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASubmitLobbyMVPVote& default_instance();

  static inline const CMsgDOTASubmitLobbyMVPVote* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASubmitLobbyMVPVote*>(
               &_CMsgDOTASubmitLobbyMVPVote_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CMsgDOTASubmitLobbyMVPVote* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTASubmitLobbyMVPVote* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTASubmitLobbyMVPVote* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTASubmitLobbyMVPVote& from);
  void MergeFrom(const CMsgDOTASubmitLobbyMVPVote& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTASubmitLobbyMVPVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 target_account_id() const;
  void set_target_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASubmitLobbyMVPVote)
 private:
  void set_has_target_account_id();
  void clear_has_target_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitLobbyMVPVoteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASubmitLobbyMVPVoteResponse) */ {
 public:
  CMsgDOTASubmitLobbyMVPVoteResponse();
  virtual ~CMsgDOTASubmitLobbyMVPVoteResponse();

  CMsgDOTASubmitLobbyMVPVoteResponse(const CMsgDOTASubmitLobbyMVPVoteResponse& from);

  inline CMsgDOTASubmitLobbyMVPVoteResponse& operator=(const CMsgDOTASubmitLobbyMVPVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASubmitLobbyMVPVoteResponse& default_instance();

  static inline const CMsgDOTASubmitLobbyMVPVoteResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASubmitLobbyMVPVoteResponse*>(
               &_CMsgDOTASubmitLobbyMVPVoteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(CMsgDOTASubmitLobbyMVPVoteResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTASubmitLobbyMVPVoteResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTASubmitLobbyMVPVoteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTASubmitLobbyMVPVoteResponse& from);
  void MergeFrom(const CMsgDOTASubmitLobbyMVPVoteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTASubmitLobbyMVPVoteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 target_account_id = 1;
  bool has_target_account_id() const;
  void clear_target_account_id();
  static const int kTargetAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 target_account_id() const;
  void set_target_account_id(::google::protobuf::uint32 value);

  // optional uint32 eresult = 2;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 2;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASubmitLobbyMVPVoteResponse)
 private:
  void set_has_target_account_id();
  void clear_has_target_account_id();
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 target_account_id_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALobbyMVPNotifyRecipient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALobbyMVPNotifyRecipient) */ {
 public:
  CMsgDOTALobbyMVPNotifyRecipient();
  virtual ~CMsgDOTALobbyMVPNotifyRecipient();

  CMsgDOTALobbyMVPNotifyRecipient(const CMsgDOTALobbyMVPNotifyRecipient& from);

  inline CMsgDOTALobbyMVPNotifyRecipient& operator=(const CMsgDOTALobbyMVPNotifyRecipient& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALobbyMVPNotifyRecipient& default_instance();

  static inline const CMsgDOTALobbyMVPNotifyRecipient* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALobbyMVPNotifyRecipient*>(
               &_CMsgDOTALobbyMVPNotifyRecipient_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CMsgDOTALobbyMVPNotifyRecipient* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALobbyMVPNotifyRecipient* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALobbyMVPNotifyRecipient* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALobbyMVPNotifyRecipient& from);
  void MergeFrom(const CMsgDOTALobbyMVPNotifyRecipient& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALobbyMVPNotifyRecipient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 voter_account_id = 1;
  bool has_voter_account_id() const;
  void clear_voter_account_id();
  static const int kVoterAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 voter_account_id() const;
  void set_voter_account_id(::google::protobuf::uint32 value);

  // optional uint32 recipient_account_id = 2;
  bool has_recipient_account_id() const;
  void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 recipient_account_id() const;
  void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional uint32 num_votes = 3;
  bool has_num_votes() const;
  void clear_num_votes();
  static const int kNumVotesFieldNumber = 3;
  ::google::protobuf::uint32 num_votes() const;
  void set_num_votes(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALobbyMVPNotifyRecipient)
 private:
  void set_has_voter_account_id();
  void clear_has_voter_account_id();
  void set_has_recipient_account_id();
  void clear_has_recipient_account_id();
  void set_has_num_votes();
  void clear_has_num_votes();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 voter_account_id_;
  ::google::protobuf::uint32 recipient_account_id_;
  ::google::protobuf::uint32 num_votes_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALobbyMVPAwarded : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALobbyMVPAwarded) */ {
 public:
  CMsgDOTALobbyMVPAwarded();
  virtual ~CMsgDOTALobbyMVPAwarded();

  CMsgDOTALobbyMVPAwarded(const CMsgDOTALobbyMVPAwarded& from);

  inline CMsgDOTALobbyMVPAwarded& operator=(const CMsgDOTALobbyMVPAwarded& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALobbyMVPAwarded& default_instance();

  static inline const CMsgDOTALobbyMVPAwarded* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALobbyMVPAwarded*>(
               &_CMsgDOTALobbyMVPAwarded_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CMsgDOTALobbyMVPAwarded* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALobbyMVPAwarded* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALobbyMVPAwarded* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALobbyMVPAwarded& from);
  void MergeFrom(const CMsgDOTALobbyMVPAwarded& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALobbyMVPAwarded* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mvp_account_id = 1;
  bool has_mvp_account_id() const;
  void clear_mvp_account_id();
  static const int kMvpAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 mvp_account_id() const;
  void set_mvp_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALobbyMVPAwarded)
 private:
  void set_has_mvp_account_id();
  void clear_has_mvp_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 mvp_account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAKickedFromMatchmakingQueue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAKickedFromMatchmakingQueue) */ {
 public:
  CMsgDOTAKickedFromMatchmakingQueue();
  virtual ~CMsgDOTAKickedFromMatchmakingQueue();

  CMsgDOTAKickedFromMatchmakingQueue(const CMsgDOTAKickedFromMatchmakingQueue& from);

  inline CMsgDOTAKickedFromMatchmakingQueue& operator=(const CMsgDOTAKickedFromMatchmakingQueue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAKickedFromMatchmakingQueue& default_instance();

  static inline const CMsgDOTAKickedFromMatchmakingQueue* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAKickedFromMatchmakingQueue*>(
               &_CMsgDOTAKickedFromMatchmakingQueue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CMsgDOTAKickedFromMatchmakingQueue* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAKickedFromMatchmakingQueue* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAKickedFromMatchmakingQueue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAKickedFromMatchmakingQueue& from);
  void MergeFrom(const CMsgDOTAKickedFromMatchmakingQueue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAKickedFromMatchmakingQueue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.MatchType match_type = 1 [default = MATCH_TYPE_CASUAL];
  bool has_match_type() const;
  void clear_match_type();
  static const int kMatchTypeFieldNumber = 1;
  ::proto::dota::MatchType match_type() const;
  void set_match_type(::proto::dota::MatchType value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAKickedFromMatchmakingQueue)
 private:
  void set_has_match_type();
  void clear_has_match_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int match_type_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTARequestSaveGames : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestSaveGames) */ {
 public:
  CMsgDOTARequestSaveGames();
  virtual ~CMsgDOTARequestSaveGames();

  CMsgDOTARequestSaveGames(const CMsgDOTARequestSaveGames& from);

  inline CMsgDOTARequestSaveGames& operator=(const CMsgDOTARequestSaveGames& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestSaveGames& default_instance();

  static inline const CMsgDOTARequestSaveGames* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestSaveGames*>(
               &_CMsgDOTARequestSaveGames_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(CMsgDOTARequestSaveGames* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestSaveGames* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTARequestSaveGames* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTARequestSaveGames& from);
  void MergeFrom(const CMsgDOTARequestSaveGames& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTARequestSaveGames* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 server_region = 1;
  bool has_server_region() const;
  void clear_server_region();
  static const int kServerRegionFieldNumber = 1;
  ::google::protobuf::uint32 server_region() const;
  void set_server_region(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestSaveGames)
 private:
  void set_has_server_region();
  void clear_has_server_region();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_region_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTARequestSaveGamesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARequestSaveGamesResponse) */ {
 public:
  CMsgDOTARequestSaveGamesResponse();
  virtual ~CMsgDOTARequestSaveGamesResponse();

  CMsgDOTARequestSaveGamesResponse(const CMsgDOTARequestSaveGamesResponse& from);

  inline CMsgDOTARequestSaveGamesResponse& operator=(const CMsgDOTARequestSaveGamesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARequestSaveGamesResponse& default_instance();

  static inline const CMsgDOTARequestSaveGamesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARequestSaveGamesResponse*>(
               &_CMsgDOTARequestSaveGamesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(CMsgDOTARequestSaveGamesResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARequestSaveGamesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTARequestSaveGamesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTARequestSaveGamesResponse& from);
  void MergeFrom(const CMsgDOTARequestSaveGamesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTARequestSaveGamesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDOTASaveGame save_games = 2;
  int save_games_size() const;
  void clear_save_games();
  static const int kSaveGamesFieldNumber = 2;
  const ::proto::dota::CDOTASaveGame& save_games(int index) const;
  ::proto::dota::CDOTASaveGame* mutable_save_games(int index);
  ::proto::dota::CDOTASaveGame* add_save_games();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTASaveGame >*
      mutable_save_games();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTASaveGame >&
      save_games() const;

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARequestSaveGamesResponse)
 private:
  void set_has_steam_id();
  void clear_has_steam_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTASaveGame > save_games_;
  ::google::protobuf::uint64 steam_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCMatchDetailsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMatchDetailsRequest) */ {
 public:
  CMsgGCMatchDetailsRequest();
  virtual ~CMsgGCMatchDetailsRequest();

  CMsgGCMatchDetailsRequest(const CMsgGCMatchDetailsRequest& from);

  inline CMsgGCMatchDetailsRequest& operator=(const CMsgGCMatchDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchDetailsRequest& default_instance();

  static inline const CMsgGCMatchDetailsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMatchDetailsRequest*>(
               &_CMsgGCMatchDetailsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CMsgGCMatchDetailsRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgGCMatchDetailsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCMatchDetailsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCMatchDetailsRequest& from);
  void MergeFrom(const CMsgGCMatchDetailsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCMatchDetailsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMatchDetailsRequest)
 private:
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCMatchDetailsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCMatchDetailsResponse) */ {
 public:
  CMsgGCMatchDetailsResponse();
  virtual ~CMsgGCMatchDetailsResponse();

  CMsgGCMatchDetailsResponse(const CMsgGCMatchDetailsResponse& from);

  inline CMsgGCMatchDetailsResponse& operator=(const CMsgGCMatchDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCMatchDetailsResponse& default_instance();

  static inline const CMsgGCMatchDetailsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCMatchDetailsResponse*>(
               &_CMsgGCMatchDetailsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CMsgGCMatchDetailsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCMatchDetailsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCMatchDetailsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCMatchDetailsResponse& from);
  void MergeFrom(const CMsgGCMatchDetailsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCMatchDetailsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAMatch match = 2;
  bool has_match() const;
  void clear_match();
  static const int kMatchFieldNumber = 2;
  const ::proto::dota::CMsgDOTAMatch& match() const;
  ::proto::dota::CMsgDOTAMatch* mutable_match();
  ::proto::dota::CMsgDOTAMatch* release_match();
  void set_allocated_match(::proto::dota::CMsgDOTAMatch* match);

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional .proto.dota.DOTAMatchVote vote = 3 [default = DOTAMatchVote_INVALID];
  bool has_vote() const;
  void clear_vote();
  static const int kVoteFieldNumber = 3;
  ::proto::dota::DOTAMatchVote vote() const;
  void set_vote(::proto::dota::DOTAMatchVote value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCMatchDetailsResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_match();
  void clear_has_match();
  void set_has_vote();
  void clear_has_vote();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgDOTAMatch* match_;
  ::google::protobuf::uint32 result_;
  int vote_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgServerToGCMatchDetailsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgServerToGCMatchDetailsRequest) */ {
 public:
  CMsgServerToGCMatchDetailsRequest();
  virtual ~CMsgServerToGCMatchDetailsRequest();

  CMsgServerToGCMatchDetailsRequest(const CMsgServerToGCMatchDetailsRequest& from);

  inline CMsgServerToGCMatchDetailsRequest& operator=(const CMsgServerToGCMatchDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgServerToGCMatchDetailsRequest& default_instance();

  static inline const CMsgServerToGCMatchDetailsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgServerToGCMatchDetailsRequest*>(
               &_CMsgServerToGCMatchDetailsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(CMsgServerToGCMatchDetailsRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgServerToGCMatchDetailsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgServerToGCMatchDetailsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgServerToGCMatchDetailsRequest& from);
  void MergeFrom(const CMsgServerToGCMatchDetailsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgServerToGCMatchDetailsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 match_ids = 1;
  int match_ids_size() const;
  void clear_match_ids();
  static const int kMatchIdsFieldNumber = 1;
  ::google::protobuf::uint64 match_ids(int index) const;
  void set_match_ids(int index, ::google::protobuf::uint64 value);
  void add_match_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      match_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_match_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgServerToGCMatchDetailsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > match_ids_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToServerMatchDetailsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToServerMatchDetailsResponse) */ {
 public:
  CMsgGCToServerMatchDetailsResponse();
  virtual ~CMsgGCToServerMatchDetailsResponse();

  CMsgGCToServerMatchDetailsResponse(const CMsgGCToServerMatchDetailsResponse& from);

  inline CMsgGCToServerMatchDetailsResponse& operator=(const CMsgGCToServerMatchDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToServerMatchDetailsResponse& default_instance();

  static inline const CMsgGCToServerMatchDetailsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToServerMatchDetailsResponse*>(
               &_CMsgGCToServerMatchDetailsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(CMsgGCToServerMatchDetailsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToServerMatchDetailsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToServerMatchDetailsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToServerMatchDetailsResponse& from);
  void MergeFrom(const CMsgGCToServerMatchDetailsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToServerMatchDetailsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAMatch matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  const ::proto::dota::CMsgDOTAMatch& matches(int index) const;
  ::proto::dota::CMsgDOTAMatch* mutable_matches(int index);
  ::proto::dota::CMsgDOTAMatch* add_matches();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
      mutable_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
      matches() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToServerMatchDetailsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch > matches_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAProfileRequest) */ {
 public:
  CMsgDOTAProfileRequest();
  virtual ~CMsgDOTAProfileRequest();

  CMsgDOTAProfileRequest(const CMsgDOTAProfileRequest& from);

  inline CMsgDOTAProfileRequest& operator=(const CMsgDOTAProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileRequest& default_instance();

  static inline const CMsgDOTAProfileRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAProfileRequest*>(
               &_CMsgDOTAProfileRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CMsgDOTAProfileRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAProfileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAProfileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAProfileRequest& from);
  void MergeFrom(const CMsgDOTAProfileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAProfileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional bool request_name = 2;
  bool has_request_name() const;
  void clear_request_name();
  static const int kRequestNameFieldNumber = 2;
  bool request_name() const;
  void set_request_name(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAProfileRequest)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_request_name();
  void clear_has_request_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  bool request_name_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_PlayedHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAProfileResponse.PlayedHero) */ {
 public:
  CMsgDOTAProfileResponse_PlayedHero();
  virtual ~CMsgDOTAProfileResponse_PlayedHero();

  CMsgDOTAProfileResponse_PlayedHero(const CMsgDOTAProfileResponse_PlayedHero& from);

  inline CMsgDOTAProfileResponse_PlayedHero& operator=(const CMsgDOTAProfileResponse_PlayedHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_PlayedHero& default_instance();

  static inline const CMsgDOTAProfileResponse_PlayedHero* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAProfileResponse_PlayedHero*>(
               &_CMsgDOTAProfileResponse_PlayedHero_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(CMsgDOTAProfileResponse_PlayedHero* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAProfileResponse_PlayedHero* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAProfileResponse_PlayedHero* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAProfileResponse_PlayedHero& from);
  void MergeFrom(const CMsgDOTAProfileResponse_PlayedHero& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAProfileResponse_PlayedHero* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 wins = 2;
  bool has_wins() const;
  void clear_wins();
  static const int kWinsFieldNumber = 2;
  ::google::protobuf::uint32 wins() const;
  void set_wins(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAProfileResponse.PlayedHero)
 private:
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_wins();
  void clear_has_wins();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 wins_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_ShowcaseHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero) */ {
 public:
  CMsgDOTAProfileResponse_ShowcaseHero();
  virtual ~CMsgDOTAProfileResponse_ShowcaseHero();

  CMsgDOTAProfileResponse_ShowcaseHero(const CMsgDOTAProfileResponse_ShowcaseHero& from);

  inline CMsgDOTAProfileResponse_ShowcaseHero& operator=(const CMsgDOTAProfileResponse_ShowcaseHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_ShowcaseHero& default_instance();

  static inline const CMsgDOTAProfileResponse_ShowcaseHero* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAProfileResponse_ShowcaseHero*>(
               &_CMsgDOTAProfileResponse_ShowcaseHero_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(CMsgDOTAProfileResponse_ShowcaseHero* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAProfileResponse_ShowcaseHero* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAProfileResponse_ShowcaseHero* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAProfileResponse_ShowcaseHero& from);
  void MergeFrom(const CMsgDOTAProfileResponse_ShowcaseHero& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAProfileResponse_ShowcaseHero* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes object_data = 2;
  int object_data_size() const;
  void clear_object_data();
  static const int kObjectDataFieldNumber = 2;
  const ::std::string& object_data(int index) const;
  ::std::string* mutable_object_data(int index);
  void set_object_data(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_object_data(int index, ::std::string&& value);
  #endif
  void set_object_data(int index, const char* value);
  void set_object_data(int index, const void* value, size_t size);
  ::std::string* add_object_data();
  void add_object_data(const ::std::string& value);
  #if LANG_CXX11
  void add_object_data(::std::string&& value);
  #endif
  void add_object_data(const char* value);
  void add_object_data(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& object_data() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_object_data();

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero)
 private:
  void set_has_hero_id();
  void clear_has_hero_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> object_data_;
  ::google::protobuf::uint32 hero_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_LeaguePass : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAProfileResponse.LeaguePass) */ {
 public:
  CMsgDOTAProfileResponse_LeaguePass();
  virtual ~CMsgDOTAProfileResponse_LeaguePass();

  CMsgDOTAProfileResponse_LeaguePass(const CMsgDOTAProfileResponse_LeaguePass& from);

  inline CMsgDOTAProfileResponse_LeaguePass& operator=(const CMsgDOTAProfileResponse_LeaguePass& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_LeaguePass& default_instance();

  static inline const CMsgDOTAProfileResponse_LeaguePass* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAProfileResponse_LeaguePass*>(
               &_CMsgDOTAProfileResponse_LeaguePass_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(CMsgDOTAProfileResponse_LeaguePass* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAProfileResponse_LeaguePass* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAProfileResponse_LeaguePass* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAProfileResponse_LeaguePass& from);
  void MergeFrom(const CMsgDOTAProfileResponse_LeaguePass& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAProfileResponse_LeaguePass* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 item_def = 2;
  bool has_item_def() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 2;
  ::google::protobuf::uint32 item_def() const;
  void set_item_def(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAProfileResponse.LeaguePass)
 private:
  void set_has_league_id();
  void clear_has_league_id();
  void set_has_item_def();
  void clear_has_item_def();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 item_def_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_EventTicket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAProfileResponse.EventTicket) */ {
 public:
  CMsgDOTAProfileResponse_EventTicket();
  virtual ~CMsgDOTAProfileResponse_EventTicket();

  CMsgDOTAProfileResponse_EventTicket(const CMsgDOTAProfileResponse_EventTicket& from);

  inline CMsgDOTAProfileResponse_EventTicket& operator=(const CMsgDOTAProfileResponse_EventTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_EventTicket& default_instance();

  static inline const CMsgDOTAProfileResponse_EventTicket* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAProfileResponse_EventTicket*>(
               &_CMsgDOTAProfileResponse_EventTicket_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(CMsgDOTAProfileResponse_EventTicket* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAProfileResponse_EventTicket* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAProfileResponse_EventTicket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAProfileResponse_EventTicket& from);
  void MergeFrom(const CMsgDOTAProfileResponse_EventTicket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAProfileResponse_EventTicket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAProfileResponse.EventTicket)
 private:
  void set_has_event_id();
  void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse_FeaturedItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAProfileResponse.FeaturedItem) */ {
 public:
  CMsgDOTAProfileResponse_FeaturedItem();
  virtual ~CMsgDOTAProfileResponse_FeaturedItem();

  CMsgDOTAProfileResponse_FeaturedItem(const CMsgDOTAProfileResponse_FeaturedItem& from);

  inline CMsgDOTAProfileResponse_FeaturedItem& operator=(const CMsgDOTAProfileResponse_FeaturedItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse_FeaturedItem& default_instance();

  static inline const CMsgDOTAProfileResponse_FeaturedItem* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAProfileResponse_FeaturedItem*>(
               &_CMsgDOTAProfileResponse_FeaturedItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(CMsgDOTAProfileResponse_FeaturedItem* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAProfileResponse_FeaturedItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAProfileResponse_FeaturedItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAProfileResponse_FeaturedItem& from);
  void MergeFrom(const CMsgDOTAProfileResponse_FeaturedItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAProfileResponse_FeaturedItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes object_data = 2;
  bool has_object_data() const;
  void clear_object_data();
  static const int kObjectDataFieldNumber = 2;
  const ::std::string& object_data() const;
  void set_object_data(const ::std::string& value);
  #if LANG_CXX11
  void set_object_data(::std::string&& value);
  #endif
  void set_object_data(const char* value);
  void set_object_data(const void* value, size_t size);
  ::std::string* mutable_object_data();
  ::std::string* release_object_data();
  void set_allocated_object_data(::std::string* object_data);

  // optional uint64 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // optional uint32 slot_index = 3;
  bool has_slot_index() const;
  void clear_slot_index();
  static const int kSlotIndexFieldNumber = 3;
  ::google::protobuf::uint32 slot_index() const;
  void set_slot_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAProfileResponse.FeaturedItem)
 private:
  void set_has_item_id();
  void clear_has_item_id();
  void set_has_object_data();
  void clear_has_object_data();
  void set_has_slot_index();
  void clear_has_slot_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr object_data_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint32 slot_index_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAProfileResponse) */ {
 public:
  CMsgDOTAProfileResponse();
  virtual ~CMsgDOTAProfileResponse();

  CMsgDOTAProfileResponse(const CMsgDOTAProfileResponse& from);

  inline CMsgDOTAProfileResponse& operator=(const CMsgDOTAProfileResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileResponse& default_instance();

  static inline const CMsgDOTAProfileResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAProfileResponse*>(
               &_CMsgDOTAProfileResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(CMsgDOTAProfileResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAProfileResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAProfileResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAProfileResponse& from);
  void MergeFrom(const CMsgDOTAProfileResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAProfileResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAProfileResponse_PlayedHero PlayedHero;
  typedef CMsgDOTAProfileResponse_ShowcaseHero ShowcaseHero;
  typedef CMsgDOTAProfileResponse_LeaguePass LeaguePass;
  typedef CMsgDOTAProfileResponse_EventTicket EventTicket;
  typedef CMsgDOTAProfileResponse_FeaturedItem FeaturedItem;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAMatch latest_matches = 3;
  int latest_matches_size() const;
  void clear_latest_matches();
  static const int kLatestMatchesFieldNumber = 3;
  const ::proto::dota::CMsgDOTAMatch& latest_matches(int index) const;
  ::proto::dota::CMsgDOTAMatch* mutable_latest_matches(int index);
  ::proto::dota::CMsgDOTAMatch* add_latest_matches();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
      mutable_latest_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
      latest_matches() const;

  // repeated .proto.dota.CMsgDOTAProfileResponse.PlayedHero heroes = 4;
  int heroes_size() const;
  void clear_heroes();
  static const int kHeroesFieldNumber = 4;
  const ::proto::dota::CMsgDOTAProfileResponse_PlayedHero& heroes(int index) const;
  ::proto::dota::CMsgDOTAProfileResponse_PlayedHero* mutable_heroes(int index);
  ::proto::dota::CMsgDOTAProfileResponse_PlayedHero* add_heroes();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_PlayedHero >*
      mutable_heroes();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_PlayedHero >&
      heroes() const;

  // repeated .proto.dota.CMsgDOTAProfileResponse.LeaguePass league_passes = 10;
  int league_passes_size() const;
  void clear_league_passes();
  static const int kLeaguePassesFieldNumber = 10;
  const ::proto::dota::CMsgDOTAProfileResponse_LeaguePass& league_passes(int index) const;
  ::proto::dota::CMsgDOTAProfileResponse_LeaguePass* mutable_league_passes(int index);
  ::proto::dota::CMsgDOTAProfileResponse_LeaguePass* add_league_passes();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_LeaguePass >*
      mutable_league_passes();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_LeaguePass >&
      league_passes() const;

  // repeated .proto.dota.CMsgDOTAProfileResponse.EventTicket event_tickets = 11;
  int event_tickets_size() const;
  void clear_event_tickets();
  static const int kEventTicketsFieldNumber = 11;
  const ::proto::dota::CMsgDOTAProfileResponse_EventTicket& event_tickets(int index) const;
  ::proto::dota::CMsgDOTAProfileResponse_EventTicket* mutable_event_tickets(int index);
  ::proto::dota::CMsgDOTAProfileResponse_EventTicket* add_event_tickets();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_EventTicket >*
      mutable_event_tickets();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_EventTicket >&
      event_tickets() const;

  // repeated .proto.dota.CMsgDOTAProfileResponse.FeaturedItem featured_items = 14;
  int featured_items_size() const;
  void clear_featured_items();
  static const int kFeaturedItemsFieldNumber = 14;
  const ::proto::dota::CMsgDOTAProfileResponse_FeaturedItem& featured_items(int index) const;
  ::proto::dota::CMsgDOTAProfileResponse_FeaturedItem* mutable_featured_items(int index);
  ::proto::dota::CMsgDOTAProfileResponse_FeaturedItem* add_featured_items();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_FeaturedItem >*
      mutable_featured_items();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_FeaturedItem >&
      featured_items() const;

  // optional string player_name = 5;
  bool has_player_name() const;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 5;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // optional string team_name = 6;
  bool has_team_name() const;
  void clear_team_name();
  static const int kTeamNameFieldNumber = 6;
  const ::std::string& team_name() const;
  void set_team_name(const ::std::string& value);
  #if LANG_CXX11
  void set_team_name(::std::string&& value);
  #endif
  void set_team_name(const char* value);
  void set_team_name(const char* value, size_t size);
  ::std::string* mutable_team_name();
  ::std::string* release_team_name();
  void set_allocated_team_name(::std::string* team_name);

  // optional string team_tag = 7;
  bool has_team_tag() const;
  void clear_team_tag();
  static const int kTeamTagFieldNumber = 7;
  const ::std::string& team_tag() const;
  void set_team_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_team_tag(::std::string&& value);
  #endif
  void set_team_tag(const char* value);
  void set_team_tag(const char* value, size_t size);
  ::std::string* mutable_team_tag();
  ::std::string* release_team_tag();
  void set_allocated_team_tag(::std::string* team_tag);

  // optional .proto.dota.CSODOTAGameAccountClient game_account_client = 2;
  bool has_game_account_client() const;
  void clear_game_account_client();
  static const int kGameAccountClientFieldNumber = 2;
  const ::proto::dota::CSODOTAGameAccountClient& game_account_client() const;
  ::proto::dota::CSODOTAGameAccountClient* mutable_game_account_client();
  ::proto::dota::CSODOTAGameAccountClient* release_game_account_client();
  void set_allocated_game_account_client(::proto::dota::CSODOTAGameAccountClient* game_account_client);

  // optional .proto.dota.CMsgDOTAProfileResponse.ShowcaseHero showcase_hero = 9;
  bool has_showcase_hero() const;
  void clear_showcase_hero();
  static const int kShowcaseHeroFieldNumber = 9;
  const ::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero& showcase_hero() const;
  ::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero* mutable_showcase_hero();
  ::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero* release_showcase_hero();
  void set_allocated_showcase_hero(::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero* showcase_hero);

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional uint32 team_id = 12;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 12;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // optional uint64 team_logo = 8;
  bool has_team_logo() const;
  void clear_team_logo();
  static const int kTeamLogoFieldNumber = 8;
  ::google::protobuf::uint64 team_logo() const;
  void set_team_logo(::google::protobuf::uint64 value);

  // optional bool has_passport = 13;
  bool has_has_passport() const;
  void clear_has_passport();
  static const int kHasPassportFieldNumber = 13;
  bool has_passport() const;
  void set_has_passport(bool value);

  // optional uint32 abandon_percent = 15;
  bool has_abandon_percent() const;
  void clear_abandon_percent();
  static const int kAbandonPercentFieldNumber = 15;
  ::google::protobuf::uint32 abandon_percent() const;
  void set_abandon_percent(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAProfileResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_game_account_client();
  void clear_has_game_account_client();
  void set_has_player_name();
  void clear_has_player_name();
  void set_has_team_name();
  void clear_has_team_name();
  void set_has_team_tag();
  void clear_has_team_tag();
  void set_has_team_logo();
  void clear_has_team_logo();
  void set_has_showcase_hero();
  void clear_has_showcase_hero();
  void set_has_team_id();
  void clear_has_team_id();
  void set_has_has_passport();
  void clear_has_has_passport();
  void set_has_abandon_percent();
  void clear_has_abandon_percent();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch > latest_matches_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_PlayedHero > heroes_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_LeaguePass > league_passes_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_EventTicket > event_tickets_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_FeaturedItem > featured_items_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::internal::ArenaStringPtr team_name_;
  ::google::protobuf::internal::ArenaStringPtr team_tag_;
  ::proto::dota::CSODOTAGameAccountClient* game_account_client_;
  ::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero* showcase_hero_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint64 team_logo_;
  bool has_passport_;
  ::google::protobuf::uint32 abandon_percent_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileTickets_LeaguePass : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAProfileTickets.LeaguePass) */ {
 public:
  CMsgDOTAProfileTickets_LeaguePass();
  virtual ~CMsgDOTAProfileTickets_LeaguePass();

  CMsgDOTAProfileTickets_LeaguePass(const CMsgDOTAProfileTickets_LeaguePass& from);

  inline CMsgDOTAProfileTickets_LeaguePass& operator=(const CMsgDOTAProfileTickets_LeaguePass& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileTickets_LeaguePass& default_instance();

  static inline const CMsgDOTAProfileTickets_LeaguePass* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAProfileTickets_LeaguePass*>(
               &_CMsgDOTAProfileTickets_LeaguePass_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(CMsgDOTAProfileTickets_LeaguePass* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAProfileTickets_LeaguePass* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAProfileTickets_LeaguePass* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAProfileTickets_LeaguePass& from);
  void MergeFrom(const CMsgDOTAProfileTickets_LeaguePass& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAProfileTickets_LeaguePass* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 item_def = 2;
  bool has_item_def() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 2;
  ::google::protobuf::uint32 item_def() const;
  void set_item_def(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAProfileTickets.LeaguePass)
 private:
  void set_has_league_id();
  void clear_has_league_id();
  void set_has_item_def();
  void clear_has_item_def();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 item_def_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileTickets_EventTicket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAProfileTickets.EventTicket) */ {
 public:
  CMsgDOTAProfileTickets_EventTicket();
  virtual ~CMsgDOTAProfileTickets_EventTicket();

  CMsgDOTAProfileTickets_EventTicket(const CMsgDOTAProfileTickets_EventTicket& from);

  inline CMsgDOTAProfileTickets_EventTicket& operator=(const CMsgDOTAProfileTickets_EventTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileTickets_EventTicket& default_instance();

  static inline const CMsgDOTAProfileTickets_EventTicket* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAProfileTickets_EventTicket*>(
               &_CMsgDOTAProfileTickets_EventTicket_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(CMsgDOTAProfileTickets_EventTicket* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAProfileTickets_EventTicket* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAProfileTickets_EventTicket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAProfileTickets_EventTicket& from);
  void MergeFrom(const CMsgDOTAProfileTickets_EventTicket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAProfileTickets_EventTicket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAProfileTickets.EventTicket)
 private:
  void set_has_event_id();
  void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAProfileTickets : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAProfileTickets) */ {
 public:
  CMsgDOTAProfileTickets();
  virtual ~CMsgDOTAProfileTickets();

  CMsgDOTAProfileTickets(const CMsgDOTAProfileTickets& from);

  inline CMsgDOTAProfileTickets& operator=(const CMsgDOTAProfileTickets& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAProfileTickets& default_instance();

  static inline const CMsgDOTAProfileTickets* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAProfileTickets*>(
               &_CMsgDOTAProfileTickets_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(CMsgDOTAProfileTickets* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAProfileTickets* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAProfileTickets* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAProfileTickets& from);
  void MergeFrom(const CMsgDOTAProfileTickets& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAProfileTickets* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAProfileTickets_LeaguePass LeaguePass;
  typedef CMsgDOTAProfileTickets_EventTicket EventTicket;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAProfileTickets.LeaguePass league_passes = 3;
  int league_passes_size() const;
  void clear_league_passes();
  static const int kLeaguePassesFieldNumber = 3;
  const ::proto::dota::CMsgDOTAProfileTickets_LeaguePass& league_passes(int index) const;
  ::proto::dota::CMsgDOTAProfileTickets_LeaguePass* mutable_league_passes(int index);
  ::proto::dota::CMsgDOTAProfileTickets_LeaguePass* add_league_passes();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_LeaguePass >*
      mutable_league_passes();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_LeaguePass >&
      league_passes() const;

  // repeated .proto.dota.CMsgDOTAProfileTickets.EventTicket event_tickets = 4;
  int event_tickets_size() const;
  void clear_event_tickets();
  static const int kEventTicketsFieldNumber = 4;
  const ::proto::dota::CMsgDOTAProfileTickets_EventTicket& event_tickets(int index) const;
  ::proto::dota::CMsgDOTAProfileTickets_EventTicket* mutable_event_tickets(int index);
  ::proto::dota::CMsgDOTAProfileTickets_EventTicket* add_event_tickets();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_EventTicket >*
      mutable_event_tickets();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_EventTicket >&
      event_tickets() const;

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAProfileTickets)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_LeaguePass > league_passes_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_EventTicket > event_tickets_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetProfileTickets : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetProfileTickets) */ {
 public:
  CMsgClientToGCGetProfileTickets();
  virtual ~CMsgClientToGCGetProfileTickets();

  CMsgClientToGCGetProfileTickets(const CMsgClientToGCGetProfileTickets& from);

  inline CMsgClientToGCGetProfileTickets& operator=(const CMsgClientToGCGetProfileTickets& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetProfileTickets& default_instance();

  static inline const CMsgClientToGCGetProfileTickets* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetProfileTickets*>(
               &_CMsgClientToGCGetProfileTickets_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(CMsgClientToGCGetProfileTickets* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetProfileTickets* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetProfileTickets* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetProfileTickets& from);
  void MergeFrom(const CMsgClientToGCGetProfileTickets& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetProfileTickets* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetProfileTickets)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCSteamProfileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCSteamProfileRequest) */ {
 public:
  CMsgGCSteamProfileRequest();
  virtual ~CMsgGCSteamProfileRequest();

  CMsgGCSteamProfileRequest(const CMsgGCSteamProfileRequest& from);

  inline CMsgGCSteamProfileRequest& operator=(const CMsgGCSteamProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCSteamProfileRequest& default_instance();

  static inline const CMsgGCSteamProfileRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCSteamProfileRequest*>(
               &_CMsgGCSteamProfileRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(CMsgGCSteamProfileRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgGCSteamProfileRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCSteamProfileRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCSteamProfileRequest& from);
  void MergeFrom(const CMsgGCSteamProfileRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCSteamProfileRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCSteamProfileRequest)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCSteamProfileRequestResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCSteamProfileRequestResponse) */ {
 public:
  CMsgGCSteamProfileRequestResponse();
  virtual ~CMsgGCSteamProfileRequestResponse();

  CMsgGCSteamProfileRequestResponse(const CMsgGCSteamProfileRequestResponse& from);

  inline CMsgGCSteamProfileRequestResponse& operator=(const CMsgGCSteamProfileRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCSteamProfileRequestResponse& default_instance();

  static inline const CMsgGCSteamProfileRequestResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCSteamProfileRequestResponse*>(
               &_CMsgGCSteamProfileRequestResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(CMsgGCSteamProfileRequestResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCSteamProfileRequestResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCSteamProfileRequestResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCSteamProfileRequestResponse& from);
  void MergeFrom(const CMsgGCSteamProfileRequestResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCSteamProfileRequestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCSteamProfileRequestResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAClearNotifySuccessfulReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClearNotifySuccessfulReport) */ {
 public:
  CMsgDOTAClearNotifySuccessfulReport();
  virtual ~CMsgDOTAClearNotifySuccessfulReport();

  CMsgDOTAClearNotifySuccessfulReport(const CMsgDOTAClearNotifySuccessfulReport& from);

  inline CMsgDOTAClearNotifySuccessfulReport& operator=(const CMsgDOTAClearNotifySuccessfulReport& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAClearNotifySuccessfulReport& default_instance();

  static inline const CMsgDOTAClearNotifySuccessfulReport* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClearNotifySuccessfulReport*>(
               &_CMsgDOTAClearNotifySuccessfulReport_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(CMsgDOTAClearNotifySuccessfulReport* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAClearNotifySuccessfulReport* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAClearNotifySuccessfulReport* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAClearNotifySuccessfulReport& from);
  void MergeFrom(const CMsgDOTAClearNotifySuccessfulReport& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAClearNotifySuccessfulReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClearNotifySuccessfulReport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAWelcome_LocalizationDigest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAWelcome.LocalizationDigest) */ {
 public:
  CMsgDOTAWelcome_LocalizationDigest();
  virtual ~CMsgDOTAWelcome_LocalizationDigest();

  CMsgDOTAWelcome_LocalizationDigest(const CMsgDOTAWelcome_LocalizationDigest& from);

  inline CMsgDOTAWelcome_LocalizationDigest& operator=(const CMsgDOTAWelcome_LocalizationDigest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAWelcome_LocalizationDigest& default_instance();

  static inline const CMsgDOTAWelcome_LocalizationDigest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAWelcome_LocalizationDigest*>(
               &_CMsgDOTAWelcome_LocalizationDigest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(CMsgDOTAWelcome_LocalizationDigest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAWelcome_LocalizationDigest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAWelcome_LocalizationDigest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAWelcome_LocalizationDigest& from);
  void MergeFrom(const CMsgDOTAWelcome_LocalizationDigest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAWelcome_LocalizationDigest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string context = 1;
  bool has_context() const;
  void clear_context();
  static const int kContextFieldNumber = 1;
  const ::std::string& context() const;
  void set_context(const ::std::string& value);
  #if LANG_CXX11
  void set_context(::std::string&& value);
  #endif
  void set_context(const char* value);
  void set_context(const char* value, size_t size);
  ::std::string* mutable_context();
  ::std::string* release_context();
  void set_allocated_context(::std::string* context);

  // optional .proto.dota.CMsgSHA1Digest english_language_file_sha1 = 2;
  bool has_english_language_file_sha1() const;
  void clear_english_language_file_sha1();
  static const int kEnglishLanguageFileSha1FieldNumber = 2;
  const ::proto::dota::CMsgSHA1Digest& english_language_file_sha1() const;
  ::proto::dota::CMsgSHA1Digest* mutable_english_language_file_sha1();
  ::proto::dota::CMsgSHA1Digest* release_english_language_file_sha1();
  void set_allocated_english_language_file_sha1(::proto::dota::CMsgSHA1Digest* english_language_file_sha1);

  // optional .proto.dota.CMsgSHA1Digest client_language_file_sha1 = 3;
  bool has_client_language_file_sha1() const;
  void clear_client_language_file_sha1();
  static const int kClientLanguageFileSha1FieldNumber = 3;
  const ::proto::dota::CMsgSHA1Digest& client_language_file_sha1() const;
  ::proto::dota::CMsgSHA1Digest* mutable_client_language_file_sha1();
  ::proto::dota::CMsgSHA1Digest* release_client_language_file_sha1();
  void set_allocated_client_language_file_sha1(::proto::dota::CMsgSHA1Digest* client_language_file_sha1);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAWelcome.LocalizationDigest)
 private:
  void set_has_context();
  void clear_has_context();
  void set_has_english_language_file_sha1();
  void clear_has_english_language_file_sha1();
  void set_has_client_language_file_sha1();
  void clear_has_client_language_file_sha1();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr context_;
  ::proto::dota::CMsgSHA1Digest* english_language_file_sha1_;
  ::proto::dota::CMsgSHA1Digest* client_language_file_sha1_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAWelcome_CExtraMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAWelcome.CExtraMsg) */ {
 public:
  CMsgDOTAWelcome_CExtraMsg();
  virtual ~CMsgDOTAWelcome_CExtraMsg();

  CMsgDOTAWelcome_CExtraMsg(const CMsgDOTAWelcome_CExtraMsg& from);

  inline CMsgDOTAWelcome_CExtraMsg& operator=(const CMsgDOTAWelcome_CExtraMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAWelcome_CExtraMsg& default_instance();

  static inline const CMsgDOTAWelcome_CExtraMsg* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAWelcome_CExtraMsg*>(
               &_CMsgDOTAWelcome_CExtraMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(CMsgDOTAWelcome_CExtraMsg* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAWelcome_CExtraMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAWelcome_CExtraMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAWelcome_CExtraMsg& from);
  void MergeFrom(const CMsgDOTAWelcome_CExtraMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAWelcome_CExtraMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes contents = 2;
  bool has_contents() const;
  void clear_contents();
  static const int kContentsFieldNumber = 2;
  const ::std::string& contents() const;
  void set_contents(const ::std::string& value);
  #if LANG_CXX11
  void set_contents(::std::string&& value);
  #endif
  void set_contents(const char* value);
  void set_contents(const void* value, size_t size);
  ::std::string* mutable_contents();
  ::std::string* release_contents();
  void set_allocated_contents(::std::string* contents);

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAWelcome.CExtraMsg)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_contents();
  void clear_has_contents();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr contents_;
  ::google::protobuf::uint32 id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAWelcome : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAWelcome) */ {
 public:
  CMsgDOTAWelcome();
  virtual ~CMsgDOTAWelcome();

  CMsgDOTAWelcome(const CMsgDOTAWelcome& from);

  inline CMsgDOTAWelcome& operator=(const CMsgDOTAWelcome& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAWelcome& default_instance();

  static inline const CMsgDOTAWelcome* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAWelcome*>(
               &_CMsgDOTAWelcome_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(CMsgDOTAWelcome* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAWelcome* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAWelcome* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAWelcome& from);
  void MergeFrom(const CMsgDOTAWelcome& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAWelcome* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAWelcome_LocalizationDigest LocalizationDigest;
  typedef CMsgDOTAWelcome_CExtraMsg CExtraMsg;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAWelcome.LocalizationDigest localization_digests = 23;
  int localization_digests_size() const;
  void clear_localization_digests();
  static const int kLocalizationDigestsFieldNumber = 23;
  const ::proto::dota::CMsgDOTAWelcome_LocalizationDigest& localization_digests(int index) const;
  ::proto::dota::CMsgDOTAWelcome_LocalizationDigest* mutable_localization_digests(int index);
  ::proto::dota::CMsgDOTAWelcome_LocalizationDigest* add_localization_digests();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_LocalizationDigest >*
      mutable_localization_digests();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_LocalizationDigest >&
      localization_digests() const;

  // repeated .proto.dota.CMsgDOTAWelcome.CExtraMsg extra_messages = 26;
  int extra_messages_size() const;
  void clear_extra_messages();
  static const int kExtraMessagesFieldNumber = 26;
  const ::proto::dota::CMsgDOTAWelcome_CExtraMsg& extra_messages(int index) const;
  ::proto::dota::CMsgDOTAWelcome_CExtraMsg* mutable_extra_messages(int index);
  ::proto::dota::CMsgDOTAWelcome_CExtraMsg* add_extra_messages();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_CExtraMsg >*
      mutable_extra_messages();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_CExtraMsg >&
      extra_messages() const;

  // optional uint32 store_item_hash = 5;
  bool has_store_item_hash() const;
  void clear_store_item_hash();
  static const int kStoreItemHashFieldNumber = 5;
  ::google::protobuf::uint32 store_item_hash() const;
  void set_store_item_hash(::google::protobuf::uint32 value);

  // optional uint32 timeplayedconsecutively = 6;
  bool has_timeplayedconsecutively() const;
  void clear_timeplayedconsecutively();
  static const int kTimeplayedconsecutivelyFieldNumber = 6;
  ::google::protobuf::uint32 timeplayedconsecutively() const;
  void set_timeplayedconsecutively(::google::protobuf::uint32 value);

  // optional .proto.dota.PartnerAccountType partner_account_type = 8 [default = PARTNER_NONE];
  bool has_partner_account_type() const;
  void clear_partner_account_type();
  static const int kPartnerAccountTypeFieldNumber = 8;
  ::proto::dota::PartnerAccountType partner_account_type() const;
  void set_partner_account_type(::proto::dota::PartnerAccountType value);

  // optional uint32 banned_word_list_word_id = 9;
  bool has_banned_word_list_word_id() const;
  void clear_banned_word_list_word_id();
  static const int kBannedWordListWordIdFieldNumber = 9;
  ::google::protobuf::uint32 banned_word_list_word_id() const;
  void set_banned_word_list_word_id(::google::protobuf::uint32 value);

  // optional uint32 partner_account_state = 11;
  bool has_partner_account_state() const;
  void clear_partner_account_state();
  static const int kPartnerAccountStateFieldNumber = 11;
  ::google::protobuf::uint32 partner_account_state() const;
  void set_partner_account_state(::google::protobuf::uint32 value);

  // optional uint32 last_time_played = 12;
  bool has_last_time_played() const;
  void clear_last_time_played();
  static const int kLastTimePlayedFieldNumber = 12;
  ::google::protobuf::uint32 last_time_played() const;
  void set_last_time_played(::google::protobuf::uint32 value);

  // optional uint32 last_ip_address = 13;
  bool has_last_ip_address() const;
  void clear_last_ip_address();
  static const int kLastIpAddressFieldNumber = 13;
  ::google::protobuf::uint32 last_ip_address() const;
  void set_last_ip_address(::google::protobuf::uint32 value);

  // optional uint32 shutdownlawterminateminutes = 15;
  bool has_shutdownlawterminateminutes() const;
  void clear_shutdownlawterminateminutes();
  static const int kShutdownlawterminateminutesFieldNumber = 15;
  ::google::protobuf::uint32 shutdownlawterminateminutes() const;
  void set_shutdownlawterminateminutes(::google::protobuf::uint32 value);

  // optional uint32 banned_word_list_version = 16;
  bool has_banned_word_list_version() const;
  void clear_banned_word_list_version();
  static const int kBannedWordListVersionFieldNumber = 16;
  ::google::protobuf::uint32 banned_word_list_version() const;
  void set_banned_word_list_version(::google::protobuf::uint32 value);

  // optional bool allow_3rd_party_match_history = 7;
  bool has_allow_3rd_party_match_history() const;
  void clear_allow_3rd_party_match_history();
  static const int kAllow3RdPartyMatchHistoryFieldNumber = 7;
  bool allow_3rd_party_match_history() const;
  void set_allow_3rd_party_match_history(bool value);

  // optional bool profile_private = 17;
  bool has_profile_private() const;
  void clear_profile_private();
  static const int kProfilePrivateFieldNumber = 17;
  bool profile_private() const;
  void set_profile_private(bool value);

  // optional bool should_request_player_origin = 20;
  bool has_should_request_player_origin() const;
  void clear_should_request_player_origin();
  static const int kShouldRequestPlayerOriginFieldNumber = 20;
  bool should_request_player_origin() const;
  void set_should_request_player_origin(bool value);

  // optional bool is_perfect_world_test_account = 24;
  bool has_is_perfect_world_test_account() const;
  void clear_is_perfect_world_test_account();
  static const int kIsPerfectWorldTestAccountFieldNumber = 24;
  bool is_perfect_world_test_account() const;
  void set_is_perfect_world_test_account(bool value);

  // optional uint32 currency = 18;
  bool has_currency() const;
  void clear_currency();
  static const int kCurrencyFieldNumber = 18;
  ::google::protobuf::uint32 currency() const;
  void set_currency(::google::protobuf::uint32 value);

  // optional uint32 bang_no = 19;
  bool has_bang_no() const;
  void clear_bang_no();
  static const int kBangNoFieldNumber = 19;
  ::google::protobuf::uint32 bang_no() const;
  void set_bang_no(::google::protobuf::uint32 value);

  // optional uint64 compendium_unlocks = 21;
  bool has_compendium_unlocks() const;
  void clear_compendium_unlocks();
  static const int kCompendiumUnlocksFieldNumber = 21;
  ::google::protobuf::uint64 compendium_unlocks() const;
  void set_compendium_unlocks(::google::protobuf::uint64 value);

  // optional uint32 gc_socache_file_version = 22;
  bool has_gc_socache_file_version() const;
  void clear_gc_socache_file_version();
  static const int kGcSocacheFileVersionFieldNumber = 22;
  ::google::protobuf::uint32 gc_socache_file_version() const;
  void set_gc_socache_file_version(::google::protobuf::uint32 value);

  // optional .proto.dota.EEvent active_event = 28 [default = EVENT_ID_NONE];
  bool has_active_event() const;
  void clear_active_event();
  static const int kActiveEventFieldNumber = 28;
  ::proto::dota::EEvent active_event() const;
  void set_active_event(::proto::dota::EEvent value);

  // optional uint64 minimum_recent_item_id = 27;
  bool has_minimum_recent_item_id() const;
  void clear_minimum_recent_item_id();
  static const int kMinimumRecentItemIdFieldNumber = 27;
  ::google::protobuf::uint64 minimum_recent_item_id() const;
  void set_minimum_recent_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAWelcome)
 private:
  void set_has_store_item_hash();
  void clear_has_store_item_hash();
  void set_has_timeplayedconsecutively();
  void clear_has_timeplayedconsecutively();
  void set_has_allow_3rd_party_match_history();
  void clear_has_allow_3rd_party_match_history();
  void set_has_partner_account_type();
  void clear_has_partner_account_type();
  void set_has_banned_word_list_word_id();
  void clear_has_banned_word_list_word_id();
  void set_has_partner_account_state();
  void clear_has_partner_account_state();
  void set_has_last_time_played();
  void clear_has_last_time_played();
  void set_has_last_ip_address();
  void clear_has_last_ip_address();
  void set_has_shutdownlawterminateminutes();
  void clear_has_shutdownlawterminateminutes();
  void set_has_banned_word_list_version();
  void clear_has_banned_word_list_version();
  void set_has_profile_private();
  void clear_has_profile_private();
  void set_has_currency();
  void clear_has_currency();
  void set_has_bang_no();
  void clear_has_bang_no();
  void set_has_should_request_player_origin();
  void clear_has_should_request_player_origin();
  void set_has_compendium_unlocks();
  void clear_has_compendium_unlocks();
  void set_has_gc_socache_file_version();
  void clear_has_gc_socache_file_version();
  void set_has_is_perfect_world_test_account();
  void clear_has_is_perfect_world_test_account();
  void set_has_minimum_recent_item_id();
  void clear_has_minimum_recent_item_id();
  void set_has_active_event();
  void clear_has_active_event();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_LocalizationDigest > localization_digests_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_CExtraMsg > extra_messages_;
  ::google::protobuf::uint32 store_item_hash_;
  ::google::protobuf::uint32 timeplayedconsecutively_;
  int partner_account_type_;
  ::google::protobuf::uint32 banned_word_list_word_id_;
  ::google::protobuf::uint32 partner_account_state_;
  ::google::protobuf::uint32 last_time_played_;
  ::google::protobuf::uint32 last_ip_address_;
  ::google::protobuf::uint32 shutdownlawterminateminutes_;
  ::google::protobuf::uint32 banned_word_list_version_;
  bool allow_3rd_party_match_history_;
  bool profile_private_;
  bool should_request_player_origin_;
  bool is_perfect_world_test_account_;
  ::google::protobuf::uint32 currency_;
  ::google::protobuf::uint32 bang_no_;
  ::google::protobuf::uint64 compendium_unlocks_;
  ::google::protobuf::uint32 gc_socache_file_version_;
  int active_event_;
  ::google::protobuf::uint64 minimum_recent_item_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CSODOTAGameHeroFavorites : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSODOTAGameHeroFavorites) */ {
 public:
  CSODOTAGameHeroFavorites();
  virtual ~CSODOTAGameHeroFavorites();

  CSODOTAGameHeroFavorites(const CSODOTAGameHeroFavorites& from);

  inline CSODOTAGameHeroFavorites& operator=(const CSODOTAGameHeroFavorites& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSODOTAGameHeroFavorites& default_instance();

  static inline const CSODOTAGameHeroFavorites* internal_default_instance() {
    return reinterpret_cast<const CSODOTAGameHeroFavorites*>(
               &_CSODOTAGameHeroFavorites_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(CSODOTAGameHeroFavorites* other);

  // implements Message ----------------------------------------------

  inline CSODOTAGameHeroFavorites* New() const PROTOBUF_FINAL { return New(NULL); }

  CSODOTAGameHeroFavorites* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSODOTAGameHeroFavorites& from);
  void MergeFrom(const CSODOTAGameHeroFavorites& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSODOTAGameHeroFavorites* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1 [(.proto.dota.key_field) = true];
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2 [(.proto.dota.key_field) = true];
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CSODOTAGameHeroFavorites)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_hero_id();
  void clear_has_hero_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAHeroFavoritesAdd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHeroFavoritesAdd) */ {
 public:
  CMsgDOTAHeroFavoritesAdd();
  virtual ~CMsgDOTAHeroFavoritesAdd();

  CMsgDOTAHeroFavoritesAdd(const CMsgDOTAHeroFavoritesAdd& from);

  inline CMsgDOTAHeroFavoritesAdd& operator=(const CMsgDOTAHeroFavoritesAdd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHeroFavoritesAdd& default_instance();

  static inline const CMsgDOTAHeroFavoritesAdd* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHeroFavoritesAdd*>(
               &_CMsgDOTAHeroFavoritesAdd_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(CMsgDOTAHeroFavoritesAdd* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAHeroFavoritesAdd* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAHeroFavoritesAdd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAHeroFavoritesAdd& from);
  void MergeFrom(const CMsgDOTAHeroFavoritesAdd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAHeroFavoritesAdd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHeroFavoritesAdd)
 private:
  void set_has_hero_id();
  void clear_has_hero_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAHeroFavoritesRemove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHeroFavoritesRemove) */ {
 public:
  CMsgDOTAHeroFavoritesRemove();
  virtual ~CMsgDOTAHeroFavoritesRemove();

  CMsgDOTAHeroFavoritesRemove(const CMsgDOTAHeroFavoritesRemove& from);

  inline CMsgDOTAHeroFavoritesRemove& operator=(const CMsgDOTAHeroFavoritesRemove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHeroFavoritesRemove& default_instance();

  static inline const CMsgDOTAHeroFavoritesRemove* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHeroFavoritesRemove*>(
               &_CMsgDOTAHeroFavoritesRemove_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(CMsgDOTAHeroFavoritesRemove* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAHeroFavoritesRemove* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAHeroFavoritesRemove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAHeroFavoritesRemove& from);
  void MergeFrom(const CMsgDOTAHeroFavoritesRemove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAHeroFavoritesRemove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHeroFavoritesRemove)
 private:
  void set_has_hero_id();
  void clear_has_hero_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetShowcaseHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSetShowcaseHero) */ {
 public:
  CMsgSetShowcaseHero();
  virtual ~CMsgSetShowcaseHero();

  CMsgSetShowcaseHero(const CMsgSetShowcaseHero& from);

  inline CMsgSetShowcaseHero& operator=(const CMsgSetShowcaseHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetShowcaseHero& default_instance();

  static inline const CMsgSetShowcaseHero* internal_default_instance() {
    return reinterpret_cast<const CMsgSetShowcaseHero*>(
               &_CMsgSetShowcaseHero_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(CMsgSetShowcaseHero* other);

  // implements Message ----------------------------------------------

  inline CMsgSetShowcaseHero* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetShowcaseHero* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetShowcaseHero& from);
  void MergeFrom(const CMsgSetShowcaseHero& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetShowcaseHero* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 showcase_hero_id = 1;
  bool has_showcase_hero_id() const;
  void clear_showcase_hero_id();
  static const int kShowcaseHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 showcase_hero_id() const;
  void set_showcase_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSetShowcaseHero)
 private:
  void set_has_showcase_hero_id();
  void clear_has_showcase_hero_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 showcase_hero_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetFeaturedItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSetFeaturedItems) */ {
 public:
  CMsgSetFeaturedItems();
  virtual ~CMsgSetFeaturedItems();

  CMsgSetFeaturedItems(const CMsgSetFeaturedItems& from);

  inline CMsgSetFeaturedItems& operator=(const CMsgSetFeaturedItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetFeaturedItems& default_instance();

  static inline const CMsgSetFeaturedItems* internal_default_instance() {
    return reinterpret_cast<const CMsgSetFeaturedItems*>(
               &_CMsgSetFeaturedItems_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(CMsgSetFeaturedItems* other);

  // implements Message ----------------------------------------------

  inline CMsgSetFeaturedItems* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetFeaturedItems* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetFeaturedItems& from);
  void MergeFrom(const CMsgSetFeaturedItems& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetFeaturedItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 featured_item_id = 1;
  int featured_item_id_size() const;
  void clear_featured_item_id();
  static const int kFeaturedItemIdFieldNumber = 1;
  ::google::protobuf::uint64 featured_item_id(int index) const;
  void set_featured_item_id(int index, ::google::protobuf::uint64 value);
  void add_featured_item_id(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      featured_item_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_featured_item_id();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSetFeaturedItems)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > featured_item_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAFeaturedItems : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFeaturedItems) */ {
 public:
  CMsgDOTAFeaturedItems();
  virtual ~CMsgDOTAFeaturedItems();

  CMsgDOTAFeaturedItems(const CMsgDOTAFeaturedItems& from);

  inline CMsgDOTAFeaturedItems& operator=(const CMsgDOTAFeaturedItems& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFeaturedItems& default_instance();

  static inline const CMsgDOTAFeaturedItems* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFeaturedItems*>(
               &_CMsgDOTAFeaturedItems_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(CMsgDOTAFeaturedItems* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAFeaturedItems* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAFeaturedItems* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAFeaturedItems& from);
  void MergeFrom(const CMsgDOTAFeaturedItems& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAFeaturedItems* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 featured_item_id = 2;
  int featured_item_id_size() const;
  void clear_featured_item_id();
  static const int kFeaturedItemIdFieldNumber = 2;
  ::google::protobuf::uint64 featured_item_id(int index) const;
  void set_featured_item_id(int index, ::google::protobuf::uint64 value);
  void add_featured_item_id(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      featured_item_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_featured_item_id();

  // repeated bytes object_data = 3;
  int object_data_size() const;
  void clear_object_data();
  static const int kObjectDataFieldNumber = 3;
  const ::std::string& object_data(int index) const;
  ::std::string* mutable_object_data(int index);
  void set_object_data(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_object_data(int index, ::std::string&& value);
  #endif
  void set_object_data(int index, const char* value);
  void set_object_data(int index, const void* value, size_t size);
  ::std::string* add_object_data();
  void add_object_data(const ::std::string& value);
  #if LANG_CXX11
  void add_object_data(::std::string&& value);
  #endif
  void add_object_data(const char* value);
  void add_object_data(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& object_data() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_object_data();

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFeaturedItems)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > featured_item_id_;
  ::google::protobuf::RepeatedPtrField< ::std::string> object_data_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgRequestLeagueInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRequestLeagueInfo) */ {
 public:
  CMsgRequestLeagueInfo();
  virtual ~CMsgRequestLeagueInfo();

  CMsgRequestLeagueInfo(const CMsgRequestLeagueInfo& from);

  inline CMsgRequestLeagueInfo& operator=(const CMsgRequestLeagueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestLeagueInfo& default_instance();

  static inline const CMsgRequestLeagueInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestLeagueInfo*>(
               &_CMsgRequestLeagueInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(CMsgRequestLeagueInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgRequestLeagueInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgRequestLeagueInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgRequestLeagueInfo& from);
  void MergeFrom(const CMsgRequestLeagueInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgRequestLeagueInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRequestLeagueInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDynamicLeagueData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CDynamicLeagueData) */ {
 public:
  CDynamicLeagueData();
  virtual ~CDynamicLeagueData();

  CDynamicLeagueData(const CDynamicLeagueData& from);

  inline CDynamicLeagueData& operator=(const CDynamicLeagueData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDynamicLeagueData& default_instance();

  static inline const CDynamicLeagueData* internal_default_instance() {
    return reinterpret_cast<const CDynamicLeagueData*>(
               &_CDynamicLeagueData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(CDynamicLeagueData* other);

  // implements Message ----------------------------------------------

  inline CDynamicLeagueData* New() const PROTOBUF_FINAL { return New(NULL); }

  CDynamicLeagueData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDynamicLeagueData& from);
  void MergeFrom(const CDynamicLeagueData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDynamicLeagueData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional fixed32 last_match_time = 2;
  bool has_last_match_time() const;
  void clear_last_match_time();
  static const int kLastMatchTimeFieldNumber = 2;
  ::google::protobuf::uint32 last_match_time() const;
  void set_last_match_time(::google::protobuf::uint32 value);

  // optional uint32 prize_pool_usd = 3;
  bool has_prize_pool_usd() const;
  void clear_prize_pool_usd();
  static const int kPrizePoolUsdFieldNumber = 3;
  ::google::protobuf::uint32 prize_pool_usd() const;
  void set_prize_pool_usd(::google::protobuf::uint32 value);

  // optional bool has_live_matches = 4;
  bool has_has_live_matches() const;
  void clear_has_live_matches();
  static const int kHasLiveMatchesFieldNumber = 4;
  bool has_live_matches() const;
  void set_has_live_matches(bool value);

  // optional bool is_compendium_public = 5;
  bool has_is_compendium_public() const;
  void clear_is_compendium_public();
  static const int kIsCompendiumPublicFieldNumber = 5;
  bool is_compendium_public() const;
  void set_is_compendium_public(bool value);

  // optional uint32 compendium_version = 6;
  bool has_compendium_version() const;
  void clear_compendium_version();
  static const int kCompendiumVersionFieldNumber = 6;
  ::google::protobuf::uint32 compendium_version() const;
  void set_compendium_version(::google::protobuf::uint32 value);

  // optional uint32 compendium_content_version = 7;
  bool has_compendium_content_version() const;
  void clear_compendium_content_version();
  static const int kCompendiumContentVersionFieldNumber = 7;
  ::google::protobuf::uint32 compendium_content_version() const;
  void set_compendium_content_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CDynamicLeagueData)
 private:
  void set_has_league_id();
  void clear_has_league_id();
  void set_has_last_match_time();
  void clear_has_last_match_time();
  void set_has_prize_pool_usd();
  void clear_has_prize_pool_usd();
  void set_has_has_live_matches();
  void clear_has_has_live_matches();
  void set_has_is_compendium_public();
  void clear_has_is_compendium_public();
  void set_has_compendium_version();
  void clear_has_compendium_version();
  void set_has_compendium_content_version();
  void clear_has_compendium_content_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 last_match_time_;
  ::google::protobuf::uint32 prize_pool_usd_;
  bool has_live_matches_;
  bool is_compendium_public_;
  ::google::protobuf::uint32 compendium_version_;
  ::google::protobuf::uint32 compendium_content_version_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CStaticLeagueData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CStaticLeagueData) */ {
 public:
  CStaticLeagueData();
  virtual ~CStaticLeagueData();

  CStaticLeagueData(const CStaticLeagueData& from);

  inline CStaticLeagueData& operator=(const CStaticLeagueData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CStaticLeagueData& default_instance();

  static inline const CStaticLeagueData* internal_default_instance() {
    return reinterpret_cast<const CStaticLeagueData*>(
               &_CStaticLeagueData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(CStaticLeagueData* other);

  // implements Message ----------------------------------------------

  inline CStaticLeagueData* New() const PROTOBUF_FINAL { return New(NULL); }

  CStaticLeagueData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CStaticLeagueData& from);
  void MergeFrom(const CStaticLeagueData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CStaticLeagueData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string description = 3;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string banner_name = 4;
  bool has_banner_name() const;
  void clear_banner_name();
  static const int kBannerNameFieldNumber = 4;
  const ::std::string& banner_name() const;
  void set_banner_name(const ::std::string& value);
  #if LANG_CXX11
  void set_banner_name(::std::string&& value);
  #endif
  void set_banner_name(const char* value);
  void set_banner_name(const char* value, size_t size);
  ::std::string* mutable_banner_name();
  ::std::string* release_banner_name();
  void set_allocated_banner_name(::std::string* banner_name);

  // optional string itemdef_name = 5;
  bool has_itemdef_name() const;
  void clear_itemdef_name();
  static const int kItemdefNameFieldNumber = 5;
  const ::std::string& itemdef_name() const;
  void set_itemdef_name(const ::std::string& value);
  #if LANG_CXX11
  void set_itemdef_name(::std::string&& value);
  #endif
  void set_itemdef_name(const char* value);
  void set_itemdef_name(const char* value, size_t size);
  ::std::string* mutable_itemdef_name();
  ::std::string* release_itemdef_name();
  void set_allocated_itemdef_name(::std::string* itemdef_name);

  // optional string url = 6;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 6;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string loading_screen_name = 9;
  bool has_loading_screen_name() const;
  void clear_loading_screen_name();
  static const int kLoadingScreenNameFieldNumber = 9;
  const ::std::string& loading_screen_name() const;
  void set_loading_screen_name(const ::std::string& value);
  #if LANG_CXX11
  void set_loading_screen_name(::std::string&& value);
  #endif
  void set_loading_screen_name(const char* value);
  void set_loading_screen_name(const char* value, size_t size);
  ::std::string* mutable_loading_screen_name();
  ::std::string* release_loading_screen_name();
  void set_allocated_loading_screen_name(::std::string* loading_screen_name);

  // optional string organizer = 15;
  bool has_organizer() const;
  void clear_organizer();
  static const int kOrganizerFieldNumber = 15;
  const ::std::string& organizer() const;
  void set_organizer(const ::std::string& value);
  #if LANG_CXX11
  void set_organizer(::std::string&& value);
  #endif
  void set_organizer(const char* value);
  void set_organizer(const char* value, size_t size);
  ::std::string* mutable_organizer();
  ::std::string* release_organizer();
  void set_allocated_organizer(::std::string* organizer);

  // optional string location = 18;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 18;
  const ::std::string& location() const;
  void set_location(const ::std::string& value);
  #if LANG_CXX11
  void set_location(::std::string&& value);
  #endif
  void set_location(const char* value);
  void set_location(const char* value, size_t size);
  ::std::string* mutable_location();
  ::std::string* release_location();
  void set_allocated_location(::std::string* location);

  // optional string inventory_image = 19;
  bool has_inventory_image() const;
  void clear_inventory_image();
  static const int kInventoryImageFieldNumber = 19;
  const ::std::string& inventory_image() const;
  void set_inventory_image(const ::std::string& value);
  #if LANG_CXX11
  void set_inventory_image(::std::string&& value);
  #endif
  void set_inventory_image(const char* value);
  void set_inventory_image(const char* value, size_t size);
  ::std::string* mutable_inventory_image();
  ::std::string* release_inventory_image();
  void set_allocated_inventory_image(::std::string* inventory_image);

  // optional string square_image = 20;
  bool has_square_image() const;
  void clear_square_image();
  static const int kSquareImageFieldNumber = 20;
  const ::std::string& square_image() const;
  void set_square_image(const ::std::string& value);
  #if LANG_CXX11
  void set_square_image(::std::string&& value);
  #endif
  void set_square_image(const char* value);
  void set_square_image(const char* value, size_t size);
  ::std::string* mutable_square_image();
  ::std::string* release_square_image();
  void set_allocated_square_image(::std::string* square_image);

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 item_def_index = 7;
  bool has_item_def_index() const;
  void clear_item_def_index();
  static const int kItemDefIndexFieldNumber = 7;
  ::google::protobuf::uint32 item_def_index() const;
  void set_item_def_index(::google::protobuf::uint32 value);

  // optional uint32 hud_skin_item_def_index = 8;
  bool has_hud_skin_item_def_index() const;
  void clear_hud_skin_item_def_index();
  static const int kHudSkinItemDefIndexFieldNumber = 8;
  ::google::protobuf::uint32 hud_skin_item_def_index() const;
  void set_hud_skin_item_def_index(::google::protobuf::uint32 value);

  // optional uint32 base_prize_pool = 10;
  bool has_base_prize_pool() const;
  void clear_base_prize_pool();
  static const int kBasePrizePoolFieldNumber = 10;
  ::google::protobuf::uint32 base_prize_pool() const;
  void set_base_prize_pool(::google::protobuf::uint32 value);

  // optional uint32 sort_order = 12;
  bool has_sort_order() const;
  void clear_sort_order();
  static const int kSortOrderFieldNumber = 12;
  ::google::protobuf::uint32 sort_order() const;
  void set_sort_order(::google::protobuf::uint32 value);

  // optional uint32 tier = 13;
  bool has_tier() const;
  void clear_tier();
  static const int kTierFieldNumber = 13;
  ::google::protobuf::uint32 tier() const;
  void set_tier(::google::protobuf::uint32 value);

  // optional uint32 amateur_region = 14;
  bool has_amateur_region() const;
  void clear_amateur_region();
  static const int kAmateurRegionFieldNumber = 14;
  ::google::protobuf::uint32 amateur_region() const;
  void set_amateur_region(::google::protobuf::uint32 value);

  // optional uint32 start_date = 16;
  bool has_start_date() const;
  void clear_start_date();
  static const int kStartDateFieldNumber = 16;
  ::google::protobuf::uint32 start_date() const;
  void set_start_date(::google::protobuf::uint32 value);

  // optional bool is_major = 11;
  bool has_is_major() const;
  void clear_is_major();
  static const int kIsMajorFieldNumber = 11;
  bool is_major() const;
  void set_is_major(bool value);

  // optional bool battle_pass_rollup = 21;
  bool has_battle_pass_rollup() const;
  void clear_battle_pass_rollup();
  static const int kBattlePassRollupFieldNumber = 21;
  bool battle_pass_rollup() const;
  void set_battle_pass_rollup(bool value);

  // optional uint32 end_date = 17;
  bool has_end_date() const;
  void clear_end_date();
  static const int kEndDateFieldNumber = 17;
  ::google::protobuf::uint32 end_date() const;
  void set_end_date(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CStaticLeagueData)
 private:
  void set_has_league_id();
  void clear_has_league_id();
  void set_has_name();
  void clear_has_name();
  void set_has_description();
  void clear_has_description();
  void set_has_banner_name();
  void clear_has_banner_name();
  void set_has_itemdef_name();
  void clear_has_itemdef_name();
  void set_has_url();
  void clear_has_url();
  void set_has_item_def_index();
  void clear_has_item_def_index();
  void set_has_hud_skin_item_def_index();
  void clear_has_hud_skin_item_def_index();
  void set_has_loading_screen_name();
  void clear_has_loading_screen_name();
  void set_has_base_prize_pool();
  void clear_has_base_prize_pool();
  void set_has_is_major();
  void clear_has_is_major();
  void set_has_sort_order();
  void clear_has_sort_order();
  void set_has_tier();
  void clear_has_tier();
  void set_has_amateur_region();
  void clear_has_amateur_region();
  void set_has_organizer();
  void clear_has_organizer();
  void set_has_start_date();
  void clear_has_start_date();
  void set_has_end_date();
  void clear_has_end_date();
  void set_has_location();
  void clear_has_location();
  void set_has_inventory_image();
  void clear_has_inventory_image();
  void set_has_square_image();
  void clear_has_square_image();
  void set_has_battle_pass_rollup();
  void clear_has_battle_pass_rollup();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr banner_name_;
  ::google::protobuf::internal::ArenaStringPtr itemdef_name_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr loading_screen_name_;
  ::google::protobuf::internal::ArenaStringPtr organizer_;
  ::google::protobuf::internal::ArenaStringPtr location_;
  ::google::protobuf::internal::ArenaStringPtr inventory_image_;
  ::google::protobuf::internal::ArenaStringPtr square_image_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 item_def_index_;
  ::google::protobuf::uint32 hud_skin_item_def_index_;
  ::google::protobuf::uint32 base_prize_pool_;
  ::google::protobuf::uint32 sort_order_;
  ::google::protobuf::uint32 tier_;
  ::google::protobuf::uint32 amateur_region_;
  ::google::protobuf::uint32 start_date_;
  bool is_major_;
  bool battle_pass_rollup_;
  ::google::protobuf::uint32 end_date_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CLeagueData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CLeagueData) */ {
 public:
  CLeagueData();
  virtual ~CLeagueData();

  CLeagueData(const CLeagueData& from);

  inline CLeagueData& operator=(const CLeagueData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CLeagueData& default_instance();

  static inline const CLeagueData* internal_default_instance() {
    return reinterpret_cast<const CLeagueData*>(
               &_CLeagueData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(CLeagueData* other);

  // implements Message ----------------------------------------------

  inline CLeagueData* New() const PROTOBUF_FINAL { return New(NULL); }

  CLeagueData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CLeagueData& from);
  void MergeFrom(const CLeagueData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CLeagueData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CDynamicLeagueData dynamic_data = 1;
  bool has_dynamic_data() const;
  void clear_dynamic_data();
  static const int kDynamicDataFieldNumber = 1;
  const ::proto::dota::CDynamicLeagueData& dynamic_data() const;
  ::proto::dota::CDynamicLeagueData* mutable_dynamic_data();
  ::proto::dota::CDynamicLeagueData* release_dynamic_data();
  void set_allocated_dynamic_data(::proto::dota::CDynamicLeagueData* dynamic_data);

  // optional .proto.dota.CStaticLeagueData static_data = 2;
  bool has_static_data() const;
  void clear_static_data();
  static const int kStaticDataFieldNumber = 2;
  const ::proto::dota::CStaticLeagueData& static_data() const;
  ::proto::dota::CStaticLeagueData* mutable_static_data();
  ::proto::dota::CStaticLeagueData* release_static_data();
  void set_allocated_static_data(::proto::dota::CStaticLeagueData* static_data);

  // optional bool is_owned = 3;
  bool has_is_owned() const;
  void clear_is_owned();
  static const int kIsOwnedFieldNumber = 3;
  bool is_owned() const;
  void set_is_owned(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CLeagueData)
 private:
  void set_has_dynamic_data();
  void clear_has_dynamic_data();
  void set_has_static_data();
  void clear_has_static_data();
  void set_has_is_owned();
  void clear_has_is_owned();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CDynamicLeagueData* dynamic_data_;
  ::proto::dota::CStaticLeagueData* static_data_;
  bool is_owned_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgResponseLeagueInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgResponseLeagueInfo) */ {
 public:
  CMsgResponseLeagueInfo();
  virtual ~CMsgResponseLeagueInfo();

  CMsgResponseLeagueInfo(const CMsgResponseLeagueInfo& from);

  inline CMsgResponseLeagueInfo& operator=(const CMsgResponseLeagueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgResponseLeagueInfo& default_instance();

  static inline const CMsgResponseLeagueInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgResponseLeagueInfo*>(
               &_CMsgResponseLeagueInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(CMsgResponseLeagueInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgResponseLeagueInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgResponseLeagueInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgResponseLeagueInfo& from);
  void MergeFrom(const CMsgResponseLeagueInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgResponseLeagueInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CDynamicLeagueData leagues = 1;
  int leagues_size() const;
  void clear_leagues();
  static const int kLeaguesFieldNumber = 1;
  const ::proto::dota::CDynamicLeagueData& leagues(int index) const;
  ::proto::dota::CDynamicLeagueData* mutable_leagues(int index);
  ::proto::dota::CDynamicLeagueData* add_leagues();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDynamicLeagueData >*
      mutable_leagues();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDynamicLeagueData >&
      leagues() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgResponseLeagueInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CDynamicLeagueData > leagues_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchVotes_PlayerVote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAMatchVotes.PlayerVote) */ {
 public:
  CMsgDOTAMatchVotes_PlayerVote();
  virtual ~CMsgDOTAMatchVotes_PlayerVote();

  CMsgDOTAMatchVotes_PlayerVote(const CMsgDOTAMatchVotes_PlayerVote& from);

  inline CMsgDOTAMatchVotes_PlayerVote& operator=(const CMsgDOTAMatchVotes_PlayerVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchVotes_PlayerVote& default_instance();

  static inline const CMsgDOTAMatchVotes_PlayerVote* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAMatchVotes_PlayerVote*>(
               &_CMsgDOTAMatchVotes_PlayerVote_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(CMsgDOTAMatchVotes_PlayerVote* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAMatchVotes_PlayerVote* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAMatchVotes_PlayerVote* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAMatchVotes_PlayerVote& from);
  void MergeFrom(const CMsgDOTAMatchVotes_PlayerVote& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAMatchVotes_PlayerVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 vote = 2;
  bool has_vote() const;
  void clear_vote();
  static const int kVoteFieldNumber = 2;
  ::google::protobuf::uint32 vote() const;
  void set_vote(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAMatchVotes.PlayerVote)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_vote();
  void clear_has_vote();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 vote_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchVotes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAMatchVotes) */ {
 public:
  CMsgDOTAMatchVotes();
  virtual ~CMsgDOTAMatchVotes();

  CMsgDOTAMatchVotes(const CMsgDOTAMatchVotes& from);

  inline CMsgDOTAMatchVotes& operator=(const CMsgDOTAMatchVotes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchVotes& default_instance();

  static inline const CMsgDOTAMatchVotes* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAMatchVotes*>(
               &_CMsgDOTAMatchVotes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(CMsgDOTAMatchVotes* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAMatchVotes* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAMatchVotes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAMatchVotes& from);
  void MergeFrom(const CMsgDOTAMatchVotes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAMatchVotes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAMatchVotes_PlayerVote PlayerVote;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAMatchVotes.PlayerVote votes = 2;
  int votes_size() const;
  void clear_votes();
  static const int kVotesFieldNumber = 2;
  const ::proto::dota::CMsgDOTAMatchVotes_PlayerVote& votes(int index) const;
  ::proto::dota::CMsgDOTAMatchVotes_PlayerVote* mutable_votes(int index);
  ::proto::dota::CMsgDOTAMatchVotes_PlayerVote* add_votes();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatchVotes_PlayerVote >*
      mutable_votes();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatchVotes_PlayerVote >&
      votes() const;

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAMatchVotes)
 private:
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatchVotes_PlayerVote > votes_;
  ::google::protobuf::uint64 match_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgCastMatchVote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgCastMatchVote) */ {
 public:
  CMsgCastMatchVote();
  virtual ~CMsgCastMatchVote();

  CMsgCastMatchVote(const CMsgCastMatchVote& from);

  inline CMsgCastMatchVote& operator=(const CMsgCastMatchVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCastMatchVote& default_instance();

  static inline const CMsgCastMatchVote* internal_default_instance() {
    return reinterpret_cast<const CMsgCastMatchVote*>(
               &_CMsgCastMatchVote_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(CMsgCastMatchVote* other);

  // implements Message ----------------------------------------------

  inline CMsgCastMatchVote* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgCastMatchVote* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgCastMatchVote& from);
  void MergeFrom(const CMsgCastMatchVote& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgCastMatchVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional .proto.dota.DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
  bool has_vote() const;
  void clear_vote();
  static const int kVoteFieldNumber = 2;
  ::proto::dota::DOTAMatchVote vote() const;
  void set_vote(::proto::dota::DOTAMatchVote value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgCastMatchVote)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_vote();
  void clear_has_vote();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int vote_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgRetrieveMatchVote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRetrieveMatchVote) */ {
 public:
  CMsgRetrieveMatchVote();
  virtual ~CMsgRetrieveMatchVote();

  CMsgRetrieveMatchVote(const CMsgRetrieveMatchVote& from);

  inline CMsgRetrieveMatchVote& operator=(const CMsgRetrieveMatchVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRetrieveMatchVote& default_instance();

  static inline const CMsgRetrieveMatchVote* internal_default_instance() {
    return reinterpret_cast<const CMsgRetrieveMatchVote*>(
               &_CMsgRetrieveMatchVote_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(CMsgRetrieveMatchVote* other);

  // implements Message ----------------------------------------------

  inline CMsgRetrieveMatchVote* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgRetrieveMatchVote* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgRetrieveMatchVote& from);
  void MergeFrom(const CMsgRetrieveMatchVote& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgRetrieveMatchVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 incremental = 2;
  bool has_incremental() const;
  void clear_incremental();
  static const int kIncrementalFieldNumber = 2;
  ::google::protobuf::uint32 incremental() const;
  void set_incremental(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRetrieveMatchVote)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_incremental();
  void clear_has_incremental();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 incremental_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgMatchVoteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgMatchVoteResponse) */ {
 public:
  CMsgMatchVoteResponse();
  virtual ~CMsgMatchVoteResponse();

  CMsgMatchVoteResponse(const CMsgMatchVoteResponse& from);

  inline CMsgMatchVoteResponse& operator=(const CMsgMatchVoteResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchVoteResponse& default_instance();

  static inline const CMsgMatchVoteResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchVoteResponse*>(
               &_CMsgMatchVoteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(CMsgMatchVoteResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgMatchVoteResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMatchVoteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMatchVoteResponse& from);
  void MergeFrom(const CMsgMatchVoteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMatchVoteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
  bool has_vote() const;
  void clear_vote();
  static const int kVoteFieldNumber = 2;
  ::proto::dota::DOTAMatchVote vote() const;
  void set_vote(::proto::dota::DOTAMatchVote value);

  // optional uint32 positive_votes = 3;
  bool has_positive_votes() const;
  void clear_positive_votes();
  static const int kPositiveVotesFieldNumber = 3;
  ::google::protobuf::uint32 positive_votes() const;
  void set_positive_votes(::google::protobuf::uint32 value);

  // optional uint32 negative_votes = 4;
  bool has_negative_votes() const;
  void clear_negative_votes();
  static const int kNegativeVotesFieldNumber = 4;
  ::google::protobuf::uint32 negative_votes() const;
  void set_negative_votes(::google::protobuf::uint32 value);

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgMatchVoteResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();
  void set_has_vote();
  void clear_has_vote();
  void set_has_positive_votes();
  void clear_has_positive_votes();
  void set_has_negative_votes();
  void clear_has_negative_votes();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int vote_;
  ::google::protobuf::uint32 positive_votes_;
  ::google::protobuf::uint32 negative_votes_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFame_FeaturedPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer) */ {
 public:
  CMsgDOTAHallOfFame_FeaturedPlayer();
  virtual ~CMsgDOTAHallOfFame_FeaturedPlayer();

  CMsgDOTAHallOfFame_FeaturedPlayer(const CMsgDOTAHallOfFame_FeaturedPlayer& from);

  inline CMsgDOTAHallOfFame_FeaturedPlayer& operator=(const CMsgDOTAHallOfFame_FeaturedPlayer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFame_FeaturedPlayer& default_instance();

  static inline const CMsgDOTAHallOfFame_FeaturedPlayer* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHallOfFame_FeaturedPlayer*>(
               &_CMsgDOTAHallOfFame_FeaturedPlayer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(CMsgDOTAHallOfFame_FeaturedPlayer* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAHallOfFame_FeaturedPlayer* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAHallOfFame_FeaturedPlayer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAHallOfFame_FeaturedPlayer& from);
  void MergeFrom(const CMsgDOTAHallOfFame_FeaturedPlayer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAHallOfFame_FeaturedPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional float average_scaled_metric = 3;
  bool has_average_scaled_metric() const;
  void clear_average_scaled_metric();
  static const int kAverageScaledMetricFieldNumber = 3;
  float average_scaled_metric() const;
  void set_average_scaled_metric(float value);

  // optional uint32 num_games = 4;
  bool has_num_games() const;
  void clear_num_games();
  static const int kNumGamesFieldNumber = 4;
  ::google::protobuf::uint32 num_games() const;
  void set_num_games(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_average_scaled_metric();
  void clear_has_average_scaled_metric();
  void set_has_num_games();
  void clear_has_num_games();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  float average_scaled_metric_;
  ::google::protobuf::uint32 num_games_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFame_FeaturedFarmer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer) */ {
 public:
  CMsgDOTAHallOfFame_FeaturedFarmer();
  virtual ~CMsgDOTAHallOfFame_FeaturedFarmer();

  CMsgDOTAHallOfFame_FeaturedFarmer(const CMsgDOTAHallOfFame_FeaturedFarmer& from);

  inline CMsgDOTAHallOfFame_FeaturedFarmer& operator=(const CMsgDOTAHallOfFame_FeaturedFarmer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFame_FeaturedFarmer& default_instance();

  static inline const CMsgDOTAHallOfFame_FeaturedFarmer* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHallOfFame_FeaturedFarmer*>(
               &_CMsgDOTAHallOfFame_FeaturedFarmer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(CMsgDOTAHallOfFame_FeaturedFarmer* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAHallOfFame_FeaturedFarmer* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAHallOfFame_FeaturedFarmer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAHallOfFame_FeaturedFarmer& from);
  void MergeFrom(const CMsgDOTAHallOfFame_FeaturedFarmer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAHallOfFame_FeaturedFarmer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint64 match_id = 4;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 4;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 gold_per_min = 3;
  bool has_gold_per_min() const;
  void clear_gold_per_min();
  static const int kGoldPerMinFieldNumber = 3;
  ::google::protobuf::uint32 gold_per_min() const;
  void set_gold_per_min(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_gold_per_min();
  void clear_has_gold_per_min();
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 gold_per_min_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHallOfFame) */ {
 public:
  CMsgDOTAHallOfFame();
  virtual ~CMsgDOTAHallOfFame();

  CMsgDOTAHallOfFame(const CMsgDOTAHallOfFame& from);

  inline CMsgDOTAHallOfFame& operator=(const CMsgDOTAHallOfFame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFame& default_instance();

  static inline const CMsgDOTAHallOfFame* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHallOfFame*>(
               &_CMsgDOTAHallOfFame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(CMsgDOTAHallOfFame* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAHallOfFame* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAHallOfFame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAHallOfFame& from);
  void MergeFrom(const CMsgDOTAHallOfFame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAHallOfFame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAHallOfFame_FeaturedPlayer FeaturedPlayer;
  typedef CMsgDOTAHallOfFame_FeaturedFarmer FeaturedFarmer;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer featured_players = 2;
  int featured_players_size() const;
  void clear_featured_players();
  static const int kFeaturedPlayersFieldNumber = 2;
  const ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer& featured_players(int index) const;
  ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer* mutable_featured_players(int index);
  ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer* add_featured_players();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer >*
      mutable_featured_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer >&
      featured_players() const;

  // optional .proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer featured_farmer = 3;
  bool has_featured_farmer() const;
  void clear_featured_farmer();
  static const int kFeaturedFarmerFieldNumber = 3;
  const ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer& featured_farmer() const;
  ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* mutable_featured_farmer();
  ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* release_featured_farmer();
  void set_allocated_featured_farmer(::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* featured_farmer);

  // optional uint32 week = 1;
  bool has_week() const;
  void clear_week();
  static const int kWeekFieldNumber = 1;
  ::google::protobuf::uint32 week() const;
  void set_week(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHallOfFame)
 private:
  void set_has_week();
  void clear_has_week();
  void set_has_featured_farmer();
  void clear_has_featured_farmer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer > featured_players_;
  ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* featured_farmer_;
  ::google::protobuf::uint32 week_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFameRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHallOfFameRequest) */ {
 public:
  CMsgDOTAHallOfFameRequest();
  virtual ~CMsgDOTAHallOfFameRequest();

  CMsgDOTAHallOfFameRequest(const CMsgDOTAHallOfFameRequest& from);

  inline CMsgDOTAHallOfFameRequest& operator=(const CMsgDOTAHallOfFameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFameRequest& default_instance();

  static inline const CMsgDOTAHallOfFameRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHallOfFameRequest*>(
               &_CMsgDOTAHallOfFameRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(CMsgDOTAHallOfFameRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAHallOfFameRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAHallOfFameRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAHallOfFameRequest& from);
  void MergeFrom(const CMsgDOTAHallOfFameRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAHallOfFameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 week = 1;
  bool has_week() const;
  void clear_week();
  static const int kWeekFieldNumber = 1;
  ::google::protobuf::uint32 week() const;
  void set_week(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHallOfFameRequest)
 private:
  void set_has_week();
  void clear_has_week();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 week_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAHallOfFameResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHallOfFameResponse) */ {
 public:
  CMsgDOTAHallOfFameResponse();
  virtual ~CMsgDOTAHallOfFameResponse();

  CMsgDOTAHallOfFameResponse(const CMsgDOTAHallOfFameResponse& from);

  inline CMsgDOTAHallOfFameResponse& operator=(const CMsgDOTAHallOfFameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHallOfFameResponse& default_instance();

  static inline const CMsgDOTAHallOfFameResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHallOfFameResponse*>(
               &_CMsgDOTAHallOfFameResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(CMsgDOTAHallOfFameResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAHallOfFameResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAHallOfFameResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAHallOfFameResponse& from);
  void MergeFrom(const CMsgDOTAHallOfFameResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAHallOfFameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAHallOfFame hall_of_fame = 1;
  bool has_hall_of_fame() const;
  void clear_hall_of_fame();
  static const int kHallOfFameFieldNumber = 1;
  const ::proto::dota::CMsgDOTAHallOfFame& hall_of_fame() const;
  ::proto::dota::CMsgDOTAHallOfFame* mutable_hall_of_fame();
  ::proto::dota::CMsgDOTAHallOfFame* release_hall_of_fame();
  void set_allocated_hall_of_fame(::proto::dota::CMsgDOTAHallOfFame* hall_of_fame);

  // optional uint32 eresult = 2 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 2;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHallOfFameResponse)
 private:
  void set_has_hall_of_fame();
  void clear_has_hall_of_fame();
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgDOTAHallOfFame* hall_of_fame_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAHalloweenHighScoreRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHalloweenHighScoreRequest) */ {
 public:
  CMsgDOTAHalloweenHighScoreRequest();
  virtual ~CMsgDOTAHalloweenHighScoreRequest();

  CMsgDOTAHalloweenHighScoreRequest(const CMsgDOTAHalloweenHighScoreRequest& from);

  inline CMsgDOTAHalloweenHighScoreRequest& operator=(const CMsgDOTAHalloweenHighScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHalloweenHighScoreRequest& default_instance();

  static inline const CMsgDOTAHalloweenHighScoreRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHalloweenHighScoreRequest*>(
               &_CMsgDOTAHalloweenHighScoreRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(CMsgDOTAHalloweenHighScoreRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAHalloweenHighScoreRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAHalloweenHighScoreRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAHalloweenHighScoreRequest& from);
  void MergeFrom(const CMsgDOTAHalloweenHighScoreRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAHalloweenHighScoreRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 round = 1 [default = -1];
  bool has_round() const;
  void clear_round();
  static const int kRoundFieldNumber = 1;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHalloweenHighScoreRequest)
 private:
  void set_has_round();
  void clear_has_round();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 round_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAHalloweenHighScoreResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAHalloweenHighScoreResponse) */ {
 public:
  CMsgDOTAHalloweenHighScoreResponse();
  virtual ~CMsgDOTAHalloweenHighScoreResponse();

  CMsgDOTAHalloweenHighScoreResponse(const CMsgDOTAHalloweenHighScoreResponse& from);

  inline CMsgDOTAHalloweenHighScoreResponse& operator=(const CMsgDOTAHalloweenHighScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAHalloweenHighScoreResponse& default_instance();

  static inline const CMsgDOTAHalloweenHighScoreResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAHalloweenHighScoreResponse*>(
               &_CMsgDOTAHalloweenHighScoreResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(CMsgDOTAHalloweenHighScoreResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAHalloweenHighScoreResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAHalloweenHighScoreResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAHalloweenHighScoreResponse& from);
  void MergeFrom(const CMsgDOTAHalloweenHighScoreResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAHalloweenHighScoreResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAMatch match = 2;
  bool has_match() const;
  void clear_match();
  static const int kMatchFieldNumber = 2;
  const ::proto::dota::CMsgDOTAMatch& match() const;
  ::proto::dota::CMsgDOTAMatch* mutable_match();
  ::proto::dota::CMsgDOTAMatch* release_match();
  void set_allocated_match(::proto::dota::CMsgDOTAMatch* match);

  // optional uint32 score = 1;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 eresult = 3;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 3;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // optional int32 round = 4;
  bool has_round() const;
  void clear_round();
  static const int kRoundFieldNumber = 4;
  ::google::protobuf::int32 round() const;
  void set_round(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAHalloweenHighScoreResponse)
 private:
  void set_has_score();
  void clear_has_score();
  void set_has_match();
  void clear_has_match();
  void set_has_eresult();
  void clear_has_eresult();
  void set_has_round();
  void clear_has_round();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgDOTAMatch* match_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::int32 round_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAStorePromoPagesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAStorePromoPagesRequest) */ {
 public:
  CMsgDOTAStorePromoPagesRequest();
  virtual ~CMsgDOTAStorePromoPagesRequest();

  CMsgDOTAStorePromoPagesRequest(const CMsgDOTAStorePromoPagesRequest& from);

  inline CMsgDOTAStorePromoPagesRequest& operator=(const CMsgDOTAStorePromoPagesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStorePromoPagesRequest& default_instance();

  static inline const CMsgDOTAStorePromoPagesRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAStorePromoPagesRequest*>(
               &_CMsgDOTAStorePromoPagesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(CMsgDOTAStorePromoPagesRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAStorePromoPagesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAStorePromoPagesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAStorePromoPagesRequest& from);
  void MergeFrom(const CMsgDOTAStorePromoPagesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAStorePromoPagesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 version_seen = 1;
  bool has_version_seen() const;
  void clear_version_seen();
  static const int kVersionSeenFieldNumber = 1;
  ::google::protobuf::uint32 version_seen() const;
  void set_version_seen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAStorePromoPagesRequest)
 private:
  void set_has_version_seen();
  void clear_has_version_seen();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 version_seen_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAStorePromoPagesResponse_PromoPage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage) */ {
 public:
  CMsgDOTAStorePromoPagesResponse_PromoPage();
  virtual ~CMsgDOTAStorePromoPagesResponse_PromoPage();

  CMsgDOTAStorePromoPagesResponse_PromoPage(const CMsgDOTAStorePromoPagesResponse_PromoPage& from);

  inline CMsgDOTAStorePromoPagesResponse_PromoPage& operator=(const CMsgDOTAStorePromoPagesResponse_PromoPage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStorePromoPagesResponse_PromoPage& default_instance();

  static inline const CMsgDOTAStorePromoPagesResponse_PromoPage* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAStorePromoPagesResponse_PromoPage*>(
               &_CMsgDOTAStorePromoPagesResponse_PromoPage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(CMsgDOTAStorePromoPagesResponse_PromoPage* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAStorePromoPagesResponse_PromoPage* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAStorePromoPagesResponse_PromoPage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAStorePromoPagesResponse_PromoPage& from);
  void MergeFrom(const CMsgDOTAStorePromoPagesResponse_PromoPage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAStorePromoPagesResponse_PromoPage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string url = 3;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 3;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional uint32 promo_id = 1;
  bool has_promo_id() const;
  void clear_promo_id();
  static const int kPromoIdFieldNumber = 1;
  ::google::protobuf::uint32 promo_id() const;
  void set_promo_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage)
 private:
  void set_has_promo_id();
  void clear_has_promo_id();
  void set_has_title();
  void clear_has_title();
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 promo_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAStorePromoPagesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAStorePromoPagesResponse) */ {
 public:
  CMsgDOTAStorePromoPagesResponse();
  virtual ~CMsgDOTAStorePromoPagesResponse();

  CMsgDOTAStorePromoPagesResponse(const CMsgDOTAStorePromoPagesResponse& from);

  inline CMsgDOTAStorePromoPagesResponse& operator=(const CMsgDOTAStorePromoPagesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStorePromoPagesResponse& default_instance();

  static inline const CMsgDOTAStorePromoPagesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAStorePromoPagesResponse*>(
               &_CMsgDOTAStorePromoPagesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(CMsgDOTAStorePromoPagesResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAStorePromoPagesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAStorePromoPagesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAStorePromoPagesResponse& from);
  void MergeFrom(const CMsgDOTAStorePromoPagesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAStorePromoPagesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAStorePromoPagesResponse_PromoPage PromoPage;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage pages = 1;
  int pages_size() const;
  void clear_pages();
  static const int kPagesFieldNumber = 1;
  const ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage& pages(int index) const;
  ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage* mutable_pages(int index);
  ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage* add_pages();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage >*
      mutable_pages();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage >&
      pages() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAStorePromoPagesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage > pages_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgLeagueScheduleBlockTeamInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgLeagueScheduleBlockTeamInfo) */ {
 public:
  CMsgLeagueScheduleBlockTeamInfo();
  virtual ~CMsgLeagueScheduleBlockTeamInfo();

  CMsgLeagueScheduleBlockTeamInfo(const CMsgLeagueScheduleBlockTeamInfo& from);

  inline CMsgLeagueScheduleBlockTeamInfo& operator=(const CMsgLeagueScheduleBlockTeamInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeagueScheduleBlockTeamInfo& default_instance();

  static inline const CMsgLeagueScheduleBlockTeamInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgLeagueScheduleBlockTeamInfo*>(
               &_CMsgLeagueScheduleBlockTeamInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(CMsgLeagueScheduleBlockTeamInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgLeagueScheduleBlockTeamInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgLeagueScheduleBlockTeamInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgLeagueScheduleBlockTeamInfo& from);
  void MergeFrom(const CMsgLeagueScheduleBlockTeamInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgLeagueScheduleBlockTeamInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint64 logo = 4;
  bool has_logo() const;
  void clear_logo();
  static const int kLogoFieldNumber = 4;
  ::google::protobuf::uint64 logo() const;
  void set_logo(::google::protobuf::uint64 value);

  // optional uint32 team_id = 1;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgLeagueScheduleBlockTeamInfo)
 private:
  void set_has_team_id();
  void clear_has_team_id();
  void set_has_name();
  void clear_has_name();
  void set_has_logo();
  void clear_has_logo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 logo_;
  ::google::protobuf::uint32 team_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgLeagueScheduleBlock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgLeagueScheduleBlock) */ {
 public:
  CMsgLeagueScheduleBlock();
  virtual ~CMsgLeagueScheduleBlock();

  CMsgLeagueScheduleBlock(const CMsgLeagueScheduleBlock& from);

  inline CMsgLeagueScheduleBlock& operator=(const CMsgLeagueScheduleBlock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeagueScheduleBlock& default_instance();

  static inline const CMsgLeagueScheduleBlock* internal_default_instance() {
    return reinterpret_cast<const CMsgLeagueScheduleBlock*>(
               &_CMsgLeagueScheduleBlock_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(CMsgLeagueScheduleBlock* other);

  // implements Message ----------------------------------------------

  inline CMsgLeagueScheduleBlock* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgLeagueScheduleBlock* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgLeagueScheduleBlock& from);
  void MergeFrom(const CMsgLeagueScheduleBlock& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgLeagueScheduleBlock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgLeagueScheduleBlockTeamInfo teams = 6;
  int teams_size() const;
  void clear_teams();
  static const int kTeamsFieldNumber = 6;
  const ::proto::dota::CMsgLeagueScheduleBlockTeamInfo& teams(int index) const;
  ::proto::dota::CMsgLeagueScheduleBlockTeamInfo* mutable_teams(int index);
  ::proto::dota::CMsgLeagueScheduleBlockTeamInfo* add_teams();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgLeagueScheduleBlockTeamInfo >*
      mutable_teams();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgLeagueScheduleBlockTeamInfo >&
      teams() const;

  // optional string comment = 5;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 5;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional uint32 block_id = 1;
  bool has_block_id() const;
  void clear_block_id();
  static const int kBlockIdFieldNumber = 1;
  ::google::protobuf::uint32 block_id() const;
  void set_block_id(::google::protobuf::uint32 value);

  // optional uint32 start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // optional bool finals = 4;
  bool has_finals() const;
  void clear_finals();
  static const int kFinalsFieldNumber = 4;
  bool finals() const;
  void set_finals(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgLeagueScheduleBlock)
 private:
  void set_has_block_id();
  void clear_has_block_id();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_finals();
  void clear_has_finals();
  void set_has_comment();
  void clear_has_comment();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgLeagueScheduleBlockTeamInfo > teams_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::uint32 block_id_;
  ::google::protobuf::uint32 start_time_;
  bool finals_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALeague : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALeague) */ {
 public:
  CMsgDOTALeague();
  virtual ~CMsgDOTALeague();

  CMsgDOTALeague(const CMsgDOTALeague& from);

  inline CMsgDOTALeague& operator=(const CMsgDOTALeague& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeague& default_instance();

  static inline const CMsgDOTALeague* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALeague*>(
               &_CMsgDOTALeague_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(CMsgDOTALeague* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALeague* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALeague* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALeague& from);
  void MergeFrom(const CMsgDOTALeague& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALeague* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgLeagueScheduleBlock schedule = 2;
  int schedule_size() const;
  void clear_schedule();
  static const int kScheduleFieldNumber = 2;
  const ::proto::dota::CMsgLeagueScheduleBlock& schedule(int index) const;
  ::proto::dota::CMsgLeagueScheduleBlock* mutable_schedule(int index);
  ::proto::dota::CMsgLeagueScheduleBlock* add_schedule();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgLeagueScheduleBlock >*
      mutable_schedule();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgLeagueScheduleBlock >&
      schedule() const;

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALeague)
 private:
  void set_has_league_id();
  void clear_has_league_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgLeagueScheduleBlock > schedule_;
  ::google::protobuf::uint32 league_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALeagueScheduleRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALeagueScheduleRequest) */ {
 public:
  CMsgDOTALeagueScheduleRequest();
  virtual ~CMsgDOTALeagueScheduleRequest();

  CMsgDOTALeagueScheduleRequest(const CMsgDOTALeagueScheduleRequest& from);

  inline CMsgDOTALeagueScheduleRequest& operator=(const CMsgDOTALeagueScheduleRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeagueScheduleRequest& default_instance();

  static inline const CMsgDOTALeagueScheduleRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALeagueScheduleRequest*>(
               &_CMsgDOTALeagueScheduleRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(CMsgDOTALeagueScheduleRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALeagueScheduleRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALeagueScheduleRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALeagueScheduleRequest& from);
  void MergeFrom(const CMsgDOTALeagueScheduleRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALeagueScheduleRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALeagueScheduleRequest)
 private:
  void set_has_league_id();
  void clear_has_league_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALeagueScheduleResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALeagueScheduleResponse) */ {
 public:
  CMsgDOTALeagueScheduleResponse();
  virtual ~CMsgDOTALeagueScheduleResponse();

  CMsgDOTALeagueScheduleResponse(const CMsgDOTALeagueScheduleResponse& from);

  inline CMsgDOTALeagueScheduleResponse& operator=(const CMsgDOTALeagueScheduleResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeagueScheduleResponse& default_instance();

  static inline const CMsgDOTALeagueScheduleResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALeagueScheduleResponse*>(
               &_CMsgDOTALeagueScheduleResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(CMsgDOTALeagueScheduleResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALeagueScheduleResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALeagueScheduleResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALeagueScheduleResponse& from);
  void MergeFrom(const CMsgDOTALeagueScheduleResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALeagueScheduleResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTALeague league = 1;
  bool has_league() const;
  void clear_league();
  static const int kLeagueFieldNumber = 1;
  const ::proto::dota::CMsgDOTALeague& league() const;
  ::proto::dota::CMsgDOTALeague* mutable_league();
  ::proto::dota::CMsgDOTALeague* release_league();
  void set_allocated_league(::proto::dota::CMsgDOTALeague* league);

  // optional uint32 eresult = 2 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 2;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALeagueScheduleResponse)
 private:
  void set_has_league();
  void clear_has_league();
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgDOTALeague* league_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALeagueScheduleEdit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALeagueScheduleEdit) */ {
 public:
  CMsgDOTALeagueScheduleEdit();
  virtual ~CMsgDOTALeagueScheduleEdit();

  CMsgDOTALeagueScheduleEdit(const CMsgDOTALeagueScheduleEdit& from);

  inline CMsgDOTALeagueScheduleEdit& operator=(const CMsgDOTALeagueScheduleEdit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeagueScheduleEdit& default_instance();

  static inline const CMsgDOTALeagueScheduleEdit* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALeagueScheduleEdit*>(
               &_CMsgDOTALeagueScheduleEdit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(CMsgDOTALeagueScheduleEdit* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALeagueScheduleEdit* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALeagueScheduleEdit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALeagueScheduleEdit& from);
  void MergeFrom(const CMsgDOTALeagueScheduleEdit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALeagueScheduleEdit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgLeagueScheduleBlock schedule = 2;
  bool has_schedule() const;
  void clear_schedule();
  static const int kScheduleFieldNumber = 2;
  const ::proto::dota::CMsgLeagueScheduleBlock& schedule() const;
  ::proto::dota::CMsgLeagueScheduleBlock* mutable_schedule();
  ::proto::dota::CMsgLeagueScheduleBlock* release_schedule();
  void set_allocated_schedule(::proto::dota::CMsgLeagueScheduleBlock* schedule);

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional bool delete_block = 3;
  bool has_delete_block() const;
  void clear_delete_block();
  static const int kDeleteBlockFieldNumber = 3;
  bool delete_block() const;
  void set_delete_block(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALeagueScheduleEdit)
 private:
  void set_has_league_id();
  void clear_has_league_id();
  void set_has_schedule();
  void clear_has_schedule();
  void set_has_delete_block();
  void clear_has_delete_block();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgLeagueScheduleBlock* schedule_;
  ::google::protobuf::uint32 league_id_;
  bool delete_block_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALeagueScheduleEditResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALeagueScheduleEditResponse) */ {
 public:
  CMsgDOTALeagueScheduleEditResponse();
  virtual ~CMsgDOTALeagueScheduleEditResponse();

  CMsgDOTALeagueScheduleEditResponse(const CMsgDOTALeagueScheduleEditResponse& from);

  inline CMsgDOTALeagueScheduleEditResponse& operator=(const CMsgDOTALeagueScheduleEditResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeagueScheduleEditResponse& default_instance();

  static inline const CMsgDOTALeagueScheduleEditResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALeagueScheduleEditResponse*>(
               &_CMsgDOTALeagueScheduleEditResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(CMsgDOTALeagueScheduleEditResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALeagueScheduleEditResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALeagueScheduleEditResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALeagueScheduleEditResponse& from);
  void MergeFrom(const CMsgDOTALeagueScheduleEditResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALeagueScheduleEditResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTALeague league = 1;
  bool has_league() const;
  void clear_league();
  static const int kLeagueFieldNumber = 1;
  const ::proto::dota::CMsgDOTALeague& league() const;
  ::proto::dota::CMsgDOTALeague* mutable_league();
  ::proto::dota::CMsgDOTALeague* release_league();
  void set_allocated_league(::proto::dota::CMsgDOTALeague* league);

  // optional uint32 eresult = 2 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 2;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALeagueScheduleEditResponse)
 private:
  void set_has_league();
  void clear_has_league();
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgDOTALeague* league_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALeaguesInMonthRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALeaguesInMonthRequest) */ {
 public:
  CMsgDOTALeaguesInMonthRequest();
  virtual ~CMsgDOTALeaguesInMonthRequest();

  CMsgDOTALeaguesInMonthRequest(const CMsgDOTALeaguesInMonthRequest& from);

  inline CMsgDOTALeaguesInMonthRequest& operator=(const CMsgDOTALeaguesInMonthRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeaguesInMonthRequest& default_instance();

  static inline const CMsgDOTALeaguesInMonthRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALeaguesInMonthRequest*>(
               &_CMsgDOTALeaguesInMonthRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(CMsgDOTALeaguesInMonthRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALeaguesInMonthRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALeaguesInMonthRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALeaguesInMonthRequest& from);
  void MergeFrom(const CMsgDOTALeaguesInMonthRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALeaguesInMonthRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 month = 1;
  bool has_month() const;
  void clear_month();
  static const int kMonthFieldNumber = 1;
  ::google::protobuf::uint32 month() const;
  void set_month(::google::protobuf::uint32 value);

  // optional uint32 year = 2;
  bool has_year() const;
  void clear_year();
  static const int kYearFieldNumber = 2;
  ::google::protobuf::uint32 year() const;
  void set_year(::google::protobuf::uint32 value);

  // optional uint32 tier = 3;
  bool has_tier() const;
  void clear_tier();
  static const int kTierFieldNumber = 3;
  ::google::protobuf::uint32 tier() const;
  void set_tier(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALeaguesInMonthRequest)
 private:
  void set_has_month();
  void clear_has_month();
  void set_has_year();
  void clear_has_year();
  void set_has_tier();
  void clear_has_tier();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::uint32 year_;
  ::google::protobuf::uint32 tier_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALeaguesInMonthResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALeaguesInMonthResponse) */ {
 public:
  CMsgDOTALeaguesInMonthResponse();
  virtual ~CMsgDOTALeaguesInMonthResponse();

  CMsgDOTALeaguesInMonthResponse(const CMsgDOTALeaguesInMonthResponse& from);

  inline CMsgDOTALeaguesInMonthResponse& operator=(const CMsgDOTALeaguesInMonthResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALeaguesInMonthResponse& default_instance();

  static inline const CMsgDOTALeaguesInMonthResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALeaguesInMonthResponse*>(
               &_CMsgDOTALeaguesInMonthResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(CMsgDOTALeaguesInMonthResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALeaguesInMonthResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALeaguesInMonthResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALeaguesInMonthResponse& from);
  void MergeFrom(const CMsgDOTALeaguesInMonthResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALeaguesInMonthResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTALeague leagues = 4;
  int leagues_size() const;
  void clear_leagues();
  static const int kLeaguesFieldNumber = 4;
  const ::proto::dota::CMsgDOTALeague& leagues(int index) const;
  ::proto::dota::CMsgDOTALeague* mutable_leagues(int index);
  ::proto::dota::CMsgDOTALeague* add_leagues();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALeague >*
      mutable_leagues();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALeague >&
      leagues() const;

  // optional uint32 month = 2;
  bool has_month() const;
  void clear_month();
  static const int kMonthFieldNumber = 2;
  ::google::protobuf::uint32 month() const;
  void set_month(::google::protobuf::uint32 value);

  // optional uint32 year = 3;
  bool has_year() const;
  void clear_year();
  static const int kYearFieldNumber = 3;
  ::google::protobuf::uint32 year() const;
  void set_year(::google::protobuf::uint32 value);

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALeaguesInMonthResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();
  void set_has_month();
  void clear_has_month();
  void set_has_year();
  void clear_has_year();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALeague > leagues_;
  ::google::protobuf::uint32 month_;
  ::google::protobuf::uint32 year_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgMatchmakingMatchGroupInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgMatchmakingMatchGroupInfo) */ {
 public:
  CMsgMatchmakingMatchGroupInfo();
  virtual ~CMsgMatchmakingMatchGroupInfo();

  CMsgMatchmakingMatchGroupInfo(const CMsgMatchmakingMatchGroupInfo& from);

  inline CMsgMatchmakingMatchGroupInfo& operator=(const CMsgMatchmakingMatchGroupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMatchmakingMatchGroupInfo& default_instance();

  static inline const CMsgMatchmakingMatchGroupInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgMatchmakingMatchGroupInfo*>(
               &_CMsgMatchmakingMatchGroupInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(CMsgMatchmakingMatchGroupInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgMatchmakingMatchGroupInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMatchmakingMatchGroupInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMatchmakingMatchGroupInfo& from);
  void MergeFrom(const CMsgMatchmakingMatchGroupInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMatchmakingMatchGroupInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 players_searching = 1;
  bool has_players_searching() const;
  void clear_players_searching();
  static const int kPlayersSearchingFieldNumber = 1;
  ::google::protobuf::uint32 players_searching() const;
  void set_players_searching(::google::protobuf::uint32 value);

  // optional sint32 auto_region_select_ping_penalty = 2;
  bool has_auto_region_select_ping_penalty() const;
  void clear_auto_region_select_ping_penalty();
  static const int kAutoRegionSelectPingPenaltyFieldNumber = 2;
  ::google::protobuf::int32 auto_region_select_ping_penalty() const;
  void set_auto_region_select_ping_penalty(::google::protobuf::int32 value);

  // optional .proto.dota.EMatchGroupServerStatus status = 3 [default = k_EMatchGroupServerStatus_OK];
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::proto::dota::EMatchGroupServerStatus status() const;
  void set_status(::proto::dota::EMatchGroupServerStatus value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgMatchmakingMatchGroupInfo)
 private:
  void set_has_players_searching();
  void clear_has_players_searching();
  void set_has_auto_region_select_ping_penalty();
  void clear_has_auto_region_select_ping_penalty();
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 players_searching_;
  ::google::protobuf::int32 auto_region_select_ping_penalty_;
  int status_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchmakingStatsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAMatchmakingStatsRequest) */ {
 public:
  CMsgDOTAMatchmakingStatsRequest();
  virtual ~CMsgDOTAMatchmakingStatsRequest();

  CMsgDOTAMatchmakingStatsRequest(const CMsgDOTAMatchmakingStatsRequest& from);

  inline CMsgDOTAMatchmakingStatsRequest& operator=(const CMsgDOTAMatchmakingStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchmakingStatsRequest& default_instance();

  static inline const CMsgDOTAMatchmakingStatsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAMatchmakingStatsRequest*>(
               &_CMsgDOTAMatchmakingStatsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(CMsgDOTAMatchmakingStatsRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAMatchmakingStatsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAMatchmakingStatsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAMatchmakingStatsRequest& from);
  void MergeFrom(const CMsgDOTAMatchmakingStatsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAMatchmakingStatsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAMatchmakingStatsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAMatchmakingStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAMatchmakingStatsResponse) */ {
 public:
  CMsgDOTAMatchmakingStatsResponse();
  virtual ~CMsgDOTAMatchmakingStatsResponse();

  CMsgDOTAMatchmakingStatsResponse(const CMsgDOTAMatchmakingStatsResponse& from);

  inline CMsgDOTAMatchmakingStatsResponse& operator=(const CMsgDOTAMatchmakingStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAMatchmakingStatsResponse& default_instance();

  static inline const CMsgDOTAMatchmakingStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAMatchmakingStatsResponse*>(
               &_CMsgDOTAMatchmakingStatsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(CMsgDOTAMatchmakingStatsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAMatchmakingStatsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAMatchmakingStatsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAMatchmakingStatsResponse& from);
  void MergeFrom(const CMsgDOTAMatchmakingStatsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAMatchmakingStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 legacy_searching_players_by_group_source2 = 7;
  int legacy_searching_players_by_group_source2_size() const;
  void clear_legacy_searching_players_by_group_source2();
  static const int kLegacySearchingPlayersByGroupSource2FieldNumber = 7;
  ::google::protobuf::uint32 legacy_searching_players_by_group_source2(int index) const;
  void set_legacy_searching_players_by_group_source2(int index, ::google::protobuf::uint32 value);
  void add_legacy_searching_players_by_group_source2(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      legacy_searching_players_by_group_source2() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_legacy_searching_players_by_group_source2();

  // repeated .proto.dota.CMsgMatchmakingMatchGroupInfo match_groups = 8;
  int match_groups_size() const;
  void clear_match_groups();
  static const int kMatchGroupsFieldNumber = 8;
  const ::proto::dota::CMsgMatchmakingMatchGroupInfo& match_groups(int index) const;
  ::proto::dota::CMsgMatchmakingMatchGroupInfo* mutable_match_groups(int index);
  ::proto::dota::CMsgMatchmakingMatchGroupInfo* add_match_groups();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMatchmakingMatchGroupInfo >*
      mutable_match_groups();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMatchmakingMatchGroupInfo >&
      match_groups() const;

  // optional uint32 matchgroups_version = 1;
  bool has_matchgroups_version() const;
  void clear_matchgroups_version();
  static const int kMatchgroupsVersionFieldNumber = 1;
  ::google::protobuf::uint32 matchgroups_version() const;
  void set_matchgroups_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAMatchmakingStatsResponse)
 private:
  void set_has_matchgroups_version();
  void clear_has_matchgroups_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > legacy_searching_players_by_group_source2_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMatchmakingMatchGroupInfo > match_groups_;
  ::google::protobuf::uint32 matchgroups_version_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAUpdateMatchmakingStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAUpdateMatchmakingStats) */ {
 public:
  CMsgDOTAUpdateMatchmakingStats();
  virtual ~CMsgDOTAUpdateMatchmakingStats();

  CMsgDOTAUpdateMatchmakingStats(const CMsgDOTAUpdateMatchmakingStats& from);

  inline CMsgDOTAUpdateMatchmakingStats& operator=(const CMsgDOTAUpdateMatchmakingStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAUpdateMatchmakingStats& default_instance();

  static inline const CMsgDOTAUpdateMatchmakingStats* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAUpdateMatchmakingStats*>(
               &_CMsgDOTAUpdateMatchmakingStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(CMsgDOTAUpdateMatchmakingStats* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAUpdateMatchmakingStats* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAUpdateMatchmakingStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAUpdateMatchmakingStats& from);
  void MergeFrom(const CMsgDOTAUpdateMatchmakingStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAUpdateMatchmakingStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAMatchmakingStatsResponse stats = 1;
  bool has_stats() const;
  void clear_stats();
  static const int kStatsFieldNumber = 1;
  const ::proto::dota::CMsgDOTAMatchmakingStatsResponse& stats() const;
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* mutable_stats();
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* release_stats();
  void set_allocated_stats(::proto::dota::CMsgDOTAMatchmakingStatsResponse* stats);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAUpdateMatchmakingStats)
 private:
  void set_has_stats();
  void clear_has_stats();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* stats_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAUpdateMatchManagementStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAUpdateMatchManagementStats) */ {
 public:
  CMsgDOTAUpdateMatchManagementStats();
  virtual ~CMsgDOTAUpdateMatchManagementStats();

  CMsgDOTAUpdateMatchManagementStats(const CMsgDOTAUpdateMatchManagementStats& from);

  inline CMsgDOTAUpdateMatchManagementStats& operator=(const CMsgDOTAUpdateMatchManagementStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAUpdateMatchManagementStats& default_instance();

  static inline const CMsgDOTAUpdateMatchManagementStats* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAUpdateMatchManagementStats*>(
               &_CMsgDOTAUpdateMatchManagementStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(CMsgDOTAUpdateMatchManagementStats* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAUpdateMatchManagementStats* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAUpdateMatchManagementStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAUpdateMatchManagementStats& from);
  void MergeFrom(const CMsgDOTAUpdateMatchManagementStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAUpdateMatchManagementStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAMatchmakingStatsResponse stats = 1;
  bool has_stats() const;
  void clear_stats();
  static const int kStatsFieldNumber = 1;
  const ::proto::dota::CMsgDOTAMatchmakingStatsResponse& stats() const;
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* mutable_stats();
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* release_stats();
  void set_allocated_stats(::proto::dota::CMsgDOTAMatchmakingStatsResponse* stats);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAUpdateMatchManagementStats)
 private:
  void set_has_stats();
  void clear_has_stats();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* stats_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTASetMatchHistoryAccess : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASetMatchHistoryAccess) */ {
 public:
  CMsgDOTASetMatchHistoryAccess();
  virtual ~CMsgDOTASetMatchHistoryAccess();

  CMsgDOTASetMatchHistoryAccess(const CMsgDOTASetMatchHistoryAccess& from);

  inline CMsgDOTASetMatchHistoryAccess& operator=(const CMsgDOTASetMatchHistoryAccess& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetMatchHistoryAccess& default_instance();

  static inline const CMsgDOTASetMatchHistoryAccess* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASetMatchHistoryAccess*>(
               &_CMsgDOTASetMatchHistoryAccess_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(CMsgDOTASetMatchHistoryAccess* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTASetMatchHistoryAccess* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTASetMatchHistoryAccess* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTASetMatchHistoryAccess& from);
  void MergeFrom(const CMsgDOTASetMatchHistoryAccess& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTASetMatchHistoryAccess* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool allow_3rd_party_match_history = 1;
  bool has_allow_3rd_party_match_history() const;
  void clear_allow_3rd_party_match_history();
  static const int kAllow3RdPartyMatchHistoryFieldNumber = 1;
  bool allow_3rd_party_match_history() const;
  void set_allow_3rd_party_match_history(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASetMatchHistoryAccess)
 private:
  void set_has_allow_3rd_party_match_history();
  void clear_has_allow_3rd_party_match_history();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool allow_3rd_party_match_history_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTASetMatchHistoryAccessResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASetMatchHistoryAccessResponse) */ {
 public:
  CMsgDOTASetMatchHistoryAccessResponse();
  virtual ~CMsgDOTASetMatchHistoryAccessResponse();

  CMsgDOTASetMatchHistoryAccessResponse(const CMsgDOTASetMatchHistoryAccessResponse& from);

  inline CMsgDOTASetMatchHistoryAccessResponse& operator=(const CMsgDOTASetMatchHistoryAccessResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetMatchHistoryAccessResponse& default_instance();

  static inline const CMsgDOTASetMatchHistoryAccessResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASetMatchHistoryAccessResponse*>(
               &_CMsgDOTASetMatchHistoryAccessResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(CMsgDOTASetMatchHistoryAccessResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTASetMatchHistoryAccessResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTASetMatchHistoryAccessResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTASetMatchHistoryAccessResponse& from);
  void MergeFrom(const CMsgDOTASetMatchHistoryAccessResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTASetMatchHistoryAccessResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASetMatchHistoryAccessResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTANotifyAccountFlagsChange : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTANotifyAccountFlagsChange) */ {
 public:
  CMsgDOTANotifyAccountFlagsChange();
  virtual ~CMsgDOTANotifyAccountFlagsChange();

  CMsgDOTANotifyAccountFlagsChange(const CMsgDOTANotifyAccountFlagsChange& from);

  inline CMsgDOTANotifyAccountFlagsChange& operator=(const CMsgDOTANotifyAccountFlagsChange& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTANotifyAccountFlagsChange& default_instance();

  static inline const CMsgDOTANotifyAccountFlagsChange* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTANotifyAccountFlagsChange*>(
               &_CMsgDOTANotifyAccountFlagsChange_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(CMsgDOTANotifyAccountFlagsChange* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTANotifyAccountFlagsChange* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTANotifyAccountFlagsChange* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTANotifyAccountFlagsChange& from);
  void MergeFrom(const CMsgDOTANotifyAccountFlagsChange& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTANotifyAccountFlagsChange* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 accountid = 1;
  bool has_accountid() const;
  void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // optional uint32 account_flags = 2;
  bool has_account_flags() const;
  void clear_account_flags();
  static const int kAccountFlagsFieldNumber = 2;
  ::google::protobuf::uint32 account_flags() const;
  void set_account_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTANotifyAccountFlagsChange)
 private:
  void set_has_accountid();
  void clear_has_accountid();
  void set_has_account_flags();
  void clear_has_account_flags();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 account_flags_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTASetProfilePrivacy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASetProfilePrivacy) */ {
 public:
  CMsgDOTASetProfilePrivacy();
  virtual ~CMsgDOTASetProfilePrivacy();

  CMsgDOTASetProfilePrivacy(const CMsgDOTASetProfilePrivacy& from);

  inline CMsgDOTASetProfilePrivacy& operator=(const CMsgDOTASetProfilePrivacy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetProfilePrivacy& default_instance();

  static inline const CMsgDOTASetProfilePrivacy* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASetProfilePrivacy*>(
               &_CMsgDOTASetProfilePrivacy_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(CMsgDOTASetProfilePrivacy* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTASetProfilePrivacy* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTASetProfilePrivacy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTASetProfilePrivacy& from);
  void MergeFrom(const CMsgDOTASetProfilePrivacy& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTASetProfilePrivacy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool profile_private = 1;
  bool has_profile_private() const;
  void clear_profile_private();
  static const int kProfilePrivateFieldNumber = 1;
  bool profile_private() const;
  void set_profile_private(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASetProfilePrivacy)
 private:
  void set_has_profile_private();
  void clear_has_profile_private();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool profile_private_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTASetProfilePrivacyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASetProfilePrivacyResponse) */ {
 public:
  CMsgDOTASetProfilePrivacyResponse();
  virtual ~CMsgDOTASetProfilePrivacyResponse();

  CMsgDOTASetProfilePrivacyResponse(const CMsgDOTASetProfilePrivacyResponse& from);

  inline CMsgDOTASetProfilePrivacyResponse& operator=(const CMsgDOTASetProfilePrivacyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetProfilePrivacyResponse& default_instance();

  static inline const CMsgDOTASetProfilePrivacyResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASetProfilePrivacyResponse*>(
               &_CMsgDOTASetProfilePrivacyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(CMsgDOTASetProfilePrivacyResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTASetProfilePrivacyResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTASetProfilePrivacyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTASetProfilePrivacyResponse& from);
  void MergeFrom(const CMsgDOTASetProfilePrivacyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTASetProfilePrivacyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASetProfilePrivacyResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgUpgradeLeagueItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgUpgradeLeagueItem) */ {
 public:
  CMsgUpgradeLeagueItem();
  virtual ~CMsgUpgradeLeagueItem();

  CMsgUpgradeLeagueItem(const CMsgUpgradeLeagueItem& from);

  inline CMsgUpgradeLeagueItem& operator=(const CMsgUpgradeLeagueItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpgradeLeagueItem& default_instance();

  static inline const CMsgUpgradeLeagueItem* internal_default_instance() {
    return reinterpret_cast<const CMsgUpgradeLeagueItem*>(
               &_CMsgUpgradeLeagueItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(CMsgUpgradeLeagueItem* other);

  // implements Message ----------------------------------------------

  inline CMsgUpgradeLeagueItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgUpgradeLeagueItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgUpgradeLeagueItem& from);
  void MergeFrom(const CMsgUpgradeLeagueItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgUpgradeLeagueItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 league_id = 2;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgUpgradeLeagueItem)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_league_id();
  void clear_has_league_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 league_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgUpgradeLeagueItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgUpgradeLeagueItemResponse) */ {
 public:
  CMsgUpgradeLeagueItemResponse();
  virtual ~CMsgUpgradeLeagueItemResponse();

  CMsgUpgradeLeagueItemResponse(const CMsgUpgradeLeagueItemResponse& from);

  inline CMsgUpgradeLeagueItemResponse& operator=(const CMsgUpgradeLeagueItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpgradeLeagueItemResponse& default_instance();

  static inline const CMsgUpgradeLeagueItemResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgUpgradeLeagueItemResponse*>(
               &_CMsgUpgradeLeagueItemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(CMsgUpgradeLeagueItemResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgUpgradeLeagueItemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgUpgradeLeagueItemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgUpgradeLeagueItemResponse& from);
  void MergeFrom(const CMsgUpgradeLeagueItemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgUpgradeLeagueItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgUpgradeLeagueItemResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCWatchDownloadedReplay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCWatchDownloadedReplay) */ {
 public:
  CMsgGCWatchDownloadedReplay();
  virtual ~CMsgGCWatchDownloadedReplay();

  CMsgGCWatchDownloadedReplay(const CMsgGCWatchDownloadedReplay& from);

  inline CMsgGCWatchDownloadedReplay& operator=(const CMsgGCWatchDownloadedReplay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCWatchDownloadedReplay& default_instance();

  static inline const CMsgGCWatchDownloadedReplay* internal_default_instance() {
    return reinterpret_cast<const CMsgGCWatchDownloadedReplay*>(
               &_CMsgGCWatchDownloadedReplay_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(CMsgGCWatchDownloadedReplay* other);

  // implements Message ----------------------------------------------

  inline CMsgGCWatchDownloadedReplay* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCWatchDownloadedReplay* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCWatchDownloadedReplay& from);
  void MergeFrom(const CMsgGCWatchDownloadedReplay& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCWatchDownloadedReplay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional .proto.dota.DOTA_WatchReplayType watch_type = 2 [default = DOTA_WATCH_REPLAY_NORMAL];
  bool has_watch_type() const;
  void clear_watch_type();
  static const int kWatchTypeFieldNumber = 2;
  ::proto::dota::DOTA_WatchReplayType watch_type() const;
  void set_watch_type(::proto::dota::DOTA_WatchReplayType value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCWatchDownloadedReplay)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_watch_type();
  void clear_has_watch_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  int watch_type_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetMapLocationState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSetMapLocationState) */ {
 public:
  CMsgSetMapLocationState();
  virtual ~CMsgSetMapLocationState();

  CMsgSetMapLocationState(const CMsgSetMapLocationState& from);

  inline CMsgSetMapLocationState& operator=(const CMsgSetMapLocationState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetMapLocationState& default_instance();

  static inline const CMsgSetMapLocationState* internal_default_instance() {
    return reinterpret_cast<const CMsgSetMapLocationState*>(
               &_CMsgSetMapLocationState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(CMsgSetMapLocationState* other);

  // implements Message ----------------------------------------------

  inline CMsgSetMapLocationState* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetMapLocationState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetMapLocationState& from);
  void MergeFrom(const CMsgSetMapLocationState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetMapLocationState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 location_id = 1;
  bool has_location_id() const;
  void clear_location_id();
  static const int kLocationIdFieldNumber = 1;
  ::google::protobuf::int32 location_id() const;
  void set_location_id(::google::protobuf::int32 value);

  // optional bool completed = 2;
  bool has_completed() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 2;
  bool completed() const;
  void set_completed(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSetMapLocationState)
 private:
  void set_has_location_id();
  void clear_has_location_id();
  void set_has_completed();
  void clear_has_completed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 location_id_;
  bool completed_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetMapLocationStateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgSetMapLocationStateResponse) */ {
 public:
  CMsgSetMapLocationStateResponse();
  virtual ~CMsgSetMapLocationStateResponse();

  CMsgSetMapLocationStateResponse(const CMsgSetMapLocationStateResponse& from);

  inline CMsgSetMapLocationStateResponse& operator=(const CMsgSetMapLocationStateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetMapLocationStateResponse& default_instance();

  static inline const CMsgSetMapLocationStateResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgSetMapLocationStateResponse*>(
               &_CMsgSetMapLocationStateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(CMsgSetMapLocationStateResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgSetMapLocationStateResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetMapLocationStateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetMapLocationStateResponse& from);
  void MergeFrom(const CMsgSetMapLocationStateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetMapLocationStateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgSetMapLocationStateResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgResetMapLocations : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgResetMapLocations) */ {
 public:
  CMsgResetMapLocations();
  virtual ~CMsgResetMapLocations();

  CMsgResetMapLocations(const CMsgResetMapLocations& from);

  inline CMsgResetMapLocations& operator=(const CMsgResetMapLocations& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgResetMapLocations& default_instance();

  static inline const CMsgResetMapLocations* internal_default_instance() {
    return reinterpret_cast<const CMsgResetMapLocations*>(
               &_CMsgResetMapLocations_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(CMsgResetMapLocations* other);

  // implements Message ----------------------------------------------

  inline CMsgResetMapLocations* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgResetMapLocations* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgResetMapLocations& from);
  void MergeFrom(const CMsgResetMapLocations& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgResetMapLocations* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgResetMapLocations)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgResetMapLocationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgResetMapLocationsResponse) */ {
 public:
  CMsgResetMapLocationsResponse();
  virtual ~CMsgResetMapLocationsResponse();

  CMsgResetMapLocationsResponse(const CMsgResetMapLocationsResponse& from);

  inline CMsgResetMapLocationsResponse& operator=(const CMsgResetMapLocationsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgResetMapLocationsResponse& default_instance();

  static inline const CMsgResetMapLocationsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgResetMapLocationsResponse*>(
               &_CMsgResetMapLocationsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(CMsgResetMapLocationsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgResetMapLocationsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgResetMapLocationsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgResetMapLocationsResponse& from);
  void MergeFrom(const CMsgResetMapLocationsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgResetMapLocationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgResetMapLocationsResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgRefreshPartnerAccountLink : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRefreshPartnerAccountLink) */ {
 public:
  CMsgRefreshPartnerAccountLink();
  virtual ~CMsgRefreshPartnerAccountLink();

  CMsgRefreshPartnerAccountLink(const CMsgRefreshPartnerAccountLink& from);

  inline CMsgRefreshPartnerAccountLink& operator=(const CMsgRefreshPartnerAccountLink& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRefreshPartnerAccountLink& default_instance();

  static inline const CMsgRefreshPartnerAccountLink* internal_default_instance() {
    return reinterpret_cast<const CMsgRefreshPartnerAccountLink*>(
               &_CMsgRefreshPartnerAccountLink_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(CMsgRefreshPartnerAccountLink* other);

  // implements Message ----------------------------------------------

  inline CMsgRefreshPartnerAccountLink* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgRefreshPartnerAccountLink* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgRefreshPartnerAccountLink& from);
  void MergeFrom(const CMsgRefreshPartnerAccountLink& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgRefreshPartnerAccountLink* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 partner_type = 1;
  bool has_partner_type() const;
  void clear_partner_type();
  static const int kPartnerTypeFieldNumber = 1;
  ::google::protobuf::int32 partner_type() const;
  void set_partner_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRefreshPartnerAccountLink)
 private:
  void set_has_partner_type();
  void clear_has_partner_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 partner_type_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientsRejoinChatChannels : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientsRejoinChatChannels) */ {
 public:
  CMsgClientsRejoinChatChannels();
  virtual ~CMsgClientsRejoinChatChannels();

  CMsgClientsRejoinChatChannels(const CMsgClientsRejoinChatChannels& from);

  inline CMsgClientsRejoinChatChannels& operator=(const CMsgClientsRejoinChatChannels& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientsRejoinChatChannels& default_instance();

  static inline const CMsgClientsRejoinChatChannels* internal_default_instance() {
    return reinterpret_cast<const CMsgClientsRejoinChatChannels*>(
               &_CMsgClientsRejoinChatChannels_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(CMsgClientsRejoinChatChannels* other);

  // implements Message ----------------------------------------------

  inline CMsgClientsRejoinChatChannels* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientsRejoinChatChannels* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientsRejoinChatChannels& from);
  void MergeFrom(const CMsgClientsRejoinChatChannels& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientsRejoinChatChannels* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientsRejoinChatChannels)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTASendFriendRecruits : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASendFriendRecruits) */ {
 public:
  CMsgDOTASendFriendRecruits();
  virtual ~CMsgDOTASendFriendRecruits();

  CMsgDOTASendFriendRecruits(const CMsgDOTASendFriendRecruits& from);

  inline CMsgDOTASendFriendRecruits& operator=(const CMsgDOTASendFriendRecruits& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASendFriendRecruits& default_instance();

  static inline const CMsgDOTASendFriendRecruits* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASendFriendRecruits*>(
               &_CMsgDOTASendFriendRecruits_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(CMsgDOTASendFriendRecruits* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTASendFriendRecruits* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTASendFriendRecruits* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTASendFriendRecruits& from);
  void MergeFrom(const CMsgDOTASendFriendRecruits& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTASendFriendRecruits* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 recruits = 1;
  int recruits_size() const;
  void clear_recruits();
  static const int kRecruitsFieldNumber = 1;
  ::google::protobuf::uint32 recruits(int index) const;
  void set_recruits(int index, ::google::protobuf::uint32 value);
  void add_recruits(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      recruits() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_recruits();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASendFriendRecruits)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > recruits_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFriendRecruitsRequest) */ {
 public:
  CMsgDOTAFriendRecruitsRequest();
  virtual ~CMsgDOTAFriendRecruitsRequest();

  CMsgDOTAFriendRecruitsRequest(const CMsgDOTAFriendRecruitsRequest& from);

  inline CMsgDOTAFriendRecruitsRequest& operator=(const CMsgDOTAFriendRecruitsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFriendRecruitsRequest& default_instance();

  static inline const CMsgDOTAFriendRecruitsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFriendRecruitsRequest*>(
               &_CMsgDOTAFriendRecruitsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(CMsgDOTAFriendRecruitsRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAFriendRecruitsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAFriendRecruitsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAFriendRecruitsRequest& from);
  void MergeFrom(const CMsgDOTAFriendRecruitsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAFriendRecruitsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 1;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 1;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFriendRecruitsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus) */ {
 public:
  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus();
  virtual ~CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus();

  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from);

  inline CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& operator=(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& default_instance();

  static inline const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus*>(
               &_CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from);
  void MergeFrom(const CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // optional uint32 levels_earned = 3;
  bool has_levels_earned() const;
  void clear_levels_earned();
  static const int kLevelsEarnedFieldNumber = 3;
  ::google::protobuf::uint32 levels_earned() const;
  void set_levels_earned(::google::protobuf::uint32 value);

  // optional bool bonus = 4;
  bool has_bonus() const;
  void clear_bonus();
  static const int kBonusFieldNumber = 4;
  bool bonus() const;
  void set_bonus(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_status();
  void clear_has_status();
  void set_has_levels_earned();
  void clear_has_levels_earned();
  void set_has_bonus();
  void clear_has_bonus();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 status_;
  ::google::protobuf::uint32 levels_earned_;
  bool bonus_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFriendRecruitsResponse) */ {
 public:
  CMsgDOTAFriendRecruitsResponse();
  virtual ~CMsgDOTAFriendRecruitsResponse();

  CMsgDOTAFriendRecruitsResponse(const CMsgDOTAFriendRecruitsResponse& from);

  inline CMsgDOTAFriendRecruitsResponse& operator=(const CMsgDOTAFriendRecruitsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFriendRecruitsResponse& default_instance();

  static inline const CMsgDOTAFriendRecruitsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFriendRecruitsResponse*>(
               &_CMsgDOTAFriendRecruitsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(CMsgDOTAFriendRecruitsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAFriendRecruitsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAFriendRecruitsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAFriendRecruitsResponse& from);
  void MergeFrom(const CMsgDOTAFriendRecruitsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAFriendRecruitsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus FriendRecruitStatus;

  typedef CMsgDOTAFriendRecruitsResponse_EResult EResult;
  static const EResult SUCCESS =
    CMsgDOTAFriendRecruitsResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED =
    CMsgDOTAFriendRecruitsResponse_EResult_ERROR_UNSPECIFIED;
  static inline bool EResult_IsValid(int value) {
    return CMsgDOTAFriendRecruitsResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgDOTAFriendRecruitsResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgDOTAFriendRecruitsResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgDOTAFriendRecruitsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgDOTAFriendRecruitsResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgDOTAFriendRecruitsResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgDOTAFriendRecruitsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruits = 2;
  int recruits_size() const;
  void clear_recruits();
  static const int kRecruitsFieldNumber = 2;
  const ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& recruits(int index) const;
  ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* mutable_recruits(int index);
  ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* add_recruits();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
      mutable_recruits();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
      recruits() const;

  // repeated .proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruiters = 3;
  int recruiters_size() const;
  void clear_recruiters();
  static const int kRecruitersFieldNumber = 3;
  const ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& recruiters(int index) const;
  ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* mutable_recruiters(int index);
  ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* add_recruiters();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
      mutable_recruiters();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
      recruiters() const;

  // optional .proto.dota.CMsgDOTAFriendRecruitsResponse.EResult result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult result() const;
  void set_result(::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFriendRecruitsResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus > recruits_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus > recruiters_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAFriendRecruitInviteAcceptDecline : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAFriendRecruitInviteAcceptDecline) */ {
 public:
  CMsgDOTAFriendRecruitInviteAcceptDecline();
  virtual ~CMsgDOTAFriendRecruitInviteAcceptDecline();

  CMsgDOTAFriendRecruitInviteAcceptDecline(const CMsgDOTAFriendRecruitInviteAcceptDecline& from);

  inline CMsgDOTAFriendRecruitInviteAcceptDecline& operator=(const CMsgDOTAFriendRecruitInviteAcceptDecline& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAFriendRecruitInviteAcceptDecline& default_instance();

  static inline const CMsgDOTAFriendRecruitInviteAcceptDecline* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAFriendRecruitInviteAcceptDecline*>(
               &_CMsgDOTAFriendRecruitInviteAcceptDecline_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(CMsgDOTAFriendRecruitInviteAcceptDecline* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAFriendRecruitInviteAcceptDecline* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAFriendRecruitInviteAcceptDecline* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAFriendRecruitInviteAcceptDecline& from);
  void MergeFrom(const CMsgDOTAFriendRecruitInviteAcceptDecline& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAFriendRecruitInviteAcceptDecline* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool accepted = 1;
  bool has_accepted() const;
  void clear_accepted();
  static const int kAcceptedFieldNumber = 1;
  bool accepted() const;
  void set_accepted(bool value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAFriendRecruitInviteAcceptDecline)
 private:
  void set_has_accepted();
  void clear_has_accepted();
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool accepted_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgRequestLeaguePrizePool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRequestLeaguePrizePool) */ {
 public:
  CMsgRequestLeaguePrizePool();
  virtual ~CMsgRequestLeaguePrizePool();

  CMsgRequestLeaguePrizePool(const CMsgRequestLeaguePrizePool& from);

  inline CMsgRequestLeaguePrizePool& operator=(const CMsgRequestLeaguePrizePool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestLeaguePrizePool& default_instance();

  static inline const CMsgRequestLeaguePrizePool* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestLeaguePrizePool*>(
               &_CMsgRequestLeaguePrizePool_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(CMsgRequestLeaguePrizePool* other);

  // implements Message ----------------------------------------------

  inline CMsgRequestLeaguePrizePool* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgRequestLeaguePrizePool* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgRequestLeaguePrizePool& from);
  void MergeFrom(const CMsgRequestLeaguePrizePool& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgRequestLeaguePrizePool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRequestLeaguePrizePool)
 private:
  void set_has_league_id();
  void clear_has_league_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgRequestLeaguePrizePoolResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRequestLeaguePrizePoolResponse) */ {
 public:
  CMsgRequestLeaguePrizePoolResponse();
  virtual ~CMsgRequestLeaguePrizePoolResponse();

  CMsgRequestLeaguePrizePoolResponse(const CMsgRequestLeaguePrizePoolResponse& from);

  inline CMsgRequestLeaguePrizePoolResponse& operator=(const CMsgRequestLeaguePrizePoolResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestLeaguePrizePoolResponse& default_instance();

  static inline const CMsgRequestLeaguePrizePoolResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestLeaguePrizePoolResponse*>(
               &_CMsgRequestLeaguePrizePoolResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(CMsgRequestLeaguePrizePoolResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgRequestLeaguePrizePoolResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgRequestLeaguePrizePoolResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgRequestLeaguePrizePoolResponse& from);
  void MergeFrom(const CMsgRequestLeaguePrizePoolResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgRequestLeaguePrizePoolResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 prize_pool = 2;
  bool has_prize_pool() const;
  void clear_prize_pool();
  static const int kPrizePoolFieldNumber = 2;
  ::google::protobuf::uint32 prize_pool() const;
  void set_prize_pool(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRequestLeaguePrizePoolResponse)
 private:
  void set_has_league_id();
  void clear_has_league_id();
  void set_has_prize_pool();
  void clear_has_prize_pool();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 prize_pool_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStandings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroStandings) */ {
 public:
  CMsgGCGetHeroStandings();
  virtual ~CMsgGCGetHeroStandings();

  CMsgGCGetHeroStandings(const CMsgGCGetHeroStandings& from);

  inline CMsgGCGetHeroStandings& operator=(const CMsgGCGetHeroStandings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStandings& default_instance();

  static inline const CMsgGCGetHeroStandings* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroStandings*>(
               &_CMsgGCGetHeroStandings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(CMsgGCGetHeroStandings* other);

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroStandings* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCGetHeroStandings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCGetHeroStandings& from);
  void MergeFrom(const CMsgGCGetHeroStandings& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCGetHeroStandings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroStandings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStandingsResponse_Hero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroStandingsResponse.Hero) */ {
 public:
  CMsgGCGetHeroStandingsResponse_Hero();
  virtual ~CMsgGCGetHeroStandingsResponse_Hero();

  CMsgGCGetHeroStandingsResponse_Hero(const CMsgGCGetHeroStandingsResponse_Hero& from);

  inline CMsgGCGetHeroStandingsResponse_Hero& operator=(const CMsgGCGetHeroStandingsResponse_Hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStandingsResponse_Hero& default_instance();

  static inline const CMsgGCGetHeroStandingsResponse_Hero* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroStandingsResponse_Hero*>(
               &_CMsgGCGetHeroStandingsResponse_Hero_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(CMsgGCGetHeroStandingsResponse_Hero* other);

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroStandingsResponse_Hero* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCGetHeroStandingsResponse_Hero* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCGetHeroStandingsResponse_Hero& from);
  void MergeFrom(const CMsgGCGetHeroStandingsResponse_Hero& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCGetHeroStandingsResponse_Hero* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 wins = 2;
  bool has_wins() const;
  void clear_wins();
  static const int kWinsFieldNumber = 2;
  ::google::protobuf::uint32 wins() const;
  void set_wins(::google::protobuf::uint32 value);

  // optional uint32 losses = 3;
  bool has_losses() const;
  void clear_losses();
  static const int kLossesFieldNumber = 3;
  ::google::protobuf::uint32 losses() const;
  void set_losses(::google::protobuf::uint32 value);

  // optional uint32 win_streak = 4;
  bool has_win_streak() const;
  void clear_win_streak();
  static const int kWinStreakFieldNumber = 4;
  ::google::protobuf::uint32 win_streak() const;
  void set_win_streak(::google::protobuf::uint32 value);

  // optional uint32 best_win_streak = 5;
  bool has_best_win_streak() const;
  void clear_best_win_streak();
  static const int kBestWinStreakFieldNumber = 5;
  ::google::protobuf::uint32 best_win_streak() const;
  void set_best_win_streak(::google::protobuf::uint32 value);

  // optional float avg_kills = 6;
  bool has_avg_kills() const;
  void clear_avg_kills();
  static const int kAvgKillsFieldNumber = 6;
  float avg_kills() const;
  void set_avg_kills(float value);

  // optional float avg_deaths = 7;
  bool has_avg_deaths() const;
  void clear_avg_deaths();
  static const int kAvgDeathsFieldNumber = 7;
  float avg_deaths() const;
  void set_avg_deaths(float value);

  // optional float avg_assists = 8;
  bool has_avg_assists() const;
  void clear_avg_assists();
  static const int kAvgAssistsFieldNumber = 8;
  float avg_assists() const;
  void set_avg_assists(float value);

  // optional float avg_gpm = 9;
  bool has_avg_gpm() const;
  void clear_avg_gpm();
  static const int kAvgGpmFieldNumber = 9;
  float avg_gpm() const;
  void set_avg_gpm(float value);

  // optional float avg_xpm = 10;
  bool has_avg_xpm() const;
  void clear_avg_xpm();
  static const int kAvgXpmFieldNumber = 10;
  float avg_xpm() const;
  void set_avg_xpm(float value);

  // optional uint32 best_kills = 11;
  bool has_best_kills() const;
  void clear_best_kills();
  static const int kBestKillsFieldNumber = 11;
  ::google::protobuf::uint32 best_kills() const;
  void set_best_kills(::google::protobuf::uint32 value);

  // optional uint32 best_assists = 12;
  bool has_best_assists() const;
  void clear_best_assists();
  static const int kBestAssistsFieldNumber = 12;
  ::google::protobuf::uint32 best_assists() const;
  void set_best_assists(::google::protobuf::uint32 value);

  // optional uint32 best_gpm = 13;
  bool has_best_gpm() const;
  void clear_best_gpm();
  static const int kBestGpmFieldNumber = 13;
  ::google::protobuf::uint32 best_gpm() const;
  void set_best_gpm(::google::protobuf::uint32 value);

  // optional uint32 best_xpm = 14;
  bool has_best_xpm() const;
  void clear_best_xpm();
  static const int kBestXpmFieldNumber = 14;
  ::google::protobuf::uint32 best_xpm() const;
  void set_best_xpm(::google::protobuf::uint32 value);

  // optional float performance = 15;
  bool has_performance() const;
  void clear_performance();
  static const int kPerformanceFieldNumber = 15;
  float performance() const;
  void set_performance(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroStandingsResponse.Hero)
 private:
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_wins();
  void clear_has_wins();
  void set_has_losses();
  void clear_has_losses();
  void set_has_win_streak();
  void clear_has_win_streak();
  void set_has_best_win_streak();
  void clear_has_best_win_streak();
  void set_has_avg_kills();
  void clear_has_avg_kills();
  void set_has_avg_deaths();
  void clear_has_avg_deaths();
  void set_has_avg_assists();
  void clear_has_avg_assists();
  void set_has_avg_gpm();
  void clear_has_avg_gpm();
  void set_has_avg_xpm();
  void clear_has_avg_xpm();
  void set_has_best_kills();
  void clear_has_best_kills();
  void set_has_best_assists();
  void clear_has_best_assists();
  void set_has_best_gpm();
  void clear_has_best_gpm();
  void set_has_best_xpm();
  void clear_has_best_xpm();
  void set_has_performance();
  void clear_has_performance();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 losses_;
  ::google::protobuf::uint32 win_streak_;
  ::google::protobuf::uint32 best_win_streak_;
  float avg_kills_;
  float avg_deaths_;
  float avg_assists_;
  float avg_gpm_;
  float avg_xpm_;
  ::google::protobuf::uint32 best_kills_;
  ::google::protobuf::uint32 best_assists_;
  ::google::protobuf::uint32 best_gpm_;
  ::google::protobuf::uint32 best_xpm_;
  float performance_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStandingsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroStandingsResponse) */ {
 public:
  CMsgGCGetHeroStandingsResponse();
  virtual ~CMsgGCGetHeroStandingsResponse();

  CMsgGCGetHeroStandingsResponse(const CMsgGCGetHeroStandingsResponse& from);

  inline CMsgGCGetHeroStandingsResponse& operator=(const CMsgGCGetHeroStandingsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStandingsResponse& default_instance();

  static inline const CMsgGCGetHeroStandingsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroStandingsResponse*>(
               &_CMsgGCGetHeroStandingsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(CMsgGCGetHeroStandingsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroStandingsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCGetHeroStandingsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCGetHeroStandingsResponse& from);
  void MergeFrom(const CMsgGCGetHeroStandingsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCGetHeroStandingsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCGetHeroStandingsResponse_Hero Hero;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCGetHeroStandingsResponse.Hero standings = 1;
  int standings_size() const;
  void clear_standings();
  static const int kStandingsFieldNumber = 1;
  const ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero& standings(int index) const;
  ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero* mutable_standings(int index);
  ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero* add_standings();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero >*
      mutable_standings();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero >&
      standings() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroStandingsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero > standings_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReservationsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReservationsRequest) */ {
 public:
  CMsgGCItemEditorReservationsRequest();
  virtual ~CMsgGCItemEditorReservationsRequest();

  CMsgGCItemEditorReservationsRequest(const CMsgGCItemEditorReservationsRequest& from);

  inline CMsgGCItemEditorReservationsRequest& operator=(const CMsgGCItemEditorReservationsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReservationsRequest& default_instance();

  static inline const CMsgGCItemEditorReservationsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReservationsRequest*>(
               &_CMsgGCItemEditorReservationsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(CMsgGCItemEditorReservationsRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReservationsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCItemEditorReservationsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCItemEditorReservationsRequest& from);
  void MergeFrom(const CMsgGCItemEditorReservationsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCItemEditorReservationsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReservationsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReservation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReservation) */ {
 public:
  CMsgGCItemEditorReservation();
  virtual ~CMsgGCItemEditorReservation();

  CMsgGCItemEditorReservation(const CMsgGCItemEditorReservation& from);

  inline CMsgGCItemEditorReservation& operator=(const CMsgGCItemEditorReservation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReservation& default_instance();

  static inline const CMsgGCItemEditorReservation* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReservation*>(
               &_CMsgGCItemEditorReservation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(CMsgGCItemEditorReservation* other);

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReservation* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCItemEditorReservation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCItemEditorReservation& from);
  void MergeFrom(const CMsgGCItemEditorReservation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCItemEditorReservation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReservation)
 private:
  void set_has_def_index();
  void clear_has_def_index();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 def_index_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReservationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReservationsResponse) */ {
 public:
  CMsgGCItemEditorReservationsResponse();
  virtual ~CMsgGCItemEditorReservationsResponse();

  CMsgGCItemEditorReservationsResponse(const CMsgGCItemEditorReservationsResponse& from);

  inline CMsgGCItemEditorReservationsResponse& operator=(const CMsgGCItemEditorReservationsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReservationsResponse& default_instance();

  static inline const CMsgGCItemEditorReservationsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReservationsResponse*>(
               &_CMsgGCItemEditorReservationsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(CMsgGCItemEditorReservationsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReservationsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCItemEditorReservationsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCItemEditorReservationsResponse& from);
  void MergeFrom(const CMsgGCItemEditorReservationsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCItemEditorReservationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCItemEditorReservation reservations = 1;
  int reservations_size() const;
  void clear_reservations();
  static const int kReservationsFieldNumber = 1;
  const ::proto::dota::CMsgGCItemEditorReservation& reservations(int index) const;
  ::proto::dota::CMsgGCItemEditorReservation* mutable_reservations(int index);
  ::proto::dota::CMsgGCItemEditorReservation* add_reservations();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCItemEditorReservation >*
      mutable_reservations();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCItemEditorReservation >&
      reservations() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReservationsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCItemEditorReservation > reservations_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReserveItemDef : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReserveItemDef) */ {
 public:
  CMsgGCItemEditorReserveItemDef();
  virtual ~CMsgGCItemEditorReserveItemDef();

  CMsgGCItemEditorReserveItemDef(const CMsgGCItemEditorReserveItemDef& from);

  inline CMsgGCItemEditorReserveItemDef& operator=(const CMsgGCItemEditorReserveItemDef& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReserveItemDef& default_instance();

  static inline const CMsgGCItemEditorReserveItemDef* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReserveItemDef*>(
               &_CMsgGCItemEditorReserveItemDef_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(CMsgGCItemEditorReserveItemDef* other);

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReserveItemDef* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCItemEditorReserveItemDef* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCItemEditorReserveItemDef& from);
  void MergeFrom(const CMsgGCItemEditorReserveItemDef& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCItemEditorReserveItemDef* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string username = 2;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReserveItemDef)
 private:
  void set_has_def_index();
  void clear_has_def_index();
  void set_has_username();
  void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 def_index_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReserveItemDefResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReserveItemDefResponse) */ {
 public:
  CMsgGCItemEditorReserveItemDefResponse();
  virtual ~CMsgGCItemEditorReserveItemDefResponse();

  CMsgGCItemEditorReserveItemDefResponse(const CMsgGCItemEditorReserveItemDefResponse& from);

  inline CMsgGCItemEditorReserveItemDefResponse& operator=(const CMsgGCItemEditorReserveItemDefResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReserveItemDefResponse& default_instance();

  static inline const CMsgGCItemEditorReserveItemDefResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReserveItemDefResponse*>(
               &_CMsgGCItemEditorReserveItemDefResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(CMsgGCItemEditorReserveItemDefResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReserveItemDefResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCItemEditorReserveItemDefResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCItemEditorReserveItemDefResponse& from);
  void MergeFrom(const CMsgGCItemEditorReserveItemDefResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCItemEditorReserveItemDefResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string username = 2;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // optional uint32 result = 3;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReserveItemDefResponse)
 private:
  void set_has_def_index();
  void clear_has_def_index();
  void set_has_username();
  void clear_has_username();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 def_index_;
  ::google::protobuf::uint32 result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReleaseReservation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReleaseReservation) */ {
 public:
  CMsgGCItemEditorReleaseReservation();
  virtual ~CMsgGCItemEditorReleaseReservation();

  CMsgGCItemEditorReleaseReservation(const CMsgGCItemEditorReleaseReservation& from);

  inline CMsgGCItemEditorReleaseReservation& operator=(const CMsgGCItemEditorReleaseReservation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReleaseReservation& default_instance();

  static inline const CMsgGCItemEditorReleaseReservation* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReleaseReservation*>(
               &_CMsgGCItemEditorReleaseReservation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(CMsgGCItemEditorReleaseReservation* other);

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReleaseReservation* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCItemEditorReleaseReservation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCItemEditorReleaseReservation& from);
  void MergeFrom(const CMsgGCItemEditorReleaseReservation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCItemEditorReleaseReservation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string username = 2;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReleaseReservation)
 private:
  void set_has_def_index();
  void clear_has_def_index();
  void set_has_username();
  void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 def_index_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorReleaseReservationResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorReleaseReservationResponse) */ {
 public:
  CMsgGCItemEditorReleaseReservationResponse();
  virtual ~CMsgGCItemEditorReleaseReservationResponse();

  CMsgGCItemEditorReleaseReservationResponse(const CMsgGCItemEditorReleaseReservationResponse& from);

  inline CMsgGCItemEditorReleaseReservationResponse& operator=(const CMsgGCItemEditorReleaseReservationResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorReleaseReservationResponse& default_instance();

  static inline const CMsgGCItemEditorReleaseReservationResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorReleaseReservationResponse*>(
               &_CMsgGCItemEditorReleaseReservationResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(CMsgGCItemEditorReleaseReservationResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorReleaseReservationResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCItemEditorReleaseReservationResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCItemEditorReleaseReservationResponse& from);
  void MergeFrom(const CMsgGCItemEditorReleaseReservationResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCItemEditorReleaseReservationResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // optional bool released = 2;
  bool has_released() const;
  void clear_released();
  static const int kReleasedFieldNumber = 2;
  bool released() const;
  void set_released(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorReleaseReservationResponse)
 private:
  void set_has_def_index();
  void clear_has_def_index();
  void set_has_released();
  void clear_has_released();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 def_index_;
  bool released_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorRequestLeagueInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorRequestLeagueInfo) */ {
 public:
  CMsgGCItemEditorRequestLeagueInfo();
  virtual ~CMsgGCItemEditorRequestLeagueInfo();

  CMsgGCItemEditorRequestLeagueInfo(const CMsgGCItemEditorRequestLeagueInfo& from);

  inline CMsgGCItemEditorRequestLeagueInfo& operator=(const CMsgGCItemEditorRequestLeagueInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorRequestLeagueInfo& default_instance();

  static inline const CMsgGCItemEditorRequestLeagueInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorRequestLeagueInfo*>(
               &_CMsgGCItemEditorRequestLeagueInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(CMsgGCItemEditorRequestLeagueInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorRequestLeagueInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCItemEditorRequestLeagueInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCItemEditorRequestLeagueInfo& from);
  void MergeFrom(const CMsgGCItemEditorRequestLeagueInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCItemEditorRequestLeagueInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorRequestLeagueInfo)
 private:
  void set_has_league_id();
  void clear_has_league_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCItemEditorLeagueInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCItemEditorLeagueInfoResponse) */ {
 public:
  CMsgGCItemEditorLeagueInfoResponse();
  virtual ~CMsgGCItemEditorLeagueInfoResponse();

  CMsgGCItemEditorLeagueInfoResponse(const CMsgGCItemEditorLeagueInfoResponse& from);

  inline CMsgGCItemEditorLeagueInfoResponse& operator=(const CMsgGCItemEditorLeagueInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCItemEditorLeagueInfoResponse& default_instance();

  static inline const CMsgGCItemEditorLeagueInfoResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCItemEditorLeagueInfoResponse*>(
               &_CMsgGCItemEditorLeagueInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(CMsgGCItemEditorLeagueInfoResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCItemEditorLeagueInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCItemEditorLeagueInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCItemEditorLeagueInfoResponse& from);
  void MergeFrom(const CMsgGCItemEditorLeagueInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCItemEditorLeagueInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string league_name = 2;
  bool has_league_name() const;
  void clear_league_name();
  static const int kLeagueNameFieldNumber = 2;
  const ::std::string& league_name() const;
  void set_league_name(const ::std::string& value);
  #if LANG_CXX11
  void set_league_name(::std::string&& value);
  #endif
  void set_league_name(const char* value);
  void set_league_name(const char* value, size_t size);
  ::std::string* mutable_league_name();
  ::std::string* release_league_name();
  void set_allocated_league_name(::std::string* league_name);

  // optional string league_desc = 3;
  bool has_league_desc() const;
  void clear_league_desc();
  static const int kLeagueDescFieldNumber = 3;
  const ::std::string& league_desc() const;
  void set_league_desc(const ::std::string& value);
  #if LANG_CXX11
  void set_league_desc(::std::string&& value);
  #endif
  void set_league_desc(const char* value);
  void set_league_desc(const char* value, size_t size);
  ::std::string* mutable_league_desc();
  ::std::string* release_league_desc();
  void set_allocated_league_desc(::std::string* league_desc);

  // optional string league_url = 4;
  bool has_league_url() const;
  void clear_league_url();
  static const int kLeagueUrlFieldNumber = 4;
  const ::std::string& league_url() const;
  void set_league_url(const ::std::string& value);
  #if LANG_CXX11
  void set_league_url(::std::string&& value);
  #endif
  void set_league_url(const char* value);
  void set_league_url(const char* value, size_t size);
  ::std::string* mutable_league_url();
  ::std::string* release_league_url();
  void set_allocated_league_url(::std::string* league_url);

  // optional string revenue_url = 5;
  bool has_revenue_url() const;
  void clear_revenue_url();
  static const int kRevenueUrlFieldNumber = 5;
  const ::std::string& revenue_url() const;
  void set_revenue_url(const ::std::string& value);
  #if LANG_CXX11
  void set_revenue_url(::std::string&& value);
  #endif
  void set_revenue_url(const char* value);
  void set_revenue_url(const char* value, size_t size);
  ::std::string* mutable_revenue_url();
  ::std::string* release_revenue_url();
  void set_allocated_revenue_url(::std::string* revenue_url);

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 tier = 6;
  bool has_tier() const;
  void clear_tier();
  static const int kTierFieldNumber = 6;
  ::google::protobuf::uint32 tier() const;
  void set_tier(::google::protobuf::uint32 value);

  // optional uint32 location = 7;
  bool has_location() const;
  void clear_location();
  static const int kLocationFieldNumber = 7;
  ::google::protobuf::uint32 location() const;
  void set_location(::google::protobuf::uint32 value);

  // optional uint32 result = 8;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 8;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCItemEditorLeagueInfoResponse)
 private:
  void set_has_league_id();
  void clear_has_league_id();
  void set_has_league_name();
  void clear_has_league_name();
  void set_has_league_desc();
  void clear_has_league_desc();
  void set_has_league_url();
  void clear_has_league_url();
  void set_has_revenue_url();
  void clear_has_revenue_url();
  void set_has_tier();
  void clear_has_tier();
  void set_has_location();
  void clear_has_location();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr league_name_;
  ::google::protobuf::internal::ArenaStringPtr league_desc_;
  ::google::protobuf::internal::ArenaStringPtr league_url_;
  ::google::protobuf::internal::ArenaStringPtr revenue_url_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 tier_;
  ::google::protobuf::uint32 location_;
  ::google::protobuf::uint32 result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTARewardTutorialPrizes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARewardTutorialPrizes) */ {
 public:
  CMsgDOTARewardTutorialPrizes();
  virtual ~CMsgDOTARewardTutorialPrizes();

  CMsgDOTARewardTutorialPrizes(const CMsgDOTARewardTutorialPrizes& from);

  inline CMsgDOTARewardTutorialPrizes& operator=(const CMsgDOTARewardTutorialPrizes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARewardTutorialPrizes& default_instance();

  static inline const CMsgDOTARewardTutorialPrizes* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARewardTutorialPrizes*>(
               &_CMsgDOTARewardTutorialPrizes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(CMsgDOTARewardTutorialPrizes* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARewardTutorialPrizes* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTARewardTutorialPrizes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTARewardTutorialPrizes& from);
  void MergeFrom(const CMsgDOTARewardTutorialPrizes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTARewardTutorialPrizes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 location_id = 1;
  bool has_location_id() const;
  void clear_location_id();
  static const int kLocationIdFieldNumber = 1;
  ::google::protobuf::uint32 location_id() const;
  void set_location_id(::google::protobuf::uint32 value);

  // optional bool tracking_only = 2;
  bool has_tracking_only() const;
  void clear_tracking_only();
  static const int kTrackingOnlyFieldNumber = 2;
  bool tracking_only() const;
  void set_tracking_only(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARewardTutorialPrizes)
 private:
  void set_has_location_id();
  void clear_has_location_id();
  void set_has_tracking_only();
  void clear_has_tracking_only();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 location_id_;
  bool tracking_only_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALastHitChallengeHighScorePost : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALastHitChallengeHighScorePost) */ {
 public:
  CMsgDOTALastHitChallengeHighScorePost();
  virtual ~CMsgDOTALastHitChallengeHighScorePost();

  CMsgDOTALastHitChallengeHighScorePost(const CMsgDOTALastHitChallengeHighScorePost& from);

  inline CMsgDOTALastHitChallengeHighScorePost& operator=(const CMsgDOTALastHitChallengeHighScorePost& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALastHitChallengeHighScorePost& default_instance();

  static inline const CMsgDOTALastHitChallengeHighScorePost* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALastHitChallengeHighScorePost*>(
               &_CMsgDOTALastHitChallengeHighScorePost_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(CMsgDOTALastHitChallengeHighScorePost* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALastHitChallengeHighScorePost* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALastHitChallengeHighScorePost* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALastHitChallengeHighScorePost& from);
  void MergeFrom(const CMsgDOTALastHitChallengeHighScorePost& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALastHitChallengeHighScorePost* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 high_score = 2;
  bool has_high_score() const;
  void clear_high_score();
  static const int kHighScoreFieldNumber = 2;
  ::google::protobuf::uint32 high_score() const;
  void set_high_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALastHitChallengeHighScorePost)
 private:
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_high_score();
  void clear_has_high_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 high_score_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALastHitChallengeHighScoreRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALastHitChallengeHighScoreRequest) */ {
 public:
  CMsgDOTALastHitChallengeHighScoreRequest();
  virtual ~CMsgDOTALastHitChallengeHighScoreRequest();

  CMsgDOTALastHitChallengeHighScoreRequest(const CMsgDOTALastHitChallengeHighScoreRequest& from);

  inline CMsgDOTALastHitChallengeHighScoreRequest& operator=(const CMsgDOTALastHitChallengeHighScoreRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALastHitChallengeHighScoreRequest& default_instance();

  static inline const CMsgDOTALastHitChallengeHighScoreRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALastHitChallengeHighScoreRequest*>(
               &_CMsgDOTALastHitChallengeHighScoreRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(CMsgDOTALastHitChallengeHighScoreRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALastHitChallengeHighScoreRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALastHitChallengeHighScoreRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALastHitChallengeHighScoreRequest& from);
  void MergeFrom(const CMsgDOTALastHitChallengeHighScoreRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALastHitChallengeHighScoreRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALastHitChallengeHighScoreRequest)
 private:
  void set_has_hero_id();
  void clear_has_hero_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALastHitChallengeHighScoreResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALastHitChallengeHighScoreResponse) */ {
 public:
  CMsgDOTALastHitChallengeHighScoreResponse();
  virtual ~CMsgDOTALastHitChallengeHighScoreResponse();

  CMsgDOTALastHitChallengeHighScoreResponse(const CMsgDOTALastHitChallengeHighScoreResponse& from);

  inline CMsgDOTALastHitChallengeHighScoreResponse& operator=(const CMsgDOTALastHitChallengeHighScoreResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALastHitChallengeHighScoreResponse& default_instance();

  static inline const CMsgDOTALastHitChallengeHighScoreResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALastHitChallengeHighScoreResponse*>(
               &_CMsgDOTALastHitChallengeHighScoreResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(CMsgDOTALastHitChallengeHighScoreResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALastHitChallengeHighScoreResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALastHitChallengeHighScoreResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALastHitChallengeHighScoreResponse& from);
  void MergeFrom(const CMsgDOTALastHitChallengeHighScoreResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALastHitChallengeHighScoreResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 score = 1;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 eresult = 2;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 2;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALastHitChallengeHighScoreResponse)
 private:
  void set_has_score();
  void clear_has_score();
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgFlipLobbyTeams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgFlipLobbyTeams) */ {
 public:
  CMsgFlipLobbyTeams();
  virtual ~CMsgFlipLobbyTeams();

  CMsgFlipLobbyTeams(const CMsgFlipLobbyTeams& from);

  inline CMsgFlipLobbyTeams& operator=(const CMsgFlipLobbyTeams& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFlipLobbyTeams& default_instance();

  static inline const CMsgFlipLobbyTeams* internal_default_instance() {
    return reinterpret_cast<const CMsgFlipLobbyTeams*>(
               &_CMsgFlipLobbyTeams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(CMsgFlipLobbyTeams* other);

  // implements Message ----------------------------------------------

  inline CMsgFlipLobbyTeams* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgFlipLobbyTeams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgFlipLobbyTeams& from);
  void MergeFrom(const CMsgFlipLobbyTeams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgFlipLobbyTeams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgFlipLobbyTeams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPresentedClientTerminateDlg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPresentedClientTerminateDlg) */ {
 public:
  CMsgPresentedClientTerminateDlg();
  virtual ~CMsgPresentedClientTerminateDlg();

  CMsgPresentedClientTerminateDlg(const CMsgPresentedClientTerminateDlg& from);

  inline CMsgPresentedClientTerminateDlg& operator=(const CMsgPresentedClientTerminateDlg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPresentedClientTerminateDlg& default_instance();

  static inline const CMsgPresentedClientTerminateDlg* internal_default_instance() {
    return reinterpret_cast<const CMsgPresentedClientTerminateDlg*>(
               &_CMsgPresentedClientTerminateDlg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(CMsgPresentedClientTerminateDlg* other);

  // implements Message ----------------------------------------------

  inline CMsgPresentedClientTerminateDlg* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPresentedClientTerminateDlg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPresentedClientTerminateDlg& from);
  void MergeFrom(const CMsgPresentedClientTerminateDlg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPresentedClientTerminateDlg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPresentedClientTerminateDlg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCLobbyUpdateBroadcastChannelInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo) */ {
 public:
  CMsgGCLobbyUpdateBroadcastChannelInfo();
  virtual ~CMsgGCLobbyUpdateBroadcastChannelInfo();

  CMsgGCLobbyUpdateBroadcastChannelInfo(const CMsgGCLobbyUpdateBroadcastChannelInfo& from);

  inline CMsgGCLobbyUpdateBroadcastChannelInfo& operator=(const CMsgGCLobbyUpdateBroadcastChannelInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCLobbyUpdateBroadcastChannelInfo& default_instance();

  static inline const CMsgGCLobbyUpdateBroadcastChannelInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGCLobbyUpdateBroadcastChannelInfo*>(
               &_CMsgGCLobbyUpdateBroadcastChannelInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(CMsgGCLobbyUpdateBroadcastChannelInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgGCLobbyUpdateBroadcastChannelInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCLobbyUpdateBroadcastChannelInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCLobbyUpdateBroadcastChannelInfo& from);
  void MergeFrom(const CMsgGCLobbyUpdateBroadcastChannelInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCLobbyUpdateBroadcastChannelInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string country_code = 2;
  bool has_country_code() const;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 2;
  const ::std::string& country_code() const;
  void set_country_code(const ::std::string& value);
  #if LANG_CXX11
  void set_country_code(::std::string&& value);
  #endif
  void set_country_code(const char* value);
  void set_country_code(const char* value, size_t size);
  ::std::string* mutable_country_code();
  ::std::string* release_country_code();
  void set_allocated_country_code(::std::string* country_code);

  // optional string description = 3;
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 3;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // optional string language_code = 4;
  bool has_language_code() const;
  void clear_language_code();
  static const int kLanguageCodeFieldNumber = 4;
  const ::std::string& language_code() const;
  void set_language_code(const ::std::string& value);
  #if LANG_CXX11
  void set_language_code(::std::string&& value);
  #endif
  void set_language_code(const char* value);
  void set_language_code(const char* value, size_t size);
  ::std::string* mutable_language_code();
  ::std::string* release_language_code();
  void set_allocated_language_code(::std::string* language_code);

  // optional uint32 channel_id = 1;
  bool has_channel_id() const;
  void clear_channel_id();
  static const int kChannelIdFieldNumber = 1;
  ::google::protobuf::uint32 channel_id() const;
  void set_channel_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo)
 private:
  void set_has_channel_id();
  void clear_has_channel_id();
  void set_has_country_code();
  void clear_has_country_code();
  void set_has_description();
  void clear_has_description();
  void set_has_language_code();
  void clear_has_language_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr country_code_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::google::protobuf::internal::ArenaStringPtr language_code_;
  ::google::protobuf::uint32 channel_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAClaimEventAction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClaimEventAction) */ {
 public:
  CMsgDOTAClaimEventAction();
  virtual ~CMsgDOTAClaimEventAction();

  CMsgDOTAClaimEventAction(const CMsgDOTAClaimEventAction& from);

  inline CMsgDOTAClaimEventAction& operator=(const CMsgDOTAClaimEventAction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAClaimEventAction& default_instance();

  static inline const CMsgDOTAClaimEventAction* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClaimEventAction*>(
               &_CMsgDOTAClaimEventAction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(CMsgDOTAClaimEventAction* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAClaimEventAction* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAClaimEventAction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAClaimEventAction& from);
  void MergeFrom(const CMsgDOTAClaimEventAction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAClaimEventAction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 action_id = 2;
  bool has_action_id() const;
  void clear_action_id();
  static const int kActionIdFieldNumber = 2;
  ::google::protobuf::uint32 action_id() const;
  void set_action_id(::google::protobuf::uint32 value);

  // optional uint32 quantity = 3;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 3;
  ::google::protobuf::uint32 quantity() const;
  void set_quantity(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClaimEventAction)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_action_id();
  void clear_has_action_id();
  void set_has_quantity();
  void clear_has_quantity();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 action_id_;
  ::google::protobuf::uint32 quantity_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAClaimEventActionResponse_MysteryItemRewardData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClaimEventActionResponse.MysteryItemRewardData) */ {
 public:
  CMsgDOTAClaimEventActionResponse_MysteryItemRewardData();
  virtual ~CMsgDOTAClaimEventActionResponse_MysteryItemRewardData();

  CMsgDOTAClaimEventActionResponse_MysteryItemRewardData(const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& from);

  inline CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& operator=(const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& default_instance();

  static inline const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData*>(
               &_CMsgDOTAClaimEventActionResponse_MysteryItemRewardData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(CMsgDOTAClaimEventActionResponse_MysteryItemRewardData* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAClaimEventActionResponse_MysteryItemRewardData* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAClaimEventActionResponse_MysteryItemRewardData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& from);
  void MergeFrom(const CMsgDOTAClaimEventActionResponse_MysteryItemRewardData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAClaimEventActionResponse_MysteryItemRewardData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 item_def = 1;
  bool has_item_def() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 1;
  ::google::protobuf::uint32 item_def() const;
  void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 item_category = 2;
  bool has_item_category() const;
  void clear_item_category();
  static const int kItemCategoryFieldNumber = 2;
  ::google::protobuf::uint32 item_category() const;
  void set_item_category(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClaimEventActionResponse.MysteryItemRewardData)
 private:
  void set_has_item_def();
  void clear_has_item_def();
  void set_has_item_category();
  void clear_has_item_category();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 item_category_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAClaimEventActionResponse_LootListRewardData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData) */ {
 public:
  CMsgDOTAClaimEventActionResponse_LootListRewardData();
  virtual ~CMsgDOTAClaimEventActionResponse_LootListRewardData();

  CMsgDOTAClaimEventActionResponse_LootListRewardData(const CMsgDOTAClaimEventActionResponse_LootListRewardData& from);

  inline CMsgDOTAClaimEventActionResponse_LootListRewardData& operator=(const CMsgDOTAClaimEventActionResponse_LootListRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAClaimEventActionResponse_LootListRewardData& default_instance();

  static inline const CMsgDOTAClaimEventActionResponse_LootListRewardData* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClaimEventActionResponse_LootListRewardData*>(
               &_CMsgDOTAClaimEventActionResponse_LootListRewardData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(CMsgDOTAClaimEventActionResponse_LootListRewardData* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAClaimEventActionResponse_LootListRewardData* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAClaimEventActionResponse_LootListRewardData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAClaimEventActionResponse_LootListRewardData& from);
  void MergeFrom(const CMsgDOTAClaimEventActionResponse_LootListRewardData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAClaimEventActionResponse_LootListRewardData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 item_def = 1;
  int item_def_size() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 1;
  ::google::protobuf::uint32 item_def(int index) const;
  void set_item_def(int index, ::google::protobuf::uint32 value);
  void add_item_def(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      item_def() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_item_def();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > item_def_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAClaimEventActionResponse_GrantedRewardData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData) */ {
 public:
  CMsgDOTAClaimEventActionResponse_GrantedRewardData();
  virtual ~CMsgDOTAClaimEventActionResponse_GrantedRewardData();

  CMsgDOTAClaimEventActionResponse_GrantedRewardData(const CMsgDOTAClaimEventActionResponse_GrantedRewardData& from);

  inline CMsgDOTAClaimEventActionResponse_GrantedRewardData& operator=(const CMsgDOTAClaimEventActionResponse_GrantedRewardData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAClaimEventActionResponse_GrantedRewardData& default_instance();

  static inline const CMsgDOTAClaimEventActionResponse_GrantedRewardData* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClaimEventActionResponse_GrantedRewardData*>(
               &_CMsgDOTAClaimEventActionResponse_GrantedRewardData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(CMsgDOTAClaimEventActionResponse_GrantedRewardData* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAClaimEventActionResponse_GrantedRewardData* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAClaimEventActionResponse_GrantedRewardData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAClaimEventActionResponse_GrantedRewardData& from);
  void MergeFrom(const CMsgDOTAClaimEventActionResponse_GrantedRewardData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAClaimEventActionResponse_GrantedRewardData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes reward_data = 4;
  bool has_reward_data() const;
  void clear_reward_data();
  static const int kRewardDataFieldNumber = 4;
  const ::std::string& reward_data() const;
  void set_reward_data(const ::std::string& value);
  #if LANG_CXX11
  void set_reward_data(::std::string&& value);
  #endif
  void set_reward_data(const char* value);
  void set_reward_data(const void* value, size_t size);
  ::std::string* mutable_reward_data();
  ::std::string* release_reward_data();
  void set_allocated_reward_data(::std::string* reward_data);

  // optional uint32 grant_index = 1;
  bool has_grant_index() const;
  void clear_grant_index();
  static const int kGrantIndexFieldNumber = 1;
  ::google::protobuf::uint32 grant_index() const;
  void set_grant_index(::google::protobuf::uint32 value);

  // optional uint32 score_index = 2;
  bool has_score_index() const;
  void clear_score_index();
  static const int kScoreIndexFieldNumber = 2;
  ::google::protobuf::uint32 score_index() const;
  void set_score_index(::google::protobuf::uint32 value);

  // optional uint32 reward_index = 3;
  bool has_reward_index() const;
  void clear_reward_index();
  static const int kRewardIndexFieldNumber = 3;
  ::google::protobuf::uint32 reward_index() const;
  void set_reward_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData)
 private:
  void set_has_grant_index();
  void clear_has_grant_index();
  void set_has_score_index();
  void clear_has_score_index();
  void set_has_reward_index();
  void clear_has_reward_index();
  void set_has_reward_data();
  void clear_has_reward_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr reward_data_;
  ::google::protobuf::uint32 grant_index_;
  ::google::protobuf::uint32 score_index_;
  ::google::protobuf::uint32 reward_index_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAClaimEventActionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAClaimEventActionResponse) */ {
 public:
  CMsgDOTAClaimEventActionResponse();
  virtual ~CMsgDOTAClaimEventActionResponse();

  CMsgDOTAClaimEventActionResponse(const CMsgDOTAClaimEventActionResponse& from);

  inline CMsgDOTAClaimEventActionResponse& operator=(const CMsgDOTAClaimEventActionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAClaimEventActionResponse& default_instance();

  static inline const CMsgDOTAClaimEventActionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAClaimEventActionResponse*>(
               &_CMsgDOTAClaimEventActionResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(CMsgDOTAClaimEventActionResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAClaimEventActionResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAClaimEventActionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAClaimEventActionResponse& from);
  void MergeFrom(const CMsgDOTAClaimEventActionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAClaimEventActionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAClaimEventActionResponse_MysteryItemRewardData MysteryItemRewardData;
  typedef CMsgDOTAClaimEventActionResponse_LootListRewardData LootListRewardData;
  typedef CMsgDOTAClaimEventActionResponse_GrantedRewardData GrantedRewardData;

  typedef CMsgDOTAClaimEventActionResponse_ResultCode ResultCode;
  static const ResultCode Success =
    CMsgDOTAClaimEventActionResponse_ResultCode_Success;
  static const ResultCode InvalidEvent =
    CMsgDOTAClaimEventActionResponse_ResultCode_InvalidEvent;
  static const ResultCode EventNotActive =
    CMsgDOTAClaimEventActionResponse_ResultCode_EventNotActive;
  static const ResultCode InvalidAction =
    CMsgDOTAClaimEventActionResponse_ResultCode_InvalidAction;
  static const ResultCode ServerError =
    CMsgDOTAClaimEventActionResponse_ResultCode_ServerError;
  static const ResultCode InsufficientPoints =
    CMsgDOTAClaimEventActionResponse_ResultCode_InsufficientPoints;
  static const ResultCode InsufficentLevel =
    CMsgDOTAClaimEventActionResponse_ResultCode_InsufficentLevel;
  static const ResultCode AlreadyClaimed =
    CMsgDOTAClaimEventActionResponse_ResultCode_AlreadyClaimed;
  static const ResultCode SDOLockFailure =
    CMsgDOTAClaimEventActionResponse_ResultCode_SDOLockFailure;
  static const ResultCode SDOLoadFailure =
    CMsgDOTAClaimEventActionResponse_ResultCode_SDOLoadFailure;
  static const ResultCode EventNotOwned =
    CMsgDOTAClaimEventActionResponse_ResultCode_EventNotOwned;
  static const ResultCode Timeout =
    CMsgDOTAClaimEventActionResponse_ResultCode_Timeout;
  static inline bool ResultCode_IsValid(int value) {
    return CMsgDOTAClaimEventActionResponse_ResultCode_IsValid(value);
  }
  static const ResultCode ResultCode_MIN =
    CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_MIN;
  static const ResultCode ResultCode_MAX =
    CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_MAX;
  static const int ResultCode_ARRAYSIZE =
    CMsgDOTAClaimEventActionResponse_ResultCode_ResultCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ResultCode_descriptor() {
    return CMsgDOTAClaimEventActionResponse_ResultCode_descriptor();
  }
  static inline const ::std::string& ResultCode_Name(ResultCode value) {
    return CMsgDOTAClaimEventActionResponse_ResultCode_Name(value);
  }
  static inline bool ResultCode_Parse(const ::std::string& name,
      ResultCode* value) {
    return CMsgDOTAClaimEventActionResponse_ResultCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData reward_results = 2;
  int reward_results_size() const;
  void clear_reward_results();
  static const int kRewardResultsFieldNumber = 2;
  const ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData& reward_results(int index) const;
  ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData* mutable_reward_results(int index);
  ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData* add_reward_results();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData >*
      mutable_reward_results();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData >&
      reward_results() const;

  // optional .proto.dota.CMsgDOTAClaimEventActionResponse.ResultCode result = 1 [default = Success];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode result() const;
  void set_result(::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAClaimEventActionResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData > reward_results_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAGetEventPoints : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetEventPoints) */ {
 public:
  CMsgDOTAGetEventPoints();
  virtual ~CMsgDOTAGetEventPoints();

  CMsgDOTAGetEventPoints(const CMsgDOTAGetEventPoints& from);

  inline CMsgDOTAGetEventPoints& operator=(const CMsgDOTAGetEventPoints& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetEventPoints& default_instance();

  static inline const CMsgDOTAGetEventPoints* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetEventPoints*>(
               &_CMsgDOTAGetEventPoints_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    129;

  void Swap(CMsgDOTAGetEventPoints* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetEventPoints* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAGetEventPoints* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAGetEventPoints& from);
  void MergeFrom(const CMsgDOTAGetEventPoints& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAGetEventPoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetEventPoints)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAGetEventPointsResponse_Action : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetEventPointsResponse.Action) */ {
 public:
  CMsgDOTAGetEventPointsResponse_Action();
  virtual ~CMsgDOTAGetEventPointsResponse_Action();

  CMsgDOTAGetEventPointsResponse_Action(const CMsgDOTAGetEventPointsResponse_Action& from);

  inline CMsgDOTAGetEventPointsResponse_Action& operator=(const CMsgDOTAGetEventPointsResponse_Action& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetEventPointsResponse_Action& default_instance();

  static inline const CMsgDOTAGetEventPointsResponse_Action* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetEventPointsResponse_Action*>(
               &_CMsgDOTAGetEventPointsResponse_Action_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    130;

  void Swap(CMsgDOTAGetEventPointsResponse_Action* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetEventPointsResponse_Action* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAGetEventPointsResponse_Action* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAGetEventPointsResponse_Action& from);
  void MergeFrom(const CMsgDOTAGetEventPointsResponse_Action& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAGetEventPointsResponse_Action* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 action_id = 1;
  bool has_action_id() const;
  void clear_action_id();
  static const int kActionIdFieldNumber = 1;
  ::google::protobuf::uint32 action_id() const;
  void set_action_id(::google::protobuf::uint32 value);

  // optional uint32 times_completed = 2 [default = 1];
  bool has_times_completed() const;
  void clear_times_completed();
  static const int kTimesCompletedFieldNumber = 2;
  ::google::protobuf::uint32 times_completed() const;
  void set_times_completed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetEventPointsResponse.Action)
 private:
  void set_has_action_id();
  void clear_has_action_id();
  void set_has_times_completed();
  void clear_has_times_completed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 action_id_;
  ::google::protobuf::uint32 times_completed_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAGetEventPointsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetEventPointsResponse) */ {
 public:
  CMsgDOTAGetEventPointsResponse();
  virtual ~CMsgDOTAGetEventPointsResponse();

  CMsgDOTAGetEventPointsResponse(const CMsgDOTAGetEventPointsResponse& from);

  inline CMsgDOTAGetEventPointsResponse& operator=(const CMsgDOTAGetEventPointsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetEventPointsResponse& default_instance();

  static inline const CMsgDOTAGetEventPointsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetEventPointsResponse*>(
               &_CMsgDOTAGetEventPointsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    131;

  void Swap(CMsgDOTAGetEventPointsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetEventPointsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAGetEventPointsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAGetEventPointsResponse& from);
  void MergeFrom(const CMsgDOTAGetEventPointsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAGetEventPointsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGetEventPointsResponse_Action Action;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAGetEventPointsResponse.Action completed_actions = 6;
  int completed_actions_size() const;
  void clear_completed_actions();
  static const int kCompletedActionsFieldNumber = 6;
  const ::proto::dota::CMsgDOTAGetEventPointsResponse_Action& completed_actions(int index) const;
  ::proto::dota::CMsgDOTAGetEventPointsResponse_Action* mutable_completed_actions(int index);
  ::proto::dota::CMsgDOTAGetEventPointsResponse_Action* add_completed_actions();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetEventPointsResponse_Action >*
      mutable_completed_actions();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetEventPointsResponse_Action >&
      completed_actions() const;

  // optional uint32 total_points = 1;
  bool has_total_points() const;
  void clear_total_points();
  static const int kTotalPointsFieldNumber = 1;
  ::google::protobuf::uint32 total_points() const;
  void set_total_points(::google::protobuf::uint32 value);

  // optional uint32 total_premium_points = 2;
  bool has_total_premium_points() const;
  void clear_total_premium_points();
  static const int kTotalPremiumPointsFieldNumber = 2;
  ::google::protobuf::uint32 total_premium_points() const;
  void set_total_premium_points(::google::protobuf::uint32 value);

  // optional uint32 event_id = 3;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 3;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 points = 4;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 4;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // optional uint32 premium_points = 5;
  bool has_premium_points() const;
  void clear_premium_points();
  static const int kPremiumPointsFieldNumber = 5;
  ::google::protobuf::uint32 premium_points() const;
  void set_premium_points(::google::protobuf::uint32 value);

  // optional uint32 account_id = 7;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 7;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional bool owned = 8;
  bool has_owned() const;
  void clear_owned();
  static const int kOwnedFieldNumber = 8;
  bool owned() const;
  void set_owned(bool value);

  // optional uint32 audit_action = 9;
  bool has_audit_action() const;
  void clear_audit_action();
  static const int kAuditActionFieldNumber = 9;
  ::google::protobuf::uint32 audit_action() const;
  void set_audit_action(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetEventPointsResponse)
 private:
  void set_has_total_points();
  void clear_has_total_points();
  void set_has_total_premium_points();
  void clear_has_total_premium_points();
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_points();
  void clear_has_points();
  void set_has_premium_points();
  void clear_has_premium_points();
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_owned();
  void clear_has_owned();
  void set_has_audit_action();
  void clear_has_audit_action();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetEventPointsResponse_Action > completed_actions_;
  ::google::protobuf::uint32 total_points_;
  ::google::protobuf::uint32 total_premium_points_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 points_;
  ::google::protobuf::uint32 premium_points_;
  ::google::protobuf::uint32 account_id_;
  bool owned_;
  ::google::protobuf::uint32 audit_action_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPeriodicResource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetPeriodicResource) */ {
 public:
  CMsgDOTAGetPeriodicResource();
  virtual ~CMsgDOTAGetPeriodicResource();

  CMsgDOTAGetPeriodicResource(const CMsgDOTAGetPeriodicResource& from);

  inline CMsgDOTAGetPeriodicResource& operator=(const CMsgDOTAGetPeriodicResource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetPeriodicResource& default_instance();

  static inline const CMsgDOTAGetPeriodicResource* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetPeriodicResource*>(
               &_CMsgDOTAGetPeriodicResource_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    132;

  void Swap(CMsgDOTAGetPeriodicResource* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetPeriodicResource* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAGetPeriodicResource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAGetPeriodicResource& from);
  void MergeFrom(const CMsgDOTAGetPeriodicResource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAGetPeriodicResource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 periodic_resource_id = 2;
  bool has_periodic_resource_id() const;
  void clear_periodic_resource_id();
  static const int kPeriodicResourceIdFieldNumber = 2;
  ::google::protobuf::uint32 periodic_resource_id() const;
  void set_periodic_resource_id(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetPeriodicResource)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_periodic_resource_id();
  void clear_has_periodic_resource_id();
  void set_has_timestamp();
  void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 periodic_resource_id_;
  ::google::protobuf::uint32 timestamp_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPeriodicResourceResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetPeriodicResourceResponse) */ {
 public:
  CMsgDOTAGetPeriodicResourceResponse();
  virtual ~CMsgDOTAGetPeriodicResourceResponse();

  CMsgDOTAGetPeriodicResourceResponse(const CMsgDOTAGetPeriodicResourceResponse& from);

  inline CMsgDOTAGetPeriodicResourceResponse& operator=(const CMsgDOTAGetPeriodicResourceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetPeriodicResourceResponse& default_instance();

  static inline const CMsgDOTAGetPeriodicResourceResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetPeriodicResourceResponse*>(
               &_CMsgDOTAGetPeriodicResourceResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    133;

  void Swap(CMsgDOTAGetPeriodicResourceResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetPeriodicResourceResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAGetPeriodicResourceResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAGetPeriodicResourceResponse& from);
  void MergeFrom(const CMsgDOTAGetPeriodicResourceResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAGetPeriodicResourceResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 periodic_resource_max = 1;
  bool has_periodic_resource_max() const;
  void clear_periodic_resource_max();
  static const int kPeriodicResourceMaxFieldNumber = 1;
  ::google::protobuf::uint32 periodic_resource_max() const;
  void set_periodic_resource_max(::google::protobuf::uint32 value);

  // optional uint32 periodic_resource_used = 2;
  bool has_periodic_resource_used() const;
  void clear_periodic_resource_used();
  static const int kPeriodicResourceUsedFieldNumber = 2;
  ::google::protobuf::uint32 periodic_resource_used() const;
  void set_periodic_resource_used(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetPeriodicResourceResponse)
 private:
  void set_has_periodic_resource_max();
  void clear_has_periodic_resource_max();
  void set_has_periodic_resource_used();
  void clear_has_periodic_resource_used();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 periodic_resource_max_;
  ::google::protobuf::uint32 periodic_resource_used_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAPeriodicResourceUpdated : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPeriodicResourceUpdated) */ {
 public:
  CMsgDOTAPeriodicResourceUpdated();
  virtual ~CMsgDOTAPeriodicResourceUpdated();

  CMsgDOTAPeriodicResourceUpdated(const CMsgDOTAPeriodicResourceUpdated& from);

  inline CMsgDOTAPeriodicResourceUpdated& operator=(const CMsgDOTAPeriodicResourceUpdated& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPeriodicResourceUpdated& default_instance();

  static inline const CMsgDOTAPeriodicResourceUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPeriodicResourceUpdated*>(
               &_CMsgDOTAPeriodicResourceUpdated_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(CMsgDOTAPeriodicResourceUpdated* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAPeriodicResourceUpdated* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAPeriodicResourceUpdated* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAPeriodicResourceUpdated& from);
  void MergeFrom(const CMsgDOTAPeriodicResourceUpdated& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAPeriodicResourceUpdated* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAGetPeriodicResource periodic_resource_key = 1;
  bool has_periodic_resource_key() const;
  void clear_periodic_resource_key();
  static const int kPeriodicResourceKeyFieldNumber = 1;
  const ::proto::dota::CMsgDOTAGetPeriodicResource& periodic_resource_key() const;
  ::proto::dota::CMsgDOTAGetPeriodicResource* mutable_periodic_resource_key();
  ::proto::dota::CMsgDOTAGetPeriodicResource* release_periodic_resource_key();
  void set_allocated_periodic_resource_key(::proto::dota::CMsgDOTAGetPeriodicResource* periodic_resource_key);

  // optional .proto.dota.CMsgDOTAGetPeriodicResourceResponse periodic_resource_value = 2;
  bool has_periodic_resource_value() const;
  void clear_periodic_resource_value();
  static const int kPeriodicResourceValueFieldNumber = 2;
  const ::proto::dota::CMsgDOTAGetPeriodicResourceResponse& periodic_resource_value() const;
  ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* mutable_periodic_resource_value();
  ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* release_periodic_resource_value();
  void set_allocated_periodic_resource_value(::proto::dota::CMsgDOTAGetPeriodicResourceResponse* periodic_resource_value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPeriodicResourceUpdated)
 private:
  void set_has_periodic_resource_key();
  void clear_has_periodic_resource_key();
  void set_has_periodic_resource_value();
  void clear_has_periodic_resource_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgDOTAGetPeriodicResource* periodic_resource_key_;
  ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* periodic_resource_value_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALiveLeagueGameUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALiveLeagueGameUpdate) */ {
 public:
  CMsgDOTALiveLeagueGameUpdate();
  virtual ~CMsgDOTALiveLeagueGameUpdate();

  CMsgDOTALiveLeagueGameUpdate(const CMsgDOTALiveLeagueGameUpdate& from);

  inline CMsgDOTALiveLeagueGameUpdate& operator=(const CMsgDOTALiveLeagueGameUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALiveLeagueGameUpdate& default_instance();

  static inline const CMsgDOTALiveLeagueGameUpdate* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALiveLeagueGameUpdate*>(
               &_CMsgDOTALiveLeagueGameUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    135;

  void Swap(CMsgDOTALiveLeagueGameUpdate* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALiveLeagueGameUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALiveLeagueGameUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALiveLeagueGameUpdate& from);
  void MergeFrom(const CMsgDOTALiveLeagueGameUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALiveLeagueGameUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 live_league_games = 1;
  bool has_live_league_games() const;
  void clear_live_league_games();
  static const int kLiveLeagueGamesFieldNumber = 1;
  ::google::protobuf::uint32 live_league_games() const;
  void set_live_league_games(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALiveLeagueGameUpdate)
 private:
  void set_has_live_league_games();
  void clear_has_live_league_games();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 live_league_games_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumSelection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumSelection) */ {
 public:
  CMsgDOTACompendiumSelection();
  virtual ~CMsgDOTACompendiumSelection();

  CMsgDOTACompendiumSelection(const CMsgDOTACompendiumSelection& from);

  inline CMsgDOTACompendiumSelection& operator=(const CMsgDOTACompendiumSelection& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumSelection& default_instance();

  static inline const CMsgDOTACompendiumSelection* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumSelection*>(
               &_CMsgDOTACompendiumSelection_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    136;

  void Swap(CMsgDOTACompendiumSelection* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumSelection* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTACompendiumSelection* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTACompendiumSelection& from);
  void MergeFrom(const CMsgDOTACompendiumSelection& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTACompendiumSelection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 selection_index = 1;
  bool has_selection_index() const;
  void clear_selection_index();
  static const int kSelectionIndexFieldNumber = 1;
  ::google::protobuf::uint32 selection_index() const;
  void set_selection_index(::google::protobuf::uint32 value);

  // optional uint32 selection = 2;
  bool has_selection() const;
  void clear_selection();
  static const int kSelectionFieldNumber = 2;
  ::google::protobuf::uint32 selection() const;
  void set_selection(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 3;
  bool has_leagueid() const;
  void clear_leagueid();
  static const int kLeagueidFieldNumber = 3;
  ::google::protobuf::uint32 leagueid() const;
  void set_leagueid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumSelection)
 private:
  void set_has_selection_index();
  void clear_has_selection_index();
  void set_has_selection();
  void clear_has_selection();
  void set_has_leagueid();
  void clear_has_leagueid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 selection_index_;
  ::google::protobuf::uint32 selection_;
  ::google::protobuf::uint32 leagueid_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumSelectionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumSelectionResponse) */ {
 public:
  CMsgDOTACompendiumSelectionResponse();
  virtual ~CMsgDOTACompendiumSelectionResponse();

  CMsgDOTACompendiumSelectionResponse(const CMsgDOTACompendiumSelectionResponse& from);

  inline CMsgDOTACompendiumSelectionResponse& operator=(const CMsgDOTACompendiumSelectionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumSelectionResponse& default_instance();

  static inline const CMsgDOTACompendiumSelectionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumSelectionResponse*>(
               &_CMsgDOTACompendiumSelectionResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    137;

  void Swap(CMsgDOTACompendiumSelectionResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumSelectionResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTACompendiumSelectionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTACompendiumSelectionResponse& from);
  void MergeFrom(const CMsgDOTACompendiumSelectionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTACompendiumSelectionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTACompendiumSelection extra_selections = 2;
  int extra_selections_size() const;
  void clear_extra_selections();
  static const int kExtraSelectionsFieldNumber = 2;
  const ::proto::dota::CMsgDOTACompendiumSelection& extra_selections(int index) const;
  ::proto::dota::CMsgDOTACompendiumSelection* mutable_extra_selections(int index);
  ::proto::dota::CMsgDOTACompendiumSelection* add_extra_selections();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >*
      mutable_extra_selections();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >&
      extra_selections() const;

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumSelectionResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection > extra_selections_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumData) */ {
 public:
  CMsgDOTACompendiumData();
  virtual ~CMsgDOTACompendiumData();

  CMsgDOTACompendiumData(const CMsgDOTACompendiumData& from);

  inline CMsgDOTACompendiumData& operator=(const CMsgDOTACompendiumData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumData& default_instance();

  static inline const CMsgDOTACompendiumData* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumData*>(
               &_CMsgDOTACompendiumData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    138;

  void Swap(CMsgDOTACompendiumData* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumData* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTACompendiumData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTACompendiumData& from);
  void MergeFrom(const CMsgDOTACompendiumData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTACompendiumData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTACompendiumSelection selections = 1;
  int selections_size() const;
  void clear_selections();
  static const int kSelectionsFieldNumber = 1;
  const ::proto::dota::CMsgDOTACompendiumSelection& selections(int index) const;
  ::proto::dota::CMsgDOTACompendiumSelection* mutable_selections(int index);
  ::proto::dota::CMsgDOTACompendiumSelection* add_selections();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >*
      mutable_selections();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >&
      selections() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection > selections_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumDataRequest) */ {
 public:
  CMsgDOTACompendiumDataRequest();
  virtual ~CMsgDOTACompendiumDataRequest();

  CMsgDOTACompendiumDataRequest(const CMsgDOTACompendiumDataRequest& from);

  inline CMsgDOTACompendiumDataRequest& operator=(const CMsgDOTACompendiumDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumDataRequest& default_instance();

  static inline const CMsgDOTACompendiumDataRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumDataRequest*>(
               &_CMsgDOTACompendiumDataRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    139;

  void Swap(CMsgDOTACompendiumDataRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumDataRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTACompendiumDataRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTACompendiumDataRequest& from);
  void MergeFrom(const CMsgDOTACompendiumDataRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTACompendiumDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 2;
  bool has_leagueid() const;
  void clear_leagueid();
  static const int kLeagueidFieldNumber = 2;
  ::google::protobuf::uint32 leagueid() const;
  void set_leagueid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumDataRequest)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_leagueid();
  void clear_has_leagueid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 leagueid_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumDataResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumDataResponse) */ {
 public:
  CMsgDOTACompendiumDataResponse();
  virtual ~CMsgDOTACompendiumDataResponse();

  CMsgDOTACompendiumDataResponse(const CMsgDOTACompendiumDataResponse& from);

  inline CMsgDOTACompendiumDataResponse& operator=(const CMsgDOTACompendiumDataResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumDataResponse& default_instance();

  static inline const CMsgDOTACompendiumDataResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumDataResponse*>(
               &_CMsgDOTACompendiumDataResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(CMsgDOTACompendiumDataResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumDataResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTACompendiumDataResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTACompendiumDataResponse& from);
  void MergeFrom(const CMsgDOTACompendiumDataResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTACompendiumDataResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTACompendiumData compendium_data = 4;
  bool has_compendium_data() const;
  void clear_compendium_data();
  static const int kCompendiumDataFieldNumber = 4;
  const ::proto::dota::CMsgDOTACompendiumData& compendium_data() const;
  ::proto::dota::CMsgDOTACompendiumData* mutable_compendium_data();
  ::proto::dota::CMsgDOTACompendiumData* release_compendium_data();
  void set_allocated_compendium_data(::proto::dota::CMsgDOTACompendiumData* compendium_data);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 leagueid = 2;
  bool has_leagueid() const;
  void clear_leagueid();
  static const int kLeagueidFieldNumber = 2;
  ::google::protobuf::uint32 leagueid() const;
  void set_leagueid(::google::protobuf::uint32 value);

  // optional uint32 result = 3 [default = 2];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 3;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumDataResponse)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_leagueid();
  void clear_has_leagueid();
  void set_has_result();
  void clear_has_result();
  void set_has_compendium_data();
  void clear_has_compendium_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgDOTACompendiumData* compendium_data_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 leagueid_;
  ::google::protobuf::uint32 result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPlayerMatchHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetPlayerMatchHistory) */ {
 public:
  CMsgDOTAGetPlayerMatchHistory();
  virtual ~CMsgDOTAGetPlayerMatchHistory();

  CMsgDOTAGetPlayerMatchHistory(const CMsgDOTAGetPlayerMatchHistory& from);

  inline CMsgDOTAGetPlayerMatchHistory& operator=(const CMsgDOTAGetPlayerMatchHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetPlayerMatchHistory& default_instance();

  static inline const CMsgDOTAGetPlayerMatchHistory* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetPlayerMatchHistory*>(
               &_CMsgDOTAGetPlayerMatchHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    141;

  void Swap(CMsgDOTAGetPlayerMatchHistory* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetPlayerMatchHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAGetPlayerMatchHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAGetPlayerMatchHistory& from);
  void MergeFrom(const CMsgDOTAGetPlayerMatchHistory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAGetPlayerMatchHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 start_at_match_id = 2;
  bool has_start_at_match_id() const;
  void clear_start_at_match_id();
  static const int kStartAtMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 start_at_match_id() const;
  void set_start_at_match_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 matches_requested = 3;
  bool has_matches_requested() const;
  void clear_matches_requested();
  static const int kMatchesRequestedFieldNumber = 3;
  ::google::protobuf::uint32 matches_requested() const;
  void set_matches_requested(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 request_id = 5;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 5;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // optional bool include_practice_matches = 7;
  bool has_include_practice_matches() const;
  void clear_include_practice_matches();
  static const int kIncludePracticeMatchesFieldNumber = 7;
  bool include_practice_matches() const;
  void set_include_practice_matches(bool value);

  // optional bool include_custom_games = 8;
  bool has_include_custom_games() const;
  void clear_include_custom_games();
  static const int kIncludeCustomGamesFieldNumber = 8;
  bool include_custom_games() const;
  void set_include_custom_games(bool value);

  // optional bool include_event_games = 9;
  bool has_include_event_games() const;
  void clear_include_event_games();
  static const int kIncludeEventGamesFieldNumber = 9;
  bool include_event_games() const;
  void set_include_event_games(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetPlayerMatchHistory)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_start_at_match_id();
  void clear_has_start_at_match_id();
  void set_has_matches_requested();
  void clear_has_matches_requested();
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_request_id();
  void clear_has_request_id();
  void set_has_include_practice_matches();
  void clear_has_include_practice_matches();
  void set_has_include_custom_games();
  void clear_has_include_custom_games();
  void set_has_include_event_games();
  void clear_has_include_event_games();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 start_at_match_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 matches_requested_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 request_id_;
  bool include_practice_matches_;
  bool include_custom_games_;
  bool include_event_games_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPlayerMatchHistoryResponse_Match : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match) */ {
 public:
  CMsgDOTAGetPlayerMatchHistoryResponse_Match();
  virtual ~CMsgDOTAGetPlayerMatchHistoryResponse_Match();

  CMsgDOTAGetPlayerMatchHistoryResponse_Match(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from);

  inline CMsgDOTAGetPlayerMatchHistoryResponse_Match& operator=(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetPlayerMatchHistoryResponse_Match& default_instance();

  static inline const CMsgDOTAGetPlayerMatchHistoryResponse_Match* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetPlayerMatchHistoryResponse_Match*>(
               &_CMsgDOTAGetPlayerMatchHistoryResponse_Match_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    142;

  void Swap(CMsgDOTAGetPlayerMatchHistoryResponse_Match* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetPlayerMatchHistoryResponse_Match* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAGetPlayerMatchHistoryResponse_Match* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from);
  void MergeFrom(const CMsgDOTAGetPlayerMatchHistoryResponse_Match& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAGetPlayerMatchHistoryResponse_Match* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string team_name = 20;
  bool has_team_name() const;
  void clear_team_name();
  static const int kTeamNameFieldNumber = 20;
  const ::std::string& team_name() const;
  void set_team_name(const ::std::string& value);
  #if LANG_CXX11
  void set_team_name(::std::string&& value);
  #endif
  void set_team_name(const char* value);
  void set_team_name(const char* value, size_t size);
  ::std::string* mutable_team_name();
  ::std::string* release_team_name();
  void set_allocated_team_name(::std::string* team_name);

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 start_time = 2;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 3;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 game_mode = 5;
  bool has_game_mode() const;
  void clear_game_mode();
  static const int kGameModeFieldNumber = 5;
  ::google::protobuf::uint32 game_mode() const;
  void set_game_mode(::google::protobuf::uint32 value);

  // optional int32 rank_change = 6;
  bool has_rank_change() const;
  void clear_rank_change();
  static const int kRankChangeFieldNumber = 6;
  ::google::protobuf::int32 rank_change() const;
  void set_rank_change(::google::protobuf::int32 value);

  // optional uint32 previous_rank = 7;
  bool has_previous_rank() const;
  void clear_previous_rank();
  static const int kPreviousRankFieldNumber = 7;
  ::google::protobuf::uint32 previous_rank() const;
  void set_previous_rank(::google::protobuf::uint32 value);

  // optional uint32 lobby_type = 8;
  bool has_lobby_type() const;
  void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 8;
  ::google::protobuf::uint32 lobby_type() const;
  void set_lobby_type(::google::protobuf::uint32 value);

  // optional bool winner = 4;
  bool has_winner() const;
  void clear_winner();
  static const int kWinnerFieldNumber = 4;
  bool winner() const;
  void set_winner(bool value);

  // optional bool solo_rank = 9;
  bool has_solo_rank() const;
  void clear_solo_rank();
  static const int kSoloRankFieldNumber = 9;
  bool solo_rank() const;
  void set_solo_rank(bool value);

  // optional bool abandon = 10;
  bool has_abandon() const;
  void clear_abandon();
  static const int kAbandonFieldNumber = 10;
  bool abandon() const;
  void set_abandon(bool value);

  // optional bool active_battle_pass = 13;
  bool has_active_battle_pass() const;
  void clear_active_battle_pass();
  static const int kActiveBattlePassFieldNumber = 13;
  bool active_battle_pass() const;
  void set_active_battle_pass(bool value);

  // optional uint32 duration = 11;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 11;
  ::google::protobuf::uint32 duration() const;
  void set_duration(::google::protobuf::uint32 value);

  // optional uint32 engine = 12;
  bool has_engine() const;
  void clear_engine();
  static const int kEngineFieldNumber = 12;
  ::google::protobuf::uint32 engine() const;
  void set_engine(::google::protobuf::uint32 value);

  // optional bool seasonal_rank = 14;
  bool has_seasonal_rank() const;
  void clear_seasonal_rank();
  static const int kSeasonalRankFieldNumber = 14;
  bool seasonal_rank() const;
  void set_seasonal_rank(bool value);

  // optional uint32 tourney_id = 15;
  bool has_tourney_id() const;
  void clear_tourney_id();
  static const int kTourneyIdFieldNumber = 15;
  ::google::protobuf::uint32 tourney_id() const;
  void set_tourney_id(::google::protobuf::uint32 value);

  // optional uint32 tourney_round = 16;
  bool has_tourney_round() const;
  void clear_tourney_round();
  static const int kTourneyRoundFieldNumber = 16;
  ::google::protobuf::uint32 tourney_round() const;
  void set_tourney_round(::google::protobuf::uint32 value);

  // optional uint32 tourney_tier = 17;
  bool has_tourney_tier() const;
  void clear_tourney_tier();
  static const int kTourneyTierFieldNumber = 17;
  ::google::protobuf::uint32 tourney_tier() const;
  void set_tourney_tier(::google::protobuf::uint32 value);

  // optional uint32 tourney_division = 18;
  bool has_tourney_division() const;
  void clear_tourney_division();
  static const int kTourneyDivisionFieldNumber = 18;
  ::google::protobuf::uint32 tourney_division() const;
  void set_tourney_division(::google::protobuf::uint32 value);

  // optional uint64 ugc_team_ui_logo = 21;
  bool has_ugc_team_ui_logo() const;
  void clear_ugc_team_ui_logo();
  static const int kUgcTeamUiLogoFieldNumber = 21;
  ::google::protobuf::uint64 ugc_team_ui_logo() const;
  void set_ugc_team_ui_logo(::google::protobuf::uint64 value);

  // optional uint32 team_id = 19;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 19;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_winner();
  void clear_has_winner();
  void set_has_game_mode();
  void clear_has_game_mode();
  void set_has_rank_change();
  void clear_has_rank_change();
  void set_has_previous_rank();
  void clear_has_previous_rank();
  void set_has_lobby_type();
  void clear_has_lobby_type();
  void set_has_solo_rank();
  void clear_has_solo_rank();
  void set_has_abandon();
  void clear_has_abandon();
  void set_has_duration();
  void clear_has_duration();
  void set_has_engine();
  void clear_has_engine();
  void set_has_active_battle_pass();
  void clear_has_active_battle_pass();
  void set_has_seasonal_rank();
  void clear_has_seasonal_rank();
  void set_has_tourney_id();
  void clear_has_tourney_id();
  void set_has_tourney_round();
  void clear_has_tourney_round();
  void set_has_tourney_tier();
  void clear_has_tourney_tier();
  void set_has_tourney_division();
  void clear_has_tourney_division();
  void set_has_team_id();
  void clear_has_team_id();
  void set_has_team_name();
  void clear_has_team_name();
  void set_has_ugc_team_ui_logo();
  void clear_has_ugc_team_ui_logo();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr team_name_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 game_mode_;
  ::google::protobuf::int32 rank_change_;
  ::google::protobuf::uint32 previous_rank_;
  ::google::protobuf::uint32 lobby_type_;
  bool winner_;
  bool solo_rank_;
  bool abandon_;
  bool active_battle_pass_;
  ::google::protobuf::uint32 duration_;
  ::google::protobuf::uint32 engine_;
  bool seasonal_rank_;
  ::google::protobuf::uint32 tourney_id_;
  ::google::protobuf::uint32 tourney_round_;
  ::google::protobuf::uint32 tourney_tier_;
  ::google::protobuf::uint32 tourney_division_;
  ::google::protobuf::uint64 ugc_team_ui_logo_;
  ::google::protobuf::uint32 team_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAGetPlayerMatchHistoryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse) */ {
 public:
  CMsgDOTAGetPlayerMatchHistoryResponse();
  virtual ~CMsgDOTAGetPlayerMatchHistoryResponse();

  CMsgDOTAGetPlayerMatchHistoryResponse(const CMsgDOTAGetPlayerMatchHistoryResponse& from);

  inline CMsgDOTAGetPlayerMatchHistoryResponse& operator=(const CMsgDOTAGetPlayerMatchHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAGetPlayerMatchHistoryResponse& default_instance();

  static inline const CMsgDOTAGetPlayerMatchHistoryResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAGetPlayerMatchHistoryResponse*>(
               &_CMsgDOTAGetPlayerMatchHistoryResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    143;

  void Swap(CMsgDOTAGetPlayerMatchHistoryResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAGetPlayerMatchHistoryResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAGetPlayerMatchHistoryResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAGetPlayerMatchHistoryResponse& from);
  void MergeFrom(const CMsgDOTAGetPlayerMatchHistoryResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAGetPlayerMatchHistoryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAGetPlayerMatchHistoryResponse_Match Match;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  const ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match& matches(int index) const;
  ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match* mutable_matches(int index);
  ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match* add_matches();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match >*
      mutable_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match >&
      matches() const;

  // optional uint32 request_id = 2;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse)
 private:
  void set_has_request_id();
  void clear_has_request_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match > matches_;
  ::google::protobuf::uint32 request_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAStartDailyHeroChallenge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAStartDailyHeroChallenge) */ {
 public:
  CMsgDOTAStartDailyHeroChallenge();
  virtual ~CMsgDOTAStartDailyHeroChallenge();

  CMsgDOTAStartDailyHeroChallenge(const CMsgDOTAStartDailyHeroChallenge& from);

  inline CMsgDOTAStartDailyHeroChallenge& operator=(const CMsgDOTAStartDailyHeroChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStartDailyHeroChallenge& default_instance();

  static inline const CMsgDOTAStartDailyHeroChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAStartDailyHeroChallenge*>(
               &_CMsgDOTAStartDailyHeroChallenge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    144;

  void Swap(CMsgDOTAStartDailyHeroChallenge* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAStartDailyHeroChallenge* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAStartDailyHeroChallenge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAStartDailyHeroChallenge& from);
  void MergeFrom(const CMsgDOTAStartDailyHeroChallenge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAStartDailyHeroChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAStartDailyHeroChallenge)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCNotificationsRequest) */ {
 public:
  CMsgGCNotificationsRequest();
  virtual ~CMsgGCNotificationsRequest();

  CMsgGCNotificationsRequest(const CMsgGCNotificationsRequest& from);

  inline CMsgGCNotificationsRequest& operator=(const CMsgGCNotificationsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationsRequest& default_instance();

  static inline const CMsgGCNotificationsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNotificationsRequest*>(
               &_CMsgGCNotificationsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    145;

  void Swap(CMsgGCNotificationsRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgGCNotificationsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCNotificationsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCNotificationsRequest& from);
  void MergeFrom(const CMsgGCNotificationsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCNotificationsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCNotificationsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsResponse_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCNotificationsResponse.Notification) */ {
 public:
  CMsgGCNotificationsResponse_Notification();
  virtual ~CMsgGCNotificationsResponse_Notification();

  CMsgGCNotificationsResponse_Notification(const CMsgGCNotificationsResponse_Notification& from);

  inline CMsgGCNotificationsResponse_Notification& operator=(const CMsgGCNotificationsResponse_Notification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationsResponse_Notification& default_instance();

  static inline const CMsgGCNotificationsResponse_Notification* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNotificationsResponse_Notification*>(
               &_CMsgGCNotificationsResponse_Notification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    146;

  void Swap(CMsgGCNotificationsResponse_Notification* other);

  // implements Message ----------------------------------------------

  inline CMsgGCNotificationsResponse_Notification* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCNotificationsResponse_Notification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCNotificationsResponse_Notification& from);
  void MergeFrom(const CMsgGCNotificationsResponse_Notification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCNotificationsResponse_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 7;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 7;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint64 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // optional uint32 type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 reference_a = 4;
  bool has_reference_a() const;
  void clear_reference_a();
  static const int kReferenceAFieldNumber = 4;
  ::google::protobuf::uint32 reference_a() const;
  void set_reference_a(::google::protobuf::uint32 value);

  // optional uint32 reference_b = 5;
  bool has_reference_b() const;
  void clear_reference_b();
  static const int kReferenceBFieldNumber = 5;
  ::google::protobuf::uint32 reference_b() const;
  void set_reference_b(::google::protobuf::uint32 value);

  // optional uint32 reference_c = 6;
  bool has_reference_c() const;
  void clear_reference_c();
  static const int kReferenceCFieldNumber = 6;
  ::google::protobuf::uint32 reference_c() const;
  void set_reference_c(::google::protobuf::uint32 value);

  // optional bool unread = 8;
  bool has_unread() const;
  void clear_unread();
  static const int kUnreadFieldNumber = 8;
  bool unread() const;
  void set_unread(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCNotificationsResponse.Notification)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_reference_a();
  void clear_has_reference_a();
  void set_has_reference_b();
  void clear_has_reference_b();
  void set_has_reference_c();
  void clear_has_reference_c();
  void set_has_message();
  void clear_has_message();
  void set_has_unread();
  void clear_has_unread();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 reference_a_;
  ::google::protobuf::uint32 reference_b_;
  ::google::protobuf::uint32 reference_c_;
  bool unread_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCNotificationsResponse) */ {
 public:
  CMsgGCNotificationsResponse();
  virtual ~CMsgGCNotificationsResponse();

  CMsgGCNotificationsResponse(const CMsgGCNotificationsResponse& from);

  inline CMsgGCNotificationsResponse& operator=(const CMsgGCNotificationsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationsResponse& default_instance();

  static inline const CMsgGCNotificationsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNotificationsResponse*>(
               &_CMsgGCNotificationsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    147;

  void Swap(CMsgGCNotificationsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCNotificationsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCNotificationsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCNotificationsResponse& from);
  void MergeFrom(const CMsgGCNotificationsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCNotificationsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCNotificationsResponse_Notification Notification;

  typedef CMsgGCNotificationsResponse_EResult EResult;
  static const EResult SUCCESS =
    CMsgGCNotificationsResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED =
    CMsgGCNotificationsResponse_EResult_ERROR_UNSPECIFIED;
  static inline bool EResult_IsValid(int value) {
    return CMsgGCNotificationsResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgGCNotificationsResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgGCNotificationsResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgGCNotificationsResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgGCNotificationsResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgGCNotificationsResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgGCNotificationsResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCNotificationsResponse.Notification notifications = 2;
  int notifications_size() const;
  void clear_notifications();
  static const int kNotificationsFieldNumber = 2;
  const ::proto::dota::CMsgGCNotificationsResponse_Notification& notifications(int index) const;
  ::proto::dota::CMsgGCNotificationsResponse_Notification* mutable_notifications(int index);
  ::proto::dota::CMsgGCNotificationsResponse_Notification* add_notifications();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCNotificationsResponse_Notification >*
      mutable_notifications();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCNotificationsResponse_Notification >&
      notifications() const;

  // optional .proto.dota.CMsgGCNotificationsResponse.EResult result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgGCNotificationsResponse_EResult result() const;
  void set_result(::proto::dota::CMsgGCNotificationsResponse_EResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCNotificationsResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCNotificationsResponse_Notification > notifications_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCNotificationsMarkReadRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCNotificationsMarkReadRequest) */ {
 public:
  CMsgGCNotificationsMarkReadRequest();
  virtual ~CMsgGCNotificationsMarkReadRequest();

  CMsgGCNotificationsMarkReadRequest(const CMsgGCNotificationsMarkReadRequest& from);

  inline CMsgGCNotificationsMarkReadRequest& operator=(const CMsgGCNotificationsMarkReadRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCNotificationsMarkReadRequest& default_instance();

  static inline const CMsgGCNotificationsMarkReadRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCNotificationsMarkReadRequest*>(
               &_CMsgGCNotificationsMarkReadRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    148;

  void Swap(CMsgGCNotificationsMarkReadRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgGCNotificationsMarkReadRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCNotificationsMarkReadRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCNotificationsMarkReadRequest& from);
  void MergeFrom(const CMsgGCNotificationsMarkReadRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCNotificationsMarkReadRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCNotificationsMarkReadRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCMarkNotificationListRead : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCMarkNotificationListRead) */ {
 public:
  CMsgClientToGCMarkNotificationListRead();
  virtual ~CMsgClientToGCMarkNotificationListRead();

  CMsgClientToGCMarkNotificationListRead(const CMsgClientToGCMarkNotificationListRead& from);

  inline CMsgClientToGCMarkNotificationListRead& operator=(const CMsgClientToGCMarkNotificationListRead& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCMarkNotificationListRead& default_instance();

  static inline const CMsgClientToGCMarkNotificationListRead* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCMarkNotificationListRead*>(
               &_CMsgClientToGCMarkNotificationListRead_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    149;

  void Swap(CMsgClientToGCMarkNotificationListRead* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCMarkNotificationListRead* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCMarkNotificationListRead* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCMarkNotificationListRead& from);
  void MergeFrom(const CMsgClientToGCMarkNotificationListRead& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCMarkNotificationListRead* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 notification_ids = 1;
  int notification_ids_size() const;
  void clear_notification_ids();
  static const int kNotificationIdsFieldNumber = 1;
  ::google::protobuf::uint64 notification_ids(int index) const;
  void set_notification_ids(int index, ::google::protobuf::uint64 value);
  void add_notification_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      notification_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_notification_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCMarkNotificationListRead)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > notification_ids_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCLeagueAdminState_PrivateLeagueKeys : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCLeagueAdminState.PrivateLeagueKeys) */ {
 public:
  CMsgGCLeagueAdminState_PrivateLeagueKeys();
  virtual ~CMsgGCLeagueAdminState_PrivateLeagueKeys();

  CMsgGCLeagueAdminState_PrivateLeagueKeys(const CMsgGCLeagueAdminState_PrivateLeagueKeys& from);

  inline CMsgGCLeagueAdminState_PrivateLeagueKeys& operator=(const CMsgGCLeagueAdminState_PrivateLeagueKeys& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCLeagueAdminState_PrivateLeagueKeys& default_instance();

  static inline const CMsgGCLeagueAdminState_PrivateLeagueKeys* internal_default_instance() {
    return reinterpret_cast<const CMsgGCLeagueAdminState_PrivateLeagueKeys*>(
               &_CMsgGCLeagueAdminState_PrivateLeagueKeys_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    150;

  void Swap(CMsgGCLeagueAdminState_PrivateLeagueKeys* other);

  // implements Message ----------------------------------------------

  inline CMsgGCLeagueAdminState_PrivateLeagueKeys* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCLeagueAdminState_PrivateLeagueKeys* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCLeagueAdminState_PrivateLeagueKeys& from);
  void MergeFrom(const CMsgGCLeagueAdminState_PrivateLeagueKeys& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCLeagueAdminState_PrivateLeagueKeys* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 leagueid = 1;
  bool has_leagueid() const;
  void clear_leagueid();
  static const int kLeagueidFieldNumber = 1;
  ::google::protobuf::uint32 leagueid() const;
  void set_leagueid(::google::protobuf::uint32 value);

  // optional uint32 privatekey = 2;
  bool has_privatekey() const;
  void clear_privatekey();
  static const int kPrivatekeyFieldNumber = 2;
  ::google::protobuf::uint32 privatekey() const;
  void set_privatekey(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCLeagueAdminState.PrivateLeagueKeys)
 private:
  void set_has_leagueid();
  void clear_has_leagueid();
  void set_has_privatekey();
  void clear_has_privatekey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 leagueid_;
  ::google::protobuf::uint32 privatekey_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCLeagueAdminState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCLeagueAdminState) */ {
 public:
  CMsgGCLeagueAdminState();
  virtual ~CMsgGCLeagueAdminState();

  CMsgGCLeagueAdminState(const CMsgGCLeagueAdminState& from);

  inline CMsgGCLeagueAdminState& operator=(const CMsgGCLeagueAdminState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCLeagueAdminState& default_instance();

  static inline const CMsgGCLeagueAdminState* internal_default_instance() {
    return reinterpret_cast<const CMsgGCLeagueAdminState*>(
               &_CMsgGCLeagueAdminState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    151;

  void Swap(CMsgGCLeagueAdminState* other);

  // implements Message ----------------------------------------------

  inline CMsgGCLeagueAdminState* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCLeagueAdminState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCLeagueAdminState& from);
  void MergeFrom(const CMsgGCLeagueAdminState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCLeagueAdminState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCLeagueAdminState_PrivateLeagueKeys PrivateLeagueKeys;

  // accessors -------------------------------------------------------

  // repeated uint32 leagues = 1;
  int leagues_size() const;
  void clear_leagues();
  static const int kLeaguesFieldNumber = 1;
  ::google::protobuf::uint32 leagues(int index) const;
  void set_leagues(int index, ::google::protobuf::uint32 value);
  void add_leagues(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      leagues() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_leagues();

  // repeated .proto.dota.CMsgGCLeagueAdminState.PrivateLeagueKeys keys = 2;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 2;
  const ::proto::dota::CMsgGCLeagueAdminState_PrivateLeagueKeys& keys(int index) const;
  ::proto::dota::CMsgGCLeagueAdminState_PrivateLeagueKeys* mutable_keys(int index);
  ::proto::dota::CMsgGCLeagueAdminState_PrivateLeagueKeys* add_keys();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCLeagueAdminState_PrivateLeagueKeys >*
      mutable_keys();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCLeagueAdminState_PrivateLeagueKeys >&
      keys() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCLeagueAdminState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > leagues_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCLeagueAdminState_PrivateLeagueKeys > keys_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoRequest_PlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo) */ {
 public:
  CMsgGCPlayerInfoRequest_PlayerInfo();
  virtual ~CMsgGCPlayerInfoRequest_PlayerInfo();

  CMsgGCPlayerInfoRequest_PlayerInfo(const CMsgGCPlayerInfoRequest_PlayerInfo& from);

  inline CMsgGCPlayerInfoRequest_PlayerInfo& operator=(const CMsgGCPlayerInfoRequest_PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCPlayerInfoRequest_PlayerInfo& default_instance();

  static inline const CMsgGCPlayerInfoRequest_PlayerInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgGCPlayerInfoRequest_PlayerInfo*>(
               &_CMsgGCPlayerInfoRequest_PlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    152;

  void Swap(CMsgGCPlayerInfoRequest_PlayerInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgGCPlayerInfoRequest_PlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCPlayerInfoRequest_PlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCPlayerInfoRequest_PlayerInfo& from);
  void MergeFrom(const CMsgGCPlayerInfoRequest_PlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCPlayerInfoRequest_PlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 2;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 2;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_timestamp();
  void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 timestamp_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCPlayerInfoRequest) */ {
 public:
  CMsgGCPlayerInfoRequest();
  virtual ~CMsgGCPlayerInfoRequest();

  CMsgGCPlayerInfoRequest(const CMsgGCPlayerInfoRequest& from);

  inline CMsgGCPlayerInfoRequest& operator=(const CMsgGCPlayerInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCPlayerInfoRequest& default_instance();

  static inline const CMsgGCPlayerInfoRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCPlayerInfoRequest*>(
               &_CMsgGCPlayerInfoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    153;

  void Swap(CMsgGCPlayerInfoRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgGCPlayerInfoRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCPlayerInfoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCPlayerInfoRequest& from);
  void MergeFrom(const CMsgGCPlayerInfoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCPlayerInfoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCPlayerInfoRequest_PlayerInfo PlayerInfo;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo player_infos = 1;
  int player_infos_size() const;
  void clear_player_infos();
  static const int kPlayerInfosFieldNumber = 1;
  const ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo& player_infos(int index) const;
  ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo* mutable_player_infos(int index);
  ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo* add_player_infos();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo >*
      mutable_player_infos();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo >&
      player_infos() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCPlayerInfoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo > player_infos_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoSubmit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCPlayerInfoSubmit) */ {
 public:
  CMsgGCPlayerInfoSubmit();
  virtual ~CMsgGCPlayerInfoSubmit();

  CMsgGCPlayerInfoSubmit(const CMsgGCPlayerInfoSubmit& from);

  inline CMsgGCPlayerInfoSubmit& operator=(const CMsgGCPlayerInfoSubmit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCPlayerInfoSubmit& default_instance();

  static inline const CMsgGCPlayerInfoSubmit* internal_default_instance() {
    return reinterpret_cast<const CMsgGCPlayerInfoSubmit*>(
               &_CMsgGCPlayerInfoSubmit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    154;

  void Swap(CMsgGCPlayerInfoSubmit* other);

  // implements Message ----------------------------------------------

  inline CMsgGCPlayerInfoSubmit* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCPlayerInfoSubmit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCPlayerInfoSubmit& from);
  void MergeFrom(const CMsgGCPlayerInfoSubmit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCPlayerInfoSubmit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string country_code = 2;
  bool has_country_code() const;
  void clear_country_code();
  static const int kCountryCodeFieldNumber = 2;
  const ::std::string& country_code() const;
  void set_country_code(const ::std::string& value);
  #if LANG_CXX11
  void set_country_code(::std::string&& value);
  #endif
  void set_country_code(const char* value);
  void set_country_code(const char* value, size_t size);
  ::std::string* mutable_country_code();
  ::std::string* release_country_code();
  void set_allocated_country_code(::std::string* country_code);

  // optional string sponsor = 5;
  bool has_sponsor() const;
  void clear_sponsor();
  static const int kSponsorFieldNumber = 5;
  const ::std::string& sponsor() const;
  void set_sponsor(const ::std::string& value);
  #if LANG_CXX11
  void set_sponsor(::std::string&& value);
  #endif
  void set_sponsor(const char* value);
  void set_sponsor(const char* value, size_t size);
  ::std::string* mutable_sponsor();
  ::std::string* release_sponsor();
  void set_allocated_sponsor(::std::string* sponsor);

  // optional uint32 fantasy_role = 3;
  bool has_fantasy_role() const;
  void clear_fantasy_role();
  static const int kFantasyRoleFieldNumber = 3;
  ::google::protobuf::uint32 fantasy_role() const;
  void set_fantasy_role(::google::protobuf::uint32 value);

  // optional uint32 team_id = 4;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 4;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCPlayerInfoSubmit)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_country_code();
  void clear_has_country_code();
  void set_has_fantasy_role();
  void clear_has_fantasy_role();
  void set_has_team_id();
  void clear_has_team_id();
  void set_has_sponsor();
  void clear_has_sponsor();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr country_code_;
  ::google::protobuf::internal::ArenaStringPtr sponsor_;
  ::google::protobuf::uint32 fantasy_role_;
  ::google::protobuf::uint32 team_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCPlayerInfoSubmitResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCPlayerInfoSubmitResponse) */ {
 public:
  CMsgGCPlayerInfoSubmitResponse();
  virtual ~CMsgGCPlayerInfoSubmitResponse();

  CMsgGCPlayerInfoSubmitResponse(const CMsgGCPlayerInfoSubmitResponse& from);

  inline CMsgGCPlayerInfoSubmitResponse& operator=(const CMsgGCPlayerInfoSubmitResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCPlayerInfoSubmitResponse& default_instance();

  static inline const CMsgGCPlayerInfoSubmitResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCPlayerInfoSubmitResponse*>(
               &_CMsgGCPlayerInfoSubmitResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    155;

  void Swap(CMsgGCPlayerInfoSubmitResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCPlayerInfoSubmitResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCPlayerInfoSubmitResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCPlayerInfoSubmitResponse& from);
  void MergeFrom(const CMsgGCPlayerInfoSubmitResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCPlayerInfoSubmitResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCPlayerInfoSubmitResponse_EResult EResult;
  static const EResult SUCCESS =
    CMsgGCPlayerInfoSubmitResponse_EResult_SUCCESS;
  static const EResult ERROR_UNSPECIFIED =
    CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_UNSPECIFIED;
  static const EResult ERROR_INFO_LOCKED =
    CMsgGCPlayerInfoSubmitResponse_EResult_ERROR_INFO_LOCKED;
  static inline bool EResult_IsValid(int value) {
    return CMsgGCPlayerInfoSubmitResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgGCPlayerInfoSubmitResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgGCPlayerInfoSubmitResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgGCPlayerInfoSubmitResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgGCPlayerInfoSubmitResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgGCPlayerInfoSubmitResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgGCPlayerInfoSubmitResponse.EResult result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult result() const;
  void set_result(::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCPlayerInfoSubmitResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientProvideSurveyResult_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientProvideSurveyResult.Response) */ {
 public:
  CMsgClientProvideSurveyResult_Response();
  virtual ~CMsgClientProvideSurveyResult_Response();

  CMsgClientProvideSurveyResult_Response(const CMsgClientProvideSurveyResult_Response& from);

  inline CMsgClientProvideSurveyResult_Response& operator=(const CMsgClientProvideSurveyResult_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientProvideSurveyResult_Response& default_instance();

  static inline const CMsgClientProvideSurveyResult_Response* internal_default_instance() {
    return reinterpret_cast<const CMsgClientProvideSurveyResult_Response*>(
               &_CMsgClientProvideSurveyResult_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    156;

  void Swap(CMsgClientProvideSurveyResult_Response* other);

  // implements Message ----------------------------------------------

  inline CMsgClientProvideSurveyResult_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientProvideSurveyResult_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientProvideSurveyResult_Response& from);
  void MergeFrom(const CMsgClientProvideSurveyResult_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientProvideSurveyResult_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 question_id = 1;
  bool has_question_id() const;
  void clear_question_id();
  static const int kQuestionIdFieldNumber = 1;
  ::google::protobuf::uint32 question_id() const;
  void set_question_id(::google::protobuf::uint32 value);

  // optional uint32 survey_value = 2;
  bool has_survey_value() const;
  void clear_survey_value();
  static const int kSurveyValueFieldNumber = 2;
  ::google::protobuf::uint32 survey_value() const;
  void set_survey_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientProvideSurveyResult.Response)
 private:
  void set_has_question_id();
  void clear_has_question_id();
  void set_has_survey_value();
  void clear_has_survey_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 question_id_;
  ::google::protobuf::uint32 survey_value_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientProvideSurveyResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientProvideSurveyResult) */ {
 public:
  CMsgClientProvideSurveyResult();
  virtual ~CMsgClientProvideSurveyResult();

  CMsgClientProvideSurveyResult(const CMsgClientProvideSurveyResult& from);

  inline CMsgClientProvideSurveyResult& operator=(const CMsgClientProvideSurveyResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientProvideSurveyResult& default_instance();

  static inline const CMsgClientProvideSurveyResult* internal_default_instance() {
    return reinterpret_cast<const CMsgClientProvideSurveyResult*>(
               &_CMsgClientProvideSurveyResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    157;

  void Swap(CMsgClientProvideSurveyResult* other);

  // implements Message ----------------------------------------------

  inline CMsgClientProvideSurveyResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientProvideSurveyResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientProvideSurveyResult& from);
  void MergeFrom(const CMsgClientProvideSurveyResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientProvideSurveyResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientProvideSurveyResult_Response Response;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientProvideSurveyResult.Response responses = 1;
  int responses_size() const;
  void clear_responses();
  static const int kResponsesFieldNumber = 1;
  const ::proto::dota::CMsgClientProvideSurveyResult_Response& responses(int index) const;
  ::proto::dota::CMsgClientProvideSurveyResult_Response* mutable_responses(int index);
  ::proto::dota::CMsgClientProvideSurveyResult_Response* add_responses();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientProvideSurveyResult_Response >*
      mutable_responses();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientProvideSurveyResult_Response >&
      responses() const;

  // optional uint64 survey_key = 2;
  bool has_survey_key() const;
  void clear_survey_key();
  static const int kSurveyKeyFieldNumber = 2;
  ::google::protobuf::uint64 survey_key() const;
  void set_survey_key(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientProvideSurveyResult)
 private:
  void set_has_survey_key();
  void clear_has_survey_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientProvideSurveyResult_Response > responses_;
  ::google::protobuf::uint64 survey_key_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAEmoticonAccessSDO : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAEmoticonAccessSDO) */ {
 public:
  CMsgDOTAEmoticonAccessSDO();
  virtual ~CMsgDOTAEmoticonAccessSDO();

  CMsgDOTAEmoticonAccessSDO(const CMsgDOTAEmoticonAccessSDO& from);

  inline CMsgDOTAEmoticonAccessSDO& operator=(const CMsgDOTAEmoticonAccessSDO& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAEmoticonAccessSDO& default_instance();

  static inline const CMsgDOTAEmoticonAccessSDO* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAEmoticonAccessSDO*>(
               &_CMsgDOTAEmoticonAccessSDO_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    158;

  void Swap(CMsgDOTAEmoticonAccessSDO* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAEmoticonAccessSDO* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAEmoticonAccessSDO* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAEmoticonAccessSDO& from);
  void MergeFrom(const CMsgDOTAEmoticonAccessSDO& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAEmoticonAccessSDO* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes unlocked_emoticons = 2;
  bool has_unlocked_emoticons() const;
  void clear_unlocked_emoticons();
  static const int kUnlockedEmoticonsFieldNumber = 2;
  const ::std::string& unlocked_emoticons() const;
  void set_unlocked_emoticons(const ::std::string& value);
  #if LANG_CXX11
  void set_unlocked_emoticons(::std::string&& value);
  #endif
  void set_unlocked_emoticons(const char* value);
  void set_unlocked_emoticons(const void* value, size_t size);
  ::std::string* mutable_unlocked_emoticons();
  ::std::string* release_unlocked_emoticons();
  void set_allocated_unlocked_emoticons(::std::string* unlocked_emoticons);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAEmoticonAccessSDO)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_unlocked_emoticons();
  void clear_has_unlocked_emoticons();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr unlocked_emoticons_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCEmoticonDataRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCEmoticonDataRequest) */ {
 public:
  CMsgClientToGCEmoticonDataRequest();
  virtual ~CMsgClientToGCEmoticonDataRequest();

  CMsgClientToGCEmoticonDataRequest(const CMsgClientToGCEmoticonDataRequest& from);

  inline CMsgClientToGCEmoticonDataRequest& operator=(const CMsgClientToGCEmoticonDataRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCEmoticonDataRequest& default_instance();

  static inline const CMsgClientToGCEmoticonDataRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCEmoticonDataRequest*>(
               &_CMsgClientToGCEmoticonDataRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    159;

  void Swap(CMsgClientToGCEmoticonDataRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCEmoticonDataRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCEmoticonDataRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCEmoticonDataRequest& from);
  void MergeFrom(const CMsgClientToGCEmoticonDataRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCEmoticonDataRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCEmoticonDataRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientEmoticonData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientEmoticonData) */ {
 public:
  CMsgGCToClientEmoticonData();
  virtual ~CMsgGCToClientEmoticonData();

  CMsgGCToClientEmoticonData(const CMsgGCToClientEmoticonData& from);

  inline CMsgGCToClientEmoticonData& operator=(const CMsgGCToClientEmoticonData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientEmoticonData& default_instance();

  static inline const CMsgGCToClientEmoticonData* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientEmoticonData*>(
               &_CMsgGCToClientEmoticonData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    160;

  void Swap(CMsgGCToClientEmoticonData* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientEmoticonData* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientEmoticonData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientEmoticonData& from);
  void MergeFrom(const CMsgGCToClientEmoticonData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientEmoticonData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAEmoticonAccessSDO emoticon_access = 1;
  bool has_emoticon_access() const;
  void clear_emoticon_access();
  static const int kEmoticonAccessFieldNumber = 1;
  const ::proto::dota::CMsgDOTAEmoticonAccessSDO& emoticon_access() const;
  ::proto::dota::CMsgDOTAEmoticonAccessSDO* mutable_emoticon_access();
  ::proto::dota::CMsgDOTAEmoticonAccessSDO* release_emoticon_access();
  void set_allocated_emoticon_access(::proto::dota::CMsgDOTAEmoticonAccessSDO* emoticon_access);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientEmoticonData)
 private:
  void set_has_emoticon_access();
  void clear_has_emoticon_access();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgDOTAEmoticonAccessSDO* emoticon_access_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCTrackDialogResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCTrackDialogResult) */ {
 public:
  CMsgClientToGCTrackDialogResult();
  virtual ~CMsgClientToGCTrackDialogResult();

  CMsgClientToGCTrackDialogResult(const CMsgClientToGCTrackDialogResult& from);

  inline CMsgClientToGCTrackDialogResult& operator=(const CMsgClientToGCTrackDialogResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTrackDialogResult& default_instance();

  static inline const CMsgClientToGCTrackDialogResult* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCTrackDialogResult*>(
               &_CMsgClientToGCTrackDialogResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    161;

  void Swap(CMsgClientToGCTrackDialogResult* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCTrackDialogResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCTrackDialogResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCTrackDialogResult& from);
  void MergeFrom(const CMsgClientToGCTrackDialogResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCTrackDialogResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dialog_id = 1;
  bool has_dialog_id() const;
  void clear_dialog_id();
  static const int kDialogIdFieldNumber = 1;
  ::google::protobuf::uint32 dialog_id() const;
  void set_dialog_id(::google::protobuf::uint32 value);

  // optional uint32 value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::uint32 value() const;
  void set_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCTrackDialogResult)
 private:
  void set_has_dialog_id();
  void clear_has_dialog_id();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 dialog_id_;
  ::google::protobuf::uint32 value_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientTournamentItemDrop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientTournamentItemDrop) */ {
 public:
  CMsgGCToClientTournamentItemDrop();
  virtual ~CMsgGCToClientTournamentItemDrop();

  CMsgGCToClientTournamentItemDrop(const CMsgGCToClientTournamentItemDrop& from);

  inline CMsgGCToClientTournamentItemDrop& operator=(const CMsgGCToClientTournamentItemDrop& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientTournamentItemDrop& default_instance();

  static inline const CMsgGCToClientTournamentItemDrop* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientTournamentItemDrop*>(
               &_CMsgGCToClientTournamentItemDrop_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    162;

  void Swap(CMsgGCToClientTournamentItemDrop* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientTournamentItemDrop* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientTournamentItemDrop* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientTournamentItemDrop& from);
  void MergeFrom(const CMsgGCToClientTournamentItemDrop& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientTournamentItemDrop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 item_def = 1;
  bool has_item_def() const;
  void clear_item_def();
  static const int kItemDefFieldNumber = 1;
  ::google::protobuf::uint32 item_def() const;
  void set_item_def(::google::protobuf::uint32 value);

  // optional uint32 event_type = 2;
  bool has_event_type() const;
  void clear_event_type();
  static const int kEventTypeFieldNumber = 2;
  ::google::protobuf::uint32 event_type() const;
  void set_event_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientTournamentItemDrop)
 private:
  void set_has_item_def();
  void clear_has_item_def();
  void set_has_event_type();
  void clear_has_event_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 item_def_;
  ::google::protobuf::uint32 event_type_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetAdditionalEquips : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSetAdditionalEquips) */ {
 public:
  CMsgClientToGCSetAdditionalEquips();
  virtual ~CMsgClientToGCSetAdditionalEquips();

  CMsgClientToGCSetAdditionalEquips(const CMsgClientToGCSetAdditionalEquips& from);

  inline CMsgClientToGCSetAdditionalEquips& operator=(const CMsgClientToGCSetAdditionalEquips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSetAdditionalEquips& default_instance();

  static inline const CMsgClientToGCSetAdditionalEquips* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetAdditionalEquips*>(
               &_CMsgClientToGCSetAdditionalEquips_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    163;

  void Swap(CMsgClientToGCSetAdditionalEquips* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSetAdditionalEquips* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCSetAdditionalEquips* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCSetAdditionalEquips& from);
  void MergeFrom(const CMsgClientToGCSetAdditionalEquips& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCSetAdditionalEquips* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CAdditionalEquipSlot equips = 1;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 1;
  const ::proto::dota::CAdditionalEquipSlot& equips(int index) const;
  ::proto::dota::CAdditionalEquipSlot* mutable_equips(int index);
  ::proto::dota::CAdditionalEquipSlot* add_equips();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >*
      mutable_equips();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >&
      equips() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSetAdditionalEquips)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot > equips_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetAdditionalEquipsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSetAdditionalEquipsResponse) */ {
 public:
  CMsgClientToGCSetAdditionalEquipsResponse();
  virtual ~CMsgClientToGCSetAdditionalEquipsResponse();

  CMsgClientToGCSetAdditionalEquipsResponse(const CMsgClientToGCSetAdditionalEquipsResponse& from);

  inline CMsgClientToGCSetAdditionalEquipsResponse& operator=(const CMsgClientToGCSetAdditionalEquipsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSetAdditionalEquipsResponse& default_instance();

  static inline const CMsgClientToGCSetAdditionalEquipsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetAdditionalEquipsResponse*>(
               &_CMsgClientToGCSetAdditionalEquipsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    164;

  void Swap(CMsgClientToGCSetAdditionalEquipsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSetAdditionalEquipsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCSetAdditionalEquipsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCSetAdditionalEquipsResponse& from);
  void MergeFrom(const CMsgClientToGCSetAdditionalEquipsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCSetAdditionalEquipsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSetAdditionalEquipsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAdditionalEquips : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetAdditionalEquips) */ {
 public:
  CMsgClientToGCGetAdditionalEquips();
  virtual ~CMsgClientToGCGetAdditionalEquips();

  CMsgClientToGCGetAdditionalEquips(const CMsgClientToGCGetAdditionalEquips& from);

  inline CMsgClientToGCGetAdditionalEquips& operator=(const CMsgClientToGCGetAdditionalEquips& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAdditionalEquips& default_instance();

  static inline const CMsgClientToGCGetAdditionalEquips* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAdditionalEquips*>(
               &_CMsgClientToGCGetAdditionalEquips_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    165;

  void Swap(CMsgClientToGCGetAdditionalEquips* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAdditionalEquips* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetAdditionalEquips* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetAdditionalEquips& from);
  void MergeFrom(const CMsgClientToGCGetAdditionalEquips& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetAdditionalEquips* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetAdditionalEquips)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAdditionalEquipsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse) */ {
 public:
  CMsgClientToGCGetAdditionalEquipsResponse();
  virtual ~CMsgClientToGCGetAdditionalEquipsResponse();

  CMsgClientToGCGetAdditionalEquipsResponse(const CMsgClientToGCGetAdditionalEquipsResponse& from);

  inline CMsgClientToGCGetAdditionalEquipsResponse& operator=(const CMsgClientToGCGetAdditionalEquipsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAdditionalEquipsResponse& default_instance();

  static inline const CMsgClientToGCGetAdditionalEquipsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAdditionalEquipsResponse*>(
               &_CMsgClientToGCGetAdditionalEquipsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    166;

  void Swap(CMsgClientToGCGetAdditionalEquipsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAdditionalEquipsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetAdditionalEquipsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetAdditionalEquipsResponse& from);
  void MergeFrom(const CMsgClientToGCGetAdditionalEquipsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetAdditionalEquipsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CAdditionalEquipSlot equips = 1;
  int equips_size() const;
  void clear_equips();
  static const int kEquipsFieldNumber = 1;
  const ::proto::dota::CAdditionalEquipSlot& equips(int index) const;
  ::proto::dota::CAdditionalEquipSlot* mutable_equips(int index);
  ::proto::dota::CAdditionalEquipSlot* add_equips();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >*
      mutable_equips();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >&
      equips() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot > equips_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroOrder : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetAllHeroOrder) */ {
 public:
  CMsgClientToGCGetAllHeroOrder();
  virtual ~CMsgClientToGCGetAllHeroOrder();

  CMsgClientToGCGetAllHeroOrder(const CMsgClientToGCGetAllHeroOrder& from);

  inline CMsgClientToGCGetAllHeroOrder& operator=(const CMsgClientToGCGetAllHeroOrder& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAllHeroOrder& default_instance();

  static inline const CMsgClientToGCGetAllHeroOrder* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAllHeroOrder*>(
               &_CMsgClientToGCGetAllHeroOrder_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    167;

  void Swap(CMsgClientToGCGetAllHeroOrder* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAllHeroOrder* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetAllHeroOrder* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetAllHeroOrder& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroOrder& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetAllHeroOrder* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetAllHeroOrder)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroOrderResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetAllHeroOrderResponse) */ {
 public:
  CMsgClientToGCGetAllHeroOrderResponse();
  virtual ~CMsgClientToGCGetAllHeroOrderResponse();

  CMsgClientToGCGetAllHeroOrderResponse(const CMsgClientToGCGetAllHeroOrderResponse& from);

  inline CMsgClientToGCGetAllHeroOrderResponse& operator=(const CMsgClientToGCGetAllHeroOrderResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAllHeroOrderResponse& default_instance();

  static inline const CMsgClientToGCGetAllHeroOrderResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAllHeroOrderResponse*>(
               &_CMsgClientToGCGetAllHeroOrderResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    168;

  void Swap(CMsgClientToGCGetAllHeroOrderResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAllHeroOrderResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetAllHeroOrderResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetAllHeroOrderResponse& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroOrderResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetAllHeroOrderResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 hero_ids = 1;
  int hero_ids_size() const;
  void clear_hero_ids();
  static const int kHeroIdsFieldNumber = 1;
  ::google::protobuf::uint32 hero_ids(int index) const;
  void set_hero_ids(int index, ::google::protobuf::uint32 value);
  void add_hero_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hero_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hero_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetAllHeroOrderResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hero_ids_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetAllHeroProgress) */ {
 public:
  CMsgClientToGCGetAllHeroProgress();
  virtual ~CMsgClientToGCGetAllHeroProgress();

  CMsgClientToGCGetAllHeroProgress(const CMsgClientToGCGetAllHeroProgress& from);

  inline CMsgClientToGCGetAllHeroProgress& operator=(const CMsgClientToGCGetAllHeroProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAllHeroProgress& default_instance();

  static inline const CMsgClientToGCGetAllHeroProgress* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAllHeroProgress*>(
               &_CMsgClientToGCGetAllHeroProgress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    169;

  void Swap(CMsgClientToGCGetAllHeroProgress* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAllHeroProgress* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetAllHeroProgress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetAllHeroProgress& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroProgress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetAllHeroProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetAllHeroProgress)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetAllHeroProgressResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetAllHeroProgressResponse) */ {
 public:
  CMsgClientToGCGetAllHeroProgressResponse();
  virtual ~CMsgClientToGCGetAllHeroProgressResponse();

  CMsgClientToGCGetAllHeroProgressResponse(const CMsgClientToGCGetAllHeroProgressResponse& from);

  inline CMsgClientToGCGetAllHeroProgressResponse& operator=(const CMsgClientToGCGetAllHeroProgressResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetAllHeroProgressResponse& default_instance();

  static inline const CMsgClientToGCGetAllHeroProgressResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetAllHeroProgressResponse*>(
               &_CMsgClientToGCGetAllHeroProgressResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    170;

  void Swap(CMsgClientToGCGetAllHeroProgressResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetAllHeroProgressResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetAllHeroProgressResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetAllHeroProgressResponse& from);
  void MergeFrom(const CMsgClientToGCGetAllHeroProgressResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetAllHeroProgressResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string profile_name = 19;
  bool has_profile_name() const;
  void clear_profile_name();
  static const int kProfileNameFieldNumber = 19;
  const ::std::string& profile_name() const;
  void set_profile_name(const ::std::string& value);
  #if LANG_CXX11
  void set_profile_name(::std::string&& value);
  #endif
  void set_profile_name(const char* value);
  void set_profile_name(const char* value, size_t size);
  ::std::string* mutable_profile_name();
  ::std::string* release_profile_name();
  void set_allocated_profile_name(::std::string* profile_name);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 curr_hero_id = 2;
  bool has_curr_hero_id() const;
  void clear_curr_hero_id();
  static const int kCurrHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 curr_hero_id() const;
  void set_curr_hero_id(::google::protobuf::uint32 value);

  // optional uint32 laps_completed = 3;
  bool has_laps_completed() const;
  void clear_laps_completed();
  static const int kLapsCompletedFieldNumber = 3;
  ::google::protobuf::uint32 laps_completed() const;
  void set_laps_completed(::google::protobuf::uint32 value);

  // optional uint32 curr_hero_games = 4;
  bool has_curr_hero_games() const;
  void clear_curr_hero_games();
  static const int kCurrHeroGamesFieldNumber = 4;
  ::google::protobuf::uint32 curr_hero_games() const;
  void set_curr_hero_games(::google::protobuf::uint32 value);

  // optional uint32 curr_lap_time_started = 5;
  bool has_curr_lap_time_started() const;
  void clear_curr_lap_time_started();
  static const int kCurrLapTimeStartedFieldNumber = 5;
  ::google::protobuf::uint32 curr_lap_time_started() const;
  void set_curr_lap_time_started(::google::protobuf::uint32 value);

  // optional uint32 curr_lap_games = 6;
  bool has_curr_lap_games() const;
  void clear_curr_lap_games();
  static const int kCurrLapGamesFieldNumber = 6;
  ::google::protobuf::uint32 curr_lap_games() const;
  void set_curr_lap_games(::google::protobuf::uint32 value);

  // optional uint32 best_lap_games = 7;
  bool has_best_lap_games() const;
  void clear_best_lap_games();
  static const int kBestLapGamesFieldNumber = 7;
  ::google::protobuf::uint32 best_lap_games() const;
  void set_best_lap_games(::google::protobuf::uint32 value);

  // optional uint32 best_lap_time = 8;
  bool has_best_lap_time() const;
  void clear_best_lap_time();
  static const int kBestLapTimeFieldNumber = 8;
  ::google::protobuf::uint32 best_lap_time() const;
  void set_best_lap_time(::google::protobuf::uint32 value);

  // optional uint32 lap_heroes_completed = 9;
  bool has_lap_heroes_completed() const;
  void clear_lap_heroes_completed();
  static const int kLapHeroesCompletedFieldNumber = 9;
  ::google::protobuf::uint32 lap_heroes_completed() const;
  void set_lap_heroes_completed(::google::protobuf::uint32 value);

  // optional uint32 lap_heroes_remaining = 10;
  bool has_lap_heroes_remaining() const;
  void clear_lap_heroes_remaining();
  static const int kLapHeroesRemainingFieldNumber = 10;
  ::google::protobuf::uint32 lap_heroes_remaining() const;
  void set_lap_heroes_remaining(::google::protobuf::uint32 value);

  // optional uint32 next_hero_id = 11;
  bool has_next_hero_id() const;
  void clear_next_hero_id();
  static const int kNextHeroIdFieldNumber = 11;
  ::google::protobuf::uint32 next_hero_id() const;
  void set_next_hero_id(::google::protobuf::uint32 value);

  // optional uint32 prev_hero_id = 12;
  bool has_prev_hero_id() const;
  void clear_prev_hero_id();
  static const int kPrevHeroIdFieldNumber = 12;
  ::google::protobuf::uint32 prev_hero_id() const;
  void set_prev_hero_id(::google::protobuf::uint32 value);

  // optional uint32 prev_hero_games = 13;
  bool has_prev_hero_games() const;
  void clear_prev_hero_games();
  static const int kPrevHeroGamesFieldNumber = 13;
  ::google::protobuf::uint32 prev_hero_games() const;
  void set_prev_hero_games(::google::protobuf::uint32 value);

  // optional float prev_avg_tries = 14;
  bool has_prev_avg_tries() const;
  void clear_prev_avg_tries();
  static const int kPrevAvgTriesFieldNumber = 14;
  float prev_avg_tries() const;
  void set_prev_avg_tries(float value);

  // optional float curr_avg_tries = 15;
  bool has_curr_avg_tries() const;
  void clear_curr_avg_tries();
  static const int kCurrAvgTriesFieldNumber = 15;
  float curr_avg_tries() const;
  void set_curr_avg_tries(float value);

  // optional float next_avg_tries = 16;
  bool has_next_avg_tries() const;
  void clear_next_avg_tries();
  static const int kNextAvgTriesFieldNumber = 16;
  float next_avg_tries() const;
  void set_next_avg_tries(float value);

  // optional float full_lap_avg_tries = 17;
  bool has_full_lap_avg_tries() const;
  void clear_full_lap_avg_tries();
  static const int kFullLapAvgTriesFieldNumber = 17;
  float full_lap_avg_tries() const;
  void set_full_lap_avg_tries(float value);

  // optional float curr_lap_avg_tries = 18;
  bool has_curr_lap_avg_tries() const;
  void clear_curr_lap_avg_tries();
  static const int kCurrLapAvgTriesFieldNumber = 18;
  float curr_lap_avg_tries() const;
  void set_curr_lap_avg_tries(float value);

  // optional uint32 start_hero_id = 20;
  bool has_start_hero_id() const;
  void clear_start_hero_id();
  static const int kStartHeroIdFieldNumber = 20;
  ::google::protobuf::uint32 start_hero_id() const;
  void set_start_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetAllHeroProgressResponse)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_curr_hero_id();
  void clear_has_curr_hero_id();
  void set_has_laps_completed();
  void clear_has_laps_completed();
  void set_has_curr_hero_games();
  void clear_has_curr_hero_games();
  void set_has_curr_lap_time_started();
  void clear_has_curr_lap_time_started();
  void set_has_curr_lap_games();
  void clear_has_curr_lap_games();
  void set_has_best_lap_games();
  void clear_has_best_lap_games();
  void set_has_best_lap_time();
  void clear_has_best_lap_time();
  void set_has_lap_heroes_completed();
  void clear_has_lap_heroes_completed();
  void set_has_lap_heroes_remaining();
  void clear_has_lap_heroes_remaining();
  void set_has_next_hero_id();
  void clear_has_next_hero_id();
  void set_has_prev_hero_id();
  void clear_has_prev_hero_id();
  void set_has_prev_hero_games();
  void clear_has_prev_hero_games();
  void set_has_prev_avg_tries();
  void clear_has_prev_avg_tries();
  void set_has_curr_avg_tries();
  void clear_has_curr_avg_tries();
  void set_has_next_avg_tries();
  void clear_has_next_avg_tries();
  void set_has_full_lap_avg_tries();
  void clear_has_full_lap_avg_tries();
  void set_has_curr_lap_avg_tries();
  void clear_has_curr_lap_avg_tries();
  void set_has_profile_name();
  void clear_has_profile_name();
  void set_has_start_hero_id();
  void clear_has_start_hero_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr profile_name_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 curr_hero_id_;
  ::google::protobuf::uint32 laps_completed_;
  ::google::protobuf::uint32 curr_hero_games_;
  ::google::protobuf::uint32 curr_lap_time_started_;
  ::google::protobuf::uint32 curr_lap_games_;
  ::google::protobuf::uint32 best_lap_games_;
  ::google::protobuf::uint32 best_lap_time_;
  ::google::protobuf::uint32 lap_heroes_completed_;
  ::google::protobuf::uint32 lap_heroes_remaining_;
  ::google::protobuf::uint32 next_hero_id_;
  ::google::protobuf::uint32 prev_hero_id_;
  ::google::protobuf::uint32 prev_hero_games_;
  float prev_avg_tries_;
  float curr_avg_tries_;
  float next_avg_tries_;
  float full_lap_avg_tries_;
  float curr_lap_avg_tries_;
  ::google::protobuf::uint32 start_hero_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetTrophyList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetTrophyList) */ {
 public:
  CMsgClientToGCGetTrophyList();
  virtual ~CMsgClientToGCGetTrophyList();

  CMsgClientToGCGetTrophyList(const CMsgClientToGCGetTrophyList& from);

  inline CMsgClientToGCGetTrophyList& operator=(const CMsgClientToGCGetTrophyList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetTrophyList& default_instance();

  static inline const CMsgClientToGCGetTrophyList* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetTrophyList*>(
               &_CMsgClientToGCGetTrophyList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    171;

  void Swap(CMsgClientToGCGetTrophyList* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetTrophyList* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetTrophyList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetTrophyList& from);
  void MergeFrom(const CMsgClientToGCGetTrophyList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetTrophyList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetTrophyList)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetTrophyListResponse_Trophy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy) */ {
 public:
  CMsgClientToGCGetTrophyListResponse_Trophy();
  virtual ~CMsgClientToGCGetTrophyListResponse_Trophy();

  CMsgClientToGCGetTrophyListResponse_Trophy(const CMsgClientToGCGetTrophyListResponse_Trophy& from);

  inline CMsgClientToGCGetTrophyListResponse_Trophy& operator=(const CMsgClientToGCGetTrophyListResponse_Trophy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetTrophyListResponse_Trophy& default_instance();

  static inline const CMsgClientToGCGetTrophyListResponse_Trophy* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetTrophyListResponse_Trophy*>(
               &_CMsgClientToGCGetTrophyListResponse_Trophy_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    172;

  void Swap(CMsgClientToGCGetTrophyListResponse_Trophy* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetTrophyListResponse_Trophy* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetTrophyListResponse_Trophy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetTrophyListResponse_Trophy& from);
  void MergeFrom(const CMsgClientToGCGetTrophyListResponse_Trophy& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetTrophyListResponse_Trophy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trophy_id = 1;
  bool has_trophy_id() const;
  void clear_trophy_id();
  static const int kTrophyIdFieldNumber = 1;
  ::google::protobuf::uint32 trophy_id() const;
  void set_trophy_id(::google::protobuf::uint32 value);

  // optional uint32 trophy_score = 2;
  bool has_trophy_score() const;
  void clear_trophy_score();
  static const int kTrophyScoreFieldNumber = 2;
  ::google::protobuf::uint32 trophy_score() const;
  void set_trophy_score(::google::protobuf::uint32 value);

  // optional uint32 last_updated = 3;
  bool has_last_updated() const;
  void clear_last_updated();
  static const int kLastUpdatedFieldNumber = 3;
  ::google::protobuf::uint32 last_updated() const;
  void set_last_updated(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy)
 private:
  void set_has_trophy_id();
  void clear_has_trophy_id();
  void set_has_trophy_score();
  void clear_has_trophy_score();
  void set_has_last_updated();
  void clear_has_last_updated();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 trophy_id_;
  ::google::protobuf::uint32 trophy_score_;
  ::google::protobuf::uint32 last_updated_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetTrophyListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetTrophyListResponse) */ {
 public:
  CMsgClientToGCGetTrophyListResponse();
  virtual ~CMsgClientToGCGetTrophyListResponse();

  CMsgClientToGCGetTrophyListResponse(const CMsgClientToGCGetTrophyListResponse& from);

  inline CMsgClientToGCGetTrophyListResponse& operator=(const CMsgClientToGCGetTrophyListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetTrophyListResponse& default_instance();

  static inline const CMsgClientToGCGetTrophyListResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetTrophyListResponse*>(
               &_CMsgClientToGCGetTrophyListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    173;

  void Swap(CMsgClientToGCGetTrophyListResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetTrophyListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetTrophyListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetTrophyListResponse& from);
  void MergeFrom(const CMsgClientToGCGetTrophyListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetTrophyListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetTrophyListResponse_Trophy Trophy;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy trophies = 2;
  int trophies_size() const;
  void clear_trophies();
  static const int kTrophiesFieldNumber = 2;
  const ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy& trophies(int index) const;
  ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy* mutable_trophies(int index);
  ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy* add_trophies();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy >*
      mutable_trophies();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy >&
      trophies() const;

  // optional string profile_name = 3;
  bool has_profile_name() const;
  void clear_profile_name();
  static const int kProfileNameFieldNumber = 3;
  const ::std::string& profile_name() const;
  void set_profile_name(const ::std::string& value);
  #if LANG_CXX11
  void set_profile_name(::std::string&& value);
  #endif
  void set_profile_name(const char* value);
  void set_profile_name(const char* value, size_t size);
  ::std::string* mutable_profile_name();
  ::std::string* release_profile_name();
  void set_allocated_profile_name(::std::string* profile_name);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetTrophyListResponse)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_profile_name();
  void clear_has_profile_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy > trophies_;
  ::google::protobuf::internal::ArenaStringPtr profile_name_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientTrophyAwarded : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientTrophyAwarded) */ {
 public:
  CMsgGCToClientTrophyAwarded();
  virtual ~CMsgGCToClientTrophyAwarded();

  CMsgGCToClientTrophyAwarded(const CMsgGCToClientTrophyAwarded& from);

  inline CMsgGCToClientTrophyAwarded& operator=(const CMsgGCToClientTrophyAwarded& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientTrophyAwarded& default_instance();

  static inline const CMsgGCToClientTrophyAwarded* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientTrophyAwarded*>(
               &_CMsgGCToClientTrophyAwarded_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    174;

  void Swap(CMsgGCToClientTrophyAwarded* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientTrophyAwarded* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientTrophyAwarded* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientTrophyAwarded& from);
  void MergeFrom(const CMsgGCToClientTrophyAwarded& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientTrophyAwarded* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trophy_id = 1;
  bool has_trophy_id() const;
  void clear_trophy_id();
  static const int kTrophyIdFieldNumber = 1;
  ::google::protobuf::uint32 trophy_id() const;
  void set_trophy_id(::google::protobuf::uint32 value);

  // optional uint32 trophy_score = 2;
  bool has_trophy_score() const;
  void clear_trophy_score();
  static const int kTrophyScoreFieldNumber = 2;
  ::google::protobuf::uint32 trophy_score() const;
  void set_trophy_score(::google::protobuf::uint32 value);

  // optional uint32 trophy_old_score = 3;
  bool has_trophy_old_score() const;
  void clear_trophy_old_score();
  static const int kTrophyOldScoreFieldNumber = 3;
  ::google::protobuf::uint32 trophy_old_score() const;
  void set_trophy_old_score(::google::protobuf::uint32 value);

  // optional uint32 last_updated = 4;
  bool has_last_updated() const;
  void clear_last_updated();
  static const int kLastUpdatedFieldNumber = 4;
  ::google::protobuf::uint32 last_updated() const;
  void set_last_updated(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientTrophyAwarded)
 private:
  void set_has_trophy_id();
  void clear_has_trophy_id();
  void set_has_trophy_score();
  void clear_has_trophy_score();
  void set_has_trophy_old_score();
  void clear_has_trophy_old_score();
  void set_has_last_updated();
  void clear_has_last_updated();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 trophy_id_;
  ::google::protobuf::uint32 trophy_score_;
  ::google::protobuf::uint32 trophy_old_score_;
  ::google::protobuf::uint32 last_updated_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetProfileCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetProfileCard) */ {
 public:
  CMsgClientToGCGetProfileCard();
  virtual ~CMsgClientToGCGetProfileCard();

  CMsgClientToGCGetProfileCard(const CMsgClientToGCGetProfileCard& from);

  inline CMsgClientToGCGetProfileCard& operator=(const CMsgClientToGCGetProfileCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetProfileCard& default_instance();

  static inline const CMsgClientToGCGetProfileCard* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetProfileCard*>(
               &_CMsgClientToGCGetProfileCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    175;

  void Swap(CMsgClientToGCGetProfileCard* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetProfileCard* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetProfileCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetProfileCard& from);
  void MergeFrom(const CMsgClientToGCGetProfileCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetProfileCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetProfileCard)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetProfileCardSlots_CardSlot : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot) */ {
 public:
  CMsgClientToGCSetProfileCardSlots_CardSlot();
  virtual ~CMsgClientToGCSetProfileCardSlots_CardSlot();

  CMsgClientToGCSetProfileCardSlots_CardSlot(const CMsgClientToGCSetProfileCardSlots_CardSlot& from);

  inline CMsgClientToGCSetProfileCardSlots_CardSlot& operator=(const CMsgClientToGCSetProfileCardSlots_CardSlot& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSetProfileCardSlots_CardSlot& default_instance();

  static inline const CMsgClientToGCSetProfileCardSlots_CardSlot* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetProfileCardSlots_CardSlot*>(
               &_CMsgClientToGCSetProfileCardSlots_CardSlot_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    176;

  void Swap(CMsgClientToGCSetProfileCardSlots_CardSlot* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSetProfileCardSlots_CardSlot* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCSetProfileCardSlots_CardSlot* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCSetProfileCardSlots_CardSlot& from);
  void MergeFrom(const CMsgClientToGCSetProfileCardSlots_CardSlot& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCSetProfileCardSlots_CardSlot* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 slot_id = 1;
  bool has_slot_id() const;
  void clear_slot_id();
  static const int kSlotIdFieldNumber = 1;
  ::google::protobuf::uint32 slot_id() const;
  void set_slot_id(::google::protobuf::uint32 value);

  // optional .proto.dota.EProfileCardSlotType slot_type = 2 [default = k_EProfileCardSlotType_Empty];
  bool has_slot_type() const;
  void clear_slot_type();
  static const int kSlotTypeFieldNumber = 2;
  ::proto::dota::EProfileCardSlotType slot_type() const;
  void set_slot_type(::proto::dota::EProfileCardSlotType value);

  // optional uint64 slot_value = 3;
  bool has_slot_value() const;
  void clear_slot_value();
  static const int kSlotValueFieldNumber = 3;
  ::google::protobuf::uint64 slot_value() const;
  void set_slot_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot)
 private:
  void set_has_slot_id();
  void clear_has_slot_id();
  void set_has_slot_type();
  void clear_has_slot_type();
  void set_has_slot_value();
  void clear_has_slot_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 slot_id_;
  int slot_type_;
  ::google::protobuf::uint64 slot_value_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCSetProfileCardSlots : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSetProfileCardSlots) */ {
 public:
  CMsgClientToGCSetProfileCardSlots();
  virtual ~CMsgClientToGCSetProfileCardSlots();

  CMsgClientToGCSetProfileCardSlots(const CMsgClientToGCSetProfileCardSlots& from);

  inline CMsgClientToGCSetProfileCardSlots& operator=(const CMsgClientToGCSetProfileCardSlots& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSetProfileCardSlots& default_instance();

  static inline const CMsgClientToGCSetProfileCardSlots* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSetProfileCardSlots*>(
               &_CMsgClientToGCSetProfileCardSlots_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    177;

  void Swap(CMsgClientToGCSetProfileCardSlots* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSetProfileCardSlots* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCSetProfileCardSlots* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCSetProfileCardSlots& from);
  void MergeFrom(const CMsgClientToGCSetProfileCardSlots& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCSetProfileCardSlots* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSetProfileCardSlots_CardSlot CardSlot;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot slots = 1;
  int slots_size() const;
  void clear_slots();
  static const int kSlotsFieldNumber = 1;
  const ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot& slots(int index) const;
  ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot* mutable_slots(int index);
  ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot* add_slots();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot >*
      mutable_slots();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot >&
      slots() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSetProfileCardSlots)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot > slots_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetProfileCardStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetProfileCardStats) */ {
 public:
  CMsgClientToGCGetProfileCardStats();
  virtual ~CMsgClientToGCGetProfileCardStats();

  CMsgClientToGCGetProfileCardStats(const CMsgClientToGCGetProfileCardStats& from);

  inline CMsgClientToGCGetProfileCardStats& operator=(const CMsgClientToGCGetProfileCardStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetProfileCardStats& default_instance();

  static inline const CMsgClientToGCGetProfileCardStats* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetProfileCardStats*>(
               &_CMsgClientToGCGetProfileCardStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    178;

  void Swap(CMsgClientToGCGetProfileCardStats* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetProfileCardStats* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetProfileCardStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetProfileCardStats& from);
  void MergeFrom(const CMsgClientToGCGetProfileCardStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetProfileCardStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetProfileCardStats)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreateHeroStatue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCreateHeroStatue) */ {
 public:
  CMsgClientToGCCreateHeroStatue();
  virtual ~CMsgClientToGCCreateHeroStatue();

  CMsgClientToGCCreateHeroStatue(const CMsgClientToGCCreateHeroStatue& from);

  inline CMsgClientToGCCreateHeroStatue& operator=(const CMsgClientToGCCreateHeroStatue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCreateHeroStatue& default_instance();

  static inline const CMsgClientToGCCreateHeroStatue* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreateHeroStatue*>(
               &_CMsgClientToGCCreateHeroStatue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    179;

  void Swap(CMsgClientToGCCreateHeroStatue* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCreateHeroStatue* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCCreateHeroStatue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCCreateHeroStatue& from);
  void MergeFrom(const CMsgClientToGCCreateHeroStatue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCCreateHeroStatue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 wearables = 6;
  int wearables_size() const;
  void clear_wearables();
  static const int kWearablesFieldNumber = 6;
  ::google::protobuf::uint32 wearables(int index) const;
  void set_wearables(int index, ::google::protobuf::uint32 value);
  void add_wearables(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wearables() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wearables();

  // repeated uint32 styles = 8;
  int styles_size() const;
  void clear_styles();
  static const int kStylesFieldNumber = 8;
  ::google::protobuf::uint32 styles(int index) const;
  void set_styles(int index, ::google::protobuf::uint32 value);
  void add_styles(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      styles() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_styles();

  // optional string sequence_name = 4;
  bool has_sequence_name() const;
  void clear_sequence_name();
  static const int kSequenceNameFieldNumber = 4;
  const ::std::string& sequence_name() const;
  void set_sequence_name(const ::std::string& value);
  #if LANG_CXX11
  void set_sequence_name(::std::string&& value);
  #endif
  void set_sequence_name(const char* value);
  void set_sequence_name(const char* value, size_t size);
  ::std::string* mutable_sequence_name();
  ::std::string* release_sequence_name();
  void set_allocated_sequence_name(::std::string* sequence_name);

  // optional string inscription = 7;
  bool has_inscription() const;
  void clear_inscription();
  static const int kInscriptionFieldNumber = 7;
  const ::std::string& inscription() const;
  void set_inscription(const ::std::string& value);
  #if LANG_CXX11
  void set_inscription(::std::string&& value);
  #endif
  void set_inscription(const char* value);
  void set_inscription(const char* value, size_t size);
  ::std::string* mutable_inscription();
  ::std::string* release_inscription();
  void set_allocated_inscription(::std::string* inscription);

  // optional uint64 source_item = 1;
  bool has_source_item() const;
  void clear_source_item();
  static const int kSourceItemFieldNumber = 1;
  ::google::protobuf::uint64 source_item() const;
  void set_source_item(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 3;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 3;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional float cycle = 5;
  bool has_cycle() const;
  void clear_cycle();
  static const int kCycleFieldNumber = 5;
  float cycle() const;
  void set_cycle(float value);

  // optional uint64 reforger_item = 9;
  bool has_reforger_item() const;
  void clear_reforger_item();
  static const int kReforgerItemFieldNumber = 9;
  ::google::protobuf::uint64 reforger_item() const;
  void set_reforger_item(::google::protobuf::uint64 value);

  // optional bool tournament_drop = 10;
  bool has_tournament_drop() const;
  void clear_tournament_drop();
  static const int kTournamentDropFieldNumber = 10;
  bool tournament_drop() const;
  void set_tournament_drop(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCreateHeroStatue)
 private:
  void set_has_source_item();
  void clear_has_source_item();
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_sequence_name();
  void clear_has_sequence_name();
  void set_has_cycle();
  void clear_has_cycle();
  void set_has_inscription();
  void clear_has_inscription();
  void set_has_reforger_item();
  void clear_has_reforger_item();
  void set_has_tournament_drop();
  void clear_has_tournament_drop();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wearables_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > styles_;
  ::google::protobuf::internal::ArenaStringPtr sequence_name_;
  ::google::protobuf::internal::ArenaStringPtr inscription_;
  ::google::protobuf::uint64 source_item_;
  ::google::protobuf::uint32 hero_id_;
  float cycle_;
  ::google::protobuf::uint64 reforger_item_;
  bool tournament_drop_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientHeroStatueCreateResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientHeroStatueCreateResult) */ {
 public:
  CMsgGCToClientHeroStatueCreateResult();
  virtual ~CMsgGCToClientHeroStatueCreateResult();

  CMsgGCToClientHeroStatueCreateResult(const CMsgGCToClientHeroStatueCreateResult& from);

  inline CMsgGCToClientHeroStatueCreateResult& operator=(const CMsgGCToClientHeroStatueCreateResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientHeroStatueCreateResult& default_instance();

  static inline const CMsgGCToClientHeroStatueCreateResult* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientHeroStatueCreateResult*>(
               &_CMsgGCToClientHeroStatueCreateResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    180;

  void Swap(CMsgGCToClientHeroStatueCreateResult* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientHeroStatueCreateResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientHeroStatueCreateResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientHeroStatueCreateResult& from);
  void MergeFrom(const CMsgGCToClientHeroStatueCreateResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientHeroStatueCreateResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 resulting_item = 1;
  bool has_resulting_item() const;
  void clear_resulting_item();
  static const int kResultingItemFieldNumber = 1;
  ::google::protobuf::uint64 resulting_item() const;
  void set_resulting_item(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientHeroStatueCreateResult)
 private:
  void set_has_resulting_item();
  void clear_has_resulting_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 resulting_item_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecordCompendiumStats : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRecordCompendiumStats) */ {
 public:
  CMsgClientToGCRecordCompendiumStats();
  virtual ~CMsgClientToGCRecordCompendiumStats();

  CMsgClientToGCRecordCompendiumStats(const CMsgClientToGCRecordCompendiumStats& from);

  inline CMsgClientToGCRecordCompendiumStats& operator=(const CMsgClientToGCRecordCompendiumStats& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRecordCompendiumStats& default_instance();

  static inline const CMsgClientToGCRecordCompendiumStats* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRecordCompendiumStats*>(
               &_CMsgClientToGCRecordCompendiumStats_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    181;

  void Swap(CMsgClientToGCRecordCompendiumStats* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRecordCompendiumStats* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRecordCompendiumStats* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRecordCompendiumStats& from);
  void MergeFrom(const CMsgClientToGCRecordCompendiumStats& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRecordCompendiumStats* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional uint32 view_duration_s = 2;
  bool has_view_duration_s() const;
  void clear_view_duration_s();
  static const int kViewDurationSFieldNumber = 2;
  ::google::protobuf::uint32 view_duration_s() const;
  void set_view_duration_s(::google::protobuf::uint32 value);

  // optional uint32 videos_viewed = 3;
  bool has_videos_viewed() const;
  void clear_videos_viewed();
  static const int kVideosViewedFieldNumber = 3;
  ::google::protobuf::uint32 videos_viewed() const;
  void set_videos_viewed(::google::protobuf::uint32 value);

  // optional uint32 page_turns = 4;
  bool has_page_turns() const;
  void clear_page_turns();
  static const int kPageTurnsFieldNumber = 4;
  ::google::protobuf::uint32 page_turns() const;
  void set_page_turns(::google::protobuf::uint32 value);

  // optional uint32 links_followed = 5;
  bool has_links_followed() const;
  void clear_links_followed();
  static const int kLinksFollowedFieldNumber = 5;
  ::google::protobuf::uint32 links_followed() const;
  void set_links_followed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRecordCompendiumStats)
 private:
  void set_has_league_id();
  void clear_has_league_id();
  void set_has_view_duration_s();
  void clear_has_view_duration_s();
  void set_has_videos_viewed();
  void clear_has_videos_viewed();
  void set_has_page_turns();
  void clear_has_page_turns();
  void set_has_links_followed();
  void clear_has_links_followed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  ::google::protobuf::uint32 view_duration_s_;
  ::google::protobuf::uint32 videos_viewed_;
  ::google::protobuf::uint32 page_turns_;
  ::google::protobuf::uint32 links_followed_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientEventStatusChanged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientEventStatusChanged) */ {
 public:
  CMsgGCToClientEventStatusChanged();
  virtual ~CMsgGCToClientEventStatusChanged();

  CMsgGCToClientEventStatusChanged(const CMsgGCToClientEventStatusChanged& from);

  inline CMsgGCToClientEventStatusChanged& operator=(const CMsgGCToClientEventStatusChanged& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientEventStatusChanged& default_instance();

  static inline const CMsgGCToClientEventStatusChanged* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientEventStatusChanged*>(
               &_CMsgGCToClientEventStatusChanged_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    182;

  void Swap(CMsgGCToClientEventStatusChanged* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientEventStatusChanged* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientEventStatusChanged* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientEventStatusChanged& from);
  void MergeFrom(const CMsgGCToClientEventStatusChanged& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientEventStatusChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent active_event = 2 [default = EVENT_ID_NONE];
  bool has_active_event() const;
  void clear_active_event();
  static const int kActiveEventFieldNumber = 2;
  ::proto::dota::EEvent active_event() const;
  void set_active_event(::proto::dota::EEvent value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientEventStatusChanged)
 private:
  void set_has_active_event();
  void clear_has_active_event();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int active_event_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCPlayerStatsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCPlayerStatsRequest) */ {
 public:
  CMsgClientToGCPlayerStatsRequest();
  virtual ~CMsgClientToGCPlayerStatsRequest();

  CMsgClientToGCPlayerStatsRequest(const CMsgClientToGCPlayerStatsRequest& from);

  inline CMsgClientToGCPlayerStatsRequest& operator=(const CMsgClientToGCPlayerStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCPlayerStatsRequest& default_instance();

  static inline const CMsgClientToGCPlayerStatsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPlayerStatsRequest*>(
               &_CMsgClientToGCPlayerStatsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    183;

  void Swap(CMsgClientToGCPlayerStatsRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCPlayerStatsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCPlayerStatsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCPlayerStatsRequest& from);
  void MergeFrom(const CMsgClientToGCPlayerStatsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCPlayerStatsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCPlayerStatsRequest)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientPlayerStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientPlayerStatsResponse) */ {
 public:
  CMsgGCToClientPlayerStatsResponse();
  virtual ~CMsgGCToClientPlayerStatsResponse();

  CMsgGCToClientPlayerStatsResponse(const CMsgGCToClientPlayerStatsResponse& from);

  inline CMsgGCToClientPlayerStatsResponse& operator=(const CMsgGCToClientPlayerStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientPlayerStatsResponse& default_instance();

  static inline const CMsgGCToClientPlayerStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientPlayerStatsResponse*>(
               &_CMsgGCToClientPlayerStatsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    184;

  void Swap(CMsgGCToClientPlayerStatsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientPlayerStatsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientPlayerStatsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientPlayerStatsResponse& from);
  void MergeFrom(const CMsgGCToClientPlayerStatsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientPlayerStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float player_stats = 2;
  int player_stats_size() const;
  void clear_player_stats();
  static const int kPlayerStatsFieldNumber = 2;
  float player_stats(int index) const;
  void set_player_stats(int index, float value);
  void add_player_stats(float value);
  const ::google::protobuf::RepeatedField< float >&
      player_stats() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_player_stats();

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 match_count = 3;
  bool has_match_count() const;
  void clear_match_count();
  static const int kMatchCountFieldNumber = 3;
  ::google::protobuf::uint32 match_count() const;
  void set_match_count(::google::protobuf::uint32 value);

  // optional float mean_gpm = 4;
  bool has_mean_gpm() const;
  void clear_mean_gpm();
  static const int kMeanGpmFieldNumber = 4;
  float mean_gpm() const;
  void set_mean_gpm(float value);

  // optional float mean_xppm = 5;
  bool has_mean_xppm() const;
  void clear_mean_xppm();
  static const int kMeanXppmFieldNumber = 5;
  float mean_xppm() const;
  void set_mean_xppm(float value);

  // optional float mean_lasthits = 6;
  bool has_mean_lasthits() const;
  void clear_mean_lasthits();
  static const int kMeanLasthitsFieldNumber = 6;
  float mean_lasthits() const;
  void set_mean_lasthits(float value);

  // optional uint32 rampages = 7;
  bool has_rampages() const;
  void clear_rampages();
  static const int kRampagesFieldNumber = 7;
  ::google::protobuf::uint32 rampages() const;
  void set_rampages(::google::protobuf::uint32 value);

  // optional uint32 triple_kills = 8;
  bool has_triple_kills() const;
  void clear_triple_kills();
  static const int kTripleKillsFieldNumber = 8;
  ::google::protobuf::uint32 triple_kills() const;
  void set_triple_kills(::google::protobuf::uint32 value);

  // optional uint32 first_blood_claimed = 9;
  bool has_first_blood_claimed() const;
  void clear_first_blood_claimed();
  static const int kFirstBloodClaimedFieldNumber = 9;
  ::google::protobuf::uint32 first_blood_claimed() const;
  void set_first_blood_claimed(::google::protobuf::uint32 value);

  // optional uint32 first_blood_given = 10;
  bool has_first_blood_given() const;
  void clear_first_blood_given();
  static const int kFirstBloodGivenFieldNumber = 10;
  ::google::protobuf::uint32 first_blood_given() const;
  void set_first_blood_given(::google::protobuf::uint32 value);

  // optional uint32 couriers_killed = 11;
  bool has_couriers_killed() const;
  void clear_couriers_killed();
  static const int kCouriersKilledFieldNumber = 11;
  ::google::protobuf::uint32 couriers_killed() const;
  void set_couriers_killed(::google::protobuf::uint32 value);

  // optional uint32 aegises_snatched = 12;
  bool has_aegises_snatched() const;
  void clear_aegises_snatched();
  static const int kAegisesSnatchedFieldNumber = 12;
  ::google::protobuf::uint32 aegises_snatched() const;
  void set_aegises_snatched(::google::protobuf::uint32 value);

  // optional uint32 cheeses_eaten = 13;
  bool has_cheeses_eaten() const;
  void clear_cheeses_eaten();
  static const int kCheesesEatenFieldNumber = 13;
  ::google::protobuf::uint32 cheeses_eaten() const;
  void set_cheeses_eaten(::google::protobuf::uint32 value);

  // optional uint32 creeps_stacked = 14;
  bool has_creeps_stacked() const;
  void clear_creeps_stacked();
  static const int kCreepsStackedFieldNumber = 14;
  ::google::protobuf::uint32 creeps_stacked() const;
  void set_creeps_stacked(::google::protobuf::uint32 value);

  // optional float fight_score = 15;
  bool has_fight_score() const;
  void clear_fight_score();
  static const int kFightScoreFieldNumber = 15;
  float fight_score() const;
  void set_fight_score(float value);

  // optional float farm_score = 16;
  bool has_farm_score() const;
  void clear_farm_score();
  static const int kFarmScoreFieldNumber = 16;
  float farm_score() const;
  void set_farm_score(float value);

  // optional float support_score = 17;
  bool has_support_score() const;
  void clear_support_score();
  static const int kSupportScoreFieldNumber = 17;
  float support_score() const;
  void set_support_score(float value);

  // optional float push_score = 18;
  bool has_push_score() const;
  void clear_push_score();
  static const int kPushScoreFieldNumber = 18;
  float push_score() const;
  void set_push_score(float value);

  // optional float versatility_score = 19;
  bool has_versatility_score() const;
  void clear_versatility_score();
  static const int kVersatilityScoreFieldNumber = 19;
  float versatility_score() const;
  void set_versatility_score(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientPlayerStatsResponse)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_match_count();
  void clear_has_match_count();
  void set_has_mean_gpm();
  void clear_has_mean_gpm();
  void set_has_mean_xppm();
  void clear_has_mean_xppm();
  void set_has_mean_lasthits();
  void clear_has_mean_lasthits();
  void set_has_rampages();
  void clear_has_rampages();
  void set_has_triple_kills();
  void clear_has_triple_kills();
  void set_has_first_blood_claimed();
  void clear_has_first_blood_claimed();
  void set_has_first_blood_given();
  void clear_has_first_blood_given();
  void set_has_couriers_killed();
  void clear_has_couriers_killed();
  void set_has_aegises_snatched();
  void clear_has_aegises_snatched();
  void set_has_cheeses_eaten();
  void clear_has_cheeses_eaten();
  void set_has_creeps_stacked();
  void clear_has_creeps_stacked();
  void set_has_fight_score();
  void clear_has_fight_score();
  void set_has_farm_score();
  void clear_has_farm_score();
  void set_has_support_score();
  void clear_has_support_score();
  void set_has_push_score();
  void clear_has_push_score();
  void set_has_versatility_score();
  void clear_has_versatility_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > player_stats_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 match_count_;
  float mean_gpm_;
  float mean_xppm_;
  float mean_lasthits_;
  ::google::protobuf::uint32 rampages_;
  ::google::protobuf::uint32 triple_kills_;
  ::google::protobuf::uint32 first_blood_claimed_;
  ::google::protobuf::uint32 first_blood_given_;
  ::google::protobuf::uint32 couriers_killed_;
  ::google::protobuf::uint32 aegises_snatched_;
  ::google::protobuf::uint32 cheeses_eaten_;
  ::google::protobuf::uint32 creeps_stacked_;
  float fight_score_;
  float farm_score_;
  float support_score_;
  float push_score_;
  float versatility_score_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCCustomGamePlayerCountRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCustomGamePlayerCountRequest) */ {
 public:
  CMsgClientToGCCustomGamePlayerCountRequest();
  virtual ~CMsgClientToGCCustomGamePlayerCountRequest();

  CMsgClientToGCCustomGamePlayerCountRequest(const CMsgClientToGCCustomGamePlayerCountRequest& from);

  inline CMsgClientToGCCustomGamePlayerCountRequest& operator=(const CMsgClientToGCCustomGamePlayerCountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCustomGamePlayerCountRequest& default_instance();

  static inline const CMsgClientToGCCustomGamePlayerCountRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCustomGamePlayerCountRequest*>(
               &_CMsgClientToGCCustomGamePlayerCountRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    185;

  void Swap(CMsgClientToGCCustomGamePlayerCountRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCustomGamePlayerCountRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCCustomGamePlayerCountRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCCustomGamePlayerCountRequest& from);
  void MergeFrom(const CMsgClientToGCCustomGamePlayerCountRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCCustomGamePlayerCountRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCustomGamePlayerCountRequest)
 private:
  void set_has_custom_game_id();
  void clear_has_custom_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientCustomGamePlayerCountResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse) */ {
 public:
  CMsgGCToClientCustomGamePlayerCountResponse();
  virtual ~CMsgGCToClientCustomGamePlayerCountResponse();

  CMsgGCToClientCustomGamePlayerCountResponse(const CMsgGCToClientCustomGamePlayerCountResponse& from);

  inline CMsgGCToClientCustomGamePlayerCountResponse& operator=(const CMsgGCToClientCustomGamePlayerCountResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientCustomGamePlayerCountResponse& default_instance();

  static inline const CMsgGCToClientCustomGamePlayerCountResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCustomGamePlayerCountResponse*>(
               &_CMsgGCToClientCustomGamePlayerCountResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    186;

  void Swap(CMsgGCToClientCustomGamePlayerCountResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientCustomGamePlayerCountResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientCustomGamePlayerCountResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientCustomGamePlayerCountResponse& from);
  void MergeFrom(const CMsgGCToClientCustomGamePlayerCountResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientCustomGamePlayerCountResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint64 player_count = 2;
  bool has_player_count() const;
  void clear_player_count();
  static const int kPlayerCountFieldNumber = 2;
  ::google::protobuf::uint64 player_count() const;
  void set_player_count(::google::protobuf::uint64 value);

  // optional uint64 spectator_count = 3;
  bool has_spectator_count() const;
  void clear_spectator_count();
  static const int kSpectatorCountFieldNumber = 3;
  ::google::protobuf::uint64 spectator_count() const;
  void set_spectator_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse)
 private:
  void set_has_custom_game_id();
  void clear_has_custom_game_id();
  void set_has_player_count();
  void clear_has_player_count();
  void set_has_spectator_count();
  void clear_has_spectator_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint64 player_count_;
  ::google::protobuf::uint64 spectator_count_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCCustomGamesFriendsPlayedRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCustomGamesFriendsPlayedRequest) */ {
 public:
  CMsgClientToGCCustomGamesFriendsPlayedRequest();
  virtual ~CMsgClientToGCCustomGamesFriendsPlayedRequest();

  CMsgClientToGCCustomGamesFriendsPlayedRequest(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from);

  inline CMsgClientToGCCustomGamesFriendsPlayedRequest& operator=(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCustomGamesFriendsPlayedRequest& default_instance();

  static inline const CMsgClientToGCCustomGamesFriendsPlayedRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCustomGamesFriendsPlayedRequest*>(
               &_CMsgClientToGCCustomGamesFriendsPlayedRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    187;

  void Swap(CMsgClientToGCCustomGamesFriendsPlayedRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCustomGamesFriendsPlayedRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCCustomGamesFriendsPlayedRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from);
  void MergeFrom(const CMsgClientToGCCustomGamesFriendsPlayedRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCCustomGamesFriendsPlayedRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCustomGamesFriendsPlayedRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame) */ {
 public:
  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame();
  virtual ~CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame();

  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from);

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& operator=(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& default_instance();

  static inline const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame*>(
               &_CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    188;

  void Swap(CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from);
  void MergeFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 2;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 2;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // optional uint64 custom_game_id = 1;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame)
 private:
  void set_has_custom_game_id();
  void clear_has_custom_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  ::google::protobuf::uint64 custom_game_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientCustomGamesFriendsPlayedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse) */ {
 public:
  CMsgGCToClientCustomGamesFriendsPlayedResponse();
  virtual ~CMsgGCToClientCustomGamesFriendsPlayedResponse();

  CMsgGCToClientCustomGamesFriendsPlayedResponse(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from);

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse& operator=(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientCustomGamesFriendsPlayedResponse& default_instance();

  static inline const CMsgGCToClientCustomGamesFriendsPlayedResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientCustomGamesFriendsPlayedResponse*>(
               &_CMsgGCToClientCustomGamesFriendsPlayedResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    189;

  void Swap(CMsgGCToClientCustomGamesFriendsPlayedResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientCustomGamesFriendsPlayedResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientCustomGamesFriendsPlayedResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from);
  void MergeFrom(const CMsgGCToClientCustomGamesFriendsPlayedResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientCustomGamesFriendsPlayedResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame CustomGame;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame games = 2;
  int games_size() const;
  void clear_games();
  static const int kGamesFieldNumber = 2;
  const ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& games(int index) const;
  ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* mutable_games(int index);
  ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* add_games();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >*
      mutable_games();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >&
      games() const;

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame > games_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialFeedPostCommentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest) */ {
 public:
  CMsgClientToGCSocialFeedPostCommentRequest();
  virtual ~CMsgClientToGCSocialFeedPostCommentRequest();

  CMsgClientToGCSocialFeedPostCommentRequest(const CMsgClientToGCSocialFeedPostCommentRequest& from);

  inline CMsgClientToGCSocialFeedPostCommentRequest& operator=(const CMsgClientToGCSocialFeedPostCommentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSocialFeedPostCommentRequest& default_instance();

  static inline const CMsgClientToGCSocialFeedPostCommentRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSocialFeedPostCommentRequest*>(
               &_CMsgClientToGCSocialFeedPostCommentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    190;

  void Swap(CMsgClientToGCSocialFeedPostCommentRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSocialFeedPostCommentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCSocialFeedPostCommentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCSocialFeedPostCommentRequest& from);
  void MergeFrom(const CMsgClientToGCSocialFeedPostCommentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCSocialFeedPostCommentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string comment = 2;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 2;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional uint64 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint64 event_id() const;
  void set_event_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_comment();
  void clear_has_comment();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::uint64 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialFeedPostCommentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientSocialFeedPostCommentResponse) */ {
 public:
  CMsgGCToClientSocialFeedPostCommentResponse();
  virtual ~CMsgGCToClientSocialFeedPostCommentResponse();

  CMsgGCToClientSocialFeedPostCommentResponse(const CMsgGCToClientSocialFeedPostCommentResponse& from);

  inline CMsgGCToClientSocialFeedPostCommentResponse& operator=(const CMsgGCToClientSocialFeedPostCommentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialFeedPostCommentResponse& default_instance();

  static inline const CMsgGCToClientSocialFeedPostCommentResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientSocialFeedPostCommentResponse*>(
               &_CMsgGCToClientSocialFeedPostCommentResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    191;

  void Swap(CMsgGCToClientSocialFeedPostCommentResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientSocialFeedPostCommentResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientSocialFeedPostCommentResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientSocialFeedPostCommentResponse& from);
  void MergeFrom(const CMsgGCToClientSocialFeedPostCommentResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientSocialFeedPostCommentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientSocialFeedPostCommentResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialFeedPostMessageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest) */ {
 public:
  CMsgClientToGCSocialFeedPostMessageRequest();
  virtual ~CMsgClientToGCSocialFeedPostMessageRequest();

  CMsgClientToGCSocialFeedPostMessageRequest(const CMsgClientToGCSocialFeedPostMessageRequest& from);

  inline CMsgClientToGCSocialFeedPostMessageRequest& operator=(const CMsgClientToGCSocialFeedPostMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSocialFeedPostMessageRequest& default_instance();

  static inline const CMsgClientToGCSocialFeedPostMessageRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSocialFeedPostMessageRequest*>(
               &_CMsgClientToGCSocialFeedPostMessageRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    192;

  void Swap(CMsgClientToGCSocialFeedPostMessageRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSocialFeedPostMessageRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCSocialFeedPostMessageRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCSocialFeedPostMessageRequest& from);
  void MergeFrom(const CMsgClientToGCSocialFeedPostMessageRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCSocialFeedPostMessageRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 match_timestamp = 3;
  bool has_match_timestamp() const;
  void clear_match_timestamp();
  static const int kMatchTimestampFieldNumber = 3;
  ::google::protobuf::uint32 match_timestamp() const;
  void set_match_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest)
 private:
  void set_has_message();
  void clear_has_message();
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_match_timestamp();
  void clear_has_match_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 match_timestamp_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialFeedPostMessageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientSocialFeedPostMessageResponse) */ {
 public:
  CMsgGCToClientSocialFeedPostMessageResponse();
  virtual ~CMsgGCToClientSocialFeedPostMessageResponse();

  CMsgGCToClientSocialFeedPostMessageResponse(const CMsgGCToClientSocialFeedPostMessageResponse& from);

  inline CMsgGCToClientSocialFeedPostMessageResponse& operator=(const CMsgGCToClientSocialFeedPostMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialFeedPostMessageResponse& default_instance();

  static inline const CMsgGCToClientSocialFeedPostMessageResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientSocialFeedPostMessageResponse*>(
               &_CMsgGCToClientSocialFeedPostMessageResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    193;

  void Swap(CMsgGCToClientSocialFeedPostMessageResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientSocialFeedPostMessageResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientSocialFeedPostMessageResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientSocialFeedPostMessageResponse& from);
  void MergeFrom(const CMsgGCToClientSocialFeedPostMessageResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientSocialFeedPostMessageResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientSocialFeedPostMessageResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCFriendsPlayedCustomGameRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCFriendsPlayedCustomGameRequest) */ {
 public:
  CMsgClientToGCFriendsPlayedCustomGameRequest();
  virtual ~CMsgClientToGCFriendsPlayedCustomGameRequest();

  CMsgClientToGCFriendsPlayedCustomGameRequest(const CMsgClientToGCFriendsPlayedCustomGameRequest& from);

  inline CMsgClientToGCFriendsPlayedCustomGameRequest& operator=(const CMsgClientToGCFriendsPlayedCustomGameRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCFriendsPlayedCustomGameRequest& default_instance();

  static inline const CMsgClientToGCFriendsPlayedCustomGameRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCFriendsPlayedCustomGameRequest*>(
               &_CMsgClientToGCFriendsPlayedCustomGameRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    194;

  void Swap(CMsgClientToGCFriendsPlayedCustomGameRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCFriendsPlayedCustomGameRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCFriendsPlayedCustomGameRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCFriendsPlayedCustomGameRequest& from);
  void MergeFrom(const CMsgClientToGCFriendsPlayedCustomGameRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCFriendsPlayedCustomGameRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 custom_game_id = 1;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCFriendsPlayedCustomGameRequest)
 private:
  void set_has_custom_game_id();
  void clear_has_custom_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 custom_game_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientFriendsPlayedCustomGameResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse) */ {
 public:
  CMsgGCToClientFriendsPlayedCustomGameResponse();
  virtual ~CMsgGCToClientFriendsPlayedCustomGameResponse();

  CMsgGCToClientFriendsPlayedCustomGameResponse(const CMsgGCToClientFriendsPlayedCustomGameResponse& from);

  inline CMsgGCToClientFriendsPlayedCustomGameResponse& operator=(const CMsgGCToClientFriendsPlayedCustomGameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFriendsPlayedCustomGameResponse& default_instance();

  static inline const CMsgGCToClientFriendsPlayedCustomGameResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientFriendsPlayedCustomGameResponse*>(
               &_CMsgGCToClientFriendsPlayedCustomGameResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    195;

  void Swap(CMsgGCToClientFriendsPlayedCustomGameResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientFriendsPlayedCustomGameResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientFriendsPlayedCustomGameResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientFriendsPlayedCustomGameResponse& from);
  void MergeFrom(const CMsgGCToClientFriendsPlayedCustomGameResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientFriendsPlayedCustomGameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 account_ids = 2;
  int account_ids_size() const;
  void clear_account_ids();
  static const int kAccountIdsFieldNumber = 2;
  ::google::protobuf::uint32 account_ids(int index) const;
  void set_account_ids(int index, ::google::protobuf::uint32 value);
  void add_account_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      account_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_account_ids();

  // optional uint64 custom_game_id = 1;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 1;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse)
 private:
  void set_has_custom_game_id();
  void clear_has_custom_game_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > account_ids_;
  ::google::protobuf::uint64 custom_game_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCFeaturedHeroesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCFeaturedHeroesRequest) */ {
 public:
  CMsgClientToGCFeaturedHeroesRequest();
  virtual ~CMsgClientToGCFeaturedHeroesRequest();

  CMsgClientToGCFeaturedHeroesRequest(const CMsgClientToGCFeaturedHeroesRequest& from);

  inline CMsgClientToGCFeaturedHeroesRequest& operator=(const CMsgClientToGCFeaturedHeroesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCFeaturedHeroesRequest& default_instance();

  static inline const CMsgClientToGCFeaturedHeroesRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCFeaturedHeroesRequest*>(
               &_CMsgClientToGCFeaturedHeroesRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    196;

  void Swap(CMsgClientToGCFeaturedHeroesRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCFeaturedHeroesRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCFeaturedHeroesRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCFeaturedHeroesRequest& from);
  void MergeFrom(const CMsgClientToGCFeaturedHeroesRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCFeaturedHeroesRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCFeaturedHeroesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientFeaturedHeroesResponse_DataField : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField) */ {
 public:
  CMsgGCToClientFeaturedHeroesResponse_DataField();
  virtual ~CMsgGCToClientFeaturedHeroesResponse_DataField();

  CMsgGCToClientFeaturedHeroesResponse_DataField(const CMsgGCToClientFeaturedHeroesResponse_DataField& from);

  inline CMsgGCToClientFeaturedHeroesResponse_DataField& operator=(const CMsgGCToClientFeaturedHeroesResponse_DataField& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFeaturedHeroesResponse_DataField& default_instance();

  static inline const CMsgGCToClientFeaturedHeroesResponse_DataField* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientFeaturedHeroesResponse_DataField*>(
               &_CMsgGCToClientFeaturedHeroesResponse_DataField_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    197;

  void Swap(CMsgGCToClientFeaturedHeroesResponse_DataField* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientFeaturedHeroesResponse_DataField* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientFeaturedHeroesResponse_DataField* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientFeaturedHeroesResponse_DataField& from);
  void MergeFrom(const CMsgGCToClientFeaturedHeroesResponse_DataField& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientFeaturedHeroesResponse_DataField* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string string_value = 4;
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 4;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  // optional .proto.dota.EFeaturedHeroDataType data_type = 1 [default = k_EFeaturedHeroDataType_HeroID];
  bool has_data_type() const;
  void clear_data_type();
  static const int kDataTypeFieldNumber = 1;
  ::proto::dota::EFeaturedHeroDataType data_type() const;
  void set_data_type(::proto::dota::EFeaturedHeroDataType value);

  // optional uint32 uint32_value = 2;
  bool has_uint32_value() const;
  void clear_uint32_value();
  static const int kUint32ValueFieldNumber = 2;
  ::google::protobuf::uint32 uint32_value() const;
  void set_uint32_value(::google::protobuf::uint32 value);

  // optional uint64 uint64_value = 3;
  bool has_uint64_value() const;
  void clear_uint64_value();
  static const int kUint64ValueFieldNumber = 3;
  ::google::protobuf::uint64 uint64_value() const;
  void set_uint64_value(::google::protobuf::uint64 value);

  // optional float float_value = 5;
  bool has_float_value() const;
  void clear_float_value();
  static const int kFloatValueFieldNumber = 5;
  float float_value() const;
  void set_float_value(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField)
 private:
  void set_has_data_type();
  void clear_has_data_type();
  void set_has_uint32_value();
  void clear_has_uint32_value();
  void set_has_uint64_value();
  void clear_has_uint64_value();
  void set_has_string_value();
  void clear_has_string_value();
  void set_has_float_value();
  void clear_has_float_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  int data_type_;
  ::google::protobuf::uint32 uint32_value_;
  ::google::protobuf::uint64 uint64_value_;
  float float_value_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientFeaturedHeroesResponse_FeaturedHero : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientFeaturedHeroesResponse.FeaturedHero) */ {
 public:
  CMsgGCToClientFeaturedHeroesResponse_FeaturedHero();
  virtual ~CMsgGCToClientFeaturedHeroesResponse_FeaturedHero();

  CMsgGCToClientFeaturedHeroesResponse_FeaturedHero(const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& from);

  inline CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& operator=(const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& default_instance();

  static inline const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero*>(
               &_CMsgGCToClientFeaturedHeroesResponse_FeaturedHero_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    198;

  void Swap(CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& from);
  void MergeFrom(const CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField data_fields = 1;
  int data_fields_size() const;
  void clear_data_fields();
  static const int kDataFieldsFieldNumber = 1;
  const ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_DataField& data_fields(int index) const;
  ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_DataField* mutable_data_fields(int index);
  ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_DataField* add_data_fields();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_DataField >*
      mutable_data_fields();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_DataField >&
      data_fields() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientFeaturedHeroesResponse.FeaturedHero)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_DataField > data_fields_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientFeaturedHeroesResponse_Category : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category) */ {
 public:
  CMsgGCToClientFeaturedHeroesResponse_Category();
  virtual ~CMsgGCToClientFeaturedHeroesResponse_Category();

  CMsgGCToClientFeaturedHeroesResponse_Category(const CMsgGCToClientFeaturedHeroesResponse_Category& from);

  inline CMsgGCToClientFeaturedHeroesResponse_Category& operator=(const CMsgGCToClientFeaturedHeroesResponse_Category& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFeaturedHeroesResponse_Category& default_instance();

  static inline const CMsgGCToClientFeaturedHeroesResponse_Category* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientFeaturedHeroesResponse_Category*>(
               &_CMsgGCToClientFeaturedHeroesResponse_Category_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    199;

  void Swap(CMsgGCToClientFeaturedHeroesResponse_Category* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientFeaturedHeroesResponse_Category* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientFeaturedHeroesResponse_Category* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientFeaturedHeroesResponse_Category& from);
  void MergeFrom(const CMsgGCToClientFeaturedHeroesResponse_Category& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientFeaturedHeroesResponse_Category* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.EFeaturedHeroTextField text_fields = 2;
  int text_fields_size() const;
  void clear_text_fields();
  static const int kTextFieldsFieldNumber = 2;
  ::proto::dota::EFeaturedHeroTextField text_fields(int index) const;
  void set_text_fields(int index, ::proto::dota::EFeaturedHeroTextField value);
  void add_text_fields(::proto::dota::EFeaturedHeroTextField value);
  const ::google::protobuf::RepeatedField<int>& text_fields() const;
  ::google::protobuf::RepeatedField<int>* mutable_text_fields();

  // repeated .proto.dota.CMsgGCToClientFeaturedHeroesResponse.FeaturedHero featured_heroes = 3;
  int featured_heroes_size() const;
  void clear_featured_heroes();
  static const int kFeaturedHeroesFieldNumber = 3;
  const ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& featured_heroes(int index) const;
  ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* mutable_featured_heroes(int index);
  ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* add_featured_heroes();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero >*
      mutable_featured_heroes();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero >&
      featured_heroes() const;

  // optional int32 category_weight = 1;
  bool has_category_weight() const;
  void clear_category_weight();
  static const int kCategoryWeightFieldNumber = 1;
  ::google::protobuf::int32 category_weight() const;
  void set_category_weight(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category)
 private:
  void set_has_category_weight();
  void clear_has_category_weight();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> text_fields_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero > featured_heroes_;
  ::google::protobuf::int32 category_weight_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientFeaturedHeroesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientFeaturedHeroesResponse) */ {
 public:
  CMsgGCToClientFeaturedHeroesResponse();
  virtual ~CMsgGCToClientFeaturedHeroesResponse();

  CMsgGCToClientFeaturedHeroesResponse(const CMsgGCToClientFeaturedHeroesResponse& from);

  inline CMsgGCToClientFeaturedHeroesResponse& operator=(const CMsgGCToClientFeaturedHeroesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientFeaturedHeroesResponse& default_instance();

  static inline const CMsgGCToClientFeaturedHeroesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientFeaturedHeroesResponse*>(
               &_CMsgGCToClientFeaturedHeroesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    200;

  void Swap(CMsgGCToClientFeaturedHeroesResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientFeaturedHeroesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientFeaturedHeroesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientFeaturedHeroesResponse& from);
  void MergeFrom(const CMsgGCToClientFeaturedHeroesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientFeaturedHeroesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientFeaturedHeroesResponse_DataField DataField;
  typedef CMsgGCToClientFeaturedHeroesResponse_FeaturedHero FeaturedHero;
  typedef CMsgGCToClientFeaturedHeroesResponse_Category Category;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category categories = 1;
  int categories_size() const;
  void clear_categories();
  static const int kCategoriesFieldNumber = 1;
  const ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_Category& categories(int index) const;
  ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_Category* mutable_categories(int index);
  ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_Category* add_categories();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_Category >*
      mutable_categories();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_Category >&
      categories() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientFeaturedHeroesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_Category > categories_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialMatchPostCommentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest) */ {
 public:
  CMsgClientToGCSocialMatchPostCommentRequest();
  virtual ~CMsgClientToGCSocialMatchPostCommentRequest();

  CMsgClientToGCSocialMatchPostCommentRequest(const CMsgClientToGCSocialMatchPostCommentRequest& from);

  inline CMsgClientToGCSocialMatchPostCommentRequest& operator=(const CMsgClientToGCSocialMatchPostCommentRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSocialMatchPostCommentRequest& default_instance();

  static inline const CMsgClientToGCSocialMatchPostCommentRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSocialMatchPostCommentRequest*>(
               &_CMsgClientToGCSocialMatchPostCommentRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    201;

  void Swap(CMsgClientToGCSocialMatchPostCommentRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSocialMatchPostCommentRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCSocialMatchPostCommentRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCSocialMatchPostCommentRequest& from);
  void MergeFrom(const CMsgClientToGCSocialMatchPostCommentRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCSocialMatchPostCommentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string comment = 2;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 2;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_comment();
  void clear_has_comment();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::uint64 match_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialMatchPostCommentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientSocialMatchPostCommentResponse) */ {
 public:
  CMsgGCToClientSocialMatchPostCommentResponse();
  virtual ~CMsgGCToClientSocialMatchPostCommentResponse();

  CMsgGCToClientSocialMatchPostCommentResponse(const CMsgGCToClientSocialMatchPostCommentResponse& from);

  inline CMsgGCToClientSocialMatchPostCommentResponse& operator=(const CMsgGCToClientSocialMatchPostCommentResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialMatchPostCommentResponse& default_instance();

  static inline const CMsgGCToClientSocialMatchPostCommentResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientSocialMatchPostCommentResponse*>(
               &_CMsgGCToClientSocialMatchPostCommentResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    202;

  void Swap(CMsgGCToClientSocialMatchPostCommentResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientSocialMatchPostCommentResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientSocialMatchPostCommentResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientSocialMatchPostCommentResponse& from);
  void MergeFrom(const CMsgGCToClientSocialMatchPostCommentResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientSocialMatchPostCommentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientSocialMatchPostCommentResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCSocialMatchDetailsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSocialMatchDetailsRequest) */ {
 public:
  CMsgClientToGCSocialMatchDetailsRequest();
  virtual ~CMsgClientToGCSocialMatchDetailsRequest();

  CMsgClientToGCSocialMatchDetailsRequest(const CMsgClientToGCSocialMatchDetailsRequest& from);

  inline CMsgClientToGCSocialMatchDetailsRequest& operator=(const CMsgClientToGCSocialMatchDetailsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSocialMatchDetailsRequest& default_instance();

  static inline const CMsgClientToGCSocialMatchDetailsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSocialMatchDetailsRequest*>(
               &_CMsgClientToGCSocialMatchDetailsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    203;

  void Swap(CMsgClientToGCSocialMatchDetailsRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSocialMatchDetailsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCSocialMatchDetailsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCSocialMatchDetailsRequest& from);
  void MergeFrom(const CMsgClientToGCSocialMatchDetailsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCSocialMatchDetailsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 pagination_timestamp = 2;
  bool has_pagination_timestamp() const;
  void clear_pagination_timestamp();
  static const int kPaginationTimestampFieldNumber = 2;
  ::google::protobuf::uint32 pagination_timestamp() const;
  void set_pagination_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSocialMatchDetailsRequest)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_pagination_timestamp();
  void clear_has_pagination_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 pagination_timestamp_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialMatchDetailsResponse_Comment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment) */ {
 public:
  CMsgGCToClientSocialMatchDetailsResponse_Comment();
  virtual ~CMsgGCToClientSocialMatchDetailsResponse_Comment();

  CMsgGCToClientSocialMatchDetailsResponse_Comment(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from);

  inline CMsgGCToClientSocialMatchDetailsResponse_Comment& operator=(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialMatchDetailsResponse_Comment& default_instance();

  static inline const CMsgGCToClientSocialMatchDetailsResponse_Comment* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientSocialMatchDetailsResponse_Comment*>(
               &_CMsgGCToClientSocialMatchDetailsResponse_Comment_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    204;

  void Swap(CMsgGCToClientSocialMatchDetailsResponse_Comment* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientSocialMatchDetailsResponse_Comment* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientSocialMatchDetailsResponse_Comment* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from);
  void MergeFrom(const CMsgGCToClientSocialMatchDetailsResponse_Comment& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientSocialMatchDetailsResponse_Comment* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string persona_name = 2;
  bool has_persona_name() const;
  void clear_persona_name();
  static const int kPersonaNameFieldNumber = 2;
  const ::std::string& persona_name() const;
  void set_persona_name(const ::std::string& value);
  #if LANG_CXX11
  void set_persona_name(::std::string&& value);
  #endif
  void set_persona_name(const char* value);
  void set_persona_name(const char* value, size_t size);
  ::std::string* mutable_persona_name();
  ::std::string* release_persona_name();
  void set_allocated_persona_name(::std::string* persona_name);

  // optional string comment = 4;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 4;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_persona_name();
  void clear_has_persona_name();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_comment();
  void clear_has_comment();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr persona_name_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 timestamp_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientSocialMatchDetailsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientSocialMatchDetailsResponse) */ {
 public:
  CMsgGCToClientSocialMatchDetailsResponse();
  virtual ~CMsgGCToClientSocialMatchDetailsResponse();

  CMsgGCToClientSocialMatchDetailsResponse(const CMsgGCToClientSocialMatchDetailsResponse& from);

  inline CMsgGCToClientSocialMatchDetailsResponse& operator=(const CMsgGCToClientSocialMatchDetailsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientSocialMatchDetailsResponse& default_instance();

  static inline const CMsgGCToClientSocialMatchDetailsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientSocialMatchDetailsResponse*>(
               &_CMsgGCToClientSocialMatchDetailsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    205;

  void Swap(CMsgGCToClientSocialMatchDetailsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientSocialMatchDetailsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientSocialMatchDetailsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientSocialMatchDetailsResponse& from);
  void MergeFrom(const CMsgGCToClientSocialMatchDetailsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientSocialMatchDetailsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientSocialMatchDetailsResponse_Comment Comment;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment comments = 2;
  int comments_size() const;
  void clear_comments();
  static const int kCommentsFieldNumber = 2;
  const ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment& comments(int index) const;
  ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment* mutable_comments(int index);
  ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment* add_comments();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment >*
      mutable_comments();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment >&
      comments() const;

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientSocialMatchDetailsResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment > comments_;
  bool success_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAPartyRichPresence_Member : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPartyRichPresence.Member) */ {
 public:
  CMsgDOTAPartyRichPresence_Member();
  virtual ~CMsgDOTAPartyRichPresence_Member();

  CMsgDOTAPartyRichPresence_Member(const CMsgDOTAPartyRichPresence_Member& from);

  inline CMsgDOTAPartyRichPresence_Member& operator=(const CMsgDOTAPartyRichPresence_Member& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPartyRichPresence_Member& default_instance();

  static inline const CMsgDOTAPartyRichPresence_Member* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPartyRichPresence_Member*>(
               &_CMsgDOTAPartyRichPresence_Member_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    206;

  void Swap(CMsgDOTAPartyRichPresence_Member* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAPartyRichPresence_Member* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAPartyRichPresence_Member* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAPartyRichPresence_Member& from);
  void MergeFrom(const CMsgDOTAPartyRichPresence_Member& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAPartyRichPresence_Member* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steam_id = 1;
  bool has_steam_id() const;
  void clear_steam_id();
  static const int kSteamIdFieldNumber = 1;
  ::google::protobuf::uint64 steam_id() const;
  void set_steam_id(::google::protobuf::uint64 value);

  // optional bool coach = 2;
  bool has_coach() const;
  void clear_coach();
  static const int kCoachFieldNumber = 2;
  bool coach() const;
  void set_coach(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPartyRichPresence.Member)
 private:
  void set_has_steam_id();
  void clear_has_steam_id();
  void set_has_coach();
  void clear_has_coach();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steam_id_;
  bool coach_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAPartyRichPresence_WeekendTourney : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney) */ {
 public:
  CMsgDOTAPartyRichPresence_WeekendTourney();
  virtual ~CMsgDOTAPartyRichPresence_WeekendTourney();

  CMsgDOTAPartyRichPresence_WeekendTourney(const CMsgDOTAPartyRichPresence_WeekendTourney& from);

  inline CMsgDOTAPartyRichPresence_WeekendTourney& operator=(const CMsgDOTAPartyRichPresence_WeekendTourney& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPartyRichPresence_WeekendTourney& default_instance();

  static inline const CMsgDOTAPartyRichPresence_WeekendTourney* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPartyRichPresence_WeekendTourney*>(
               &_CMsgDOTAPartyRichPresence_WeekendTourney_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    207;

  void Swap(CMsgDOTAPartyRichPresence_WeekendTourney* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAPartyRichPresence_WeekendTourney* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAPartyRichPresence_WeekendTourney* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAPartyRichPresence_WeekendTourney& from);
  void MergeFrom(const CMsgDOTAPartyRichPresence_WeekendTourney& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAPartyRichPresence_WeekendTourney* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 division = 1;
  bool has_division() const;
  void clear_division();
  static const int kDivisionFieldNumber = 1;
  ::google::protobuf::uint32 division() const;
  void set_division(::google::protobuf::uint32 value);

  // optional uint32 skill_level = 2;
  bool has_skill_level() const;
  void clear_skill_level();
  static const int kSkillLevelFieldNumber = 2;
  ::google::protobuf::uint32 skill_level() const;
  void set_skill_level(::google::protobuf::uint32 value);

  // optional uint32 round = 3;
  bool has_round() const;
  void clear_round();
  static const int kRoundFieldNumber = 3;
  ::google::protobuf::uint32 round() const;
  void set_round(::google::protobuf::uint32 value);

  // optional uint32 tournament_id = 4;
  bool has_tournament_id() const;
  void clear_tournament_id();
  static const int kTournamentIdFieldNumber = 4;
  ::google::protobuf::uint32 tournament_id() const;
  void set_tournament_id(::google::protobuf::uint32 value);

  // optional uint32 state_seq_num = 5;
  bool has_state_seq_num() const;
  void clear_state_seq_num();
  static const int kStateSeqNumFieldNumber = 5;
  ::google::protobuf::uint32 state_seq_num() const;
  void set_state_seq_num(::google::protobuf::uint32 value);

  // optional .proto.dota.EWeekendTourneyRichPresenceEvent event = 6 [default = k_EWeekendTourneyRichPresenceEvent_None];
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 6;
  ::proto::dota::EWeekendTourneyRichPresenceEvent event() const;
  void set_event(::proto::dota::EWeekendTourneyRichPresenceEvent value);

  // optional uint32 event_round = 7;
  bool has_event_round() const;
  void clear_event_round();
  static const int kEventRoundFieldNumber = 7;
  ::google::protobuf::uint32 event_round() const;
  void set_event_round(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney)
 private:
  void set_has_division();
  void clear_has_division();
  void set_has_skill_level();
  void clear_has_skill_level();
  void set_has_round();
  void clear_has_round();
  void set_has_tournament_id();
  void clear_has_tournament_id();
  void set_has_state_seq_num();
  void clear_has_state_seq_num();
  void set_has_event();
  void clear_has_event();
  void set_has_event_round();
  void clear_has_event_round();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 division_;
  ::google::protobuf::uint32 skill_level_;
  ::google::protobuf::uint32 round_;
  ::google::protobuf::uint32 tournament_id_;
  ::google::protobuf::uint32 state_seq_num_;
  int event_;
  ::google::protobuf::uint32 event_round_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAPartyRichPresence : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPartyRichPresence) */ {
 public:
  CMsgDOTAPartyRichPresence();
  virtual ~CMsgDOTAPartyRichPresence();

  CMsgDOTAPartyRichPresence(const CMsgDOTAPartyRichPresence& from);

  inline CMsgDOTAPartyRichPresence& operator=(const CMsgDOTAPartyRichPresence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPartyRichPresence& default_instance();

  static inline const CMsgDOTAPartyRichPresence* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPartyRichPresence*>(
               &_CMsgDOTAPartyRichPresence_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    208;

  void Swap(CMsgDOTAPartyRichPresence* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAPartyRichPresence* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAPartyRichPresence* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAPartyRichPresence& from);
  void MergeFrom(const CMsgDOTAPartyRichPresence& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAPartyRichPresence* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAPartyRichPresence_Member Member;
  typedef CMsgDOTAPartyRichPresence_WeekendTourney WeekendTourney;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAPartyRichPresence.Member members = 4;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 4;
  const ::proto::dota::CMsgDOTAPartyRichPresence_Member& members(int index) const;
  ::proto::dota::CMsgDOTAPartyRichPresence_Member* mutable_members(int index);
  ::proto::dota::CMsgDOTAPartyRichPresence_Member* add_members();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAPartyRichPresence_Member >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAPartyRichPresence_Member >&
      members() const;

  // optional string team_name = 8;
  bool has_team_name() const;
  void clear_team_name();
  static const int kTeamNameFieldNumber = 8;
  const ::std::string& team_name() const;
  void set_team_name(const ::std::string& value);
  #if LANG_CXX11
  void set_team_name(::std::string&& value);
  #endif
  void set_team_name(const char* value);
  void set_team_name(const char* value, size_t size);
  ::std::string* mutable_team_name();
  ::std::string* release_team_name();
  void set_allocated_team_name(::std::string* team_name);

  // optional .proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney weekend_tourney = 6;
  bool has_weekend_tourney() const;
  void clear_weekend_tourney();
  static const int kWeekendTourneyFieldNumber = 6;
  const ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney& weekend_tourney() const;
  ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* mutable_weekend_tourney();
  ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* release_weekend_tourney();
  void set_allocated_weekend_tourney(::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* weekend_tourney);

  // optional fixed64 party_id = 1;
  bool has_party_id() const;
  void clear_party_id();
  static const int kPartyIdFieldNumber = 1;
  ::google::protobuf::uint64 party_id() const;
  void set_party_id(::google::protobuf::uint64 value);

  // optional .proto.dota.CSODOTAParty.State party_state = 2 [default = UI];
  bool has_party_state() const;
  void clear_party_state();
  static const int kPartyStateFieldNumber = 2;
  ::proto::dota::CSODOTAParty_State party_state() const;
  void set_party_state(::proto::dota::CSODOTAParty_State value);

  // optional bool open = 3;
  bool has_open() const;
  void clear_open();
  static const int kOpenFieldNumber = 3;
  bool open() const;
  void set_open(bool value);

  // optional bool low_priority = 5;
  bool has_low_priority() const;
  void clear_low_priority();
  static const int kLowPriorityFieldNumber = 5;
  bool low_priority() const;
  void set_low_priority(bool value);

  // optional uint64 ugc_team_ui_logo = 9;
  bool has_ugc_team_ui_logo() const;
  void clear_ugc_team_ui_logo();
  static const int kUgcTeamUiLogoFieldNumber = 9;
  ::google::protobuf::uint64 ugc_team_ui_logo() const;
  void set_ugc_team_ui_logo(::google::protobuf::uint64 value);

  // optional uint32 team_id = 7;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 7;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPartyRichPresence)
 private:
  void set_has_party_id();
  void clear_has_party_id();
  void set_has_party_state();
  void clear_has_party_state();
  void set_has_open();
  void clear_has_open();
  void set_has_low_priority();
  void clear_has_low_priority();
  void set_has_team_id();
  void clear_has_team_id();
  void set_has_team_name();
  void clear_has_team_name();
  void set_has_ugc_team_ui_logo();
  void clear_has_ugc_team_ui_logo();
  void set_has_weekend_tourney();
  void clear_has_weekend_tourney();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAPartyRichPresence_Member > members_;
  ::google::protobuf::internal::ArenaStringPtr team_name_;
  ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* weekend_tourney_;
  ::google::protobuf::uint64 party_id_;
  int party_state_;
  bool open_;
  bool low_priority_;
  ::google::protobuf::uint64 ugc_team_ui_logo_;
  ::google::protobuf::uint32 team_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTALobbyRichPresence : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTALobbyRichPresence) */ {
 public:
  CMsgDOTALobbyRichPresence();
  virtual ~CMsgDOTALobbyRichPresence();

  CMsgDOTALobbyRichPresence(const CMsgDOTALobbyRichPresence& from);

  inline CMsgDOTALobbyRichPresence& operator=(const CMsgDOTALobbyRichPresence& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTALobbyRichPresence& default_instance();

  static inline const CMsgDOTALobbyRichPresence* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTALobbyRichPresence*>(
               &_CMsgDOTALobbyRichPresence_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    209;

  void Swap(CMsgDOTALobbyRichPresence* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTALobbyRichPresence* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTALobbyRichPresence* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTALobbyRichPresence& from);
  void MergeFrom(const CMsgDOTALobbyRichPresence& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTALobbyRichPresence* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 8;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 8;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional fixed64 lobby_id = 1;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional .proto.dota.CSODOTALobby.State lobby_state = 2 [default = UI];
  bool has_lobby_state() const;
  void clear_lobby_state();
  static const int kLobbyStateFieldNumber = 2;
  ::proto::dota::CSODOTALobby_State lobby_state() const;
  void set_lobby_state(::proto::dota::CSODOTALobby_State value);

  // optional bool password = 3;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  bool password() const;
  void set_password(bool value);

  // optional .proto.dota.DOTA_GameMode game_mode = 4 [default = DOTA_GAMEMODE_NONE];
  bool has_game_mode() const;
  void clear_game_mode();
  static const int kGameModeFieldNumber = 4;
  ::proto::dota::DOTA_GameMode game_mode() const;
  void set_game_mode(::proto::dota::DOTA_GameMode value);

  // optional uint32 member_count = 5;
  bool has_member_count() const;
  void clear_member_count();
  static const int kMemberCountFieldNumber = 5;
  ::google::protobuf::uint32 member_count() const;
  void set_member_count(::google::protobuf::uint32 value);

  // optional fixed64 custom_game_id = 7;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 7;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint32 max_member_count = 6;
  bool has_max_member_count() const;
  void clear_max_member_count();
  static const int kMaxMemberCountFieldNumber = 6;
  ::google::protobuf::uint32 max_member_count() const;
  void set_max_member_count(::google::protobuf::uint32 value);

  // optional uint32 lobby_type = 9;
  bool has_lobby_type() const;
  void clear_lobby_type();
  static const int kLobbyTypeFieldNumber = 9;
  ::google::protobuf::uint32 lobby_type() const;
  void set_lobby_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTALobbyRichPresence)
 private:
  void set_has_lobby_id();
  void clear_has_lobby_id();
  void set_has_lobby_state();
  void clear_has_lobby_state();
  void set_has_password();
  void clear_has_password();
  void set_has_game_mode();
  void clear_has_game_mode();
  void set_has_member_count();
  void clear_has_member_count();
  void set_has_max_member_count();
  void clear_has_max_member_count();
  void set_has_custom_game_id();
  void clear_has_custom_game_id();
  void set_has_name();
  void clear_has_name();
  void set_has_lobby_type();
  void clear_has_lobby_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 lobby_id_;
  int lobby_state_;
  bool password_;
  int game_mode_;
  ::google::protobuf::uint32 member_count_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint32 max_member_count_;
  ::google::protobuf::uint32 lobby_type_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTACustomGameListenServerStartedLoading : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACustomGameListenServerStartedLoading) */ {
 public:
  CMsgDOTACustomGameListenServerStartedLoading();
  virtual ~CMsgDOTACustomGameListenServerStartedLoading();

  CMsgDOTACustomGameListenServerStartedLoading(const CMsgDOTACustomGameListenServerStartedLoading& from);

  inline CMsgDOTACustomGameListenServerStartedLoading& operator=(const CMsgDOTACustomGameListenServerStartedLoading& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACustomGameListenServerStartedLoading& default_instance();

  static inline const CMsgDOTACustomGameListenServerStartedLoading* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACustomGameListenServerStartedLoading*>(
               &_CMsgDOTACustomGameListenServerStartedLoading_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    210;

  void Swap(CMsgDOTACustomGameListenServerStartedLoading* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTACustomGameListenServerStartedLoading* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTACustomGameListenServerStartedLoading* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTACustomGameListenServerStartedLoading& from);
  void MergeFrom(const CMsgDOTACustomGameListenServerStartedLoading& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTACustomGameListenServerStartedLoading* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 lobby_members = 3;
  int lobby_members_size() const;
  void clear_lobby_members();
  static const int kLobbyMembersFieldNumber = 3;
  ::google::protobuf::uint32 lobby_members(int index) const;
  void set_lobby_members(int index, ::google::protobuf::uint32 value);
  void add_lobby_members(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      lobby_members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_lobby_members();

  // optional fixed64 lobby_id = 1;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint64 custom_game_id = 2;
  bool has_custom_game_id() const;
  void clear_custom_game_id();
  static const int kCustomGameIdFieldNumber = 2;
  ::google::protobuf::uint64 custom_game_id() const;
  void set_custom_game_id(::google::protobuf::uint64 value);

  // optional uint32 start_time = 4;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 4;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACustomGameListenServerStartedLoading)
 private:
  void set_has_lobby_id();
  void clear_has_lobby_id();
  void set_has_custom_game_id();
  void clear_has_custom_game_id();
  void set_has_start_time();
  void clear_has_start_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > lobby_members_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint64 custom_game_id_;
  ::google::protobuf::uint32 start_time_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTACustomGameClientFinishedLoading : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACustomGameClientFinishedLoading) */ {
 public:
  CMsgDOTACustomGameClientFinishedLoading();
  virtual ~CMsgDOTACustomGameClientFinishedLoading();

  CMsgDOTACustomGameClientFinishedLoading(const CMsgDOTACustomGameClientFinishedLoading& from);

  inline CMsgDOTACustomGameClientFinishedLoading& operator=(const CMsgDOTACustomGameClientFinishedLoading& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACustomGameClientFinishedLoading& default_instance();

  static inline const CMsgDOTACustomGameClientFinishedLoading* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACustomGameClientFinishedLoading*>(
               &_CMsgDOTACustomGameClientFinishedLoading_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    211;

  void Swap(CMsgDOTACustomGameClientFinishedLoading* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTACustomGameClientFinishedLoading* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTACustomGameClientFinishedLoading* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTACustomGameClientFinishedLoading& from);
  void MergeFrom(const CMsgDOTACustomGameClientFinishedLoading& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTACustomGameClientFinishedLoading* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string result_string = 4;
  bool has_result_string() const;
  void clear_result_string();
  static const int kResultStringFieldNumber = 4;
  const ::std::string& result_string() const;
  void set_result_string(const ::std::string& value);
  #if LANG_CXX11
  void set_result_string(::std::string&& value);
  #endif
  void set_result_string(const char* value);
  void set_result_string(const char* value, size_t size);
  ::std::string* mutable_result_string();
  ::std::string* release_result_string();
  void set_allocated_result_string(::std::string* result_string);

  // optional string comment = 6;
  bool has_comment() const;
  void clear_comment();
  static const int kCommentFieldNumber = 6;
  const ::std::string& comment() const;
  void set_comment(const ::std::string& value);
  #if LANG_CXX11
  void set_comment(::std::string&& value);
  #endif
  void set_comment(const char* value);
  void set_comment(const char* value, size_t size);
  ::std::string* mutable_comment();
  ::std::string* release_comment();
  void set_allocated_comment(::std::string* comment);

  // optional fixed64 lobby_id = 1;
  bool has_lobby_id() const;
  void clear_lobby_id();
  static const int kLobbyIdFieldNumber = 1;
  ::google::protobuf::uint64 lobby_id() const;
  void set_lobby_id(::google::protobuf::uint64 value);

  // optional uint32 loading_duration = 2;
  bool has_loading_duration() const;
  void clear_loading_duration();
  static const int kLoadingDurationFieldNumber = 2;
  ::google::protobuf::uint32 loading_duration() const;
  void set_loading_duration(::google::protobuf::uint32 value);

  // optional sint32 result_code = 3;
  bool has_result_code() const;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 3;
  ::google::protobuf::int32 result_code() const;
  void set_result_code(::google::protobuf::int32 value);

  // optional uint32 signon_states = 5;
  bool has_signon_states() const;
  void clear_signon_states();
  static const int kSignonStatesFieldNumber = 5;
  ::google::protobuf::uint32 signon_states() const;
  void set_signon_states(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACustomGameClientFinishedLoading)
 private:
  void set_has_lobby_id();
  void clear_has_lobby_id();
  void set_has_loading_duration();
  void clear_has_loading_duration();
  void set_has_result_code();
  void clear_has_result_code();
  void set_has_result_string();
  void clear_has_result_string();
  void set_has_signon_states();
  void clear_has_signon_states();
  void set_has_comment();
  void clear_has_comment();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr result_string_;
  ::google::protobuf::internal::ArenaStringPtr comment_;
  ::google::protobuf::uint64 lobby_id_;
  ::google::protobuf::uint32 loading_duration_;
  ::google::protobuf::int32 result_code_;
  ::google::protobuf::uint32 signon_states_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeagueSeries : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetLeagueSeries) */ {
 public:
  CMsgClientToGCGetLeagueSeries();
  virtual ~CMsgClientToGCGetLeagueSeries();

  CMsgClientToGCGetLeagueSeries(const CMsgClientToGCGetLeagueSeries& from);

  inline CMsgClientToGCGetLeagueSeries& operator=(const CMsgClientToGCGetLeagueSeries& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetLeagueSeries& default_instance();

  static inline const CMsgClientToGCGetLeagueSeries* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetLeagueSeries*>(
               &_CMsgClientToGCGetLeagueSeries_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    212;

  void Swap(CMsgClientToGCGetLeagueSeries* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetLeagueSeries* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetLeagueSeries* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetLeagueSeries& from);
  void MergeFrom(const CMsgClientToGCGetLeagueSeries& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetLeagueSeries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetLeagueSeries)
 private:
  void set_has_league_id();
  void clear_has_league_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeagueSeriesResponse_Series_Team : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team) */ {
 public:
  CMsgClientToGCGetLeagueSeriesResponse_Series_Team();
  virtual ~CMsgClientToGCGetLeagueSeriesResponse_Series_Team();

  CMsgClientToGCGetLeagueSeriesResponse_Series_Team(const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& from);

  inline CMsgClientToGCGetLeagueSeriesResponse_Series_Team& operator=(const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& default_instance();

  static inline const CMsgClientToGCGetLeagueSeriesResponse_Series_Team* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetLeagueSeriesResponse_Series_Team*>(
               &_CMsgClientToGCGetLeagueSeriesResponse_Series_Team_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    213;

  void Swap(CMsgClientToGCGetLeagueSeriesResponse_Series_Team* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetLeagueSeriesResponse_Series_Team* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetLeagueSeriesResponse_Series_Team* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& from);
  void MergeFrom(const CMsgClientToGCGetLeagueSeriesResponse_Series_Team& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetLeagueSeriesResponse_Series_Team* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string team_name = 2;
  bool has_team_name() const;
  void clear_team_name();
  static const int kTeamNameFieldNumber = 2;
  const ::std::string& team_name() const;
  void set_team_name(const ::std::string& value);
  #if LANG_CXX11
  void set_team_name(::std::string&& value);
  #endif
  void set_team_name(const char* value);
  void set_team_name(const char* value, size_t size);
  ::std::string* mutable_team_name();
  ::std::string* release_team_name();
  void set_allocated_team_name(::std::string* team_name);

  // optional string team_tag = 3;
  bool has_team_tag() const;
  void clear_team_tag();
  static const int kTeamTagFieldNumber = 3;
  const ::std::string& team_tag() const;
  void set_team_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_team_tag(::std::string&& value);
  #endif
  void set_team_tag(const char* value);
  void set_team_tag(const char* value, size_t size);
  ::std::string* mutable_team_tag();
  ::std::string* release_team_tag();
  void set_allocated_team_tag(::std::string* team_tag);

  // optional uint32 team_id = 1;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // optional uint32 team_score = 4;
  bool has_team_score() const;
  void clear_team_score();
  static const int kTeamScoreFieldNumber = 4;
  ::google::protobuf::uint32 team_score() const;
  void set_team_score(::google::protobuf::uint32 value);

  // optional uint32 team_wins = 5;
  bool has_team_wins() const;
  void clear_team_wins();
  static const int kTeamWinsFieldNumber = 5;
  ::google::protobuf::uint32 team_wins() const;
  void set_team_wins(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team)
 private:
  void set_has_team_id();
  void clear_has_team_id();
  void set_has_team_name();
  void clear_has_team_name();
  void set_has_team_tag();
  void clear_has_team_tag();
  void set_has_team_score();
  void clear_has_team_score();
  void set_has_team_wins();
  void clear_has_team_wins();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr team_name_;
  ::google::protobuf::internal::ArenaStringPtr team_tag_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 team_score_;
  ::google::protobuf::uint32 team_wins_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeagueSeriesResponse_Series : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series) */ {
 public:
  CMsgClientToGCGetLeagueSeriesResponse_Series();
  virtual ~CMsgClientToGCGetLeagueSeriesResponse_Series();

  CMsgClientToGCGetLeagueSeriesResponse_Series(const CMsgClientToGCGetLeagueSeriesResponse_Series& from);

  inline CMsgClientToGCGetLeagueSeriesResponse_Series& operator=(const CMsgClientToGCGetLeagueSeriesResponse_Series& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetLeagueSeriesResponse_Series& default_instance();

  static inline const CMsgClientToGCGetLeagueSeriesResponse_Series* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetLeagueSeriesResponse_Series*>(
               &_CMsgClientToGCGetLeagueSeriesResponse_Series_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    214;

  void Swap(CMsgClientToGCGetLeagueSeriesResponse_Series* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetLeagueSeriesResponse_Series* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetLeagueSeriesResponse_Series* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetLeagueSeriesResponse_Series& from);
  void MergeFrom(const CMsgClientToGCGetLeagueSeriesResponse_Series& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetLeagueSeriesResponse_Series* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetLeagueSeriesResponse_Series_Team Team;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team teams = 3;
  int teams_size() const;
  void clear_teams();
  static const int kTeamsFieldNumber = 3;
  const ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series_Team& teams(int index) const;
  ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series_Team* mutable_teams(int index);
  ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series_Team* add_teams();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series_Team >*
      mutable_teams();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series_Team >&
      teams() const;

  // optional string series_name = 4;
  bool has_series_name() const;
  void clear_series_name();
  static const int kSeriesNameFieldNumber = 4;
  const ::std::string& series_name() const;
  void set_series_name(const ::std::string& value);
  #if LANG_CXX11
  void set_series_name(::std::string&& value);
  #endif
  void set_series_name(const char* value);
  void set_series_name(const char* value, size_t size);
  ::std::string* mutable_series_name();
  ::std::string* release_series_name();
  void set_allocated_series_name(::std::string* series_name);

  // optional string phase_name = 5;
  bool has_phase_name() const;
  void clear_phase_name();
  static const int kPhaseNameFieldNumber = 5;
  const ::std::string& phase_name() const;
  void set_phase_name(const ::std::string& value);
  #if LANG_CXX11
  void set_phase_name(::std::string&& value);
  #endif
  void set_phase_name(const char* value);
  void set_phase_name(const char* value, size_t size);
  ::std::string* mutable_phase_name();
  ::std::string* release_phase_name();
  void set_allocated_phase_name(::std::string* phase_name);

  // optional uint32 series_id = 1;
  bool has_series_id() const;
  void clear_series_id();
  static const int kSeriesIdFieldNumber = 1;
  ::google::protobuf::uint32 series_id() const;
  void set_series_id(::google::protobuf::uint32 value);

  // optional uint32 num_games = 2;
  bool has_num_games() const;
  void clear_num_games();
  static const int kNumGamesFieldNumber = 2;
  ::google::protobuf::uint32 num_games() const;
  void set_num_games(::google::protobuf::uint32 value);

  // optional uint32 start_time = 6;
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  ::google::protobuf::uint32 start_time() const;
  void set_start_time(::google::protobuf::uint32 value);

  // optional uint32 after_series_id = 7;
  bool has_after_series_id() const;
  void clear_after_series_id();
  static const int kAfterSeriesIdFieldNumber = 7;
  ::google::protobuf::uint32 after_series_id() const;
  void set_after_series_id(::google::protobuf::uint32 value);

  // optional uint32 num_completed_games = 8;
  bool has_num_completed_games() const;
  void clear_num_completed_games();
  static const int kNumCompletedGamesFieldNumber = 8;
  ::google::protobuf::uint32 num_completed_games() const;
  void set_num_completed_games(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series)
 private:
  void set_has_series_id();
  void clear_has_series_id();
  void set_has_num_games();
  void clear_has_num_games();
  void set_has_series_name();
  void clear_has_series_name();
  void set_has_phase_name();
  void clear_has_phase_name();
  void set_has_start_time();
  void clear_has_start_time();
  void set_has_after_series_id();
  void clear_has_after_series_id();
  void set_has_num_completed_games();
  void clear_has_num_completed_games();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series_Team > teams_;
  ::google::protobuf::internal::ArenaStringPtr series_name_;
  ::google::protobuf::internal::ArenaStringPtr phase_name_;
  ::google::protobuf::uint32 series_id_;
  ::google::protobuf::uint32 num_games_;
  ::google::protobuf::uint32 start_time_;
  ::google::protobuf::uint32 after_series_id_;
  ::google::protobuf::uint32 num_completed_games_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetLeagueSeriesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetLeagueSeriesResponse) */ {
 public:
  CMsgClientToGCGetLeagueSeriesResponse();
  virtual ~CMsgClientToGCGetLeagueSeriesResponse();

  CMsgClientToGCGetLeagueSeriesResponse(const CMsgClientToGCGetLeagueSeriesResponse& from);

  inline CMsgClientToGCGetLeagueSeriesResponse& operator=(const CMsgClientToGCGetLeagueSeriesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetLeagueSeriesResponse& default_instance();

  static inline const CMsgClientToGCGetLeagueSeriesResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetLeagueSeriesResponse*>(
               &_CMsgClientToGCGetLeagueSeriesResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    215;

  void Swap(CMsgClientToGCGetLeagueSeriesResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetLeagueSeriesResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetLeagueSeriesResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetLeagueSeriesResponse& from);
  void MergeFrom(const CMsgClientToGCGetLeagueSeriesResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetLeagueSeriesResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetLeagueSeriesResponse_Series Series;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series series = 1;
  int series_size() const;
  void clear_series();
  static const int kSeriesFieldNumber = 1;
  const ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series& series(int index) const;
  ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series* mutable_series(int index);
  ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series* add_series();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series >*
      mutable_series();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series >&
      series() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetLeagueSeriesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series > series_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCApplyGemCombiner : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCApplyGemCombiner) */ {
 public:
  CMsgClientToGCApplyGemCombiner();
  virtual ~CMsgClientToGCApplyGemCombiner();

  CMsgClientToGCApplyGemCombiner(const CMsgClientToGCApplyGemCombiner& from);

  inline CMsgClientToGCApplyGemCombiner& operator=(const CMsgClientToGCApplyGemCombiner& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCApplyGemCombiner& default_instance();

  static inline const CMsgClientToGCApplyGemCombiner* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCApplyGemCombiner*>(
               &_CMsgClientToGCApplyGemCombiner_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    216;

  void Swap(CMsgClientToGCApplyGemCombiner* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCApplyGemCombiner* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCApplyGemCombiner* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCApplyGemCombiner& from);
  void MergeFrom(const CMsgClientToGCApplyGemCombiner& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCApplyGemCombiner* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id_1 = 1;
  bool has_item_id_1() const;
  void clear_item_id_1();
  static const int kItemId1FieldNumber = 1;
  ::google::protobuf::uint64 item_id_1() const;
  void set_item_id_1(::google::protobuf::uint64 value);

  // optional uint64 item_id_2 = 2;
  bool has_item_id_2() const;
  void clear_item_id_2();
  static const int kItemId2FieldNumber = 2;
  ::google::protobuf::uint64 item_id_2() const;
  void set_item_id_2(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCApplyGemCombiner)
 private:
  void set_has_item_id_1();
  void clear_has_item_id_1();
  void set_has_item_id_2();
  void clear_has_item_id_2();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_1_;
  ::google::protobuf::uint64 item_id_2_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCH264Unsupported : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCH264Unsupported) */ {
 public:
  CMsgClientToGCH264Unsupported();
  virtual ~CMsgClientToGCH264Unsupported();

  CMsgClientToGCH264Unsupported(const CMsgClientToGCH264Unsupported& from);

  inline CMsgClientToGCH264Unsupported& operator=(const CMsgClientToGCH264Unsupported& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCH264Unsupported& default_instance();

  static inline const CMsgClientToGCH264Unsupported* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCH264Unsupported*>(
               &_CMsgClientToGCH264Unsupported_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    217;

  void Swap(CMsgClientToGCH264Unsupported* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCH264Unsupported* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCH264Unsupported* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCH264Unsupported& from);
  void MergeFrom(const CMsgClientToGCH264Unsupported& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCH264Unsupported* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCH264Unsupported)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestH264Support : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestH264Support) */ {
 public:
  CMsgClientToGCRequestH264Support();
  virtual ~CMsgClientToGCRequestH264Support();

  CMsgClientToGCRequestH264Support(const CMsgClientToGCRequestH264Support& from);

  inline CMsgClientToGCRequestH264Support& operator=(const CMsgClientToGCRequestH264Support& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestH264Support& default_instance();

  static inline const CMsgClientToGCRequestH264Support* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestH264Support*>(
               &_CMsgClientToGCRequestH264Support_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    218;

  void Swap(CMsgClientToGCRequestH264Support* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestH264Support* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestH264Support* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestH264Support& from);
  void MergeFrom(const CMsgClientToGCRequestH264Support& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestH264Support* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestH264Support)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetQuestProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetQuestProgress) */ {
 public:
  CMsgClientToGCGetQuestProgress();
  virtual ~CMsgClientToGCGetQuestProgress();

  CMsgClientToGCGetQuestProgress(const CMsgClientToGCGetQuestProgress& from);

  inline CMsgClientToGCGetQuestProgress& operator=(const CMsgClientToGCGetQuestProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetQuestProgress& default_instance();

  static inline const CMsgClientToGCGetQuestProgress* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetQuestProgress*>(
               &_CMsgClientToGCGetQuestProgress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    219;

  void Swap(CMsgClientToGCGetQuestProgress* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetQuestProgress* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetQuestProgress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetQuestProgress& from);
  void MergeFrom(const CMsgClientToGCGetQuestProgress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetQuestProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 quest_ids = 1;
  int quest_ids_size() const;
  void clear_quest_ids();
  static const int kQuestIdsFieldNumber = 1;
  ::google::protobuf::uint32 quest_ids(int index) const;
  void set_quest_ids(int index, ::google::protobuf::uint32 value);
  void add_quest_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      quest_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_quest_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetQuestProgress)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > quest_ids_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetQuestProgressResponse_Challenge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge) */ {
 public:
  CMsgClientToGCGetQuestProgressResponse_Challenge();
  virtual ~CMsgClientToGCGetQuestProgressResponse_Challenge();

  CMsgClientToGCGetQuestProgressResponse_Challenge(const CMsgClientToGCGetQuestProgressResponse_Challenge& from);

  inline CMsgClientToGCGetQuestProgressResponse_Challenge& operator=(const CMsgClientToGCGetQuestProgressResponse_Challenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetQuestProgressResponse_Challenge& default_instance();

  static inline const CMsgClientToGCGetQuestProgressResponse_Challenge* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetQuestProgressResponse_Challenge*>(
               &_CMsgClientToGCGetQuestProgressResponse_Challenge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    220;

  void Swap(CMsgClientToGCGetQuestProgressResponse_Challenge* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetQuestProgressResponse_Challenge* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetQuestProgressResponse_Challenge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetQuestProgressResponse_Challenge& from);
  void MergeFrom(const CMsgClientToGCGetQuestProgressResponse_Challenge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetQuestProgressResponse_Challenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 challenge_id = 1;
  bool has_challenge_id() const;
  void clear_challenge_id();
  static const int kChallengeIdFieldNumber = 1;
  ::google::protobuf::uint32 challenge_id() const;
  void set_challenge_id(::google::protobuf::uint32 value);

  // optional uint32 time_completed = 2;
  bool has_time_completed() const;
  void clear_time_completed();
  static const int kTimeCompletedFieldNumber = 2;
  ::google::protobuf::uint32 time_completed() const;
  void set_time_completed(::google::protobuf::uint32 value);

  // optional uint32 attempts = 3;
  bool has_attempts() const;
  void clear_attempts();
  static const int kAttemptsFieldNumber = 3;
  ::google::protobuf::uint32 attempts() const;
  void set_attempts(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 challenge_type = 5;
  bool has_challenge_type() const;
  void clear_challenge_type();
  static const int kChallengeTypeFieldNumber = 5;
  ::google::protobuf::uint32 challenge_type() const;
  void set_challenge_type(::google::protobuf::uint32 value);

  // optional uint32 quest_rank = 6;
  bool has_quest_rank() const;
  void clear_quest_rank();
  static const int kQuestRankFieldNumber = 6;
  ::google::protobuf::uint32 quest_rank() const;
  void set_quest_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge)
 private:
  void set_has_challenge_id();
  void clear_has_challenge_id();
  void set_has_time_completed();
  void clear_has_time_completed();
  void set_has_attempts();
  void clear_has_attempts();
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_challenge_type();
  void clear_has_challenge_type();
  void set_has_quest_rank();
  void clear_has_quest_rank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 challenge_id_;
  ::google::protobuf::uint32 time_completed_;
  ::google::protobuf::uint32 attempts_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 challenge_type_;
  ::google::protobuf::uint32 quest_rank_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetQuestProgressResponse_Quest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest) */ {
 public:
  CMsgClientToGCGetQuestProgressResponse_Quest();
  virtual ~CMsgClientToGCGetQuestProgressResponse_Quest();

  CMsgClientToGCGetQuestProgressResponse_Quest(const CMsgClientToGCGetQuestProgressResponse_Quest& from);

  inline CMsgClientToGCGetQuestProgressResponse_Quest& operator=(const CMsgClientToGCGetQuestProgressResponse_Quest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetQuestProgressResponse_Quest& default_instance();

  static inline const CMsgClientToGCGetQuestProgressResponse_Quest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetQuestProgressResponse_Quest*>(
               &_CMsgClientToGCGetQuestProgressResponse_Quest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    221;

  void Swap(CMsgClientToGCGetQuestProgressResponse_Quest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetQuestProgressResponse_Quest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetQuestProgressResponse_Quest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetQuestProgressResponse_Quest& from);
  void MergeFrom(const CMsgClientToGCGetQuestProgressResponse_Quest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetQuestProgressResponse_Quest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge completed_challenges = 2;
  int completed_challenges_size() const;
  void clear_completed_challenges();
  static const int kCompletedChallengesFieldNumber = 2;
  const ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge& completed_challenges(int index) const;
  ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge* mutable_completed_challenges(int index);
  ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge* add_completed_challenges();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge >*
      mutable_completed_challenges();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge >&
      completed_challenges() const;

  // optional uint32 quest_id = 1;
  bool has_quest_id() const;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest)
 private:
  void set_has_quest_id();
  void clear_has_quest_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge > completed_challenges_;
  ::google::protobuf::uint32 quest_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetQuestProgressResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetQuestProgressResponse) */ {
 public:
  CMsgClientToGCGetQuestProgressResponse();
  virtual ~CMsgClientToGCGetQuestProgressResponse();

  CMsgClientToGCGetQuestProgressResponse(const CMsgClientToGCGetQuestProgressResponse& from);

  inline CMsgClientToGCGetQuestProgressResponse& operator=(const CMsgClientToGCGetQuestProgressResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetQuestProgressResponse& default_instance();

  static inline const CMsgClientToGCGetQuestProgressResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetQuestProgressResponse*>(
               &_CMsgClientToGCGetQuestProgressResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    222;

  void Swap(CMsgClientToGCGetQuestProgressResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetQuestProgressResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetQuestProgressResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetQuestProgressResponse& from);
  void MergeFrom(const CMsgClientToGCGetQuestProgressResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetQuestProgressResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGetQuestProgressResponse_Challenge Challenge;
  typedef CMsgClientToGCGetQuestProgressResponse_Quest Quest;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest quests = 2;
  int quests_size() const;
  void clear_quests();
  static const int kQuestsFieldNumber = 2;
  const ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest& quests(int index) const;
  ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest* mutable_quests(int index);
  ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest* add_quests();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest >*
      mutable_quests();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest >&
      quests() const;

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetQuestProgressResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest > quests_;
  bool success_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientMatchSignedOut : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientMatchSignedOut) */ {
 public:
  CMsgGCToClientMatchSignedOut();
  virtual ~CMsgGCToClientMatchSignedOut();

  CMsgGCToClientMatchSignedOut(const CMsgGCToClientMatchSignedOut& from);

  inline CMsgGCToClientMatchSignedOut& operator=(const CMsgGCToClientMatchSignedOut& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientMatchSignedOut& default_instance();

  static inline const CMsgGCToClientMatchSignedOut* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientMatchSignedOut*>(
               &_CMsgGCToClientMatchSignedOut_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    223;

  void Swap(CMsgGCToClientMatchSignedOut* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientMatchSignedOut* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientMatchSignedOut* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientMatchSignedOut& from);
  void MergeFrom(const CMsgGCToClientMatchSignedOut& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientMatchSignedOut* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientMatchSignedOut)
 private:
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStatsHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroStatsHistory) */ {
 public:
  CMsgGCGetHeroStatsHistory();
  virtual ~CMsgGCGetHeroStatsHistory();

  CMsgGCGetHeroStatsHistory(const CMsgGCGetHeroStatsHistory& from);

  inline CMsgGCGetHeroStatsHistory& operator=(const CMsgGCGetHeroStatsHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStatsHistory& default_instance();

  static inline const CMsgGCGetHeroStatsHistory* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroStatsHistory*>(
               &_CMsgGCGetHeroStatsHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    224;

  void Swap(CMsgGCGetHeroStatsHistory* other);

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroStatsHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCGetHeroStatsHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCGetHeroStatsHistory& from);
  void MergeFrom(const CMsgGCGetHeroStatsHistory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCGetHeroStatsHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroStatsHistory)
 private:
  void set_has_hero_id();
  void clear_has_hero_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 hero_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCGetHeroStatsHistoryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCGetHeroStatsHistoryResponse) */ {
 public:
  CMsgGCGetHeroStatsHistoryResponse();
  virtual ~CMsgGCGetHeroStatsHistoryResponse();

  CMsgGCGetHeroStatsHistoryResponse(const CMsgGCGetHeroStatsHistoryResponse& from);

  inline CMsgGCGetHeroStatsHistoryResponse& operator=(const CMsgGCGetHeroStatsHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCGetHeroStatsHistoryResponse& default_instance();

  static inline const CMsgGCGetHeroStatsHistoryResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCGetHeroStatsHistoryResponse*>(
               &_CMsgGCGetHeroStatsHistoryResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    225;

  void Swap(CMsgGCGetHeroStatsHistoryResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCGetHeroStatsHistoryResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCGetHeroStatsHistoryResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCGetHeroStatsHistoryResponse& from);
  void MergeFrom(const CMsgGCGetHeroStatsHistoryResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCGetHeroStatsHistoryResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTASDOHeroStatsHistory records = 2;
  int records_size() const;
  void clear_records();
  static const int kRecordsFieldNumber = 2;
  const ::proto::dota::CMsgDOTASDOHeroStatsHistory& records(int index) const;
  ::proto::dota::CMsgDOTASDOHeroStatsHistory* mutable_records(int index);
  ::proto::dota::CMsgDOTASDOHeroStatsHistory* add_records();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTASDOHeroStatsHistory >*
      mutable_records();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTASDOHeroStatsHistory >&
      records() const;

  // optional uint32 hero_id = 1;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 1;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCGetHeroStatsHistoryResponse)
 private:
  void set_has_hero_id();
  void clear_has_hero_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTASDOHeroStatsHistory > records_;
  ::google::protobuf::uint32 hero_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPlayerConductScorecardRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPlayerConductScorecardRequest) */ {
 public:
  CMsgPlayerConductScorecardRequest();
  virtual ~CMsgPlayerConductScorecardRequest();

  CMsgPlayerConductScorecardRequest(const CMsgPlayerConductScorecardRequest& from);

  inline CMsgPlayerConductScorecardRequest& operator=(const CMsgPlayerConductScorecardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerConductScorecardRequest& default_instance();

  static inline const CMsgPlayerConductScorecardRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgPlayerConductScorecardRequest*>(
               &_CMsgPlayerConductScorecardRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    226;

  void Swap(CMsgPlayerConductScorecardRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgPlayerConductScorecardRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPlayerConductScorecardRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPlayerConductScorecardRequest& from);
  void MergeFrom(const CMsgPlayerConductScorecardRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPlayerConductScorecardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPlayerConductScorecardRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPlayerConductScorecard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPlayerConductScorecard) */ {
 public:
  CMsgPlayerConductScorecard();
  virtual ~CMsgPlayerConductScorecard();

  CMsgPlayerConductScorecard(const CMsgPlayerConductScorecard& from);

  inline CMsgPlayerConductScorecard& operator=(const CMsgPlayerConductScorecard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPlayerConductScorecard& default_instance();

  static inline const CMsgPlayerConductScorecard* internal_default_instance() {
    return reinterpret_cast<const CMsgPlayerConductScorecard*>(
               &_CMsgPlayerConductScorecard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    227;

  void Swap(CMsgPlayerConductScorecard* other);

  // implements Message ----------------------------------------------

  inline CMsgPlayerConductScorecard* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPlayerConductScorecard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPlayerConductScorecard& from);
  void MergeFrom(const CMsgPlayerConductScorecard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPlayerConductScorecard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 seq_num = 3;
  bool has_seq_num() const;
  void clear_seq_num();
  static const int kSeqNumFieldNumber = 3;
  ::google::protobuf::uint32 seq_num() const;
  void set_seq_num(::google::protobuf::uint32 value);

  // optional uint32 reasons = 4;
  bool has_reasons() const;
  void clear_reasons();
  static const int kReasonsFieldNumber = 4;
  ::google::protobuf::uint32 reasons() const;
  void set_reasons(::google::protobuf::uint32 value);

  // optional uint32 matches_in_report = 5;
  bool has_matches_in_report() const;
  void clear_matches_in_report();
  static const int kMatchesInReportFieldNumber = 5;
  ::google::protobuf::uint32 matches_in_report() const;
  void set_matches_in_report(::google::protobuf::uint32 value);

  // optional uint32 matches_clean = 6;
  bool has_matches_clean() const;
  void clear_matches_clean();
  static const int kMatchesCleanFieldNumber = 6;
  ::google::protobuf::uint32 matches_clean() const;
  void set_matches_clean(::google::protobuf::uint32 value);

  // optional uint32 matches_reported = 7;
  bool has_matches_reported() const;
  void clear_matches_reported();
  static const int kMatchesReportedFieldNumber = 7;
  ::google::protobuf::uint32 matches_reported() const;
  void set_matches_reported(::google::protobuf::uint32 value);

  // optional uint32 matches_abandoned = 8;
  bool has_matches_abandoned() const;
  void clear_matches_abandoned();
  static const int kMatchesAbandonedFieldNumber = 8;
  ::google::protobuf::uint32 matches_abandoned() const;
  void set_matches_abandoned(::google::protobuf::uint32 value);

  // optional uint32 reports_count = 9;
  bool has_reports_count() const;
  void clear_reports_count();
  static const int kReportsCountFieldNumber = 9;
  ::google::protobuf::uint32 reports_count() const;
  void set_reports_count(::google::protobuf::uint32 value);

  // optional uint32 reports_parties = 10;
  bool has_reports_parties() const;
  void clear_reports_parties();
  static const int kReportsPartiesFieldNumber = 10;
  ::google::protobuf::uint32 reports_parties() const;
  void set_reports_parties(::google::protobuf::uint32 value);

  // optional uint32 commend_count = 11;
  bool has_commend_count() const;
  void clear_commend_count();
  static const int kCommendCountFieldNumber = 11;
  ::google::protobuf::uint32 commend_count() const;
  void set_commend_count(::google::protobuf::uint32 value);

  // optional uint32 end_score = 13;
  bool has_end_score() const;
  void clear_end_score();
  static const int kEndScoreFieldNumber = 13;
  ::google::protobuf::uint32 end_score() const;
  void set_end_score(::google::protobuf::uint32 value);

  // optional uint32 date = 14;
  bool has_date() const;
  void clear_date();
  static const int kDateFieldNumber = 14;
  ::google::protobuf::uint32 date() const;
  void set_date(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPlayerConductScorecard)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_seq_num();
  void clear_has_seq_num();
  void set_has_reasons();
  void clear_has_reasons();
  void set_has_matches_in_report();
  void clear_has_matches_in_report();
  void set_has_matches_clean();
  void clear_has_matches_clean();
  void set_has_matches_reported();
  void clear_has_matches_reported();
  void set_has_matches_abandoned();
  void clear_has_matches_abandoned();
  void set_has_reports_count();
  void clear_has_reports_count();
  void set_has_reports_parties();
  void clear_has_reports_parties();
  void set_has_commend_count();
  void clear_has_commend_count();
  void set_has_end_score();
  void clear_has_end_score();
  void set_has_date();
  void clear_has_date();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 seq_num_;
  ::google::protobuf::uint32 reasons_;
  ::google::protobuf::uint32 matches_in_report_;
  ::google::protobuf::uint32 matches_clean_;
  ::google::protobuf::uint32 matches_reported_;
  ::google::protobuf::uint32 matches_abandoned_;
  ::google::protobuf::uint32 reports_count_;
  ::google::protobuf::uint32 reports_parties_;
  ::google::protobuf::uint32 commend_count_;
  ::google::protobuf::uint32 end_score_;
  ::google::protobuf::uint32 date_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCWageringRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCWageringRequest) */ {
 public:
  CMsgClientToGCWageringRequest();
  virtual ~CMsgClientToGCWageringRequest();

  CMsgClientToGCWageringRequest(const CMsgClientToGCWageringRequest& from);

  inline CMsgClientToGCWageringRequest& operator=(const CMsgClientToGCWageringRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCWageringRequest& default_instance();

  static inline const CMsgClientToGCWageringRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCWageringRequest*>(
               &_CMsgClientToGCWageringRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    228;

  void Swap(CMsgClientToGCWageringRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCWageringRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCWageringRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCWageringRequest& from);
  void MergeFrom(const CMsgClientToGCWageringRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCWageringRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCWageringRequest)
 private:
  void set_has_event_id();
  void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientWageringResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientWageringResponse) */ {
 public:
  CMsgGCToClientWageringResponse();
  virtual ~CMsgGCToClientWageringResponse();

  CMsgGCToClientWageringResponse(const CMsgGCToClientWageringResponse& from);

  inline CMsgGCToClientWageringResponse& operator=(const CMsgGCToClientWageringResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientWageringResponse& default_instance();

  static inline const CMsgGCToClientWageringResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientWageringResponse*>(
               &_CMsgGCToClientWageringResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    229;

  void Swap(CMsgGCToClientWageringResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientWageringResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientWageringResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientWageringResponse& from);
  void MergeFrom(const CMsgGCToClientWageringResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientWageringResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 coins_remaining = 1;
  bool has_coins_remaining() const;
  void clear_coins_remaining();
  static const int kCoinsRemainingFieldNumber = 1;
  ::google::protobuf::uint32 coins_remaining() const;
  void set_coins_remaining(::google::protobuf::uint32 value);

  // optional uint32 total_points_won = 2;
  bool has_total_points_won() const;
  void clear_total_points_won();
  static const int kTotalPointsWonFieldNumber = 2;
  ::google::protobuf::uint32 total_points_won() const;
  void set_total_points_won(::google::protobuf::uint32 value);

  // optional uint32 total_points_wagered = 3;
  bool has_total_points_wagered() const;
  void clear_total_points_wagered();
  static const int kTotalPointsWageredFieldNumber = 3;
  ::google::protobuf::uint32 total_points_wagered() const;
  void set_total_points_wagered(::google::protobuf::uint32 value);

  // optional uint32 total_points_tipped = 4;
  bool has_total_points_tipped() const;
  void clear_total_points_tipped();
  static const int kTotalPointsTippedFieldNumber = 4;
  ::google::protobuf::uint32 total_points_tipped() const;
  void set_total_points_tipped(::google::protobuf::uint32 value);

  // optional uint32 success_rate = 5;
  bool has_success_rate() const;
  void clear_success_rate();
  static const int kSuccessRateFieldNumber = 5;
  ::google::protobuf::uint32 success_rate() const;
  void set_success_rate(::google::protobuf::uint32 value);

  // optional uint32 total_games_wagered = 6;
  bool has_total_games_wagered() const;
  void clear_total_games_wagered();
  static const int kTotalGamesWageredFieldNumber = 6;
  ::google::protobuf::uint32 total_games_wagered() const;
  void set_total_games_wagered(::google::protobuf::uint32 value);

  // optional uint32 coins_max = 7;
  bool has_coins_max() const;
  void clear_coins_max();
  static const int kCoinsMaxFieldNumber = 7;
  ::google::protobuf::uint32 coins_max() const;
  void set_coins_max(::google::protobuf::uint32 value);

  // optional uint32 rank_wagers_remaining = 8;
  bool has_rank_wagers_remaining() const;
  void clear_rank_wagers_remaining();
  static const int kRankWagersRemainingFieldNumber = 8;
  ::google::protobuf::uint32 rank_wagers_remaining() const;
  void set_rank_wagers_remaining(::google::protobuf::uint32 value);

  // optional uint32 rank_wagers_max = 9;
  bool has_rank_wagers_max() const;
  void clear_rank_wagers_max();
  static const int kRankWagersMaxFieldNumber = 9;
  ::google::protobuf::uint32 rank_wagers_max() const;
  void set_rank_wagers_max(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientWageringResponse)
 private:
  void set_has_coins_remaining();
  void clear_has_coins_remaining();
  void set_has_total_points_won();
  void clear_has_total_points_won();
  void set_has_total_points_wagered();
  void clear_has_total_points_wagered();
  void set_has_total_points_tipped();
  void clear_has_total_points_tipped();
  void set_has_success_rate();
  void clear_has_success_rate();
  void set_has_total_games_wagered();
  void clear_has_total_games_wagered();
  void set_has_coins_max();
  void clear_has_coins_max();
  void set_has_rank_wagers_remaining();
  void clear_has_rank_wagers_remaining();
  void set_has_rank_wagers_max();
  void clear_has_rank_wagers_max();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 coins_remaining_;
  ::google::protobuf::uint32 total_points_won_;
  ::google::protobuf::uint32 total_points_wagered_;
  ::google::protobuf::uint32 total_points_tipped_;
  ::google::protobuf::uint32 success_rate_;
  ::google::protobuf::uint32 total_games_wagered_;
  ::google::protobuf::uint32 coins_max_;
  ::google::protobuf::uint32 rank_wagers_remaining_;
  ::google::protobuf::uint32 rank_wagers_max_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientWageringUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientWageringUpdate) */ {
 public:
  CMsgGCToClientWageringUpdate();
  virtual ~CMsgGCToClientWageringUpdate();

  CMsgGCToClientWageringUpdate(const CMsgGCToClientWageringUpdate& from);

  inline CMsgGCToClientWageringUpdate& operator=(const CMsgGCToClientWageringUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientWageringUpdate& default_instance();

  static inline const CMsgGCToClientWageringUpdate* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientWageringUpdate*>(
               &_CMsgGCToClientWageringUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    230;

  void Swap(CMsgGCToClientWageringUpdate* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientWageringUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientWageringUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientWageringUpdate& from);
  void MergeFrom(const CMsgGCToClientWageringUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientWageringUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgGCToClientWageringResponse wagering_info = 2;
  bool has_wagering_info() const;
  void clear_wagering_info();
  static const int kWageringInfoFieldNumber = 2;
  const ::proto::dota::CMsgGCToClientWageringResponse& wagering_info() const;
  ::proto::dota::CMsgGCToClientWageringResponse* mutable_wagering_info();
  ::proto::dota::CMsgGCToClientWageringResponse* release_wagering_info();
  void set_allocated_wagering_info(::proto::dota::CMsgGCToClientWageringResponse* wagering_info);

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientWageringUpdate)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_wagering_info();
  void clear_has_wagering_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgGCToClientWageringResponse* wagering_info_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientArcanaVotesUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientArcanaVotesUpdate) */ {
 public:
  CMsgGCToClientArcanaVotesUpdate();
  virtual ~CMsgGCToClientArcanaVotesUpdate();

  CMsgGCToClientArcanaVotesUpdate(const CMsgGCToClientArcanaVotesUpdate& from);

  inline CMsgGCToClientArcanaVotesUpdate& operator=(const CMsgGCToClientArcanaVotesUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientArcanaVotesUpdate& default_instance();

  static inline const CMsgGCToClientArcanaVotesUpdate* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientArcanaVotesUpdate*>(
               &_CMsgGCToClientArcanaVotesUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    231;

  void Swap(CMsgGCToClientArcanaVotesUpdate* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientArcanaVotesUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientArcanaVotesUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientArcanaVotesUpdate& from);
  void MergeFrom(const CMsgGCToClientArcanaVotesUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientArcanaVotesUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse arcana_votes = 2;
  bool has_arcana_votes() const;
  void clear_arcana_votes();
  static const int kArcanaVotesFieldNumber = 2;
  const ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse& arcana_votes() const;
  ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* mutable_arcana_votes();
  ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* release_arcana_votes();
  void set_allocated_arcana_votes(::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* arcana_votes);

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientArcanaVotesUpdate)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_arcana_votes();
  void clear_has_arcana_votes();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* arcana_votes_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGetEventGoals : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGetEventGoals) */ {
 public:
  CMsgClientToGCGetEventGoals();
  virtual ~CMsgClientToGCGetEventGoals();

  CMsgClientToGCGetEventGoals(const CMsgClientToGCGetEventGoals& from);

  inline CMsgClientToGCGetEventGoals& operator=(const CMsgClientToGCGetEventGoals& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGetEventGoals& default_instance();

  static inline const CMsgClientToGCGetEventGoals* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGetEventGoals*>(
               &_CMsgClientToGCGetEventGoals_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    232;

  void Swap(CMsgClientToGCGetEventGoals* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGetEventGoals* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGetEventGoals* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGetEventGoals& from);
  void MergeFrom(const CMsgClientToGCGetEventGoals& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGetEventGoals* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.EEvent event_ids = 1;
  int event_ids_size() const;
  void clear_event_ids();
  static const int kEventIdsFieldNumber = 1;
  ::proto::dota::EEvent event_ids(int index) const;
  void set_event_ids(int index, ::proto::dota::EEvent value);
  void add_event_ids(::proto::dota::EEvent value);
  const ::google::protobuf::RepeatedField<int>& event_ids() const;
  ::google::protobuf::RepeatedField<int>* mutable_event_ids();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGetEventGoals)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField<int> event_ids_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgEventGoals_EventGoal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgEventGoals.EventGoal) */ {
 public:
  CMsgEventGoals_EventGoal();
  virtual ~CMsgEventGoals_EventGoal();

  CMsgEventGoals_EventGoal(const CMsgEventGoals_EventGoal& from);

  inline CMsgEventGoals_EventGoal& operator=(const CMsgEventGoals_EventGoal& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgEventGoals_EventGoal& default_instance();

  static inline const CMsgEventGoals_EventGoal* internal_default_instance() {
    return reinterpret_cast<const CMsgEventGoals_EventGoal*>(
               &_CMsgEventGoals_EventGoal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    233;

  void Swap(CMsgEventGoals_EventGoal* other);

  // implements Message ----------------------------------------------

  inline CMsgEventGoals_EventGoal* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgEventGoals_EventGoal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgEventGoals_EventGoal& from);
  void MergeFrom(const CMsgEventGoals_EventGoal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgEventGoals_EventGoal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 goal_id = 2;
  bool has_goal_id() const;
  void clear_goal_id();
  static const int kGoalIdFieldNumber = 2;
  ::google::protobuf::uint32 goal_id() const;
  void set_goal_id(::google::protobuf::uint32 value);

  // optional uint64 value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  ::google::protobuf::uint64 value() const;
  void set_value(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgEventGoals.EventGoal)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_goal_id();
  void clear_has_goal_id();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int event_id_;
  ::google::protobuf::uint32 goal_id_;
  ::google::protobuf::uint64 value_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgEventGoals : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgEventGoals) */ {
 public:
  CMsgEventGoals();
  virtual ~CMsgEventGoals();

  CMsgEventGoals(const CMsgEventGoals& from);

  inline CMsgEventGoals& operator=(const CMsgEventGoals& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgEventGoals& default_instance();

  static inline const CMsgEventGoals* internal_default_instance() {
    return reinterpret_cast<const CMsgEventGoals*>(
               &_CMsgEventGoals_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    234;

  void Swap(CMsgEventGoals* other);

  // implements Message ----------------------------------------------

  inline CMsgEventGoals* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgEventGoals* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgEventGoals& from);
  void MergeFrom(const CMsgEventGoals& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgEventGoals* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgEventGoals_EventGoal EventGoal;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgEventGoals.EventGoal event_goals = 1;
  int event_goals_size() const;
  void clear_event_goals();
  static const int kEventGoalsFieldNumber = 1;
  const ::proto::dota::CMsgEventGoals_EventGoal& event_goals(int index) const;
  ::proto::dota::CMsgEventGoals_EventGoal* mutable_event_goals(int index);
  ::proto::dota::CMsgEventGoals_EventGoal* add_event_goals();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventGoals_EventGoal >*
      mutable_event_goals();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventGoals_EventGoal >&
      event_goals() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgEventGoals)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventGoals_EventGoal > event_goals_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToGCLeaguePredictions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToGCLeaguePredictions) */ {
 public:
  CMsgGCToGCLeaguePredictions();
  virtual ~CMsgGCToGCLeaguePredictions();

  CMsgGCToGCLeaguePredictions(const CMsgGCToGCLeaguePredictions& from);

  inline CMsgGCToGCLeaguePredictions& operator=(const CMsgGCToGCLeaguePredictions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToGCLeaguePredictions& default_instance();

  static inline const CMsgGCToGCLeaguePredictions* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToGCLeaguePredictions*>(
               &_CMsgGCToGCLeaguePredictions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    235;

  void Swap(CMsgGCToGCLeaguePredictions* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToGCLeaguePredictions* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToGCLeaguePredictions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToGCLeaguePredictions& from);
  void MergeFrom(const CMsgGCToGCLeaguePredictions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToGCLeaguePredictions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 league_id = 1;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 1;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToGCLeaguePredictions)
 private:
  void set_has_league_id();
  void clear_has_league_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 league_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPredictionRankings_PredictionLine : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPredictionRankings.PredictionLine) */ {
 public:
  CMsgPredictionRankings_PredictionLine();
  virtual ~CMsgPredictionRankings_PredictionLine();

  CMsgPredictionRankings_PredictionLine(const CMsgPredictionRankings_PredictionLine& from);

  inline CMsgPredictionRankings_PredictionLine& operator=(const CMsgPredictionRankings_PredictionLine& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPredictionRankings_PredictionLine& default_instance();

  static inline const CMsgPredictionRankings_PredictionLine* internal_default_instance() {
    return reinterpret_cast<const CMsgPredictionRankings_PredictionLine*>(
               &_CMsgPredictionRankings_PredictionLine_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    236;

  void Swap(CMsgPredictionRankings_PredictionLine* other);

  // implements Message ----------------------------------------------

  inline CMsgPredictionRankings_PredictionLine* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPredictionRankings_PredictionLine* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPredictionRankings_PredictionLine& from);
  void MergeFrom(const CMsgPredictionRankings_PredictionLine& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPredictionRankings_PredictionLine* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string answer_name = 2;
  bool has_answer_name() const;
  void clear_answer_name();
  static const int kAnswerNameFieldNumber = 2;
  const ::std::string& answer_name() const;
  void set_answer_name(const ::std::string& value);
  #if LANG_CXX11
  void set_answer_name(::std::string&& value);
  #endif
  void set_answer_name(const char* value);
  void set_answer_name(const char* value, size_t size);
  ::std::string* mutable_answer_name();
  ::std::string* release_answer_name();
  void set_allocated_answer_name(::std::string* answer_name);

  // optional uint32 answer_id = 1;
  bool has_answer_id() const;
  void clear_answer_id();
  static const int kAnswerIdFieldNumber = 1;
  ::google::protobuf::uint32 answer_id() const;
  void set_answer_id(::google::protobuf::uint32 value);

  // optional float answer_value = 4;
  bool has_answer_value() const;
  void clear_answer_value();
  static const int kAnswerValueFieldNumber = 4;
  float answer_value() const;
  void set_answer_value(float value);

  // optional uint64 answer_logo = 3;
  bool has_answer_logo() const;
  void clear_answer_logo();
  static const int kAnswerLogoFieldNumber = 3;
  ::google::protobuf::uint64 answer_logo() const;
  void set_answer_logo(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPredictionRankings.PredictionLine)
 private:
  void set_has_answer_id();
  void clear_has_answer_id();
  void set_has_answer_name();
  void clear_has_answer_name();
  void set_has_answer_logo();
  void clear_has_answer_logo();
  void set_has_answer_value();
  void clear_has_answer_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr answer_name_;
  ::google::protobuf::uint32 answer_id_;
  float answer_value_;
  ::google::protobuf::uint64 answer_logo_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPredictionRankings_Prediction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPredictionRankings.Prediction) */ {
 public:
  CMsgPredictionRankings_Prediction();
  virtual ~CMsgPredictionRankings_Prediction();

  CMsgPredictionRankings_Prediction(const CMsgPredictionRankings_Prediction& from);

  inline CMsgPredictionRankings_Prediction& operator=(const CMsgPredictionRankings_Prediction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPredictionRankings_Prediction& default_instance();

  static inline const CMsgPredictionRankings_Prediction* internal_default_instance() {
    return reinterpret_cast<const CMsgPredictionRankings_Prediction*>(
               &_CMsgPredictionRankings_Prediction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    237;

  void Swap(CMsgPredictionRankings_Prediction* other);

  // implements Message ----------------------------------------------

  inline CMsgPredictionRankings_Prediction* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPredictionRankings_Prediction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPredictionRankings_Prediction& from);
  void MergeFrom(const CMsgPredictionRankings_Prediction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPredictionRankings_Prediction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgPredictionRankings.PredictionLine prediction_lines = 2;
  int prediction_lines_size() const;
  void clear_prediction_lines();
  static const int kPredictionLinesFieldNumber = 2;
  const ::proto::dota::CMsgPredictionRankings_PredictionLine& prediction_lines(int index) const;
  ::proto::dota::CMsgPredictionRankings_PredictionLine* mutable_prediction_lines(int index);
  ::proto::dota::CMsgPredictionRankings_PredictionLine* add_prediction_lines();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_PredictionLine >*
      mutable_prediction_lines();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_PredictionLine >&
      prediction_lines() const;

  // optional uint32 selection_id = 1;
  bool has_selection_id() const;
  void clear_selection_id();
  static const int kSelectionIdFieldNumber = 1;
  ::google::protobuf::uint32 selection_id() const;
  void set_selection_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPredictionRankings.Prediction)
 private:
  void set_has_selection_id();
  void clear_has_selection_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_PredictionLine > prediction_lines_;
  ::google::protobuf::uint32 selection_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPredictionRankings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPredictionRankings) */ {
 public:
  CMsgPredictionRankings();
  virtual ~CMsgPredictionRankings();

  CMsgPredictionRankings(const CMsgPredictionRankings& from);

  inline CMsgPredictionRankings& operator=(const CMsgPredictionRankings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPredictionRankings& default_instance();

  static inline const CMsgPredictionRankings* internal_default_instance() {
    return reinterpret_cast<const CMsgPredictionRankings*>(
               &_CMsgPredictionRankings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    238;

  void Swap(CMsgPredictionRankings* other);

  // implements Message ----------------------------------------------

  inline CMsgPredictionRankings* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPredictionRankings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPredictionRankings& from);
  void MergeFrom(const CMsgPredictionRankings& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPredictionRankings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgPredictionRankings_PredictionLine PredictionLine;
  typedef CMsgPredictionRankings_Prediction Prediction;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgPredictionRankings.Prediction predictions = 1;
  int predictions_size() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 1;
  const ::proto::dota::CMsgPredictionRankings_Prediction& predictions(int index) const;
  ::proto::dota::CMsgPredictionRankings_Prediction* mutable_predictions(int index);
  ::proto::dota::CMsgPredictionRankings_Prediction* add_predictions();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_Prediction >*
      mutable_predictions();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_Prediction >&
      predictions() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPredictionRankings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_Prediction > predictions_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPredictionResults_ResultBreakdown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPredictionResults.ResultBreakdown) */ {
 public:
  CMsgPredictionResults_ResultBreakdown();
  virtual ~CMsgPredictionResults_ResultBreakdown();

  CMsgPredictionResults_ResultBreakdown(const CMsgPredictionResults_ResultBreakdown& from);

  inline CMsgPredictionResults_ResultBreakdown& operator=(const CMsgPredictionResults_ResultBreakdown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPredictionResults_ResultBreakdown& default_instance();

  static inline const CMsgPredictionResults_ResultBreakdown* internal_default_instance() {
    return reinterpret_cast<const CMsgPredictionResults_ResultBreakdown*>(
               &_CMsgPredictionResults_ResultBreakdown_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    239;

  void Swap(CMsgPredictionResults_ResultBreakdown* other);

  // implements Message ----------------------------------------------

  inline CMsgPredictionResults_ResultBreakdown* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPredictionResults_ResultBreakdown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPredictionResults_ResultBreakdown& from);
  void MergeFrom(const CMsgPredictionResults_ResultBreakdown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPredictionResults_ResultBreakdown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 answer_selection = 2;
  bool has_answer_selection() const;
  void clear_answer_selection();
  static const int kAnswerSelectionFieldNumber = 2;
  ::google::protobuf::uint32 answer_selection() const;
  void set_answer_selection(::google::protobuf::uint32 value);

  // optional float answer_value = 3;
  bool has_answer_value() const;
  void clear_answer_value();
  static const int kAnswerValueFieldNumber = 3;
  float answer_value() const;
  void set_answer_value(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPredictionResults.ResultBreakdown)
 private:
  void set_has_answer_selection();
  void clear_has_answer_selection();
  void set_has_answer_value();
  void clear_has_answer_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 answer_selection_;
  float answer_value_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPredictionResults_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPredictionResults.Result) */ {
 public:
  CMsgPredictionResults_Result();
  virtual ~CMsgPredictionResults_Result();

  CMsgPredictionResults_Result(const CMsgPredictionResults_Result& from);

  inline CMsgPredictionResults_Result& operator=(const CMsgPredictionResults_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPredictionResults_Result& default_instance();

  static inline const CMsgPredictionResults_Result* internal_default_instance() {
    return reinterpret_cast<const CMsgPredictionResults_Result*>(
               &_CMsgPredictionResults_Result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    240;

  void Swap(CMsgPredictionResults_Result* other);

  // implements Message ----------------------------------------------

  inline CMsgPredictionResults_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPredictionResults_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPredictionResults_Result& from);
  void MergeFrom(const CMsgPredictionResults_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPredictionResults_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgPredictionResults.ResultBreakdown result_breakdown = 2;
  int result_breakdown_size() const;
  void clear_result_breakdown();
  static const int kResultBreakdownFieldNumber = 2;
  const ::proto::dota::CMsgPredictionResults_ResultBreakdown& result_breakdown(int index) const;
  ::proto::dota::CMsgPredictionResults_ResultBreakdown* mutable_result_breakdown(int index);
  ::proto::dota::CMsgPredictionResults_ResultBreakdown* add_result_breakdown();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_ResultBreakdown >*
      mutable_result_breakdown();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_ResultBreakdown >&
      result_breakdown() const;

  // optional uint32 selection_id = 1;
  bool has_selection_id() const;
  void clear_selection_id();
  static const int kSelectionIdFieldNumber = 1;
  ::google::protobuf::uint32 selection_id() const;
  void set_selection_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPredictionResults.Result)
 private:
  void set_has_selection_id();
  void clear_has_selection_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_ResultBreakdown > result_breakdown_;
  ::google::protobuf::uint32 selection_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPredictionResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPredictionResults) */ {
 public:
  CMsgPredictionResults();
  virtual ~CMsgPredictionResults();

  CMsgPredictionResults(const CMsgPredictionResults& from);

  inline CMsgPredictionResults& operator=(const CMsgPredictionResults& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPredictionResults& default_instance();

  static inline const CMsgPredictionResults* internal_default_instance() {
    return reinterpret_cast<const CMsgPredictionResults*>(
               &_CMsgPredictionResults_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    241;

  void Swap(CMsgPredictionResults* other);

  // implements Message ----------------------------------------------

  inline CMsgPredictionResults* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPredictionResults* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPredictionResults& from);
  void MergeFrom(const CMsgPredictionResults& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPredictionResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgPredictionResults_ResultBreakdown ResultBreakdown;
  typedef CMsgPredictionResults_Result Result;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgPredictionResults.Result results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  const ::proto::dota::CMsgPredictionResults_Result& results(int index) const;
  ::proto::dota::CMsgPredictionResults_Result* mutable_results(int index);
  ::proto::dota::CMsgPredictionResults_Result* add_results();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_Result >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_Result >&
      results() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPredictionResults)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_Result > results_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCSuspiciousActivity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSuspiciousActivity) */ {
 public:
  CMsgClientToGCSuspiciousActivity();
  virtual ~CMsgClientToGCSuspiciousActivity();

  CMsgClientToGCSuspiciousActivity(const CMsgClientToGCSuspiciousActivity& from);

  inline CMsgClientToGCSuspiciousActivity& operator=(const CMsgClientToGCSuspiciousActivity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSuspiciousActivity& default_instance();

  static inline const CMsgClientToGCSuspiciousActivity* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSuspiciousActivity*>(
               &_CMsgClientToGCSuspiciousActivity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    242;

  void Swap(CMsgClientToGCSuspiciousActivity* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSuspiciousActivity* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCSuspiciousActivity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCSuspiciousActivity& from);
  void MergeFrom(const CMsgClientToGCSuspiciousActivity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCSuspiciousActivity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 app_data = 1;
  bool has_app_data() const;
  void clear_app_data();
  static const int kAppDataFieldNumber = 1;
  ::google::protobuf::uint64 app_data() const;
  void set_app_data(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSuspiciousActivity)
 private:
  void set_has_app_data();
  void clear_has_app_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 app_data_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCHasPlayerVotedForMVP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCHasPlayerVotedForMVP) */ {
 public:
  CMsgClientToGCHasPlayerVotedForMVP();
  virtual ~CMsgClientToGCHasPlayerVotedForMVP();

  CMsgClientToGCHasPlayerVotedForMVP(const CMsgClientToGCHasPlayerVotedForMVP& from);

  inline CMsgClientToGCHasPlayerVotedForMVP& operator=(const CMsgClientToGCHasPlayerVotedForMVP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCHasPlayerVotedForMVP& default_instance();

  static inline const CMsgClientToGCHasPlayerVotedForMVP* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCHasPlayerVotedForMVP*>(
               &_CMsgClientToGCHasPlayerVotedForMVP_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    243;

  void Swap(CMsgClientToGCHasPlayerVotedForMVP* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCHasPlayerVotedForMVP* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCHasPlayerVotedForMVP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCHasPlayerVotedForMVP& from);
  void MergeFrom(const CMsgClientToGCHasPlayerVotedForMVP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCHasPlayerVotedForMVP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCHasPlayerVotedForMVP)
 private:
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCHasPlayerVotedForMVPResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCHasPlayerVotedForMVPResponse) */ {
 public:
  CMsgClientToGCHasPlayerVotedForMVPResponse();
  virtual ~CMsgClientToGCHasPlayerVotedForMVPResponse();

  CMsgClientToGCHasPlayerVotedForMVPResponse(const CMsgClientToGCHasPlayerVotedForMVPResponse& from);

  inline CMsgClientToGCHasPlayerVotedForMVPResponse& operator=(const CMsgClientToGCHasPlayerVotedForMVPResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCHasPlayerVotedForMVPResponse& default_instance();

  static inline const CMsgClientToGCHasPlayerVotedForMVPResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCHasPlayerVotedForMVPResponse*>(
               &_CMsgClientToGCHasPlayerVotedForMVPResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    244;

  void Swap(CMsgClientToGCHasPlayerVotedForMVPResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCHasPlayerVotedForMVPResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCHasPlayerVotedForMVPResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCHasPlayerVotedForMVPResponse& from);
  void MergeFrom(const CMsgClientToGCHasPlayerVotedForMVPResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCHasPlayerVotedForMVPResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCHasPlayerVotedForMVPResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForMVP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCVoteForMVP) */ {
 public:
  CMsgClientToGCVoteForMVP();
  virtual ~CMsgClientToGCVoteForMVP();

  CMsgClientToGCVoteForMVP(const CMsgClientToGCVoteForMVP& from);

  inline CMsgClientToGCVoteForMVP& operator=(const CMsgClientToGCVoteForMVP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCVoteForMVP& default_instance();

  static inline const CMsgClientToGCVoteForMVP* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCVoteForMVP*>(
               &_CMsgClientToGCVoteForMVP_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    245;

  void Swap(CMsgClientToGCVoteForMVP* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCVoteForMVP* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCVoteForMVP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCVoteForMVP& from);
  void MergeFrom(const CMsgClientToGCVoteForMVP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCVoteForMVP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 account_id = 3;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 3;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCVoteForMVP)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForMVPResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCVoteForMVPResponse) */ {
 public:
  CMsgClientToGCVoteForMVPResponse();
  virtual ~CMsgClientToGCVoteForMVPResponse();

  CMsgClientToGCVoteForMVPResponse(const CMsgClientToGCVoteForMVPResponse& from);

  inline CMsgClientToGCVoteForMVPResponse& operator=(const CMsgClientToGCVoteForMVPResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCVoteForMVPResponse& default_instance();

  static inline const CMsgClientToGCVoteForMVPResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCVoteForMVPResponse*>(
               &_CMsgClientToGCVoteForMVPResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    246;

  void Swap(CMsgClientToGCVoteForMVPResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCVoteForMVPResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCVoteForMVPResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCVoteForMVPResponse& from);
  void MergeFrom(const CMsgClientToGCVoteForMVPResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCVoteForMVPResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCVoteForMVPResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgMVPVotesForMatch_Player : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgMVPVotesForMatch.Player) */ {
 public:
  CMsgMVPVotesForMatch_Player();
  virtual ~CMsgMVPVotesForMatch_Player();

  CMsgMVPVotesForMatch_Player(const CMsgMVPVotesForMatch_Player& from);

  inline CMsgMVPVotesForMatch_Player& operator=(const CMsgMVPVotesForMatch_Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMVPVotesForMatch_Player& default_instance();

  static inline const CMsgMVPVotesForMatch_Player* internal_default_instance() {
    return reinterpret_cast<const CMsgMVPVotesForMatch_Player*>(
               &_CMsgMVPVotesForMatch_Player_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    247;

  void Swap(CMsgMVPVotesForMatch_Player* other);

  // implements Message ----------------------------------------------

  inline CMsgMVPVotesForMatch_Player* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMVPVotesForMatch_Player* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMVPVotesForMatch_Player& from);
  void MergeFrom(const CMsgMVPVotesForMatch_Player& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMVPVotesForMatch_Player* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 vote_count = 2;
  bool has_vote_count() const;
  void clear_vote_count();
  static const int kVoteCountFieldNumber = 2;
  ::google::protobuf::uint32 vote_count() const;
  void set_vote_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgMVPVotesForMatch.Player)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_vote_count();
  void clear_has_vote_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 vote_count_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgMVPVotesForMatch : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgMVPVotesForMatch) */ {
 public:
  CMsgMVPVotesForMatch();
  virtual ~CMsgMVPVotesForMatch();

  CMsgMVPVotesForMatch(const CMsgMVPVotesForMatch& from);

  inline CMsgMVPVotesForMatch& operator=(const CMsgMVPVotesForMatch& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMVPVotesForMatch& default_instance();

  static inline const CMsgMVPVotesForMatch* internal_default_instance() {
    return reinterpret_cast<const CMsgMVPVotesForMatch*>(
               &_CMsgMVPVotesForMatch_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    248;

  void Swap(CMsgMVPVotesForMatch* other);

  // implements Message ----------------------------------------------

  inline CMsgMVPVotesForMatch* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMVPVotesForMatch* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMVPVotesForMatch& from);
  void MergeFrom(const CMsgMVPVotesForMatch& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMVPVotesForMatch* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgMVPVotesForMatch_Player Player;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgMVPVotesForMatch.Player players = 1;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 1;
  const ::proto::dota::CMsgMVPVotesForMatch_Player& players(int index) const;
  ::proto::dota::CMsgMVPVotesForMatch_Player* mutable_players(int index);
  ::proto::dota::CMsgMVPVotesForMatch_Player* add_players();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMVPVotesForMatch_Player >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMVPVotesForMatch_Player >&
      players() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgMVPVotesForMatch)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMVPVotesForMatch_Player > players_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgLeaguePrizePool : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgLeaguePrizePool) */ {
 public:
  CMsgLeaguePrizePool();
  virtual ~CMsgLeaguePrizePool();

  CMsgLeaguePrizePool(const CMsgLeaguePrizePool& from);

  inline CMsgLeaguePrizePool& operator=(const CMsgLeaguePrizePool& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLeaguePrizePool& default_instance();

  static inline const CMsgLeaguePrizePool* internal_default_instance() {
    return reinterpret_cast<const CMsgLeaguePrizePool*>(
               &_CMsgLeaguePrizePool_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    249;

  void Swap(CMsgLeaguePrizePool* other);

  // implements Message ----------------------------------------------

  inline CMsgLeaguePrizePool* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgLeaguePrizePool* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgLeaguePrizePool& from);
  void MergeFrom(const CMsgLeaguePrizePool& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgLeaguePrizePool* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prize_pool = 1;
  bool has_prize_pool() const;
  void clear_prize_pool();
  static const int kPrizePoolFieldNumber = 1;
  ::google::protobuf::uint32 prize_pool() const;
  void set_prize_pool(::google::protobuf::uint32 value);

  // optional float increment_per_second = 2;
  bool has_increment_per_second() const;
  void clear_increment_per_second();
  static const int kIncrementPerSecondFieldNumber = 2;
  float increment_per_second() const;
  void set_increment_per_second(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgLeaguePrizePool)
 private:
  void set_has_prize_pool();
  void clear_has_prize_pool();
  void set_has_increment_per_second();
  void clear_has_increment_per_second();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 prize_pool_;
  float increment_per_second_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCTeammateStatsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCTeammateStatsRequest) */ {
 public:
  CMsgClientToGCTeammateStatsRequest();
  virtual ~CMsgClientToGCTeammateStatsRequest();

  CMsgClientToGCTeammateStatsRequest(const CMsgClientToGCTeammateStatsRequest& from);

  inline CMsgClientToGCTeammateStatsRequest& operator=(const CMsgClientToGCTeammateStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTeammateStatsRequest& default_instance();

  static inline const CMsgClientToGCTeammateStatsRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCTeammateStatsRequest*>(
               &_CMsgClientToGCTeammateStatsRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    250;

  void Swap(CMsgClientToGCTeammateStatsRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCTeammateStatsRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCTeammateStatsRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCTeammateStatsRequest& from);
  void MergeFrom(const CMsgClientToGCTeammateStatsRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCTeammateStatsRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCTeammateStatsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCTeammateStatsResponse_TeammateStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat) */ {
 public:
  CMsgClientToGCTeammateStatsResponse_TeammateStat();
  virtual ~CMsgClientToGCTeammateStatsResponse_TeammateStat();

  CMsgClientToGCTeammateStatsResponse_TeammateStat(const CMsgClientToGCTeammateStatsResponse_TeammateStat& from);

  inline CMsgClientToGCTeammateStatsResponse_TeammateStat& operator=(const CMsgClientToGCTeammateStatsResponse_TeammateStat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTeammateStatsResponse_TeammateStat& default_instance();

  static inline const CMsgClientToGCTeammateStatsResponse_TeammateStat* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCTeammateStatsResponse_TeammateStat*>(
               &_CMsgClientToGCTeammateStatsResponse_TeammateStat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    251;

  void Swap(CMsgClientToGCTeammateStatsResponse_TeammateStat* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCTeammateStatsResponse_TeammateStat* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCTeammateStatsResponse_TeammateStat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCTeammateStatsResponse_TeammateStat& from);
  void MergeFrom(const CMsgClientToGCTeammateStatsResponse_TeammateStat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCTeammateStatsResponse_TeammateStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 games = 2;
  bool has_games() const;
  void clear_games();
  static const int kGamesFieldNumber = 2;
  ::google::protobuf::uint32 games() const;
  void set_games(::google::protobuf::uint32 value);

  // optional uint32 wins = 3;
  bool has_wins() const;
  void clear_wins();
  static const int kWinsFieldNumber = 3;
  ::google::protobuf::uint32 wins() const;
  void set_wins(::google::protobuf::uint32 value);

  // optional uint32 most_recent_game_timestamp = 4;
  bool has_most_recent_game_timestamp() const;
  void clear_most_recent_game_timestamp();
  static const int kMostRecentGameTimestampFieldNumber = 4;
  ::google::protobuf::uint32 most_recent_game_timestamp() const;
  void set_most_recent_game_timestamp(::google::protobuf::uint32 value);

  // optional uint64 most_recent_game_match_id = 5;
  bool has_most_recent_game_match_id() const;
  void clear_most_recent_game_match_id();
  static const int kMostRecentGameMatchIdFieldNumber = 5;
  ::google::protobuf::uint64 most_recent_game_match_id() const;
  void set_most_recent_game_match_id(::google::protobuf::uint64 value);

  // optional float performance = 100;
  bool has_performance() const;
  void clear_performance();
  static const int kPerformanceFieldNumber = 100;
  float performance() const;
  void set_performance(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_games();
  void clear_has_games();
  void set_has_wins();
  void clear_has_wins();
  void set_has_most_recent_game_timestamp();
  void clear_has_most_recent_game_timestamp();
  void set_has_most_recent_game_match_id();
  void clear_has_most_recent_game_match_id();
  void set_has_performance();
  void clear_has_performance();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 games_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 most_recent_game_timestamp_;
  ::google::protobuf::uint64 most_recent_game_match_id_;
  float performance_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCTeammateStatsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCTeammateStatsResponse) */ {
 public:
  CMsgClientToGCTeammateStatsResponse();
  virtual ~CMsgClientToGCTeammateStatsResponse();

  CMsgClientToGCTeammateStatsResponse(const CMsgClientToGCTeammateStatsResponse& from);

  inline CMsgClientToGCTeammateStatsResponse& operator=(const CMsgClientToGCTeammateStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTeammateStatsResponse& default_instance();

  static inline const CMsgClientToGCTeammateStatsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCTeammateStatsResponse*>(
               &_CMsgClientToGCTeammateStatsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    252;

  void Swap(CMsgClientToGCTeammateStatsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCTeammateStatsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCTeammateStatsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCTeammateStatsResponse& from);
  void MergeFrom(const CMsgClientToGCTeammateStatsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCTeammateStatsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCTeammateStatsResponse_TeammateStat TeammateStat;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat teammate_stats = 2;
  int teammate_stats_size() const;
  void clear_teammate_stats();
  static const int kTeammateStatsFieldNumber = 2;
  const ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat& teammate_stats(int index) const;
  ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat* mutable_teammate_stats(int index);
  ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat* add_teammate_stats();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat >*
      mutable_teammate_stats();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat >&
      teammate_stats() const;

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCTeammateStatsResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat > teammate_stats_;
  bool success_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForArcana_MatchVote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCVoteForArcana.MatchVote) */ {
 public:
  CMsgClientToGCVoteForArcana_MatchVote();
  virtual ~CMsgClientToGCVoteForArcana_MatchVote();

  CMsgClientToGCVoteForArcana_MatchVote(const CMsgClientToGCVoteForArcana_MatchVote& from);

  inline CMsgClientToGCVoteForArcana_MatchVote& operator=(const CMsgClientToGCVoteForArcana_MatchVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCVoteForArcana_MatchVote& default_instance();

  static inline const CMsgClientToGCVoteForArcana_MatchVote* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCVoteForArcana_MatchVote*>(
               &_CMsgClientToGCVoteForArcana_MatchVote_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    253;

  void Swap(CMsgClientToGCVoteForArcana_MatchVote* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCVoteForArcana_MatchVote* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCVoteForArcana_MatchVote* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCVoteForArcana_MatchVote& from);
  void MergeFrom(const CMsgClientToGCVoteForArcana_MatchVote& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCVoteForArcana_MatchVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 vote_count = 3;
  bool has_vote_count() const;
  void clear_vote_count();
  static const int kVoteCountFieldNumber = 3;
  ::google::protobuf::uint32 vote_count() const;
  void set_vote_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCVoteForArcana.MatchVote)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_vote_count();
  void clear_has_vote_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 vote_count_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForArcana : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCVoteForArcana) */ {
 public:
  CMsgClientToGCVoteForArcana();
  virtual ~CMsgClientToGCVoteForArcana();

  CMsgClientToGCVoteForArcana(const CMsgClientToGCVoteForArcana& from);

  inline CMsgClientToGCVoteForArcana& operator=(const CMsgClientToGCVoteForArcana& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCVoteForArcana& default_instance();

  static inline const CMsgClientToGCVoteForArcana* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCVoteForArcana*>(
               &_CMsgClientToGCVoteForArcana_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    254;

  void Swap(CMsgClientToGCVoteForArcana* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCVoteForArcana* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCVoteForArcana* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCVoteForArcana& from);
  void MergeFrom(const CMsgClientToGCVoteForArcana& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCVoteForArcana* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCVoteForArcana_MatchVote MatchVote;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCVoteForArcana.MatchVote matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  const ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote& matches(int index) const;
  ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote* mutable_matches(int index);
  ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote* add_matches();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote >*
      mutable_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote >&
      matches() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCVoteForArcana)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote > matches_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCVoteForArcanaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCVoteForArcanaResponse) */ {
 public:
  CMsgClientToGCVoteForArcanaResponse();
  virtual ~CMsgClientToGCVoteForArcanaResponse();

  CMsgClientToGCVoteForArcanaResponse(const CMsgClientToGCVoteForArcanaResponse& from);

  inline CMsgClientToGCVoteForArcanaResponse& operator=(const CMsgClientToGCVoteForArcanaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCVoteForArcanaResponse& default_instance();

  static inline const CMsgClientToGCVoteForArcanaResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCVoteForArcanaResponse*>(
               &_CMsgClientToGCVoteForArcanaResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    255;

  void Swap(CMsgClientToGCVoteForArcanaResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCVoteForArcanaResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCVoteForArcanaResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCVoteForArcanaResponse& from);
  void MergeFrom(const CMsgClientToGCVoteForArcanaResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCVoteForArcanaResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCVoteForArcanaResponse_Result Result;
  static const Result SUCCEEDED =
    CMsgClientToGCVoteForArcanaResponse_Result_SUCCEEDED;
  static const Result VOTING_NOT_ENABLED_FOR_ROUND =
    CMsgClientToGCVoteForArcanaResponse_Result_VOTING_NOT_ENABLED_FOR_ROUND;
  static const Result UNKNOWN_FAILURE =
    CMsgClientToGCVoteForArcanaResponse_Result_UNKNOWN_FAILURE;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCVoteForArcanaResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCVoteForArcanaResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCVoteForArcanaResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCVoteForArcanaResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCVoteForArcanaResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCVoteForArcanaResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCVoteForArcanaResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCVoteForArcanaResponse.Result result = 1 [default = SUCCEEDED];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCVoteForArcanaResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgArcanaVotes_Match : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgArcanaVotes.Match) */ {
 public:
  CMsgArcanaVotes_Match();
  virtual ~CMsgArcanaVotes_Match();

  CMsgArcanaVotes_Match(const CMsgArcanaVotes_Match& from);

  inline CMsgArcanaVotes_Match& operator=(const CMsgArcanaVotes_Match& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgArcanaVotes_Match& default_instance();

  static inline const CMsgArcanaVotes_Match* internal_default_instance() {
    return reinterpret_cast<const CMsgArcanaVotes_Match*>(
               &_CMsgArcanaVotes_Match_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    256;

  void Swap(CMsgArcanaVotes_Match* other);

  // implements Message ----------------------------------------------

  inline CMsgArcanaVotes_Match* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgArcanaVotes_Match* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgArcanaVotes_Match& from);
  void MergeFrom(const CMsgArcanaVotes_Match& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgArcanaVotes_Match* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint32 match_id() const;
  void set_match_id(::google::protobuf::uint32 value);

  // optional uint32 hero_id_0 = 2;
  bool has_hero_id_0() const;
  void clear_hero_id_0();
  static const int kHeroId0FieldNumber = 2;
  ::google::protobuf::uint32 hero_id_0() const;
  void set_hero_id_0(::google::protobuf::uint32 value);

  // optional uint32 hero_id_1 = 3;
  bool has_hero_id_1() const;
  void clear_hero_id_1();
  static const int kHeroId1FieldNumber = 3;
  ::google::protobuf::uint32 hero_id_1() const;
  void set_hero_id_1(::google::protobuf::uint32 value);

  // optional uint32 hero_seeding_0 = 4;
  bool has_hero_seeding_0() const;
  void clear_hero_seeding_0();
  static const int kHeroSeeding0FieldNumber = 4;
  ::google::protobuf::uint32 hero_seeding_0() const;
  void set_hero_seeding_0(::google::protobuf::uint32 value);

  // optional uint32 hero_seeding_1 = 5;
  bool has_hero_seeding_1() const;
  void clear_hero_seeding_1();
  static const int kHeroSeeding1FieldNumber = 5;
  ::google::protobuf::uint32 hero_seeding_1() const;
  void set_hero_seeding_1(::google::protobuf::uint32 value);

  // optional uint32 vote_count_0 = 6;
  bool has_vote_count_0() const;
  void clear_vote_count_0();
  static const int kVoteCount0FieldNumber = 6;
  ::google::protobuf::uint32 vote_count_0() const;
  void set_vote_count_0(::google::protobuf::uint32 value);

  // optional uint32 vote_count_1 = 7;
  bool has_vote_count_1() const;
  void clear_vote_count_1();
  static const int kVoteCount1FieldNumber = 7;
  ::google::protobuf::uint32 vote_count_1() const;
  void set_vote_count_1(::google::protobuf::uint32 value);

  // optional uint32 voting_state = 8;
  bool has_voting_state() const;
  void clear_voting_state();
  static const int kVotingStateFieldNumber = 8;
  ::google::protobuf::uint32 voting_state() const;
  void set_voting_state(::google::protobuf::uint32 value);

  // optional uint32 round_number = 9;
  bool has_round_number() const;
  void clear_round_number();
  static const int kRoundNumberFieldNumber = 9;
  ::google::protobuf::uint32 round_number() const;
  void set_round_number(::google::protobuf::uint32 value);

  // optional bool is_votes_hidden = 10;
  bool has_is_votes_hidden() const;
  void clear_is_votes_hidden();
  static const int kIsVotesHiddenFieldNumber = 10;
  bool is_votes_hidden() const;
  void set_is_votes_hidden(bool value);

  // optional uint32 calibration_time_remaining = 11;
  bool has_calibration_time_remaining() const;
  void clear_calibration_time_remaining();
  static const int kCalibrationTimeRemainingFieldNumber = 11;
  ::google::protobuf::uint32 calibration_time_remaining() const;
  void set_calibration_time_remaining(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgArcanaVotes.Match)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_hero_id_0();
  void clear_has_hero_id_0();
  void set_has_hero_id_1();
  void clear_has_hero_id_1();
  void set_has_hero_seeding_0();
  void clear_has_hero_seeding_0();
  void set_has_hero_seeding_1();
  void clear_has_hero_seeding_1();
  void set_has_vote_count_0();
  void clear_has_vote_count_0();
  void set_has_vote_count_1();
  void clear_has_vote_count_1();
  void set_has_voting_state();
  void clear_has_voting_state();
  void set_has_round_number();
  void clear_has_round_number();
  void set_has_is_votes_hidden();
  void clear_has_is_votes_hidden();
  void set_has_calibration_time_remaining();
  void clear_has_calibration_time_remaining();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 match_id_;
  ::google::protobuf::uint32 hero_id_0_;
  ::google::protobuf::uint32 hero_id_1_;
  ::google::protobuf::uint32 hero_seeding_0_;
  ::google::protobuf::uint32 hero_seeding_1_;
  ::google::protobuf::uint32 vote_count_0_;
  ::google::protobuf::uint32 vote_count_1_;
  ::google::protobuf::uint32 voting_state_;
  ::google::protobuf::uint32 round_number_;
  bool is_votes_hidden_;
  ::google::protobuf::uint32 calibration_time_remaining_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgArcanaVotes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgArcanaVotes) */ {
 public:
  CMsgArcanaVotes();
  virtual ~CMsgArcanaVotes();

  CMsgArcanaVotes(const CMsgArcanaVotes& from);

  inline CMsgArcanaVotes& operator=(const CMsgArcanaVotes& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgArcanaVotes& default_instance();

  static inline const CMsgArcanaVotes* internal_default_instance() {
    return reinterpret_cast<const CMsgArcanaVotes*>(
               &_CMsgArcanaVotes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    257;

  void Swap(CMsgArcanaVotes* other);

  // implements Message ----------------------------------------------

  inline CMsgArcanaVotes* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgArcanaVotes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgArcanaVotes& from);
  void MergeFrom(const CMsgArcanaVotes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgArcanaVotes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgArcanaVotes_Match Match;

  typedef CMsgArcanaVotes_VotingState VotingState;
  static const VotingState FINISHED =
    CMsgArcanaVotes_VotingState_FINISHED;
  static const VotingState IN_PROGRESS =
    CMsgArcanaVotes_VotingState_IN_PROGRESS;
  static const VotingState IN_FUTURE =
    CMsgArcanaVotes_VotingState_IN_FUTURE;
  static inline bool VotingState_IsValid(int value) {
    return CMsgArcanaVotes_VotingState_IsValid(value);
  }
  static const VotingState VotingState_MIN =
    CMsgArcanaVotes_VotingState_VotingState_MIN;
  static const VotingState VotingState_MAX =
    CMsgArcanaVotes_VotingState_VotingState_MAX;
  static const int VotingState_ARRAYSIZE =
    CMsgArcanaVotes_VotingState_VotingState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  VotingState_descriptor() {
    return CMsgArcanaVotes_VotingState_descriptor();
  }
  static inline const ::std::string& VotingState_Name(VotingState value) {
    return CMsgArcanaVotes_VotingState_Name(value);
  }
  static inline bool VotingState_Parse(const ::std::string& name,
      VotingState* value) {
    return CMsgArcanaVotes_VotingState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgArcanaVotes.Match matches = 1;
  int matches_size() const;
  void clear_matches();
  static const int kMatchesFieldNumber = 1;
  const ::proto::dota::CMsgArcanaVotes_Match& matches(int index) const;
  ::proto::dota::CMsgArcanaVotes_Match* mutable_matches(int index);
  ::proto::dota::CMsgArcanaVotes_Match* add_matches();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgArcanaVotes_Match >*
      mutable_matches();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgArcanaVotes_Match >&
      matches() const;

  // optional uint32 round_time_remaining = 2;
  bool has_round_time_remaining() const;
  void clear_round_time_remaining();
  static const int kRoundTimeRemainingFieldNumber = 2;
  ::google::protobuf::uint32 round_time_remaining() const;
  void set_round_time_remaining(::google::protobuf::uint32 value);

  // optional uint32 round_number = 3;
  bool has_round_number() const;
  void clear_round_number();
  static const int kRoundNumberFieldNumber = 3;
  ::google::protobuf::uint32 round_number() const;
  void set_round_number(::google::protobuf::uint32 value);

  // optional uint32 voting_state = 4;
  bool has_voting_state() const;
  void clear_voting_state();
  static const int kVotingStateFieldNumber = 4;
  ::google::protobuf::uint32 voting_state() const;
  void set_voting_state(::google::protobuf::uint32 value);

  // optional bool is_current_round_calibrating = 5;
  bool has_is_current_round_calibrating() const;
  void clear_is_current_round_calibrating();
  static const int kIsCurrentRoundCalibratingFieldNumber = 5;
  bool is_current_round_calibrating() const;
  void set_is_current_round_calibrating(bool value);

  // optional uint32 closest_active_match_id = 6;
  bool has_closest_active_match_id() const;
  void clear_closest_active_match_id();
  static const int kClosestActiveMatchIdFieldNumber = 6;
  ::google::protobuf::uint32 closest_active_match_id() const;
  void set_closest_active_match_id(::google::protobuf::uint32 value);

  // optional uint32 event_id = 7;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 7;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgArcanaVotes)
 private:
  void set_has_round_time_remaining();
  void clear_has_round_time_remaining();
  void set_has_round_number();
  void clear_has_round_number();
  void set_has_voting_state();
  void clear_has_voting_state();
  void set_has_is_current_round_calibrating();
  void clear_has_is_current_round_calibrating();
  void set_has_closest_active_match_id();
  void clear_has_closest_active_match_id();
  void set_has_event_id();
  void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgArcanaVotes_Match > matches_;
  ::google::protobuf::uint32 round_time_remaining_;
  ::google::protobuf::uint32 round_number_;
  ::google::protobuf::uint32 voting_state_;
  bool is_current_round_calibrating_;
  ::google::protobuf::uint32 closest_active_match_id_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestArcanaVotesRemaining : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestArcanaVotesRemaining) */ {
 public:
  CMsgClientToGCRequestArcanaVotesRemaining();
  virtual ~CMsgClientToGCRequestArcanaVotesRemaining();

  CMsgClientToGCRequestArcanaVotesRemaining(const CMsgClientToGCRequestArcanaVotesRemaining& from);

  inline CMsgClientToGCRequestArcanaVotesRemaining& operator=(const CMsgClientToGCRequestArcanaVotesRemaining& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestArcanaVotesRemaining& default_instance();

  static inline const CMsgClientToGCRequestArcanaVotesRemaining* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestArcanaVotesRemaining*>(
               &_CMsgClientToGCRequestArcanaVotesRemaining_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    258;

  void Swap(CMsgClientToGCRequestArcanaVotesRemaining* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestArcanaVotesRemaining* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestArcanaVotesRemaining* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestArcanaVotesRemaining& from);
  void MergeFrom(const CMsgClientToGCRequestArcanaVotesRemaining& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestArcanaVotesRemaining* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestArcanaVotesRemaining)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote) */ {
 public:
  CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote();
  virtual ~CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote();

  CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote(const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& from);

  inline CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& operator=(const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& default_instance();

  static inline const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote*>(
               &_CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    259;

  void Swap(CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& from);
  void MergeFrom(const CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 hero_id = 2;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 2;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 vote_count = 3;
  bool has_vote_count() const;
  void clear_vote_count();
  static const int kVoteCountFieldNumber = 3;
  ::google::protobuf::uint32 vote_count() const;
  void set_vote_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote)
 private:
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_vote_count();
  void clear_has_vote_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 vote_count_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestArcanaVotesRemainingResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse) */ {
 public:
  CMsgClientToGCRequestArcanaVotesRemainingResponse();
  virtual ~CMsgClientToGCRequestArcanaVotesRemainingResponse();

  CMsgClientToGCRequestArcanaVotesRemainingResponse(const CMsgClientToGCRequestArcanaVotesRemainingResponse& from);

  inline CMsgClientToGCRequestArcanaVotesRemainingResponse& operator=(const CMsgClientToGCRequestArcanaVotesRemainingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestArcanaVotesRemainingResponse& default_instance();

  static inline const CMsgClientToGCRequestArcanaVotesRemainingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestArcanaVotesRemainingResponse*>(
               &_CMsgClientToGCRequestArcanaVotesRemainingResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    260;

  void Swap(CMsgClientToGCRequestArcanaVotesRemainingResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestArcanaVotesRemainingResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestArcanaVotesRemainingResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestArcanaVotesRemainingResponse& from);
  void MergeFrom(const CMsgClientToGCRequestArcanaVotesRemainingResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestArcanaVotesRemainingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote MatchVote;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote matches_previously_voted_for = 4;
  int matches_previously_voted_for_size() const;
  void clear_matches_previously_voted_for();
  static const int kMatchesPreviouslyVotedForFieldNumber = 4;
  const ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& matches_previously_voted_for(int index) const;
  ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* mutable_matches_previously_voted_for(int index);
  ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* add_matches_previously_voted_for();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote >*
      mutable_matches_previously_voted_for();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote >&
      matches_previously_voted_for() const;

  // optional bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // optional uint32 votes_remaining = 2;
  bool has_votes_remaining() const;
  void clear_votes_remaining();
  static const int kVotesRemainingFieldNumber = 2;
  ::google::protobuf::uint32 votes_remaining() const;
  void set_votes_remaining(::google::protobuf::uint32 value);

  // optional uint32 votes_total = 3;
  bool has_votes_total() const;
  void clear_votes_total();
  static const int kVotesTotalFieldNumber = 3;
  ::google::protobuf::uint32 votes_total() const;
  void set_votes_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_votes_remaining();
  void clear_has_votes_remaining();
  void set_has_votes_total();
  void clear_has_votes_total();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote > matches_previously_voted_for_;
  bool result_;
  ::google::protobuf::uint32 votes_remaining_;
  ::google::protobuf::uint32 votes_total_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLog) */ {
 public:
  CMsgClientToGCRequestEventPointLog();
  virtual ~CMsgClientToGCRequestEventPointLog();

  CMsgClientToGCRequestEventPointLog(const CMsgClientToGCRequestEventPointLog& from);

  inline CMsgClientToGCRequestEventPointLog& operator=(const CMsgClientToGCRequestEventPointLog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLog& default_instance();

  static inline const CMsgClientToGCRequestEventPointLog* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLog*>(
               &_CMsgClientToGCRequestEventPointLog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    261;

  void Swap(CMsgClientToGCRequestEventPointLog* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLog* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLog& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLog)
 private:
  void set_has_event_id();
  void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent();

  CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent(const CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    262;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 quest_id = 1;
  bool has_quest_id() const;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // optional uint32 challenge_id = 2;
  bool has_challenge_id() const;
  void clear_challenge_id();
  static const int kChallengeIdFieldNumber = 2;
  ::google::protobuf::uint32 challenge_id() const;
  void set_challenge_id(::google::protobuf::uint32 value);

  // optional uint32 rank = 3;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 3;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent)
 private:
  void set_has_quest_id();
  void clear_has_quest_id();
  void set_has_challenge_id();
  void clear_has_challenge_id();
  void set_has_rank();
  void clear_has_rank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 quest_id_;
  ::google::protobuf::uint32 challenge_id_;
  ::google::protobuf::uint32 rank_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.WagerWonEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent();

  CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent(const CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    263;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.WagerWonEvent)
 private:
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent();

  CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent(const CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    264;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string recipient_name = 2;
  bool has_recipient_name() const;
  void clear_recipient_name();
  static const int kRecipientNameFieldNumber = 2;
  const ::std::string& recipient_name() const;
  void set_recipient_name(const ::std::string& value);
  #if LANG_CXX11
  void set_recipient_name(::std::string&& value);
  #endif
  void set_recipient_name(const char* value);
  void set_recipient_name(const char* value, size_t size);
  ::std::string* mutable_recipient_name();
  ::std::string* release_recipient_name();
  void set_allocated_recipient_name(::std::string* recipient_name);

  // optional uint32 recipient_account_id = 1;
  bool has_recipient_account_id() const;
  void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 recipient_account_id() const;
  void set_recipient_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent)
 private:
  void set_has_recipient_account_id();
  void clear_has_recipient_account_id();
  void set_has_recipient_name();
  void clear_has_recipient_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr recipient_name_;
  ::google::protobuf::uint32 recipient_account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent();

  CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent(const CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    265;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string giver_name = 2;
  bool has_giver_name() const;
  void clear_giver_name();
  static const int kGiverNameFieldNumber = 2;
  const ::std::string& giver_name() const;
  void set_giver_name(const ::std::string& value);
  #if LANG_CXX11
  void set_giver_name(::std::string&& value);
  #endif
  void set_giver_name(const char* value);
  void set_giver_name(const char* value, size_t size);
  ::std::string* mutable_giver_name();
  ::std::string* release_giver_name();
  void set_allocated_giver_name(::std::string* giver_name);

  // optional uint32 giver_account_id = 1;
  bool has_giver_account_id() const;
  void clear_giver_account_id();
  static const int kGiverAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 giver_account_id() const;
  void set_giver_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent)
 private:
  void set_has_giver_account_id();
  void clear_has_giver_account_id();
  void set_has_giver_name();
  void clear_has_giver_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr giver_name_;
  ::google::protobuf::uint32 giver_account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.RecycledItemEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent();

  CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent(const CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    266;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 recipe_item_def_index = 1;
  bool has_recipe_item_def_index() const;
  void clear_recipe_item_def_index();
  static const int kRecipeItemDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 recipe_item_def_index() const;
  void set_recipe_item_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.RecycledItemEvent)
 private:
  void set_has_recipe_item_def_index();
  void clear_has_recipe_item_def_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 recipe_item_def_index_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.ActionRewardEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent();

  CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent(const CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    267;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 action_id = 1;
  bool has_action_id() const;
  void clear_action_id();
  static const int kActionIdFieldNumber = 1;
  ::google::protobuf::uint32 action_id() const;
  void set_action_id(::google::protobuf::uint32 value);

  // optional uint32 action_score = 2;
  bool has_action_score() const;
  void clear_action_score();
  static const int kActionScoreFieldNumber = 2;
  ::google::protobuf::uint32 action_score() const;
  void set_action_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.ActionRewardEvent)
 private:
  void set_has_action_id();
  void clear_has_action_id();
  void set_has_action_score();
  void clear_has_action_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 action_id_;
  ::google::protobuf::uint32 action_score_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.MysteryItemReceivedEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent();

  CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent(const CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    268;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool community_goal_item = 1;
  bool has_community_goal_item() const;
  void clear_community_goal_item();
  static const int kCommunityGoalItemFieldNumber = 1;
  bool community_goal_item() const;
  void set_community_goal_item(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.MysteryItemReceivedEvent)
 private:
  void set_has_community_goal_item();
  void clear_has_community_goal_item();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool community_goal_item_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.CorrectPredictionEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent();

  CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent(const CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    269;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prediction_id = 1;
  bool has_prediction_id() const;
  void clear_prediction_id();
  static const int kPredictionIdFieldNumber = 1;
  ::google::protobuf::uint32 prediction_id() const;
  void set_prediction_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.CorrectPredictionEvent)
 private:
  void set_has_prediction_id();
  void clear_has_prediction_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 prediction_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.InGamePredictionCorrectEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent();

  CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent(const CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    270;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.InGamePredictionCorrectEvent)
 private:
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.WeekendTourneyPayoutEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent();

  CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent(const CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    271;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 team_gid = 1;
  bool has_team_gid() const;
  void clear_team_gid();
  static const int kTeamGidFieldNumber = 1;
  ::google::protobuf::uint64 team_gid() const;
  void set_team_gid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.WeekendTourneyPayoutEvent)
 private:
  void set_has_team_gid();
  void clear_has_team_gid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 team_gid_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.FantasyRewardEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent();

  CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent(const CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    272;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 percentile = 1;
  bool has_percentile() const;
  void clear_percentile();
  static const int kPercentileFieldNumber = 1;
  ::google::protobuf::uint32 percentile() const;
  void set_percentile(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.FantasyRewardEvent)
 private:
  void set_has_percentile();
  void clear_has_percentile();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 percentile_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.BracketRewardEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent();

  CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent(const CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    273;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct_answers = 1;
  bool has_correct_answers() const;
  void clear_correct_answers();
  static const int kCorrectAnswersFieldNumber = 1;
  ::google::protobuf::uint32 correct_answers() const;
  void set_correct_answers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.BracketRewardEvent)
 private:
  void set_has_correct_answers();
  void clear_has_correct_answers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 correct_answers_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.WeeklyGameEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent();

  CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent(const CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    274;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 points_won = 1;
  bool has_points_won() const;
  void clear_points_won();
  static const int kPointsWonFieldNumber = 1;
  ::google::protobuf::uint32 points_won() const;
  void set_points_won(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.WeeklyGameEvent)
 private:
  void set_has_points_won();
  void clear_has_points_won();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 points_won_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.ExploitCorrectionEvent) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent();

  CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent(const CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent& from);

  inline CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent& operator=(const CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent*>(
               &_CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    275;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 points_corrected = 1;
  bool has_points_corrected() const;
  void clear_points_corrected();
  static const int kPointsCorrectedFieldNumber = 1;
  ::google::protobuf::uint32 points_corrected() const;
  void set_points_corrected(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.ExploitCorrectionEvent)
 private:
  void set_has_points_corrected();
  void clear_has_points_corrected();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 points_corrected_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction();
  virtual ~CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction();

  CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction(const CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& from);

  inline CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& operator=(const CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction*>(
               &_CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    276;

  void Swap(CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.WagerWonEvent wager_won_event = 5;
  bool has_wager_won_event() const;
  void clear_wager_won_event();
  static const int kWagerWonEventFieldNumber = 5;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& wager_won_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* mutable_wager_won_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* release_wager_won_event();
  void set_allocated_wager_won_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* wager_won_event);

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.MysteryItemReceivedEvent mystery_item_received_event = 6;
  bool has_mystery_item_received_event() const;
  void clear_mystery_item_received_event();
  static const int kMysteryItemReceivedEventFieldNumber = 6;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& mystery_item_received_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* mutable_mystery_item_received_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* release_mystery_item_received_event();
  void set_allocated_mystery_item_received_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* mystery_item_received_event);

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent quest_challenge_event = 7;
  bool has_quest_challenge_event() const;
  void clear_quest_challenge_event();
  static const int kQuestChallengeEventFieldNumber = 7;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& quest_challenge_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* mutable_quest_challenge_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* release_quest_challenge_event();
  void set_allocated_quest_challenge_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* quest_challenge_event);

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent tip_given_event = 8;
  bool has_tip_given_event() const;
  void clear_tip_given_event();
  static const int kTipGivenEventFieldNumber = 8;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& tip_given_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* mutable_tip_given_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* release_tip_given_event();
  void set_allocated_tip_given_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* tip_given_event);

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent tip_received_event = 9;
  bool has_tip_received_event() const;
  void clear_tip_received_event();
  static const int kTipReceivedEventFieldNumber = 9;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& tip_received_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* mutable_tip_received_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* release_tip_received_event();
  void set_allocated_tip_received_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* tip_received_event);

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.RecycledItemEvent recycled_item_event = 10;
  bool has_recycled_item_event() const;
  void clear_recycled_item_event();
  static const int kRecycledItemEventFieldNumber = 10;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& recycled_item_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* mutable_recycled_item_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* release_recycled_item_event();
  void set_allocated_recycled_item_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* recycled_item_event);

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.ActionRewardEvent action_reward_event = 11;
  bool has_action_reward_event() const;
  void clear_action_reward_event();
  static const int kActionRewardEventFieldNumber = 11;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent& action_reward_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* mutable_action_reward_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* release_action_reward_event();
  void set_allocated_action_reward_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* action_reward_event);

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.InGamePredictionCorrectEvent in_game_prediction_event = 12;
  bool has_in_game_prediction_event() const;
  void clear_in_game_prediction_event();
  static const int kInGamePredictionEventFieldNumber = 12;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& in_game_prediction_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* mutable_in_game_prediction_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* release_in_game_prediction_event();
  void set_allocated_in_game_prediction_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* in_game_prediction_event);

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.CorrectPredictionEvent prediction_event = 13;
  bool has_prediction_event() const;
  void clear_prediction_event();
  static const int kPredictionEventFieldNumber = 13;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& prediction_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* mutable_prediction_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* release_prediction_event();
  void set_allocated_prediction_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* prediction_event);

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.FantasyRewardEvent fantasy_reward_event = 15;
  bool has_fantasy_reward_event() const;
  void clear_fantasy_reward_event();
  static const int kFantasyRewardEventFieldNumber = 15;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& fantasy_reward_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* mutable_fantasy_reward_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* release_fantasy_reward_event();
  void set_allocated_fantasy_reward_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* fantasy_reward_event);

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.BracketRewardEvent bracket_reward_event = 16;
  bool has_bracket_reward_event() const;
  void clear_bracket_reward_event();
  static const int kBracketRewardEventFieldNumber = 16;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& bracket_reward_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* mutable_bracket_reward_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* release_bracket_reward_event();
  void set_allocated_bracket_reward_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* bracket_reward_event);

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.WeeklyGameEvent weekly_game_event = 19;
  bool has_weekly_game_event() const;
  void clear_weekly_game_event();
  static const int kWeeklyGameEventFieldNumber = 19;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent& weekly_game_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* mutable_weekly_game_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* release_weekly_game_event();
  void set_allocated_weekly_game_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* weekly_game_event);

  // optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.ExploitCorrectionEvent exploit_correction_event = 20;
  bool has_exploit_correction_event() const;
  void clear_exploit_correction_event();
  static const int kExploitCorrectionEventFieldNumber = 20;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent& exploit_correction_event() const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* mutable_exploit_correction_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* release_exploit_correction_event();
  void set_allocated_exploit_correction_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* exploit_correction_event);

  // optional uint32 time = 1;
  bool has_time() const;
  void clear_time();
  static const int kTimeFieldNumber = 1;
  ::google::protobuf::uint32 time() const;
  void set_time(::google::protobuf::uint32 value);

  // optional int32 event_points = 2;
  bool has_event_points() const;
  void clear_event_points();
  static const int kEventPointsFieldNumber = 2;
  ::google::protobuf::int32 event_points() const;
  void set_event_points(::google::protobuf::int32 value);

  // optional bool compendium_activated_event = 3;
  bool has_compendium_activated_event() const;
  void clear_compendium_activated_event();
  static const int kCompendiumActivatedEventFieldNumber = 3;
  bool compendium_activated_event() const;
  void set_compendium_activated_event(bool value);

  // optional bool point_item_used_event = 4;
  bool has_point_item_used_event() const;
  void clear_point_item_used_event();
  static const int kPointItemUsedEventFieldNumber = 4;
  bool point_item_used_event() const;
  void set_point_item_used_event(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction)
 private:
  void set_has_time();
  void clear_has_time();
  void set_has_event_points();
  void clear_has_event_points();
  void set_has_compendium_activated_event();
  void clear_has_compendium_activated_event();
  void set_has_point_item_used_event();
  void clear_has_point_item_used_event();
  void set_has_wager_won_event();
  void clear_has_wager_won_event();
  void set_has_mystery_item_received_event();
  void clear_has_mystery_item_received_event();
  void set_has_quest_challenge_event();
  void clear_has_quest_challenge_event();
  void set_has_tip_given_event();
  void clear_has_tip_given_event();
  void set_has_tip_received_event();
  void clear_has_tip_received_event();
  void set_has_recycled_item_event();
  void clear_has_recycled_item_event();
  void set_has_action_reward_event();
  void clear_has_action_reward_event();
  void set_has_in_game_prediction_event();
  void clear_has_in_game_prediction_event();
  void set_has_prediction_event();
  void clear_has_prediction_event();
  void set_has_fantasy_reward_event();
  void clear_has_fantasy_reward_event();
  void set_has_bracket_reward_event();
  void clear_has_bracket_reward_event();
  void set_has_weekly_game_event();
  void clear_has_weekly_game_event();
  void set_has_exploit_correction_event();
  void clear_has_exploit_correction_event();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* wager_won_event_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* mystery_item_received_event_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* quest_challenge_event_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* tip_given_event_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* tip_received_event_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* recycled_item_event_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* action_reward_event_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* in_game_prediction_event_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* prediction_event_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* fantasy_reward_event_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* bracket_reward_event_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* weekly_game_event_;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* exploit_correction_event_;
  ::google::protobuf::uint32 time_;
  ::google::protobuf::int32 event_points_;
  bool compendium_activated_event_;
  bool point_item_used_event_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestEventPointLogResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestEventPointLogResponse) */ {
 public:
  CMsgClientToGCRequestEventPointLogResponse();
  virtual ~CMsgClientToGCRequestEventPointLogResponse();

  CMsgClientToGCRequestEventPointLogResponse(const CMsgClientToGCRequestEventPointLogResponse& from);

  inline CMsgClientToGCRequestEventPointLogResponse& operator=(const CMsgClientToGCRequestEventPointLogResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestEventPointLogResponse& default_instance();

  static inline const CMsgClientToGCRequestEventPointLogResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestEventPointLogResponse*>(
               &_CMsgClientToGCRequestEventPointLogResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    277;

  void Swap(CMsgClientToGCRequestEventPointLogResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestEventPointLogResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestEventPointLogResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestEventPointLogResponse& from);
  void MergeFrom(const CMsgClientToGCRequestEventPointLogResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestEventPointLogResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent QuestChallengeEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent WagerWonEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent TipGivenEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent TipReceivedEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent RecycledItemEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent ActionRewardEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent MysteryItemReceivedEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent CorrectPredictionEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent InGamePredictionCorrectEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent WeekendTourneyPayoutEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent FantasyRewardEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent BracketRewardEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent WeeklyGameEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent ExploitCorrectionEvent;
  typedef CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction EventPointTransaction;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction transactions = 2;
  int transactions_size() const;
  void clear_transactions();
  static const int kTransactionsFieldNumber = 2;
  const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& transactions(int index) const;
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* mutable_transactions(int index);
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* add_transactions();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction >*
      mutable_transactions();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction >&
      transactions() const;

  // optional bool result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  bool result() const;
  void set_result(bool value);

  // optional uint32 event_id = 3;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 3;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestEventPointLogResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_event_id();
  void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction > transactions_;
  bool result_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCPublishUserStat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCPublishUserStat) */ {
 public:
  CMsgClientToGCPublishUserStat();
  virtual ~CMsgClientToGCPublishUserStat();

  CMsgClientToGCPublishUserStat(const CMsgClientToGCPublishUserStat& from);

  inline CMsgClientToGCPublishUserStat& operator=(const CMsgClientToGCPublishUserStat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCPublishUserStat& default_instance();

  static inline const CMsgClientToGCPublishUserStat* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCPublishUserStat*>(
               &_CMsgClientToGCPublishUserStat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    278;

  void Swap(CMsgClientToGCPublishUserStat* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCPublishUserStat* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCPublishUserStat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCPublishUserStat& from);
  void MergeFrom(const CMsgClientToGCPublishUserStat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCPublishUserStat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 reference_data = 2;
  bool has_reference_data() const;
  void clear_reference_data();
  static const int kReferenceDataFieldNumber = 2;
  ::google::protobuf::uint64 reference_data() const;
  void set_reference_data(::google::protobuf::uint64 value);

  // optional uint32 user_stats_event = 1;
  bool has_user_stats_event() const;
  void clear_user_stats_event();
  static const int kUserStatsEventFieldNumber = 1;
  ::google::protobuf::uint32 user_stats_event() const;
  void set_user_stats_event(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCPublishUserStat)
 private:
  void set_has_user_stats_event();
  void clear_has_user_stats_event();
  void set_has_reference_data();
  void clear_has_reference_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 reference_data_;
  ::google::protobuf::uint32 user_stats_event_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCAddTI6TreeProgress : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCAddTI6TreeProgress) */ {
 public:
  CMsgClientToGCAddTI6TreeProgress();
  virtual ~CMsgClientToGCAddTI6TreeProgress();

  CMsgClientToGCAddTI6TreeProgress(const CMsgClientToGCAddTI6TreeProgress& from);

  inline CMsgClientToGCAddTI6TreeProgress& operator=(const CMsgClientToGCAddTI6TreeProgress& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCAddTI6TreeProgress& default_instance();

  static inline const CMsgClientToGCAddTI6TreeProgress* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCAddTI6TreeProgress*>(
               &_CMsgClientToGCAddTI6TreeProgress_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    279;

  void Swap(CMsgClientToGCAddTI6TreeProgress* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCAddTI6TreeProgress* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCAddTI6TreeProgress* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCAddTI6TreeProgress& from);
  void MergeFrom(const CMsgClientToGCAddTI6TreeProgress& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCAddTI6TreeProgress* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trees = 1;
  bool has_trees() const;
  void clear_trees();
  static const int kTreesFieldNumber = 1;
  ::google::protobuf::uint32 trees() const;
  void set_trees(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCAddTI6TreeProgress)
 private:
  void set_has_trees();
  void clear_has_trees();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 trees_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestLinaPlaysRemaining : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestLinaPlaysRemaining) */ {
 public:
  CMsgClientToGCRequestLinaPlaysRemaining();
  virtual ~CMsgClientToGCRequestLinaPlaysRemaining();

  CMsgClientToGCRequestLinaPlaysRemaining(const CMsgClientToGCRequestLinaPlaysRemaining& from);

  inline CMsgClientToGCRequestLinaPlaysRemaining& operator=(const CMsgClientToGCRequestLinaPlaysRemaining& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestLinaPlaysRemaining& default_instance();

  static inline const CMsgClientToGCRequestLinaPlaysRemaining* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestLinaPlaysRemaining*>(
               &_CMsgClientToGCRequestLinaPlaysRemaining_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    280;

  void Swap(CMsgClientToGCRequestLinaPlaysRemaining* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestLinaPlaysRemaining* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestLinaPlaysRemaining* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestLinaPlaysRemaining& from);
  void MergeFrom(const CMsgClientToGCRequestLinaPlaysRemaining& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestLinaPlaysRemaining* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestLinaPlaysRemaining)
 private:
  void set_has_event_id();
  void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestLinaPlaysRemainingResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestLinaPlaysRemainingResponse) */ {
 public:
  CMsgClientToGCRequestLinaPlaysRemainingResponse();
  virtual ~CMsgClientToGCRequestLinaPlaysRemainingResponse();

  CMsgClientToGCRequestLinaPlaysRemainingResponse(const CMsgClientToGCRequestLinaPlaysRemainingResponse& from);

  inline CMsgClientToGCRequestLinaPlaysRemainingResponse& operator=(const CMsgClientToGCRequestLinaPlaysRemainingResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestLinaPlaysRemainingResponse& default_instance();

  static inline const CMsgClientToGCRequestLinaPlaysRemainingResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestLinaPlaysRemainingResponse*>(
               &_CMsgClientToGCRequestLinaPlaysRemainingResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    281;

  void Swap(CMsgClientToGCRequestLinaPlaysRemainingResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestLinaPlaysRemainingResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestLinaPlaysRemainingResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestLinaPlaysRemainingResponse& from);
  void MergeFrom(const CMsgClientToGCRequestLinaPlaysRemainingResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestLinaPlaysRemainingResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 plays_remaining = 1;
  bool has_plays_remaining() const;
  void clear_plays_remaining();
  static const int kPlaysRemainingFieldNumber = 1;
  ::google::protobuf::uint32 plays_remaining() const;
  void set_plays_remaining(::google::protobuf::uint32 value);

  // optional uint32 plays_total = 2;
  bool has_plays_total() const;
  void clear_plays_total();
  static const int kPlaysTotalFieldNumber = 2;
  ::google::protobuf::uint32 plays_total() const;
  void set_plays_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestLinaPlaysRemainingResponse)
 private:
  void set_has_plays_remaining();
  void clear_has_plays_remaining();
  void set_has_plays_total();
  void clear_has_plays_total();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 plays_remaining_;
  ::google::protobuf::uint32 plays_total_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestLinaGameResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestLinaGameResult) */ {
 public:
  CMsgClientToGCRequestLinaGameResult();
  virtual ~CMsgClientToGCRequestLinaGameResult();

  CMsgClientToGCRequestLinaGameResult(const CMsgClientToGCRequestLinaGameResult& from);

  inline CMsgClientToGCRequestLinaGameResult& operator=(const CMsgClientToGCRequestLinaGameResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestLinaGameResult& default_instance();

  static inline const CMsgClientToGCRequestLinaGameResult* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestLinaGameResult*>(
               &_CMsgClientToGCRequestLinaGameResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    282;

  void Swap(CMsgClientToGCRequestLinaGameResult* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestLinaGameResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestLinaGameResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestLinaGameResult& from);
  void MergeFrom(const CMsgClientToGCRequestLinaGameResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestLinaGameResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 slot_chosen = 2;
  bool has_slot_chosen() const;
  void clear_slot_chosen();
  static const int kSlotChosenFieldNumber = 2;
  ::google::protobuf::uint32 slot_chosen() const;
  void set_slot_chosen(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestLinaGameResult)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_slot_chosen();
  void clear_has_slot_chosen();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int event_id_;
  ::google::protobuf::uint32 slot_chosen_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestLinaGameResultResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestLinaGameResultResponse) */ {
 public:
  CMsgClientToGCRequestLinaGameResultResponse();
  virtual ~CMsgClientToGCRequestLinaGameResultResponse();

  CMsgClientToGCRequestLinaGameResultResponse(const CMsgClientToGCRequestLinaGameResultResponse& from);

  inline CMsgClientToGCRequestLinaGameResultResponse& operator=(const CMsgClientToGCRequestLinaGameResultResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestLinaGameResultResponse& default_instance();

  static inline const CMsgClientToGCRequestLinaGameResultResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestLinaGameResultResponse*>(
               &_CMsgClientToGCRequestLinaGameResultResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    283;

  void Swap(CMsgClientToGCRequestLinaGameResultResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestLinaGameResultResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestLinaGameResultResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestLinaGameResultResponse& from);
  void MergeFrom(const CMsgClientToGCRequestLinaGameResultResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestLinaGameResultResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestLinaGameResultResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestSlarkGameResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestSlarkGameResult) */ {
 public:
  CMsgClientToGCRequestSlarkGameResult();
  virtual ~CMsgClientToGCRequestSlarkGameResult();

  CMsgClientToGCRequestSlarkGameResult(const CMsgClientToGCRequestSlarkGameResult& from);

  inline CMsgClientToGCRequestSlarkGameResult& operator=(const CMsgClientToGCRequestSlarkGameResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestSlarkGameResult& default_instance();

  static inline const CMsgClientToGCRequestSlarkGameResult* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestSlarkGameResult*>(
               &_CMsgClientToGCRequestSlarkGameResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    284;

  void Swap(CMsgClientToGCRequestSlarkGameResult* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestSlarkGameResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestSlarkGameResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestSlarkGameResult& from);
  void MergeFrom(const CMsgClientToGCRequestSlarkGameResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestSlarkGameResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::proto::dota::EEvent event_id() const;
  void set_event_id(::proto::dota::EEvent value);

  // optional uint32 slot_chosen = 2;
  bool has_slot_chosen() const;
  void clear_slot_chosen();
  static const int kSlotChosenFieldNumber = 2;
  ::google::protobuf::uint32 slot_chosen() const;
  void set_slot_chosen(::google::protobuf::uint32 value);

  // optional uint32 week = 3;
  bool has_week() const;
  void clear_week();
  static const int kWeekFieldNumber = 3;
  ::google::protobuf::uint32 week() const;
  void set_week(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestSlarkGameResult)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_slot_chosen();
  void clear_has_slot_chosen();
  void set_has_week();
  void clear_has_week();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int event_id_;
  ::google::protobuf::uint32 slot_chosen_;
  ::google::protobuf::uint32 week_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRequestSlarkGameResultResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRequestSlarkGameResultResponse) */ {
 public:
  CMsgClientToGCRequestSlarkGameResultResponse();
  virtual ~CMsgClientToGCRequestSlarkGameResultResponse();

  CMsgClientToGCRequestSlarkGameResultResponse(const CMsgClientToGCRequestSlarkGameResultResponse& from);

  inline CMsgClientToGCRequestSlarkGameResultResponse& operator=(const CMsgClientToGCRequestSlarkGameResultResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRequestSlarkGameResultResponse& default_instance();

  static inline const CMsgClientToGCRequestSlarkGameResultResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRequestSlarkGameResultResponse*>(
               &_CMsgClientToGCRequestSlarkGameResultResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    285;

  void Swap(CMsgClientToGCRequestSlarkGameResultResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRequestSlarkGameResultResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRequestSlarkGameResultResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRequestSlarkGameResultResponse& from);
  void MergeFrom(const CMsgClientToGCRequestSlarkGameResultResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRequestSlarkGameResultResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 points_won = 1;
  bool has_points_won() const;
  void clear_points_won();
  static const int kPointsWonFieldNumber = 1;
  ::google::protobuf::uint32 points_won() const;
  void set_points_won(::google::protobuf::uint32 value);

  // optional bool aura_won = 2;
  bool has_aura_won() const;
  void clear_aura_won();
  static const int kAuraWonFieldNumber = 2;
  bool aura_won() const;
  void set_aura_won(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRequestSlarkGameResultResponse)
 private:
  void set_has_points_won();
  void clear_has_points_won();
  void set_has_aura_won();
  void clear_has_aura_won();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 points_won_;
  bool aura_won_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientQuestProgressUpdated_Challenge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge) */ {
 public:
  CMsgGCToClientQuestProgressUpdated_Challenge();
  virtual ~CMsgGCToClientQuestProgressUpdated_Challenge();

  CMsgGCToClientQuestProgressUpdated_Challenge(const CMsgGCToClientQuestProgressUpdated_Challenge& from);

  inline CMsgGCToClientQuestProgressUpdated_Challenge& operator=(const CMsgGCToClientQuestProgressUpdated_Challenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientQuestProgressUpdated_Challenge& default_instance();

  static inline const CMsgGCToClientQuestProgressUpdated_Challenge* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientQuestProgressUpdated_Challenge*>(
               &_CMsgGCToClientQuestProgressUpdated_Challenge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    286;

  void Swap(CMsgGCToClientQuestProgressUpdated_Challenge* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientQuestProgressUpdated_Challenge* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientQuestProgressUpdated_Challenge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientQuestProgressUpdated_Challenge& from);
  void MergeFrom(const CMsgGCToClientQuestProgressUpdated_Challenge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientQuestProgressUpdated_Challenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 challenge_id = 1;
  bool has_challenge_id() const;
  void clear_challenge_id();
  static const int kChallengeIdFieldNumber = 1;
  ::google::protobuf::uint32 challenge_id() const;
  void set_challenge_id(::google::protobuf::uint32 value);

  // optional uint32 time_completed = 2;
  bool has_time_completed() const;
  void clear_time_completed();
  static const int kTimeCompletedFieldNumber = 2;
  ::google::protobuf::uint32 time_completed() const;
  void set_time_completed(::google::protobuf::uint32 value);

  // optional uint32 attempts = 3;
  bool has_attempts() const;
  void clear_attempts();
  static const int kAttemptsFieldNumber = 3;
  ::google::protobuf::uint32 attempts() const;
  void set_attempts(::google::protobuf::uint32 value);

  // optional uint32 hero_id = 4;
  bool has_hero_id() const;
  void clear_hero_id();
  static const int kHeroIdFieldNumber = 4;
  ::google::protobuf::uint32 hero_id() const;
  void set_hero_id(::google::protobuf::uint32 value);

  // optional uint32 challenge_type = 5;
  bool has_challenge_type() const;
  void clear_challenge_type();
  static const int kChallengeTypeFieldNumber = 5;
  ::google::protobuf::uint32 challenge_type() const;
  void set_challenge_type(::google::protobuf::uint32 value);

  // optional uint32 quest_rank = 6;
  bool has_quest_rank() const;
  void clear_quest_rank();
  static const int kQuestRankFieldNumber = 6;
  ::google::protobuf::uint32 quest_rank() const;
  void set_quest_rank(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge)
 private:
  void set_has_challenge_id();
  void clear_has_challenge_id();
  void set_has_time_completed();
  void clear_has_time_completed();
  void set_has_attempts();
  void clear_has_attempts();
  void set_has_hero_id();
  void clear_has_hero_id();
  void set_has_challenge_type();
  void clear_has_challenge_type();
  void set_has_quest_rank();
  void clear_has_quest_rank();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 challenge_id_;
  ::google::protobuf::uint32 time_completed_;
  ::google::protobuf::uint32 attempts_;
  ::google::protobuf::uint32 hero_id_;
  ::google::protobuf::uint32 challenge_type_;
  ::google::protobuf::uint32 quest_rank_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientQuestProgressUpdated : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientQuestProgressUpdated) */ {
 public:
  CMsgGCToClientQuestProgressUpdated();
  virtual ~CMsgGCToClientQuestProgressUpdated();

  CMsgGCToClientQuestProgressUpdated(const CMsgGCToClientQuestProgressUpdated& from);

  inline CMsgGCToClientQuestProgressUpdated& operator=(const CMsgGCToClientQuestProgressUpdated& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientQuestProgressUpdated& default_instance();

  static inline const CMsgGCToClientQuestProgressUpdated* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientQuestProgressUpdated*>(
               &_CMsgGCToClientQuestProgressUpdated_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    287;

  void Swap(CMsgGCToClientQuestProgressUpdated* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientQuestProgressUpdated* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientQuestProgressUpdated* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientQuestProgressUpdated& from);
  void MergeFrom(const CMsgGCToClientQuestProgressUpdated& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientQuestProgressUpdated* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientQuestProgressUpdated_Challenge Challenge;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge completed_challenges = 2;
  int completed_challenges_size() const;
  void clear_completed_challenges();
  static const int kCompletedChallengesFieldNumber = 2;
  const ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge& completed_challenges(int index) const;
  ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge* mutable_completed_challenges(int index);
  ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge* add_completed_challenges();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge >*
      mutable_completed_challenges();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge >&
      completed_challenges() const;

  // optional uint32 quest_id = 1;
  bool has_quest_id() const;
  void clear_quest_id();
  static const int kQuestIdFieldNumber = 1;
  ::google::protobuf::uint32 quest_id() const;
  void set_quest_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientQuestProgressUpdated)
 private:
  void set_has_quest_id();
  void clear_has_quest_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge > completed_challenges_;
  ::google::protobuf::uint32 quest_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTARedeemItem : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARedeemItem) */ {
 public:
  CMsgDOTARedeemItem();
  virtual ~CMsgDOTARedeemItem();

  CMsgDOTARedeemItem(const CMsgDOTARedeemItem& from);

  inline CMsgDOTARedeemItem& operator=(const CMsgDOTARedeemItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARedeemItem& default_instance();

  static inline const CMsgDOTARedeemItem* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARedeemItem*>(
               &_CMsgDOTARedeemItem_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    288;

  void Swap(CMsgDOTARedeemItem* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARedeemItem* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTARedeemItem* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTARedeemItem& from);
  void MergeFrom(const CMsgDOTARedeemItem& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTARedeemItem* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 currency_id = 1;
  bool has_currency_id() const;
  void clear_currency_id();
  static const int kCurrencyIdFieldNumber = 1;
  ::google::protobuf::uint64 currency_id() const;
  void set_currency_id(::google::protobuf::uint64 value);

  // optional uint32 purchase_def = 2;
  bool has_purchase_def() const;
  void clear_purchase_def();
  static const int kPurchaseDefFieldNumber = 2;
  ::google::protobuf::uint32 purchase_def() const;
  void set_purchase_def(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARedeemItem)
 private:
  void set_has_currency_id();
  void clear_has_currency_id();
  void set_has_purchase_def();
  void clear_has_purchase_def();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 currency_id_;
  ::google::protobuf::uint32 purchase_def_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTARedeemItemResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTARedeemItemResponse) */ {
 public:
  CMsgDOTARedeemItemResponse();
  virtual ~CMsgDOTARedeemItemResponse();

  CMsgDOTARedeemItemResponse(const CMsgDOTARedeemItemResponse& from);

  inline CMsgDOTARedeemItemResponse& operator=(const CMsgDOTARedeemItemResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTARedeemItemResponse& default_instance();

  static inline const CMsgDOTARedeemItemResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTARedeemItemResponse*>(
               &_CMsgDOTARedeemItemResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    289;

  void Swap(CMsgDOTARedeemItemResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTARedeemItemResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTARedeemItemResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTARedeemItemResponse& from);
  void MergeFrom(const CMsgDOTARedeemItemResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTARedeemItemResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTARedeemItemResponse_EResultCode EResultCode;
  static const EResultCode k_Succeeded =
    CMsgDOTARedeemItemResponse_EResultCode_k_Succeeded;
  static const EResultCode k_Failed =
    CMsgDOTARedeemItemResponse_EResultCode_k_Failed;
  static inline bool EResultCode_IsValid(int value) {
    return CMsgDOTARedeemItemResponse_EResultCode_IsValid(value);
  }
  static const EResultCode EResultCode_MIN =
    CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MIN;
  static const EResultCode EResultCode_MAX =
    CMsgDOTARedeemItemResponse_EResultCode_EResultCode_MAX;
  static const int EResultCode_ARRAYSIZE =
    CMsgDOTARedeemItemResponse_EResultCode_EResultCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResultCode_descriptor() {
    return CMsgDOTARedeemItemResponse_EResultCode_descriptor();
  }
  static inline const ::std::string& EResultCode_Name(EResultCode value) {
    return CMsgDOTARedeemItemResponse_EResultCode_Name(value);
  }
  static inline bool EResultCode_Parse(const ::std::string& name,
      EResultCode* value) {
    return CMsgDOTARedeemItemResponse_EResultCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTARedeemItemResponse.EResultCode response = 1 [default = k_Succeeded];
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 1;
  ::proto::dota::CMsgDOTARedeemItemResponse_EResultCode response() const;
  void set_response(::proto::dota::CMsgDOTARedeemItemResponse_EResultCode value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTARedeemItemResponse)
 private:
  void set_has_response();
  void clear_has_response();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int response_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPerfectWorldUserLookupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPerfectWorldUserLookupRequest) */ {
 public:
  CMsgPerfectWorldUserLookupRequest();
  virtual ~CMsgPerfectWorldUserLookupRequest();

  CMsgPerfectWorldUserLookupRequest(const CMsgPerfectWorldUserLookupRequest& from);

  inline CMsgPerfectWorldUserLookupRequest& operator=(const CMsgPerfectWorldUserLookupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPerfectWorldUserLookupRequest& default_instance();

  static inline const CMsgPerfectWorldUserLookupRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgPerfectWorldUserLookupRequest*>(
               &_CMsgPerfectWorldUserLookupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    290;

  void Swap(CMsgPerfectWorldUserLookupRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgPerfectWorldUserLookupRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPerfectWorldUserLookupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPerfectWorldUserLookupRequest& from);
  void MergeFrom(const CMsgPerfectWorldUserLookupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPerfectWorldUserLookupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_name = 1;
  bool has_user_name() const;
  void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPerfectWorldUserLookupRequest)
 private:
  void set_has_user_name();
  void clear_has_user_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPerfectWorldUserLookupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgPerfectWorldUserLookupResponse) */ {
 public:
  CMsgPerfectWorldUserLookupResponse();
  virtual ~CMsgPerfectWorldUserLookupResponse();

  CMsgPerfectWorldUserLookupResponse(const CMsgPerfectWorldUserLookupResponse& from);

  inline CMsgPerfectWorldUserLookupResponse& operator=(const CMsgPerfectWorldUserLookupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPerfectWorldUserLookupResponse& default_instance();

  static inline const CMsgPerfectWorldUserLookupResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgPerfectWorldUserLookupResponse*>(
               &_CMsgPerfectWorldUserLookupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    291;

  void Swap(CMsgPerfectWorldUserLookupResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgPerfectWorldUserLookupResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPerfectWorldUserLookupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPerfectWorldUserLookupResponse& from);
  void MergeFrom(const CMsgPerfectWorldUserLookupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPerfectWorldUserLookupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgPerfectWorldUserLookupResponse_EResultCode EResultCode;
  static const EResultCode SUCCESS_ACCOUNT_FOUND =
    CMsgPerfectWorldUserLookupResponse_EResultCode_SUCCESS_ACCOUNT_FOUND;
  static const EResultCode ERROR_UNKNOWN =
    CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_UNKNOWN;
  static const EResultCode ERROR_USER_NAME_WRONG_FORMAT =
    CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_USER_NAME_WRONG_FORMAT;
  static const EResultCode ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND =
    CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_PERFECT_WORLD_ACCOUNT_FOUND;
  static const EResultCode ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND =
    CMsgPerfectWorldUserLookupResponse_EResultCode_ERROR_NO_LINKED_STEAM_ACCOUNT_FOUND;
  static inline bool EResultCode_IsValid(int value) {
    return CMsgPerfectWorldUserLookupResponse_EResultCode_IsValid(value);
  }
  static const EResultCode EResultCode_MIN =
    CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MIN;
  static const EResultCode EResultCode_MAX =
    CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_MAX;
  static const int EResultCode_ARRAYSIZE =
    CMsgPerfectWorldUserLookupResponse_EResultCode_EResultCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResultCode_descriptor() {
    return CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor();
  }
  static inline const ::std::string& EResultCode_Name(EResultCode value) {
    return CMsgPerfectWorldUserLookupResponse_EResultCode_Name(value);
  }
  static inline bool EResultCode_Parse(const ::std::string& name,
      EResultCode* value) {
    return CMsgPerfectWorldUserLookupResponse_EResultCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];
  bool has_result_code() const;
  void clear_result_code();
  static const int kResultCodeFieldNumber = 1;
  ::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode result_code() const;
  void set_result_code(::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgPerfectWorldUserLookupResponse)
 private:
  void set_has_result_code();
  void clear_has_result_code();
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_code_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgNexonPartnerUpdate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgNexonPartnerUpdate) */ {
 public:
  CMsgNexonPartnerUpdate();
  virtual ~CMsgNexonPartnerUpdate();

  CMsgNexonPartnerUpdate(const CMsgNexonPartnerUpdate& from);

  inline CMsgNexonPartnerUpdate& operator=(const CMsgNexonPartnerUpdate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNexonPartnerUpdate& default_instance();

  static inline const CMsgNexonPartnerUpdate* internal_default_instance() {
    return reinterpret_cast<const CMsgNexonPartnerUpdate*>(
               &_CMsgNexonPartnerUpdate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    292;

  void Swap(CMsgNexonPartnerUpdate* other);

  // implements Message ----------------------------------------------

  inline CMsgNexonPartnerUpdate* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgNexonPartnerUpdate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgNexonPartnerUpdate& from);
  void MergeFrom(const CMsgNexonPartnerUpdate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgNexonPartnerUpdate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 messagetype = 1;
  bool has_messagetype() const;
  void clear_messagetype();
  static const int kMessagetypeFieldNumber = 1;
  ::google::protobuf::uint32 messagetype() const;
  void set_messagetype(::google::protobuf::uint32 value);

  // optional uint32 timeremaining = 2;
  bool has_timeremaining() const;
  void clear_timeremaining();
  static const int kTimeremainingFieldNumber = 2;
  ::google::protobuf::uint32 timeremaining() const;
  void set_timeremaining(::google::protobuf::uint32 value);

  // optional bool terminate = 3;
  bool has_terminate() const;
  void clear_terminate();
  static const int kTerminateFieldNumber = 3;
  bool terminate() const;
  void set_terminate(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgNexonPartnerUpdate)
 private:
  void set_has_messagetype();
  void clear_has_messagetype();
  void set_has_timeremaining();
  void clear_has_timeremaining();
  void set_has_terminate();
  void clear_has_terminate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 messagetype_;
  ::google::protobuf::uint32 timeremaining_;
  bool terminate_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgMakeOffering : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgMakeOffering) */ {
 public:
  CMsgMakeOffering();
  virtual ~CMsgMakeOffering();

  CMsgMakeOffering(const CMsgMakeOffering& from);

  inline CMsgMakeOffering& operator=(const CMsgMakeOffering& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMakeOffering& default_instance();

  static inline const CMsgMakeOffering* internal_default_instance() {
    return reinterpret_cast<const CMsgMakeOffering*>(
               &_CMsgMakeOffering_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    293;

  void Swap(CMsgMakeOffering* other);

  // implements Message ----------------------------------------------

  inline CMsgMakeOffering* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMakeOffering* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMakeOffering& from);
  void MergeFrom(const CMsgMakeOffering& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMakeOffering* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 1;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 1;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgMakeOffering)
 private:
  void set_has_item_id();
  void clear_has_item_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgRequestOfferings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRequestOfferings) */ {
 public:
  CMsgRequestOfferings();
  virtual ~CMsgRequestOfferings();

  CMsgRequestOfferings(const CMsgRequestOfferings& from);

  inline CMsgRequestOfferings& operator=(const CMsgRequestOfferings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestOfferings& default_instance();

  static inline const CMsgRequestOfferings* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestOfferings*>(
               &_CMsgRequestOfferings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    294;

  void Swap(CMsgRequestOfferings* other);

  // implements Message ----------------------------------------------

  inline CMsgRequestOfferings* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgRequestOfferings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgRequestOfferings& from);
  void MergeFrom(const CMsgRequestOfferings& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgRequestOfferings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRequestOfferings)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgRequestOfferingsResponse_NewYearsOffering : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering) */ {
 public:
  CMsgRequestOfferingsResponse_NewYearsOffering();
  virtual ~CMsgRequestOfferingsResponse_NewYearsOffering();

  CMsgRequestOfferingsResponse_NewYearsOffering(const CMsgRequestOfferingsResponse_NewYearsOffering& from);

  inline CMsgRequestOfferingsResponse_NewYearsOffering& operator=(const CMsgRequestOfferingsResponse_NewYearsOffering& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestOfferingsResponse_NewYearsOffering& default_instance();

  static inline const CMsgRequestOfferingsResponse_NewYearsOffering* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestOfferingsResponse_NewYearsOffering*>(
               &_CMsgRequestOfferingsResponse_NewYearsOffering_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    295;

  void Swap(CMsgRequestOfferingsResponse_NewYearsOffering* other);

  // implements Message ----------------------------------------------

  inline CMsgRequestOfferingsResponse_NewYearsOffering* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgRequestOfferingsResponse_NewYearsOffering* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgRequestOfferingsResponse_NewYearsOffering& from);
  void MergeFrom(const CMsgRequestOfferingsResponse_NewYearsOffering& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgRequestOfferingsResponse_NewYearsOffering* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 item_id = 2;
  bool has_item_id() const;
  void clear_item_id();
  static const int kItemIdFieldNumber = 2;
  ::google::protobuf::uint64 item_id() const;
  void set_item_id(::google::protobuf::uint64 value);

  // optional uint32 def_index = 1;
  bool has_def_index() const;
  void clear_def_index();
  static const int kDefIndexFieldNumber = 1;
  ::google::protobuf::uint32 def_index() const;
  void set_def_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering)
 private:
  void set_has_def_index();
  void clear_has_def_index();
  void set_has_item_id();
  void clear_has_item_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 item_id_;
  ::google::protobuf::uint32 def_index_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgRequestOfferingsResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgRequestOfferingsResponse) */ {
 public:
  CMsgRequestOfferingsResponse();
  virtual ~CMsgRequestOfferingsResponse();

  CMsgRequestOfferingsResponse(const CMsgRequestOfferingsResponse& from);

  inline CMsgRequestOfferingsResponse& operator=(const CMsgRequestOfferingsResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestOfferingsResponse& default_instance();

  static inline const CMsgRequestOfferingsResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestOfferingsResponse*>(
               &_CMsgRequestOfferingsResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    296;

  void Swap(CMsgRequestOfferingsResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgRequestOfferingsResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgRequestOfferingsResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgRequestOfferingsResponse& from);
  void MergeFrom(const CMsgRequestOfferingsResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgRequestOfferingsResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgRequestOfferingsResponse_NewYearsOffering NewYearsOffering;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;
  int offerings_size() const;
  void clear_offerings();
  static const int kOfferingsFieldNumber = 1;
  const ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering& offerings(int index) const;
  ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering* mutable_offerings(int index);
  ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering* add_offerings();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering >*
      mutable_offerings();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering >&
      offerings() const;

  // optional bool completed = 2;
  bool has_completed() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 2;
  bool completed() const;
  void set_completed(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgRequestOfferingsResponse)
 private:
  void set_has_completed();
  void clear_has_completed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering > offerings_;
  bool completed_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAPCBangTimedReward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAPCBangTimedReward) */ {
 public:
  CMsgDOTAPCBangTimedReward();
  virtual ~CMsgDOTAPCBangTimedReward();

  CMsgDOTAPCBangTimedReward(const CMsgDOTAPCBangTimedReward& from);

  inline CMsgDOTAPCBangTimedReward& operator=(const CMsgDOTAPCBangTimedReward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAPCBangTimedReward& default_instance();

  static inline const CMsgDOTAPCBangTimedReward* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAPCBangTimedReward*>(
               &_CMsgDOTAPCBangTimedReward_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    297;

  void Swap(CMsgDOTAPCBangTimedReward* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAPCBangTimedReward* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAPCBangTimedReward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAPCBangTimedReward& from);
  void MergeFrom(const CMsgDOTAPCBangTimedReward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAPCBangTimedReward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string persona = 1;
  bool has_persona() const;
  void clear_persona();
  static const int kPersonaFieldNumber = 1;
  const ::std::string& persona() const;
  void set_persona(const ::std::string& value);
  #if LANG_CXX11
  void set_persona(::std::string&& value);
  #endif
  void set_persona(const char* value);
  void set_persona(const char* value, size_t size);
  ::std::string* mutable_persona();
  ::std::string* release_persona();
  void set_allocated_persona(::std::string* persona);

  // optional string pcbangname = 3;
  bool has_pcbangname() const;
  void clear_pcbangname();
  static const int kPcbangnameFieldNumber = 3;
  const ::std::string& pcbangname() const;
  void set_pcbangname(const ::std::string& value);
  #if LANG_CXX11
  void set_pcbangname(::std::string&& value);
  #endif
  void set_pcbangname(const char* value);
  void set_pcbangname(const char* value, size_t size);
  ::std::string* mutable_pcbangname();
  ::std::string* release_pcbangname();
  void set_allocated_pcbangname(::std::string* pcbangname);

  // optional uint32 itemdef = 2;
  bool has_itemdef() const;
  void clear_itemdef();
  static const int kItemdefFieldNumber = 2;
  ::google::protobuf::uint32 itemdef() const;
  void set_itemdef(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAPCBangTimedReward)
 private:
  void set_has_persona();
  void clear_has_persona();
  void set_has_itemdef();
  void clear_has_itemdef();
  void set_has_pcbangname();
  void clear_has_pcbangname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr persona_;
  ::google::protobuf::internal::ArenaStringPtr pcbangname_;
  ::google::protobuf::uint32 itemdef_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumInGamePredictionResults_PredictionResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult) */ {
 public:
  CMsgDOTACompendiumInGamePredictionResults_PredictionResult();
  virtual ~CMsgDOTACompendiumInGamePredictionResults_PredictionResult();

  CMsgDOTACompendiumInGamePredictionResults_PredictionResult(const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& from);

  inline CMsgDOTACompendiumInGamePredictionResults_PredictionResult& operator=(const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& default_instance();

  static inline const CMsgDOTACompendiumInGamePredictionResults_PredictionResult* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumInGamePredictionResults_PredictionResult*>(
               &_CMsgDOTACompendiumInGamePredictionResults_PredictionResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    298;

  void Swap(CMsgDOTACompendiumInGamePredictionResults_PredictionResult* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumInGamePredictionResults_PredictionResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTACompendiumInGamePredictionResults_PredictionResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& from);
  void MergeFrom(const CMsgDOTACompendiumInGamePredictionResults_PredictionResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTACompendiumInGamePredictionResults_PredictionResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prediction_id = 1;
  bool has_prediction_id() const;
  void clear_prediction_id();
  static const int kPredictionIdFieldNumber = 1;
  ::google::protobuf::uint32 prediction_id() const;
  void set_prediction_id(::google::protobuf::uint32 value);

  // optional uint32 prediction_value = 2;
  bool has_prediction_value() const;
  void clear_prediction_value();
  static const int kPredictionValueFieldNumber = 2;
  ::google::protobuf::uint32 prediction_value() const;
  void set_prediction_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult)
 private:
  void set_has_prediction_id();
  void clear_has_prediction_id();
  void set_has_prediction_value();
  void clear_has_prediction_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 prediction_id_;
  ::google::protobuf::uint32 prediction_value_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTACompendiumInGamePredictionResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTACompendiumInGamePredictionResults) */ {
 public:
  CMsgDOTACompendiumInGamePredictionResults();
  virtual ~CMsgDOTACompendiumInGamePredictionResults();

  CMsgDOTACompendiumInGamePredictionResults(const CMsgDOTACompendiumInGamePredictionResults& from);

  inline CMsgDOTACompendiumInGamePredictionResults& operator=(const CMsgDOTACompendiumInGamePredictionResults& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTACompendiumInGamePredictionResults& default_instance();

  static inline const CMsgDOTACompendiumInGamePredictionResults* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTACompendiumInGamePredictionResults*>(
               &_CMsgDOTACompendiumInGamePredictionResults_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    299;

  void Swap(CMsgDOTACompendiumInGamePredictionResults* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTACompendiumInGamePredictionResults* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTACompendiumInGamePredictionResults* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTACompendiumInGamePredictionResults& from);
  void MergeFrom(const CMsgDOTACompendiumInGamePredictionResults& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTACompendiumInGamePredictionResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTACompendiumInGamePredictionResults_PredictionResult PredictionResult;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  const ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult& results(int index) const;
  ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* mutable_results(int index);
  ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* add_results();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult >&
      results() const;

  // optional uint32 league_id = 2;
  bool has_league_id() const;
  void clear_league_id();
  static const int kLeagueIdFieldNumber = 2;
  ::google::protobuf::uint32 league_id() const;
  void set_league_id(::google::protobuf::uint32 value);

  // optional bool predictions_closed = 3;
  bool has_predictions_closed() const;
  void clear_predictions_closed();
  static const int kPredictionsClosedFieldNumber = 3;
  bool predictions_closed() const;
  void set_predictions_closed(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTACompendiumInGamePredictionResults)
 private:
  void set_has_league_id();
  void clear_has_league_id();
  void set_has_predictions_closed();
  void clear_has_predictions_closed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult > results_;
  ::google::protobuf::uint32 league_id_;
  bool predictions_closed_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCSelectCompendiumInGamePrediction_Prediction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction) */ {
 public:
  CMsgClientToGCSelectCompendiumInGamePrediction_Prediction();
  virtual ~CMsgClientToGCSelectCompendiumInGamePrediction_Prediction();

  CMsgClientToGCSelectCompendiumInGamePrediction_Prediction(const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& from);

  inline CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& operator=(const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& default_instance();

  static inline const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction*>(
               &_CMsgClientToGCSelectCompendiumInGamePrediction_Prediction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    300;

  void Swap(CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& from);
  void MergeFrom(const CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 prediction_id = 1;
  bool has_prediction_id() const;
  void clear_prediction_id();
  static const int kPredictionIdFieldNumber = 1;
  ::google::protobuf::uint32 prediction_id() const;
  void set_prediction_id(::google::protobuf::uint32 value);

  // optional uint32 prediction_value = 2;
  bool has_prediction_value() const;
  void clear_prediction_value();
  static const int kPredictionValueFieldNumber = 2;
  ::google::protobuf::uint32 prediction_value() const;
  void set_prediction_value(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction)
 private:
  void set_has_prediction_id();
  void clear_has_prediction_id();
  void set_has_prediction_value();
  void clear_has_prediction_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 prediction_id_;
  ::google::protobuf::uint32 prediction_value_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCSelectCompendiumInGamePrediction : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction) */ {
 public:
  CMsgClientToGCSelectCompendiumInGamePrediction();
  virtual ~CMsgClientToGCSelectCompendiumInGamePrediction();

  CMsgClientToGCSelectCompendiumInGamePrediction(const CMsgClientToGCSelectCompendiumInGamePrediction& from);

  inline CMsgClientToGCSelectCompendiumInGamePrediction& operator=(const CMsgClientToGCSelectCompendiumInGamePrediction& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSelectCompendiumInGamePrediction& default_instance();

  static inline const CMsgClientToGCSelectCompendiumInGamePrediction* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSelectCompendiumInGamePrediction*>(
               &_CMsgClientToGCSelectCompendiumInGamePrediction_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    301;

  void Swap(CMsgClientToGCSelectCompendiumInGamePrediction* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSelectCompendiumInGamePrediction* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCSelectCompendiumInGamePrediction* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCSelectCompendiumInGamePrediction& from);
  void MergeFrom(const CMsgClientToGCSelectCompendiumInGamePrediction& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCSelectCompendiumInGamePrediction* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSelectCompendiumInGamePrediction_Prediction Prediction;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction predictions = 2;
  int predictions_size() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 2;
  const ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& predictions(int index) const;
  ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* mutable_predictions(int index);
  ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* add_predictions();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction >*
      mutable_predictions();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction >&
      predictions() const;

  // optional uint64 match_id = 1;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 1;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction)
 private:
  void set_has_match_id();
  void clear_has_match_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction > predictions_;
  ::google::protobuf::uint64 match_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCSelectCompendiumInGamePredictionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCSelectCompendiumInGamePredictionResponse) */ {
 public:
  CMsgClientToGCSelectCompendiumInGamePredictionResponse();
  virtual ~CMsgClientToGCSelectCompendiumInGamePredictionResponse();

  CMsgClientToGCSelectCompendiumInGamePredictionResponse(const CMsgClientToGCSelectCompendiumInGamePredictionResponse& from);

  inline CMsgClientToGCSelectCompendiumInGamePredictionResponse& operator=(const CMsgClientToGCSelectCompendiumInGamePredictionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCSelectCompendiumInGamePredictionResponse& default_instance();

  static inline const CMsgClientToGCSelectCompendiumInGamePredictionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCSelectCompendiumInGamePredictionResponse*>(
               &_CMsgClientToGCSelectCompendiumInGamePredictionResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    302;

  void Swap(CMsgClientToGCSelectCompendiumInGamePredictionResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCSelectCompendiumInGamePredictionResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCSelectCompendiumInGamePredictionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCSelectCompendiumInGamePredictionResponse& from);
  void MergeFrom(const CMsgClientToGCSelectCompendiumInGamePredictionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCSelectCompendiumInGamePredictionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult EResult;
  static const EResult SUCCESS =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_SUCCESS;
  static const EResult INVALID_MATCH =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_INVALID_MATCH;
  static const EResult PREDICTIONS_ARE_CLOSED =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_PREDICTIONS_ARE_CLOSED;
  static const EResult OTHER_ERROR =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_OTHER_ERROR;
  static inline bool EResult_IsValid(int value) {
    return CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_IsValid(value);
  }
  static const EResult EResult_MIN =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MIN;
  static const EResult EResult_MAX =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_MAX;
  static const int EResult_ARRAYSIZE =
    CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_EResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EResult_descriptor() {
    return CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor();
  }
  static inline const ::std::string& EResult_Name(EResult value) {
    return CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_Name(value);
  }
  static inline bool EResult_Parse(const ::std::string& name,
      EResult* value) {
    return CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCSelectCompendiumInGamePredictionResponse.EResult result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult result() const;
  void set_result(::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCSelectCompendiumInGamePredictionResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCOpenPlayerCardPack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCOpenPlayerCardPack) */ {
 public:
  CMsgClientToGCOpenPlayerCardPack();
  virtual ~CMsgClientToGCOpenPlayerCardPack();

  CMsgClientToGCOpenPlayerCardPack(const CMsgClientToGCOpenPlayerCardPack& from);

  inline CMsgClientToGCOpenPlayerCardPack& operator=(const CMsgClientToGCOpenPlayerCardPack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCOpenPlayerCardPack& default_instance();

  static inline const CMsgClientToGCOpenPlayerCardPack* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCOpenPlayerCardPack*>(
               &_CMsgClientToGCOpenPlayerCardPack_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    303;

  void Swap(CMsgClientToGCOpenPlayerCardPack* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCOpenPlayerCardPack* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCOpenPlayerCardPack* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCOpenPlayerCardPack& from);
  void MergeFrom(const CMsgClientToGCOpenPlayerCardPack& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCOpenPlayerCardPack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_card_pack_item_id = 1;
  bool has_player_card_pack_item_id() const;
  void clear_player_card_pack_item_id();
  static const int kPlayerCardPackItemIdFieldNumber = 1;
  ::google::protobuf::uint64 player_card_pack_item_id() const;
  void set_player_card_pack_item_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCOpenPlayerCardPack)
 private:
  void set_has_player_card_pack_item_id();
  void clear_has_player_card_pack_item_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 player_card_pack_item_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCOpenPlayerCardPackResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse) */ {
 public:
  CMsgClientToGCOpenPlayerCardPackResponse();
  virtual ~CMsgClientToGCOpenPlayerCardPackResponse();

  CMsgClientToGCOpenPlayerCardPackResponse(const CMsgClientToGCOpenPlayerCardPackResponse& from);

  inline CMsgClientToGCOpenPlayerCardPackResponse& operator=(const CMsgClientToGCOpenPlayerCardPackResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCOpenPlayerCardPackResponse& default_instance();

  static inline const CMsgClientToGCOpenPlayerCardPackResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCOpenPlayerCardPackResponse*>(
               &_CMsgClientToGCOpenPlayerCardPackResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    304;

  void Swap(CMsgClientToGCOpenPlayerCardPackResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCOpenPlayerCardPackResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCOpenPlayerCardPackResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCOpenPlayerCardPackResponse& from);
  void MergeFrom(const CMsgClientToGCOpenPlayerCardPackResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCOpenPlayerCardPackResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCOpenPlayerCardPackResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_SUCCESS;
  static const Result ERROR_INTERNAL =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_INTERNAL;
  static const Result ERROR_FAILED_TO_FIND_PACK =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_TO_FIND_PACK;
  static const Result ERROR_ITEM_NOT_CARD_PACK =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_ITEM_NOT_CARD_PACK;
  static const Result ERROR_FAILED_CARD_CREATE =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_ERROR_FAILED_CARD_CREATE;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCOpenPlayerCardPackResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCOpenPlayerCardPackResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCOpenPlayerCardPackResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCOpenPlayerCardPackResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated uint64 player_card_item_ids = 2;
  int player_card_item_ids_size() const;
  void clear_player_card_item_ids();
  static const int kPlayerCardItemIdsFieldNumber = 2;
  ::google::protobuf::uint64 player_card_item_ids(int index) const;
  void set_player_card_item_ids(int index, ::google::protobuf::uint64 value);
  void add_player_card_item_ids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      player_card_item_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_player_card_item_ids();

  // optional .proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > player_card_item_ids_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecyclePlayerCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRecyclePlayerCard) */ {
 public:
  CMsgClientToGCRecyclePlayerCard();
  virtual ~CMsgClientToGCRecyclePlayerCard();

  CMsgClientToGCRecyclePlayerCard(const CMsgClientToGCRecyclePlayerCard& from);

  inline CMsgClientToGCRecyclePlayerCard& operator=(const CMsgClientToGCRecyclePlayerCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRecyclePlayerCard& default_instance();

  static inline const CMsgClientToGCRecyclePlayerCard* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRecyclePlayerCard*>(
               &_CMsgClientToGCRecyclePlayerCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    305;

  void Swap(CMsgClientToGCRecyclePlayerCard* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRecyclePlayerCard* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRecyclePlayerCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRecyclePlayerCard& from);
  void MergeFrom(const CMsgClientToGCRecyclePlayerCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRecyclePlayerCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 player_card_item_id = 1;
  bool has_player_card_item_id() const;
  void clear_player_card_item_id();
  static const int kPlayerCardItemIdFieldNumber = 1;
  ::google::protobuf::uint64 player_card_item_id() const;
  void set_player_card_item_id(::google::protobuf::uint64 value);

  // optional uint32 event_id = 2;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRecyclePlayerCard)
 private:
  void set_has_player_card_item_id();
  void clear_has_player_card_item_id();
  void set_has_event_id();
  void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 player_card_item_id_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCRecyclePlayerCardResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCRecyclePlayerCardResponse) */ {
 public:
  CMsgClientToGCRecyclePlayerCardResponse();
  virtual ~CMsgClientToGCRecyclePlayerCardResponse();

  CMsgClientToGCRecyclePlayerCardResponse(const CMsgClientToGCRecyclePlayerCardResponse& from);

  inline CMsgClientToGCRecyclePlayerCardResponse& operator=(const CMsgClientToGCRecyclePlayerCardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCRecyclePlayerCardResponse& default_instance();

  static inline const CMsgClientToGCRecyclePlayerCardResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCRecyclePlayerCardResponse*>(
               &_CMsgClientToGCRecyclePlayerCardResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    306;

  void Swap(CMsgClientToGCRecyclePlayerCardResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCRecyclePlayerCardResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCRecyclePlayerCardResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCRecyclePlayerCardResponse& from);
  void MergeFrom(const CMsgClientToGCRecyclePlayerCardResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCRecyclePlayerCardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCRecyclePlayerCardResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCRecyclePlayerCardResponse_Result_SUCCESS;
  static const Result ERROR_INTERNAL =
    CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_INTERNAL;
  static const Result ERROR_FAILED_TO_FIND_PLAYER_CARD =
    CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_FAILED_TO_FIND_PLAYER_CARD;
  static const Result ERROR_ITEM_NOT_PLAYER_CARD =
    CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_ITEM_NOT_PLAYER_CARD;
  static const Result ERROR_FAILED_DUST_CARD_CREATE =
    CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_FAILED_DUST_CARD_CREATE;
  static const Result ERROR_CARD_LOCKED =
    CMsgClientToGCRecyclePlayerCardResponse_Result_ERROR_CARD_LOCKED;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCRecyclePlayerCardResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCRecyclePlayerCardResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCRecyclePlayerCardResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCRecyclePlayerCardResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCRecyclePlayerCardResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 dust_amount = 2;
  bool has_dust_amount() const;
  void clear_dust_amount();
  static const int kDustAmountFieldNumber = 2;
  ::google::protobuf::uint32 dust_amount() const;
  void set_dust_amount(::google::protobuf::uint32 value);

  // optional .proto.dota.CMsgClientToGCRecyclePlayerCardResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCRecyclePlayerCardResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_dust_amount();
  void clear_has_dust_amount();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 dust_amount_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreatePlayerCardPack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCreatePlayerCardPack) */ {
 public:
  CMsgClientToGCCreatePlayerCardPack();
  virtual ~CMsgClientToGCCreatePlayerCardPack();

  CMsgClientToGCCreatePlayerCardPack(const CMsgClientToGCCreatePlayerCardPack& from);

  inline CMsgClientToGCCreatePlayerCardPack& operator=(const CMsgClientToGCCreatePlayerCardPack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCreatePlayerCardPack& default_instance();

  static inline const CMsgClientToGCCreatePlayerCardPack* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreatePlayerCardPack*>(
               &_CMsgClientToGCCreatePlayerCardPack_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    307;

  void Swap(CMsgClientToGCCreatePlayerCardPack* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCreatePlayerCardPack* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCCreatePlayerCardPack* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCCreatePlayerCardPack& from);
  void MergeFrom(const CMsgClientToGCCreatePlayerCardPack& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCCreatePlayerCardPack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 card_dust_item_id = 1;
  bool has_card_dust_item_id() const;
  void clear_card_dust_item_id();
  static const int kCardDustItemIdFieldNumber = 1;
  ::google::protobuf::uint64 card_dust_item_id() const;
  void set_card_dust_item_id(::google::protobuf::uint64 value);

  // optional uint32 event_id = 2;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCreatePlayerCardPack)
 private:
  void set_has_card_dust_item_id();
  void clear_has_card_dust_item_id();
  void set_has_event_id();
  void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 card_dust_item_id_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCCreatePlayerCardPackResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCCreatePlayerCardPackResponse) */ {
 public:
  CMsgClientToGCCreatePlayerCardPackResponse();
  virtual ~CMsgClientToGCCreatePlayerCardPackResponse();

  CMsgClientToGCCreatePlayerCardPackResponse(const CMsgClientToGCCreatePlayerCardPackResponse& from);

  inline CMsgClientToGCCreatePlayerCardPackResponse& operator=(const CMsgClientToGCCreatePlayerCardPackResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCCreatePlayerCardPackResponse& default_instance();

  static inline const CMsgClientToGCCreatePlayerCardPackResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCCreatePlayerCardPackResponse*>(
               &_CMsgClientToGCCreatePlayerCardPackResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    308;

  void Swap(CMsgClientToGCCreatePlayerCardPackResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCCreatePlayerCardPackResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCCreatePlayerCardPackResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCCreatePlayerCardPackResponse& from);
  void MergeFrom(const CMsgClientToGCCreatePlayerCardPackResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCCreatePlayerCardPackResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCCreatePlayerCardPackResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_SUCCESS;
  static const Result ERROR_INTERNAL =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_INTERNAL;
  static const Result ERROR_INSUFFICIENT_DUST =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_INSUFFICIENT_DUST;
  static const Result ERROR_ITEM_NOT_DUST_ITEM =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_ITEM_NOT_DUST_ITEM;
  static const Result ERROR_FAILED_CARD_PACK_CREATE =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_ERROR_FAILED_CARD_PACK_CREATE;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCCreatePlayerCardPackResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCCreatePlayerCardPackResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCCreatePlayerCardPackResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCCreatePlayerCardPackResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCCreatePlayerCardPackResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCCreatePlayerCardPackResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Questlines : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Questlines();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Questlines();

  CMsgGCToClientBattlePassRollup_International2016_Questlines(const CMsgGCToClientBattlePassRollup_International2016_Questlines& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Questlines& operator=(const CMsgGCToClientBattlePassRollup_International2016_Questlines& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_Questlines& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_International2016_Questlines* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_Questlines*>(
               &_CMsgGCToClientBattlePassRollup_International2016_Questlines_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    309;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Questlines* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_Questlines* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_International2016_Questlines* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Questlines& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Questlines& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_Questlines* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 onestar = 2;
  bool has_onestar() const;
  void clear_onestar();
  static const int kOnestarFieldNumber = 2;
  ::google::protobuf::uint32 onestar() const;
  void set_onestar(::google::protobuf::uint32 value);

  // optional uint32 twostar = 3;
  bool has_twostar() const;
  void clear_twostar();
  static const int kTwostarFieldNumber = 3;
  ::google::protobuf::uint32 twostar() const;
  void set_twostar(::google::protobuf::uint32 value);

  // optional uint32 threestar = 4;
  bool has_threestar() const;
  void clear_threestar();
  static const int kThreestarFieldNumber = 4;
  ::google::protobuf::uint32 threestar() const;
  void set_threestar(::google::protobuf::uint32 value);

  // optional uint32 total = 5;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 5;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_onestar();
  void clear_has_onestar();
  void set_has_twostar();
  void clear_has_twostar();
  void set_has_threestar();
  void clear_has_threestar();
  void set_has_total();
  void clear_has_total();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 onestar_;
  ::google::protobuf::uint32 twostar_;
  ::google::protobuf::uint32 threestar_;
  ::google::protobuf::uint32 total_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Wagering : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Wagering();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Wagering();

  CMsgGCToClientBattlePassRollup_International2016_Wagering(const CMsgGCToClientBattlePassRollup_International2016_Wagering& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Wagering& operator=(const CMsgGCToClientBattlePassRollup_International2016_Wagering& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_Wagering& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_International2016_Wagering* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_Wagering*>(
               &_CMsgGCToClientBattlePassRollup_International2016_Wagering_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    310;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Wagering* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_Wagering* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_International2016_Wagering* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Wagering& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Wagering& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_Wagering* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 total_wagered = 1;
  bool has_total_wagered() const;
  void clear_total_wagered();
  static const int kTotalWageredFieldNumber = 1;
  ::google::protobuf::uint32 total_wagered() const;
  void set_total_wagered(::google::protobuf::uint32 value);

  // optional uint32 total_won = 2;
  bool has_total_won() const;
  void clear_total_won();
  static const int kTotalWonFieldNumber = 2;
  ::google::protobuf::uint32 total_won() const;
  void set_total_won(::google::protobuf::uint32 value);

  // optional uint32 average_won = 3;
  bool has_average_won() const;
  void clear_average_won();
  static const int kAverageWonFieldNumber = 3;
  ::google::protobuf::uint32 average_won() const;
  void set_average_won(::google::protobuf::uint32 value);

  // optional uint32 success_rate = 4;
  bool has_success_rate() const;
  void clear_success_rate();
  static const int kSuccessRateFieldNumber = 4;
  ::google::protobuf::uint32 success_rate() const;
  void set_success_rate(::google::protobuf::uint32 value);

  // optional uint32 total_tips = 5;
  bool has_total_tips() const;
  void clear_total_tips();
  static const int kTotalTipsFieldNumber = 5;
  ::google::protobuf::uint32 total_tips() const;
  void set_total_tips(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering)
 private:
  void set_has_total_wagered();
  void clear_has_total_wagered();
  void set_has_total_won();
  void clear_has_total_won();
  void set_has_average_won();
  void clear_has_average_won();
  void set_has_success_rate();
  void clear_has_success_rate();
  void set_has_total_tips();
  void clear_has_total_tips();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 total_wagered_;
  ::google::protobuf::uint32 total_won_;
  ::google::protobuf::uint32 average_won_;
  ::google::protobuf::uint32 success_rate_;
  ::google::protobuf::uint32 total_tips_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Achievements : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Achievements();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Achievements();

  CMsgGCToClientBattlePassRollup_International2016_Achievements(const CMsgGCToClientBattlePassRollup_International2016_Achievements& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Achievements& operator=(const CMsgGCToClientBattlePassRollup_International2016_Achievements& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_Achievements& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_International2016_Achievements* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_Achievements*>(
               &_CMsgGCToClientBattlePassRollup_International2016_Achievements_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    311;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Achievements* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_Achievements* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_International2016_Achievements* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Achievements& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Achievements& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_Achievements* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 completed = 1;
  bool has_completed() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 1;
  ::google::protobuf::uint32 completed() const;
  void set_completed(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements)
 private:
  void set_has_completed();
  void clear_has_completed();
  void set_has_total();
  void clear_has_total();
  void set_has_points();
  void clear_has_points();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 completed_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_BattleCup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_BattleCup();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_BattleCup();

  CMsgGCToClientBattlePassRollup_International2016_BattleCup(const CMsgGCToClientBattlePassRollup_International2016_BattleCup& from);

  inline CMsgGCToClientBattlePassRollup_International2016_BattleCup& operator=(const CMsgGCToClientBattlePassRollup_International2016_BattleCup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_BattleCup& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_International2016_BattleCup* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_BattleCup*>(
               &_CMsgGCToClientBattlePassRollup_International2016_BattleCup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    312;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_BattleCup* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_BattleCup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_International2016_BattleCup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_BattleCup& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_BattleCup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_BattleCup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 wins = 1;
  bool has_wins() const;
  void clear_wins();
  static const int kWinsFieldNumber = 1;
  ::google::protobuf::uint32 wins() const;
  void set_wins(::google::protobuf::uint32 value);

  // optional uint32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup)
 private:
  void set_has_wins();
  void clear_has_wins();
  void set_has_score();
  void clear_has_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 score_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Predictions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Predictions();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Predictions();

  CMsgGCToClientBattlePassRollup_International2016_Predictions(const CMsgGCToClientBattlePassRollup_International2016_Predictions& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Predictions& operator=(const CMsgGCToClientBattlePassRollup_International2016_Predictions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_Predictions& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_International2016_Predictions* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_Predictions*>(
               &_CMsgGCToClientBattlePassRollup_International2016_Predictions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    313;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Predictions* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_Predictions* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_International2016_Predictions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Predictions& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Predictions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_Predictions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions)
 private:
  void set_has_correct();
  void clear_has_correct();
  void set_has_total();
  void clear_has_total();
  void set_has_points();
  void clear_has_points();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_Bracket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_Bracket();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_Bracket();

  CMsgGCToClientBattlePassRollup_International2016_Bracket(const CMsgGCToClientBattlePassRollup_International2016_Bracket& from);

  inline CMsgGCToClientBattlePassRollup_International2016_Bracket& operator=(const CMsgGCToClientBattlePassRollup_International2016_Bracket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_Bracket& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_International2016_Bracket* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_Bracket*>(
               &_CMsgGCToClientBattlePassRollup_International2016_Bracket_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    314;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_Bracket* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_Bracket* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_International2016_Bracket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_Bracket& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_Bracket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_Bracket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 points = 2;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket)
 private:
  void set_has_correct();
  void clear_has_correct();
  void set_has_points();
  void clear_has_points();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 points_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_PlayerCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_PlayerCard();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_PlayerCard();

  CMsgGCToClientBattlePassRollup_International2016_PlayerCard(const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& from);

  inline CMsgGCToClientBattlePassRollup_International2016_PlayerCard& operator=(const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_International2016_PlayerCard* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_PlayerCard*>(
               &_CMsgGCToClientBattlePassRollup_International2016_PlayerCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    315;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_PlayerCard* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_PlayerCard* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_International2016_PlayerCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_PlayerCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_PlayerCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 quality = 2;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 2;
  ::google::protobuf::uint32 quality() const;
  void set_quality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_quality();
  void clear_has_quality();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 quality_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge();
  virtual ~CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge();

  CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge(const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& from);

  inline CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& operator=(const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge*>(
               &_CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    316;

  void Swap(CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float total_score = 1;
  bool has_total_score() const;
  void clear_total_score();
  static const int kTotalScoreFieldNumber = 1;
  float total_score() const;
  void set_total_score(float value);

  // optional float percentile = 2;
  bool has_percentile() const;
  void clear_percentile();
  static const int kPercentileFieldNumber = 2;
  float percentile() const;
  void set_percentile(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge)
 private:
  void set_has_total_score();
  void clear_has_total_score();
  void set_has_percentile();
  void clear_has_percentile();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float total_score_;
  float percentile_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_International2016 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_International2016) */ {
 public:
  CMsgGCToClientBattlePassRollup_International2016();
  virtual ~CMsgGCToClientBattlePassRollup_International2016();

  CMsgGCToClientBattlePassRollup_International2016(const CMsgGCToClientBattlePassRollup_International2016& from);

  inline CMsgGCToClientBattlePassRollup_International2016& operator=(const CMsgGCToClientBattlePassRollup_International2016& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_International2016& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_International2016* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_International2016*>(
               &_CMsgGCToClientBattlePassRollup_International2016_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    317;

  void Swap(CMsgGCToClientBattlePassRollup_International2016* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_International2016* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_International2016* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_International2016& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_International2016& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_International2016* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientBattlePassRollup_International2016_Questlines Questlines;
  typedef CMsgGCToClientBattlePassRollup_International2016_Wagering Wagering;
  typedef CMsgGCToClientBattlePassRollup_International2016_Achievements Achievements;
  typedef CMsgGCToClientBattlePassRollup_International2016_BattleCup BattleCup;
  typedef CMsgGCToClientBattlePassRollup_International2016_Predictions Predictions;
  typedef CMsgGCToClientBattlePassRollup_International2016_Bracket Bracket;
  typedef CMsgGCToClientBattlePassRollup_International2016_PlayerCard PlayerCard;
  typedef CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge FantasyChallenge;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines questlines = 2;
  int questlines_size() const;
  void clear_questlines();
  static const int kQuestlinesFieldNumber = 2;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines& questlines(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines* mutable_questlines(int index);
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines* add_questlines();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines >*
      mutable_questlines();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines >&
      questlines() const;

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard player_cards = 8;
  int player_cards_size() const;
  void clear_player_cards();
  static const int kPlayerCardsFieldNumber = 8;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard& player_cards(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* mutable_player_cards(int index);
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* add_player_cards();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard >*
      mutable_player_cards();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard >&
      player_cards() const;

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering wagering = 3;
  bool has_wagering() const;
  void clear_wagering();
  static const int kWageringFieldNumber = 3;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering& wagering() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* mutable_wagering();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* release_wagering();
  void set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* wagering);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements achievements = 4;
  bool has_achievements() const;
  void clear_achievements();
  static const int kAchievementsFieldNumber = 4;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements& achievements() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* mutable_achievements();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* release_achievements();
  void set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* achievements);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup battle_cup = 5;
  bool has_battle_cup() const;
  void clear_battle_cup();
  static const int kBattleCupFieldNumber = 5;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup& battle_cup() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* mutable_battle_cup();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* release_battle_cup();
  void set_allocated_battle_cup(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* battle_cup);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions predictions = 6;
  bool has_predictions() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 6;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions& predictions() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* mutable_predictions();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* release_predictions();
  void set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* predictions);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket bracket = 7;
  bool has_bracket() const;
  void clear_bracket();
  static const int kBracketFieldNumber = 7;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket& bracket() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* mutable_bracket();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* release_bracket();
  void set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* bracket);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge fantasy_challenge = 9;
  bool has_fantasy_challenge() const;
  void clear_fantasy_challenge();
  static const int kFantasyChallengeFieldNumber = 9;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& fantasy_challenge() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* mutable_fantasy_challenge();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* release_fantasy_challenge();
  void set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* fantasy_challenge);

  // optional uint32 battle_pass_level = 1;
  bool has_battle_pass_level() const;
  void clear_battle_pass_level();
  static const int kBattlePassLevelFieldNumber = 1;
  ::google::protobuf::uint32 battle_pass_level() const;
  void set_battle_pass_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_International2016)
 private:
  void set_has_battle_pass_level();
  void clear_has_battle_pass_level();
  void set_has_wagering();
  void clear_has_wagering();
  void set_has_achievements();
  void clear_has_achievements();
  void set_has_battle_cup();
  void clear_has_battle_cup();
  void set_has_predictions();
  void clear_has_predictions();
  void set_has_bracket();
  void clear_has_bracket();
  void set_has_fantasy_challenge();
  void clear_has_fantasy_challenge();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines > questlines_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard > player_cards_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* wagering_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* achievements_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* battle_cup_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* predictions_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* bracket_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* fantasy_challenge_;
  ::google::protobuf::uint32 battle_pass_level_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_Questlines : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_Questlines();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_Questlines();

  CMsgGCToClientBattlePassRollup_Fall2016_Questlines(const CMsgGCToClientBattlePassRollup_Fall2016_Questlines& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_Questlines& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_Questlines& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_Fall2016_Questlines& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_Fall2016_Questlines* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_Questlines*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_Questlines_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    318;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_Questlines* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_Questlines* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_Fall2016_Questlines* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Questlines& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Questlines& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_Questlines* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 onestar = 2;
  bool has_onestar() const;
  void clear_onestar();
  static const int kOnestarFieldNumber = 2;
  ::google::protobuf::uint32 onestar() const;
  void set_onestar(::google::protobuf::uint32 value);

  // optional uint32 twostar = 3;
  bool has_twostar() const;
  void clear_twostar();
  static const int kTwostarFieldNumber = 3;
  ::google::protobuf::uint32 twostar() const;
  void set_twostar(::google::protobuf::uint32 value);

  // optional uint32 threestar = 4;
  bool has_threestar() const;
  void clear_threestar();
  static const int kThreestarFieldNumber = 4;
  ::google::protobuf::uint32 threestar() const;
  void set_threestar(::google::protobuf::uint32 value);

  // optional uint32 total = 5;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 5;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_onestar();
  void clear_has_onestar();
  void set_has_twostar();
  void clear_has_twostar();
  void set_has_threestar();
  void clear_has_threestar();
  void set_has_total();
  void clear_has_total();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 onestar_;
  ::google::protobuf::uint32 twostar_;
  ::google::protobuf::uint32 threestar_;
  ::google::protobuf::uint32 total_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_Wagering : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_Wagering();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_Wagering();

  CMsgGCToClientBattlePassRollup_Fall2016_Wagering(const CMsgGCToClientBattlePassRollup_Fall2016_Wagering& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_Wagering& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_Wagering& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_Fall2016_Wagering& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_Fall2016_Wagering* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_Wagering*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_Wagering_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    319;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_Wagering* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_Wagering* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_Fall2016_Wagering* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Wagering& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Wagering& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_Wagering* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 total_wagered = 1;
  bool has_total_wagered() const;
  void clear_total_wagered();
  static const int kTotalWageredFieldNumber = 1;
  ::google::protobuf::uint32 total_wagered() const;
  void set_total_wagered(::google::protobuf::uint32 value);

  // optional uint32 total_won = 2;
  bool has_total_won() const;
  void clear_total_won();
  static const int kTotalWonFieldNumber = 2;
  ::google::protobuf::uint32 total_won() const;
  void set_total_won(::google::protobuf::uint32 value);

  // optional uint32 average_won = 3;
  bool has_average_won() const;
  void clear_average_won();
  static const int kAverageWonFieldNumber = 3;
  ::google::protobuf::uint32 average_won() const;
  void set_average_won(::google::protobuf::uint32 value);

  // optional uint32 success_rate = 4;
  bool has_success_rate() const;
  void clear_success_rate();
  static const int kSuccessRateFieldNumber = 4;
  ::google::protobuf::uint32 success_rate() const;
  void set_success_rate(::google::protobuf::uint32 value);

  // optional uint32 total_tips = 5;
  bool has_total_tips() const;
  void clear_total_tips();
  static const int kTotalTipsFieldNumber = 5;
  ::google::protobuf::uint32 total_tips() const;
  void set_total_tips(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering)
 private:
  void set_has_total_wagered();
  void clear_has_total_wagered();
  void set_has_total_won();
  void clear_has_total_won();
  void set_has_average_won();
  void clear_has_average_won();
  void set_has_success_rate();
  void clear_has_success_rate();
  void set_has_total_tips();
  void clear_has_total_tips();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 total_wagered_;
  ::google::protobuf::uint32 total_won_;
  ::google::protobuf::uint32 average_won_;
  ::google::protobuf::uint32 success_rate_;
  ::google::protobuf::uint32 total_tips_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_Achievements : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_Achievements();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_Achievements();

  CMsgGCToClientBattlePassRollup_Fall2016_Achievements(const CMsgGCToClientBattlePassRollup_Fall2016_Achievements& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_Achievements& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_Achievements& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_Fall2016_Achievements& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_Fall2016_Achievements* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_Achievements*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_Achievements_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    320;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_Achievements* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_Achievements* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_Fall2016_Achievements* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Achievements& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Achievements& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_Achievements* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 completed = 1;
  bool has_completed() const;
  void clear_completed();
  static const int kCompletedFieldNumber = 1;
  ::google::protobuf::uint32 completed() const;
  void set_completed(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements)
 private:
  void set_has_completed();
  void clear_has_completed();
  void set_has_total();
  void clear_has_total();
  void set_has_points();
  void clear_has_points();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 completed_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_BattleCup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_BattleCup();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_BattleCup();

  CMsgGCToClientBattlePassRollup_Fall2016_BattleCup(const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_BattleCup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    321;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 wins = 1;
  bool has_wins() const;
  void clear_wins();
  static const int kWinsFieldNumber = 1;
  ::google::protobuf::uint32 wins() const;
  void set_wins(::google::protobuf::uint32 value);

  // optional uint32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup)
 private:
  void set_has_wins();
  void clear_has_wins();
  void set_has_score();
  void clear_has_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 wins_;
  ::google::protobuf::uint32 score_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_Predictions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_Predictions();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_Predictions();

  CMsgGCToClientBattlePassRollup_Fall2016_Predictions(const CMsgGCToClientBattlePassRollup_Fall2016_Predictions& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_Predictions& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_Predictions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_Fall2016_Predictions& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_Fall2016_Predictions* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_Predictions*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_Predictions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    322;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_Predictions* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_Predictions* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_Fall2016_Predictions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Predictions& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Predictions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_Predictions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 total = 2;
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 2;
  ::google::protobuf::uint32 total() const;
  void set_total(::google::protobuf::uint32 value);

  // optional uint32 points = 3;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 3;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions)
 private:
  void set_has_correct();
  void clear_has_correct();
  void set_has_total();
  void clear_has_total();
  void set_has_points();
  void clear_has_points();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 total_;
  ::google::protobuf::uint32 points_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_Bracket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_Bracket();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_Bracket();

  CMsgGCToClientBattlePassRollup_Fall2016_Bracket(const CMsgGCToClientBattlePassRollup_Fall2016_Bracket& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_Bracket& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_Bracket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_Fall2016_Bracket& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_Fall2016_Bracket* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_Bracket*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_Bracket_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    323;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_Bracket* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_Bracket* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_Fall2016_Bracket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Bracket& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_Bracket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_Bracket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 correct = 1;
  bool has_correct() const;
  void clear_correct();
  static const int kCorrectFieldNumber = 1;
  ::google::protobuf::uint32 correct() const;
  void set_correct(::google::protobuf::uint32 value);

  // optional uint32 points = 2;
  bool has_points() const;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  ::google::protobuf::uint32 points() const;
  void set_points(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket)
 private:
  void set_has_correct();
  void clear_has_correct();
  void set_has_points();
  void clear_has_points();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 correct_;
  ::google::protobuf::uint32 points_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard();

  CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard(const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    324;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // optional uint32 quality = 2;
  bool has_quality() const;
  void clear_quality();
  static const int kQualityFieldNumber = 2;
  ::google::protobuf::uint32 quality() const;
  void set_quality(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard)
 private:
  void set_has_account_id();
  void clear_has_account_id();
  void set_has_quality();
  void clear_has_quality();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  ::google::protobuf::uint32 quality_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge();

  CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge(const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& operator=(const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    325;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float total_score = 1;
  bool has_total_score() const;
  void clear_total_score();
  static const int kTotalScoreFieldNumber = 1;
  float total_score() const;
  void set_total_score(float value);

  // optional float percentile = 2;
  bool has_percentile() const;
  void clear_percentile();
  static const int kPercentileFieldNumber = 2;
  float percentile() const;
  void set_percentile(float value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge)
 private:
  void set_has_total_score();
  void clear_has_total_score();
  void set_has_percentile();
  void clear_has_percentile();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float total_score_;
  float percentile_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollup_Fall2016 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016) */ {
 public:
  CMsgGCToClientBattlePassRollup_Fall2016();
  virtual ~CMsgGCToClientBattlePassRollup_Fall2016();

  CMsgGCToClientBattlePassRollup_Fall2016(const CMsgGCToClientBattlePassRollup_Fall2016& from);

  inline CMsgGCToClientBattlePassRollup_Fall2016& operator=(const CMsgGCToClientBattlePassRollup_Fall2016& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollup_Fall2016& default_instance();

  static inline const CMsgGCToClientBattlePassRollup_Fall2016* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollup_Fall2016*>(
               &_CMsgGCToClientBattlePassRollup_Fall2016_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    326;

  void Swap(CMsgGCToClientBattlePassRollup_Fall2016* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollup_Fall2016* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollup_Fall2016* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollup_Fall2016& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollup_Fall2016& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollup_Fall2016* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgGCToClientBattlePassRollup_Fall2016_Questlines Questlines;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_Wagering Wagering;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_Achievements Achievements;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_BattleCup BattleCup;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_Predictions Predictions;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_Bracket Bracket;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard PlayerCard;
  typedef CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge FantasyChallenge;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines questlines = 2;
  int questlines_size() const;
  void clear_questlines();
  static const int kQuestlinesFieldNumber = 2;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines& questlines(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines* mutable_questlines(int index);
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines* add_questlines();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines >*
      mutable_questlines();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines >&
      questlines() const;

  // repeated .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard player_cards = 8;
  int player_cards_size() const;
  void clear_player_cards();
  static const int kPlayerCardsFieldNumber = 8;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& player_cards(int index) const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* mutable_player_cards(int index);
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* add_player_cards();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard >*
      mutable_player_cards();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard >&
      player_cards() const;

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering wagering = 3;
  bool has_wagering() const;
  void clear_wagering();
  static const int kWageringFieldNumber = 3;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering& wagering() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* mutable_wagering();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* release_wagering();
  void set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* wagering);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements achievements = 4;
  bool has_achievements() const;
  void clear_achievements();
  static const int kAchievementsFieldNumber = 4;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements& achievements() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* mutable_achievements();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* release_achievements();
  void set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* achievements);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup battle_cup = 5;
  bool has_battle_cup() const;
  void clear_battle_cup();
  static const int kBattleCupFieldNumber = 5;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& battle_cup() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* mutable_battle_cup();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* release_battle_cup();
  void set_allocated_battle_cup(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* battle_cup);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions predictions = 6;
  bool has_predictions() const;
  void clear_predictions();
  static const int kPredictionsFieldNumber = 6;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions& predictions() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* mutable_predictions();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* release_predictions();
  void set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* predictions);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket bracket = 7;
  bool has_bracket() const;
  void clear_bracket();
  static const int kBracketFieldNumber = 7;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket& bracket() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* mutable_bracket();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* release_bracket();
  void set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* bracket);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge fantasy_challenge = 9;
  bool has_fantasy_challenge() const;
  void clear_fantasy_challenge();
  static const int kFantasyChallengeFieldNumber = 9;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& fantasy_challenge() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* mutable_fantasy_challenge();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* release_fantasy_challenge();
  void set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* fantasy_challenge);

  // optional uint32 battle_pass_level = 1;
  bool has_battle_pass_level() const;
  void clear_battle_pass_level();
  static const int kBattlePassLevelFieldNumber = 1;
  ::google::protobuf::uint32 battle_pass_level() const;
  void set_battle_pass_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016)
 private:
  void set_has_battle_pass_level();
  void clear_has_battle_pass_level();
  void set_has_wagering();
  void clear_has_wagering();
  void set_has_achievements();
  void clear_has_achievements();
  void set_has_battle_cup();
  void clear_has_battle_cup();
  void set_has_predictions();
  void clear_has_predictions();
  void set_has_bracket();
  void clear_has_bracket();
  void set_has_fantasy_challenge();
  void clear_has_fantasy_challenge();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines > questlines_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard > player_cards_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* wagering_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* achievements_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* battle_cup_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* predictions_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* bracket_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* fantasy_challenge_;
  ::google::protobuf::uint32 battle_pass_level_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollupRequest) */ {
 public:
  CMsgGCToClientBattlePassRollupRequest();
  virtual ~CMsgGCToClientBattlePassRollupRequest();

  CMsgGCToClientBattlePassRollupRequest(const CMsgGCToClientBattlePassRollupRequest& from);

  inline CMsgGCToClientBattlePassRollupRequest& operator=(const CMsgGCToClientBattlePassRollupRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollupRequest& default_instance();

  static inline const CMsgGCToClientBattlePassRollupRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollupRequest*>(
               &_CMsgGCToClientBattlePassRollupRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    327;

  void Swap(CMsgGCToClientBattlePassRollupRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollupRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollupRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollupRequest& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollupRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 event_id = 1;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // optional uint32 account_id = 2;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollupRequest)
 private:
  void set_has_event_id();
  void clear_has_event_id();
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 event_id_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollupResponse) */ {
 public:
  CMsgGCToClientBattlePassRollupResponse();
  virtual ~CMsgGCToClientBattlePassRollupResponse();

  CMsgGCToClientBattlePassRollupResponse(const CMsgGCToClientBattlePassRollupResponse& from);

  inline CMsgGCToClientBattlePassRollupResponse& operator=(const CMsgGCToClientBattlePassRollupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollupResponse& default_instance();

  static inline const CMsgGCToClientBattlePassRollupResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollupResponse*>(
               &_CMsgGCToClientBattlePassRollupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    328;

  void Swap(CMsgGCToClientBattlePassRollupResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollupResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollupResponse& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016 event_ti6 = 1;
  bool has_event_ti6() const;
  void clear_event_ti6();
  static const int kEventTi6FieldNumber = 1;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016& event_ti6() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* mutable_event_ti6();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* release_event_ti6();
  void set_allocated_event_ti6(::proto::dota::CMsgGCToClientBattlePassRollup_International2016* event_ti6);

  // optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016 event_fall2016 = 2;
  bool has_event_fall2016() const;
  void clear_event_fall2016();
  static const int kEventFall2016FieldNumber = 2;
  const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016& event_fall2016() const;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* mutable_event_fall2016();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* release_event_fall2016();
  void set_allocated_event_fall2016(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* event_fall2016);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollupResponse)
 private:
  void set_has_event_ti6();
  void clear_has_event_ti6();
  void set_has_event_fall2016();
  void clear_has_event_fall2016();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* event_ti6_;
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* event_fall2016_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollupListRequest) */ {
 public:
  CMsgGCToClientBattlePassRollupListRequest();
  virtual ~CMsgGCToClientBattlePassRollupListRequest();

  CMsgGCToClientBattlePassRollupListRequest(const CMsgGCToClientBattlePassRollupListRequest& from);

  inline CMsgGCToClientBattlePassRollupListRequest& operator=(const CMsgGCToClientBattlePassRollupListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollupListRequest& default_instance();

  static inline const CMsgGCToClientBattlePassRollupListRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollupListRequest*>(
               &_CMsgGCToClientBattlePassRollupListRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    329;

  void Swap(CMsgGCToClientBattlePassRollupListRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollupListRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollupListRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollupListRequest& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupListRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollupListRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 account_id = 1;
  bool has_account_id() const;
  void clear_account_id();
  static const int kAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 account_id() const;
  void set_account_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollupListRequest)
 private:
  void set_has_account_id();
  void clear_has_account_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 account_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientBattlePassRollupListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientBattlePassRollupListResponse) */ {
 public:
  CMsgGCToClientBattlePassRollupListResponse();
  virtual ~CMsgGCToClientBattlePassRollupListResponse();

  CMsgGCToClientBattlePassRollupListResponse(const CMsgGCToClientBattlePassRollupListResponse& from);

  inline CMsgGCToClientBattlePassRollupListResponse& operator=(const CMsgGCToClientBattlePassRollupListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientBattlePassRollupListResponse& default_instance();

  static inline const CMsgGCToClientBattlePassRollupListResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientBattlePassRollupListResponse*>(
               &_CMsgGCToClientBattlePassRollupListResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    330;

  void Swap(CMsgGCToClientBattlePassRollupListResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientBattlePassRollupListResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientBattlePassRollupListResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientBattlePassRollupListResponse& from);
  void MergeFrom(const CMsgGCToClientBattlePassRollupListResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientBattlePassRollupListResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 event_id = 1;
  int event_id_size() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 1;
  ::google::protobuf::uint32 event_id(int index) const;
  void set_event_id(int index, ::google::protobuf::uint32 value);
  void add_event_id(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      event_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_event_id();

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientBattlePassRollupListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCTransferSeasonalMMRRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCTransferSeasonalMMRRequest) */ {
 public:
  CMsgClientToGCTransferSeasonalMMRRequest();
  virtual ~CMsgClientToGCTransferSeasonalMMRRequest();

  CMsgClientToGCTransferSeasonalMMRRequest(const CMsgClientToGCTransferSeasonalMMRRequest& from);

  inline CMsgClientToGCTransferSeasonalMMRRequest& operator=(const CMsgClientToGCTransferSeasonalMMRRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTransferSeasonalMMRRequest& default_instance();

  static inline const CMsgClientToGCTransferSeasonalMMRRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCTransferSeasonalMMRRequest*>(
               &_CMsgClientToGCTransferSeasonalMMRRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    331;

  void Swap(CMsgClientToGCTransferSeasonalMMRRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCTransferSeasonalMMRRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCTransferSeasonalMMRRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCTransferSeasonalMMRRequest& from);
  void MergeFrom(const CMsgClientToGCTransferSeasonalMMRRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCTransferSeasonalMMRRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_party = 1;
  bool has_is_party() const;
  void clear_is_party();
  static const int kIsPartyFieldNumber = 1;
  bool is_party() const;
  void set_is_party(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCTransferSeasonalMMRRequest)
 private:
  void set_has_is_party();
  void clear_has_is_party();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool is_party_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCTransferSeasonalMMRResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCTransferSeasonalMMRResponse) */ {
 public:
  CMsgClientToGCTransferSeasonalMMRResponse();
  virtual ~CMsgClientToGCTransferSeasonalMMRResponse();

  CMsgClientToGCTransferSeasonalMMRResponse(const CMsgClientToGCTransferSeasonalMMRResponse& from);

  inline CMsgClientToGCTransferSeasonalMMRResponse& operator=(const CMsgClientToGCTransferSeasonalMMRResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCTransferSeasonalMMRResponse& default_instance();

  static inline const CMsgClientToGCTransferSeasonalMMRResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCTransferSeasonalMMRResponse*>(
               &_CMsgClientToGCTransferSeasonalMMRResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    332;

  void Swap(CMsgClientToGCTransferSeasonalMMRResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCTransferSeasonalMMRResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCTransferSeasonalMMRResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCTransferSeasonalMMRResponse& from);
  void MergeFrom(const CMsgClientToGCTransferSeasonalMMRResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCTransferSeasonalMMRResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCTransferSeasonalMMRResponse)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientPlaytestStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientPlaytestStatus) */ {
 public:
  CMsgGCToClientPlaytestStatus();
  virtual ~CMsgGCToClientPlaytestStatus();

  CMsgGCToClientPlaytestStatus(const CMsgGCToClientPlaytestStatus& from);

  inline CMsgGCToClientPlaytestStatus& operator=(const CMsgGCToClientPlaytestStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientPlaytestStatus& default_instance();

  static inline const CMsgGCToClientPlaytestStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientPlaytestStatus*>(
               &_CMsgGCToClientPlaytestStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    333;

  void Swap(CMsgGCToClientPlaytestStatus* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientPlaytestStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientPlaytestStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientPlaytestStatus& from);
  void MergeFrom(const CMsgGCToClientPlaytestStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientPlaytestStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool active = 1;
  bool has_active() const;
  void clear_active();
  static const int kActiveFieldNumber = 1;
  bool active() const;
  void set_active(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientPlaytestStatus)
 private:
  void set_has_active();
  void clear_has_active();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool active_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCJoinPlaytest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCJoinPlaytest) */ {
 public:
  CMsgClientToGCJoinPlaytest();
  virtual ~CMsgClientToGCJoinPlaytest();

  CMsgClientToGCJoinPlaytest(const CMsgClientToGCJoinPlaytest& from);

  inline CMsgClientToGCJoinPlaytest& operator=(const CMsgClientToGCJoinPlaytest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCJoinPlaytest& default_instance();

  static inline const CMsgClientToGCJoinPlaytest* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCJoinPlaytest*>(
               &_CMsgClientToGCJoinPlaytest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    334;

  void Swap(CMsgClientToGCJoinPlaytest* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCJoinPlaytest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCJoinPlaytest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCJoinPlaytest& from);
  void MergeFrom(const CMsgClientToGCJoinPlaytest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCJoinPlaytest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 client_version = 1;
  bool has_client_version() const;
  void clear_client_version();
  static const int kClientVersionFieldNumber = 1;
  ::google::protobuf::uint32 client_version() const;
  void set_client_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCJoinPlaytest)
 private:
  void set_has_client_version();
  void clear_has_client_version();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 client_version_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCJoinPlaytestResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCJoinPlaytestResponse) */ {
 public:
  CMsgClientToGCJoinPlaytestResponse();
  virtual ~CMsgClientToGCJoinPlaytestResponse();

  CMsgClientToGCJoinPlaytestResponse(const CMsgClientToGCJoinPlaytestResponse& from);

  inline CMsgClientToGCJoinPlaytestResponse& operator=(const CMsgClientToGCJoinPlaytestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCJoinPlaytestResponse& default_instance();

  static inline const CMsgClientToGCJoinPlaytestResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCJoinPlaytestResponse*>(
               &_CMsgClientToGCJoinPlaytestResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    335;

  void Swap(CMsgClientToGCJoinPlaytestResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCJoinPlaytestResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCJoinPlaytestResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCJoinPlaytestResponse& from);
  void MergeFrom(const CMsgClientToGCJoinPlaytestResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCJoinPlaytestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::std::string& error() const;
  void set_error(const ::std::string& value);
  #if LANG_CXX11
  void set_error(::std::string&& value);
  #endif
  void set_error(const char* value);
  void set_error(const char* value, size_t size);
  ::std::string* mutable_error();
  ::std::string* release_error();
  void set_allocated_error(::std::string* error);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCJoinPlaytestResponse)
 private:
  void set_has_error();
  void clear_has_error();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr error_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAEventInvite_Team : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAEventInvite.Team) */ {
 public:
  CMsgDOTAEventInvite_Team();
  virtual ~CMsgDOTAEventInvite_Team();

  CMsgDOTAEventInvite_Team(const CMsgDOTAEventInvite_Team& from);

  inline CMsgDOTAEventInvite_Team& operator=(const CMsgDOTAEventInvite_Team& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAEventInvite_Team& default_instance();

  static inline const CMsgDOTAEventInvite_Team* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAEventInvite_Team*>(
               &_CMsgDOTAEventInvite_Team_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    336;

  void Swap(CMsgDOTAEventInvite_Team* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAEventInvite_Team* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAEventInvite_Team* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAEventInvite_Team& from);
  void MergeFrom(const CMsgDOTAEventInvite_Team& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAEventInvite_Team* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string team_name = 3;
  bool has_team_name() const;
  void clear_team_name();
  static const int kTeamNameFieldNumber = 3;
  const ::std::string& team_name() const;
  void set_team_name(const ::std::string& value);
  #if LANG_CXX11
  void set_team_name(::std::string&& value);
  #endif
  void set_team_name(const char* value);
  void set_team_name(const char* value, size_t size);
  ::std::string* mutable_team_name();
  ::std::string* release_team_name();
  void set_allocated_team_name(::std::string* team_name);

  // optional uint32 team_id = 1;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // optional uint32 announcement_date = 2;
  bool has_announcement_date() const;
  void clear_announcement_date();
  static const int kAnnouncementDateFieldNumber = 2;
  ::google::protobuf::uint32 announcement_date() const;
  void set_announcement_date(::google::protobuf::uint32 value);

  // optional .proto.dota.EDOTAEventInviteType invite_type = 4 [default = k_EDOTAEventInviteType_Direct];
  bool has_invite_type() const;
  void clear_invite_type();
  static const int kInviteTypeFieldNumber = 4;
  ::proto::dota::EDOTAEventInviteType invite_type() const;
  void set_invite_type(::proto::dota::EDOTAEventInviteType value);

  // optional uint32 region = 5;
  bool has_region() const;
  void clear_region();
  static const int kRegionFieldNumber = 5;
  ::google::protobuf::uint32 region() const;
  void set_region(::google::protobuf::uint32 value);

  // optional bool qualifier_winner = 6;
  bool has_qualifier_winner() const;
  void clear_qualifier_winner();
  static const int kQualifierWinnerFieldNumber = 6;
  bool qualifier_winner() const;
  void set_qualifier_winner(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAEventInvite.Team)
 private:
  void set_has_team_id();
  void clear_has_team_id();
  void set_has_announcement_date();
  void clear_has_announcement_date();
  void set_has_team_name();
  void clear_has_team_name();
  void set_has_invite_type();
  void clear_has_invite_type();
  void set_has_region();
  void clear_has_region();
  void set_has_qualifier_winner();
  void clear_has_qualifier_winner();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr team_name_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 announcement_date_;
  int invite_type_;
  ::google::protobuf::uint32 region_;
  bool qualifier_winner_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAEventInvite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAEventInvite) */ {
 public:
  CMsgDOTAEventInvite();
  virtual ~CMsgDOTAEventInvite();

  CMsgDOTAEventInvite(const CMsgDOTAEventInvite& from);

  inline CMsgDOTAEventInvite& operator=(const CMsgDOTAEventInvite& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAEventInvite& default_instance();

  static inline const CMsgDOTAEventInvite* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAEventInvite*>(
               &_CMsgDOTAEventInvite_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    337;

  void Swap(CMsgDOTAEventInvite* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAEventInvite* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAEventInvite* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAEventInvite& from);
  void MergeFrom(const CMsgDOTAEventInvite& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAEventInvite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAEventInvite_Team Team;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTAEventInvite.Team teams = 1;
  int teams_size() const;
  void clear_teams();
  static const int kTeamsFieldNumber = 1;
  const ::proto::dota::CMsgDOTAEventInvite_Team& teams(int index) const;
  ::proto::dota::CMsgDOTAEventInvite_Team* mutable_teams(int index);
  ::proto::dota::CMsgDOTAEventInvite_Team* add_teams();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAEventInvite_Team >*
      mutable_teams();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAEventInvite_Team >&
      teams() const;

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAEventInvite)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAEventInvite_Team > teams_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTASetFavoriteTeam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASetFavoriteTeam) */ {
 public:
  CMsgDOTASetFavoriteTeam();
  virtual ~CMsgDOTASetFavoriteTeam();

  CMsgDOTASetFavoriteTeam(const CMsgDOTASetFavoriteTeam& from);

  inline CMsgDOTASetFavoriteTeam& operator=(const CMsgDOTASetFavoriteTeam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASetFavoriteTeam& default_instance();

  static inline const CMsgDOTASetFavoriteTeam* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASetFavoriteTeam*>(
               &_CMsgDOTASetFavoriteTeam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    338;

  void Swap(CMsgDOTASetFavoriteTeam* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTASetFavoriteTeam* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTASetFavoriteTeam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTASetFavoriteTeam& from);
  void MergeFrom(const CMsgDOTASetFavoriteTeam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTASetFavoriteTeam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_id = 1;
  bool has_team_id() const;
  void clear_team_id();
  static const int kTeamIdFieldNumber = 1;
  ::google::protobuf::uint32 team_id() const;
  void set_team_id(::google::protobuf::uint32 value);

  // optional uint32 event_id = 2;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 2;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASetFavoriteTeam)
 private:
  void set_has_team_id();
  void clear_has_team_id();
  void set_has_event_id();
  void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 team_id_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTATriviaQuestion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTATriviaQuestion) */ {
 public:
  CMsgDOTATriviaQuestion();
  virtual ~CMsgDOTATriviaQuestion();

  CMsgDOTATriviaQuestion(const CMsgDOTATriviaQuestion& from);

  inline CMsgDOTATriviaQuestion& operator=(const CMsgDOTATriviaQuestion& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATriviaQuestion& default_instance();

  static inline const CMsgDOTATriviaQuestion* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTATriviaQuestion*>(
               &_CMsgDOTATriviaQuestion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    339;

  void Swap(CMsgDOTATriviaQuestion* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTATriviaQuestion* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTATriviaQuestion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTATriviaQuestion& from);
  void MergeFrom(const CMsgDOTATriviaQuestion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTATriviaQuestion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string answer_values = 5;
  int answer_values_size() const;
  void clear_answer_values();
  static const int kAnswerValuesFieldNumber = 5;
  const ::std::string& answer_values(int index) const;
  ::std::string* mutable_answer_values(int index);
  void set_answer_values(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_answer_values(int index, ::std::string&& value);
  #endif
  void set_answer_values(int index, const char* value);
  void set_answer_values(int index, const char* value, size_t size);
  ::std::string* add_answer_values();
  void add_answer_values(const ::std::string& value);
  #if LANG_CXX11
  void add_answer_values(::std::string&& value);
  #endif
  void add_answer_values(const char* value);
  void add_answer_values(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& answer_values() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_answer_values();

  // optional string question_value = 4;
  bool has_question_value() const;
  void clear_question_value();
  static const int kQuestionValueFieldNumber = 4;
  const ::std::string& question_value() const;
  void set_question_value(const ::std::string& value);
  #if LANG_CXX11
  void set_question_value(::std::string&& value);
  #endif
  void set_question_value(const char* value);
  void set_question_value(const char* value, size_t size);
  ::std::string* mutable_question_value();
  ::std::string* release_question_value();
  void set_allocated_question_value(::std::string* question_value);

  // optional uint32 question_id = 1;
  bool has_question_id() const;
  void clear_question_id();
  static const int kQuestionIdFieldNumber = 1;
  ::google::protobuf::uint32 question_id() const;
  void set_question_id(::google::protobuf::uint32 value);

  // optional .proto.dota.EDOTATriviaQuestionCategory category = 2 [default = k_EDOTATriviaQuestionCategory_AbilityIcon];
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 2;
  ::proto::dota::EDOTATriviaQuestionCategory category() const;
  void set_category(::proto::dota::EDOTATriviaQuestionCategory value);

  // optional uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 correct_answer_index = 6;
  bool has_correct_answer_index() const;
  void clear_correct_answer_index();
  static const int kCorrectAnswerIndexFieldNumber = 6;
  ::google::protobuf::uint32 correct_answer_index() const;
  void set_correct_answer_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTATriviaQuestion)
 private:
  void set_has_question_id();
  void clear_has_question_id();
  void set_has_category();
  void clear_has_category();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_question_value();
  void clear_has_question_value();
  void set_has_correct_answer_index();
  void clear_has_correct_answer_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> answer_values_;
  ::google::protobuf::internal::ArenaStringPtr question_value_;
  ::google::protobuf::uint32 question_id_;
  int category_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 correct_answer_index_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTATriviaCurrentQuestions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTATriviaCurrentQuestions) */ {
 public:
  CMsgDOTATriviaCurrentQuestions();
  virtual ~CMsgDOTATriviaCurrentQuestions();

  CMsgDOTATriviaCurrentQuestions(const CMsgDOTATriviaCurrentQuestions& from);

  inline CMsgDOTATriviaCurrentQuestions& operator=(const CMsgDOTATriviaCurrentQuestions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATriviaCurrentQuestions& default_instance();

  static inline const CMsgDOTATriviaCurrentQuestions* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTATriviaCurrentQuestions*>(
               &_CMsgDOTATriviaCurrentQuestions_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    340;

  void Swap(CMsgDOTATriviaCurrentQuestions* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTATriviaCurrentQuestions* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTATriviaCurrentQuestions* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTATriviaCurrentQuestions& from);
  void MergeFrom(const CMsgDOTATriviaCurrentQuestions& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTATriviaCurrentQuestions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CMsgDOTATriviaQuestion questions = 1;
  int questions_size() const;
  void clear_questions();
  static const int kQuestionsFieldNumber = 1;
  const ::proto::dota::CMsgDOTATriviaQuestion& questions(int index) const;
  ::proto::dota::CMsgDOTATriviaQuestion* mutable_questions(int index);
  ::proto::dota::CMsgDOTATriviaQuestion* add_questions();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTATriviaQuestion >*
      mutable_questions();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTATriviaQuestion >&
      questions() const;

  // optional bool trivia_enabled = 2;
  bool has_trivia_enabled() const;
  void clear_trivia_enabled();
  static const int kTriviaEnabledFieldNumber = 2;
  bool trivia_enabled() const;
  void set_trivia_enabled(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTATriviaCurrentQuestions)
 private:
  void set_has_trivia_enabled();
  void clear_has_trivia_enabled();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTATriviaQuestion > questions_;
  bool trivia_enabled_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTATriviaQuestionAnswersSummary : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTATriviaQuestionAnswersSummary) */ {
 public:
  CMsgDOTATriviaQuestionAnswersSummary();
  virtual ~CMsgDOTATriviaQuestionAnswersSummary();

  CMsgDOTATriviaQuestionAnswersSummary(const CMsgDOTATriviaQuestionAnswersSummary& from);

  inline CMsgDOTATriviaQuestionAnswersSummary& operator=(const CMsgDOTATriviaQuestionAnswersSummary& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTATriviaQuestionAnswersSummary& default_instance();

  static inline const CMsgDOTATriviaQuestionAnswersSummary* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTATriviaQuestionAnswersSummary*>(
               &_CMsgDOTATriviaQuestionAnswersSummary_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    341;

  void Swap(CMsgDOTATriviaQuestionAnswersSummary* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTATriviaQuestionAnswersSummary* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTATriviaQuestionAnswersSummary* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTATriviaQuestionAnswersSummary& from);
  void MergeFrom(const CMsgDOTATriviaQuestionAnswersSummary& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTATriviaQuestionAnswersSummary* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 picked_count = 2;
  int picked_count_size() const;
  void clear_picked_count();
  static const int kPickedCountFieldNumber = 2;
  ::google::protobuf::uint32 picked_count(int index) const;
  void set_picked_count(int index, ::google::protobuf::uint32 value);
  void add_picked_count(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      picked_count() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_picked_count();

  // optional bool summary_available = 1;
  bool has_summary_available() const;
  void clear_summary_available();
  static const int kSummaryAvailableFieldNumber = 1;
  bool summary_available() const;
  void set_summary_available(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTATriviaQuestionAnswersSummary)
 private:
  void set_has_summary_available();
  void clear_has_summary_available();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > picked_count_;
  bool summary_available_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitTriviaQuestionAnswer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASubmitTriviaQuestionAnswer) */ {
 public:
  CMsgDOTASubmitTriviaQuestionAnswer();
  virtual ~CMsgDOTASubmitTriviaQuestionAnswer();

  CMsgDOTASubmitTriviaQuestionAnswer(const CMsgDOTASubmitTriviaQuestionAnswer& from);

  inline CMsgDOTASubmitTriviaQuestionAnswer& operator=(const CMsgDOTASubmitTriviaQuestionAnswer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASubmitTriviaQuestionAnswer& default_instance();

  static inline const CMsgDOTASubmitTriviaQuestionAnswer* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASubmitTriviaQuestionAnswer*>(
               &_CMsgDOTASubmitTriviaQuestionAnswer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    342;

  void Swap(CMsgDOTASubmitTriviaQuestionAnswer* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTASubmitTriviaQuestionAnswer* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTASubmitTriviaQuestionAnswer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTASubmitTriviaQuestionAnswer& from);
  void MergeFrom(const CMsgDOTASubmitTriviaQuestionAnswer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTASubmitTriviaQuestionAnswer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 question_id = 1;
  bool has_question_id() const;
  void clear_question_id();
  static const int kQuestionIdFieldNumber = 1;
  ::google::protobuf::uint32 question_id() const;
  void set_question_id(::google::protobuf::uint32 value);

  // optional uint32 answer_index = 2;
  bool has_answer_index() const;
  void clear_answer_index();
  static const int kAnswerIndexFieldNumber = 2;
  ::google::protobuf::uint32 answer_index() const;
  void set_answer_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASubmitTriviaQuestionAnswer)
 private:
  void set_has_question_id();
  void clear_has_question_id();
  void set_has_answer_index();
  void clear_has_answer_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 question_id_;
  ::google::protobuf::uint32 answer_index_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTASubmitTriviaQuestionAnswerResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTASubmitTriviaQuestionAnswerResponse) */ {
 public:
  CMsgDOTASubmitTriviaQuestionAnswerResponse();
  virtual ~CMsgDOTASubmitTriviaQuestionAnswerResponse();

  CMsgDOTASubmitTriviaQuestionAnswerResponse(const CMsgDOTASubmitTriviaQuestionAnswerResponse& from);

  inline CMsgDOTASubmitTriviaQuestionAnswerResponse& operator=(const CMsgDOTASubmitTriviaQuestionAnswerResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTASubmitTriviaQuestionAnswerResponse& default_instance();

  static inline const CMsgDOTASubmitTriviaQuestionAnswerResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTASubmitTriviaQuestionAnswerResponse*>(
               &_CMsgDOTASubmitTriviaQuestionAnswerResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    343;

  void Swap(CMsgDOTASubmitTriviaQuestionAnswerResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTASubmitTriviaQuestionAnswerResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTASubmitTriviaQuestionAnswerResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTASubmitTriviaQuestionAnswerResponse& from);
  void MergeFrom(const CMsgDOTASubmitTriviaQuestionAnswerResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTASubmitTriviaQuestionAnswerResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.EDOTATriviaAnswerResult result = 1 [default = k_EDOTATriviaAnswerResult_Success];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::EDOTATriviaAnswerResult result() const;
  void set_result(::proto::dota::EDOTATriviaAnswerResult value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTASubmitTriviaQuestionAnswerResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAStartTriviaSession : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAStartTriviaSession) */ {
 public:
  CMsgDOTAStartTriviaSession();
  virtual ~CMsgDOTAStartTriviaSession();

  CMsgDOTAStartTriviaSession(const CMsgDOTAStartTriviaSession& from);

  inline CMsgDOTAStartTriviaSession& operator=(const CMsgDOTAStartTriviaSession& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStartTriviaSession& default_instance();

  static inline const CMsgDOTAStartTriviaSession* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAStartTriviaSession*>(
               &_CMsgDOTAStartTriviaSession_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    344;

  void Swap(CMsgDOTAStartTriviaSession* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAStartTriviaSession* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAStartTriviaSession* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAStartTriviaSession& from);
  void MergeFrom(const CMsgDOTAStartTriviaSession& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAStartTriviaSession* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAStartTriviaSession)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAStartTriviaSessionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAStartTriviaSessionResponse) */ {
 public:
  CMsgDOTAStartTriviaSessionResponse();
  virtual ~CMsgDOTAStartTriviaSessionResponse();

  CMsgDOTAStartTriviaSessionResponse(const CMsgDOTAStartTriviaSessionResponse& from);

  inline CMsgDOTAStartTriviaSessionResponse& operator=(const CMsgDOTAStartTriviaSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAStartTriviaSessionResponse& default_instance();

  static inline const CMsgDOTAStartTriviaSessionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAStartTriviaSessionResponse*>(
               &_CMsgDOTAStartTriviaSessionResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    345;

  void Swap(CMsgDOTAStartTriviaSessionResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAStartTriviaSessionResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAStartTriviaSessionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAStartTriviaSessionResponse& from);
  void MergeFrom(const CMsgDOTAStartTriviaSessionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAStartTriviaSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool trivia_enabled = 1;
  bool has_trivia_enabled() const;
  void clear_trivia_enabled();
  static const int kTriviaEnabledFieldNumber = 1;
  bool trivia_enabled() const;
  void set_trivia_enabled(bool value);

  // optional uint32 current_timestamp = 2;
  bool has_current_timestamp() const;
  void clear_current_timestamp();
  static const int kCurrentTimestampFieldNumber = 2;
  ::google::protobuf::uint32 current_timestamp() const;
  void set_current_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAStartTriviaSessionResponse)
 private:
  void set_has_trivia_enabled();
  void clear_has_trivia_enabled();
  void set_has_current_timestamp();
  void clear_has_current_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool trivia_enabled_;
  ::google::protobuf::uint32 current_timestamp_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGiveTip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGiveTip) */ {
 public:
  CMsgClientToGCGiveTip();
  virtual ~CMsgClientToGCGiveTip();

  CMsgClientToGCGiveTip(const CMsgClientToGCGiveTip& from);

  inline CMsgClientToGCGiveTip& operator=(const CMsgClientToGCGiveTip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGiveTip& default_instance();

  static inline const CMsgClientToGCGiveTip* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGiveTip*>(
               &_CMsgClientToGCGiveTip_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    346;

  void Swap(CMsgClientToGCGiveTip* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGiveTip* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGiveTip* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGiveTip& from);
  void MergeFrom(const CMsgClientToGCGiveTip& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGiveTip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 match_id = 2;
  bool has_match_id() const;
  void clear_match_id();
  static const int kMatchIdFieldNumber = 2;
  ::google::protobuf::uint64 match_id() const;
  void set_match_id(::google::protobuf::uint64 value);

  // optional uint32 recipient_account_id = 1;
  bool has_recipient_account_id() const;
  void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 recipient_account_id() const;
  void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional uint32 event_id = 3;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 3;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGiveTip)
 private:
  void set_has_recipient_account_id();
  void clear_has_recipient_account_id();
  void set_has_match_id();
  void clear_has_match_id();
  void set_has_event_id();
  void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 match_id_;
  ::google::protobuf::uint32 recipient_account_id_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientToGCGiveTipResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgClientToGCGiveTipResponse) */ {
 public:
  CMsgClientToGCGiveTipResponse();
  virtual ~CMsgClientToGCGiveTipResponse();

  CMsgClientToGCGiveTipResponse(const CMsgClientToGCGiveTipResponse& from);

  inline CMsgClientToGCGiveTipResponse& operator=(const CMsgClientToGCGiveTipResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientToGCGiveTipResponse& default_instance();

  static inline const CMsgClientToGCGiveTipResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientToGCGiveTipResponse*>(
               &_CMsgClientToGCGiveTipResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    347;

  void Swap(CMsgClientToGCGiveTipResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientToGCGiveTipResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientToGCGiveTipResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientToGCGiveTipResponse& from);
  void MergeFrom(const CMsgClientToGCGiveTipResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientToGCGiveTipResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientToGCGiveTipResponse_Result Result;
  static const Result SUCCESS =
    CMsgClientToGCGiveTipResponse_Result_SUCCESS;
  static const Result ERROR_ALREADY_TIPPED =
    CMsgClientToGCGiveTipResponse_Result_ERROR_ALREADY_TIPPED;
  static const Result ERROR_INVALID_MATCH_ID =
    CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_MATCH_ID;
  static const Result ERROR_INVALID_EVENT_ID =
    CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_EVENT_ID;
  static const Result ERROR_INVALID_MATCH_TIME =
    CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_MATCH_TIME;
  static const Result ERROR_NOT_WINNER =
    CMsgClientToGCGiveTipResponse_Result_ERROR_NOT_WINNER;
  static const Result ERROR_UNOWNED_EVENT =
    CMsgClientToGCGiveTipResponse_Result_ERROR_UNOWNED_EVENT;
  static const Result ERROR_INVALID_LOBBY_TYPE =
    CMsgClientToGCGiveTipResponse_Result_ERROR_INVALID_LOBBY_TYPE;
  static const Result ERROR_UNKNOWN =
    CMsgClientToGCGiveTipResponse_Result_ERROR_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return CMsgClientToGCGiveTipResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgClientToGCGiveTipResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgClientToGCGiveTipResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgClientToGCGiveTipResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgClientToGCGiveTipResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgClientToGCGiveTipResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgClientToGCGiveTipResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgClientToGCGiveTipResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgClientToGCGiveTipResponse_Result result() const;
  void set_result(::proto::dota::CMsgClientToGCGiveTipResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgClientToGCGiveTipResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAAnchorPhoneNumberRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAAnchorPhoneNumberRequest) */ {
 public:
  CMsgDOTAAnchorPhoneNumberRequest();
  virtual ~CMsgDOTAAnchorPhoneNumberRequest();

  CMsgDOTAAnchorPhoneNumberRequest(const CMsgDOTAAnchorPhoneNumberRequest& from);

  inline CMsgDOTAAnchorPhoneNumberRequest& operator=(const CMsgDOTAAnchorPhoneNumberRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAAnchorPhoneNumberRequest& default_instance();

  static inline const CMsgDOTAAnchorPhoneNumberRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAAnchorPhoneNumberRequest*>(
               &_CMsgDOTAAnchorPhoneNumberRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    348;

  void Swap(CMsgDOTAAnchorPhoneNumberRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAAnchorPhoneNumberRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAAnchorPhoneNumberRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAAnchorPhoneNumberRequest& from);
  void MergeFrom(const CMsgDOTAAnchorPhoneNumberRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAAnchorPhoneNumberRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAAnchorPhoneNumberRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAAnchorPhoneNumberResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAAnchorPhoneNumberResponse) */ {
 public:
  CMsgDOTAAnchorPhoneNumberResponse();
  virtual ~CMsgDOTAAnchorPhoneNumberResponse();

  CMsgDOTAAnchorPhoneNumberResponse(const CMsgDOTAAnchorPhoneNumberResponse& from);

  inline CMsgDOTAAnchorPhoneNumberResponse& operator=(const CMsgDOTAAnchorPhoneNumberResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAAnchorPhoneNumberResponse& default_instance();

  static inline const CMsgDOTAAnchorPhoneNumberResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAAnchorPhoneNumberResponse*>(
               &_CMsgDOTAAnchorPhoneNumberResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    349;

  void Swap(CMsgDOTAAnchorPhoneNumberResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAAnchorPhoneNumberResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAAnchorPhoneNumberResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAAnchorPhoneNumberResponse& from);
  void MergeFrom(const CMsgDOTAAnchorPhoneNumberResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAAnchorPhoneNumberResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAAnchorPhoneNumberResponse_Result Result;
  static const Result SUCCESS =
    CMsgDOTAAnchorPhoneNumberResponse_Result_SUCCESS;
  static const Result ERROR_UNKNOWN =
    CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_UNKNOWN;
  static const Result ERROR_NO_STEAM_PHONE =
    CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_NO_STEAM_PHONE;
  static const Result ERROR_ALREADY_IN_USE =
    CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_ALREADY_IN_USE;
  static const Result ERROR_COOLDOWN_ACTIVE =
    CMsgDOTAAnchorPhoneNumberResponse_Result_ERROR_COOLDOWN_ACTIVE;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTAAnchorPhoneNumberResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTAAnchorPhoneNumberResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTAAnchorPhoneNumberResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTAAnchorPhoneNumberResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTAAnchorPhoneNumberResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTAAnchorPhoneNumberResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTAAnchorPhoneNumberResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAAnchorPhoneNumberResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result result() const;
  void set_result(::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAAnchorPhoneNumberResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAUnanchorPhoneNumberRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAUnanchorPhoneNumberRequest) */ {
 public:
  CMsgDOTAUnanchorPhoneNumberRequest();
  virtual ~CMsgDOTAUnanchorPhoneNumberRequest();

  CMsgDOTAUnanchorPhoneNumberRequest(const CMsgDOTAUnanchorPhoneNumberRequest& from);

  inline CMsgDOTAUnanchorPhoneNumberRequest& operator=(const CMsgDOTAUnanchorPhoneNumberRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAUnanchorPhoneNumberRequest& default_instance();

  static inline const CMsgDOTAUnanchorPhoneNumberRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAUnanchorPhoneNumberRequest*>(
               &_CMsgDOTAUnanchorPhoneNumberRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    350;

  void Swap(CMsgDOTAUnanchorPhoneNumberRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAUnanchorPhoneNumberRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAUnanchorPhoneNumberRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAUnanchorPhoneNumberRequest& from);
  void MergeFrom(const CMsgDOTAUnanchorPhoneNumberRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAUnanchorPhoneNumberRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAUnanchorPhoneNumberRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgDOTAUnanchorPhoneNumberResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgDOTAUnanchorPhoneNumberResponse) */ {
 public:
  CMsgDOTAUnanchorPhoneNumberResponse();
  virtual ~CMsgDOTAUnanchorPhoneNumberResponse();

  CMsgDOTAUnanchorPhoneNumberResponse(const CMsgDOTAUnanchorPhoneNumberResponse& from);

  inline CMsgDOTAUnanchorPhoneNumberResponse& operator=(const CMsgDOTAUnanchorPhoneNumberResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgDOTAUnanchorPhoneNumberResponse& default_instance();

  static inline const CMsgDOTAUnanchorPhoneNumberResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgDOTAUnanchorPhoneNumberResponse*>(
               &_CMsgDOTAUnanchorPhoneNumberResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    351;

  void Swap(CMsgDOTAUnanchorPhoneNumberResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgDOTAUnanchorPhoneNumberResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgDOTAUnanchorPhoneNumberResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgDOTAUnanchorPhoneNumberResponse& from);
  void MergeFrom(const CMsgDOTAUnanchorPhoneNumberResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgDOTAUnanchorPhoneNumberResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgDOTAUnanchorPhoneNumberResponse_Result Result;
  static const Result SUCCESS =
    CMsgDOTAUnanchorPhoneNumberResponse_Result_SUCCESS;
  static const Result ERROR_UNKNOWN =
    CMsgDOTAUnanchorPhoneNumberResponse_Result_ERROR_UNKNOWN;
  static inline bool Result_IsValid(int value) {
    return CMsgDOTAUnanchorPhoneNumberResponse_Result_IsValid(value);
  }
  static const Result Result_MIN =
    CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_MIN;
  static const Result Result_MAX =
    CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_MAX;
  static const int Result_ARRAYSIZE =
    CMsgDOTAUnanchorPhoneNumberResponse_Result_Result_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Result_descriptor() {
    return CMsgDOTAUnanchorPhoneNumberResponse_Result_descriptor();
  }
  static inline const ::std::string& Result_Name(Result value) {
    return CMsgDOTAUnanchorPhoneNumberResponse_Result_Name(value);
  }
  static inline bool Result_Parse(const ::std::string& name,
      Result* value) {
    return CMsgDOTAUnanchorPhoneNumberResponse_Result_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgDOTAUnanchorPhoneNumberResponse.Result result = 1 [default = SUCCESS];
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result result() const;
  void set_result(::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgDOTAUnanchorPhoneNumberResponse)
 private:
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int result_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGCToClientTipNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGCToClientTipNotification) */ {
 public:
  CMsgGCToClientTipNotification();
  virtual ~CMsgGCToClientTipNotification();

  CMsgGCToClientTipNotification(const CMsgGCToClientTipNotification& from);

  inline CMsgGCToClientTipNotification& operator=(const CMsgGCToClientTipNotification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGCToClientTipNotification& default_instance();

  static inline const CMsgGCToClientTipNotification* internal_default_instance() {
    return reinterpret_cast<const CMsgGCToClientTipNotification*>(
               &_CMsgGCToClientTipNotification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    352;

  void Swap(CMsgGCToClientTipNotification* other);

  // implements Message ----------------------------------------------

  inline CMsgGCToClientTipNotification* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGCToClientTipNotification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGCToClientTipNotification& from);
  void MergeFrom(const CMsgGCToClientTipNotification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGCToClientTipNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string tipper_name = 2;
  bool has_tipper_name() const;
  void clear_tipper_name();
  static const int kTipperNameFieldNumber = 2;
  const ::std::string& tipper_name() const;
  void set_tipper_name(const ::std::string& value);
  #if LANG_CXX11
  void set_tipper_name(::std::string&& value);
  #endif
  void set_tipper_name(const char* value);
  void set_tipper_name(const char* value, size_t size);
  ::std::string* mutable_tipper_name();
  ::std::string* release_tipper_name();
  void set_allocated_tipper_name(::std::string* tipper_name);

  // optional string recipient_name = 4;
  bool has_recipient_name() const;
  void clear_recipient_name();
  static const int kRecipientNameFieldNumber = 4;
  const ::std::string& recipient_name() const;
  void set_recipient_name(const ::std::string& value);
  #if LANG_CXX11
  void set_recipient_name(::std::string&& value);
  #endif
  void set_recipient_name(const char* value);
  void set_recipient_name(const char* value, size_t size);
  ::std::string* mutable_recipient_name();
  ::std::string* release_recipient_name();
  void set_allocated_recipient_name(::std::string* recipient_name);

  // optional uint32 tipper_account_id = 1;
  bool has_tipper_account_id() const;
  void clear_tipper_account_id();
  static const int kTipperAccountIdFieldNumber = 1;
  ::google::protobuf::uint32 tipper_account_id() const;
  void set_tipper_account_id(::google::protobuf::uint32 value);

  // optional uint32 recipient_account_id = 3;
  bool has_recipient_account_id() const;
  void clear_recipient_account_id();
  static const int kRecipientAccountIdFieldNumber = 3;
  ::google::protobuf::uint32 recipient_account_id() const;
  void set_recipient_account_id(::google::protobuf::uint32 value);

  // optional uint32 event_id = 5;
  bool has_event_id() const;
  void clear_event_id();
  static const int kEventIdFieldNumber = 5;
  ::google::protobuf::uint32 event_id() const;
  void set_event_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGCToClientTipNotification)
 private:
  void set_has_tipper_account_id();
  void clear_has_tipper_account_id();
  void set_has_tipper_name();
  void clear_has_tipper_name();
  void set_has_recipient_account_id();
  void clear_has_recipient_account_id();
  void set_has_recipient_name();
  void clear_has_recipient_name();
  void set_has_event_id();
  void clear_has_event_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr tipper_name_;
  ::google::protobuf::internal::ArenaStringPtr recipient_name_;
  ::google::protobuf::uint32 tipper_account_id_;
  ::google::protobuf::uint32 recipient_account_id_;
  ::google::protobuf::uint32 event_id_;
  friend struct protobuf_dota_5fgcmessages_5fclient_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientSuspended

// optional uint32 time_end = 1;
inline bool CMsgClientSuspended::has_time_end() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientSuspended::set_has_time_end() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientSuspended::clear_has_time_end() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientSuspended::clear_time_end() {
  time_end_ = 0u;
  clear_has_time_end();
}
inline ::google::protobuf::uint32 CMsgClientSuspended::time_end() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientSuspended.time_end)
  return time_end_;
}
inline void CMsgClientSuspended::set_time_end(::google::protobuf::uint32 value) {
  set_has_time_end();
  time_end_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientSuspended.time_end)
}

// -------------------------------------------------------------------

// CMsgRequestInternationalTicket

// -------------------------------------------------------------------

// CMsgBalancedShuffleLobby

// -------------------------------------------------------------------

// CMsgInitialQuestionnaireResponse

// optional uint32 initial_skill = 1;
inline bool CMsgInitialQuestionnaireResponse::has_initial_skill() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgInitialQuestionnaireResponse::set_has_initial_skill() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgInitialQuestionnaireResponse::clear_has_initial_skill() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgInitialQuestionnaireResponse::clear_initial_skill() {
  initial_skill_ = 0u;
  clear_has_initial_skill();
}
inline ::google::protobuf::uint32 CMsgInitialQuestionnaireResponse::initial_skill() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgInitialQuestionnaireResponse.initial_skill)
  return initial_skill_;
}
inline void CMsgInitialQuestionnaireResponse::set_initial_skill(::google::protobuf::uint32 value) {
  set_has_initial_skill();
  initial_skill_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgInitialQuestionnaireResponse.initial_skill)
}

// -------------------------------------------------------------------

// CMsgDOTAPlayerMatchHistory

// repeated uint64 match_ids = 1;
inline int CMsgDOTAPlayerMatchHistory::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgDOTAPlayerMatchHistory::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAPlayerMatchHistory::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPlayerMatchHistory.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgDOTAPlayerMatchHistory::set_match_ids(int index, ::google::protobuf::uint64 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPlayerMatchHistory.match_ids)
}
inline void CMsgDOTAPlayerMatchHistory::add_match_ids(::google::protobuf::uint64 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPlayerMatchHistory.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAPlayerMatchHistory::match_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAPlayerMatchHistory.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAPlayerMatchHistory::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAPlayerMatchHistory.match_ids)
  return &match_ids_;
}

// -------------------------------------------------------------------

// CMsgDOTAMatchHistoryFilter

// repeated uint64 match_ids = 1;
inline int CMsgDOTAMatchHistoryFilter::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgDOTAMatchHistoryFilter::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAMatchHistoryFilter::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchHistoryFilter.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgDOTAMatchHistoryFilter::set_match_ids(int index, ::google::protobuf::uint64 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchHistoryFilter.match_ids)
}
inline void CMsgDOTAMatchHistoryFilter::add_match_ids(::google::protobuf::uint64 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAMatchHistoryFilter.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAMatchHistoryFilter::match_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAMatchHistoryFilter.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAMatchHistoryFilter::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAMatchHistoryFilter.match_ids)
  return &match_ids_;
}

// optional uint64 newest_match_id_at_last_query = 2;
inline bool CMsgDOTAMatchHistoryFilter::has_newest_match_id_at_last_query() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchHistoryFilter::set_has_newest_match_id_at_last_query() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatchHistoryFilter::clear_has_newest_match_id_at_last_query() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatchHistoryFilter::clear_newest_match_id_at_last_query() {
  newest_match_id_at_last_query_ = GOOGLE_ULONGLONG(0);
  clear_has_newest_match_id_at_last_query();
}
inline ::google::protobuf::uint64 CMsgDOTAMatchHistoryFilter::newest_match_id_at_last_query() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchHistoryFilter.newest_match_id_at_last_query)
  return newest_match_id_at_last_query_;
}
inline void CMsgDOTAMatchHistoryFilter::set_newest_match_id_at_last_query(::google::protobuf::uint64 value) {
  set_has_newest_match_id_at_last_query();
  newest_match_id_at_last_query_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchHistoryFilter.newest_match_id_at_last_query)
}

// optional uint32 time_last_query = 3;
inline bool CMsgDOTAMatchHistoryFilter::has_time_last_query() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatchHistoryFilter::set_has_time_last_query() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatchHistoryFilter::clear_has_time_last_query() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatchHistoryFilter::clear_time_last_query() {
  time_last_query_ = 0u;
  clear_has_time_last_query();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchHistoryFilter::time_last_query() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchHistoryFilter.time_last_query)
  return time_last_query_;
}
inline void CMsgDOTAMatchHistoryFilter::set_time_last_query(::google::protobuf::uint32 value) {
  set_has_time_last_query();
  time_last_query_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchHistoryFilter.time_last_query)
}

// -------------------------------------------------------------------

// CMsgDOTARequestMatches

// optional uint32 hero_id = 2;
inline bool CMsgDOTARequestMatches::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestMatches::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestMatches::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.hero_id)
  return hero_id_;
}
inline void CMsgDOTARequestMatches::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.hero_id)
}

// optional uint32 game_mode = 3;
inline bool CMsgDOTARequestMatches::has_game_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_game_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARequestMatches::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARequestMatches::clear_game_mode() {
  game_mode_ = 0u;
  clear_has_game_mode();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::game_mode() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.game_mode)
  return game_mode_;
}
inline void CMsgDOTARequestMatches::set_game_mode(::google::protobuf::uint32 value) {
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.game_mode)
}

// optional fixed32 date_min = 6;
inline bool CMsgDOTARequestMatches::has_date_min() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_date_min() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARequestMatches::clear_has_date_min() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARequestMatches::clear_date_min() {
  date_min_ = 0u;
  clear_has_date_min();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::date_min() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.date_min)
  return date_min_;
}
inline void CMsgDOTARequestMatches::set_date_min(::google::protobuf::uint32 value) {
  set_has_date_min();
  date_min_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.date_min)
}

// optional fixed32 date_max = 7;
inline bool CMsgDOTARequestMatches::has_date_max() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_date_max() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTARequestMatches::clear_has_date_max() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTARequestMatches::clear_date_max() {
  date_max_ = 0u;
  clear_has_date_max();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::date_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.date_max)
  return date_max_;
}
inline void CMsgDOTARequestMatches::set_date_max(::google::protobuf::uint32 value) {
  set_has_date_max();
  date_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.date_max)
}

// optional uint32 matches_requested = 10;
inline bool CMsgDOTARequestMatches::has_matches_requested() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_matches_requested() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTARequestMatches::clear_has_matches_requested() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTARequestMatches::clear_matches_requested() {
  matches_requested_ = 0u;
  clear_has_matches_requested();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::matches_requested() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.matches_requested)
  return matches_requested_;
}
inline void CMsgDOTARequestMatches::set_matches_requested(::google::protobuf::uint32 value) {
  set_has_matches_requested();
  matches_requested_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.matches_requested)
}

// optional uint64 start_at_match_id = 11;
inline bool CMsgDOTARequestMatches::has_start_at_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_start_at_match_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTARequestMatches::clear_has_start_at_match_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTARequestMatches::clear_start_at_match_id() {
  start_at_match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_start_at_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTARequestMatches::start_at_match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.start_at_match_id)
  return start_at_match_id_;
}
inline void CMsgDOTARequestMatches::set_start_at_match_id(::google::protobuf::uint64 value) {
  set_has_start_at_match_id();
  start_at_match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.start_at_match_id)
}

// optional fixed32 min_players = 12;
inline bool CMsgDOTARequestMatches::has_min_players() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_min_players() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTARequestMatches::clear_has_min_players() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTARequestMatches::clear_min_players() {
  min_players_ = 0u;
  clear_has_min_players();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::min_players() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.min_players)
  return min_players_;
}
inline void CMsgDOTARequestMatches::set_min_players(::google::protobuf::uint32 value) {
  set_has_min_players();
  min_players_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.min_players)
}

// optional uint32 request_id = 13;
inline bool CMsgDOTARequestMatches::has_request_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_request_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTARequestMatches::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTARequestMatches::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::request_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.request_id)
  return request_id_;
}
inline void CMsgDOTARequestMatches::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.request_id)
}

// optional bool tournament_games_only = 14;
inline bool CMsgDOTARequestMatches::has_tournament_games_only() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_tournament_games_only() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTARequestMatches::clear_has_tournament_games_only() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTARequestMatches::clear_tournament_games_only() {
  tournament_games_only_ = false;
  clear_has_tournament_games_only();
}
inline bool CMsgDOTARequestMatches::tournament_games_only() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.tournament_games_only)
  return tournament_games_only_;
}
inline void CMsgDOTARequestMatches::set_tournament_games_only(bool value) {
  set_has_tournament_games_only();
  tournament_games_only_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.tournament_games_only)
}

// optional uint32 account_id = 15;
inline bool CMsgDOTARequestMatches::has_account_id() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_account_id() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTARequestMatches::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTARequestMatches::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.account_id)
  return account_id_;
}
inline void CMsgDOTARequestMatches::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.account_id)
}

// optional uint32 league_id = 16;
inline bool CMsgDOTARequestMatches::has_league_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_league_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTARequestMatches::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTARequestMatches::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.league_id)
  return league_id_;
}
inline void CMsgDOTARequestMatches::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.league_id)
}

// optional .proto.dota.CMsgDOTARequestMatches.SkillLevel skill = 17 [default = Any];
inline bool CMsgDOTARequestMatches::has_skill() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_skill() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTARequestMatches::clear_has_skill() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTARequestMatches::clear_skill() {
  skill_ = 0;
  clear_has_skill();
}
inline ::proto::dota::CMsgDOTARequestMatches_SkillLevel CMsgDOTARequestMatches::skill() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.skill)
  return static_cast< ::proto::dota::CMsgDOTARequestMatches_SkillLevel >(skill_);
}
inline void CMsgDOTARequestMatches::set_skill(::proto::dota::CMsgDOTARequestMatches_SkillLevel value) {
  assert(::proto::dota::CMsgDOTARequestMatches_SkillLevel_IsValid(value));
  set_has_skill();
  skill_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.skill)
}

// optional uint32 team_id = 18;
inline bool CMsgDOTARequestMatches::has_team_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_team_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTARequestMatches::clear_has_team_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTARequestMatches::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatches::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.team_id)
  return team_id_;
}
inline void CMsgDOTARequestMatches::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.team_id)
}

// optional uint64 custom_game_id = 20;
inline bool CMsgDOTARequestMatches::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTARequestMatches::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTARequestMatches::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTARequestMatches::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgDOTARequestMatches::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatches.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTARequestMatches::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatches.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgDOTARequestMatchesResponse_Series

// repeated .proto.dota.CMsgDOTAMatch matches = 1;
inline int CMsgDOTARequestMatchesResponse_Series::matches_size() const {
  return matches_.size();
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_matches() {
  matches_.Clear();
}
inline const ::proto::dota::CMsgDOTAMatch& CMsgDOTARequestMatchesResponse_Series::matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_.Get(index);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse_Series::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse_Series::add_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
CMsgDOTARequestMatchesResponse_Series::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTARequestMatchesResponse.Series.matches)
  return &matches_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
CMsgDOTARequestMatchesResponse_Series::matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTARequestMatchesResponse.Series.matches)
  return matches_;
}

// optional uint32 series_id = 2;
inline bool CMsgDOTARequestMatchesResponse_Series::has_series_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_has_series_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_has_series_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_series_id() {
  series_id_ = 0u;
  clear_has_series_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse_Series::series_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.Series.series_id)
  return series_id_;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_series_id(::google::protobuf::uint32 value) {
  set_has_series_id();
  series_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatchesResponse.Series.series_id)
}

// optional uint32 series_type = 3;
inline bool CMsgDOTARequestMatchesResponse_Series::has_series_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_has_series_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_has_series_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARequestMatchesResponse_Series::clear_series_type() {
  series_type_ = 0u;
  clear_has_series_type();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse_Series::series_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.Series.series_type)
  return series_type_;
}
inline void CMsgDOTARequestMatchesResponse_Series::set_series_type(::google::protobuf::uint32 value) {
  set_has_series_type();
  series_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatchesResponse.Series.series_type)
}

// -------------------------------------------------------------------

// CMsgDOTARequestMatchesResponse

// repeated .proto.dota.CMsgDOTAMatch matches = 1;
inline int CMsgDOTARequestMatchesResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgDOTARequestMatchesResponse::clear_matches() {
  matches_.Clear();
}
inline const ::proto::dota::CMsgDOTAMatch& CMsgDOTARequestMatchesResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.matches)
  return matches_.Get(index);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTARequestMatchesResponse.matches)
  return matches_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTARequestMatchesResponse::add_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTARequestMatchesResponse.matches)
  return matches_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
CMsgDOTARequestMatchesResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTARequestMatchesResponse.matches)
  return &matches_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
CMsgDOTARequestMatchesResponse::matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTARequestMatchesResponse.matches)
  return matches_;
}

// repeated .proto.dota.CMsgDOTARequestMatchesResponse.Series series = 2;
inline int CMsgDOTARequestMatchesResponse::series_size() const {
  return series_.size();
}
inline void CMsgDOTARequestMatchesResponse::clear_series() {
  series_.Clear();
}
inline const ::proto::dota::CMsgDOTARequestMatchesResponse_Series& CMsgDOTARequestMatchesResponse::series(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.series)
  return series_.Get(index);
}
inline ::proto::dota::CMsgDOTARequestMatchesResponse_Series* CMsgDOTARequestMatchesResponse::mutable_series(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTARequestMatchesResponse.series)
  return series_.Mutable(index);
}
inline ::proto::dota::CMsgDOTARequestMatchesResponse_Series* CMsgDOTARequestMatchesResponse::add_series() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTARequestMatchesResponse.series)
  return series_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestMatchesResponse_Series >*
CMsgDOTARequestMatchesResponse::mutable_series() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTARequestMatchesResponse.series)
  return &series_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTARequestMatchesResponse_Series >&
CMsgDOTARequestMatchesResponse::series() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTARequestMatchesResponse.series)
  return series_;
}

// optional uint32 request_id = 3;
inline bool CMsgDOTARequestMatchesResponse::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestMatchesResponse::set_has_request_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestMatchesResponse::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestMatchesResponse::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse::request_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.request_id)
  return request_id_;
}
inline void CMsgDOTARequestMatchesResponse::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatchesResponse.request_id)
}

// optional uint32 total_results = 4;
inline bool CMsgDOTARequestMatchesResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARequestMatchesResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARequestMatchesResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARequestMatchesResponse::clear_total_results() {
  total_results_ = 0u;
  clear_has_total_results();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse::total_results() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.total_results)
  return total_results_;
}
inline void CMsgDOTARequestMatchesResponse::set_total_results(::google::protobuf::uint32 value) {
  set_has_total_results();
  total_results_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatchesResponse.total_results)
}

// optional uint32 results_remaining = 5;
inline bool CMsgDOTARequestMatchesResponse::has_results_remaining() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTARequestMatchesResponse::set_has_results_remaining() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTARequestMatchesResponse::clear_has_results_remaining() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTARequestMatchesResponse::clear_results_remaining() {
  results_remaining_ = 0u;
  clear_has_results_remaining();
}
inline ::google::protobuf::uint32 CMsgDOTARequestMatchesResponse::results_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestMatchesResponse.results_remaining)
  return results_remaining_;
}
inline void CMsgDOTARequestMatchesResponse::set_results_remaining(::google::protobuf::uint32 value) {
  set_has_results_remaining();
  results_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestMatchesResponse.results_remaining)
}

// -------------------------------------------------------------------

// CMsgDOTAPopup

// optional .proto.dota.CMsgDOTAPopup.PopupID id = 1 [default = NONE];
inline bool CMsgDOTAPopup::has_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAPopup::set_has_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAPopup::clear_has_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAPopup::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::proto::dota::CMsgDOTAPopup_PopupID CMsgDOTAPopup::id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.id)
  return static_cast< ::proto::dota::CMsgDOTAPopup_PopupID >(id_);
}
inline void CMsgDOTAPopup::set_id(::proto::dota::CMsgDOTAPopup_PopupID value) {
  assert(::proto::dota::CMsgDOTAPopup_PopupID_IsValid(value));
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.id)
}

// optional string custom_text = 2;
inline bool CMsgDOTAPopup::has_custom_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPopup::set_has_custom_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPopup::clear_has_custom_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPopup::clear_custom_text() {
  custom_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_custom_text();
}
inline const ::std::string& CMsgDOTAPopup::custom_text() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.custom_text)
  return custom_text_.GetNoArena();
}
inline void CMsgDOTAPopup::set_custom_text(const ::std::string& value) {
  set_has_custom_text();
  custom_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.custom_text)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_custom_text(::std::string&& value) {
  set_has_custom_text();
  custom_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPopup.custom_text)
}
#endif
inline void CMsgDOTAPopup::set_custom_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_custom_text();
  custom_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.custom_text)
}
inline void CMsgDOTAPopup::set_custom_text(const char* value, size_t size) {
  set_has_custom_text();
  custom_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.custom_text)
}
inline ::std::string* CMsgDOTAPopup::mutable_custom_text() {
  set_has_custom_text();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.custom_text)
  return custom_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPopup::release_custom_text() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPopup.custom_text)
  clear_has_custom_text();
  return custom_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPopup::set_allocated_custom_text(::std::string* custom_text) {
  if (custom_text != NULL) {
    set_has_custom_text();
  } else {
    clear_has_custom_text();
  }
  custom_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_text);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPopup.custom_text)
}

// optional sint32 int_data = 3;
inline bool CMsgDOTAPopup::has_int_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAPopup::set_has_int_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAPopup::clear_has_int_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAPopup::clear_int_data() {
  int_data_ = 0;
  clear_has_int_data();
}
inline ::google::protobuf::int32 CMsgDOTAPopup::int_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.int_data)
  return int_data_;
}
inline void CMsgDOTAPopup::set_int_data(::google::protobuf::int32 value) {
  set_has_int_data();
  int_data_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.int_data)
}

// optional bytes popup_data = 4;
inline bool CMsgDOTAPopup::has_popup_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPopup::set_has_popup_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPopup::clear_has_popup_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPopup::clear_popup_data() {
  popup_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_popup_data();
}
inline const ::std::string& CMsgDOTAPopup::popup_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.popup_data)
  return popup_data_.GetNoArena();
}
inline void CMsgDOTAPopup::set_popup_data(const ::std::string& value) {
  set_has_popup_data();
  popup_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.popup_data)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_popup_data(::std::string&& value) {
  set_has_popup_data();
  popup_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPopup.popup_data)
}
#endif
inline void CMsgDOTAPopup::set_popup_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_popup_data();
  popup_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.popup_data)
}
inline void CMsgDOTAPopup::set_popup_data(const void* value, size_t size) {
  set_has_popup_data();
  popup_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.popup_data)
}
inline ::std::string* CMsgDOTAPopup::mutable_popup_data() {
  set_has_popup_data();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.popup_data)
  return popup_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPopup::release_popup_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPopup.popup_data)
  clear_has_popup_data();
  return popup_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPopup::set_allocated_popup_data(::std::string* popup_data) {
  if (popup_data != NULL) {
    set_has_popup_data();
  } else {
    clear_has_popup_data();
  }
  popup_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), popup_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPopup.popup_data)
}

// optional string loc_token_header = 5;
inline bool CMsgDOTAPopup::has_loc_token_header() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPopup::set_has_loc_token_header() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAPopup::clear_has_loc_token_header() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAPopup::clear_loc_token_header() {
  loc_token_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_loc_token_header();
}
inline const ::std::string& CMsgDOTAPopup::loc_token_header() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.loc_token_header)
  return loc_token_header_.GetNoArena();
}
inline void CMsgDOTAPopup::set_loc_token_header(const ::std::string& value) {
  set_has_loc_token_header();
  loc_token_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.loc_token_header)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_loc_token_header(::std::string&& value) {
  set_has_loc_token_header();
  loc_token_header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPopup.loc_token_header)
}
#endif
inline void CMsgDOTAPopup::set_loc_token_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_loc_token_header();
  loc_token_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.loc_token_header)
}
inline void CMsgDOTAPopup::set_loc_token_header(const char* value, size_t size) {
  set_has_loc_token_header();
  loc_token_header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.loc_token_header)
}
inline ::std::string* CMsgDOTAPopup::mutable_loc_token_header() {
  set_has_loc_token_header();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.loc_token_header)
  return loc_token_header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPopup::release_loc_token_header() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPopup.loc_token_header)
  clear_has_loc_token_header();
  return loc_token_header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPopup::set_allocated_loc_token_header(::std::string* loc_token_header) {
  if (loc_token_header != NULL) {
    set_has_loc_token_header();
  } else {
    clear_has_loc_token_header();
  }
  loc_token_header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loc_token_header);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPopup.loc_token_header)
}

// optional string loc_token_msg = 6;
inline bool CMsgDOTAPopup::has_loc_token_msg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAPopup::set_has_loc_token_msg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAPopup::clear_has_loc_token_msg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAPopup::clear_loc_token_msg() {
  loc_token_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_loc_token_msg();
}
inline const ::std::string& CMsgDOTAPopup::loc_token_msg() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.loc_token_msg)
  return loc_token_msg_.GetNoArena();
}
inline void CMsgDOTAPopup::set_loc_token_msg(const ::std::string& value) {
  set_has_loc_token_msg();
  loc_token_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.loc_token_msg)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_loc_token_msg(::std::string&& value) {
  set_has_loc_token_msg();
  loc_token_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPopup.loc_token_msg)
}
#endif
inline void CMsgDOTAPopup::set_loc_token_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_loc_token_msg();
  loc_token_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.loc_token_msg)
}
inline void CMsgDOTAPopup::set_loc_token_msg(const char* value, size_t size) {
  set_has_loc_token_msg();
  loc_token_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.loc_token_msg)
}
inline ::std::string* CMsgDOTAPopup::mutable_loc_token_msg() {
  set_has_loc_token_msg();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.loc_token_msg)
  return loc_token_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPopup::release_loc_token_msg() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPopup.loc_token_msg)
  clear_has_loc_token_msg();
  return loc_token_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPopup::set_allocated_loc_token_msg(::std::string* loc_token_msg) {
  if (loc_token_msg != NULL) {
    set_has_loc_token_msg();
  } else {
    clear_has_loc_token_msg();
  }
  loc_token_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loc_token_msg);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPopup.loc_token_msg)
}

// repeated string var_names = 7;
inline int CMsgDOTAPopup::var_names_size() const {
  return var_names_.size();
}
inline void CMsgDOTAPopup::clear_var_names() {
  var_names_.Clear();
}
inline const ::std::string& CMsgDOTAPopup::var_names(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.var_names)
  return var_names_.Get(index);
}
inline ::std::string* CMsgDOTAPopup::mutable_var_names(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.var_names)
  return var_names_.Mutable(index);
}
inline void CMsgDOTAPopup::set_var_names(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.var_names)
  var_names_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_var_names(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.var_names)
  var_names_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgDOTAPopup::set_var_names(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  var_names_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.var_names)
}
inline void CMsgDOTAPopup::set_var_names(int index, const char* value, size_t size) {
  var_names_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.var_names)
}
inline ::std::string* CMsgDOTAPopup::add_var_names() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgDOTAPopup.var_names)
  return var_names_.Add();
}
inline void CMsgDOTAPopup::add_var_names(const ::std::string& value) {
  var_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPopup.var_names)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::add_var_names(::std::string&& value) {
  var_names_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPopup.var_names)
}
#endif
inline void CMsgDOTAPopup::add_var_names(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  var_names_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgDOTAPopup.var_names)
}
inline void CMsgDOTAPopup::add_var_names(const char* value, size_t size) {
  var_names_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgDOTAPopup.var_names)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDOTAPopup::var_names() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAPopup.var_names)
  return var_names_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDOTAPopup::mutable_var_names() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAPopup.var_names)
  return &var_names_;
}

// repeated string var_values = 8;
inline int CMsgDOTAPopup::var_values_size() const {
  return var_values_.size();
}
inline void CMsgDOTAPopup::clear_var_values() {
  var_values_.Clear();
}
inline const ::std::string& CMsgDOTAPopup::var_values(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.var_values)
  return var_values_.Get(index);
}
inline ::std::string* CMsgDOTAPopup::mutable_var_values(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.var_values)
  return var_values_.Mutable(index);
}
inline void CMsgDOTAPopup::set_var_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.var_values)
  var_values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_var_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.var_values)
  var_values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgDOTAPopup::set_var_values(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  var_values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.var_values)
}
inline void CMsgDOTAPopup::set_var_values(int index, const char* value, size_t size) {
  var_values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.var_values)
}
inline ::std::string* CMsgDOTAPopup::add_var_values() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgDOTAPopup.var_values)
  return var_values_.Add();
}
inline void CMsgDOTAPopup::add_var_values(const ::std::string& value) {
  var_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPopup.var_values)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::add_var_values(::std::string&& value) {
  var_values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPopup.var_values)
}
#endif
inline void CMsgDOTAPopup::add_var_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  var_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgDOTAPopup.var_values)
}
inline void CMsgDOTAPopup::add_var_values(const char* value, size_t size) {
  var_values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgDOTAPopup.var_values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDOTAPopup::var_values() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAPopup.var_values)
  return var_values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDOTAPopup::mutable_var_values() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAPopup.var_values)
  return &var_values_;
}

// optional string debug_text = 9;
inline bool CMsgDOTAPopup::has_debug_text() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAPopup::set_has_debug_text() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAPopup::clear_has_debug_text() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAPopup::clear_debug_text() {
  debug_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_debug_text();
}
inline const ::std::string& CMsgDOTAPopup::debug_text() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPopup.debug_text)
  return debug_text_.GetNoArena();
}
inline void CMsgDOTAPopup::set_debug_text(const ::std::string& value) {
  set_has_debug_text();
  debug_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPopup.debug_text)
}
#if LANG_CXX11
inline void CMsgDOTAPopup::set_debug_text(::std::string&& value) {
  set_has_debug_text();
  debug_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPopup.debug_text)
}
#endif
inline void CMsgDOTAPopup::set_debug_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_debug_text();
  debug_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPopup.debug_text)
}
inline void CMsgDOTAPopup::set_debug_text(const char* value, size_t size) {
  set_has_debug_text();
  debug_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPopup.debug_text)
}
inline ::std::string* CMsgDOTAPopup::mutable_debug_text() {
  set_has_debug_text();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPopup.debug_text)
  return debug_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPopup::release_debug_text() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPopup.debug_text)
  clear_has_debug_text();
  return debug_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPopup::set_allocated_debug_text(::std::string* debug_text) {
  if (debug_text != NULL) {
    set_has_debug_text();
  } else {
    clear_has_debug_text();
  }
  debug_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debug_text);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPopup.debug_text)
}

// -------------------------------------------------------------------

// CMsgDOTAReportsRemainingRequest

// -------------------------------------------------------------------

// CMsgDOTAReportsRemainingResponse

// optional uint32 num_positive_reports_remaining = 1;
inline bool CMsgDOTAReportsRemainingResponse::has_num_positive_reports_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::set_has_num_positive_reports_remaining() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_has_num_positive_reports_remaining() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_positive_reports_remaining() {
  num_positive_reports_remaining_ = 0u;
  clear_has_num_positive_reports_remaining();
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_positive_reports_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportsRemainingResponse.num_positive_reports_remaining)
  return num_positive_reports_remaining_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_positive_reports_remaining(::google::protobuf::uint32 value) {
  set_has_num_positive_reports_remaining();
  num_positive_reports_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportsRemainingResponse.num_positive_reports_remaining)
}

// optional uint32 num_negative_reports_remaining = 2;
inline bool CMsgDOTAReportsRemainingResponse::has_num_negative_reports_remaining() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::set_has_num_negative_reports_remaining() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_has_num_negative_reports_remaining() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_negative_reports_remaining() {
  num_negative_reports_remaining_ = 0u;
  clear_has_num_negative_reports_remaining();
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_negative_reports_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportsRemainingResponse.num_negative_reports_remaining)
  return num_negative_reports_remaining_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_negative_reports_remaining(::google::protobuf::uint32 value) {
  set_has_num_negative_reports_remaining();
  num_negative_reports_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportsRemainingResponse.num_negative_reports_remaining)
}

// optional uint32 num_positive_reports_total = 3;
inline bool CMsgDOTAReportsRemainingResponse::has_num_positive_reports_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::set_has_num_positive_reports_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_has_num_positive_reports_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_positive_reports_total() {
  num_positive_reports_total_ = 0u;
  clear_has_num_positive_reports_total();
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_positive_reports_total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportsRemainingResponse.num_positive_reports_total)
  return num_positive_reports_total_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_positive_reports_total(::google::protobuf::uint32 value) {
  set_has_num_positive_reports_total();
  num_positive_reports_total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportsRemainingResponse.num_positive_reports_total)
}

// optional uint32 num_negative_reports_total = 4;
inline bool CMsgDOTAReportsRemainingResponse::has_num_negative_reports_total() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAReportsRemainingResponse::set_has_num_negative_reports_total() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_has_num_negative_reports_total() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAReportsRemainingResponse::clear_num_negative_reports_total() {
  num_negative_reports_total_ = 0u;
  clear_has_num_negative_reports_total();
}
inline ::google::protobuf::uint32 CMsgDOTAReportsRemainingResponse::num_negative_reports_total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportsRemainingResponse.num_negative_reports_total)
  return num_negative_reports_total_;
}
inline void CMsgDOTAReportsRemainingResponse::set_num_negative_reports_total(::google::protobuf::uint32 value) {
  set_has_num_negative_reports_total();
  num_negative_reports_total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportsRemainingResponse.num_negative_reports_total)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitPlayerReport

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitPlayerReport::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTASubmitPlayerReport::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTASubmitPlayerReport::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReport::target_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReport.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitPlayerReport::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReport.target_account_id)
}

// optional uint32 report_flags = 2;
inline bool CMsgDOTASubmitPlayerReport::has_report_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::set_has_report_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTASubmitPlayerReport::clear_has_report_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTASubmitPlayerReport::clear_report_flags() {
  report_flags_ = 0u;
  clear_has_report_flags();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReport::report_flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReport.report_flags)
  return report_flags_;
}
inline void CMsgDOTASubmitPlayerReport::set_report_flags(::google::protobuf::uint32 value) {
  set_has_report_flags();
  report_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReport.report_flags)
}

// optional uint64 lobby_id = 4;
inline bool CMsgDOTASubmitPlayerReport::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTASubmitPlayerReport::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTASubmitPlayerReport::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgDOTASubmitPlayerReport::lobby_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReport.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTASubmitPlayerReport::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReport.lobby_id)
}

// optional string comment = 5;
inline bool CMsgDOTASubmitPlayerReport::has_comment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitPlayerReport::set_has_comment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASubmitPlayerReport::clear_has_comment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASubmitPlayerReport::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
inline const ::std::string& CMsgDOTASubmitPlayerReport::comment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReport.comment)
  return comment_.GetNoArena();
}
inline void CMsgDOTASubmitPlayerReport::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReport.comment)
}
#if LANG_CXX11
inline void CMsgDOTASubmitPlayerReport::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTASubmitPlayerReport.comment)
}
#endif
inline void CMsgDOTASubmitPlayerReport::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTASubmitPlayerReport.comment)
}
inline void CMsgDOTASubmitPlayerReport::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTASubmitPlayerReport.comment)
}
inline ::std::string* CMsgDOTASubmitPlayerReport::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTASubmitPlayerReport.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTASubmitPlayerReport::release_comment() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTASubmitPlayerReport.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTASubmitPlayerReport::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTASubmitPlayerReport.comment)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitPlayerReportResponse

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitPlayerReportResponse::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReportResponse::target_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReportResponse.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReportResponse.target_account_id)
}

// optional uint32 report_flags = 2;
inline bool CMsgDOTASubmitPlayerReportResponse::has_report_flags() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_has_report_flags() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_has_report_flags() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_report_flags() {
  report_flags_ = 0u;
  clear_has_report_flags();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReportResponse::report_flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReportResponse.report_flags)
  return report_flags_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_report_flags(::google::protobuf::uint32 value) {
  set_has_report_flags();
  report_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReportResponse.report_flags)
}

// optional uint32 result = 3;
inline bool CMsgDOTASubmitPlayerReportResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitPlayerReportResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReportResponse.result)
  return result_;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReportResponse.result)
}

// optional string debug_message = 4;
inline bool CMsgDOTASubmitPlayerReportResponse::has_debug_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitPlayerReportResponse::set_has_debug_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_has_debug_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASubmitPlayerReportResponse::clear_debug_message() {
  debug_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_debug_message();
}
inline const ::std::string& CMsgDOTASubmitPlayerReportResponse::debug_message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
  return debug_message_.GetNoArena();
}
inline void CMsgDOTASubmitPlayerReportResponse::set_debug_message(const ::std::string& value) {
  set_has_debug_message();
  debug_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
}
#if LANG_CXX11
inline void CMsgDOTASubmitPlayerReportResponse::set_debug_message(::std::string&& value) {
  set_has_debug_message();
  debug_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
}
#endif
inline void CMsgDOTASubmitPlayerReportResponse::set_debug_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_debug_message();
  debug_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
}
inline void CMsgDOTASubmitPlayerReportResponse::set_debug_message(const char* value, size_t size) {
  set_has_debug_message();
  debug_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
}
inline ::std::string* CMsgDOTASubmitPlayerReportResponse::mutable_debug_message() {
  set_has_debug_message();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
  return debug_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTASubmitPlayerReportResponse::release_debug_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
  clear_has_debug_message();
  return debug_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTASubmitPlayerReportResponse::set_allocated_debug_message(::std::string* debug_message) {
  if (debug_message != NULL) {
    set_has_debug_message();
  } else {
    clear_has_debug_message();
  }
  debug_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debug_message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTASubmitPlayerReportResponse.debug_message)
}

// -------------------------------------------------------------------

// CMsgDOTAReportCountsRequest

// optional uint32 target_account_id = 1;
inline bool CMsgDOTAReportCountsRequest::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAReportCountsRequest::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAReportCountsRequest::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAReportCountsRequest::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsRequest::target_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportCountsRequest.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTAReportCountsRequest::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportCountsRequest.target_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAReportCountsResponse

// optional uint32 target_account_id = 1;
inline bool CMsgDOTAReportCountsResponse::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAReportCountsResponse::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::target_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportCountsResponse.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTAReportCountsResponse::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportCountsResponse.target_account_id)
}

// optional uint32 leadership_count = 2;
inline bool CMsgDOTAReportCountsResponse::has_leadership_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_leadership_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_leadership_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAReportCountsResponse::clear_leadership_count() {
  leadership_count_ = 0u;
  clear_has_leadership_count();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::leadership_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportCountsResponse.leadership_count)
  return leadership_count_;
}
inline void CMsgDOTAReportCountsResponse::set_leadership_count(::google::protobuf::uint32 value) {
  set_has_leadership_count();
  leadership_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportCountsResponse.leadership_count)
}

// optional uint32 teaching_count = 3;
inline bool CMsgDOTAReportCountsResponse::has_teaching_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_teaching_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_teaching_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAReportCountsResponse::clear_teaching_count() {
  teaching_count_ = 0u;
  clear_has_teaching_count();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::teaching_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportCountsResponse.teaching_count)
  return teaching_count_;
}
inline void CMsgDOTAReportCountsResponse::set_teaching_count(::google::protobuf::uint32 value) {
  set_has_teaching_count();
  teaching_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportCountsResponse.teaching_count)
}

// optional uint32 friendly_count = 4;
inline bool CMsgDOTAReportCountsResponse::has_friendly_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_friendly_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_friendly_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAReportCountsResponse::clear_friendly_count() {
  friendly_count_ = 0u;
  clear_has_friendly_count();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::friendly_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportCountsResponse.friendly_count)
  return friendly_count_;
}
inline void CMsgDOTAReportCountsResponse::set_friendly_count(::google::protobuf::uint32 value) {
  set_has_friendly_count();
  friendly_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportCountsResponse.friendly_count)
}

// optional uint32 forgiving_count = 5;
inline bool CMsgDOTAReportCountsResponse::has_forgiving_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAReportCountsResponse::set_has_forgiving_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAReportCountsResponse::clear_has_forgiving_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAReportCountsResponse::clear_forgiving_count() {
  forgiving_count_ = 0u;
  clear_has_forgiving_count();
}
inline ::google::protobuf::uint32 CMsgDOTAReportCountsResponse::forgiving_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAReportCountsResponse.forgiving_count)
  return forgiving_count_;
}
inline void CMsgDOTAReportCountsResponse::set_forgiving_count(::google::protobuf::uint32 value) {
  set_has_forgiving_count();
  forgiving_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAReportCountsResponse.forgiving_count)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitLobbyMVPVote

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitLobbyMVPVote::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitLobbyMVPVote::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASubmitLobbyMVPVote::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASubmitLobbyMVPVote::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitLobbyMVPVote::target_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitLobbyMVPVote.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitLobbyMVPVote::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitLobbyMVPVote.target_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitLobbyMVPVoteResponse

// optional uint32 target_account_id = 1;
inline bool CMsgDOTASubmitLobbyMVPVoteResponse::has_target_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::set_has_target_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::clear_has_target_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::clear_target_account_id() {
  target_account_id_ = 0u;
  clear_has_target_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitLobbyMVPVoteResponse::target_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitLobbyMVPVoteResponse.target_account_id)
  return target_account_id_;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::set_target_account_id(::google::protobuf::uint32 value) {
  set_has_target_account_id();
  target_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitLobbyMVPVoteResponse.target_account_id)
}

// optional uint32 eresult = 2;
inline bool CMsgDOTASubmitLobbyMVPVoteResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitLobbyMVPVoteResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitLobbyMVPVoteResponse.eresult)
  return eresult_;
}
inline void CMsgDOTASubmitLobbyMVPVoteResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitLobbyMVPVoteResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTALobbyMVPNotifyRecipient

// optional uint32 voter_account_id = 1;
inline bool CMsgDOTALobbyMVPNotifyRecipient::has_voter_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_has_voter_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_has_voter_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_voter_account_id() {
  voter_account_id_ = 0u;
  clear_has_voter_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyMVPNotifyRecipient::voter_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyMVPNotifyRecipient.voter_account_id)
  return voter_account_id_;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_voter_account_id(::google::protobuf::uint32 value) {
  set_has_voter_account_id();
  voter_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyMVPNotifyRecipient.voter_account_id)
}

// optional uint32 recipient_account_id = 2;
inline bool CMsgDOTALobbyMVPNotifyRecipient::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_has_recipient_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_has_recipient_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  clear_has_recipient_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyMVPNotifyRecipient::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyMVPNotifyRecipient.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_recipient_account_id(::google::protobuf::uint32 value) {
  set_has_recipient_account_id();
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyMVPNotifyRecipient.recipient_account_id)
}

// optional uint32 num_votes = 3;
inline bool CMsgDOTALobbyMVPNotifyRecipient::has_num_votes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_has_num_votes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_has_num_votes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::clear_num_votes() {
  num_votes_ = 0u;
  clear_has_num_votes();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyMVPNotifyRecipient::num_votes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyMVPNotifyRecipient.num_votes)
  return num_votes_;
}
inline void CMsgDOTALobbyMVPNotifyRecipient::set_num_votes(::google::protobuf::uint32 value) {
  set_has_num_votes();
  num_votes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyMVPNotifyRecipient.num_votes)
}

// -------------------------------------------------------------------

// CMsgDOTALobbyMVPAwarded

// optional uint32 mvp_account_id = 1;
inline bool CMsgDOTALobbyMVPAwarded::has_mvp_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALobbyMVPAwarded::set_has_mvp_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALobbyMVPAwarded::clear_has_mvp_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALobbyMVPAwarded::clear_mvp_account_id() {
  mvp_account_id_ = 0u;
  clear_has_mvp_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyMVPAwarded::mvp_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyMVPAwarded.mvp_account_id)
  return mvp_account_id_;
}
inline void CMsgDOTALobbyMVPAwarded::set_mvp_account_id(::google::protobuf::uint32 value) {
  set_has_mvp_account_id();
  mvp_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyMVPAwarded.mvp_account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAKickedFromMatchmakingQueue

// optional .proto.dota.MatchType match_type = 1 [default = MATCH_TYPE_CASUAL];
inline bool CMsgDOTAKickedFromMatchmakingQueue::has_match_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAKickedFromMatchmakingQueue::set_has_match_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAKickedFromMatchmakingQueue::clear_has_match_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAKickedFromMatchmakingQueue::clear_match_type() {
  match_type_ = 0;
  clear_has_match_type();
}
inline ::proto::dota::MatchType CMsgDOTAKickedFromMatchmakingQueue::match_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAKickedFromMatchmakingQueue.match_type)
  return static_cast< ::proto::dota::MatchType >(match_type_);
}
inline void CMsgDOTAKickedFromMatchmakingQueue::set_match_type(::proto::dota::MatchType value) {
  assert(::proto::dota::MatchType_IsValid(value));
  set_has_match_type();
  match_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAKickedFromMatchmakingQueue.match_type)
}

// -------------------------------------------------------------------

// CMsgDOTARequestSaveGames

// optional uint32 server_region = 1;
inline bool CMsgDOTARequestSaveGames::has_server_region() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestSaveGames::set_has_server_region() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestSaveGames::clear_has_server_region() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestSaveGames::clear_server_region() {
  server_region_ = 0u;
  clear_has_server_region();
}
inline ::google::protobuf::uint32 CMsgDOTARequestSaveGames::server_region() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestSaveGames.server_region)
  return server_region_;
}
inline void CMsgDOTARequestSaveGames::set_server_region(::google::protobuf::uint32 value) {
  set_has_server_region();
  server_region_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestSaveGames.server_region)
}

// -------------------------------------------------------------------

// CMsgDOTARequestSaveGamesResponse

// optional fixed64 steam_id = 1;
inline bool CMsgDOTARequestSaveGamesResponse::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARequestSaveGamesResponse::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARequestSaveGamesResponse::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARequestSaveGamesResponse::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTARequestSaveGamesResponse::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestSaveGamesResponse.steam_id)
  return steam_id_;
}
inline void CMsgDOTARequestSaveGamesResponse::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARequestSaveGamesResponse.steam_id)
}

// repeated .proto.dota.CDOTASaveGame save_games = 2;
inline int CMsgDOTARequestSaveGamesResponse::save_games_size() const {
  return save_games_.size();
}
inline void CMsgDOTARequestSaveGamesResponse::clear_save_games() {
  save_games_.Clear();
}
inline const ::proto::dota::CDOTASaveGame& CMsgDOTARequestSaveGamesResponse::save_games(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_.Get(index);
}
inline ::proto::dota::CDOTASaveGame* CMsgDOTARequestSaveGamesResponse::mutable_save_games(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_.Mutable(index);
}
inline ::proto::dota::CDOTASaveGame* CMsgDOTARequestSaveGamesResponse::add_save_games() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTASaveGame >*
CMsgDOTARequestSaveGamesResponse::mutable_save_games() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTARequestSaveGamesResponse.save_games)
  return &save_games_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDOTASaveGame >&
CMsgDOTARequestSaveGamesResponse::save_games() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTARequestSaveGamesResponse.save_games)
  return save_games_;
}

// -------------------------------------------------------------------

// CMsgGCMatchDetailsRequest

// optional uint64 match_id = 1;
inline bool CMsgGCMatchDetailsRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMatchDetailsRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMatchDetailsRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMatchDetailsRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCMatchDetailsRequest::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMatchDetailsRequest.match_id)
  return match_id_;
}
inline void CMsgGCMatchDetailsRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMatchDetailsRequest.match_id)
}

// -------------------------------------------------------------------

// CMsgGCMatchDetailsResponse

// optional uint32 result = 1;
inline bool CMsgGCMatchDetailsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCMatchDetailsResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCMatchDetailsResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCMatchDetailsResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCMatchDetailsResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMatchDetailsResponse.result)
  return result_;
}
inline void CMsgGCMatchDetailsResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMatchDetailsResponse.result)
}

// optional .proto.dota.CMsgDOTAMatch match = 2;
inline bool CMsgGCMatchDetailsResponse::has_match() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCMatchDetailsResponse::set_has_match() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCMatchDetailsResponse::clear_has_match() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCMatchDetailsResponse::clear_match() {
  if (match_ != NULL) match_->::proto::dota::CMsgDOTAMatch::Clear();
  clear_has_match();
}
inline const ::proto::dota::CMsgDOTAMatch& CMsgGCMatchDetailsResponse::match() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMatchDetailsResponse.match)
  return match_ != NULL ? *match_
                         : *::proto::dota::CMsgDOTAMatch::internal_default_instance();
}
inline ::proto::dota::CMsgDOTAMatch* CMsgGCMatchDetailsResponse::mutable_match() {
  set_has_match();
  if (match_ == NULL) {
    match_ = new ::proto::dota::CMsgDOTAMatch;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCMatchDetailsResponse.match)
  return match_;
}
inline ::proto::dota::CMsgDOTAMatch* CMsgGCMatchDetailsResponse::release_match() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCMatchDetailsResponse.match)
  clear_has_match();
  ::proto::dota::CMsgDOTAMatch* temp = match_;
  match_ = NULL;
  return temp;
}
inline void CMsgGCMatchDetailsResponse::set_allocated_match(::proto::dota::CMsgDOTAMatch* match) {
  delete match_;
  match_ = match;
  if (match) {
    set_has_match();
  } else {
    clear_has_match();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCMatchDetailsResponse.match)
}

// optional .proto.dota.DOTAMatchVote vote = 3 [default = DOTAMatchVote_INVALID];
inline bool CMsgGCMatchDetailsResponse::has_vote() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCMatchDetailsResponse::set_has_vote() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCMatchDetailsResponse::clear_has_vote() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCMatchDetailsResponse::clear_vote() {
  vote_ = 0;
  clear_has_vote();
}
inline ::proto::dota::DOTAMatchVote CMsgGCMatchDetailsResponse::vote() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCMatchDetailsResponse.vote)
  return static_cast< ::proto::dota::DOTAMatchVote >(vote_);
}
inline void CMsgGCMatchDetailsResponse::set_vote(::proto::dota::DOTAMatchVote value) {
  assert(::proto::dota::DOTAMatchVote_IsValid(value));
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCMatchDetailsResponse.vote)
}

// -------------------------------------------------------------------

// CMsgServerToGCMatchDetailsRequest

// repeated uint64 match_ids = 1;
inline int CMsgServerToGCMatchDetailsRequest::match_ids_size() const {
  return match_ids_.size();
}
inline void CMsgServerToGCMatchDetailsRequest::clear_match_ids() {
  match_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgServerToGCMatchDetailsRequest::match_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgServerToGCMatchDetailsRequest.match_ids)
  return match_ids_.Get(index);
}
inline void CMsgServerToGCMatchDetailsRequest::set_match_ids(int index, ::google::protobuf::uint64 value) {
  match_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgServerToGCMatchDetailsRequest.match_ids)
}
inline void CMsgServerToGCMatchDetailsRequest::add_match_ids(::google::protobuf::uint64 value) {
  match_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgServerToGCMatchDetailsRequest.match_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgServerToGCMatchDetailsRequest::match_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgServerToGCMatchDetailsRequest.match_ids)
  return match_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgServerToGCMatchDetailsRequest::mutable_match_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgServerToGCMatchDetailsRequest.match_ids)
  return &match_ids_;
}

// -------------------------------------------------------------------

// CMsgGCToServerMatchDetailsResponse

// repeated .proto.dota.CMsgDOTAMatch matches = 1;
inline int CMsgGCToServerMatchDetailsResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgGCToServerMatchDetailsResponse::clear_matches() {
  matches_.Clear();
}
inline const ::proto::dota::CMsgDOTAMatch& CMsgGCToServerMatchDetailsResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToServerMatchDetailsResponse.matches)
  return matches_.Get(index);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgGCToServerMatchDetailsResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToServerMatchDetailsResponse.matches)
  return matches_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgGCToServerMatchDetailsResponse::add_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToServerMatchDetailsResponse.matches)
  return matches_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
CMsgGCToServerMatchDetailsResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToServerMatchDetailsResponse.matches)
  return &matches_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
CMsgGCToServerMatchDetailsResponse::matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToServerMatchDetailsResponse.matches)
  return matches_;
}

// -------------------------------------------------------------------

// CMsgDOTAProfileRequest

// optional uint32 account_id = 1;
inline bool CMsgDOTAProfileRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileRequest.account_id)
  return account_id_;
}
inline void CMsgDOTAProfileRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileRequest.account_id)
}

// optional bool request_name = 2;
inline bool CMsgDOTAProfileRequest::has_request_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileRequest::set_has_request_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileRequest::clear_has_request_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileRequest::clear_request_name() {
  request_name_ = false;
  clear_has_request_name();
}
inline bool CMsgDOTAProfileRequest::request_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileRequest.request_name)
  return request_name_;
}
inline void CMsgDOTAProfileRequest::set_request_name(bool value) {
  set_has_request_name();
  request_name_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileRequest.request_name)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_PlayedHero

// optional uint32 hero_id = 1;
inline bool CMsgDOTAProfileResponse_PlayedHero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_PlayedHero::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_PlayedHero::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_PlayedHero::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_PlayedHero::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.PlayedHero.hero_id)
  return hero_id_;
}
inline void CMsgDOTAProfileResponse_PlayedHero::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.PlayedHero.hero_id)
}

// optional uint32 wins = 2;
inline bool CMsgDOTAProfileResponse_PlayedHero::has_wins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileResponse_PlayedHero::set_has_wins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileResponse_PlayedHero::clear_has_wins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileResponse_PlayedHero::clear_wins() {
  wins_ = 0u;
  clear_has_wins();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_PlayedHero::wins() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.PlayedHero.wins)
  return wins_;
}
inline void CMsgDOTAProfileResponse_PlayedHero::set_wins(::google::protobuf::uint32 value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.PlayedHero.wins)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_ShowcaseHero

// optional uint32 hero_id = 1;
inline bool CMsgDOTAProfileResponse_ShowcaseHero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_ShowcaseHero::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.hero_id)
  return hero_id_;
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.hero_id)
}

// repeated bytes object_data = 2;
inline int CMsgDOTAProfileResponse_ShowcaseHero::object_data_size() const {
  return object_data_.size();
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::clear_object_data() {
  object_data_.Clear();
}
inline const ::std::string& CMsgDOTAProfileResponse_ShowcaseHero::object_data(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return object_data_.Get(index);
}
inline ::std::string* CMsgDOTAProfileResponse_ShowcaseHero::mutable_object_data(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return object_data_.Mutable(index);
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_object_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  object_data_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_object_data(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  object_data_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_object_data(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  object_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::set_object_data(int index, const void* value, size_t size) {
  object_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline ::std::string* CMsgDOTAProfileResponse_ShowcaseHero::add_object_data() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return object_data_.Add();
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::add_object_data(const ::std::string& value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
#if LANG_CXX11
inline void CMsgDOTAProfileResponse_ShowcaseHero::add_object_data(::std::string&& value) {
  object_data_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
#endif
inline void CMsgDOTAProfileResponse_ShowcaseHero::add_object_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline void CMsgDOTAProfileResponse_ShowcaseHero::add_object_data(const void* value, size_t size) {
  object_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDOTAProfileResponse_ShowcaseHero::object_data() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return object_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDOTAProfileResponse_ShowcaseHero::mutable_object_data() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAProfileResponse.ShowcaseHero.object_data)
  return &object_data_;
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_LeaguePass

// optional uint32 league_id = 1;
inline bool CMsgDOTAProfileResponse_LeaguePass::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_LeaguePass::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_LeaguePass::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_LeaguePass::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_LeaguePass::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.LeaguePass.league_id)
  return league_id_;
}
inline void CMsgDOTAProfileResponse_LeaguePass::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.LeaguePass.league_id)
}

// optional uint32 item_def = 2;
inline bool CMsgDOTAProfileResponse_LeaguePass::has_item_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileResponse_LeaguePass::set_has_item_def() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileResponse_LeaguePass::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileResponse_LeaguePass::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_LeaguePass::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.LeaguePass.item_def)
  return item_def_;
}
inline void CMsgDOTAProfileResponse_LeaguePass::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.LeaguePass.item_def)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_EventTicket

// optional uint32 event_id = 1;
inline bool CMsgDOTAProfileResponse_EventTicket::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_EventTicket::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_EventTicket::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_EventTicket::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_EventTicket::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.EventTicket.event_id)
  return event_id_;
}
inline void CMsgDOTAProfileResponse_EventTicket::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.EventTicket.event_id)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse_FeaturedItem

// optional uint64 item_id = 1;
inline bool CMsgDOTAProfileResponse_FeaturedItem::has_item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_has_item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgDOTAProfileResponse_FeaturedItem::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.FeaturedItem.item_id)
  return item_id_;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.FeaturedItem.item_id)
}

// optional bytes object_data = 2;
inline bool CMsgDOTAProfileResponse_FeaturedItem::has_object_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_has_object_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_has_object_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_object_data() {
  object_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_object_data();
}
inline const ::std::string& CMsgDOTAProfileResponse_FeaturedItem::object_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.FeaturedItem.object_data)
  return object_data_.GetNoArena();
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_object_data(const ::std::string& value) {
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.FeaturedItem.object_data)
}
#if LANG_CXX11
inline void CMsgDOTAProfileResponse_FeaturedItem::set_object_data(::std::string&& value) {
  set_has_object_data();
  object_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAProfileResponse.FeaturedItem.object_data)
}
#endif
inline void CMsgDOTAProfileResponse_FeaturedItem::set_object_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAProfileResponse.FeaturedItem.object_data)
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_object_data(const void* value, size_t size) {
  set_has_object_data();
  object_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAProfileResponse.FeaturedItem.object_data)
}
inline ::std::string* CMsgDOTAProfileResponse_FeaturedItem::mutable_object_data() {
  set_has_object_data();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileResponse.FeaturedItem.object_data)
  return object_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAProfileResponse_FeaturedItem::release_object_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAProfileResponse.FeaturedItem.object_data)
  clear_has_object_data();
  return object_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_allocated_object_data(::std::string* object_data) {
  if (object_data != NULL) {
    set_has_object_data();
  } else {
    clear_has_object_data();
  }
  object_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), object_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAProfileResponse.FeaturedItem.object_data)
}

// optional uint32 slot_index = 3;
inline bool CMsgDOTAProfileResponse_FeaturedItem::has_slot_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_has_slot_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_has_slot_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::clear_slot_index() {
  slot_index_ = 0u;
  clear_has_slot_index();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse_FeaturedItem::slot_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.FeaturedItem.slot_index)
  return slot_index_;
}
inline void CMsgDOTAProfileResponse_FeaturedItem::set_slot_index(::google::protobuf::uint32 value) {
  set_has_slot_index();
  slot_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.FeaturedItem.slot_index)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileResponse

// optional uint32 result = 1;
inline bool CMsgDOTAProfileResponse::has_result() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_result() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAProfileResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAProfileResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.result)
  return result_;
}
inline void CMsgDOTAProfileResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.result)
}

// optional .proto.dota.CSODOTAGameAccountClient game_account_client = 2;
inline bool CMsgDOTAProfileResponse::has_game_account_client() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_game_account_client() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAProfileResponse::clear_has_game_account_client() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAProfileResponse::clear_game_account_client() {
  if (game_account_client_ != NULL) game_account_client_->::proto::dota::CSODOTAGameAccountClient::Clear();
  clear_has_game_account_client();
}
inline const ::proto::dota::CSODOTAGameAccountClient& CMsgDOTAProfileResponse::game_account_client() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.game_account_client)
  return game_account_client_ != NULL ? *game_account_client_
                         : *::proto::dota::CSODOTAGameAccountClient::internal_default_instance();
}
inline ::proto::dota::CSODOTAGameAccountClient* CMsgDOTAProfileResponse::mutable_game_account_client() {
  set_has_game_account_client();
  if (game_account_client_ == NULL) {
    game_account_client_ = new ::proto::dota::CSODOTAGameAccountClient;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileResponse.game_account_client)
  return game_account_client_;
}
inline ::proto::dota::CSODOTAGameAccountClient* CMsgDOTAProfileResponse::release_game_account_client() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAProfileResponse.game_account_client)
  clear_has_game_account_client();
  ::proto::dota::CSODOTAGameAccountClient* temp = game_account_client_;
  game_account_client_ = NULL;
  return temp;
}
inline void CMsgDOTAProfileResponse::set_allocated_game_account_client(::proto::dota::CSODOTAGameAccountClient* game_account_client) {
  delete game_account_client_;
  game_account_client_ = game_account_client;
  if (game_account_client) {
    set_has_game_account_client();
  } else {
    clear_has_game_account_client();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAProfileResponse.game_account_client)
}

// repeated .proto.dota.CMsgDOTAMatch latest_matches = 3;
inline int CMsgDOTAProfileResponse::latest_matches_size() const {
  return latest_matches_.size();
}
inline void CMsgDOTAProfileResponse::clear_latest_matches() {
  latest_matches_.Clear();
}
inline const ::proto::dota::CMsgDOTAMatch& CMsgDOTAProfileResponse::latest_matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.latest_matches)
  return latest_matches_.Get(index);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTAProfileResponse::mutable_latest_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileResponse.latest_matches)
  return latest_matches_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTAProfileResponse::add_latest_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAProfileResponse.latest_matches)
  return latest_matches_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >*
CMsgDOTAProfileResponse::mutable_latest_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAProfileResponse.latest_matches)
  return &latest_matches_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatch >&
CMsgDOTAProfileResponse::latest_matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAProfileResponse.latest_matches)
  return latest_matches_;
}

// repeated .proto.dota.CMsgDOTAProfileResponse.PlayedHero heroes = 4;
inline int CMsgDOTAProfileResponse::heroes_size() const {
  return heroes_.size();
}
inline void CMsgDOTAProfileResponse::clear_heroes() {
  heroes_.Clear();
}
inline const ::proto::dota::CMsgDOTAProfileResponse_PlayedHero& CMsgDOTAProfileResponse::heroes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.heroes)
  return heroes_.Get(index);
}
inline ::proto::dota::CMsgDOTAProfileResponse_PlayedHero* CMsgDOTAProfileResponse::mutable_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileResponse.heroes)
  return heroes_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAProfileResponse_PlayedHero* CMsgDOTAProfileResponse::add_heroes() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAProfileResponse.heroes)
  return heroes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_PlayedHero >*
CMsgDOTAProfileResponse::mutable_heroes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAProfileResponse.heroes)
  return &heroes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_PlayedHero >&
CMsgDOTAProfileResponse::heroes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAProfileResponse.heroes)
  return heroes_;
}

// optional string player_name = 5;
inline bool CMsgDOTAProfileResponse::has_player_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_player_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileResponse::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileResponse::clear_player_name() {
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_player_name();
}
inline const ::std::string& CMsgDOTAProfileResponse::player_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.player_name)
  return player_name_.GetNoArena();
}
inline void CMsgDOTAProfileResponse::set_player_name(const ::std::string& value) {
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.player_name)
}
#if LANG_CXX11
inline void CMsgDOTAProfileResponse::set_player_name(::std::string&& value) {
  set_has_player_name();
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAProfileResponse.player_name)
}
#endif
inline void CMsgDOTAProfileResponse::set_player_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAProfileResponse.player_name)
}
inline void CMsgDOTAProfileResponse::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAProfileResponse.player_name)
}
inline ::std::string* CMsgDOTAProfileResponse::mutable_player_name() {
  set_has_player_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileResponse.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAProfileResponse::release_player_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAProfileResponse.player_name)
  clear_has_player_name();
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAProfileResponse::set_allocated_player_name(::std::string* player_name) {
  if (player_name != NULL) {
    set_has_player_name();
  } else {
    clear_has_player_name();
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAProfileResponse.player_name)
}

// optional string team_name = 6;
inline bool CMsgDOTAProfileResponse::has_team_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_team_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileResponse::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileResponse::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTAProfileResponse::team_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.team_name)
  return team_name_.GetNoArena();
}
inline void CMsgDOTAProfileResponse::set_team_name(const ::std::string& value) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.team_name)
}
#if LANG_CXX11
inline void CMsgDOTAProfileResponse::set_team_name(::std::string&& value) {
  set_has_team_name();
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAProfileResponse.team_name)
}
#endif
inline void CMsgDOTAProfileResponse::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAProfileResponse.team_name)
}
inline void CMsgDOTAProfileResponse::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAProfileResponse.team_name)
}
inline ::std::string* CMsgDOTAProfileResponse::mutable_team_name() {
  set_has_team_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileResponse.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAProfileResponse::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAProfileResponse.team_name)
  clear_has_team_name();
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAProfileResponse::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    set_has_team_name();
  } else {
    clear_has_team_name();
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAProfileResponse.team_name)
}

// optional string team_tag = 7;
inline bool CMsgDOTAProfileResponse::has_team_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_team_tag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAProfileResponse::clear_has_team_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAProfileResponse::clear_team_tag() {
  team_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_team_tag();
}
inline const ::std::string& CMsgDOTAProfileResponse::team_tag() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.team_tag)
  return team_tag_.GetNoArena();
}
inline void CMsgDOTAProfileResponse::set_team_tag(const ::std::string& value) {
  set_has_team_tag();
  team_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.team_tag)
}
#if LANG_CXX11
inline void CMsgDOTAProfileResponse::set_team_tag(::std::string&& value) {
  set_has_team_tag();
  team_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAProfileResponse.team_tag)
}
#endif
inline void CMsgDOTAProfileResponse::set_team_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_team_tag();
  team_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAProfileResponse.team_tag)
}
inline void CMsgDOTAProfileResponse::set_team_tag(const char* value, size_t size) {
  set_has_team_tag();
  team_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAProfileResponse.team_tag)
}
inline ::std::string* CMsgDOTAProfileResponse::mutable_team_tag() {
  set_has_team_tag();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileResponse.team_tag)
  return team_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAProfileResponse::release_team_tag() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAProfileResponse.team_tag)
  clear_has_team_tag();
  return team_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAProfileResponse::set_allocated_team_tag(::std::string* team_tag) {
  if (team_tag != NULL) {
    set_has_team_tag();
  } else {
    clear_has_team_tag();
  }
  team_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_tag);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAProfileResponse.team_tag)
}

// optional uint64 team_logo = 8;
inline bool CMsgDOTAProfileResponse::has_team_logo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_team_logo() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAProfileResponse::clear_has_team_logo() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAProfileResponse::clear_team_logo() {
  team_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_team_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAProfileResponse::team_logo() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.team_logo)
  return team_logo_;
}
inline void CMsgDOTAProfileResponse::set_team_logo(::google::protobuf::uint64 value) {
  set_has_team_logo();
  team_logo_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.team_logo)
}

// optional .proto.dota.CMsgDOTAProfileResponse.ShowcaseHero showcase_hero = 9;
inline bool CMsgDOTAProfileResponse::has_showcase_hero() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_showcase_hero() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAProfileResponse::clear_has_showcase_hero() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAProfileResponse::clear_showcase_hero() {
  if (showcase_hero_ != NULL) showcase_hero_->::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero::Clear();
  clear_has_showcase_hero();
}
inline const ::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero& CMsgDOTAProfileResponse::showcase_hero() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.showcase_hero)
  return showcase_hero_ != NULL ? *showcase_hero_
                         : *::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero::internal_default_instance();
}
inline ::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero* CMsgDOTAProfileResponse::mutable_showcase_hero() {
  set_has_showcase_hero();
  if (showcase_hero_ == NULL) {
    showcase_hero_ = new ::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileResponse.showcase_hero)
  return showcase_hero_;
}
inline ::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero* CMsgDOTAProfileResponse::release_showcase_hero() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAProfileResponse.showcase_hero)
  clear_has_showcase_hero();
  ::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero* temp = showcase_hero_;
  showcase_hero_ = NULL;
  return temp;
}
inline void CMsgDOTAProfileResponse::set_allocated_showcase_hero(::proto::dota::CMsgDOTAProfileResponse_ShowcaseHero* showcase_hero) {
  delete showcase_hero_;
  showcase_hero_ = showcase_hero;
  if (showcase_hero) {
    set_has_showcase_hero();
  } else {
    clear_has_showcase_hero();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAProfileResponse.showcase_hero)
}

// repeated .proto.dota.CMsgDOTAProfileResponse.LeaguePass league_passes = 10;
inline int CMsgDOTAProfileResponse::league_passes_size() const {
  return league_passes_.size();
}
inline void CMsgDOTAProfileResponse::clear_league_passes() {
  league_passes_.Clear();
}
inline const ::proto::dota::CMsgDOTAProfileResponse_LeaguePass& CMsgDOTAProfileResponse::league_passes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.league_passes)
  return league_passes_.Get(index);
}
inline ::proto::dota::CMsgDOTAProfileResponse_LeaguePass* CMsgDOTAProfileResponse::mutable_league_passes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileResponse.league_passes)
  return league_passes_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAProfileResponse_LeaguePass* CMsgDOTAProfileResponse::add_league_passes() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAProfileResponse.league_passes)
  return league_passes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_LeaguePass >*
CMsgDOTAProfileResponse::mutable_league_passes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAProfileResponse.league_passes)
  return &league_passes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_LeaguePass >&
CMsgDOTAProfileResponse::league_passes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAProfileResponse.league_passes)
  return league_passes_;
}

// repeated .proto.dota.CMsgDOTAProfileResponse.EventTicket event_tickets = 11;
inline int CMsgDOTAProfileResponse::event_tickets_size() const {
  return event_tickets_.size();
}
inline void CMsgDOTAProfileResponse::clear_event_tickets() {
  event_tickets_.Clear();
}
inline const ::proto::dota::CMsgDOTAProfileResponse_EventTicket& CMsgDOTAProfileResponse::event_tickets(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.event_tickets)
  return event_tickets_.Get(index);
}
inline ::proto::dota::CMsgDOTAProfileResponse_EventTicket* CMsgDOTAProfileResponse::mutable_event_tickets(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileResponse.event_tickets)
  return event_tickets_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAProfileResponse_EventTicket* CMsgDOTAProfileResponse::add_event_tickets() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAProfileResponse.event_tickets)
  return event_tickets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_EventTicket >*
CMsgDOTAProfileResponse::mutable_event_tickets() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAProfileResponse.event_tickets)
  return &event_tickets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_EventTicket >&
CMsgDOTAProfileResponse::event_tickets() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAProfileResponse.event_tickets)
  return event_tickets_;
}

// optional uint32 team_id = 12;
inline bool CMsgDOTAProfileResponse::has_team_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_team_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAProfileResponse::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAProfileResponse::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.team_id)
  return team_id_;
}
inline void CMsgDOTAProfileResponse::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.team_id)
}

// optional bool has_passport = 13;
inline bool CMsgDOTAProfileResponse::has_has_passport() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_has_passport() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAProfileResponse::clear_has_has_passport() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAProfileResponse::clear_has_passport() {
  has_passport_ = false;
  clear_has_has_passport();
}
inline bool CMsgDOTAProfileResponse::has_passport() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.has_passport)
  return has_passport_;
}
inline void CMsgDOTAProfileResponse::set_has_passport(bool value) {
  set_has_has_passport();
  has_passport_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.has_passport)
}

// repeated .proto.dota.CMsgDOTAProfileResponse.FeaturedItem featured_items = 14;
inline int CMsgDOTAProfileResponse::featured_items_size() const {
  return featured_items_.size();
}
inline void CMsgDOTAProfileResponse::clear_featured_items() {
  featured_items_.Clear();
}
inline const ::proto::dota::CMsgDOTAProfileResponse_FeaturedItem& CMsgDOTAProfileResponse::featured_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.featured_items)
  return featured_items_.Get(index);
}
inline ::proto::dota::CMsgDOTAProfileResponse_FeaturedItem* CMsgDOTAProfileResponse::mutable_featured_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileResponse.featured_items)
  return featured_items_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAProfileResponse_FeaturedItem* CMsgDOTAProfileResponse::add_featured_items() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAProfileResponse.featured_items)
  return featured_items_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_FeaturedItem >*
CMsgDOTAProfileResponse::mutable_featured_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAProfileResponse.featured_items)
  return &featured_items_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileResponse_FeaturedItem >&
CMsgDOTAProfileResponse::featured_items() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAProfileResponse.featured_items)
  return featured_items_;
}

// optional uint32 abandon_percent = 15;
inline bool CMsgDOTAProfileResponse::has_abandon_percent() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAProfileResponse::set_has_abandon_percent() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTAProfileResponse::clear_has_abandon_percent() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTAProfileResponse::clear_abandon_percent() {
  abandon_percent_ = 0u;
  clear_has_abandon_percent();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileResponse::abandon_percent() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileResponse.abandon_percent)
  return abandon_percent_;
}
inline void CMsgDOTAProfileResponse::set_abandon_percent(::google::protobuf::uint32 value) {
  set_has_abandon_percent();
  abandon_percent_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileResponse.abandon_percent)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileTickets_LeaguePass

// optional uint32 league_id = 1;
inline bool CMsgDOTAProfileTickets_LeaguePass::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileTickets_LeaguePass::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileTickets_LeaguePass::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileTickets_LeaguePass::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets_LeaguePass::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileTickets.LeaguePass.league_id)
  return league_id_;
}
inline void CMsgDOTAProfileTickets_LeaguePass::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileTickets.LeaguePass.league_id)
}

// optional uint32 item_def = 2;
inline bool CMsgDOTAProfileTickets_LeaguePass::has_item_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileTickets_LeaguePass::set_has_item_def() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileTickets_LeaguePass::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileTickets_LeaguePass::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets_LeaguePass::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileTickets.LeaguePass.item_def)
  return item_def_;
}
inline void CMsgDOTAProfileTickets_LeaguePass::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileTickets.LeaguePass.item_def)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileTickets_EventTicket

// optional uint32 event_id = 1;
inline bool CMsgDOTAProfileTickets_EventTicket::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileTickets_EventTicket::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileTickets_EventTicket::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileTickets_EventTicket::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets_EventTicket::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileTickets.EventTicket.event_id)
  return event_id_;
}
inline void CMsgDOTAProfileTickets_EventTicket::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileTickets.EventTicket.event_id)
}

// -------------------------------------------------------------------

// CMsgDOTAProfileTickets

// optional uint32 result = 1;
inline bool CMsgDOTAProfileTickets::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAProfileTickets::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAProfileTickets::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAProfileTickets::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileTickets.result)
  return result_;
}
inline void CMsgDOTAProfileTickets::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileTickets.result)
}

// optional uint32 account_id = 2;
inline bool CMsgDOTAProfileTickets::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAProfileTickets::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAProfileTickets::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAProfileTickets::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAProfileTickets::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileTickets.account_id)
  return account_id_;
}
inline void CMsgDOTAProfileTickets::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAProfileTickets.account_id)
}

// repeated .proto.dota.CMsgDOTAProfileTickets.LeaguePass league_passes = 3;
inline int CMsgDOTAProfileTickets::league_passes_size() const {
  return league_passes_.size();
}
inline void CMsgDOTAProfileTickets::clear_league_passes() {
  league_passes_.Clear();
}
inline const ::proto::dota::CMsgDOTAProfileTickets_LeaguePass& CMsgDOTAProfileTickets::league_passes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileTickets.league_passes)
  return league_passes_.Get(index);
}
inline ::proto::dota::CMsgDOTAProfileTickets_LeaguePass* CMsgDOTAProfileTickets::mutable_league_passes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileTickets.league_passes)
  return league_passes_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAProfileTickets_LeaguePass* CMsgDOTAProfileTickets::add_league_passes() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAProfileTickets.league_passes)
  return league_passes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_LeaguePass >*
CMsgDOTAProfileTickets::mutable_league_passes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAProfileTickets.league_passes)
  return &league_passes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_LeaguePass >&
CMsgDOTAProfileTickets::league_passes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAProfileTickets.league_passes)
  return league_passes_;
}

// repeated .proto.dota.CMsgDOTAProfileTickets.EventTicket event_tickets = 4;
inline int CMsgDOTAProfileTickets::event_tickets_size() const {
  return event_tickets_.size();
}
inline void CMsgDOTAProfileTickets::clear_event_tickets() {
  event_tickets_.Clear();
}
inline const ::proto::dota::CMsgDOTAProfileTickets_EventTicket& CMsgDOTAProfileTickets::event_tickets(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAProfileTickets.event_tickets)
  return event_tickets_.Get(index);
}
inline ::proto::dota::CMsgDOTAProfileTickets_EventTicket* CMsgDOTAProfileTickets::mutable_event_tickets(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAProfileTickets.event_tickets)
  return event_tickets_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAProfileTickets_EventTicket* CMsgDOTAProfileTickets::add_event_tickets() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAProfileTickets.event_tickets)
  return event_tickets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_EventTicket >*
CMsgDOTAProfileTickets::mutable_event_tickets() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAProfileTickets.event_tickets)
  return &event_tickets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAProfileTickets_EventTicket >&
CMsgDOTAProfileTickets::event_tickets() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAProfileTickets.event_tickets)
  return event_tickets_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetProfileTickets

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetProfileTickets::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetProfileTickets::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetProfileTickets::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetProfileTickets::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetProfileTickets::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetProfileTickets.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetProfileTickets::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetProfileTickets.account_id)
}

// -------------------------------------------------------------------

// CMsgGCSteamProfileRequest

// optional uint32 account_id = 1;
inline bool CMsgGCSteamProfileRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCSteamProfileRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCSteamProfileRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCSteamProfileRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCSteamProfileRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCSteamProfileRequest.account_id)
  return account_id_;
}
inline void CMsgGCSteamProfileRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCSteamProfileRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCSteamProfileRequestResponse

// optional uint32 result = 1;
inline bool CMsgGCSteamProfileRequestResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCSteamProfileRequestResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCSteamProfileRequestResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCSteamProfileRequestResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCSteamProfileRequestResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCSteamProfileRequestResponse.result)
  return result_;
}
inline void CMsgGCSteamProfileRequestResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCSteamProfileRequestResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAClearNotifySuccessfulReport

// -------------------------------------------------------------------

// CMsgDOTAWelcome_LocalizationDigest

// optional string context = 1;
inline bool CMsgDOTAWelcome_LocalizationDigest::has_context() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_has_context() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_has_context() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_context() {
  context_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_context();
}
inline const ::std::string& CMsgDOTAWelcome_LocalizationDigest::context() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.LocalizationDigest.context)
  return context_.GetNoArena();
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_context(const ::std::string& value) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.LocalizationDigest.context)
}
#if LANG_CXX11
inline void CMsgDOTAWelcome_LocalizationDigest::set_context(::std::string&& value) {
  set_has_context();
  context_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAWelcome.LocalizationDigest.context)
}
#endif
inline void CMsgDOTAWelcome_LocalizationDigest::set_context(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAWelcome.LocalizationDigest.context)
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_context(const char* value, size_t size) {
  set_has_context();
  context_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAWelcome.LocalizationDigest.context)
}
inline ::std::string* CMsgDOTAWelcome_LocalizationDigest::mutable_context() {
  set_has_context();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAWelcome.LocalizationDigest.context)
  return context_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAWelcome_LocalizationDigest::release_context() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAWelcome.LocalizationDigest.context)
  clear_has_context();
  return context_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_allocated_context(::std::string* context) {
  if (context != NULL) {
    set_has_context();
  } else {
    clear_has_context();
  }
  context_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), context);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAWelcome.LocalizationDigest.context)
}

// optional .proto.dota.CMsgSHA1Digest english_language_file_sha1 = 2;
inline bool CMsgDOTAWelcome_LocalizationDigest::has_english_language_file_sha1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_has_english_language_file_sha1() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_has_english_language_file_sha1() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_english_language_file_sha1() {
  if (english_language_file_sha1_ != NULL) english_language_file_sha1_->::proto::dota::CMsgSHA1Digest::Clear();
  clear_has_english_language_file_sha1();
}
inline const ::proto::dota::CMsgSHA1Digest& CMsgDOTAWelcome_LocalizationDigest::english_language_file_sha1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.LocalizationDigest.english_language_file_sha1)
  return english_language_file_sha1_ != NULL ? *english_language_file_sha1_
                         : *::proto::dota::CMsgSHA1Digest::internal_default_instance();
}
inline ::proto::dota::CMsgSHA1Digest* CMsgDOTAWelcome_LocalizationDigest::mutable_english_language_file_sha1() {
  set_has_english_language_file_sha1();
  if (english_language_file_sha1_ == NULL) {
    english_language_file_sha1_ = new ::proto::dota::CMsgSHA1Digest;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAWelcome.LocalizationDigest.english_language_file_sha1)
  return english_language_file_sha1_;
}
inline ::proto::dota::CMsgSHA1Digest* CMsgDOTAWelcome_LocalizationDigest::release_english_language_file_sha1() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAWelcome.LocalizationDigest.english_language_file_sha1)
  clear_has_english_language_file_sha1();
  ::proto::dota::CMsgSHA1Digest* temp = english_language_file_sha1_;
  english_language_file_sha1_ = NULL;
  return temp;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_allocated_english_language_file_sha1(::proto::dota::CMsgSHA1Digest* english_language_file_sha1) {
  delete english_language_file_sha1_;
  english_language_file_sha1_ = english_language_file_sha1;
  if (english_language_file_sha1) {
    set_has_english_language_file_sha1();
  } else {
    clear_has_english_language_file_sha1();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAWelcome.LocalizationDigest.english_language_file_sha1)
}

// optional .proto.dota.CMsgSHA1Digest client_language_file_sha1 = 3;
inline bool CMsgDOTAWelcome_LocalizationDigest::has_client_language_file_sha1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_has_client_language_file_sha1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_has_client_language_file_sha1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAWelcome_LocalizationDigest::clear_client_language_file_sha1() {
  if (client_language_file_sha1_ != NULL) client_language_file_sha1_->::proto::dota::CMsgSHA1Digest::Clear();
  clear_has_client_language_file_sha1();
}
inline const ::proto::dota::CMsgSHA1Digest& CMsgDOTAWelcome_LocalizationDigest::client_language_file_sha1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.LocalizationDigest.client_language_file_sha1)
  return client_language_file_sha1_ != NULL ? *client_language_file_sha1_
                         : *::proto::dota::CMsgSHA1Digest::internal_default_instance();
}
inline ::proto::dota::CMsgSHA1Digest* CMsgDOTAWelcome_LocalizationDigest::mutable_client_language_file_sha1() {
  set_has_client_language_file_sha1();
  if (client_language_file_sha1_ == NULL) {
    client_language_file_sha1_ = new ::proto::dota::CMsgSHA1Digest;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAWelcome.LocalizationDigest.client_language_file_sha1)
  return client_language_file_sha1_;
}
inline ::proto::dota::CMsgSHA1Digest* CMsgDOTAWelcome_LocalizationDigest::release_client_language_file_sha1() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAWelcome.LocalizationDigest.client_language_file_sha1)
  clear_has_client_language_file_sha1();
  ::proto::dota::CMsgSHA1Digest* temp = client_language_file_sha1_;
  client_language_file_sha1_ = NULL;
  return temp;
}
inline void CMsgDOTAWelcome_LocalizationDigest::set_allocated_client_language_file_sha1(::proto::dota::CMsgSHA1Digest* client_language_file_sha1) {
  delete client_language_file_sha1_;
  client_language_file_sha1_ = client_language_file_sha1;
  if (client_language_file_sha1) {
    set_has_client_language_file_sha1();
  } else {
    clear_has_client_language_file_sha1();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAWelcome.LocalizationDigest.client_language_file_sha1)
}

// -------------------------------------------------------------------

// CMsgDOTAWelcome_CExtraMsg

// optional uint32 id = 1;
inline bool CMsgDOTAWelcome_CExtraMsg::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAWelcome_CExtraMsg::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome_CExtraMsg::id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.CExtraMsg.id)
  return id_;
}
inline void CMsgDOTAWelcome_CExtraMsg::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.CExtraMsg.id)
}

// optional bytes contents = 2;
inline bool CMsgDOTAWelcome_CExtraMsg::has_contents() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAWelcome_CExtraMsg::set_has_contents() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_has_contents() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAWelcome_CExtraMsg::clear_contents() {
  contents_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_contents();
}
inline const ::std::string& CMsgDOTAWelcome_CExtraMsg::contents() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
  return contents_.GetNoArena();
}
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(const ::std::string& value) {
  set_has_contents();
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
}
#if LANG_CXX11
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(::std::string&& value) {
  set_has_contents();
  contents_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
}
#endif
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_contents();
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
}
inline void CMsgDOTAWelcome_CExtraMsg::set_contents(const void* value, size_t size) {
  set_has_contents();
  contents_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
}
inline ::std::string* CMsgDOTAWelcome_CExtraMsg::mutable_contents() {
  set_has_contents();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
  return contents_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAWelcome_CExtraMsg::release_contents() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
  clear_has_contents();
  return contents_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAWelcome_CExtraMsg::set_allocated_contents(::std::string* contents) {
  if (contents != NULL) {
    set_has_contents();
  } else {
    clear_has_contents();
  }
  contents_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), contents);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAWelcome.CExtraMsg.contents)
}

// -------------------------------------------------------------------

// CMsgDOTAWelcome

// optional uint32 store_item_hash = 5;
inline bool CMsgDOTAWelcome::has_store_item_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAWelcome::set_has_store_item_hash() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAWelcome::clear_has_store_item_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAWelcome::clear_store_item_hash() {
  store_item_hash_ = 0u;
  clear_has_store_item_hash();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::store_item_hash() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.store_item_hash)
  return store_item_hash_;
}
inline void CMsgDOTAWelcome::set_store_item_hash(::google::protobuf::uint32 value) {
  set_has_store_item_hash();
  store_item_hash_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.store_item_hash)
}

// optional uint32 timeplayedconsecutively = 6;
inline bool CMsgDOTAWelcome::has_timeplayedconsecutively() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAWelcome::set_has_timeplayedconsecutively() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAWelcome::clear_has_timeplayedconsecutively() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAWelcome::clear_timeplayedconsecutively() {
  timeplayedconsecutively_ = 0u;
  clear_has_timeplayedconsecutively();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::timeplayedconsecutively() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.timeplayedconsecutively)
  return timeplayedconsecutively_;
}
inline void CMsgDOTAWelcome::set_timeplayedconsecutively(::google::protobuf::uint32 value) {
  set_has_timeplayedconsecutively();
  timeplayedconsecutively_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.timeplayedconsecutively)
}

// optional bool allow_3rd_party_match_history = 7;
inline bool CMsgDOTAWelcome::has_allow_3rd_party_match_history() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAWelcome::set_has_allow_3rd_party_match_history() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTAWelcome::clear_has_allow_3rd_party_match_history() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTAWelcome::clear_allow_3rd_party_match_history() {
  allow_3rd_party_match_history_ = false;
  clear_has_allow_3rd_party_match_history();
}
inline bool CMsgDOTAWelcome::allow_3rd_party_match_history() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.allow_3rd_party_match_history)
  return allow_3rd_party_match_history_;
}
inline void CMsgDOTAWelcome::set_allow_3rd_party_match_history(bool value) {
  set_has_allow_3rd_party_match_history();
  allow_3rd_party_match_history_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.allow_3rd_party_match_history)
}

// optional .proto.dota.PartnerAccountType partner_account_type = 8 [default = PARTNER_NONE];
inline bool CMsgDOTAWelcome::has_partner_account_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAWelcome::set_has_partner_account_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAWelcome::clear_has_partner_account_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAWelcome::clear_partner_account_type() {
  partner_account_type_ = 0;
  clear_has_partner_account_type();
}
inline ::proto::dota::PartnerAccountType CMsgDOTAWelcome::partner_account_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.partner_account_type)
  return static_cast< ::proto::dota::PartnerAccountType >(partner_account_type_);
}
inline void CMsgDOTAWelcome::set_partner_account_type(::proto::dota::PartnerAccountType value) {
  assert(::proto::dota::PartnerAccountType_IsValid(value));
  set_has_partner_account_type();
  partner_account_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.partner_account_type)
}

// optional uint32 banned_word_list_word_id = 9;
inline bool CMsgDOTAWelcome::has_banned_word_list_word_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAWelcome::set_has_banned_word_list_word_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAWelcome::clear_has_banned_word_list_word_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAWelcome::clear_banned_word_list_word_id() {
  banned_word_list_word_id_ = 0u;
  clear_has_banned_word_list_word_id();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::banned_word_list_word_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.banned_word_list_word_id)
  return banned_word_list_word_id_;
}
inline void CMsgDOTAWelcome::set_banned_word_list_word_id(::google::protobuf::uint32 value) {
  set_has_banned_word_list_word_id();
  banned_word_list_word_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.banned_word_list_word_id)
}

// optional uint32 partner_account_state = 11;
inline bool CMsgDOTAWelcome::has_partner_account_state() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAWelcome::set_has_partner_account_state() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAWelcome::clear_has_partner_account_state() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAWelcome::clear_partner_account_state() {
  partner_account_state_ = 0u;
  clear_has_partner_account_state();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::partner_account_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.partner_account_state)
  return partner_account_state_;
}
inline void CMsgDOTAWelcome::set_partner_account_state(::google::protobuf::uint32 value) {
  set_has_partner_account_state();
  partner_account_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.partner_account_state)
}

// optional uint32 last_time_played = 12;
inline bool CMsgDOTAWelcome::has_last_time_played() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAWelcome::set_has_last_time_played() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAWelcome::clear_has_last_time_played() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAWelcome::clear_last_time_played() {
  last_time_played_ = 0u;
  clear_has_last_time_played();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::last_time_played() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.last_time_played)
  return last_time_played_;
}
inline void CMsgDOTAWelcome::set_last_time_played(::google::protobuf::uint32 value) {
  set_has_last_time_played();
  last_time_played_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.last_time_played)
}

// optional uint32 last_ip_address = 13;
inline bool CMsgDOTAWelcome::has_last_ip_address() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAWelcome::set_has_last_ip_address() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAWelcome::clear_has_last_ip_address() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAWelcome::clear_last_ip_address() {
  last_ip_address_ = 0u;
  clear_has_last_ip_address();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::last_ip_address() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.last_ip_address)
  return last_ip_address_;
}
inline void CMsgDOTAWelcome::set_last_ip_address(::google::protobuf::uint32 value) {
  set_has_last_ip_address();
  last_ip_address_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.last_ip_address)
}

// optional uint32 shutdownlawterminateminutes = 15;
inline bool CMsgDOTAWelcome::has_shutdownlawterminateminutes() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAWelcome::set_has_shutdownlawterminateminutes() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAWelcome::clear_has_shutdownlawterminateminutes() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAWelcome::clear_shutdownlawterminateminutes() {
  shutdownlawterminateminutes_ = 0u;
  clear_has_shutdownlawterminateminutes();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::shutdownlawterminateminutes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.shutdownlawterminateminutes)
  return shutdownlawterminateminutes_;
}
inline void CMsgDOTAWelcome::set_shutdownlawterminateminutes(::google::protobuf::uint32 value) {
  set_has_shutdownlawterminateminutes();
  shutdownlawterminateminutes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.shutdownlawterminateminutes)
}

// optional uint32 banned_word_list_version = 16;
inline bool CMsgDOTAWelcome::has_banned_word_list_version() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAWelcome::set_has_banned_word_list_version() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAWelcome::clear_has_banned_word_list_version() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAWelcome::clear_banned_word_list_version() {
  banned_word_list_version_ = 0u;
  clear_has_banned_word_list_version();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::banned_word_list_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.banned_word_list_version)
  return banned_word_list_version_;
}
inline void CMsgDOTAWelcome::set_banned_word_list_version(::google::protobuf::uint32 value) {
  set_has_banned_word_list_version();
  banned_word_list_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.banned_word_list_version)
}

// optional bool profile_private = 17;
inline bool CMsgDOTAWelcome::has_profile_private() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAWelcome::set_has_profile_private() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTAWelcome::clear_has_profile_private() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTAWelcome::clear_profile_private() {
  profile_private_ = false;
  clear_has_profile_private();
}
inline bool CMsgDOTAWelcome::profile_private() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.profile_private)
  return profile_private_;
}
inline void CMsgDOTAWelcome::set_profile_private(bool value) {
  set_has_profile_private();
  profile_private_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.profile_private)
}

// optional uint32 currency = 18;
inline bool CMsgDOTAWelcome::has_currency() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_currency() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTAWelcome::clear_has_currency() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTAWelcome::clear_currency() {
  currency_ = 0u;
  clear_has_currency();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::currency() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.currency)
  return currency_;
}
inline void CMsgDOTAWelcome::set_currency(::google::protobuf::uint32 value) {
  set_has_currency();
  currency_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.currency)
}

// optional uint32 bang_no = 19;
inline bool CMsgDOTAWelcome::has_bang_no() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_bang_no() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTAWelcome::clear_has_bang_no() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTAWelcome::clear_bang_no() {
  bang_no_ = 0u;
  clear_has_bang_no();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::bang_no() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.bang_no)
  return bang_no_;
}
inline void CMsgDOTAWelcome::set_bang_no(::google::protobuf::uint32 value) {
  set_has_bang_no();
  bang_no_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.bang_no)
}

// optional bool should_request_player_origin = 20;
inline bool CMsgDOTAWelcome::has_should_request_player_origin() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAWelcome::set_has_should_request_player_origin() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAWelcome::clear_has_should_request_player_origin() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAWelcome::clear_should_request_player_origin() {
  should_request_player_origin_ = false;
  clear_has_should_request_player_origin();
}
inline bool CMsgDOTAWelcome::should_request_player_origin() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.should_request_player_origin)
  return should_request_player_origin_;
}
inline void CMsgDOTAWelcome::set_should_request_player_origin(bool value) {
  set_has_should_request_player_origin();
  should_request_player_origin_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.should_request_player_origin)
}

// optional uint64 compendium_unlocks = 21;
inline bool CMsgDOTAWelcome::has_compendium_unlocks() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_compendium_unlocks() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgDOTAWelcome::clear_has_compendium_unlocks() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgDOTAWelcome::clear_compendium_unlocks() {
  compendium_unlocks_ = GOOGLE_ULONGLONG(0);
  clear_has_compendium_unlocks();
}
inline ::google::protobuf::uint64 CMsgDOTAWelcome::compendium_unlocks() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.compendium_unlocks)
  return compendium_unlocks_;
}
inline void CMsgDOTAWelcome::set_compendium_unlocks(::google::protobuf::uint64 value) {
  set_has_compendium_unlocks();
  compendium_unlocks_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.compendium_unlocks)
}

// optional uint32 gc_socache_file_version = 22;
inline bool CMsgDOTAWelcome::has_gc_socache_file_version() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_gc_socache_file_version() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgDOTAWelcome::clear_has_gc_socache_file_version() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgDOTAWelcome::clear_gc_socache_file_version() {
  gc_socache_file_version_ = 0u;
  clear_has_gc_socache_file_version();
}
inline ::google::protobuf::uint32 CMsgDOTAWelcome::gc_socache_file_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.gc_socache_file_version)
  return gc_socache_file_version_;
}
inline void CMsgDOTAWelcome::set_gc_socache_file_version(::google::protobuf::uint32 value) {
  set_has_gc_socache_file_version();
  gc_socache_file_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.gc_socache_file_version)
}

// repeated .proto.dota.CMsgDOTAWelcome.LocalizationDigest localization_digests = 23;
inline int CMsgDOTAWelcome::localization_digests_size() const {
  return localization_digests_.size();
}
inline void CMsgDOTAWelcome::clear_localization_digests() {
  localization_digests_.Clear();
}
inline const ::proto::dota::CMsgDOTAWelcome_LocalizationDigest& CMsgDOTAWelcome::localization_digests(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.localization_digests)
  return localization_digests_.Get(index);
}
inline ::proto::dota::CMsgDOTAWelcome_LocalizationDigest* CMsgDOTAWelcome::mutable_localization_digests(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAWelcome.localization_digests)
  return localization_digests_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAWelcome_LocalizationDigest* CMsgDOTAWelcome::add_localization_digests() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAWelcome.localization_digests)
  return localization_digests_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_LocalizationDigest >*
CMsgDOTAWelcome::mutable_localization_digests() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAWelcome.localization_digests)
  return &localization_digests_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_LocalizationDigest >&
CMsgDOTAWelcome::localization_digests() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAWelcome.localization_digests)
  return localization_digests_;
}

// optional bool is_perfect_world_test_account = 24;
inline bool CMsgDOTAWelcome::has_is_perfect_world_test_account() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_is_perfect_world_test_account() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTAWelcome::clear_has_is_perfect_world_test_account() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTAWelcome::clear_is_perfect_world_test_account() {
  is_perfect_world_test_account_ = false;
  clear_has_is_perfect_world_test_account();
}
inline bool CMsgDOTAWelcome::is_perfect_world_test_account() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.is_perfect_world_test_account)
  return is_perfect_world_test_account_;
}
inline void CMsgDOTAWelcome::set_is_perfect_world_test_account(bool value) {
  set_has_is_perfect_world_test_account();
  is_perfect_world_test_account_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.is_perfect_world_test_account)
}

// repeated .proto.dota.CMsgDOTAWelcome.CExtraMsg extra_messages = 26;
inline int CMsgDOTAWelcome::extra_messages_size() const {
  return extra_messages_.size();
}
inline void CMsgDOTAWelcome::clear_extra_messages() {
  extra_messages_.Clear();
}
inline const ::proto::dota::CMsgDOTAWelcome_CExtraMsg& CMsgDOTAWelcome::extra_messages(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.extra_messages)
  return extra_messages_.Get(index);
}
inline ::proto::dota::CMsgDOTAWelcome_CExtraMsg* CMsgDOTAWelcome::mutable_extra_messages(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAWelcome.extra_messages)
  return extra_messages_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAWelcome_CExtraMsg* CMsgDOTAWelcome::add_extra_messages() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAWelcome.extra_messages)
  return extra_messages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_CExtraMsg >*
CMsgDOTAWelcome::mutable_extra_messages() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAWelcome.extra_messages)
  return &extra_messages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAWelcome_CExtraMsg >&
CMsgDOTAWelcome::extra_messages() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAWelcome.extra_messages)
  return extra_messages_;
}

// optional uint64 minimum_recent_item_id = 27;
inline bool CMsgDOTAWelcome::has_minimum_recent_item_id() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_minimum_recent_item_id() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgDOTAWelcome::clear_has_minimum_recent_item_id() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgDOTAWelcome::clear_minimum_recent_item_id() {
  minimum_recent_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_minimum_recent_item_id();
}
inline ::google::protobuf::uint64 CMsgDOTAWelcome::minimum_recent_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.minimum_recent_item_id)
  return minimum_recent_item_id_;
}
inline void CMsgDOTAWelcome::set_minimum_recent_item_id(::google::protobuf::uint64 value) {
  set_has_minimum_recent_item_id();
  minimum_recent_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.minimum_recent_item_id)
}

// optional .proto.dota.EEvent active_event = 28 [default = EVENT_ID_NONE];
inline bool CMsgDOTAWelcome::has_active_event() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTAWelcome::set_has_active_event() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgDOTAWelcome::clear_has_active_event() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgDOTAWelcome::clear_active_event() {
  active_event_ = 0;
  clear_has_active_event();
}
inline ::proto::dota::EEvent CMsgDOTAWelcome::active_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAWelcome.active_event)
  return static_cast< ::proto::dota::EEvent >(active_event_);
}
inline void CMsgDOTAWelcome::set_active_event(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  set_has_active_event();
  active_event_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAWelcome.active_event)
}

// -------------------------------------------------------------------

// CSODOTAGameHeroFavorites

// optional uint32 account_id = 1 [(.proto.dota.key_field) = true];
inline bool CSODOTAGameHeroFavorites::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSODOTAGameHeroFavorites::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSODOTAGameHeroFavorites::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSODOTAGameHeroFavorites::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CSODOTAGameHeroFavorites::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSODOTAGameHeroFavorites.account_id)
  return account_id_;
}
inline void CSODOTAGameHeroFavorites::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSODOTAGameHeroFavorites.account_id)
}

// optional uint32 hero_id = 2 [(.proto.dota.key_field) = true];
inline bool CSODOTAGameHeroFavorites::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CSODOTAGameHeroFavorites::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CSODOTAGameHeroFavorites::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CSODOTAGameHeroFavorites::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CSODOTAGameHeroFavorites::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSODOTAGameHeroFavorites.hero_id)
  return hero_id_;
}
inline void CSODOTAGameHeroFavorites::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CSODOTAGameHeroFavorites.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTAHeroFavoritesAdd

// optional uint32 hero_id = 1;
inline bool CMsgDOTAHeroFavoritesAdd::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHeroFavoritesAdd::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHeroFavoritesAdd::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHeroFavoritesAdd::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHeroFavoritesAdd::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHeroFavoritesAdd.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHeroFavoritesAdd::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHeroFavoritesAdd.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTAHeroFavoritesRemove

// optional uint32 hero_id = 1;
inline bool CMsgDOTAHeroFavoritesRemove::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHeroFavoritesRemove::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHeroFavoritesRemove::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHeroFavoritesRemove::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHeroFavoritesRemove::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHeroFavoritesRemove.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHeroFavoritesRemove::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHeroFavoritesRemove.hero_id)
}

// -------------------------------------------------------------------

// CMsgSetShowcaseHero

// optional uint32 showcase_hero_id = 1;
inline bool CMsgSetShowcaseHero::has_showcase_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetShowcaseHero::set_has_showcase_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetShowcaseHero::clear_has_showcase_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetShowcaseHero::clear_showcase_hero_id() {
  showcase_hero_id_ = 0u;
  clear_has_showcase_hero_id();
}
inline ::google::protobuf::uint32 CMsgSetShowcaseHero::showcase_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSetShowcaseHero.showcase_hero_id)
  return showcase_hero_id_;
}
inline void CMsgSetShowcaseHero::set_showcase_hero_id(::google::protobuf::uint32 value) {
  set_has_showcase_hero_id();
  showcase_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSetShowcaseHero.showcase_hero_id)
}

// -------------------------------------------------------------------

// CMsgSetFeaturedItems

// repeated uint64 featured_item_id = 1;
inline int CMsgSetFeaturedItems::featured_item_id_size() const {
  return featured_item_id_.size();
}
inline void CMsgSetFeaturedItems::clear_featured_item_id() {
  featured_item_id_.Clear();
}
inline ::google::protobuf::uint64 CMsgSetFeaturedItems::featured_item_id(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSetFeaturedItems.featured_item_id)
  return featured_item_id_.Get(index);
}
inline void CMsgSetFeaturedItems::set_featured_item_id(int index, ::google::protobuf::uint64 value) {
  featured_item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSetFeaturedItems.featured_item_id)
}
inline void CMsgSetFeaturedItems::add_featured_item_id(::google::protobuf::uint64 value) {
  featured_item_id_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgSetFeaturedItems.featured_item_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgSetFeaturedItems::featured_item_id() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgSetFeaturedItems.featured_item_id)
  return featured_item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgSetFeaturedItems::mutable_featured_item_id() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgSetFeaturedItems.featured_item_id)
  return &featured_item_id_;
}

// -------------------------------------------------------------------

// CMsgDOTAFeaturedItems

// optional uint32 account_id = 1;
inline bool CMsgDOTAFeaturedItems::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFeaturedItems::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFeaturedItems::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFeaturedItems::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFeaturedItems::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFeaturedItems.account_id)
  return account_id_;
}
inline void CMsgDOTAFeaturedItems::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFeaturedItems.account_id)
}

// repeated uint64 featured_item_id = 2;
inline int CMsgDOTAFeaturedItems::featured_item_id_size() const {
  return featured_item_id_.size();
}
inline void CMsgDOTAFeaturedItems::clear_featured_item_id() {
  featured_item_id_.Clear();
}
inline ::google::protobuf::uint64 CMsgDOTAFeaturedItems::featured_item_id(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFeaturedItems.featured_item_id)
  return featured_item_id_.Get(index);
}
inline void CMsgDOTAFeaturedItems::set_featured_item_id(int index, ::google::protobuf::uint64 value) {
  featured_item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFeaturedItems.featured_item_id)
}
inline void CMsgDOTAFeaturedItems::add_featured_item_id(::google::protobuf::uint64 value) {
  featured_item_id_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFeaturedItems.featured_item_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgDOTAFeaturedItems::featured_item_id() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFeaturedItems.featured_item_id)
  return featured_item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgDOTAFeaturedItems::mutable_featured_item_id() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFeaturedItems.featured_item_id)
  return &featured_item_id_;
}

// repeated bytes object_data = 3;
inline int CMsgDOTAFeaturedItems::object_data_size() const {
  return object_data_.size();
}
inline void CMsgDOTAFeaturedItems::clear_object_data() {
  object_data_.Clear();
}
inline const ::std::string& CMsgDOTAFeaturedItems::object_data(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFeaturedItems.object_data)
  return object_data_.Get(index);
}
inline ::std::string* CMsgDOTAFeaturedItems::mutable_object_data(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAFeaturedItems.object_data)
  return object_data_.Mutable(index);
}
inline void CMsgDOTAFeaturedItems::set_object_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFeaturedItems.object_data)
  object_data_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgDOTAFeaturedItems::set_object_data(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFeaturedItems.object_data)
  object_data_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgDOTAFeaturedItems::set_object_data(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  object_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAFeaturedItems.object_data)
}
inline void CMsgDOTAFeaturedItems::set_object_data(int index, const void* value, size_t size) {
  object_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAFeaturedItems.object_data)
}
inline ::std::string* CMsgDOTAFeaturedItems::add_object_data() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgDOTAFeaturedItems.object_data)
  return object_data_.Add();
}
inline void CMsgDOTAFeaturedItems::add_object_data(const ::std::string& value) {
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFeaturedItems.object_data)
}
#if LANG_CXX11
inline void CMsgDOTAFeaturedItems::add_object_data(::std::string&& value) {
  object_data_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFeaturedItems.object_data)
}
#endif
inline void CMsgDOTAFeaturedItems::add_object_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  object_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgDOTAFeaturedItems.object_data)
}
inline void CMsgDOTAFeaturedItems::add_object_data(const void* value, size_t size) {
  object_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgDOTAFeaturedItems.object_data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDOTAFeaturedItems::object_data() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFeaturedItems.object_data)
  return object_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDOTAFeaturedItems::mutable_object_data() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFeaturedItems.object_data)
  return &object_data_;
}

// -------------------------------------------------------------------

// CMsgRequestLeagueInfo

// -------------------------------------------------------------------

// CDynamicLeagueData

// optional uint32 league_id = 1;
inline bool CDynamicLeagueData::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDynamicLeagueData::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDynamicLeagueData::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDynamicLeagueData::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDynamicLeagueData.league_id)
  return league_id_;
}
inline void CDynamicLeagueData::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDynamicLeagueData.league_id)
}

// optional fixed32 last_match_time = 2;
inline bool CDynamicLeagueData::has_last_match_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDynamicLeagueData::set_has_last_match_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDynamicLeagueData::clear_has_last_match_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDynamicLeagueData::clear_last_match_time() {
  last_match_time_ = 0u;
  clear_has_last_match_time();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::last_match_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDynamicLeagueData.last_match_time)
  return last_match_time_;
}
inline void CDynamicLeagueData::set_last_match_time(::google::protobuf::uint32 value) {
  set_has_last_match_time();
  last_match_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDynamicLeagueData.last_match_time)
}

// optional uint32 prize_pool_usd = 3;
inline bool CDynamicLeagueData::has_prize_pool_usd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDynamicLeagueData::set_has_prize_pool_usd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDynamicLeagueData::clear_has_prize_pool_usd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDynamicLeagueData::clear_prize_pool_usd() {
  prize_pool_usd_ = 0u;
  clear_has_prize_pool_usd();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::prize_pool_usd() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDynamicLeagueData.prize_pool_usd)
  return prize_pool_usd_;
}
inline void CDynamicLeagueData::set_prize_pool_usd(::google::protobuf::uint32 value) {
  set_has_prize_pool_usd();
  prize_pool_usd_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDynamicLeagueData.prize_pool_usd)
}

// optional bool has_live_matches = 4;
inline bool CDynamicLeagueData::has_has_live_matches() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDynamicLeagueData::set_has_has_live_matches() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDynamicLeagueData::clear_has_has_live_matches() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDynamicLeagueData::clear_has_live_matches() {
  has_live_matches_ = false;
  clear_has_has_live_matches();
}
inline bool CDynamicLeagueData::has_live_matches() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDynamicLeagueData.has_live_matches)
  return has_live_matches_;
}
inline void CDynamicLeagueData::set_has_live_matches(bool value) {
  set_has_has_live_matches();
  has_live_matches_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDynamicLeagueData.has_live_matches)
}

// optional bool is_compendium_public = 5;
inline bool CDynamicLeagueData::has_is_compendium_public() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDynamicLeagueData::set_has_is_compendium_public() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDynamicLeagueData::clear_has_is_compendium_public() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDynamicLeagueData::clear_is_compendium_public() {
  is_compendium_public_ = false;
  clear_has_is_compendium_public();
}
inline bool CDynamicLeagueData::is_compendium_public() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDynamicLeagueData.is_compendium_public)
  return is_compendium_public_;
}
inline void CDynamicLeagueData::set_is_compendium_public(bool value) {
  set_has_is_compendium_public();
  is_compendium_public_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDynamicLeagueData.is_compendium_public)
}

// optional uint32 compendium_version = 6;
inline bool CDynamicLeagueData::has_compendium_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDynamicLeagueData::set_has_compendium_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDynamicLeagueData::clear_has_compendium_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDynamicLeagueData::clear_compendium_version() {
  compendium_version_ = 0u;
  clear_has_compendium_version();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::compendium_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDynamicLeagueData.compendium_version)
  return compendium_version_;
}
inline void CDynamicLeagueData::set_compendium_version(::google::protobuf::uint32 value) {
  set_has_compendium_version();
  compendium_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDynamicLeagueData.compendium_version)
}

// optional uint32 compendium_content_version = 7;
inline bool CDynamicLeagueData::has_compendium_content_version() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDynamicLeagueData::set_has_compendium_content_version() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDynamicLeagueData::clear_has_compendium_content_version() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDynamicLeagueData::clear_compendium_content_version() {
  compendium_content_version_ = 0u;
  clear_has_compendium_content_version();
}
inline ::google::protobuf::uint32 CDynamicLeagueData::compendium_content_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CDynamicLeagueData.compendium_content_version)
  return compendium_content_version_;
}
inline void CDynamicLeagueData::set_compendium_content_version(::google::protobuf::uint32 value) {
  set_has_compendium_content_version();
  compendium_content_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CDynamicLeagueData.compendium_content_version)
}

// -------------------------------------------------------------------

// CStaticLeagueData

// optional uint32 league_id = 1;
inline bool CStaticLeagueData::has_league_id() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CStaticLeagueData::set_has_league_id() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CStaticLeagueData::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CStaticLeagueData::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CStaticLeagueData::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.league_id)
  return league_id_;
}
inline void CStaticLeagueData::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.league_id)
}

// optional string name = 2;
inline bool CStaticLeagueData::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CStaticLeagueData::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CStaticLeagueData::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CStaticLeagueData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CStaticLeagueData::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.name)
  return name_.GetNoArena();
}
inline void CStaticLeagueData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.name)
}
#if LANG_CXX11
inline void CStaticLeagueData::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CStaticLeagueData.name)
}
#endif
inline void CStaticLeagueData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CStaticLeagueData.name)
}
inline void CStaticLeagueData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CStaticLeagueData.name)
}
inline ::std::string* CStaticLeagueData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CStaticLeagueData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStaticLeagueData::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CStaticLeagueData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStaticLeagueData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CStaticLeagueData.name)
}

// optional string description = 3;
inline bool CStaticLeagueData::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CStaticLeagueData::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CStaticLeagueData::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CStaticLeagueData::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& CStaticLeagueData::description() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.description)
  return description_.GetNoArena();
}
inline void CStaticLeagueData::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.description)
}
#if LANG_CXX11
inline void CStaticLeagueData::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CStaticLeagueData.description)
}
#endif
inline void CStaticLeagueData::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CStaticLeagueData.description)
}
inline void CStaticLeagueData::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CStaticLeagueData.description)
}
inline ::std::string* CStaticLeagueData::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:proto.dota.CStaticLeagueData.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStaticLeagueData::release_description() {
  // @@protoc_insertion_point(field_release:proto.dota.CStaticLeagueData.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStaticLeagueData::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CStaticLeagueData.description)
}

// optional string banner_name = 4;
inline bool CStaticLeagueData::has_banner_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CStaticLeagueData::set_has_banner_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CStaticLeagueData::clear_has_banner_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CStaticLeagueData::clear_banner_name() {
  banner_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_banner_name();
}
inline const ::std::string& CStaticLeagueData::banner_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.banner_name)
  return banner_name_.GetNoArena();
}
inline void CStaticLeagueData::set_banner_name(const ::std::string& value) {
  set_has_banner_name();
  banner_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.banner_name)
}
#if LANG_CXX11
inline void CStaticLeagueData::set_banner_name(::std::string&& value) {
  set_has_banner_name();
  banner_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CStaticLeagueData.banner_name)
}
#endif
inline void CStaticLeagueData::set_banner_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_banner_name();
  banner_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CStaticLeagueData.banner_name)
}
inline void CStaticLeagueData::set_banner_name(const char* value, size_t size) {
  set_has_banner_name();
  banner_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CStaticLeagueData.banner_name)
}
inline ::std::string* CStaticLeagueData::mutable_banner_name() {
  set_has_banner_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CStaticLeagueData.banner_name)
  return banner_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStaticLeagueData::release_banner_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CStaticLeagueData.banner_name)
  clear_has_banner_name();
  return banner_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStaticLeagueData::set_allocated_banner_name(::std::string* banner_name) {
  if (banner_name != NULL) {
    set_has_banner_name();
  } else {
    clear_has_banner_name();
  }
  banner_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), banner_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CStaticLeagueData.banner_name)
}

// optional string itemdef_name = 5;
inline bool CStaticLeagueData::has_itemdef_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CStaticLeagueData::set_has_itemdef_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CStaticLeagueData::clear_has_itemdef_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CStaticLeagueData::clear_itemdef_name() {
  itemdef_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_itemdef_name();
}
inline const ::std::string& CStaticLeagueData::itemdef_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.itemdef_name)
  return itemdef_name_.GetNoArena();
}
inline void CStaticLeagueData::set_itemdef_name(const ::std::string& value) {
  set_has_itemdef_name();
  itemdef_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.itemdef_name)
}
#if LANG_CXX11
inline void CStaticLeagueData::set_itemdef_name(::std::string&& value) {
  set_has_itemdef_name();
  itemdef_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CStaticLeagueData.itemdef_name)
}
#endif
inline void CStaticLeagueData::set_itemdef_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_itemdef_name();
  itemdef_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CStaticLeagueData.itemdef_name)
}
inline void CStaticLeagueData::set_itemdef_name(const char* value, size_t size) {
  set_has_itemdef_name();
  itemdef_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CStaticLeagueData.itemdef_name)
}
inline ::std::string* CStaticLeagueData::mutable_itemdef_name() {
  set_has_itemdef_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CStaticLeagueData.itemdef_name)
  return itemdef_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStaticLeagueData::release_itemdef_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CStaticLeagueData.itemdef_name)
  clear_has_itemdef_name();
  return itemdef_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStaticLeagueData::set_allocated_itemdef_name(::std::string* itemdef_name) {
  if (itemdef_name != NULL) {
    set_has_itemdef_name();
  } else {
    clear_has_itemdef_name();
  }
  itemdef_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), itemdef_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CStaticLeagueData.itemdef_name)
}

// optional string url = 6;
inline bool CStaticLeagueData::has_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CStaticLeagueData::set_has_url() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CStaticLeagueData::clear_has_url() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CStaticLeagueData::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CStaticLeagueData::url() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.url)
  return url_.GetNoArena();
}
inline void CStaticLeagueData::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.url)
}
#if LANG_CXX11
inline void CStaticLeagueData::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CStaticLeagueData.url)
}
#endif
inline void CStaticLeagueData::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CStaticLeagueData.url)
}
inline void CStaticLeagueData::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CStaticLeagueData.url)
}
inline ::std::string* CStaticLeagueData::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.dota.CStaticLeagueData.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStaticLeagueData::release_url() {
  // @@protoc_insertion_point(field_release:proto.dota.CStaticLeagueData.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStaticLeagueData::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CStaticLeagueData.url)
}

// optional uint32 item_def_index = 7;
inline bool CStaticLeagueData::has_item_def_index() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CStaticLeagueData::set_has_item_def_index() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CStaticLeagueData::clear_has_item_def_index() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CStaticLeagueData::clear_item_def_index() {
  item_def_index_ = 0u;
  clear_has_item_def_index();
}
inline ::google::protobuf::uint32 CStaticLeagueData::item_def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.item_def_index)
  return item_def_index_;
}
inline void CStaticLeagueData::set_item_def_index(::google::protobuf::uint32 value) {
  set_has_item_def_index();
  item_def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.item_def_index)
}

// optional uint32 hud_skin_item_def_index = 8;
inline bool CStaticLeagueData::has_hud_skin_item_def_index() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CStaticLeagueData::set_has_hud_skin_item_def_index() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CStaticLeagueData::clear_has_hud_skin_item_def_index() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CStaticLeagueData::clear_hud_skin_item_def_index() {
  hud_skin_item_def_index_ = 0u;
  clear_has_hud_skin_item_def_index();
}
inline ::google::protobuf::uint32 CStaticLeagueData::hud_skin_item_def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.hud_skin_item_def_index)
  return hud_skin_item_def_index_;
}
inline void CStaticLeagueData::set_hud_skin_item_def_index(::google::protobuf::uint32 value) {
  set_has_hud_skin_item_def_index();
  hud_skin_item_def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.hud_skin_item_def_index)
}

// optional string loading_screen_name = 9;
inline bool CStaticLeagueData::has_loading_screen_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CStaticLeagueData::set_has_loading_screen_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CStaticLeagueData::clear_has_loading_screen_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CStaticLeagueData::clear_loading_screen_name() {
  loading_screen_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_loading_screen_name();
}
inline const ::std::string& CStaticLeagueData::loading_screen_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.loading_screen_name)
  return loading_screen_name_.GetNoArena();
}
inline void CStaticLeagueData::set_loading_screen_name(const ::std::string& value) {
  set_has_loading_screen_name();
  loading_screen_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.loading_screen_name)
}
#if LANG_CXX11
inline void CStaticLeagueData::set_loading_screen_name(::std::string&& value) {
  set_has_loading_screen_name();
  loading_screen_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CStaticLeagueData.loading_screen_name)
}
#endif
inline void CStaticLeagueData::set_loading_screen_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_loading_screen_name();
  loading_screen_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CStaticLeagueData.loading_screen_name)
}
inline void CStaticLeagueData::set_loading_screen_name(const char* value, size_t size) {
  set_has_loading_screen_name();
  loading_screen_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CStaticLeagueData.loading_screen_name)
}
inline ::std::string* CStaticLeagueData::mutable_loading_screen_name() {
  set_has_loading_screen_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CStaticLeagueData.loading_screen_name)
  return loading_screen_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStaticLeagueData::release_loading_screen_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CStaticLeagueData.loading_screen_name)
  clear_has_loading_screen_name();
  return loading_screen_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStaticLeagueData::set_allocated_loading_screen_name(::std::string* loading_screen_name) {
  if (loading_screen_name != NULL) {
    set_has_loading_screen_name();
  } else {
    clear_has_loading_screen_name();
  }
  loading_screen_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loading_screen_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CStaticLeagueData.loading_screen_name)
}

// optional uint32 base_prize_pool = 10;
inline bool CStaticLeagueData::has_base_prize_pool() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CStaticLeagueData::set_has_base_prize_pool() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CStaticLeagueData::clear_has_base_prize_pool() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CStaticLeagueData::clear_base_prize_pool() {
  base_prize_pool_ = 0u;
  clear_has_base_prize_pool();
}
inline ::google::protobuf::uint32 CStaticLeagueData::base_prize_pool() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.base_prize_pool)
  return base_prize_pool_;
}
inline void CStaticLeagueData::set_base_prize_pool(::google::protobuf::uint32 value) {
  set_has_base_prize_pool();
  base_prize_pool_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.base_prize_pool)
}

// optional bool is_major = 11;
inline bool CStaticLeagueData::has_is_major() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CStaticLeagueData::set_has_is_major() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CStaticLeagueData::clear_has_is_major() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CStaticLeagueData::clear_is_major() {
  is_major_ = false;
  clear_has_is_major();
}
inline bool CStaticLeagueData::is_major() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.is_major)
  return is_major_;
}
inline void CStaticLeagueData::set_is_major(bool value) {
  set_has_is_major();
  is_major_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.is_major)
}

// optional uint32 sort_order = 12;
inline bool CStaticLeagueData::has_sort_order() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CStaticLeagueData::set_has_sort_order() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CStaticLeagueData::clear_has_sort_order() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CStaticLeagueData::clear_sort_order() {
  sort_order_ = 0u;
  clear_has_sort_order();
}
inline ::google::protobuf::uint32 CStaticLeagueData::sort_order() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.sort_order)
  return sort_order_;
}
inline void CStaticLeagueData::set_sort_order(::google::protobuf::uint32 value) {
  set_has_sort_order();
  sort_order_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.sort_order)
}

// optional uint32 tier = 13;
inline bool CStaticLeagueData::has_tier() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CStaticLeagueData::set_has_tier() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CStaticLeagueData::clear_has_tier() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CStaticLeagueData::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
inline ::google::protobuf::uint32 CStaticLeagueData::tier() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.tier)
  return tier_;
}
inline void CStaticLeagueData::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.tier)
}

// optional uint32 amateur_region = 14;
inline bool CStaticLeagueData::has_amateur_region() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CStaticLeagueData::set_has_amateur_region() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CStaticLeagueData::clear_has_amateur_region() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CStaticLeagueData::clear_amateur_region() {
  amateur_region_ = 0u;
  clear_has_amateur_region();
}
inline ::google::protobuf::uint32 CStaticLeagueData::amateur_region() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.amateur_region)
  return amateur_region_;
}
inline void CStaticLeagueData::set_amateur_region(::google::protobuf::uint32 value) {
  set_has_amateur_region();
  amateur_region_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.amateur_region)
}

// optional string organizer = 15;
inline bool CStaticLeagueData::has_organizer() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CStaticLeagueData::set_has_organizer() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CStaticLeagueData::clear_has_organizer() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CStaticLeagueData::clear_organizer() {
  organizer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_organizer();
}
inline const ::std::string& CStaticLeagueData::organizer() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.organizer)
  return organizer_.GetNoArena();
}
inline void CStaticLeagueData::set_organizer(const ::std::string& value) {
  set_has_organizer();
  organizer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.organizer)
}
#if LANG_CXX11
inline void CStaticLeagueData::set_organizer(::std::string&& value) {
  set_has_organizer();
  organizer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CStaticLeagueData.organizer)
}
#endif
inline void CStaticLeagueData::set_organizer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_organizer();
  organizer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CStaticLeagueData.organizer)
}
inline void CStaticLeagueData::set_organizer(const char* value, size_t size) {
  set_has_organizer();
  organizer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CStaticLeagueData.organizer)
}
inline ::std::string* CStaticLeagueData::mutable_organizer() {
  set_has_organizer();
  // @@protoc_insertion_point(field_mutable:proto.dota.CStaticLeagueData.organizer)
  return organizer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStaticLeagueData::release_organizer() {
  // @@protoc_insertion_point(field_release:proto.dota.CStaticLeagueData.organizer)
  clear_has_organizer();
  return organizer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStaticLeagueData::set_allocated_organizer(::std::string* organizer) {
  if (organizer != NULL) {
    set_has_organizer();
  } else {
    clear_has_organizer();
  }
  organizer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), organizer);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CStaticLeagueData.organizer)
}

// optional uint32 start_date = 16;
inline bool CStaticLeagueData::has_start_date() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CStaticLeagueData::set_has_start_date() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CStaticLeagueData::clear_has_start_date() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CStaticLeagueData::clear_start_date() {
  start_date_ = 0u;
  clear_has_start_date();
}
inline ::google::protobuf::uint32 CStaticLeagueData::start_date() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.start_date)
  return start_date_;
}
inline void CStaticLeagueData::set_start_date(::google::protobuf::uint32 value) {
  set_has_start_date();
  start_date_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.start_date)
}

// optional uint32 end_date = 17;
inline bool CStaticLeagueData::has_end_date() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CStaticLeagueData::set_has_end_date() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CStaticLeagueData::clear_has_end_date() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CStaticLeagueData::clear_end_date() {
  end_date_ = 0u;
  clear_has_end_date();
}
inline ::google::protobuf::uint32 CStaticLeagueData::end_date() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.end_date)
  return end_date_;
}
inline void CStaticLeagueData::set_end_date(::google::protobuf::uint32 value) {
  set_has_end_date();
  end_date_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.end_date)
}

// optional string location = 18;
inline bool CStaticLeagueData::has_location() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CStaticLeagueData::set_has_location() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CStaticLeagueData::clear_has_location() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CStaticLeagueData::clear_location() {
  location_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_location();
}
inline const ::std::string& CStaticLeagueData::location() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.location)
  return location_.GetNoArena();
}
inline void CStaticLeagueData::set_location(const ::std::string& value) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.location)
}
#if LANG_CXX11
inline void CStaticLeagueData::set_location(::std::string&& value) {
  set_has_location();
  location_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CStaticLeagueData.location)
}
#endif
inline void CStaticLeagueData::set_location(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CStaticLeagueData.location)
}
inline void CStaticLeagueData::set_location(const char* value, size_t size) {
  set_has_location();
  location_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CStaticLeagueData.location)
}
inline ::std::string* CStaticLeagueData::mutable_location() {
  set_has_location();
  // @@protoc_insertion_point(field_mutable:proto.dota.CStaticLeagueData.location)
  return location_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStaticLeagueData::release_location() {
  // @@protoc_insertion_point(field_release:proto.dota.CStaticLeagueData.location)
  clear_has_location();
  return location_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStaticLeagueData::set_allocated_location(::std::string* location) {
  if (location != NULL) {
    set_has_location();
  } else {
    clear_has_location();
  }
  location_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), location);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CStaticLeagueData.location)
}

// optional string inventory_image = 19;
inline bool CStaticLeagueData::has_inventory_image() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CStaticLeagueData::set_has_inventory_image() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CStaticLeagueData::clear_has_inventory_image() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CStaticLeagueData::clear_inventory_image() {
  inventory_image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inventory_image();
}
inline const ::std::string& CStaticLeagueData::inventory_image() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.inventory_image)
  return inventory_image_.GetNoArena();
}
inline void CStaticLeagueData::set_inventory_image(const ::std::string& value) {
  set_has_inventory_image();
  inventory_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.inventory_image)
}
#if LANG_CXX11
inline void CStaticLeagueData::set_inventory_image(::std::string&& value) {
  set_has_inventory_image();
  inventory_image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CStaticLeagueData.inventory_image)
}
#endif
inline void CStaticLeagueData::set_inventory_image(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_inventory_image();
  inventory_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CStaticLeagueData.inventory_image)
}
inline void CStaticLeagueData::set_inventory_image(const char* value, size_t size) {
  set_has_inventory_image();
  inventory_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CStaticLeagueData.inventory_image)
}
inline ::std::string* CStaticLeagueData::mutable_inventory_image() {
  set_has_inventory_image();
  // @@protoc_insertion_point(field_mutable:proto.dota.CStaticLeagueData.inventory_image)
  return inventory_image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStaticLeagueData::release_inventory_image() {
  // @@protoc_insertion_point(field_release:proto.dota.CStaticLeagueData.inventory_image)
  clear_has_inventory_image();
  return inventory_image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStaticLeagueData::set_allocated_inventory_image(::std::string* inventory_image) {
  if (inventory_image != NULL) {
    set_has_inventory_image();
  } else {
    clear_has_inventory_image();
  }
  inventory_image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inventory_image);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CStaticLeagueData.inventory_image)
}

// optional string square_image = 20;
inline bool CStaticLeagueData::has_square_image() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CStaticLeagueData::set_has_square_image() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CStaticLeagueData::clear_has_square_image() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CStaticLeagueData::clear_square_image() {
  square_image_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_square_image();
}
inline const ::std::string& CStaticLeagueData::square_image() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.square_image)
  return square_image_.GetNoArena();
}
inline void CStaticLeagueData::set_square_image(const ::std::string& value) {
  set_has_square_image();
  square_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.square_image)
}
#if LANG_CXX11
inline void CStaticLeagueData::set_square_image(::std::string&& value) {
  set_has_square_image();
  square_image_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CStaticLeagueData.square_image)
}
#endif
inline void CStaticLeagueData::set_square_image(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_square_image();
  square_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CStaticLeagueData.square_image)
}
inline void CStaticLeagueData::set_square_image(const char* value, size_t size) {
  set_has_square_image();
  square_image_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CStaticLeagueData.square_image)
}
inline ::std::string* CStaticLeagueData::mutable_square_image() {
  set_has_square_image();
  // @@protoc_insertion_point(field_mutable:proto.dota.CStaticLeagueData.square_image)
  return square_image_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CStaticLeagueData::release_square_image() {
  // @@protoc_insertion_point(field_release:proto.dota.CStaticLeagueData.square_image)
  clear_has_square_image();
  return square_image_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CStaticLeagueData::set_allocated_square_image(::std::string* square_image) {
  if (square_image != NULL) {
    set_has_square_image();
  } else {
    clear_has_square_image();
  }
  square_image_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), square_image);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CStaticLeagueData.square_image)
}

// optional bool battle_pass_rollup = 21;
inline bool CStaticLeagueData::has_battle_pass_rollup() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CStaticLeagueData::set_has_battle_pass_rollup() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CStaticLeagueData::clear_has_battle_pass_rollup() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CStaticLeagueData::clear_battle_pass_rollup() {
  battle_pass_rollup_ = false;
  clear_has_battle_pass_rollup();
}
inline bool CStaticLeagueData::battle_pass_rollup() const {
  // @@protoc_insertion_point(field_get:proto.dota.CStaticLeagueData.battle_pass_rollup)
  return battle_pass_rollup_;
}
inline void CStaticLeagueData::set_battle_pass_rollup(bool value) {
  set_has_battle_pass_rollup();
  battle_pass_rollup_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CStaticLeagueData.battle_pass_rollup)
}

// -------------------------------------------------------------------

// CLeagueData

// optional .proto.dota.CDynamicLeagueData dynamic_data = 1;
inline bool CLeagueData::has_dynamic_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CLeagueData::set_has_dynamic_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CLeagueData::clear_has_dynamic_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CLeagueData::clear_dynamic_data() {
  if (dynamic_data_ != NULL) dynamic_data_->::proto::dota::CDynamicLeagueData::Clear();
  clear_has_dynamic_data();
}
inline const ::proto::dota::CDynamicLeagueData& CLeagueData::dynamic_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CLeagueData.dynamic_data)
  return dynamic_data_ != NULL ? *dynamic_data_
                         : *::proto::dota::CDynamicLeagueData::internal_default_instance();
}
inline ::proto::dota::CDynamicLeagueData* CLeagueData::mutable_dynamic_data() {
  set_has_dynamic_data();
  if (dynamic_data_ == NULL) {
    dynamic_data_ = new ::proto::dota::CDynamicLeagueData;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CLeagueData.dynamic_data)
  return dynamic_data_;
}
inline ::proto::dota::CDynamicLeagueData* CLeagueData::release_dynamic_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CLeagueData.dynamic_data)
  clear_has_dynamic_data();
  ::proto::dota::CDynamicLeagueData* temp = dynamic_data_;
  dynamic_data_ = NULL;
  return temp;
}
inline void CLeagueData::set_allocated_dynamic_data(::proto::dota::CDynamicLeagueData* dynamic_data) {
  delete dynamic_data_;
  dynamic_data_ = dynamic_data;
  if (dynamic_data) {
    set_has_dynamic_data();
  } else {
    clear_has_dynamic_data();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CLeagueData.dynamic_data)
}

// optional .proto.dota.CStaticLeagueData static_data = 2;
inline bool CLeagueData::has_static_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CLeagueData::set_has_static_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CLeagueData::clear_has_static_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CLeagueData::clear_static_data() {
  if (static_data_ != NULL) static_data_->::proto::dota::CStaticLeagueData::Clear();
  clear_has_static_data();
}
inline const ::proto::dota::CStaticLeagueData& CLeagueData::static_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CLeagueData.static_data)
  return static_data_ != NULL ? *static_data_
                         : *::proto::dota::CStaticLeagueData::internal_default_instance();
}
inline ::proto::dota::CStaticLeagueData* CLeagueData::mutable_static_data() {
  set_has_static_data();
  if (static_data_ == NULL) {
    static_data_ = new ::proto::dota::CStaticLeagueData;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CLeagueData.static_data)
  return static_data_;
}
inline ::proto::dota::CStaticLeagueData* CLeagueData::release_static_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CLeagueData.static_data)
  clear_has_static_data();
  ::proto::dota::CStaticLeagueData* temp = static_data_;
  static_data_ = NULL;
  return temp;
}
inline void CLeagueData::set_allocated_static_data(::proto::dota::CStaticLeagueData* static_data) {
  delete static_data_;
  static_data_ = static_data;
  if (static_data) {
    set_has_static_data();
  } else {
    clear_has_static_data();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CLeagueData.static_data)
}

// optional bool is_owned = 3;
inline bool CLeagueData::has_is_owned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CLeagueData::set_has_is_owned() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CLeagueData::clear_has_is_owned() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CLeagueData::clear_is_owned() {
  is_owned_ = false;
  clear_has_is_owned();
}
inline bool CLeagueData::is_owned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CLeagueData.is_owned)
  return is_owned_;
}
inline void CLeagueData::set_is_owned(bool value) {
  set_has_is_owned();
  is_owned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CLeagueData.is_owned)
}

// -------------------------------------------------------------------

// CMsgResponseLeagueInfo

// repeated .proto.dota.CDynamicLeagueData leagues = 1;
inline int CMsgResponseLeagueInfo::leagues_size() const {
  return leagues_.size();
}
inline void CMsgResponseLeagueInfo::clear_leagues() {
  leagues_.Clear();
}
inline const ::proto::dota::CDynamicLeagueData& CMsgResponseLeagueInfo::leagues(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgResponseLeagueInfo.leagues)
  return leagues_.Get(index);
}
inline ::proto::dota::CDynamicLeagueData* CMsgResponseLeagueInfo::mutable_leagues(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgResponseLeagueInfo.leagues)
  return leagues_.Mutable(index);
}
inline ::proto::dota::CDynamicLeagueData* CMsgResponseLeagueInfo::add_leagues() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgResponseLeagueInfo.leagues)
  return leagues_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CDynamicLeagueData >*
CMsgResponseLeagueInfo::mutable_leagues() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgResponseLeagueInfo.leagues)
  return &leagues_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CDynamicLeagueData >&
CMsgResponseLeagueInfo::leagues() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgResponseLeagueInfo.leagues)
  return leagues_;
}

// -------------------------------------------------------------------

// CMsgDOTAMatchVotes_PlayerVote

// optional uint32 account_id = 1;
inline bool CMsgDOTAMatchVotes_PlayerVote::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchVotes_PlayerVote::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchVotes.PlayerVote.account_id)
  return account_id_;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchVotes.PlayerVote.account_id)
}

// optional uint32 vote = 2;
inline bool CMsgDOTAMatchVotes_PlayerVote::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_has_vote() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_has_vote() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAMatchVotes_PlayerVote::clear_vote() {
  vote_ = 0u;
  clear_has_vote();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchVotes_PlayerVote::vote() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchVotes.PlayerVote.vote)
  return vote_;
}
inline void CMsgDOTAMatchVotes_PlayerVote::set_vote(::google::protobuf::uint32 value) {
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchVotes.PlayerVote.vote)
}

// -------------------------------------------------------------------

// CMsgDOTAMatchVotes

// optional uint64 match_id = 1;
inline bool CMsgDOTAMatchVotes::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchVotes::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatchVotes::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatchVotes::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAMatchVotes::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchVotes.match_id)
  return match_id_;
}
inline void CMsgDOTAMatchVotes::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchVotes.match_id)
}

// repeated .proto.dota.CMsgDOTAMatchVotes.PlayerVote votes = 2;
inline int CMsgDOTAMatchVotes::votes_size() const {
  return votes_.size();
}
inline void CMsgDOTAMatchVotes::clear_votes() {
  votes_.Clear();
}
inline const ::proto::dota::CMsgDOTAMatchVotes_PlayerVote& CMsgDOTAMatchVotes::votes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchVotes.votes)
  return votes_.Get(index);
}
inline ::proto::dota::CMsgDOTAMatchVotes_PlayerVote* CMsgDOTAMatchVotes::mutable_votes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAMatchVotes.votes)
  return votes_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAMatchVotes_PlayerVote* CMsgDOTAMatchVotes::add_votes() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAMatchVotes.votes)
  return votes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatchVotes_PlayerVote >*
CMsgDOTAMatchVotes::mutable_votes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAMatchVotes.votes)
  return &votes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAMatchVotes_PlayerVote >&
CMsgDOTAMatchVotes::votes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAMatchVotes.votes)
  return votes_;
}

// -------------------------------------------------------------------

// CMsgCastMatchVote

// optional uint64 match_id = 1;
inline bool CMsgCastMatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCastMatchVote::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCastMatchVote::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCastMatchVote::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgCastMatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCastMatchVote.match_id)
  return match_id_;
}
inline void CMsgCastMatchVote::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCastMatchVote.match_id)
}

// optional .proto.dota.DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
inline bool CMsgCastMatchVote::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCastMatchVote::set_has_vote() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgCastMatchVote::clear_has_vote() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgCastMatchVote::clear_vote() {
  vote_ = 0;
  clear_has_vote();
}
inline ::proto::dota::DOTAMatchVote CMsgCastMatchVote::vote() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgCastMatchVote.vote)
  return static_cast< ::proto::dota::DOTAMatchVote >(vote_);
}
inline void CMsgCastMatchVote::set_vote(::proto::dota::DOTAMatchVote value) {
  assert(::proto::dota::DOTAMatchVote_IsValid(value));
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgCastMatchVote.vote)
}

// -------------------------------------------------------------------

// CMsgRetrieveMatchVote

// optional uint64 match_id = 1;
inline bool CMsgRetrieveMatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRetrieveMatchVote::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRetrieveMatchVote::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRetrieveMatchVote::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgRetrieveMatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRetrieveMatchVote.match_id)
  return match_id_;
}
inline void CMsgRetrieveMatchVote::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRetrieveMatchVote.match_id)
}

// optional uint32 incremental = 2;
inline bool CMsgRetrieveMatchVote::has_incremental() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRetrieveMatchVote::set_has_incremental() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRetrieveMatchVote::clear_has_incremental() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRetrieveMatchVote::clear_incremental() {
  incremental_ = 0u;
  clear_has_incremental();
}
inline ::google::protobuf::uint32 CMsgRetrieveMatchVote::incremental() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRetrieveMatchVote.incremental)
  return incremental_;
}
inline void CMsgRetrieveMatchVote::set_incremental(::google::protobuf::uint32 value) {
  set_has_incremental();
  incremental_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRetrieveMatchVote.incremental)
}

// -------------------------------------------------------------------

// CMsgMatchVoteResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgMatchVoteResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMatchVoteResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMatchVoteResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMatchVoteResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgMatchVoteResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchVoteResponse.eresult)
  return eresult_;
}
inline void CMsgMatchVoteResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchVoteResponse.eresult)
}

// optional .proto.dota.DOTAMatchVote vote = 2 [default = DOTAMatchVote_INVALID];
inline bool CMsgMatchVoteResponse::has_vote() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatchVoteResponse::set_has_vote() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMatchVoteResponse::clear_has_vote() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMatchVoteResponse::clear_vote() {
  vote_ = 0;
  clear_has_vote();
}
inline ::proto::dota::DOTAMatchVote CMsgMatchVoteResponse::vote() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchVoteResponse.vote)
  return static_cast< ::proto::dota::DOTAMatchVote >(vote_);
}
inline void CMsgMatchVoteResponse::set_vote(::proto::dota::DOTAMatchVote value) {
  assert(::proto::dota::DOTAMatchVote_IsValid(value));
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchVoteResponse.vote)
}

// optional uint32 positive_votes = 3;
inline bool CMsgMatchVoteResponse::has_positive_votes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchVoteResponse::set_has_positive_votes() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMatchVoteResponse::clear_has_positive_votes() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMatchVoteResponse::clear_positive_votes() {
  positive_votes_ = 0u;
  clear_has_positive_votes();
}
inline ::google::protobuf::uint32 CMsgMatchVoteResponse::positive_votes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchVoteResponse.positive_votes)
  return positive_votes_;
}
inline void CMsgMatchVoteResponse::set_positive_votes(::google::protobuf::uint32 value) {
  set_has_positive_votes();
  positive_votes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchVoteResponse.positive_votes)
}

// optional uint32 negative_votes = 4;
inline bool CMsgMatchVoteResponse::has_negative_votes() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchVoteResponse::set_has_negative_votes() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMatchVoteResponse::clear_has_negative_votes() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMatchVoteResponse::clear_negative_votes() {
  negative_votes_ = 0u;
  clear_has_negative_votes();
}
inline ::google::protobuf::uint32 CMsgMatchVoteResponse::negative_votes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchVoteResponse.negative_votes)
  return negative_votes_;
}
inline void CMsgMatchVoteResponse::set_negative_votes(::google::protobuf::uint32 value) {
  set_has_negative_votes();
  negative_votes_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchVoteResponse.negative_votes)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFame_FeaturedPlayer

// optional uint32 account_id = 1;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedPlayer::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.account_id)
  return account_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.account_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedPlayer::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.hero_id)
}

// optional float average_scaled_metric = 3;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_average_scaled_metric() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_has_average_scaled_metric() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_has_average_scaled_metric() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_average_scaled_metric() {
  average_scaled_metric_ = 0;
  clear_has_average_scaled_metric();
}
inline float CMsgDOTAHallOfFame_FeaturedPlayer::average_scaled_metric() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.average_scaled_metric)
  return average_scaled_metric_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_average_scaled_metric(float value) {
  set_has_average_scaled_metric();
  average_scaled_metric_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.average_scaled_metric)
}

// optional uint32 num_games = 4;
inline bool CMsgDOTAHallOfFame_FeaturedPlayer::has_num_games() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_has_num_games() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_has_num_games() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::clear_num_games() {
  num_games_ = 0u;
  clear_has_num_games();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedPlayer::num_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.num_games)
  return num_games_;
}
inline void CMsgDOTAHallOfFame_FeaturedPlayer::set_num_games(::google::protobuf::uint32 value) {
  set_has_num_games();
  num_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer.num_games)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFame_FeaturedFarmer

// optional uint32 account_id = 1;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedFarmer::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.account_id)
  return account_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.account_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedFarmer::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.hero_id)
  return hero_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.hero_id)
}

// optional uint32 gold_per_min = 3;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_gold_per_min() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_has_gold_per_min() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_has_gold_per_min() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_gold_per_min() {
  gold_per_min_ = 0u;
  clear_has_gold_per_min();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame_FeaturedFarmer::gold_per_min() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.gold_per_min)
  return gold_per_min_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_gold_per_min(::google::protobuf::uint32 value) {
  set_has_gold_per_min();
  gold_per_min_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.gold_per_min)
}

// optional uint64 match_id = 4;
inline bool CMsgDOTAHallOfFame_FeaturedFarmer::has_match_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_has_match_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAHallOfFame_FeaturedFarmer::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.match_id)
  return match_id_;
}
inline void CMsgDOTAHallOfFame_FeaturedFarmer::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer.match_id)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFame

// optional uint32 week = 1;
inline bool CMsgDOTAHallOfFame::has_week() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFame::set_has_week() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHallOfFame::clear_has_week() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHallOfFame::clear_week() {
  week_ = 0u;
  clear_has_week();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFame::week() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.week)
  return week_;
}
inline void CMsgDOTAHallOfFame::set_week(::google::protobuf::uint32 value) {
  set_has_week();
  week_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFame.week)
}

// repeated .proto.dota.CMsgDOTAHallOfFame.FeaturedPlayer featured_players = 2;
inline int CMsgDOTAHallOfFame::featured_players_size() const {
  return featured_players_.size();
}
inline void CMsgDOTAHallOfFame::clear_featured_players() {
  featured_players_.Clear();
}
inline const ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer& CMsgDOTAHallOfFame::featured_players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.featured_players)
  return featured_players_.Get(index);
}
inline ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer* CMsgDOTAHallOfFame::mutable_featured_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAHallOfFame.featured_players)
  return featured_players_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer* CMsgDOTAHallOfFame::add_featured_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAHallOfFame.featured_players)
  return featured_players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer >*
CMsgDOTAHallOfFame::mutable_featured_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAHallOfFame.featured_players)
  return &featured_players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAHallOfFame_FeaturedPlayer >&
CMsgDOTAHallOfFame::featured_players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAHallOfFame.featured_players)
  return featured_players_;
}

// optional .proto.dota.CMsgDOTAHallOfFame.FeaturedFarmer featured_farmer = 3;
inline bool CMsgDOTAHallOfFame::has_featured_farmer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFame::set_has_featured_farmer() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFame::clear_has_featured_farmer() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFame::clear_featured_farmer() {
  if (featured_farmer_ != NULL) featured_farmer_->::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer::Clear();
  clear_has_featured_farmer();
}
inline const ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer& CMsgDOTAHallOfFame::featured_farmer() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFame.featured_farmer)
  return featured_farmer_ != NULL ? *featured_farmer_
                         : *::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer::internal_default_instance();
}
inline ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* CMsgDOTAHallOfFame::mutable_featured_farmer() {
  set_has_featured_farmer();
  if (featured_farmer_ == NULL) {
    featured_farmer_ = new ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAHallOfFame.featured_farmer)
  return featured_farmer_;
}
inline ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* CMsgDOTAHallOfFame::release_featured_farmer() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAHallOfFame.featured_farmer)
  clear_has_featured_farmer();
  ::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* temp = featured_farmer_;
  featured_farmer_ = NULL;
  return temp;
}
inline void CMsgDOTAHallOfFame::set_allocated_featured_farmer(::proto::dota::CMsgDOTAHallOfFame_FeaturedFarmer* featured_farmer) {
  delete featured_farmer_;
  featured_farmer_ = featured_farmer;
  if (featured_farmer) {
    set_has_featured_farmer();
  } else {
    clear_has_featured_farmer();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAHallOfFame.featured_farmer)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFameRequest

// optional uint32 week = 1;
inline bool CMsgDOTAHallOfFameRequest::has_week() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFameRequest::set_has_week() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFameRequest::clear_has_week() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFameRequest::clear_week() {
  week_ = 0u;
  clear_has_week();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFameRequest::week() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFameRequest.week)
  return week_;
}
inline void CMsgDOTAHallOfFameRequest::set_week(::google::protobuf::uint32 value) {
  set_has_week();
  week_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFameRequest.week)
}

// -------------------------------------------------------------------

// CMsgDOTAHallOfFameResponse

// optional .proto.dota.CMsgDOTAHallOfFame hall_of_fame = 1;
inline bool CMsgDOTAHallOfFameResponse::has_hall_of_fame() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHallOfFameResponse::set_has_hall_of_fame() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHallOfFameResponse::clear_has_hall_of_fame() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHallOfFameResponse::clear_hall_of_fame() {
  if (hall_of_fame_ != NULL) hall_of_fame_->::proto::dota::CMsgDOTAHallOfFame::Clear();
  clear_has_hall_of_fame();
}
inline const ::proto::dota::CMsgDOTAHallOfFame& CMsgDOTAHallOfFameResponse::hall_of_fame() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFameResponse.hall_of_fame)
  return hall_of_fame_ != NULL ? *hall_of_fame_
                         : *::proto::dota::CMsgDOTAHallOfFame::internal_default_instance();
}
inline ::proto::dota::CMsgDOTAHallOfFame* CMsgDOTAHallOfFameResponse::mutable_hall_of_fame() {
  set_has_hall_of_fame();
  if (hall_of_fame_ == NULL) {
    hall_of_fame_ = new ::proto::dota::CMsgDOTAHallOfFame;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAHallOfFameResponse.hall_of_fame)
  return hall_of_fame_;
}
inline ::proto::dota::CMsgDOTAHallOfFame* CMsgDOTAHallOfFameResponse::release_hall_of_fame() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAHallOfFameResponse.hall_of_fame)
  clear_has_hall_of_fame();
  ::proto::dota::CMsgDOTAHallOfFame* temp = hall_of_fame_;
  hall_of_fame_ = NULL;
  return temp;
}
inline void CMsgDOTAHallOfFameResponse::set_allocated_hall_of_fame(::proto::dota::CMsgDOTAHallOfFame* hall_of_fame) {
  delete hall_of_fame_;
  hall_of_fame_ = hall_of_fame;
  if (hall_of_fame) {
    set_has_hall_of_fame();
  } else {
    clear_has_hall_of_fame();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAHallOfFameResponse.hall_of_fame)
}

// optional uint32 eresult = 2 [default = 2];
inline bool CMsgDOTAHallOfFameResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHallOfFameResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHallOfFameResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHallOfFameResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTAHallOfFameResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHallOfFameResponse.eresult)
  return eresult_;
}
inline void CMsgDOTAHallOfFameResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHallOfFameResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTAHalloweenHighScoreRequest

// optional int32 round = 1 [default = -1];
inline bool CMsgDOTAHalloweenHighScoreRequest::has_round() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreRequest::set_has_round() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHalloweenHighScoreRequest::clear_has_round() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHalloweenHighScoreRequest::clear_round() {
  round_ = -1;
  clear_has_round();
}
inline ::google::protobuf::int32 CMsgDOTAHalloweenHighScoreRequest::round() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHalloweenHighScoreRequest.round)
  return round_;
}
inline void CMsgDOTAHalloweenHighScoreRequest::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHalloweenHighScoreRequest.round)
}

// -------------------------------------------------------------------

// CMsgDOTAHalloweenHighScoreResponse

// optional uint32 score = 1;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgDOTAHalloweenHighScoreResponse::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHalloweenHighScoreResponse.score)
  return score_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHalloweenHighScoreResponse.score)
}

// optional .proto.dota.CMsgDOTAMatch match = 2;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_match() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_has_match() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_has_match() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_match() {
  if (match_ != NULL) match_->::proto::dota::CMsgDOTAMatch::Clear();
  clear_has_match();
}
inline const ::proto::dota::CMsgDOTAMatch& CMsgDOTAHalloweenHighScoreResponse::match() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHalloweenHighScoreResponse.match)
  return match_ != NULL ? *match_
                         : *::proto::dota::CMsgDOTAMatch::internal_default_instance();
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTAHalloweenHighScoreResponse::mutable_match() {
  set_has_match();
  if (match_ == NULL) {
    match_ = new ::proto::dota::CMsgDOTAMatch;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAHalloweenHighScoreResponse.match)
  return match_;
}
inline ::proto::dota::CMsgDOTAMatch* CMsgDOTAHalloweenHighScoreResponse::release_match() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAHalloweenHighScoreResponse.match)
  clear_has_match();
  ::proto::dota::CMsgDOTAMatch* temp = match_;
  match_ = NULL;
  return temp;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_allocated_match(::proto::dota::CMsgDOTAMatch* match) {
  delete match_;
  match_ = match;
  if (match) {
    set_has_match();
  } else {
    clear_has_match();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAHalloweenHighScoreResponse.match)
}

// optional uint32 eresult = 3;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTAHalloweenHighScoreResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHalloweenHighScoreResponse.eresult)
  return eresult_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHalloweenHighScoreResponse.eresult)
}

// optional int32 round = 4;
inline bool CMsgDOTAHalloweenHighScoreResponse::has_round() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_has_round() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_has_round() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAHalloweenHighScoreResponse::clear_round() {
  round_ = 0;
  clear_has_round();
}
inline ::google::protobuf::int32 CMsgDOTAHalloweenHighScoreResponse::round() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAHalloweenHighScoreResponse.round)
  return round_;
}
inline void CMsgDOTAHalloweenHighScoreResponse::set_round(::google::protobuf::int32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAHalloweenHighScoreResponse.round)
}

// -------------------------------------------------------------------

// CMsgDOTAStorePromoPagesRequest

// optional uint32 version_seen = 1;
inline bool CMsgDOTAStorePromoPagesRequest::has_version_seen() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAStorePromoPagesRequest::set_has_version_seen() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAStorePromoPagesRequest::clear_has_version_seen() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAStorePromoPagesRequest::clear_version_seen() {
  version_seen_ = 0u;
  clear_has_version_seen();
}
inline ::google::protobuf::uint32 CMsgDOTAStorePromoPagesRequest::version_seen() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStorePromoPagesRequest.version_seen)
  return version_seen_;
}
inline void CMsgDOTAStorePromoPagesRequest::set_version_seen(::google::protobuf::uint32 value) {
  set_has_version_seen();
  version_seen_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAStorePromoPagesRequest.version_seen)
}

// -------------------------------------------------------------------

// CMsgDOTAStorePromoPagesResponse_PromoPage

// optional uint32 promo_id = 1;
inline bool CMsgDOTAStorePromoPagesResponse_PromoPage::has_promo_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_has_promo_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_has_promo_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_promo_id() {
  promo_id_ = 0u;
  clear_has_promo_id();
}
inline ::google::protobuf::uint32 CMsgDOTAStorePromoPagesResponse_PromoPage::promo_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.promo_id)
  return promo_id_;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_promo_id(::google::protobuf::uint32 value) {
  set_has_promo_id();
  promo_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.promo_id)
}

// optional string title = 2;
inline bool CMsgDOTAStorePromoPagesResponse_PromoPage::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& CMsgDOTAStorePromoPagesResponse_PromoPage::title() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
  return title_.GetNoArena();
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
#if LANG_CXX11
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
#endif
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::release_title() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.title)
}

// optional string url = 3;
inline bool CMsgDOTAStorePromoPagesResponse_PromoPage::has_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_has_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_has_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgDOTAStorePromoPagesResponse_PromoPage::url() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
  return url_.GetNoArena();
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
#if LANG_CXX11
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
#endif
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAStorePromoPagesResponse_PromoPage::release_url() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAStorePromoPagesResponse_PromoPage::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage.url)
}

// -------------------------------------------------------------------

// CMsgDOTAStorePromoPagesResponse

// repeated .proto.dota.CMsgDOTAStorePromoPagesResponse.PromoPage pages = 1;
inline int CMsgDOTAStorePromoPagesResponse::pages_size() const {
  return pages_.size();
}
inline void CMsgDOTAStorePromoPagesResponse::clear_pages() {
  pages_.Clear();
}
inline const ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage& CMsgDOTAStorePromoPagesResponse::pages(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStorePromoPagesResponse.pages)
  return pages_.Get(index);
}
inline ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage* CMsgDOTAStorePromoPagesResponse::mutable_pages(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAStorePromoPagesResponse.pages)
  return pages_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage* CMsgDOTAStorePromoPagesResponse::add_pages() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAStorePromoPagesResponse.pages)
  return pages_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage >*
CMsgDOTAStorePromoPagesResponse::mutable_pages() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAStorePromoPagesResponse.pages)
  return &pages_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAStorePromoPagesResponse_PromoPage >&
CMsgDOTAStorePromoPagesResponse::pages() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAStorePromoPagesResponse.pages)
  return pages_;
}

// -------------------------------------------------------------------

// CMsgLeagueScheduleBlockTeamInfo

// optional uint32 team_id = 1;
inline bool CMsgLeagueScheduleBlockTeamInfo::has_team_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_has_team_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgLeagueScheduleBlockTeamInfo::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeagueScheduleBlockTeamInfo.team_id)
  return team_id_;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeagueScheduleBlockTeamInfo.team_id)
}

// optional string name = 2;
inline bool CMsgLeagueScheduleBlockTeamInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgLeagueScheduleBlockTeamInfo::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeagueScheduleBlockTeamInfo.name)
  return name_.GetNoArena();
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeagueScheduleBlockTeamInfo.name)
}
#if LANG_CXX11
inline void CMsgLeagueScheduleBlockTeamInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgLeagueScheduleBlockTeamInfo.name)
}
#endif
inline void CMsgLeagueScheduleBlockTeamInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgLeagueScheduleBlockTeamInfo.name)
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgLeagueScheduleBlockTeamInfo.name)
}
inline ::std::string* CMsgLeagueScheduleBlockTeamInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgLeagueScheduleBlockTeamInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgLeagueScheduleBlockTeamInfo::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgLeagueScheduleBlockTeamInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgLeagueScheduleBlockTeamInfo.name)
}

// optional uint64 logo = 4;
inline bool CMsgLeagueScheduleBlockTeamInfo::has_logo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_has_logo() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_has_logo() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLeagueScheduleBlockTeamInfo::clear_logo() {
  logo_ = GOOGLE_ULONGLONG(0);
  clear_has_logo();
}
inline ::google::protobuf::uint64 CMsgLeagueScheduleBlockTeamInfo::logo() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeagueScheduleBlockTeamInfo.logo)
  return logo_;
}
inline void CMsgLeagueScheduleBlockTeamInfo::set_logo(::google::protobuf::uint64 value) {
  set_has_logo();
  logo_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeagueScheduleBlockTeamInfo.logo)
}

// -------------------------------------------------------------------

// CMsgLeagueScheduleBlock

// optional uint32 block_id = 1;
inline bool CMsgLeagueScheduleBlock::has_block_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLeagueScheduleBlock::set_has_block_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLeagueScheduleBlock::clear_has_block_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLeagueScheduleBlock::clear_block_id() {
  block_id_ = 0u;
  clear_has_block_id();
}
inline ::google::protobuf::uint32 CMsgLeagueScheduleBlock::block_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeagueScheduleBlock.block_id)
  return block_id_;
}
inline void CMsgLeagueScheduleBlock::set_block_id(::google::protobuf::uint32 value) {
  set_has_block_id();
  block_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeagueScheduleBlock.block_id)
}

// optional uint32 start_time = 2;
inline bool CMsgLeagueScheduleBlock::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLeagueScheduleBlock::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLeagueScheduleBlock::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLeagueScheduleBlock::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgLeagueScheduleBlock::start_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeagueScheduleBlock.start_time)
  return start_time_;
}
inline void CMsgLeagueScheduleBlock::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeagueScheduleBlock.start_time)
}

// optional bool finals = 4;
inline bool CMsgLeagueScheduleBlock::has_finals() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgLeagueScheduleBlock::set_has_finals() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgLeagueScheduleBlock::clear_has_finals() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgLeagueScheduleBlock::clear_finals() {
  finals_ = false;
  clear_has_finals();
}
inline bool CMsgLeagueScheduleBlock::finals() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeagueScheduleBlock.finals)
  return finals_;
}
inline void CMsgLeagueScheduleBlock::set_finals(bool value) {
  set_has_finals();
  finals_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeagueScheduleBlock.finals)
}

// optional string comment = 5;
inline bool CMsgLeagueScheduleBlock::has_comment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeagueScheduleBlock::set_has_comment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeagueScheduleBlock::clear_has_comment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeagueScheduleBlock::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
inline const ::std::string& CMsgLeagueScheduleBlock::comment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeagueScheduleBlock.comment)
  return comment_.GetNoArena();
}
inline void CMsgLeagueScheduleBlock::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeagueScheduleBlock.comment)
}
#if LANG_CXX11
inline void CMsgLeagueScheduleBlock::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgLeagueScheduleBlock.comment)
}
#endif
inline void CMsgLeagueScheduleBlock::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgLeagueScheduleBlock.comment)
}
inline void CMsgLeagueScheduleBlock::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgLeagueScheduleBlock.comment)
}
inline ::std::string* CMsgLeagueScheduleBlock::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgLeagueScheduleBlock.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgLeagueScheduleBlock::release_comment() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgLeagueScheduleBlock.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgLeagueScheduleBlock::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgLeagueScheduleBlock.comment)
}

// repeated .proto.dota.CMsgLeagueScheduleBlockTeamInfo teams = 6;
inline int CMsgLeagueScheduleBlock::teams_size() const {
  return teams_.size();
}
inline void CMsgLeagueScheduleBlock::clear_teams() {
  teams_.Clear();
}
inline const ::proto::dota::CMsgLeagueScheduleBlockTeamInfo& CMsgLeagueScheduleBlock::teams(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeagueScheduleBlock.teams)
  return teams_.Get(index);
}
inline ::proto::dota::CMsgLeagueScheduleBlockTeamInfo* CMsgLeagueScheduleBlock::mutable_teams(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgLeagueScheduleBlock.teams)
  return teams_.Mutable(index);
}
inline ::proto::dota::CMsgLeagueScheduleBlockTeamInfo* CMsgLeagueScheduleBlock::add_teams() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgLeagueScheduleBlock.teams)
  return teams_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgLeagueScheduleBlockTeamInfo >*
CMsgLeagueScheduleBlock::mutable_teams() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgLeagueScheduleBlock.teams)
  return &teams_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgLeagueScheduleBlockTeamInfo >&
CMsgLeagueScheduleBlock::teams() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgLeagueScheduleBlock.teams)
  return teams_;
}

// -------------------------------------------------------------------

// CMsgDOTALeague

// optional uint32 league_id = 1;
inline bool CMsgDOTALeague::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeague::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeague::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeague::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTALeague::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeague.league_id)
  return league_id_;
}
inline void CMsgDOTALeague::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALeague.league_id)
}

// repeated .proto.dota.CMsgLeagueScheduleBlock schedule = 2;
inline int CMsgDOTALeague::schedule_size() const {
  return schedule_.size();
}
inline void CMsgDOTALeague::clear_schedule() {
  schedule_.Clear();
}
inline const ::proto::dota::CMsgLeagueScheduleBlock& CMsgDOTALeague::schedule(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeague.schedule)
  return schedule_.Get(index);
}
inline ::proto::dota::CMsgLeagueScheduleBlock* CMsgDOTALeague::mutable_schedule(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALeague.schedule)
  return schedule_.Mutable(index);
}
inline ::proto::dota::CMsgLeagueScheduleBlock* CMsgDOTALeague::add_schedule() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTALeague.schedule)
  return schedule_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgLeagueScheduleBlock >*
CMsgDOTALeague::mutable_schedule() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTALeague.schedule)
  return &schedule_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgLeagueScheduleBlock >&
CMsgDOTALeague::schedule() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTALeague.schedule)
  return schedule_;
}

// -------------------------------------------------------------------

// CMsgDOTALeagueScheduleRequest

// optional uint32 league_id = 1;
inline bool CMsgDOTALeagueScheduleRequest::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeagueScheduleRequest::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeagueScheduleRequest::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeagueScheduleRequest::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTALeagueScheduleRequest::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeagueScheduleRequest.league_id)
  return league_id_;
}
inline void CMsgDOTALeagueScheduleRequest::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALeagueScheduleRequest.league_id)
}

// -------------------------------------------------------------------

// CMsgDOTALeagueScheduleResponse

// optional .proto.dota.CMsgDOTALeague league = 1;
inline bool CMsgDOTALeagueScheduleResponse::has_league() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeagueScheduleResponse::set_has_league() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeagueScheduleResponse::clear_has_league() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeagueScheduleResponse::clear_league() {
  if (league_ != NULL) league_->::proto::dota::CMsgDOTALeague::Clear();
  clear_has_league();
}
inline const ::proto::dota::CMsgDOTALeague& CMsgDOTALeagueScheduleResponse::league() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeagueScheduleResponse.league)
  return league_ != NULL ? *league_
                         : *::proto::dota::CMsgDOTALeague::internal_default_instance();
}
inline ::proto::dota::CMsgDOTALeague* CMsgDOTALeagueScheduleResponse::mutable_league() {
  set_has_league();
  if (league_ == NULL) {
    league_ = new ::proto::dota::CMsgDOTALeague;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALeagueScheduleResponse.league)
  return league_;
}
inline ::proto::dota::CMsgDOTALeague* CMsgDOTALeagueScheduleResponse::release_league() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTALeagueScheduleResponse.league)
  clear_has_league();
  ::proto::dota::CMsgDOTALeague* temp = league_;
  league_ = NULL;
  return temp;
}
inline void CMsgDOTALeagueScheduleResponse::set_allocated_league(::proto::dota::CMsgDOTALeague* league) {
  delete league_;
  league_ = league;
  if (league) {
    set_has_league();
  } else {
    clear_has_league();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTALeagueScheduleResponse.league)
}

// optional uint32 eresult = 2 [default = 2];
inline bool CMsgDOTALeagueScheduleResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeagueScheduleResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeagueScheduleResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeagueScheduleResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTALeagueScheduleResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeagueScheduleResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALeagueScheduleResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALeagueScheduleResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTALeagueScheduleEdit

// optional uint32 league_id = 1;
inline bool CMsgDOTALeagueScheduleEdit::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeagueScheduleEdit::set_has_league_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTALeagueScheduleEdit::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeagueScheduleEdit.league_id)
  return league_id_;
}
inline void CMsgDOTALeagueScheduleEdit::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALeagueScheduleEdit.league_id)
}

// optional .proto.dota.CMsgLeagueScheduleBlock schedule = 2;
inline bool CMsgDOTALeagueScheduleEdit::has_schedule() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeagueScheduleEdit::set_has_schedule() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_has_schedule() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_schedule() {
  if (schedule_ != NULL) schedule_->::proto::dota::CMsgLeagueScheduleBlock::Clear();
  clear_has_schedule();
}
inline const ::proto::dota::CMsgLeagueScheduleBlock& CMsgDOTALeagueScheduleEdit::schedule() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeagueScheduleEdit.schedule)
  return schedule_ != NULL ? *schedule_
                         : *::proto::dota::CMsgLeagueScheduleBlock::internal_default_instance();
}
inline ::proto::dota::CMsgLeagueScheduleBlock* CMsgDOTALeagueScheduleEdit::mutable_schedule() {
  set_has_schedule();
  if (schedule_ == NULL) {
    schedule_ = new ::proto::dota::CMsgLeagueScheduleBlock;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALeagueScheduleEdit.schedule)
  return schedule_;
}
inline ::proto::dota::CMsgLeagueScheduleBlock* CMsgDOTALeagueScheduleEdit::release_schedule() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTALeagueScheduleEdit.schedule)
  clear_has_schedule();
  ::proto::dota::CMsgLeagueScheduleBlock* temp = schedule_;
  schedule_ = NULL;
  return temp;
}
inline void CMsgDOTALeagueScheduleEdit::set_allocated_schedule(::proto::dota::CMsgLeagueScheduleBlock* schedule) {
  delete schedule_;
  schedule_ = schedule;
  if (schedule) {
    set_has_schedule();
  } else {
    clear_has_schedule();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTALeagueScheduleEdit.schedule)
}

// optional bool delete_block = 3;
inline bool CMsgDOTALeagueScheduleEdit::has_delete_block() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALeagueScheduleEdit::set_has_delete_block() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_has_delete_block() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALeagueScheduleEdit::clear_delete_block() {
  delete_block_ = false;
  clear_has_delete_block();
}
inline bool CMsgDOTALeagueScheduleEdit::delete_block() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeagueScheduleEdit.delete_block)
  return delete_block_;
}
inline void CMsgDOTALeagueScheduleEdit::set_delete_block(bool value) {
  set_has_delete_block();
  delete_block_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALeagueScheduleEdit.delete_block)
}

// -------------------------------------------------------------------

// CMsgDOTALeagueScheduleEditResponse

// optional .proto.dota.CMsgDOTALeague league = 1;
inline bool CMsgDOTALeagueScheduleEditResponse::has_league() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeagueScheduleEditResponse::set_has_league() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeagueScheduleEditResponse::clear_has_league() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeagueScheduleEditResponse::clear_league() {
  if (league_ != NULL) league_->::proto::dota::CMsgDOTALeague::Clear();
  clear_has_league();
}
inline const ::proto::dota::CMsgDOTALeague& CMsgDOTALeagueScheduleEditResponse::league() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeagueScheduleEditResponse.league)
  return league_ != NULL ? *league_
                         : *::proto::dota::CMsgDOTALeague::internal_default_instance();
}
inline ::proto::dota::CMsgDOTALeague* CMsgDOTALeagueScheduleEditResponse::mutable_league() {
  set_has_league();
  if (league_ == NULL) {
    league_ = new ::proto::dota::CMsgDOTALeague;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALeagueScheduleEditResponse.league)
  return league_;
}
inline ::proto::dota::CMsgDOTALeague* CMsgDOTALeagueScheduleEditResponse::release_league() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTALeagueScheduleEditResponse.league)
  clear_has_league();
  ::proto::dota::CMsgDOTALeague* temp = league_;
  league_ = NULL;
  return temp;
}
inline void CMsgDOTALeagueScheduleEditResponse::set_allocated_league(::proto::dota::CMsgDOTALeague* league) {
  delete league_;
  league_ = league;
  if (league) {
    set_has_league();
  } else {
    clear_has_league();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTALeagueScheduleEditResponse.league)
}

// optional uint32 eresult = 2 [default = 2];
inline bool CMsgDOTALeagueScheduleEditResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeagueScheduleEditResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeagueScheduleEditResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeagueScheduleEditResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTALeagueScheduleEditResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeagueScheduleEditResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALeagueScheduleEditResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALeagueScheduleEditResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTALeaguesInMonthRequest

// optional uint32 month = 1;
inline bool CMsgDOTALeaguesInMonthRequest::has_month() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeaguesInMonthRequest::set_has_month() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_has_month() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_month() {
  month_ = 0u;
  clear_has_month();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthRequest::month() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeaguesInMonthRequest.month)
  return month_;
}
inline void CMsgDOTALeaguesInMonthRequest::set_month(::google::protobuf::uint32 value) {
  set_has_month();
  month_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALeaguesInMonthRequest.month)
}

// optional uint32 year = 2;
inline bool CMsgDOTALeaguesInMonthRequest::has_year() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeaguesInMonthRequest::set_has_year() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_has_year() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_year() {
  year_ = 0u;
  clear_has_year();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthRequest::year() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeaguesInMonthRequest.year)
  return year_;
}
inline void CMsgDOTALeaguesInMonthRequest::set_year(::google::protobuf::uint32 value) {
  set_has_year();
  year_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALeaguesInMonthRequest.year)
}

// optional uint32 tier = 3;
inline bool CMsgDOTALeaguesInMonthRequest::has_tier() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALeaguesInMonthRequest::set_has_tier() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_has_tier() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALeaguesInMonthRequest::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthRequest::tier() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeaguesInMonthRequest.tier)
  return tier_;
}
inline void CMsgDOTALeaguesInMonthRequest::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALeaguesInMonthRequest.tier)
}

// -------------------------------------------------------------------

// CMsgDOTALeaguesInMonthResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDOTALeaguesInMonthResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALeaguesInMonthResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeaguesInMonthResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALeaguesInMonthResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALeaguesInMonthResponse.eresult)
}

// optional uint32 month = 2;
inline bool CMsgDOTALeaguesInMonthResponse::has_month() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALeaguesInMonthResponse::set_has_month() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_has_month() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_month() {
  month_ = 0u;
  clear_has_month();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthResponse::month() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeaguesInMonthResponse.month)
  return month_;
}
inline void CMsgDOTALeaguesInMonthResponse::set_month(::google::protobuf::uint32 value) {
  set_has_month();
  month_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALeaguesInMonthResponse.month)
}

// optional uint32 year = 3;
inline bool CMsgDOTALeaguesInMonthResponse::has_year() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALeaguesInMonthResponse::set_has_year() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_has_year() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALeaguesInMonthResponse::clear_year() {
  year_ = 0u;
  clear_has_year();
}
inline ::google::protobuf::uint32 CMsgDOTALeaguesInMonthResponse::year() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeaguesInMonthResponse.year)
  return year_;
}
inline void CMsgDOTALeaguesInMonthResponse::set_year(::google::protobuf::uint32 value) {
  set_has_year();
  year_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALeaguesInMonthResponse.year)
}

// repeated .proto.dota.CMsgDOTALeague leagues = 4;
inline int CMsgDOTALeaguesInMonthResponse::leagues_size() const {
  return leagues_.size();
}
inline void CMsgDOTALeaguesInMonthResponse::clear_leagues() {
  leagues_.Clear();
}
inline const ::proto::dota::CMsgDOTALeague& CMsgDOTALeaguesInMonthResponse::leagues(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALeaguesInMonthResponse.leagues)
  return leagues_.Get(index);
}
inline ::proto::dota::CMsgDOTALeague* CMsgDOTALeaguesInMonthResponse::mutable_leagues(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALeaguesInMonthResponse.leagues)
  return leagues_.Mutable(index);
}
inline ::proto::dota::CMsgDOTALeague* CMsgDOTALeaguesInMonthResponse::add_leagues() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTALeaguesInMonthResponse.leagues)
  return leagues_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALeague >*
CMsgDOTALeaguesInMonthResponse::mutable_leagues() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTALeaguesInMonthResponse.leagues)
  return &leagues_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTALeague >&
CMsgDOTALeaguesInMonthResponse::leagues() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTALeaguesInMonthResponse.leagues)
  return leagues_;
}

// -------------------------------------------------------------------

// CMsgMatchmakingMatchGroupInfo

// optional uint32 players_searching = 1;
inline bool CMsgMatchmakingMatchGroupInfo::has_players_searching() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMatchmakingMatchGroupInfo::set_has_players_searching() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_has_players_searching() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_players_searching() {
  players_searching_ = 0u;
  clear_has_players_searching();
}
inline ::google::protobuf::uint32 CMsgMatchmakingMatchGroupInfo::players_searching() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchmakingMatchGroupInfo.players_searching)
  return players_searching_;
}
inline void CMsgMatchmakingMatchGroupInfo::set_players_searching(::google::protobuf::uint32 value) {
  set_has_players_searching();
  players_searching_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchmakingMatchGroupInfo.players_searching)
}

// optional sint32 auto_region_select_ping_penalty = 2;
inline bool CMsgMatchmakingMatchGroupInfo::has_auto_region_select_ping_penalty() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMatchmakingMatchGroupInfo::set_has_auto_region_select_ping_penalty() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_has_auto_region_select_ping_penalty() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_auto_region_select_ping_penalty() {
  auto_region_select_ping_penalty_ = 0;
  clear_has_auto_region_select_ping_penalty();
}
inline ::google::protobuf::int32 CMsgMatchmakingMatchGroupInfo::auto_region_select_ping_penalty() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchmakingMatchGroupInfo.auto_region_select_ping_penalty)
  return auto_region_select_ping_penalty_;
}
inline void CMsgMatchmakingMatchGroupInfo::set_auto_region_select_ping_penalty(::google::protobuf::int32 value) {
  set_has_auto_region_select_ping_penalty();
  auto_region_select_ping_penalty_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchmakingMatchGroupInfo.auto_region_select_ping_penalty)
}

// optional .proto.dota.EMatchGroupServerStatus status = 3 [default = k_EMatchGroupServerStatus_OK];
inline bool CMsgMatchmakingMatchGroupInfo::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMatchmakingMatchGroupInfo::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMatchmakingMatchGroupInfo::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::proto::dota::EMatchGroupServerStatus CMsgMatchmakingMatchGroupInfo::status() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMatchmakingMatchGroupInfo.status)
  return static_cast< ::proto::dota::EMatchGroupServerStatus >(status_);
}
inline void CMsgMatchmakingMatchGroupInfo::set_status(::proto::dota::EMatchGroupServerStatus value) {
  assert(::proto::dota::EMatchGroupServerStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMatchmakingMatchGroupInfo.status)
}

// -------------------------------------------------------------------

// CMsgDOTAMatchmakingStatsRequest

// -------------------------------------------------------------------

// CMsgDOTAMatchmakingStatsResponse

// optional uint32 matchgroups_version = 1;
inline bool CMsgDOTAMatchmakingStatsResponse::has_matchgroups_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_has_matchgroups_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_has_matchgroups_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_matchgroups_version() {
  matchgroups_version_ = 0u;
  clear_has_matchgroups_version();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchmakingStatsResponse::matchgroups_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchmakingStatsResponse.matchgroups_version)
  return matchgroups_version_;
}
inline void CMsgDOTAMatchmakingStatsResponse::set_matchgroups_version(::google::protobuf::uint32 value) {
  set_has_matchgroups_version();
  matchgroups_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchmakingStatsResponse.matchgroups_version)
}

// repeated uint32 legacy_searching_players_by_group_source2 = 7;
inline int CMsgDOTAMatchmakingStatsResponse::legacy_searching_players_by_group_source2_size() const {
  return legacy_searching_players_by_group_source2_.size();
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_legacy_searching_players_by_group_source2() {
  legacy_searching_players_by_group_source2_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAMatchmakingStatsResponse::legacy_searching_players_by_group_source2(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
  return legacy_searching_players_by_group_source2_.Get(index);
}
inline void CMsgDOTAMatchmakingStatsResponse::set_legacy_searching_players_by_group_source2(int index, ::google::protobuf::uint32 value) {
  legacy_searching_players_by_group_source2_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
}
inline void CMsgDOTAMatchmakingStatsResponse::add_legacy_searching_players_by_group_source2(::google::protobuf::uint32 value) {
  legacy_searching_players_by_group_source2_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAMatchmakingStatsResponse::legacy_searching_players_by_group_source2() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
  return legacy_searching_players_by_group_source2_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAMatchmakingStatsResponse::mutable_legacy_searching_players_by_group_source2() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAMatchmakingStatsResponse.legacy_searching_players_by_group_source2)
  return &legacy_searching_players_by_group_source2_;
}

// repeated .proto.dota.CMsgMatchmakingMatchGroupInfo match_groups = 8;
inline int CMsgDOTAMatchmakingStatsResponse::match_groups_size() const {
  return match_groups_.size();
}
inline void CMsgDOTAMatchmakingStatsResponse::clear_match_groups() {
  match_groups_.Clear();
}
inline const ::proto::dota::CMsgMatchmakingMatchGroupInfo& CMsgDOTAMatchmakingStatsResponse::match_groups(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAMatchmakingStatsResponse.match_groups)
  return match_groups_.Get(index);
}
inline ::proto::dota::CMsgMatchmakingMatchGroupInfo* CMsgDOTAMatchmakingStatsResponse::mutable_match_groups(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAMatchmakingStatsResponse.match_groups)
  return match_groups_.Mutable(index);
}
inline ::proto::dota::CMsgMatchmakingMatchGroupInfo* CMsgDOTAMatchmakingStatsResponse::add_match_groups() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAMatchmakingStatsResponse.match_groups)
  return match_groups_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMatchmakingMatchGroupInfo >*
CMsgDOTAMatchmakingStatsResponse::mutable_match_groups() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAMatchmakingStatsResponse.match_groups)
  return &match_groups_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMatchmakingMatchGroupInfo >&
CMsgDOTAMatchmakingStatsResponse::match_groups() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAMatchmakingStatsResponse.match_groups)
  return match_groups_;
}

// -------------------------------------------------------------------

// CMsgDOTAUpdateMatchmakingStats

// optional .proto.dota.CMsgDOTAMatchmakingStatsResponse stats = 1;
inline bool CMsgDOTAUpdateMatchmakingStats::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAUpdateMatchmakingStats::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAUpdateMatchmakingStats::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAUpdateMatchmakingStats::clear_stats() {
  if (stats_ != NULL) stats_->::proto::dota::CMsgDOTAMatchmakingStatsResponse::Clear();
  clear_has_stats();
}
inline const ::proto::dota::CMsgDOTAMatchmakingStatsResponse& CMsgDOTAUpdateMatchmakingStats::stats() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAUpdateMatchmakingStats.stats)
  return stats_ != NULL ? *stats_
                         : *::proto::dota::CMsgDOTAMatchmakingStatsResponse::internal_default_instance();
}
inline ::proto::dota::CMsgDOTAMatchmakingStatsResponse* CMsgDOTAUpdateMatchmakingStats::mutable_stats() {
  set_has_stats();
  if (stats_ == NULL) {
    stats_ = new ::proto::dota::CMsgDOTAMatchmakingStatsResponse;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAUpdateMatchmakingStats.stats)
  return stats_;
}
inline ::proto::dota::CMsgDOTAMatchmakingStatsResponse* CMsgDOTAUpdateMatchmakingStats::release_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAUpdateMatchmakingStats.stats)
  clear_has_stats();
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* temp = stats_;
  stats_ = NULL;
  return temp;
}
inline void CMsgDOTAUpdateMatchmakingStats::set_allocated_stats(::proto::dota::CMsgDOTAMatchmakingStatsResponse* stats) {
  delete stats_;
  stats_ = stats;
  if (stats) {
    set_has_stats();
  } else {
    clear_has_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAUpdateMatchmakingStats.stats)
}

// -------------------------------------------------------------------

// CMsgDOTAUpdateMatchManagementStats

// optional .proto.dota.CMsgDOTAMatchmakingStatsResponse stats = 1;
inline bool CMsgDOTAUpdateMatchManagementStats::has_stats() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAUpdateMatchManagementStats::set_has_stats() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAUpdateMatchManagementStats::clear_has_stats() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAUpdateMatchManagementStats::clear_stats() {
  if (stats_ != NULL) stats_->::proto::dota::CMsgDOTAMatchmakingStatsResponse::Clear();
  clear_has_stats();
}
inline const ::proto::dota::CMsgDOTAMatchmakingStatsResponse& CMsgDOTAUpdateMatchManagementStats::stats() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAUpdateMatchManagementStats.stats)
  return stats_ != NULL ? *stats_
                         : *::proto::dota::CMsgDOTAMatchmakingStatsResponse::internal_default_instance();
}
inline ::proto::dota::CMsgDOTAMatchmakingStatsResponse* CMsgDOTAUpdateMatchManagementStats::mutable_stats() {
  set_has_stats();
  if (stats_ == NULL) {
    stats_ = new ::proto::dota::CMsgDOTAMatchmakingStatsResponse;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAUpdateMatchManagementStats.stats)
  return stats_;
}
inline ::proto::dota::CMsgDOTAMatchmakingStatsResponse* CMsgDOTAUpdateMatchManagementStats::release_stats() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAUpdateMatchManagementStats.stats)
  clear_has_stats();
  ::proto::dota::CMsgDOTAMatchmakingStatsResponse* temp = stats_;
  stats_ = NULL;
  return temp;
}
inline void CMsgDOTAUpdateMatchManagementStats::set_allocated_stats(::proto::dota::CMsgDOTAMatchmakingStatsResponse* stats) {
  delete stats_;
  stats_ = stats;
  if (stats) {
    set_has_stats();
  } else {
    clear_has_stats();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAUpdateMatchManagementStats.stats)
}

// -------------------------------------------------------------------

// CMsgDOTASetMatchHistoryAccess

// optional bool allow_3rd_party_match_history = 1;
inline bool CMsgDOTASetMatchHistoryAccess::has_allow_3rd_party_match_history() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetMatchHistoryAccess::set_has_allow_3rd_party_match_history() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetMatchHistoryAccess::clear_has_allow_3rd_party_match_history() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetMatchHistoryAccess::clear_allow_3rd_party_match_history() {
  allow_3rd_party_match_history_ = false;
  clear_has_allow_3rd_party_match_history();
}
inline bool CMsgDOTASetMatchHistoryAccess::allow_3rd_party_match_history() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASetMatchHistoryAccess.allow_3rd_party_match_history)
  return allow_3rd_party_match_history_;
}
inline void CMsgDOTASetMatchHistoryAccess::set_allow_3rd_party_match_history(bool value) {
  set_has_allow_3rd_party_match_history();
  allow_3rd_party_match_history_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASetMatchHistoryAccess.allow_3rd_party_match_history)
}

// -------------------------------------------------------------------

// CMsgDOTASetMatchHistoryAccessResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDOTASetMatchHistoryAccessResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTASetMatchHistoryAccessResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASetMatchHistoryAccessResponse.eresult)
  return eresult_;
}
inline void CMsgDOTASetMatchHistoryAccessResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASetMatchHistoryAccessResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgDOTANotifyAccountFlagsChange

// optional uint32 accountid = 1;
inline bool CMsgDOTANotifyAccountFlagsChange::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 CMsgDOTANotifyAccountFlagsChange::accountid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTANotifyAccountFlagsChange.accountid)
  return accountid_;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTANotifyAccountFlagsChange.accountid)
}

// optional uint32 account_flags = 2;
inline bool CMsgDOTANotifyAccountFlagsChange::has_account_flags() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_has_account_flags() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_has_account_flags() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTANotifyAccountFlagsChange::clear_account_flags() {
  account_flags_ = 0u;
  clear_has_account_flags();
}
inline ::google::protobuf::uint32 CMsgDOTANotifyAccountFlagsChange::account_flags() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTANotifyAccountFlagsChange.account_flags)
  return account_flags_;
}
inline void CMsgDOTANotifyAccountFlagsChange::set_account_flags(::google::protobuf::uint32 value) {
  set_has_account_flags();
  account_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTANotifyAccountFlagsChange.account_flags)
}

// -------------------------------------------------------------------

// CMsgDOTASetProfilePrivacy

// optional bool profile_private = 1;
inline bool CMsgDOTASetProfilePrivacy::has_profile_private() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetProfilePrivacy::set_has_profile_private() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetProfilePrivacy::clear_has_profile_private() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetProfilePrivacy::clear_profile_private() {
  profile_private_ = false;
  clear_has_profile_private();
}
inline bool CMsgDOTASetProfilePrivacy::profile_private() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASetProfilePrivacy.profile_private)
  return profile_private_;
}
inline void CMsgDOTASetProfilePrivacy::set_profile_private(bool value) {
  set_has_profile_private();
  profile_private_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASetProfilePrivacy.profile_private)
}

// -------------------------------------------------------------------

// CMsgDOTASetProfilePrivacyResponse

// optional uint32 eresult = 1;
inline bool CMsgDOTASetProfilePrivacyResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetProfilePrivacyResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetProfilePrivacyResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetProfilePrivacyResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTASetProfilePrivacyResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASetProfilePrivacyResponse.eresult)
  return eresult_;
}
inline void CMsgDOTASetProfilePrivacyResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASetProfilePrivacyResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgUpgradeLeagueItem

// optional uint64 match_id = 1;
inline bool CMsgUpgradeLeagueItem::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgUpgradeLeagueItem::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgUpgradeLeagueItem::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgUpgradeLeagueItem::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgUpgradeLeagueItem::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgUpgradeLeagueItem.match_id)
  return match_id_;
}
inline void CMsgUpgradeLeagueItem::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgUpgradeLeagueItem.match_id)
}

// optional uint32 league_id = 2;
inline bool CMsgUpgradeLeagueItem::has_league_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgUpgradeLeagueItem::set_has_league_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgUpgradeLeagueItem::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgUpgradeLeagueItem::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgUpgradeLeagueItem::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgUpgradeLeagueItem.league_id)
  return league_id_;
}
inline void CMsgUpgradeLeagueItem::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgUpgradeLeagueItem.league_id)
}

// -------------------------------------------------------------------

// CMsgUpgradeLeagueItemResponse

// -------------------------------------------------------------------

// CMsgGCWatchDownloadedReplay

// optional uint64 match_id = 1;
inline bool CMsgGCWatchDownloadedReplay::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCWatchDownloadedReplay::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCWatchDownloadedReplay::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCWatchDownloadedReplay::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCWatchDownloadedReplay::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCWatchDownloadedReplay.match_id)
  return match_id_;
}
inline void CMsgGCWatchDownloadedReplay::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCWatchDownloadedReplay.match_id)
}

// optional .proto.dota.DOTA_WatchReplayType watch_type = 2 [default = DOTA_WATCH_REPLAY_NORMAL];
inline bool CMsgGCWatchDownloadedReplay::has_watch_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCWatchDownloadedReplay::set_has_watch_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCWatchDownloadedReplay::clear_has_watch_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCWatchDownloadedReplay::clear_watch_type() {
  watch_type_ = 0;
  clear_has_watch_type();
}
inline ::proto::dota::DOTA_WatchReplayType CMsgGCWatchDownloadedReplay::watch_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCWatchDownloadedReplay.watch_type)
  return static_cast< ::proto::dota::DOTA_WatchReplayType >(watch_type_);
}
inline void CMsgGCWatchDownloadedReplay::set_watch_type(::proto::dota::DOTA_WatchReplayType value) {
  assert(::proto::dota::DOTA_WatchReplayType_IsValid(value));
  set_has_watch_type();
  watch_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCWatchDownloadedReplay.watch_type)
}

// -------------------------------------------------------------------

// CMsgSetMapLocationState

// optional int32 location_id = 1;
inline bool CMsgSetMapLocationState::has_location_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetMapLocationState::set_has_location_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetMapLocationState::clear_has_location_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetMapLocationState::clear_location_id() {
  location_id_ = 0;
  clear_has_location_id();
}
inline ::google::protobuf::int32 CMsgSetMapLocationState::location_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSetMapLocationState.location_id)
  return location_id_;
}
inline void CMsgSetMapLocationState::set_location_id(::google::protobuf::int32 value) {
  set_has_location_id();
  location_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSetMapLocationState.location_id)
}

// optional bool completed = 2;
inline bool CMsgSetMapLocationState::has_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetMapLocationState::set_has_completed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetMapLocationState::clear_has_completed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetMapLocationState::clear_completed() {
  completed_ = false;
  clear_has_completed();
}
inline bool CMsgSetMapLocationState::completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSetMapLocationState.completed)
  return completed_;
}
inline void CMsgSetMapLocationState::set_completed(bool value) {
  set_has_completed();
  completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSetMapLocationState.completed)
}

// -------------------------------------------------------------------

// CMsgSetMapLocationStateResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgSetMapLocationStateResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetMapLocationStateResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetMapLocationStateResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetMapLocationStateResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgSetMapLocationStateResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgSetMapLocationStateResponse.eresult)
  return eresult_;
}
inline void CMsgSetMapLocationStateResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgSetMapLocationStateResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgResetMapLocations

// -------------------------------------------------------------------

// CMsgResetMapLocationsResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgResetMapLocationsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgResetMapLocationsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgResetMapLocationsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgResetMapLocationsResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgResetMapLocationsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgResetMapLocationsResponse.eresult)
  return eresult_;
}
inline void CMsgResetMapLocationsResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgResetMapLocationsResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgRefreshPartnerAccountLink

// optional int32 partner_type = 1;
inline bool CMsgRefreshPartnerAccountLink::has_partner_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRefreshPartnerAccountLink::set_has_partner_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRefreshPartnerAccountLink::clear_has_partner_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRefreshPartnerAccountLink::clear_partner_type() {
  partner_type_ = 0;
  clear_has_partner_type();
}
inline ::google::protobuf::int32 CMsgRefreshPartnerAccountLink::partner_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRefreshPartnerAccountLink.partner_type)
  return partner_type_;
}
inline void CMsgRefreshPartnerAccountLink::set_partner_type(::google::protobuf::int32 value) {
  set_has_partner_type();
  partner_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRefreshPartnerAccountLink.partner_type)
}

// -------------------------------------------------------------------

// CMsgClientsRejoinChatChannels

// -------------------------------------------------------------------

// CMsgDOTASendFriendRecruits

// repeated uint32 recruits = 1;
inline int CMsgDOTASendFriendRecruits::recruits_size() const {
  return recruits_.size();
}
inline void CMsgDOTASendFriendRecruits::clear_recruits() {
  recruits_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTASendFriendRecruits::recruits(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASendFriendRecruits.recruits)
  return recruits_.Get(index);
}
inline void CMsgDOTASendFriendRecruits::set_recruits(int index, ::google::protobuf::uint32 value) {
  recruits_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASendFriendRecruits.recruits)
}
inline void CMsgDOTASendFriendRecruits::add_recruits(::google::protobuf::uint32 value) {
  recruits_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTASendFriendRecruits.recruits)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTASendFriendRecruits::recruits() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTASendFriendRecruits.recruits)
  return recruits_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTASendFriendRecruits::mutable_recruits() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTASendFriendRecruits.recruits)
  return &recruits_;
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitsRequest

// repeated uint32 account_ids = 1;
inline int CMsgDOTAFriendRecruitsRequest::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgDOTAFriendRecruitsRequest::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsRequest::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsRequest.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgDOTAFriendRecruitsRequest::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitsRequest.account_ids)
}
inline void CMsgDOTAFriendRecruitsRequest::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFriendRecruitsRequest.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAFriendRecruitsRequest::account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFriendRecruitsRequest.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAFriendRecruitsRequest::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFriendRecruitsRequest.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus

// optional uint32 account_id = 1;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.account_id)
  return account_id_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.account_id)
}

// optional uint32 status = 2;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_has_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_has_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_status() {
  status_ = 0u;
  clear_has_status();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::status() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.status)
  return status_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_status(::google::protobuf::uint32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.status)
}

// optional uint32 levels_earned = 3;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_levels_earned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_has_levels_earned() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_has_levels_earned() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_levels_earned() {
  levels_earned_ = 0u;
  clear_has_levels_earned();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::levels_earned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.levels_earned)
  return levels_earned_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_levels_earned(::google::protobuf::uint32 value) {
  set_has_levels_earned();
  levels_earned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.levels_earned)
}

// optional bool bonus = 4;
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::has_bonus() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_has_bonus() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_has_bonus() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::clear_bonus() {
  bonus_ = false;
  clear_has_bonus();
}
inline bool CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::bonus() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.bonus)
  return bonus_;
}
inline void CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus::set_bonus(bool value) {
  set_has_bonus();
  bonus_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus.bonus)
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitsResponse

// optional .proto.dota.CMsgDOTAFriendRecruitsResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgDOTAFriendRecruitsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFriendRecruitsResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFriendRecruitsResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFriendRecruitsResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult CMsgDOTAFriendRecruitsResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.result)
  return static_cast< ::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult >(result_);
}
inline void CMsgDOTAFriendRecruitsResponse::set_result(::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult value) {
  assert(::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitsResponse.result)
}

// repeated .proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruits = 2;
inline int CMsgDOTAFriendRecruitsResponse::recruits_size() const {
  return recruits_.size();
}
inline void CMsgDOTAFriendRecruitsResponse::clear_recruits() {
  recruits_.Clear();
}
inline const ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& CMsgDOTAFriendRecruitsResponse::recruits(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_.Get(index);
}
inline ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::mutable_recruits(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::add_recruits() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
CMsgDOTAFriendRecruitsResponse::mutable_recruits() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFriendRecruitsResponse.recruits)
  return &recruits_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
CMsgDOTAFriendRecruitsResponse::recruits() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFriendRecruitsResponse.recruits)
  return recruits_;
}

// repeated .proto.dota.CMsgDOTAFriendRecruitsResponse.FriendRecruitStatus recruiters = 3;
inline int CMsgDOTAFriendRecruitsResponse::recruiters_size() const {
  return recruiters_.size();
}
inline void CMsgDOTAFriendRecruitsResponse::clear_recruiters() {
  recruiters_.Clear();
}
inline const ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus& CMsgDOTAFriendRecruitsResponse::recruiters(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_.Get(index);
}
inline ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::mutable_recruiters(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus* CMsgDOTAFriendRecruitsResponse::add_recruiters() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >*
CMsgDOTAFriendRecruitsResponse::mutable_recruiters() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAFriendRecruitsResponse.recruiters)
  return &recruiters_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAFriendRecruitsResponse_FriendRecruitStatus >&
CMsgDOTAFriendRecruitsResponse::recruiters() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAFriendRecruitsResponse.recruiters)
  return recruiters_;
}

// -------------------------------------------------------------------

// CMsgDOTAFriendRecruitInviteAcceptDecline

// optional bool accepted = 1;
inline bool CMsgDOTAFriendRecruitInviteAcceptDecline::has_accepted() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_has_accepted() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_has_accepted() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_accepted() {
  accepted_ = false;
  clear_has_accepted();
}
inline bool CMsgDOTAFriendRecruitInviteAcceptDecline::accepted() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitInviteAcceptDecline.accepted)
  return accepted_;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_accepted(bool value) {
  set_has_accepted();
  accepted_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitInviteAcceptDecline.accepted)
}

// optional uint32 account_id = 2;
inline bool CMsgDOTAFriendRecruitInviteAcceptDecline::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAFriendRecruitInviteAcceptDecline::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAFriendRecruitInviteAcceptDecline.account_id)
  return account_id_;
}
inline void CMsgDOTAFriendRecruitInviteAcceptDecline::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAFriendRecruitInviteAcceptDecline.account_id)
}

// -------------------------------------------------------------------

// CMsgRequestLeaguePrizePool

// optional uint32 league_id = 1;
inline bool CMsgRequestLeaguePrizePool::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestLeaguePrizePool::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRequestLeaguePrizePool::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRequestLeaguePrizePool::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgRequestLeaguePrizePool::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestLeaguePrizePool.league_id)
  return league_id_;
}
inline void CMsgRequestLeaguePrizePool::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestLeaguePrizePool.league_id)
}

// -------------------------------------------------------------------

// CMsgRequestLeaguePrizePoolResponse

// optional uint32 league_id = 1;
inline bool CMsgRequestLeaguePrizePoolResponse::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgRequestLeaguePrizePoolResponse::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestLeaguePrizePoolResponse.league_id)
  return league_id_;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestLeaguePrizePoolResponse.league_id)
}

// optional uint32 prize_pool = 2;
inline bool CMsgRequestLeaguePrizePoolResponse::has_prize_pool() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_has_prize_pool() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_has_prize_pool() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRequestLeaguePrizePoolResponse::clear_prize_pool() {
  prize_pool_ = 0u;
  clear_has_prize_pool();
}
inline ::google::protobuf::uint32 CMsgRequestLeaguePrizePoolResponse::prize_pool() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestLeaguePrizePoolResponse.prize_pool)
  return prize_pool_;
}
inline void CMsgRequestLeaguePrizePoolResponse::set_prize_pool(::google::protobuf::uint32 value) {
  set_has_prize_pool();
  prize_pool_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestLeaguePrizePoolResponse.prize_pool)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStandings

// -------------------------------------------------------------------

// CMsgGCGetHeroStandingsResponse_Hero

// optional uint32 hero_id = 1;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.hero_id)
  return hero_id_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.hero_id)
}

// optional uint32 wins = 2;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_wins() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_wins() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_wins() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_wins() {
  wins_ = 0u;
  clear_has_wins();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::wins() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.wins)
  return wins_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_wins(::google::protobuf::uint32 value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.wins)
}

// optional uint32 losses = 3;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_losses() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_losses() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_losses() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_losses() {
  losses_ = 0u;
  clear_has_losses();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::losses() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.losses)
  return losses_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_losses(::google::protobuf::uint32 value) {
  set_has_losses();
  losses_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.losses)
}

// optional uint32 win_streak = 4;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_win_streak() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_win_streak() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_win_streak() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_win_streak() {
  win_streak_ = 0u;
  clear_has_win_streak();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::win_streak() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.win_streak)
  return win_streak_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_win_streak(::google::protobuf::uint32 value) {
  set_has_win_streak();
  win_streak_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.win_streak)
}

// optional uint32 best_win_streak = 5;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_win_streak() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_best_win_streak() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_best_win_streak() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_win_streak() {
  best_win_streak_ = 0u;
  clear_has_best_win_streak();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_win_streak() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_win_streak)
  return best_win_streak_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_win_streak(::google::protobuf::uint32 value) {
  set_has_best_win_streak();
  best_win_streak_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_win_streak)
}

// optional float avg_kills = 6;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_kills() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_avg_kills() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_avg_kills() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_kills() {
  avg_kills_ = 0;
  clear_has_avg_kills();
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_kills)
  return avg_kills_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_kills(float value) {
  set_has_avg_kills();
  avg_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_kills)
}

// optional float avg_deaths = 7;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_deaths() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_avg_deaths() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_avg_deaths() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_deaths() {
  avg_deaths_ = 0;
  clear_has_avg_deaths();
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_deaths() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_deaths)
  return avg_deaths_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_deaths(float value) {
  set_has_avg_deaths();
  avg_deaths_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_deaths)
}

// optional float avg_assists = 8;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_assists() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_avg_assists() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_avg_assists() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_assists() {
  avg_assists_ = 0;
  clear_has_avg_assists();
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_assists() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_assists)
  return avg_assists_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_assists(float value) {
  set_has_avg_assists();
  avg_assists_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_assists)
}

// optional float avg_gpm = 9;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_gpm() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_avg_gpm() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_avg_gpm() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_gpm() {
  avg_gpm_ = 0;
  clear_has_avg_gpm();
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_gpm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_gpm)
  return avg_gpm_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_gpm(float value) {
  set_has_avg_gpm();
  avg_gpm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_gpm)
}

// optional float avg_xpm = 10;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_avg_xpm() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_avg_xpm() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_avg_xpm() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_avg_xpm() {
  avg_xpm_ = 0;
  clear_has_avg_xpm();
}
inline float CMsgGCGetHeroStandingsResponse_Hero::avg_xpm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_xpm)
  return avg_xpm_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_avg_xpm(float value) {
  set_has_avg_xpm();
  avg_xpm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.avg_xpm)
}

// optional uint32 best_kills = 11;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_kills() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_best_kills() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_best_kills() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_kills() {
  best_kills_ = 0u;
  clear_has_best_kills();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_kills)
  return best_kills_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_kills(::google::protobuf::uint32 value) {
  set_has_best_kills();
  best_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_kills)
}

// optional uint32 best_assists = 12;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_assists() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_best_assists() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_best_assists() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_assists() {
  best_assists_ = 0u;
  clear_has_best_assists();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_assists() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_assists)
  return best_assists_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_assists(::google::protobuf::uint32 value) {
  set_has_best_assists();
  best_assists_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_assists)
}

// optional uint32 best_gpm = 13;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_gpm() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_best_gpm() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_best_gpm() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_gpm() {
  best_gpm_ = 0u;
  clear_has_best_gpm();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_gpm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_gpm)
  return best_gpm_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_gpm(::google::protobuf::uint32 value) {
  set_has_best_gpm();
  best_gpm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_gpm)
}

// optional uint32 best_xpm = 14;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_best_xpm() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_best_xpm() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_best_xpm() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_best_xpm() {
  best_xpm_ = 0u;
  clear_has_best_xpm();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStandingsResponse_Hero::best_xpm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_xpm)
  return best_xpm_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_best_xpm(::google::protobuf::uint32 value) {
  set_has_best_xpm();
  best_xpm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.best_xpm)
}

// optional float performance = 15;
inline bool CMsgGCGetHeroStandingsResponse_Hero::has_performance() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_has_performance() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_has_performance() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::clear_performance() {
  performance_ = 0;
  clear_has_performance();
}
inline float CMsgGCGetHeroStandingsResponse_Hero::performance() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.performance)
  return performance_;
}
inline void CMsgGCGetHeroStandingsResponse_Hero::set_performance(float value) {
  set_has_performance();
  performance_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStandingsResponse.Hero.performance)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStandingsResponse

// repeated .proto.dota.CMsgGCGetHeroStandingsResponse.Hero standings = 1;
inline int CMsgGCGetHeroStandingsResponse::standings_size() const {
  return standings_.size();
}
inline void CMsgGCGetHeroStandingsResponse::clear_standings() {
  standings_.Clear();
}
inline const ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero& CMsgGCGetHeroStandingsResponse::standings(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStandingsResponse.standings)
  return standings_.Get(index);
}
inline ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero* CMsgGCGetHeroStandingsResponse::mutable_standings(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetHeroStandingsResponse.standings)
  return standings_.Mutable(index);
}
inline ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero* CMsgGCGetHeroStandingsResponse::add_standings() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetHeroStandingsResponse.standings)
  return standings_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero >*
CMsgGCGetHeroStandingsResponse::mutable_standings() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetHeroStandingsResponse.standings)
  return &standings_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCGetHeroStandingsResponse_Hero >&
CMsgGCGetHeroStandingsResponse::standings() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetHeroStandingsResponse.standings)
  return standings_;
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReservationsRequest

// -------------------------------------------------------------------

// CMsgGCItemEditorReservation

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReservation::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReservation::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReservation::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReservation::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReservation::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReservation.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReservation::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReservation.def_index)
}

// optional string name = 2;
inline bool CMsgGCItemEditorReservation::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReservation::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReservation::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReservation::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgGCItemEditorReservation::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReservation.name)
  return name_.GetNoArena();
}
inline void CMsgGCItemEditorReservation::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReservation.name)
}
#if LANG_CXX11
inline void CMsgGCItemEditorReservation::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCItemEditorReservation.name)
}
#endif
inline void CMsgGCItemEditorReservation::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCItemEditorReservation.name)
}
inline void CMsgGCItemEditorReservation::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCItemEditorReservation.name)
}
inline ::std::string* CMsgGCItemEditorReservation::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorReservation.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCItemEditorReservation::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCItemEditorReservation.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCItemEditorReservation::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCItemEditorReservation.name)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReservationsResponse

// repeated .proto.dota.CMsgGCItemEditorReservation reservations = 1;
inline int CMsgGCItemEditorReservationsResponse::reservations_size() const {
  return reservations_.size();
}
inline void CMsgGCItemEditorReservationsResponse::clear_reservations() {
  reservations_.Clear();
}
inline const ::proto::dota::CMsgGCItemEditorReservation& CMsgGCItemEditorReservationsResponse::reservations(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_.Get(index);
}
inline ::proto::dota::CMsgGCItemEditorReservation* CMsgGCItemEditorReservationsResponse::mutable_reservations(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_.Mutable(index);
}
inline ::proto::dota::CMsgGCItemEditorReservation* CMsgGCItemEditorReservationsResponse::add_reservations() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCItemEditorReservation >*
CMsgGCItemEditorReservationsResponse::mutable_reservations() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCItemEditorReservationsResponse.reservations)
  return &reservations_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCItemEditorReservation >&
CMsgGCItemEditorReservationsResponse::reservations() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCItemEditorReservationsResponse.reservations)
  return reservations_;
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReserveItemDef

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReserveItemDef::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReserveItemDef::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReserveItemDef::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReserveItemDef::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReserveItemDef::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReserveItemDef.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReserveItemDef::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReserveItemDef.def_index)
}

// optional string username = 2;
inline bool CMsgGCItemEditorReserveItemDef::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReserveItemDef::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReserveItemDef::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReserveItemDef::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& CMsgGCItemEditorReserveItemDef::username() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReserveItemDef.username)
  return username_.GetNoArena();
}
inline void CMsgGCItemEditorReserveItemDef::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReserveItemDef.username)
}
#if LANG_CXX11
inline void CMsgGCItemEditorReserveItemDef::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCItemEditorReserveItemDef.username)
}
#endif
inline void CMsgGCItemEditorReserveItemDef::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCItemEditorReserveItemDef.username)
}
inline void CMsgGCItemEditorReserveItemDef::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCItemEditorReserveItemDef.username)
}
inline ::std::string* CMsgGCItemEditorReserveItemDef::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorReserveItemDef.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCItemEditorReserveItemDef::release_username() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCItemEditorReserveItemDef.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCItemEditorReserveItemDef::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCItemEditorReserveItemDef.username)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReserveItemDefResponse

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReserveItemDefResponse::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReserveItemDefResponse::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReserveItemDefResponse.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReserveItemDefResponse.def_index)
}

// optional string username = 2;
inline bool CMsgGCItemEditorReserveItemDefResponse::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& CMsgGCItemEditorReserveItemDefResponse::username() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
  return username_.GetNoArena();
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
}
#if LANG_CXX11
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
}
#endif
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
}
inline ::std::string* CMsgGCItemEditorReserveItemDefResponse::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCItemEditorReserveItemDefResponse::release_username() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCItemEditorReserveItemDefResponse.username)
}

// optional uint32 result = 3;
inline bool CMsgGCItemEditorReserveItemDefResponse::has_result() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_has_result() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCItemEditorReserveItemDefResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReserveItemDefResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReserveItemDefResponse.result)
  return result_;
}
inline void CMsgGCItemEditorReserveItemDefResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReserveItemDefResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReleaseReservation

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReleaseReservation::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReleaseReservation::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReleaseReservation::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReleaseReservation::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReleaseReservation::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReleaseReservation.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReleaseReservation::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReleaseReservation.def_index)
}

// optional string username = 2;
inline bool CMsgGCItemEditorReleaseReservation::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReleaseReservation::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReleaseReservation::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReleaseReservation::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& CMsgGCItemEditorReleaseReservation::username() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReleaseReservation.username)
  return username_.GetNoArena();
}
inline void CMsgGCItemEditorReleaseReservation::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReleaseReservation.username)
}
#if LANG_CXX11
inline void CMsgGCItemEditorReleaseReservation::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCItemEditorReleaseReservation.username)
}
#endif
inline void CMsgGCItemEditorReleaseReservation::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCItemEditorReleaseReservation.username)
}
inline void CMsgGCItemEditorReleaseReservation::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCItemEditorReleaseReservation.username)
}
inline ::std::string* CMsgGCItemEditorReleaseReservation::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorReleaseReservation.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCItemEditorReleaseReservation::release_username() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCItemEditorReleaseReservation.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCItemEditorReleaseReservation::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCItemEditorReleaseReservation.username)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorReleaseReservationResponse

// optional uint32 def_index = 1;
inline bool CMsgGCItemEditorReleaseReservationResponse::has_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_has_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorReleaseReservationResponse::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReleaseReservationResponse.def_index)
  return def_index_;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReleaseReservationResponse.def_index)
}

// optional bool released = 2;
inline bool CMsgGCItemEditorReleaseReservationResponse::has_released() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_has_released() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_has_released() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorReleaseReservationResponse::clear_released() {
  released_ = false;
  clear_has_released();
}
inline bool CMsgGCItemEditorReleaseReservationResponse::released() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorReleaseReservationResponse.released)
  return released_;
}
inline void CMsgGCItemEditorReleaseReservationResponse::set_released(bool value) {
  set_has_released();
  released_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorReleaseReservationResponse.released)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorRequestLeagueInfo

// optional uint32 league_id = 1;
inline bool CMsgGCItemEditorRequestLeagueInfo::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorRequestLeagueInfo::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorRequestLeagueInfo::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorRequestLeagueInfo::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorRequestLeagueInfo::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorRequestLeagueInfo.league_id)
  return league_id_;
}
inline void CMsgGCItemEditorRequestLeagueInfo::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorRequestLeagueInfo.league_id)
}

// -------------------------------------------------------------------

// CMsgGCItemEditorLeagueInfoResponse

// optional uint32 league_id = 1;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_league_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_league_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorLeagueInfoResponse::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_id)
  return league_id_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_id)
}

// optional string league_name = 2;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_league_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_league_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_league_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_league_name() {
  league_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_league_name();
}
inline const ::std::string& CMsgGCItemEditorLeagueInfoResponse::league_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_name)
  return league_name_.GetNoArena();
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_name(const ::std::string& value) {
  set_has_league_name();
  league_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_name)
}
#if LANG_CXX11
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_name(::std::string&& value) {
  set_has_league_name();
  league_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_name)
}
#endif
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_league_name();
  league_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_name)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_name(const char* value, size_t size) {
  set_has_league_name();
  league_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_name)
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::mutable_league_name() {
  set_has_league_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_name)
  return league_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::release_league_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_name)
  clear_has_league_name();
  return league_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_allocated_league_name(::std::string* league_name) {
  if (league_name != NULL) {
    set_has_league_name();
  } else {
    clear_has_league_name();
  }
  league_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), league_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_name)
}

// optional string league_desc = 3;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_league_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_league_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_league_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_league_desc() {
  league_desc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_league_desc();
}
inline const ::std::string& CMsgGCItemEditorLeagueInfoResponse::league_desc() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_desc)
  return league_desc_.GetNoArena();
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_desc(const ::std::string& value) {
  set_has_league_desc();
  league_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_desc)
}
#if LANG_CXX11
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_desc(::std::string&& value) {
  set_has_league_desc();
  league_desc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_desc)
}
#endif
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_desc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_league_desc();
  league_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_desc)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_desc(const char* value, size_t size) {
  set_has_league_desc();
  league_desc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_desc)
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::mutable_league_desc() {
  set_has_league_desc();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_desc)
  return league_desc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::release_league_desc() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_desc)
  clear_has_league_desc();
  return league_desc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_allocated_league_desc(::std::string* league_desc) {
  if (league_desc != NULL) {
    set_has_league_desc();
  } else {
    clear_has_league_desc();
  }
  league_desc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), league_desc);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_desc)
}

// optional string league_url = 4;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_league_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_league_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_league_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_league_url() {
  league_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_league_url();
}
inline const ::std::string& CMsgGCItemEditorLeagueInfoResponse::league_url() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_url)
  return league_url_.GetNoArena();
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_url(const ::std::string& value) {
  set_has_league_url();
  league_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_url)
}
#if LANG_CXX11
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_url(::std::string&& value) {
  set_has_league_url();
  league_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_url)
}
#endif
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_league_url();
  league_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_url)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_league_url(const char* value, size_t size) {
  set_has_league_url();
  league_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_url)
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::mutable_league_url() {
  set_has_league_url();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_url)
  return league_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::release_league_url() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_url)
  clear_has_league_url();
  return league_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_allocated_league_url(::std::string* league_url) {
  if (league_url != NULL) {
    set_has_league_url();
  } else {
    clear_has_league_url();
  }
  league_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), league_url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCItemEditorLeagueInfoResponse.league_url)
}

// optional string revenue_url = 5;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_revenue_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_revenue_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_revenue_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_revenue_url() {
  revenue_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_revenue_url();
}
inline const ::std::string& CMsgGCItemEditorLeagueInfoResponse::revenue_url() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorLeagueInfoResponse.revenue_url)
  return revenue_url_.GetNoArena();
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_revenue_url(const ::std::string& value) {
  set_has_revenue_url();
  revenue_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}
#if LANG_CXX11
inline void CMsgGCItemEditorLeagueInfoResponse::set_revenue_url(::std::string&& value) {
  set_has_revenue_url();
  revenue_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}
#endif
inline void CMsgGCItemEditorLeagueInfoResponse::set_revenue_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_revenue_url();
  revenue_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_revenue_url(const char* value, size_t size) {
  set_has_revenue_url();
  revenue_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::mutable_revenue_url() {
  set_has_revenue_url();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCItemEditorLeagueInfoResponse.revenue_url)
  return revenue_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCItemEditorLeagueInfoResponse::release_revenue_url() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCItemEditorLeagueInfoResponse.revenue_url)
  clear_has_revenue_url();
  return revenue_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_allocated_revenue_url(::std::string* revenue_url) {
  if (revenue_url != NULL) {
    set_has_revenue_url();
  } else {
    clear_has_revenue_url();
  }
  revenue_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), revenue_url);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCItemEditorLeagueInfoResponse.revenue_url)
}

// optional uint32 tier = 6;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_tier() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_tier() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_tier() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_tier() {
  tier_ = 0u;
  clear_has_tier();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorLeagueInfoResponse::tier() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorLeagueInfoResponse.tier)
  return tier_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_tier(::google::protobuf::uint32 value) {
  set_has_tier();
  tier_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorLeagueInfoResponse.tier)
}

// optional uint32 location = 7;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_location() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_location() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_location() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_location() {
  location_ = 0u;
  clear_has_location();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorLeagueInfoResponse::location() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorLeagueInfoResponse.location)
  return location_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_location(::google::protobuf::uint32 value) {
  set_has_location();
  location_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorLeagueInfoResponse.location)
}

// optional uint32 result = 8;
inline bool CMsgGCItemEditorLeagueInfoResponse::has_result() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_has_result() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCItemEditorLeagueInfoResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgGCItemEditorLeagueInfoResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCItemEditorLeagueInfoResponse.result)
  return result_;
}
inline void CMsgGCItemEditorLeagueInfoResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCItemEditorLeagueInfoResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTARewardTutorialPrizes

// optional uint32 location_id = 1;
inline bool CMsgDOTARewardTutorialPrizes::has_location_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARewardTutorialPrizes::set_has_location_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARewardTutorialPrizes::clear_has_location_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARewardTutorialPrizes::clear_location_id() {
  location_id_ = 0u;
  clear_has_location_id();
}
inline ::google::protobuf::uint32 CMsgDOTARewardTutorialPrizes::location_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARewardTutorialPrizes.location_id)
  return location_id_;
}
inline void CMsgDOTARewardTutorialPrizes::set_location_id(::google::protobuf::uint32 value) {
  set_has_location_id();
  location_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARewardTutorialPrizes.location_id)
}

// optional bool tracking_only = 2;
inline bool CMsgDOTARewardTutorialPrizes::has_tracking_only() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARewardTutorialPrizes::set_has_tracking_only() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARewardTutorialPrizes::clear_has_tracking_only() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARewardTutorialPrizes::clear_tracking_only() {
  tracking_only_ = false;
  clear_has_tracking_only();
}
inline bool CMsgDOTARewardTutorialPrizes::tracking_only() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARewardTutorialPrizes.tracking_only)
  return tracking_only_;
}
inline void CMsgDOTARewardTutorialPrizes::set_tracking_only(bool value) {
  set_has_tracking_only();
  tracking_only_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARewardTutorialPrizes.tracking_only)
}

// -------------------------------------------------------------------

// CMsgDOTALastHitChallengeHighScorePost

// optional uint32 hero_id = 1;
inline bool CMsgDOTALastHitChallengeHighScorePost::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScorePost::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALastHitChallengeHighScorePost.hero_id)
  return hero_id_;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALastHitChallengeHighScorePost.hero_id)
}

// optional uint32 high_score = 2;
inline bool CMsgDOTALastHitChallengeHighScorePost::has_high_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_has_high_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_has_high_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALastHitChallengeHighScorePost::clear_high_score() {
  high_score_ = 0u;
  clear_has_high_score();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScorePost::high_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALastHitChallengeHighScorePost.high_score)
  return high_score_;
}
inline void CMsgDOTALastHitChallengeHighScorePost::set_high_score(::google::protobuf::uint32 value) {
  set_has_high_score();
  high_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALastHitChallengeHighScorePost.high_score)
}

// -------------------------------------------------------------------

// CMsgDOTALastHitChallengeHighScoreRequest

// optional uint32 hero_id = 1;
inline bool CMsgDOTALastHitChallengeHighScoreRequest::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScoreRequest::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALastHitChallengeHighScoreRequest.hero_id)
  return hero_id_;
}
inline void CMsgDOTALastHitChallengeHighScoreRequest::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALastHitChallengeHighScoreRequest.hero_id)
}

// -------------------------------------------------------------------

// CMsgDOTALastHitChallengeHighScoreResponse

// optional uint32 score = 1;
inline bool CMsgDOTALastHitChallengeHighScoreResponse::has_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_has_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_has_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScoreResponse::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALastHitChallengeHighScoreResponse.score)
  return score_;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALastHitChallengeHighScoreResponse.score)
}

// optional uint32 eresult = 2;
inline bool CMsgDOTALastHitChallengeHighScoreResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTALastHitChallengeHighScoreResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALastHitChallengeHighScoreResponse.eresult)
  return eresult_;
}
inline void CMsgDOTALastHitChallengeHighScoreResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALastHitChallengeHighScoreResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgFlipLobbyTeams

// -------------------------------------------------------------------

// CMsgPresentedClientTerminateDlg

// -------------------------------------------------------------------

// CMsgGCLobbyUpdateBroadcastChannelInfo

// optional uint32 channel_id = 1;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_channel_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_has_channel_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_has_channel_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_channel_id() {
  channel_id_ = 0u;
  clear_has_channel_id();
}
inline ::google::protobuf::uint32 CMsgGCLobbyUpdateBroadcastChannelInfo::channel_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.channel_id)
  return channel_id_;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_channel_id(::google::protobuf::uint32 value) {
  set_has_channel_id();
  channel_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.channel_id)
}

// optional string country_code = 2;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_country_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_has_country_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country_code();
}
inline const ::std::string& CMsgGCLobbyUpdateBroadcastChannelInfo::country_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
  return country_code_.GetNoArena();
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(const ::std::string& value) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
#if LANG_CXX11
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(::std::string&& value) {
  set_has_country_code();
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
#endif
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::mutable_country_code() {
  set_has_country_code();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
  clear_has_country_code();
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    set_has_country_code();
  } else {
    clear_has_country_code();
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.country_code)
}

// optional string description = 3;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
inline const ::std::string& CMsgGCLobbyUpdateBroadcastChannelInfo::description() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
  return description_.GetNoArena();
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
#if LANG_CXX11
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
#endif
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::release_description() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.description)
}

// optional string language_code = 4;
inline bool CMsgGCLobbyUpdateBroadcastChannelInfo::has_language_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_has_language_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_has_language_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::clear_language_code() {
  language_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language_code();
}
inline const ::std::string& CMsgGCLobbyUpdateBroadcastChannelInfo::language_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
  return language_code_.GetNoArena();
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(const ::std::string& value) {
  set_has_language_code();
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
#if LANG_CXX11
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(::std::string&& value) {
  set_has_language_code();
  language_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
#endif
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_language_code();
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_language_code(const char* value, size_t size) {
  set_has_language_code();
  language_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::mutable_language_code() {
  set_has_language_code();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
  return language_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCLobbyUpdateBroadcastChannelInfo::release_language_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
  clear_has_language_code();
  return language_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCLobbyUpdateBroadcastChannelInfo::set_allocated_language_code(::std::string* language_code) {
  if (language_code != NULL) {
    set_has_language_code();
  } else {
    clear_has_language_code();
  }
  language_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCLobbyUpdateBroadcastChannelInfo.language_code)
}

// -------------------------------------------------------------------

// CMsgDOTAClaimEventAction

// optional uint32 event_id = 1;
inline bool CMsgDOTAClaimEventAction::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClaimEventAction::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAClaimEventAction::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAClaimEventAction::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventAction::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventAction.event_id)
  return event_id_;
}
inline void CMsgDOTAClaimEventAction::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventAction.event_id)
}

// optional uint32 action_id = 2;
inline bool CMsgDOTAClaimEventAction::has_action_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAClaimEventAction::set_has_action_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAClaimEventAction::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAClaimEventAction::clear_action_id() {
  action_id_ = 0u;
  clear_has_action_id();
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventAction::action_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventAction.action_id)
  return action_id_;
}
inline void CMsgDOTAClaimEventAction::set_action_id(::google::protobuf::uint32 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventAction.action_id)
}

// optional uint32 quantity = 3;
inline bool CMsgDOTAClaimEventAction::has_quantity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAClaimEventAction::set_has_quantity() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAClaimEventAction::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAClaimEventAction::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventAction::quantity() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventAction.quantity)
  return quantity_;
}
inline void CMsgDOTAClaimEventAction::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventAction.quantity)
}

// -------------------------------------------------------------------

// CMsgDOTAClaimEventActionResponse_MysteryItemRewardData

// optional uint32 item_def = 1;
inline bool CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::has_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::set_has_item_def() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.MysteryItemRewardData.item_def)
  return item_def_;
}
inline void CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.MysteryItemRewardData.item_def)
}

// optional uint32 item_category = 2;
inline bool CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::has_item_category() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::set_has_item_category() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::clear_has_item_category() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::clear_item_category() {
  item_category_ = 0u;
  clear_has_item_category();
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::item_category() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.MysteryItemRewardData.item_category)
  return item_category_;
}
inline void CMsgDOTAClaimEventActionResponse_MysteryItemRewardData::set_item_category(::google::protobuf::uint32 value) {
  set_has_item_category();
  item_category_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.MysteryItemRewardData.item_category)
}

// -------------------------------------------------------------------

// CMsgDOTAClaimEventActionResponse_LootListRewardData

// repeated uint32 item_def = 1;
inline int CMsgDOTAClaimEventActionResponse_LootListRewardData::item_def_size() const {
  return item_def_.size();
}
inline void CMsgDOTAClaimEventActionResponse_LootListRewardData::clear_item_def() {
  item_def_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionResponse_LootListRewardData::item_def(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData.item_def)
  return item_def_.Get(index);
}
inline void CMsgDOTAClaimEventActionResponse_LootListRewardData::set_item_def(int index, ::google::protobuf::uint32 value) {
  item_def_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData.item_def)
}
inline void CMsgDOTAClaimEventActionResponse_LootListRewardData::add_item_def(::google::protobuf::uint32 value) {
  item_def_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData.item_def)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTAClaimEventActionResponse_LootListRewardData::item_def() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData.item_def)
  return item_def_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTAClaimEventActionResponse_LootListRewardData::mutable_item_def() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAClaimEventActionResponse.LootListRewardData.item_def)
  return &item_def_;
}

// -------------------------------------------------------------------

// CMsgDOTAClaimEventActionResponse_GrantedRewardData

// optional uint32 grant_index = 1;
inline bool CMsgDOTAClaimEventActionResponse_GrantedRewardData::has_grant_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_has_grant_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::clear_has_grant_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::clear_grant_index() {
  grant_index_ = 0u;
  clear_has_grant_index();
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionResponse_GrantedRewardData::grant_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.grant_index)
  return grant_index_;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_grant_index(::google::protobuf::uint32 value) {
  set_has_grant_index();
  grant_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.grant_index)
}

// optional uint32 score_index = 2;
inline bool CMsgDOTAClaimEventActionResponse_GrantedRewardData::has_score_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_has_score_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::clear_has_score_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::clear_score_index() {
  score_index_ = 0u;
  clear_has_score_index();
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionResponse_GrantedRewardData::score_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.score_index)
  return score_index_;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_score_index(::google::protobuf::uint32 value) {
  set_has_score_index();
  score_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.score_index)
}

// optional uint32 reward_index = 3;
inline bool CMsgDOTAClaimEventActionResponse_GrantedRewardData::has_reward_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_has_reward_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::clear_has_reward_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::clear_reward_index() {
  reward_index_ = 0u;
  clear_has_reward_index();
}
inline ::google::protobuf::uint32 CMsgDOTAClaimEventActionResponse_GrantedRewardData::reward_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_index)
  return reward_index_;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_reward_index(::google::protobuf::uint32 value) {
  set_has_reward_index();
  reward_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_index)
}

// optional bytes reward_data = 4;
inline bool CMsgDOTAClaimEventActionResponse_GrantedRewardData::has_reward_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_has_reward_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::clear_has_reward_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::clear_reward_data() {
  reward_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_reward_data();
}
inline const ::std::string& CMsgDOTAClaimEventActionResponse_GrantedRewardData::reward_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
  return reward_data_.GetNoArena();
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_reward_data(const ::std::string& value) {
  set_has_reward_data();
  reward_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
}
#if LANG_CXX11
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_reward_data(::std::string&& value) {
  set_has_reward_data();
  reward_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
}
#endif
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_reward_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_reward_data();
  reward_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_reward_data(const void* value, size_t size) {
  set_has_reward_data();
  reward_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
}
inline ::std::string* CMsgDOTAClaimEventActionResponse_GrantedRewardData::mutable_reward_data() {
  set_has_reward_data();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
  return reward_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAClaimEventActionResponse_GrantedRewardData::release_reward_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
  clear_has_reward_data();
  return reward_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAClaimEventActionResponse_GrantedRewardData::set_allocated_reward_data(::std::string* reward_data) {
  if (reward_data != NULL) {
    set_has_reward_data();
  } else {
    clear_has_reward_data();
  }
  reward_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reward_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData.reward_data)
}

// -------------------------------------------------------------------

// CMsgDOTAClaimEventActionResponse

// optional .proto.dota.CMsgDOTAClaimEventActionResponse.ResultCode result = 1 [default = Success];
inline bool CMsgDOTAClaimEventActionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAClaimEventActionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAClaimEventActionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAClaimEventActionResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode CMsgDOTAClaimEventActionResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.result)
  return static_cast< ::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode >(result_);
}
inline void CMsgDOTAClaimEventActionResponse::set_result(::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode value) {
  assert(::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAClaimEventActionResponse.result)
}

// repeated .proto.dota.CMsgDOTAClaimEventActionResponse.GrantedRewardData reward_results = 2;
inline int CMsgDOTAClaimEventActionResponse::reward_results_size() const {
  return reward_results_.size();
}
inline void CMsgDOTAClaimEventActionResponse::clear_reward_results() {
  reward_results_.Clear();
}
inline const ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData& CMsgDOTAClaimEventActionResponse::reward_results(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAClaimEventActionResponse.reward_results)
  return reward_results_.Get(index);
}
inline ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData* CMsgDOTAClaimEventActionResponse::mutable_reward_results(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAClaimEventActionResponse.reward_results)
  return reward_results_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData* CMsgDOTAClaimEventActionResponse::add_reward_results() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAClaimEventActionResponse.reward_results)
  return reward_results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData >*
CMsgDOTAClaimEventActionResponse::mutable_reward_results() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAClaimEventActionResponse.reward_results)
  return &reward_results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAClaimEventActionResponse_GrantedRewardData >&
CMsgDOTAClaimEventActionResponse::reward_results() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAClaimEventActionResponse.reward_results)
  return reward_results_;
}

// -------------------------------------------------------------------

// CMsgDOTAGetEventPoints

// optional uint32 event_id = 1;
inline bool CMsgDOTAGetEventPoints::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetEventPoints::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetEventPoints::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetEventPoints::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPoints::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPoints.event_id)
  return event_id_;
}
inline void CMsgDOTAGetEventPoints::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPoints.event_id)
}

// optional uint32 account_id = 2;
inline bool CMsgDOTAGetEventPoints::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetEventPoints::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetEventPoints::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetEventPoints::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPoints::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPoints.account_id)
  return account_id_;
}
inline void CMsgDOTAGetEventPoints::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPoints.account_id)
}

// -------------------------------------------------------------------

// CMsgDOTAGetEventPointsResponse_Action

// optional uint32 action_id = 1;
inline bool CMsgDOTAGetEventPointsResponse_Action::has_action_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_has_action_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_action_id() {
  action_id_ = 0u;
  clear_has_action_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse_Action::action_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.Action.action_id)
  return action_id_;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_action_id(::google::protobuf::uint32 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.Action.action_id)
}

// optional uint32 times_completed = 2 [default = 1];
inline bool CMsgDOTAGetEventPointsResponse_Action::has_times_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_has_times_completed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_has_times_completed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetEventPointsResponse_Action::clear_times_completed() {
  times_completed_ = 1u;
  clear_has_times_completed();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse_Action::times_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.Action.times_completed)
  return times_completed_;
}
inline void CMsgDOTAGetEventPointsResponse_Action::set_times_completed(::google::protobuf::uint32 value) {
  set_has_times_completed();
  times_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.Action.times_completed)
}

// -------------------------------------------------------------------

// CMsgDOTAGetEventPointsResponse

// optional uint32 total_points = 1;
inline bool CMsgDOTAGetEventPointsResponse::has_total_points() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_total_points() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_total_points() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_total_points() {
  total_points_ = 0u;
  clear_has_total_points();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::total_points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.total_points)
  return total_points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_total_points(::google::protobuf::uint32 value) {
  set_has_total_points();
  total_points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.total_points)
}

// optional uint32 total_premium_points = 2;
inline bool CMsgDOTAGetEventPointsResponse::has_total_premium_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_total_premium_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_total_premium_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_total_premium_points() {
  total_premium_points_ = 0u;
  clear_has_total_premium_points();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::total_premium_points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.total_premium_points)
  return total_premium_points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_total_premium_points(::google::protobuf::uint32 value) {
  set_has_total_premium_points();
  total_premium_points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.total_premium_points)
}

// optional uint32 event_id = 3;
inline bool CMsgDOTAGetEventPointsResponse::has_event_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_event_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.event_id)
  return event_id_;
}
inline void CMsgDOTAGetEventPointsResponse::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.event_id)
}

// optional uint32 points = 4;
inline bool CMsgDOTAGetEventPointsResponse::has_points() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_points() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_points() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.points)
  return points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.points)
}

// optional uint32 premium_points = 5;
inline bool CMsgDOTAGetEventPointsResponse::has_premium_points() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_premium_points() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_premium_points() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_premium_points() {
  premium_points_ = 0u;
  clear_has_premium_points();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::premium_points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.premium_points)
  return premium_points_;
}
inline void CMsgDOTAGetEventPointsResponse::set_premium_points(::google::protobuf::uint32 value) {
  set_has_premium_points();
  premium_points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.premium_points)
}

// repeated .proto.dota.CMsgDOTAGetEventPointsResponse.Action completed_actions = 6;
inline int CMsgDOTAGetEventPointsResponse::completed_actions_size() const {
  return completed_actions_.size();
}
inline void CMsgDOTAGetEventPointsResponse::clear_completed_actions() {
  completed_actions_.Clear();
}
inline const ::proto::dota::CMsgDOTAGetEventPointsResponse_Action& CMsgDOTAGetEventPointsResponse::completed_actions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_.Get(index);
}
inline ::proto::dota::CMsgDOTAGetEventPointsResponse_Action* CMsgDOTAGetEventPointsResponse::mutable_completed_actions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAGetEventPointsResponse_Action* CMsgDOTAGetEventPointsResponse::add_completed_actions() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetEventPointsResponse_Action >*
CMsgDOTAGetEventPointsResponse::mutable_completed_actions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAGetEventPointsResponse.completed_actions)
  return &completed_actions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetEventPointsResponse_Action >&
CMsgDOTAGetEventPointsResponse::completed_actions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAGetEventPointsResponse.completed_actions)
  return completed_actions_;
}

// optional uint32 account_id = 7;
inline bool CMsgDOTAGetEventPointsResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.account_id)
  return account_id_;
}
inline void CMsgDOTAGetEventPointsResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.account_id)
}

// optional bool owned = 8;
inline bool CMsgDOTAGetEventPointsResponse::has_owned() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_owned() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_owned() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_owned() {
  owned_ = false;
  clear_has_owned();
}
inline bool CMsgDOTAGetEventPointsResponse::owned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.owned)
  return owned_;
}
inline void CMsgDOTAGetEventPointsResponse::set_owned(bool value) {
  set_has_owned();
  owned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.owned)
}

// optional uint32 audit_action = 9;
inline bool CMsgDOTAGetEventPointsResponse::has_audit_action() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAGetEventPointsResponse::set_has_audit_action() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_has_audit_action() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAGetEventPointsResponse::clear_audit_action() {
  audit_action_ = 0u;
  clear_has_audit_action();
}
inline ::google::protobuf::uint32 CMsgDOTAGetEventPointsResponse::audit_action() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetEventPointsResponse.audit_action)
  return audit_action_;
}
inline void CMsgDOTAGetEventPointsResponse::set_audit_action(::google::protobuf::uint32 value) {
  set_has_audit_action();
  audit_action_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetEventPointsResponse.audit_action)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPeriodicResource

// optional uint32 account_id = 1;
inline bool CMsgDOTAGetPeriodicResource::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPeriodicResource::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetPeriodicResource::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetPeriodicResource::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPeriodicResource::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPeriodicResource.account_id)
  return account_id_;
}
inline void CMsgDOTAGetPeriodicResource::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPeriodicResource.account_id)
}

// optional uint32 periodic_resource_id = 2;
inline bool CMsgDOTAGetPeriodicResource::has_periodic_resource_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPeriodicResource::set_has_periodic_resource_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetPeriodicResource::clear_has_periodic_resource_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetPeriodicResource::clear_periodic_resource_id() {
  periodic_resource_id_ = 0u;
  clear_has_periodic_resource_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPeriodicResource::periodic_resource_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPeriodicResource.periodic_resource_id)
  return periodic_resource_id_;
}
inline void CMsgDOTAGetPeriodicResource::set_periodic_resource_id(::google::protobuf::uint32 value) {
  set_has_periodic_resource_id();
  periodic_resource_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPeriodicResource.periodic_resource_id)
}

// optional uint32 timestamp = 3;
inline bool CMsgDOTAGetPeriodicResource::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetPeriodicResource::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGetPeriodicResource::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGetPeriodicResource::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPeriodicResource::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPeriodicResource.timestamp)
  return timestamp_;
}
inline void CMsgDOTAGetPeriodicResource::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPeriodicResource.timestamp)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPeriodicResourceResponse

// optional uint32 periodic_resource_max = 1;
inline bool CMsgDOTAGetPeriodicResourceResponse::has_periodic_resource_max() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPeriodicResourceResponse::set_has_periodic_resource_max() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetPeriodicResourceResponse::clear_has_periodic_resource_max() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetPeriodicResourceResponse::clear_periodic_resource_max() {
  periodic_resource_max_ = 0u;
  clear_has_periodic_resource_max();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPeriodicResourceResponse::periodic_resource_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPeriodicResourceResponse.periodic_resource_max)
  return periodic_resource_max_;
}
inline void CMsgDOTAGetPeriodicResourceResponse::set_periodic_resource_max(::google::protobuf::uint32 value) {
  set_has_periodic_resource_max();
  periodic_resource_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPeriodicResourceResponse.periodic_resource_max)
}

// optional uint32 periodic_resource_used = 2;
inline bool CMsgDOTAGetPeriodicResourceResponse::has_periodic_resource_used() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPeriodicResourceResponse::set_has_periodic_resource_used() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetPeriodicResourceResponse::clear_has_periodic_resource_used() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetPeriodicResourceResponse::clear_periodic_resource_used() {
  periodic_resource_used_ = 0u;
  clear_has_periodic_resource_used();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPeriodicResourceResponse::periodic_resource_used() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPeriodicResourceResponse.periodic_resource_used)
  return periodic_resource_used_;
}
inline void CMsgDOTAGetPeriodicResourceResponse::set_periodic_resource_used(::google::protobuf::uint32 value) {
  set_has_periodic_resource_used();
  periodic_resource_used_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPeriodicResourceResponse.periodic_resource_used)
}

// -------------------------------------------------------------------

// CMsgDOTAPeriodicResourceUpdated

// optional .proto.dota.CMsgDOTAGetPeriodicResource periodic_resource_key = 1;
inline bool CMsgDOTAPeriodicResourceUpdated::has_periodic_resource_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPeriodicResourceUpdated::set_has_periodic_resource_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPeriodicResourceUpdated::clear_has_periodic_resource_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPeriodicResourceUpdated::clear_periodic_resource_key() {
  if (periodic_resource_key_ != NULL) periodic_resource_key_->::proto::dota::CMsgDOTAGetPeriodicResource::Clear();
  clear_has_periodic_resource_key();
}
inline const ::proto::dota::CMsgDOTAGetPeriodicResource& CMsgDOTAPeriodicResourceUpdated::periodic_resource_key() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_key)
  return periodic_resource_key_ != NULL ? *periodic_resource_key_
                         : *::proto::dota::CMsgDOTAGetPeriodicResource::internal_default_instance();
}
inline ::proto::dota::CMsgDOTAGetPeriodicResource* CMsgDOTAPeriodicResourceUpdated::mutable_periodic_resource_key() {
  set_has_periodic_resource_key();
  if (periodic_resource_key_ == NULL) {
    periodic_resource_key_ = new ::proto::dota::CMsgDOTAGetPeriodicResource;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_key)
  return periodic_resource_key_;
}
inline ::proto::dota::CMsgDOTAGetPeriodicResource* CMsgDOTAPeriodicResourceUpdated::release_periodic_resource_key() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_key)
  clear_has_periodic_resource_key();
  ::proto::dota::CMsgDOTAGetPeriodicResource* temp = periodic_resource_key_;
  periodic_resource_key_ = NULL;
  return temp;
}
inline void CMsgDOTAPeriodicResourceUpdated::set_allocated_periodic_resource_key(::proto::dota::CMsgDOTAGetPeriodicResource* periodic_resource_key) {
  delete periodic_resource_key_;
  periodic_resource_key_ = periodic_resource_key;
  if (periodic_resource_key) {
    set_has_periodic_resource_key();
  } else {
    clear_has_periodic_resource_key();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_key)
}

// optional .proto.dota.CMsgDOTAGetPeriodicResourceResponse periodic_resource_value = 2;
inline bool CMsgDOTAPeriodicResourceUpdated::has_periodic_resource_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPeriodicResourceUpdated::set_has_periodic_resource_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPeriodicResourceUpdated::clear_has_periodic_resource_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPeriodicResourceUpdated::clear_periodic_resource_value() {
  if (periodic_resource_value_ != NULL) periodic_resource_value_->::proto::dota::CMsgDOTAGetPeriodicResourceResponse::Clear();
  clear_has_periodic_resource_value();
}
inline const ::proto::dota::CMsgDOTAGetPeriodicResourceResponse& CMsgDOTAPeriodicResourceUpdated::periodic_resource_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_value)
  return periodic_resource_value_ != NULL ? *periodic_resource_value_
                         : *::proto::dota::CMsgDOTAGetPeriodicResourceResponse::internal_default_instance();
}
inline ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* CMsgDOTAPeriodicResourceUpdated::mutable_periodic_resource_value() {
  set_has_periodic_resource_value();
  if (periodic_resource_value_ == NULL) {
    periodic_resource_value_ = new ::proto::dota::CMsgDOTAGetPeriodicResourceResponse;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_value)
  return periodic_resource_value_;
}
inline ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* CMsgDOTAPeriodicResourceUpdated::release_periodic_resource_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_value)
  clear_has_periodic_resource_value();
  ::proto::dota::CMsgDOTAGetPeriodicResourceResponse* temp = periodic_resource_value_;
  periodic_resource_value_ = NULL;
  return temp;
}
inline void CMsgDOTAPeriodicResourceUpdated::set_allocated_periodic_resource_value(::proto::dota::CMsgDOTAGetPeriodicResourceResponse* periodic_resource_value) {
  delete periodic_resource_value_;
  periodic_resource_value_ = periodic_resource_value;
  if (periodic_resource_value) {
    set_has_periodic_resource_value();
  } else {
    clear_has_periodic_resource_value();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPeriodicResourceUpdated.periodic_resource_value)
}

// -------------------------------------------------------------------

// CMsgDOTALiveLeagueGameUpdate

// optional uint32 live_league_games = 1;
inline bool CMsgDOTALiveLeagueGameUpdate::has_live_league_games() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALiveLeagueGameUpdate::set_has_live_league_games() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALiveLeagueGameUpdate::clear_has_live_league_games() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALiveLeagueGameUpdate::clear_live_league_games() {
  live_league_games_ = 0u;
  clear_has_live_league_games();
}
inline ::google::protobuf::uint32 CMsgDOTALiveLeagueGameUpdate::live_league_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALiveLeagueGameUpdate.live_league_games)
  return live_league_games_;
}
inline void CMsgDOTALiveLeagueGameUpdate::set_live_league_games(::google::protobuf::uint32 value) {
  set_has_live_league_games();
  live_league_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALiveLeagueGameUpdate.live_league_games)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumSelection

// optional uint32 selection_index = 1;
inline bool CMsgDOTACompendiumSelection::has_selection_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumSelection::set_has_selection_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumSelection::clear_has_selection_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumSelection::clear_selection_index() {
  selection_index_ = 0u;
  clear_has_selection_index();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelection::selection_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumSelection.selection_index)
  return selection_index_;
}
inline void CMsgDOTACompendiumSelection::set_selection_index(::google::protobuf::uint32 value) {
  set_has_selection_index();
  selection_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumSelection.selection_index)
}

// optional uint32 selection = 2;
inline bool CMsgDOTACompendiumSelection::has_selection() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumSelection::set_has_selection() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumSelection::clear_has_selection() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumSelection::clear_selection() {
  selection_ = 0u;
  clear_has_selection();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelection::selection() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumSelection.selection)
  return selection_;
}
inline void CMsgDOTACompendiumSelection::set_selection(::google::protobuf::uint32 value) {
  set_has_selection();
  selection_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumSelection.selection)
}

// optional uint32 leagueid = 3;
inline bool CMsgDOTACompendiumSelection::has_leagueid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACompendiumSelection::set_has_leagueid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACompendiumSelection::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACompendiumSelection::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelection::leagueid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumSelection.leagueid)
  return leagueid_;
}
inline void CMsgDOTACompendiumSelection::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumSelection.leagueid)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumSelectionResponse

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgDOTACompendiumSelectionResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumSelectionResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumSelectionResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumSelectionResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumSelectionResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumSelectionResponse.eresult)
  return eresult_;
}
inline void CMsgDOTACompendiumSelectionResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumSelectionResponse.eresult)
}

// repeated .proto.dota.CMsgDOTACompendiumSelection extra_selections = 2;
inline int CMsgDOTACompendiumSelectionResponse::extra_selections_size() const {
  return extra_selections_.size();
}
inline void CMsgDOTACompendiumSelectionResponse::clear_extra_selections() {
  extra_selections_.Clear();
}
inline const ::proto::dota::CMsgDOTACompendiumSelection& CMsgDOTACompendiumSelectionResponse::extra_selections(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_.Get(index);
}
inline ::proto::dota::CMsgDOTACompendiumSelection* CMsgDOTACompendiumSelectionResponse::mutable_extra_selections(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_.Mutable(index);
}
inline ::proto::dota::CMsgDOTACompendiumSelection* CMsgDOTACompendiumSelectionResponse::add_extra_selections() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >*
CMsgDOTACompendiumSelectionResponse::mutable_extra_selections() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTACompendiumSelectionResponse.extra_selections)
  return &extra_selections_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >&
CMsgDOTACompendiumSelectionResponse::extra_selections() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTACompendiumSelectionResponse.extra_selections)
  return extra_selections_;
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumData

// repeated .proto.dota.CMsgDOTACompendiumSelection selections = 1;
inline int CMsgDOTACompendiumData::selections_size() const {
  return selections_.size();
}
inline void CMsgDOTACompendiumData::clear_selections() {
  selections_.Clear();
}
inline const ::proto::dota::CMsgDOTACompendiumSelection& CMsgDOTACompendiumData::selections(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumData.selections)
  return selections_.Get(index);
}
inline ::proto::dota::CMsgDOTACompendiumSelection* CMsgDOTACompendiumData::mutable_selections(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTACompendiumData.selections)
  return selections_.Mutable(index);
}
inline ::proto::dota::CMsgDOTACompendiumSelection* CMsgDOTACompendiumData::add_selections() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTACompendiumData.selections)
  return selections_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >*
CMsgDOTACompendiumData::mutable_selections() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTACompendiumData.selections)
  return &selections_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumSelection >&
CMsgDOTACompendiumData::selections() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTACompendiumData.selections)
  return selections_;
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumDataRequest

// optional uint32 account_id = 1;
inline bool CMsgDOTACompendiumDataRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumDataRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumDataRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumDataRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumDataRequest.account_id)
  return account_id_;
}
inline void CMsgDOTACompendiumDataRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumDataRequest.account_id)
}

// optional uint32 leagueid = 2;
inline bool CMsgDOTACompendiumDataRequest::has_leagueid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumDataRequest::set_has_leagueid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumDataRequest::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumDataRequest::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataRequest::leagueid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumDataRequest.leagueid)
  return leagueid_;
}
inline void CMsgDOTACompendiumDataRequest::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumDataRequest.leagueid)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumDataResponse

// optional uint32 account_id = 1;
inline bool CMsgDOTACompendiumDataResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumDataResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumDataResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumDataResponse.account_id)
  return account_id_;
}
inline void CMsgDOTACompendiumDataResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumDataResponse.account_id)
}

// optional uint32 leagueid = 2;
inline bool CMsgDOTACompendiumDataResponse::has_leagueid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::set_has_leagueid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACompendiumDataResponse::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACompendiumDataResponse::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataResponse::leagueid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumDataResponse.leagueid)
  return leagueid_;
}
inline void CMsgDOTACompendiumDataResponse::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumDataResponse.leagueid)
}

// optional uint32 result = 3 [default = 2];
inline bool CMsgDOTACompendiumDataResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTACompendiumDataResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTACompendiumDataResponse::clear_result() {
  result_ = 2u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumDataResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumDataResponse.result)
  return result_;
}
inline void CMsgDOTACompendiumDataResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumDataResponse.result)
}

// optional .proto.dota.CMsgDOTACompendiumData compendium_data = 4;
inline bool CMsgDOTACompendiumDataResponse::has_compendium_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumDataResponse::set_has_compendium_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumDataResponse::clear_has_compendium_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumDataResponse::clear_compendium_data() {
  if (compendium_data_ != NULL) compendium_data_->::proto::dota::CMsgDOTACompendiumData::Clear();
  clear_has_compendium_data();
}
inline const ::proto::dota::CMsgDOTACompendiumData& CMsgDOTACompendiumDataResponse::compendium_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumDataResponse.compendium_data)
  return compendium_data_ != NULL ? *compendium_data_
                         : *::proto::dota::CMsgDOTACompendiumData::internal_default_instance();
}
inline ::proto::dota::CMsgDOTACompendiumData* CMsgDOTACompendiumDataResponse::mutable_compendium_data() {
  set_has_compendium_data();
  if (compendium_data_ == NULL) {
    compendium_data_ = new ::proto::dota::CMsgDOTACompendiumData;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTACompendiumDataResponse.compendium_data)
  return compendium_data_;
}
inline ::proto::dota::CMsgDOTACompendiumData* CMsgDOTACompendiumDataResponse::release_compendium_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTACompendiumDataResponse.compendium_data)
  clear_has_compendium_data();
  ::proto::dota::CMsgDOTACompendiumData* temp = compendium_data_;
  compendium_data_ = NULL;
  return temp;
}
inline void CMsgDOTACompendiumDataResponse::set_allocated_compendium_data(::proto::dota::CMsgDOTACompendiumData* compendium_data) {
  delete compendium_data_;
  compendium_data_ = compendium_data;
  if (compendium_data) {
    set_has_compendium_data();
  } else {
    clear_has_compendium_data();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTACompendiumDataResponse.compendium_data)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPlayerMatchHistory

// optional uint32 account_id = 1;
inline bool CMsgDOTAGetPlayerMatchHistory::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.account_id)
  return account_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.account_id)
}

// optional uint64 start_at_match_id = 2;
inline bool CMsgDOTAGetPlayerMatchHistory::has_start_at_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_start_at_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_start_at_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_start_at_match_id() {
  start_at_match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_start_at_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAGetPlayerMatchHistory::start_at_match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.start_at_match_id)
  return start_at_match_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_start_at_match_id(::google::protobuf::uint64 value) {
  set_has_start_at_match_id();
  start_at_match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.start_at_match_id)
}

// optional uint32 matches_requested = 3;
inline bool CMsgDOTAGetPlayerMatchHistory::has_matches_requested() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_matches_requested() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_matches_requested() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_matches_requested() {
  matches_requested_ = 0u;
  clear_has_matches_requested();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::matches_requested() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.matches_requested)
  return matches_requested_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_matches_requested(::google::protobuf::uint32 value) {
  set_has_matches_requested();
  matches_requested_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.matches_requested)
}

// optional uint32 hero_id = 4;
inline bool CMsgDOTAGetPlayerMatchHistory::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.hero_id)
  return hero_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.hero_id)
}

// optional uint32 request_id = 5;
inline bool CMsgDOTAGetPlayerMatchHistory::has_request_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_request_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistory::request_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.request_id)
  return request_id_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.request_id)
}

// optional bool include_practice_matches = 7;
inline bool CMsgDOTAGetPlayerMatchHistory::has_include_practice_matches() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_include_practice_matches() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_include_practice_matches() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_include_practice_matches() {
  include_practice_matches_ = false;
  clear_has_include_practice_matches();
}
inline bool CMsgDOTAGetPlayerMatchHistory::include_practice_matches() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.include_practice_matches)
  return include_practice_matches_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_include_practice_matches(bool value) {
  set_has_include_practice_matches();
  include_practice_matches_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.include_practice_matches)
}

// optional bool include_custom_games = 8;
inline bool CMsgDOTAGetPlayerMatchHistory::has_include_custom_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_include_custom_games() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_include_custom_games() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_include_custom_games() {
  include_custom_games_ = false;
  clear_has_include_custom_games();
}
inline bool CMsgDOTAGetPlayerMatchHistory::include_custom_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.include_custom_games)
  return include_custom_games_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_include_custom_games(bool value) {
  set_has_include_custom_games();
  include_custom_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.include_custom_games)
}

// optional bool include_event_games = 9;
inline bool CMsgDOTAGetPlayerMatchHistory::has_include_event_games() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_has_include_event_games() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_has_include_event_games() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAGetPlayerMatchHistory::clear_include_event_games() {
  include_event_games_ = false;
  clear_has_include_event_games();
}
inline bool CMsgDOTAGetPlayerMatchHistory::include_event_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistory.include_event_games)
  return include_event_games_;
}
inline void CMsgDOTAGetPlayerMatchHistory::set_include_event_games(bool value) {
  set_has_include_event_games();
  include_event_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistory.include_event_games)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPlayerMatchHistoryResponse_Match

// optional uint64 match_id = 1;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgDOTAGetPlayerMatchHistoryResponse_Match::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.match_id)
  return match_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.match_id)
}

// optional uint32 start_time = 2;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::start_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.start_time)
  return start_time_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.start_time)
}

// optional uint32 hero_id = 3;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.hero_id)
  return hero_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.hero_id)
}

// optional bool winner = 4;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_winner() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_winner() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_winner() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_winner() {
  winner_ = false;
  clear_has_winner();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::winner() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.winner)
  return winner_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_winner(bool value) {
  set_has_winner();
  winner_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.winner)
}

// optional uint32 game_mode = 5;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_game_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_game_mode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_game_mode() {
  game_mode_ = 0u;
  clear_has_game_mode();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::game_mode() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.game_mode)
  return game_mode_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_game_mode(::google::protobuf::uint32 value) {
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.game_mode)
}

// optional int32 rank_change = 6;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_rank_change() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_rank_change() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_rank_change() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_rank_change() {
  rank_change_ = 0;
  clear_has_rank_change();
}
inline ::google::protobuf::int32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::rank_change() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.rank_change)
  return rank_change_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_rank_change(::google::protobuf::int32 value) {
  set_has_rank_change();
  rank_change_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.rank_change)
}

// optional uint32 previous_rank = 7;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_previous_rank() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_previous_rank() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_previous_rank() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_previous_rank() {
  previous_rank_ = 0u;
  clear_has_previous_rank();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::previous_rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.previous_rank)
  return previous_rank_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_previous_rank(::google::protobuf::uint32 value) {
  set_has_previous_rank();
  previous_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.previous_rank)
}

// optional uint32 lobby_type = 8;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_lobby_type() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_lobby_type() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_lobby_type() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_lobby_type() {
  lobby_type_ = 0u;
  clear_has_lobby_type();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::lobby_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.lobby_type)
  return lobby_type_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_lobby_type(::google::protobuf::uint32 value) {
  set_has_lobby_type();
  lobby_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.lobby_type)
}

// optional bool solo_rank = 9;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_solo_rank() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_solo_rank() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_solo_rank() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_solo_rank() {
  solo_rank_ = false;
  clear_has_solo_rank();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::solo_rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.solo_rank)
  return solo_rank_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_solo_rank(bool value) {
  set_has_solo_rank();
  solo_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.solo_rank)
}

// optional bool abandon = 10;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_abandon() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_abandon() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_abandon() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_abandon() {
  abandon_ = false;
  clear_has_abandon();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::abandon() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.abandon)
  return abandon_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_abandon(bool value) {
  set_has_abandon();
  abandon_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.abandon)
}

// optional uint32 duration = 11;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_duration() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_duration() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_duration() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_duration() {
  duration_ = 0u;
  clear_has_duration();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.duration)
  return duration_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_duration(::google::protobuf::uint32 value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.duration)
}

// optional uint32 engine = 12;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_engine() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_engine() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_engine() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_engine() {
  engine_ = 0u;
  clear_has_engine();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::engine() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.engine)
  return engine_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_engine(::google::protobuf::uint32 value) {
  set_has_engine();
  engine_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.engine)
}

// optional bool active_battle_pass = 13;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_active_battle_pass() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_active_battle_pass() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_active_battle_pass() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_active_battle_pass() {
  active_battle_pass_ = false;
  clear_has_active_battle_pass();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::active_battle_pass() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.active_battle_pass)
  return active_battle_pass_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_active_battle_pass(bool value) {
  set_has_active_battle_pass();
  active_battle_pass_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.active_battle_pass)
}

// optional bool seasonal_rank = 14;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_seasonal_rank() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_seasonal_rank() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_seasonal_rank() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_seasonal_rank() {
  seasonal_rank_ = false;
  clear_has_seasonal_rank();
}
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::seasonal_rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.seasonal_rank)
  return seasonal_rank_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_seasonal_rank(bool value) {
  set_has_seasonal_rank();
  seasonal_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.seasonal_rank)
}

// optional uint32 tourney_id = 15;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_tourney_id() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_tourney_id() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_tourney_id() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_tourney_id() {
  tourney_id_ = 0u;
  clear_has_tourney_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::tourney_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_id)
  return tourney_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_tourney_id(::google::protobuf::uint32 value) {
  set_has_tourney_id();
  tourney_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_id)
}

// optional uint32 tourney_round = 16;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_tourney_round() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_tourney_round() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_tourney_round() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_tourney_round() {
  tourney_round_ = 0u;
  clear_has_tourney_round();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::tourney_round() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_round)
  return tourney_round_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_tourney_round(::google::protobuf::uint32 value) {
  set_has_tourney_round();
  tourney_round_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_round)
}

// optional uint32 tourney_tier = 17;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_tourney_tier() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_tourney_tier() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_tourney_tier() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_tourney_tier() {
  tourney_tier_ = 0u;
  clear_has_tourney_tier();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::tourney_tier() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_tier)
  return tourney_tier_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_tourney_tier(::google::protobuf::uint32 value) {
  set_has_tourney_tier();
  tourney_tier_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_tier)
}

// optional uint32 tourney_division = 18;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_tourney_division() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_tourney_division() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_tourney_division() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_tourney_division() {
  tourney_division_ = 0u;
  clear_has_tourney_division();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::tourney_division() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_division)
  return tourney_division_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_tourney_division(::google::protobuf::uint32 value) {
  set_has_tourney_division();
  tourney_division_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.tourney_division)
}

// optional uint32 team_id = 19;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_team_id() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_team_id() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_team_id() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse_Match::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_id)
  return team_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_id)
}

// optional string team_name = 20;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_team_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_team_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTAGetPlayerMatchHistoryResponse_Match::team_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
  return team_name_.GetNoArena();
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_name(const ::std::string& value) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}
#if LANG_CXX11
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_name(::std::string&& value) {
  set_has_team_name();
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}
#endif
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}
inline ::std::string* CMsgDOTAGetPlayerMatchHistoryResponse_Match::mutable_team_name() {
  set_has_team_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAGetPlayerMatchHistoryResponse_Match::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
  clear_has_team_name();
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    set_has_team_name();
  } else {
    clear_has_team_name();
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.team_name)
}

// optional uint64 ugc_team_ui_logo = 21;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse_Match::has_ugc_team_ui_logo() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_has_ugc_team_ui_logo() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_has_ugc_team_ui_logo() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::clear_ugc_team_ui_logo() {
  ugc_team_ui_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_ugc_team_ui_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAGetPlayerMatchHistoryResponse_Match::ugc_team_ui_logo() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.ugc_team_ui_logo)
  return ugc_team_ui_logo_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse_Match::set_ugc_team_ui_logo(::google::protobuf::uint64 value) {
  set_has_ugc_team_ui_logo();
  ugc_team_ui_logo_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match.ugc_team_ui_logo)
}

// -------------------------------------------------------------------

// CMsgDOTAGetPlayerMatchHistoryResponse

// repeated .proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.Match matches = 1;
inline int CMsgDOTAGetPlayerMatchHistoryResponse::matches_size() const {
  return matches_.size();
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::clear_matches() {
  matches_.Clear();
}
inline const ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match& CMsgDOTAGetPlayerMatchHistoryResponse::matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_.Get(index);
}
inline ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match* CMsgDOTAGetPlayerMatchHistoryResponse::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match* CMsgDOTAGetPlayerMatchHistoryResponse::add_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match >*
CMsgDOTAGetPlayerMatchHistoryResponse::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return &matches_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAGetPlayerMatchHistoryResponse_Match >&
CMsgDOTAGetPlayerMatchHistoryResponse::matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.matches)
  return matches_;
}

// optional uint32 request_id = 2;
inline bool CMsgDOTAGetPlayerMatchHistoryResponse::has_request_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::set_has_request_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgDOTAGetPlayerMatchHistoryResponse::request_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.request_id)
  return request_id_;
}
inline void CMsgDOTAGetPlayerMatchHistoryResponse::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAGetPlayerMatchHistoryResponse.request_id)
}

// -------------------------------------------------------------------

// CMsgDOTAStartDailyHeroChallenge

// -------------------------------------------------------------------

// CMsgGCNotificationsRequest

// -------------------------------------------------------------------

// CMsgGCNotificationsResponse_Notification

// optional uint64 id = 1;
inline bool CMsgGCNotificationsResponse_Notification::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
inline ::google::protobuf::uint64 CMsgGCNotificationsResponse_Notification::id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.id)
  return id_;
}
inline void CMsgGCNotificationsResponse_Notification::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.id)
}

// optional uint32 type = 2;
inline bool CMsgGCNotificationsResponse_Notification::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.type)
  return type_;
}
inline void CMsgGCNotificationsResponse_Notification::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.type)
}

// optional uint32 timestamp = 3;
inline bool CMsgGCNotificationsResponse_Notification::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.timestamp)
  return timestamp_;
}
inline void CMsgGCNotificationsResponse_Notification::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.timestamp)
}

// optional uint32 reference_a = 4;
inline bool CMsgGCNotificationsResponse_Notification::has_reference_a() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_reference_a() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_reference_a() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_reference_a() {
  reference_a_ = 0u;
  clear_has_reference_a();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::reference_a() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.reference_a)
  return reference_a_;
}
inline void CMsgGCNotificationsResponse_Notification::set_reference_a(::google::protobuf::uint32 value) {
  set_has_reference_a();
  reference_a_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.reference_a)
}

// optional uint32 reference_b = 5;
inline bool CMsgGCNotificationsResponse_Notification::has_reference_b() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_reference_b() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_reference_b() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_reference_b() {
  reference_b_ = 0u;
  clear_has_reference_b();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::reference_b() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.reference_b)
  return reference_b_;
}
inline void CMsgGCNotificationsResponse_Notification::set_reference_b(::google::protobuf::uint32 value) {
  set_has_reference_b();
  reference_b_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.reference_b)
}

// optional uint32 reference_c = 6;
inline bool CMsgGCNotificationsResponse_Notification::has_reference_c() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_reference_c() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_reference_c() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_reference_c() {
  reference_c_ = 0u;
  clear_has_reference_c();
}
inline ::google::protobuf::uint32 CMsgGCNotificationsResponse_Notification::reference_c() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.reference_c)
  return reference_c_;
}
inline void CMsgGCNotificationsResponse_Notification::set_reference_c(::google::protobuf::uint32 value) {
  set_has_reference_c();
  reference_c_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.reference_c)
}

// optional string message = 7;
inline bool CMsgGCNotificationsResponse_Notification::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CMsgGCNotificationsResponse_Notification::message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.message)
  return message_.GetNoArena();
}
inline void CMsgGCNotificationsResponse_Notification::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.message)
}
#if LANG_CXX11
inline void CMsgGCNotificationsResponse_Notification::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCNotificationsResponse.Notification.message)
}
#endif
inline void CMsgGCNotificationsResponse_Notification::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCNotificationsResponse.Notification.message)
}
inline void CMsgGCNotificationsResponse_Notification::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCNotificationsResponse.Notification.message)
}
inline ::std::string* CMsgGCNotificationsResponse_Notification::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCNotificationsResponse.Notification.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCNotificationsResponse_Notification::release_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCNotificationsResponse.Notification.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCNotificationsResponse_Notification::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCNotificationsResponse.Notification.message)
}

// optional bool unread = 8;
inline bool CMsgGCNotificationsResponse_Notification::has_unread() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCNotificationsResponse_Notification::set_has_unread() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_has_unread() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCNotificationsResponse_Notification::clear_unread() {
  unread_ = false;
  clear_has_unread();
}
inline bool CMsgGCNotificationsResponse_Notification::unread() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.Notification.unread)
  return unread_;
}
inline void CMsgGCNotificationsResponse_Notification::set_unread(bool value) {
  set_has_unread();
  unread_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.Notification.unread)
}

// -------------------------------------------------------------------

// CMsgGCNotificationsResponse

// optional .proto.dota.CMsgGCNotificationsResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgGCNotificationsResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCNotificationsResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCNotificationsResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCNotificationsResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::proto::dota::CMsgGCNotificationsResponse_EResult CMsgGCNotificationsResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.result)
  return static_cast< ::proto::dota::CMsgGCNotificationsResponse_EResult >(result_);
}
inline void CMsgGCNotificationsResponse::set_result(::proto::dota::CMsgGCNotificationsResponse_EResult value) {
  assert(::proto::dota::CMsgGCNotificationsResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCNotificationsResponse.result)
}

// repeated .proto.dota.CMsgGCNotificationsResponse.Notification notifications = 2;
inline int CMsgGCNotificationsResponse::notifications_size() const {
  return notifications_.size();
}
inline void CMsgGCNotificationsResponse::clear_notifications() {
  notifications_.Clear();
}
inline const ::proto::dota::CMsgGCNotificationsResponse_Notification& CMsgGCNotificationsResponse::notifications(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCNotificationsResponse.notifications)
  return notifications_.Get(index);
}
inline ::proto::dota::CMsgGCNotificationsResponse_Notification* CMsgGCNotificationsResponse::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCNotificationsResponse.notifications)
  return notifications_.Mutable(index);
}
inline ::proto::dota::CMsgGCNotificationsResponse_Notification* CMsgGCNotificationsResponse::add_notifications() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCNotificationsResponse.notifications)
  return notifications_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCNotificationsResponse_Notification >*
CMsgGCNotificationsResponse::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCNotificationsResponse.notifications)
  return &notifications_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCNotificationsResponse_Notification >&
CMsgGCNotificationsResponse::notifications() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCNotificationsResponse.notifications)
  return notifications_;
}

// -------------------------------------------------------------------

// CMsgGCNotificationsMarkReadRequest

// -------------------------------------------------------------------

// CMsgClientToGCMarkNotificationListRead

// repeated uint64 notification_ids = 1;
inline int CMsgClientToGCMarkNotificationListRead::notification_ids_size() const {
  return notification_ids_.size();
}
inline void CMsgClientToGCMarkNotificationListRead::clear_notification_ids() {
  notification_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientToGCMarkNotificationListRead::notification_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCMarkNotificationListRead.notification_ids)
  return notification_ids_.Get(index);
}
inline void CMsgClientToGCMarkNotificationListRead::set_notification_ids(int index, ::google::protobuf::uint64 value) {
  notification_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCMarkNotificationListRead.notification_ids)
}
inline void CMsgClientToGCMarkNotificationListRead::add_notification_ids(::google::protobuf::uint64 value) {
  notification_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCMarkNotificationListRead.notification_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCMarkNotificationListRead::notification_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCMarkNotificationListRead.notification_ids)
  return notification_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCMarkNotificationListRead::mutable_notification_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCMarkNotificationListRead.notification_ids)
  return &notification_ids_;
}

// -------------------------------------------------------------------

// CMsgGCLeagueAdminState_PrivateLeagueKeys

// optional uint32 leagueid = 1;
inline bool CMsgGCLeagueAdminState_PrivateLeagueKeys::has_leagueid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::set_has_leagueid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::clear_has_leagueid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::clear_leagueid() {
  leagueid_ = 0u;
  clear_has_leagueid();
}
inline ::google::protobuf::uint32 CMsgGCLeagueAdminState_PrivateLeagueKeys::leagueid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCLeagueAdminState.PrivateLeagueKeys.leagueid)
  return leagueid_;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::set_leagueid(::google::protobuf::uint32 value) {
  set_has_leagueid();
  leagueid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCLeagueAdminState.PrivateLeagueKeys.leagueid)
}

// optional uint32 privatekey = 2;
inline bool CMsgGCLeagueAdminState_PrivateLeagueKeys::has_privatekey() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::set_has_privatekey() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::clear_has_privatekey() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::clear_privatekey() {
  privatekey_ = 0u;
  clear_has_privatekey();
}
inline ::google::protobuf::uint32 CMsgGCLeagueAdminState_PrivateLeagueKeys::privatekey() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCLeagueAdminState.PrivateLeagueKeys.privatekey)
  return privatekey_;
}
inline void CMsgGCLeagueAdminState_PrivateLeagueKeys::set_privatekey(::google::protobuf::uint32 value) {
  set_has_privatekey();
  privatekey_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCLeagueAdminState.PrivateLeagueKeys.privatekey)
}

// -------------------------------------------------------------------

// CMsgGCLeagueAdminState

// repeated uint32 leagues = 1;
inline int CMsgGCLeagueAdminState::leagues_size() const {
  return leagues_.size();
}
inline void CMsgGCLeagueAdminState::clear_leagues() {
  leagues_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCLeagueAdminState::leagues(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCLeagueAdminState.leagues)
  return leagues_.Get(index);
}
inline void CMsgGCLeagueAdminState::set_leagues(int index, ::google::protobuf::uint32 value) {
  leagues_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCLeagueAdminState.leagues)
}
inline void CMsgGCLeagueAdminState::add_leagues(::google::protobuf::uint32 value) {
  leagues_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCLeagueAdminState.leagues)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCLeagueAdminState::leagues() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCLeagueAdminState.leagues)
  return leagues_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCLeagueAdminState::mutable_leagues() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCLeagueAdminState.leagues)
  return &leagues_;
}

// repeated .proto.dota.CMsgGCLeagueAdminState.PrivateLeagueKeys keys = 2;
inline int CMsgGCLeagueAdminState::keys_size() const {
  return keys_.size();
}
inline void CMsgGCLeagueAdminState::clear_keys() {
  keys_.Clear();
}
inline const ::proto::dota::CMsgGCLeagueAdminState_PrivateLeagueKeys& CMsgGCLeagueAdminState::keys(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCLeagueAdminState.keys)
  return keys_.Get(index);
}
inline ::proto::dota::CMsgGCLeagueAdminState_PrivateLeagueKeys* CMsgGCLeagueAdminState::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCLeagueAdminState.keys)
  return keys_.Mutable(index);
}
inline ::proto::dota::CMsgGCLeagueAdminState_PrivateLeagueKeys* CMsgGCLeagueAdminState::add_keys() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCLeagueAdminState.keys)
  return keys_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCLeagueAdminState_PrivateLeagueKeys >*
CMsgGCLeagueAdminState::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCLeagueAdminState.keys)
  return &keys_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCLeagueAdminState_PrivateLeagueKeys >&
CMsgGCLeagueAdminState::keys() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCLeagueAdminState.keys)
  return keys_;
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoRequest_PlayerInfo

// optional uint32 account_id = 1;
inline bool CMsgGCPlayerInfoRequest_PlayerInfo::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoRequest_PlayerInfo::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo.account_id)
  return account_id_;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo.account_id)
}

// optional uint32 timestamp = 2;
inline bool CMsgGCPlayerInfoRequest_PlayerInfo::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoRequest_PlayerInfo::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo.timestamp)
  return timestamp_;
}
inline void CMsgGCPlayerInfoRequest_PlayerInfo::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo.timestamp)
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoRequest

// repeated .proto.dota.CMsgGCPlayerInfoRequest.PlayerInfo player_infos = 1;
inline int CMsgGCPlayerInfoRequest::player_infos_size() const {
  return player_infos_.size();
}
inline void CMsgGCPlayerInfoRequest::clear_player_infos() {
  player_infos_.Clear();
}
inline const ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo& CMsgGCPlayerInfoRequest::player_infos(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoRequest.player_infos)
  return player_infos_.Get(index);
}
inline ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo* CMsgGCPlayerInfoRequest::mutable_player_infos(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCPlayerInfoRequest.player_infos)
  return player_infos_.Mutable(index);
}
inline ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo* CMsgGCPlayerInfoRequest::add_player_infos() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCPlayerInfoRequest.player_infos)
  return player_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo >*
CMsgGCPlayerInfoRequest::mutable_player_infos() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCPlayerInfoRequest.player_infos)
  return &player_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCPlayerInfoRequest_PlayerInfo >&
CMsgGCPlayerInfoRequest::player_infos() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCPlayerInfoRequest.player_infos)
  return player_infos_;
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoSubmit

// optional string name = 1;
inline bool CMsgGCPlayerInfoSubmit::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCPlayerInfoSubmit::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgGCPlayerInfoSubmit::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoSubmit.name)
  return name_.GetNoArena();
}
inline void CMsgGCPlayerInfoSubmit::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoSubmit.name)
}
#if LANG_CXX11
inline void CMsgGCPlayerInfoSubmit::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCPlayerInfoSubmit.name)
}
#endif
inline void CMsgGCPlayerInfoSubmit::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCPlayerInfoSubmit.name)
}
inline void CMsgGCPlayerInfoSubmit::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCPlayerInfoSubmit.name)
}
inline ::std::string* CMsgGCPlayerInfoSubmit::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCPlayerInfoSubmit.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCPlayerInfoSubmit::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCPlayerInfoSubmit.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCPlayerInfoSubmit::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCPlayerInfoSubmit.name)
}

// optional string country_code = 2;
inline bool CMsgGCPlayerInfoSubmit::has_country_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_country_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCPlayerInfoSubmit::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country_code();
}
inline const ::std::string& CMsgGCPlayerInfoSubmit::country_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
  return country_code_.GetNoArena();
}
inline void CMsgGCPlayerInfoSubmit::set_country_code(const ::std::string& value) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
}
#if LANG_CXX11
inline void CMsgGCPlayerInfoSubmit::set_country_code(::std::string&& value) {
  set_has_country_code();
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
}
#endif
inline void CMsgGCPlayerInfoSubmit::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
}
inline void CMsgGCPlayerInfoSubmit::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
}
inline ::std::string* CMsgGCPlayerInfoSubmit::mutable_country_code() {
  set_has_country_code();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCPlayerInfoSubmit::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
  clear_has_country_code();
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCPlayerInfoSubmit::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    set_has_country_code();
  } else {
    clear_has_country_code();
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCPlayerInfoSubmit.country_code)
}

// optional uint32 fantasy_role = 3;
inline bool CMsgGCPlayerInfoSubmit::has_fantasy_role() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_fantasy_role() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_fantasy_role() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCPlayerInfoSubmit::clear_fantasy_role() {
  fantasy_role_ = 0u;
  clear_has_fantasy_role();
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoSubmit::fantasy_role() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoSubmit.fantasy_role)
  return fantasy_role_;
}
inline void CMsgGCPlayerInfoSubmit::set_fantasy_role(::google::protobuf::uint32 value) {
  set_has_fantasy_role();
  fantasy_role_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoSubmit.fantasy_role)
}

// optional uint32 team_id = 4;
inline bool CMsgGCPlayerInfoSubmit::has_team_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_team_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCPlayerInfoSubmit::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgGCPlayerInfoSubmit::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoSubmit.team_id)
  return team_id_;
}
inline void CMsgGCPlayerInfoSubmit::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoSubmit.team_id)
}

// optional string sponsor = 5;
inline bool CMsgGCPlayerInfoSubmit::has_sponsor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCPlayerInfoSubmit::set_has_sponsor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCPlayerInfoSubmit::clear_has_sponsor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCPlayerInfoSubmit::clear_sponsor() {
  sponsor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sponsor();
}
inline const ::std::string& CMsgGCPlayerInfoSubmit::sponsor() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
  return sponsor_.GetNoArena();
}
inline void CMsgGCPlayerInfoSubmit::set_sponsor(const ::std::string& value) {
  set_has_sponsor();
  sponsor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
}
#if LANG_CXX11
inline void CMsgGCPlayerInfoSubmit::set_sponsor(::std::string&& value) {
  set_has_sponsor();
  sponsor_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
}
#endif
inline void CMsgGCPlayerInfoSubmit::set_sponsor(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sponsor();
  sponsor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
}
inline void CMsgGCPlayerInfoSubmit::set_sponsor(const char* value, size_t size) {
  set_has_sponsor();
  sponsor_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
}
inline ::std::string* CMsgGCPlayerInfoSubmit::mutable_sponsor() {
  set_has_sponsor();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
  return sponsor_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCPlayerInfoSubmit::release_sponsor() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
  clear_has_sponsor();
  return sponsor_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCPlayerInfoSubmit::set_allocated_sponsor(::std::string* sponsor) {
  if (sponsor != NULL) {
    set_has_sponsor();
  } else {
    clear_has_sponsor();
  }
  sponsor_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sponsor);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCPlayerInfoSubmit.sponsor)
}

// -------------------------------------------------------------------

// CMsgGCPlayerInfoSubmitResponse

// optional .proto.dota.CMsgGCPlayerInfoSubmitResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgGCPlayerInfoSubmitResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCPlayerInfoSubmitResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCPlayerInfoSubmitResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCPlayerInfoSubmitResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult CMsgGCPlayerInfoSubmitResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCPlayerInfoSubmitResponse.result)
  return static_cast< ::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult >(result_);
}
inline void CMsgGCPlayerInfoSubmitResponse::set_result(::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult value) {
  assert(::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCPlayerInfoSubmitResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientProvideSurveyResult_Response

// optional uint32 question_id = 1;
inline bool CMsgClientProvideSurveyResult_Response::has_question_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientProvideSurveyResult_Response::set_has_question_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientProvideSurveyResult_Response::clear_has_question_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientProvideSurveyResult_Response::clear_question_id() {
  question_id_ = 0u;
  clear_has_question_id();
}
inline ::google::protobuf::uint32 CMsgClientProvideSurveyResult_Response::question_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientProvideSurveyResult.Response.question_id)
  return question_id_;
}
inline void CMsgClientProvideSurveyResult_Response::set_question_id(::google::protobuf::uint32 value) {
  set_has_question_id();
  question_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientProvideSurveyResult.Response.question_id)
}

// optional uint32 survey_value = 2;
inline bool CMsgClientProvideSurveyResult_Response::has_survey_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientProvideSurveyResult_Response::set_has_survey_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientProvideSurveyResult_Response::clear_has_survey_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientProvideSurveyResult_Response::clear_survey_value() {
  survey_value_ = 0u;
  clear_has_survey_value();
}
inline ::google::protobuf::uint32 CMsgClientProvideSurveyResult_Response::survey_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientProvideSurveyResult.Response.survey_value)
  return survey_value_;
}
inline void CMsgClientProvideSurveyResult_Response::set_survey_value(::google::protobuf::uint32 value) {
  set_has_survey_value();
  survey_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientProvideSurveyResult.Response.survey_value)
}

// -------------------------------------------------------------------

// CMsgClientProvideSurveyResult

// repeated .proto.dota.CMsgClientProvideSurveyResult.Response responses = 1;
inline int CMsgClientProvideSurveyResult::responses_size() const {
  return responses_.size();
}
inline void CMsgClientProvideSurveyResult::clear_responses() {
  responses_.Clear();
}
inline const ::proto::dota::CMsgClientProvideSurveyResult_Response& CMsgClientProvideSurveyResult::responses(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientProvideSurveyResult.responses)
  return responses_.Get(index);
}
inline ::proto::dota::CMsgClientProvideSurveyResult_Response* CMsgClientProvideSurveyResult::mutable_responses(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientProvideSurveyResult.responses)
  return responses_.Mutable(index);
}
inline ::proto::dota::CMsgClientProvideSurveyResult_Response* CMsgClientProvideSurveyResult::add_responses() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientProvideSurveyResult.responses)
  return responses_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientProvideSurveyResult_Response >*
CMsgClientProvideSurveyResult::mutable_responses() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientProvideSurveyResult.responses)
  return &responses_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientProvideSurveyResult_Response >&
CMsgClientProvideSurveyResult::responses() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientProvideSurveyResult.responses)
  return responses_;
}

// optional uint64 survey_key = 2;
inline bool CMsgClientProvideSurveyResult::has_survey_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientProvideSurveyResult::set_has_survey_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientProvideSurveyResult::clear_has_survey_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientProvideSurveyResult::clear_survey_key() {
  survey_key_ = GOOGLE_ULONGLONG(0);
  clear_has_survey_key();
}
inline ::google::protobuf::uint64 CMsgClientProvideSurveyResult::survey_key() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientProvideSurveyResult.survey_key)
  return survey_key_;
}
inline void CMsgClientProvideSurveyResult::set_survey_key(::google::protobuf::uint64 value) {
  set_has_survey_key();
  survey_key_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientProvideSurveyResult.survey_key)
}

// -------------------------------------------------------------------

// CMsgDOTAEmoticonAccessSDO

// optional uint32 account_id = 1;
inline bool CMsgDOTAEmoticonAccessSDO::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAEmoticonAccessSDO::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgDOTAEmoticonAccessSDO::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAEmoticonAccessSDO.account_id)
  return account_id_;
}
inline void CMsgDOTAEmoticonAccessSDO::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAEmoticonAccessSDO.account_id)
}

// optional bytes unlocked_emoticons = 2;
inline bool CMsgDOTAEmoticonAccessSDO::has_unlocked_emoticons() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAEmoticonAccessSDO::set_has_unlocked_emoticons() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_has_unlocked_emoticons() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAEmoticonAccessSDO::clear_unlocked_emoticons() {
  unlocked_emoticons_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unlocked_emoticons();
}
inline const ::std::string& CMsgDOTAEmoticonAccessSDO::unlocked_emoticons() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
  return unlocked_emoticons_.GetNoArena();
}
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(const ::std::string& value) {
  set_has_unlocked_emoticons();
  unlocked_emoticons_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
#if LANG_CXX11
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(::std::string&& value) {
  set_has_unlocked_emoticons();
  unlocked_emoticons_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
#endif
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_unlocked_emoticons();
  unlocked_emoticons_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
inline void CMsgDOTAEmoticonAccessSDO::set_unlocked_emoticons(const void* value, size_t size) {
  set_has_unlocked_emoticons();
  unlocked_emoticons_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}
inline ::std::string* CMsgDOTAEmoticonAccessSDO::mutable_unlocked_emoticons() {
  set_has_unlocked_emoticons();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
  return unlocked_emoticons_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAEmoticonAccessSDO::release_unlocked_emoticons() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
  clear_has_unlocked_emoticons();
  return unlocked_emoticons_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAEmoticonAccessSDO::set_allocated_unlocked_emoticons(::std::string* unlocked_emoticons) {
  if (unlocked_emoticons != NULL) {
    set_has_unlocked_emoticons();
  } else {
    clear_has_unlocked_emoticons();
  }
  unlocked_emoticons_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unlocked_emoticons);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAEmoticonAccessSDO.unlocked_emoticons)
}

// -------------------------------------------------------------------

// CMsgClientToGCEmoticonDataRequest

// -------------------------------------------------------------------

// CMsgGCToClientEmoticonData

// optional .proto.dota.CMsgDOTAEmoticonAccessSDO emoticon_access = 1;
inline bool CMsgGCToClientEmoticonData::has_emoticon_access() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientEmoticonData::set_has_emoticon_access() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientEmoticonData::clear_has_emoticon_access() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientEmoticonData::clear_emoticon_access() {
  if (emoticon_access_ != NULL) emoticon_access_->::proto::dota::CMsgDOTAEmoticonAccessSDO::Clear();
  clear_has_emoticon_access();
}
inline const ::proto::dota::CMsgDOTAEmoticonAccessSDO& CMsgGCToClientEmoticonData::emoticon_access() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientEmoticonData.emoticon_access)
  return emoticon_access_ != NULL ? *emoticon_access_
                         : *::proto::dota::CMsgDOTAEmoticonAccessSDO::internal_default_instance();
}
inline ::proto::dota::CMsgDOTAEmoticonAccessSDO* CMsgGCToClientEmoticonData::mutable_emoticon_access() {
  set_has_emoticon_access();
  if (emoticon_access_ == NULL) {
    emoticon_access_ = new ::proto::dota::CMsgDOTAEmoticonAccessSDO;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientEmoticonData.emoticon_access)
  return emoticon_access_;
}
inline ::proto::dota::CMsgDOTAEmoticonAccessSDO* CMsgGCToClientEmoticonData::release_emoticon_access() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientEmoticonData.emoticon_access)
  clear_has_emoticon_access();
  ::proto::dota::CMsgDOTAEmoticonAccessSDO* temp = emoticon_access_;
  emoticon_access_ = NULL;
  return temp;
}
inline void CMsgGCToClientEmoticonData::set_allocated_emoticon_access(::proto::dota::CMsgDOTAEmoticonAccessSDO* emoticon_access) {
  delete emoticon_access_;
  emoticon_access_ = emoticon_access;
  if (emoticon_access) {
    set_has_emoticon_access();
  } else {
    clear_has_emoticon_access();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientEmoticonData.emoticon_access)
}

// -------------------------------------------------------------------

// CMsgClientToGCTrackDialogResult

// optional uint32 dialog_id = 1;
inline bool CMsgClientToGCTrackDialogResult::has_dialog_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTrackDialogResult::set_has_dialog_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCTrackDialogResult::clear_has_dialog_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCTrackDialogResult::clear_dialog_id() {
  dialog_id_ = 0u;
  clear_has_dialog_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCTrackDialogResult::dialog_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTrackDialogResult.dialog_id)
  return dialog_id_;
}
inline void CMsgClientToGCTrackDialogResult::set_dialog_id(::google::protobuf::uint32 value) {
  set_has_dialog_id();
  dialog_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTrackDialogResult.dialog_id)
}

// optional uint32 value = 2;
inline bool CMsgClientToGCTrackDialogResult::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCTrackDialogResult::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCTrackDialogResult::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCTrackDialogResult::clear_value() {
  value_ = 0u;
  clear_has_value();
}
inline ::google::protobuf::uint32 CMsgClientToGCTrackDialogResult::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTrackDialogResult.value)
  return value_;
}
inline void CMsgClientToGCTrackDialogResult::set_value(::google::protobuf::uint32 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTrackDialogResult.value)
}

// -------------------------------------------------------------------

// CMsgGCToClientTournamentItemDrop

// optional uint32 item_def = 1;
inline bool CMsgGCToClientTournamentItemDrop::has_item_def() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientTournamentItemDrop::set_has_item_def() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientTournamentItemDrop::clear_has_item_def() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientTournamentItemDrop::clear_item_def() {
  item_def_ = 0u;
  clear_has_item_def();
}
inline ::google::protobuf::uint32 CMsgGCToClientTournamentItemDrop::item_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTournamentItemDrop.item_def)
  return item_def_;
}
inline void CMsgGCToClientTournamentItemDrop::set_item_def(::google::protobuf::uint32 value) {
  set_has_item_def();
  item_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTournamentItemDrop.item_def)
}

// optional uint32 event_type = 2;
inline bool CMsgGCToClientTournamentItemDrop::has_event_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientTournamentItemDrop::set_has_event_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientTournamentItemDrop::clear_has_event_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientTournamentItemDrop::clear_event_type() {
  event_type_ = 0u;
  clear_has_event_type();
}
inline ::google::protobuf::uint32 CMsgGCToClientTournamentItemDrop::event_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTournamentItemDrop.event_type)
  return event_type_;
}
inline void CMsgGCToClientTournamentItemDrop::set_event_type(::google::protobuf::uint32 value) {
  set_has_event_type();
  event_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTournamentItemDrop.event_type)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetAdditionalEquips

// repeated .proto.dota.CAdditionalEquipSlot equips = 1;
inline int CMsgClientToGCSetAdditionalEquips::equips_size() const {
  return equips_.size();
}
inline void CMsgClientToGCSetAdditionalEquips::clear_equips() {
  equips_.Clear();
}
inline const ::proto::dota::CAdditionalEquipSlot& CMsgClientToGCSetAdditionalEquips::equips(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetAdditionalEquips.equips)
  return equips_.Get(index);
}
inline ::proto::dota::CAdditionalEquipSlot* CMsgClientToGCSetAdditionalEquips::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCSetAdditionalEquips.equips)
  return equips_.Mutable(index);
}
inline ::proto::dota::CAdditionalEquipSlot* CMsgClientToGCSetAdditionalEquips::add_equips() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCSetAdditionalEquips.equips)
  return equips_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >*
CMsgClientToGCSetAdditionalEquips::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCSetAdditionalEquips.equips)
  return &equips_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >&
CMsgClientToGCSetAdditionalEquips::equips() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCSetAdditionalEquips.equips)
  return equips_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSetAdditionalEquipsResponse

// -------------------------------------------------------------------

// CMsgClientToGCGetAdditionalEquips

// -------------------------------------------------------------------

// CMsgClientToGCGetAdditionalEquipsResponse

// repeated .proto.dota.CAdditionalEquipSlot equips = 1;
inline int CMsgClientToGCGetAdditionalEquipsResponse::equips_size() const {
  return equips_.size();
}
inline void CMsgClientToGCGetAdditionalEquipsResponse::clear_equips() {
  equips_.Clear();
}
inline const ::proto::dota::CAdditionalEquipSlot& CMsgClientToGCGetAdditionalEquipsResponse::equips(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_.Get(index);
}
inline ::proto::dota::CAdditionalEquipSlot* CMsgClientToGCGetAdditionalEquipsResponse::mutable_equips(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_.Mutable(index);
}
inline ::proto::dota::CAdditionalEquipSlot* CMsgClientToGCGetAdditionalEquipsResponse::add_equips() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >*
CMsgClientToGCGetAdditionalEquipsResponse::mutable_equips() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return &equips_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CAdditionalEquipSlot >&
CMsgClientToGCGetAdditionalEquipsResponse::equips() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetAdditionalEquipsResponse.equips)
  return equips_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroOrder

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroOrderResponse

// repeated uint32 hero_ids = 1;
inline int CMsgClientToGCGetAllHeroOrderResponse::hero_ids_size() const {
  return hero_ids_.size();
}
inline void CMsgClientToGCGetAllHeroOrderResponse::clear_hero_ids() {
  hero_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroOrderResponse::hero_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
  return hero_ids_.Get(index);
}
inline void CMsgClientToGCGetAllHeroOrderResponse::set_hero_ids(int index, ::google::protobuf::uint32 value) {
  hero_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
}
inline void CMsgClientToGCGetAllHeroOrderResponse::add_hero_ids(::google::protobuf::uint32 value) {
  hero_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCGetAllHeroOrderResponse::hero_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
  return hero_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCGetAllHeroOrderResponse::mutable_hero_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetAllHeroOrderResponse.hero_ids)
  return &hero_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroProgress

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetAllHeroProgress::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgress::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetAllHeroProgress::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetAllHeroProgress::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgress::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgress.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetAllHeroProgress::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgress.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetAllHeroProgressResponse

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.account_id)
}

// optional uint32 curr_hero_id = 2;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_hero_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_hero_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_hero_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_hero_id() {
  curr_hero_id_ = 0u;
  clear_has_curr_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_hero_id)
  return curr_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_hero_id(::google::protobuf::uint32 value) {
  set_has_curr_hero_id();
  curr_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_hero_id)
}

// optional uint32 laps_completed = 3;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_laps_completed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_laps_completed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_laps_completed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_laps_completed() {
  laps_completed_ = 0u;
  clear_has_laps_completed();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::laps_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.laps_completed)
  return laps_completed_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_laps_completed(::google::protobuf::uint32 value) {
  set_has_laps_completed();
  laps_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.laps_completed)
}

// optional uint32 curr_hero_games = 4;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_hero_games() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_hero_games() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_hero_games() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_hero_games() {
  curr_hero_games_ = 0u;
  clear_has_curr_hero_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_hero_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_hero_games)
  return curr_hero_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_hero_games(::google::protobuf::uint32 value) {
  set_has_curr_hero_games();
  curr_hero_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_hero_games)
}

// optional uint32 curr_lap_time_started = 5;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_lap_time_started() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_lap_time_started() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_lap_time_started() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_lap_time_started() {
  curr_lap_time_started_ = 0u;
  clear_has_curr_lap_time_started();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_lap_time_started() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_lap_time_started)
  return curr_lap_time_started_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_lap_time_started(::google::protobuf::uint32 value) {
  set_has_curr_lap_time_started();
  curr_lap_time_started_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_lap_time_started)
}

// optional uint32 curr_lap_games = 6;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_lap_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_lap_games() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_lap_games() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_lap_games() {
  curr_lap_games_ = 0u;
  clear_has_curr_lap_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::curr_lap_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_lap_games)
  return curr_lap_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_lap_games(::google::protobuf::uint32 value) {
  set_has_curr_lap_games();
  curr_lap_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_lap_games)
}

// optional uint32 best_lap_games = 7;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_best_lap_games() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_best_lap_games() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_best_lap_games() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_best_lap_games() {
  best_lap_games_ = 0u;
  clear_has_best_lap_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::best_lap_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.best_lap_games)
  return best_lap_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_best_lap_games(::google::protobuf::uint32 value) {
  set_has_best_lap_games();
  best_lap_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.best_lap_games)
}

// optional uint32 best_lap_time = 8;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_best_lap_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_best_lap_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_best_lap_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_best_lap_time() {
  best_lap_time_ = 0u;
  clear_has_best_lap_time();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::best_lap_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.best_lap_time)
  return best_lap_time_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_best_lap_time(::google::protobuf::uint32 value) {
  set_has_best_lap_time();
  best_lap_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.best_lap_time)
}

// optional uint32 lap_heroes_completed = 9;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_lap_heroes_completed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_lap_heroes_completed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_lap_heroes_completed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_lap_heroes_completed() {
  lap_heroes_completed_ = 0u;
  clear_has_lap_heroes_completed();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::lap_heroes_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_completed)
  return lap_heroes_completed_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_lap_heroes_completed(::google::protobuf::uint32 value) {
  set_has_lap_heroes_completed();
  lap_heroes_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_completed)
}

// optional uint32 lap_heroes_remaining = 10;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_lap_heroes_remaining() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_lap_heroes_remaining() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_lap_heroes_remaining() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_lap_heroes_remaining() {
  lap_heroes_remaining_ = 0u;
  clear_has_lap_heroes_remaining();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::lap_heroes_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_remaining)
  return lap_heroes_remaining_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_lap_heroes_remaining(::google::protobuf::uint32 value) {
  set_has_lap_heroes_remaining();
  lap_heroes_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.lap_heroes_remaining)
}

// optional uint32 next_hero_id = 11;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_next_hero_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_next_hero_id() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_next_hero_id() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_next_hero_id() {
  next_hero_id_ = 0u;
  clear_has_next_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::next_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.next_hero_id)
  return next_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_next_hero_id(::google::protobuf::uint32 value) {
  set_has_next_hero_id();
  next_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.next_hero_id)
}

// optional uint32 prev_hero_id = 12;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_prev_hero_id() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_prev_hero_id() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_prev_hero_id() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_prev_hero_id() {
  prev_hero_id_ = 0u;
  clear_has_prev_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::prev_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.prev_hero_id)
  return prev_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_prev_hero_id(::google::protobuf::uint32 value) {
  set_has_prev_hero_id();
  prev_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.prev_hero_id)
}

// optional uint32 prev_hero_games = 13;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_prev_hero_games() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_prev_hero_games() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_prev_hero_games() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_prev_hero_games() {
  prev_hero_games_ = 0u;
  clear_has_prev_hero_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::prev_hero_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.prev_hero_games)
  return prev_hero_games_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_prev_hero_games(::google::protobuf::uint32 value) {
  set_has_prev_hero_games();
  prev_hero_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.prev_hero_games)
}

// optional float prev_avg_tries = 14;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_prev_avg_tries() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_prev_avg_tries() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_prev_avg_tries() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_prev_avg_tries() {
  prev_avg_tries_ = 0;
  clear_has_prev_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::prev_avg_tries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.prev_avg_tries)
  return prev_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_prev_avg_tries(float value) {
  set_has_prev_avg_tries();
  prev_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.prev_avg_tries)
}

// optional float curr_avg_tries = 15;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_avg_tries() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_avg_tries() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_avg_tries() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_avg_tries() {
  curr_avg_tries_ = 0;
  clear_has_curr_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::curr_avg_tries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_avg_tries)
  return curr_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_avg_tries(float value) {
  set_has_curr_avg_tries();
  curr_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_avg_tries)
}

// optional float next_avg_tries = 16;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_next_avg_tries() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_next_avg_tries() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_next_avg_tries() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_next_avg_tries() {
  next_avg_tries_ = 0;
  clear_has_next_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::next_avg_tries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.next_avg_tries)
  return next_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_next_avg_tries(float value) {
  set_has_next_avg_tries();
  next_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.next_avg_tries)
}

// optional float full_lap_avg_tries = 17;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_full_lap_avg_tries() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_full_lap_avg_tries() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_full_lap_avg_tries() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_full_lap_avg_tries() {
  full_lap_avg_tries_ = 0;
  clear_has_full_lap_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::full_lap_avg_tries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.full_lap_avg_tries)
  return full_lap_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_full_lap_avg_tries(float value) {
  set_has_full_lap_avg_tries();
  full_lap_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.full_lap_avg_tries)
}

// optional float curr_lap_avg_tries = 18;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_curr_lap_avg_tries() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_curr_lap_avg_tries() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_curr_lap_avg_tries() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_curr_lap_avg_tries() {
  curr_lap_avg_tries_ = 0;
  clear_has_curr_lap_avg_tries();
}
inline float CMsgClientToGCGetAllHeroProgressResponse::curr_lap_avg_tries() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_lap_avg_tries)
  return curr_lap_avg_tries_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_curr_lap_avg_tries(float value) {
  set_has_curr_lap_avg_tries();
  curr_lap_avg_tries_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.curr_lap_avg_tries)
}

// optional string profile_name = 19;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_profile_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_profile_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_profile_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_profile_name() {
  profile_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_profile_name();
}
inline const ::std::string& CMsgClientToGCGetAllHeroProgressResponse::profile_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
  return profile_name_.GetNoArena();
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(const ::std::string& value) {
  set_has_profile_name();
  profile_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
#if LANG_CXX11
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(::std::string&& value) {
  set_has_profile_name();
  profile_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
#endif
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_profile_name();
  profile_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_profile_name(const char* value, size_t size) {
  set_has_profile_name();
  profile_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}
inline ::std::string* CMsgClientToGCGetAllHeroProgressResponse::mutable_profile_name() {
  set_has_profile_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
  return profile_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCGetAllHeroProgressResponse::release_profile_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
  clear_has_profile_name();
  return profile_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_allocated_profile_name(::std::string* profile_name) {
  if (profile_name != NULL) {
    set_has_profile_name();
  } else {
    clear_has_profile_name();
  }
  profile_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profile_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.profile_name)
}

// optional uint32 start_hero_id = 20;
inline bool CMsgClientToGCGetAllHeroProgressResponse::has_start_hero_id() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_has_start_hero_id() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_has_start_hero_id() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::clear_start_hero_id() {
  start_hero_id_ = 0u;
  clear_has_start_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetAllHeroProgressResponse::start_hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.start_hero_id)
  return start_hero_id_;
}
inline void CMsgClientToGCGetAllHeroProgressResponse::set_start_hero_id(::google::protobuf::uint32 value) {
  set_has_start_hero_id();
  start_hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetAllHeroProgressResponse.start_hero_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetTrophyList

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetTrophyList::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetTrophyList::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetTrophyList::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetTrophyList::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyList::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyList.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetTrophyList::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetTrophyList.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetTrophyListResponse_Trophy

// optional uint32 trophy_id = 1;
inline bool CMsgClientToGCGetTrophyListResponse_Trophy::has_trophy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_has_trophy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_has_trophy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_trophy_id() {
  trophy_id_ = 0u;
  clear_has_trophy_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse_Trophy::trophy_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy.trophy_id)
  return trophy_id_;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_trophy_id(::google::protobuf::uint32 value) {
  set_has_trophy_id();
  trophy_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy.trophy_id)
}

// optional uint32 trophy_score = 2;
inline bool CMsgClientToGCGetTrophyListResponse_Trophy::has_trophy_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_has_trophy_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_has_trophy_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_trophy_score() {
  trophy_score_ = 0u;
  clear_has_trophy_score();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse_Trophy::trophy_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy.trophy_score)
  return trophy_score_;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_trophy_score(::google::protobuf::uint32 value) {
  set_has_trophy_score();
  trophy_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy.trophy_score)
}

// optional uint32 last_updated = 3;
inline bool CMsgClientToGCGetTrophyListResponse_Trophy::has_last_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_has_last_updated() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_has_last_updated() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::clear_last_updated() {
  last_updated_ = 0u;
  clear_has_last_updated();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse_Trophy::last_updated() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy.last_updated)
  return last_updated_;
}
inline void CMsgClientToGCGetTrophyListResponse_Trophy::set_last_updated(::google::protobuf::uint32 value) {
  set_has_last_updated();
  last_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy.last_updated)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetTrophyListResponse

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetTrophyListResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetTrophyListResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyListResponse.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetTrophyListResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetTrophyListResponse.account_id)
}

// repeated .proto.dota.CMsgClientToGCGetTrophyListResponse.Trophy trophies = 2;
inline int CMsgClientToGCGetTrophyListResponse::trophies_size() const {
  return trophies_.size();
}
inline void CMsgClientToGCGetTrophyListResponse::clear_trophies() {
  trophies_.Clear();
}
inline const ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy& CMsgClientToGCGetTrophyListResponse::trophies(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_.Get(index);
}
inline ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy* CMsgClientToGCGetTrophyListResponse::mutable_trophies(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_.Mutable(index);
}
inline ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy* CMsgClientToGCGetTrophyListResponse::add_trophies() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy >*
CMsgClientToGCGetTrophyListResponse::mutable_trophies() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetTrophyListResponse.trophies)
  return &trophies_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetTrophyListResponse_Trophy >&
CMsgClientToGCGetTrophyListResponse::trophies() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetTrophyListResponse.trophies)
  return trophies_;
}

// optional string profile_name = 3;
inline bool CMsgClientToGCGetTrophyListResponse::has_profile_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetTrophyListResponse::set_has_profile_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_has_profile_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetTrophyListResponse::clear_profile_name() {
  profile_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_profile_name();
}
inline const ::std::string& CMsgClientToGCGetTrophyListResponse::profile_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
  return profile_name_.GetNoArena();
}
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(const ::std::string& value) {
  set_has_profile_name();
  profile_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
}
#if LANG_CXX11
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(::std::string&& value) {
  set_has_profile_name();
  profile_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
}
#endif
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_profile_name();
  profile_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
}
inline void CMsgClientToGCGetTrophyListResponse::set_profile_name(const char* value, size_t size) {
  set_has_profile_name();
  profile_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
}
inline ::std::string* CMsgClientToGCGetTrophyListResponse::mutable_profile_name() {
  set_has_profile_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
  return profile_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCGetTrophyListResponse::release_profile_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
  clear_has_profile_name();
  return profile_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCGetTrophyListResponse::set_allocated_profile_name(::std::string* profile_name) {
  if (profile_name != NULL) {
    set_has_profile_name();
  } else {
    clear_has_profile_name();
  }
  profile_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), profile_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCGetTrophyListResponse.profile_name)
}

// -------------------------------------------------------------------

// CMsgGCToClientTrophyAwarded

// optional uint32 trophy_id = 1;
inline bool CMsgGCToClientTrophyAwarded::has_trophy_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::set_has_trophy_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientTrophyAwarded::clear_has_trophy_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientTrophyAwarded::clear_trophy_id() {
  trophy_id_ = 0u;
  clear_has_trophy_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::trophy_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTrophyAwarded.trophy_id)
  return trophy_id_;
}
inline void CMsgGCToClientTrophyAwarded::set_trophy_id(::google::protobuf::uint32 value) {
  set_has_trophy_id();
  trophy_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTrophyAwarded.trophy_id)
}

// optional uint32 trophy_score = 2;
inline bool CMsgGCToClientTrophyAwarded::has_trophy_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::set_has_trophy_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientTrophyAwarded::clear_has_trophy_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientTrophyAwarded::clear_trophy_score() {
  trophy_score_ = 0u;
  clear_has_trophy_score();
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::trophy_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTrophyAwarded.trophy_score)
  return trophy_score_;
}
inline void CMsgGCToClientTrophyAwarded::set_trophy_score(::google::protobuf::uint32 value) {
  set_has_trophy_score();
  trophy_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTrophyAwarded.trophy_score)
}

// optional uint32 trophy_old_score = 3;
inline bool CMsgGCToClientTrophyAwarded::has_trophy_old_score() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::set_has_trophy_old_score() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientTrophyAwarded::clear_has_trophy_old_score() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientTrophyAwarded::clear_trophy_old_score() {
  trophy_old_score_ = 0u;
  clear_has_trophy_old_score();
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::trophy_old_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTrophyAwarded.trophy_old_score)
  return trophy_old_score_;
}
inline void CMsgGCToClientTrophyAwarded::set_trophy_old_score(::google::protobuf::uint32 value) {
  set_has_trophy_old_score();
  trophy_old_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTrophyAwarded.trophy_old_score)
}

// optional uint32 last_updated = 4;
inline bool CMsgGCToClientTrophyAwarded::has_last_updated() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientTrophyAwarded::set_has_last_updated() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientTrophyAwarded::clear_has_last_updated() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientTrophyAwarded::clear_last_updated() {
  last_updated_ = 0u;
  clear_has_last_updated();
}
inline ::google::protobuf::uint32 CMsgGCToClientTrophyAwarded::last_updated() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTrophyAwarded.last_updated)
  return last_updated_;
}
inline void CMsgGCToClientTrophyAwarded::set_last_updated(::google::protobuf::uint32 value) {
  set_has_last_updated();
  last_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTrophyAwarded.last_updated)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetProfileCard

// optional uint32 account_id = 1;
inline bool CMsgClientToGCGetProfileCard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetProfileCard::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetProfileCard::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetProfileCard::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetProfileCard::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetProfileCard.account_id)
  return account_id_;
}
inline void CMsgClientToGCGetProfileCard::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetProfileCard.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetProfileCardSlots_CardSlot

// optional uint32 slot_id = 1;
inline bool CMsgClientToGCSetProfileCardSlots_CardSlot::has_slot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_has_slot_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_has_slot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_slot_id() {
  slot_id_ = 0u;
  clear_has_slot_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCSetProfileCardSlots_CardSlot::slot_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot.slot_id)
  return slot_id_;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_slot_id(::google::protobuf::uint32 value) {
  set_has_slot_id();
  slot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot.slot_id)
}

// optional .proto.dota.EProfileCardSlotType slot_type = 2 [default = k_EProfileCardSlotType_Empty];
inline bool CMsgClientToGCSetProfileCardSlots_CardSlot::has_slot_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_has_slot_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_has_slot_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_slot_type() {
  slot_type_ = 0;
  clear_has_slot_type();
}
inline ::proto::dota::EProfileCardSlotType CMsgClientToGCSetProfileCardSlots_CardSlot::slot_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot.slot_type)
  return static_cast< ::proto::dota::EProfileCardSlotType >(slot_type_);
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_slot_type(::proto::dota::EProfileCardSlotType value) {
  assert(::proto::dota::EProfileCardSlotType_IsValid(value));
  set_has_slot_type();
  slot_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot.slot_type)
}

// optional uint64 slot_value = 3;
inline bool CMsgClientToGCSetProfileCardSlots_CardSlot::has_slot_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_has_slot_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_has_slot_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::clear_slot_value() {
  slot_value_ = GOOGLE_ULONGLONG(0);
  clear_has_slot_value();
}
inline ::google::protobuf::uint64 CMsgClientToGCSetProfileCardSlots_CardSlot::slot_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot.slot_value)
  return slot_value_;
}
inline void CMsgClientToGCSetProfileCardSlots_CardSlot::set_slot_value(::google::protobuf::uint64 value) {
  set_has_slot_value();
  slot_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot.slot_value)
}

// -------------------------------------------------------------------

// CMsgClientToGCSetProfileCardSlots

// repeated .proto.dota.CMsgClientToGCSetProfileCardSlots.CardSlot slots = 1;
inline int CMsgClientToGCSetProfileCardSlots::slots_size() const {
  return slots_.size();
}
inline void CMsgClientToGCSetProfileCardSlots::clear_slots() {
  slots_.Clear();
}
inline const ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot& CMsgClientToGCSetProfileCardSlots::slots(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSetProfileCardSlots.slots)
  return slots_.Get(index);
}
inline ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot* CMsgClientToGCSetProfileCardSlots::mutable_slots(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCSetProfileCardSlots.slots)
  return slots_.Mutable(index);
}
inline ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot* CMsgClientToGCSetProfileCardSlots::add_slots() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCSetProfileCardSlots.slots)
  return slots_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot >*
CMsgClientToGCSetProfileCardSlots::mutable_slots() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCSetProfileCardSlots.slots)
  return &slots_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSetProfileCardSlots_CardSlot >&
CMsgClientToGCSetProfileCardSlots::slots() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCSetProfileCardSlots.slots)
  return slots_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetProfileCardStats

// -------------------------------------------------------------------

// CMsgClientToGCCreateHeroStatue

// optional uint64 source_item = 1;
inline bool CMsgClientToGCCreateHeroStatue::has_source_item() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_source_item() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_source_item() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_source_item() {
  source_item_ = GOOGLE_ULONGLONG(0);
  clear_has_source_item();
}
inline ::google::protobuf::uint64 CMsgClientToGCCreateHeroStatue::source_item() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.source_item)
  return source_item_;
}
inline void CMsgClientToGCCreateHeroStatue::set_source_item(::google::protobuf::uint64 value) {
  set_has_source_item();
  source_item_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.source_item)
}

// optional uint32 hero_id = 3;
inline bool CMsgClientToGCCreateHeroStatue::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateHeroStatue::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCCreateHeroStatue::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.hero_id)
}

// optional string sequence_name = 4;
inline bool CMsgClientToGCCreateHeroStatue::has_sequence_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_sequence_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_sequence_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_sequence_name() {
  sequence_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sequence_name();
}
inline const ::std::string& CMsgClientToGCCreateHeroStatue::sequence_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
  return sequence_name_.GetNoArena();
}
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(const ::std::string& value) {
  set_has_sequence_name();
  sequence_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
}
#if LANG_CXX11
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(::std::string&& value) {
  set_has_sequence_name();
  sequence_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
}
#endif
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sequence_name();
  sequence_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
}
inline void CMsgClientToGCCreateHeroStatue::set_sequence_name(const char* value, size_t size) {
  set_has_sequence_name();
  sequence_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::mutable_sequence_name() {
  set_has_sequence_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
  return sequence_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::release_sequence_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
  clear_has_sequence_name();
  return sequence_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCCreateHeroStatue::set_allocated_sequence_name(::std::string* sequence_name) {
  if (sequence_name != NULL) {
    set_has_sequence_name();
  } else {
    clear_has_sequence_name();
  }
  sequence_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sequence_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCCreateHeroStatue.sequence_name)
}

// optional float cycle = 5;
inline bool CMsgClientToGCCreateHeroStatue::has_cycle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_cycle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_cycle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_cycle() {
  cycle_ = 0;
  clear_has_cycle();
}
inline float CMsgClientToGCCreateHeroStatue::cycle() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.cycle)
  return cycle_;
}
inline void CMsgClientToGCCreateHeroStatue::set_cycle(float value) {
  set_has_cycle();
  cycle_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.cycle)
}

// repeated uint32 wearables = 6;
inline int CMsgClientToGCCreateHeroStatue::wearables_size() const {
  return wearables_.size();
}
inline void CMsgClientToGCCreateHeroStatue::clear_wearables() {
  wearables_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateHeroStatue::wearables(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.wearables)
  return wearables_.Get(index);
}
inline void CMsgClientToGCCreateHeroStatue::set_wearables(int index, ::google::protobuf::uint32 value) {
  wearables_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.wearables)
}
inline void CMsgClientToGCCreateHeroStatue::add_wearables(::google::protobuf::uint32 value) {
  wearables_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCCreateHeroStatue.wearables)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCCreateHeroStatue::wearables() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCCreateHeroStatue.wearables)
  return wearables_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCCreateHeroStatue::mutable_wearables() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCCreateHeroStatue.wearables)
  return &wearables_;
}

// optional string inscription = 7;
inline bool CMsgClientToGCCreateHeroStatue::has_inscription() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_inscription() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_inscription() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_inscription() {
  inscription_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inscription();
}
inline const ::std::string& CMsgClientToGCCreateHeroStatue::inscription() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
  return inscription_.GetNoArena();
}
inline void CMsgClientToGCCreateHeroStatue::set_inscription(const ::std::string& value) {
  set_has_inscription();
  inscription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
}
#if LANG_CXX11
inline void CMsgClientToGCCreateHeroStatue::set_inscription(::std::string&& value) {
  set_has_inscription();
  inscription_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
}
#endif
inline void CMsgClientToGCCreateHeroStatue::set_inscription(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_inscription();
  inscription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
}
inline void CMsgClientToGCCreateHeroStatue::set_inscription(const char* value, size_t size) {
  set_has_inscription();
  inscription_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::mutable_inscription() {
  set_has_inscription();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
  return inscription_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCCreateHeroStatue::release_inscription() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
  clear_has_inscription();
  return inscription_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCCreateHeroStatue::set_allocated_inscription(::std::string* inscription) {
  if (inscription != NULL) {
    set_has_inscription();
  } else {
    clear_has_inscription();
  }
  inscription_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inscription);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCCreateHeroStatue.inscription)
}

// repeated uint32 styles = 8;
inline int CMsgClientToGCCreateHeroStatue::styles_size() const {
  return styles_.size();
}
inline void CMsgClientToGCCreateHeroStatue::clear_styles() {
  styles_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreateHeroStatue::styles(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.styles)
  return styles_.Get(index);
}
inline void CMsgClientToGCCreateHeroStatue::set_styles(int index, ::google::protobuf::uint32 value) {
  styles_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.styles)
}
inline void CMsgClientToGCCreateHeroStatue::add_styles(::google::protobuf::uint32 value) {
  styles_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCCreateHeroStatue.styles)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCCreateHeroStatue::styles() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCCreateHeroStatue.styles)
  return styles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCCreateHeroStatue::mutable_styles() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCCreateHeroStatue.styles)
  return &styles_;
}

// optional uint64 reforger_item = 9;
inline bool CMsgClientToGCCreateHeroStatue::has_reforger_item() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_reforger_item() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_reforger_item() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_reforger_item() {
  reforger_item_ = GOOGLE_ULONGLONG(0);
  clear_has_reforger_item();
}
inline ::google::protobuf::uint64 CMsgClientToGCCreateHeroStatue::reforger_item() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.reforger_item)
  return reforger_item_;
}
inline void CMsgClientToGCCreateHeroStatue::set_reforger_item(::google::protobuf::uint64 value) {
  set_has_reforger_item();
  reforger_item_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.reforger_item)
}

// optional bool tournament_drop = 10;
inline bool CMsgClientToGCCreateHeroStatue::has_tournament_drop() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientToGCCreateHeroStatue::set_has_tournament_drop() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_has_tournament_drop() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientToGCCreateHeroStatue::clear_tournament_drop() {
  tournament_drop_ = false;
  clear_has_tournament_drop();
}
inline bool CMsgClientToGCCreateHeroStatue::tournament_drop() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreateHeroStatue.tournament_drop)
  return tournament_drop_;
}
inline void CMsgClientToGCCreateHeroStatue::set_tournament_drop(bool value) {
  set_has_tournament_drop();
  tournament_drop_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreateHeroStatue.tournament_drop)
}

// -------------------------------------------------------------------

// CMsgGCToClientHeroStatueCreateResult

// optional uint64 resulting_item = 1;
inline bool CMsgGCToClientHeroStatueCreateResult::has_resulting_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientHeroStatueCreateResult::set_has_resulting_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientHeroStatueCreateResult::clear_has_resulting_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientHeroStatueCreateResult::clear_resulting_item() {
  resulting_item_ = GOOGLE_ULONGLONG(0);
  clear_has_resulting_item();
}
inline ::google::protobuf::uint64 CMsgGCToClientHeroStatueCreateResult::resulting_item() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientHeroStatueCreateResult.resulting_item)
  return resulting_item_;
}
inline void CMsgGCToClientHeroStatueCreateResult::set_resulting_item(::google::protobuf::uint64 value) {
  set_has_resulting_item();
  resulting_item_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientHeroStatueCreateResult.resulting_item)
}

// -------------------------------------------------------------------

// CMsgClientToGCRecordCompendiumStats

// optional uint32 league_id = 1;
inline bool CMsgClientToGCRecordCompendiumStats::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecordCompendiumStats.league_id)
  return league_id_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecordCompendiumStats.league_id)
}

// optional uint32 view_duration_s = 2;
inline bool CMsgClientToGCRecordCompendiumStats::has_view_duration_s() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_view_duration_s() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_view_duration_s() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_view_duration_s() {
  view_duration_s_ = 0u;
  clear_has_view_duration_s();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::view_duration_s() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecordCompendiumStats.view_duration_s)
  return view_duration_s_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_view_duration_s(::google::protobuf::uint32 value) {
  set_has_view_duration_s();
  view_duration_s_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecordCompendiumStats.view_duration_s)
}

// optional uint32 videos_viewed = 3;
inline bool CMsgClientToGCRecordCompendiumStats::has_videos_viewed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_videos_viewed() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_videos_viewed() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_videos_viewed() {
  videos_viewed_ = 0u;
  clear_has_videos_viewed();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::videos_viewed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecordCompendiumStats.videos_viewed)
  return videos_viewed_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_videos_viewed(::google::protobuf::uint32 value) {
  set_has_videos_viewed();
  videos_viewed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecordCompendiumStats.videos_viewed)
}

// optional uint32 page_turns = 4;
inline bool CMsgClientToGCRecordCompendiumStats::has_page_turns() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_page_turns() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_page_turns() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_page_turns() {
  page_turns_ = 0u;
  clear_has_page_turns();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::page_turns() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecordCompendiumStats.page_turns)
  return page_turns_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_page_turns(::google::protobuf::uint32 value) {
  set_has_page_turns();
  page_turns_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecordCompendiumStats.page_turns)
}

// optional uint32 links_followed = 5;
inline bool CMsgClientToGCRecordCompendiumStats::has_links_followed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCRecordCompendiumStats::set_has_links_followed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_has_links_followed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCRecordCompendiumStats::clear_links_followed() {
  links_followed_ = 0u;
  clear_has_links_followed();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecordCompendiumStats::links_followed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecordCompendiumStats.links_followed)
  return links_followed_;
}
inline void CMsgClientToGCRecordCompendiumStats::set_links_followed(::google::protobuf::uint32 value) {
  set_has_links_followed();
  links_followed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecordCompendiumStats.links_followed)
}

// -------------------------------------------------------------------

// CMsgGCToClientEventStatusChanged

// optional .proto.dota.EEvent active_event = 2 [default = EVENT_ID_NONE];
inline bool CMsgGCToClientEventStatusChanged::has_active_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientEventStatusChanged::set_has_active_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientEventStatusChanged::clear_has_active_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientEventStatusChanged::clear_active_event() {
  active_event_ = 0;
  clear_has_active_event();
}
inline ::proto::dota::EEvent CMsgGCToClientEventStatusChanged::active_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientEventStatusChanged.active_event)
  return static_cast< ::proto::dota::EEvent >(active_event_);
}
inline void CMsgGCToClientEventStatusChanged::set_active_event(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  set_has_active_event();
  active_event_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientEventStatusChanged.active_event)
}

// -------------------------------------------------------------------

// CMsgClientToGCPlayerStatsRequest

// optional uint32 account_id = 1;
inline bool CMsgClientToGCPlayerStatsRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCPlayerStatsRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCPlayerStatsRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCPlayerStatsRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCPlayerStatsRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCPlayerStatsRequest.account_id)
  return account_id_;
}
inline void CMsgClientToGCPlayerStatsRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCPlayerStatsRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientPlayerStatsResponse

// optional uint32 account_id = 1;
inline bool CMsgGCToClientPlayerStatsResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.account_id)
  return account_id_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.account_id)
}

// repeated float player_stats = 2;
inline int CMsgGCToClientPlayerStatsResponse::player_stats_size() const {
  return player_stats_.size();
}
inline void CMsgGCToClientPlayerStatsResponse::clear_player_stats() {
  player_stats_.Clear();
}
inline float CMsgGCToClientPlayerStatsResponse::player_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.player_stats)
  return player_stats_.Get(index);
}
inline void CMsgGCToClientPlayerStatsResponse::set_player_stats(int index, float value) {
  player_stats_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.player_stats)
}
inline void CMsgGCToClientPlayerStatsResponse::add_player_stats(float value) {
  player_stats_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientPlayerStatsResponse.player_stats)
}
inline const ::google::protobuf::RepeatedField< float >&
CMsgGCToClientPlayerStatsResponse::player_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientPlayerStatsResponse.player_stats)
  return player_stats_;
}
inline ::google::protobuf::RepeatedField< float >*
CMsgGCToClientPlayerStatsResponse::mutable_player_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientPlayerStatsResponse.player_stats)
  return &player_stats_;
}

// optional uint32 match_count = 3;
inline bool CMsgGCToClientPlayerStatsResponse::has_match_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_match_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_match_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_match_count() {
  match_count_ = 0u;
  clear_has_match_count();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::match_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.match_count)
  return match_count_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_match_count(::google::protobuf::uint32 value) {
  set_has_match_count();
  match_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.match_count)
}

// optional float mean_gpm = 4;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_gpm() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_mean_gpm() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_mean_gpm() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_gpm() {
  mean_gpm_ = 0;
  clear_has_mean_gpm();
}
inline float CMsgGCToClientPlayerStatsResponse::mean_gpm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_gpm)
  return mean_gpm_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_gpm(float value) {
  set_has_mean_gpm();
  mean_gpm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_gpm)
}

// optional float mean_xppm = 5;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_xppm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_mean_xppm() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_mean_xppm() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_xppm() {
  mean_xppm_ = 0;
  clear_has_mean_xppm();
}
inline float CMsgGCToClientPlayerStatsResponse::mean_xppm() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_xppm)
  return mean_xppm_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_xppm(float value) {
  set_has_mean_xppm();
  mean_xppm_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_xppm)
}

// optional float mean_lasthits = 6;
inline bool CMsgGCToClientPlayerStatsResponse::has_mean_lasthits() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_mean_lasthits() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_mean_lasthits() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_mean_lasthits() {
  mean_lasthits_ = 0;
  clear_has_mean_lasthits();
}
inline float CMsgGCToClientPlayerStatsResponse::mean_lasthits() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_lasthits)
  return mean_lasthits_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_mean_lasthits(float value) {
  set_has_mean_lasthits();
  mean_lasthits_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.mean_lasthits)
}

// optional uint32 rampages = 7;
inline bool CMsgGCToClientPlayerStatsResponse::has_rampages() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_rampages() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_rampages() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_rampages() {
  rampages_ = 0u;
  clear_has_rampages();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::rampages() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.rampages)
  return rampages_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_rampages(::google::protobuf::uint32 value) {
  set_has_rampages();
  rampages_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.rampages)
}

// optional uint32 triple_kills = 8;
inline bool CMsgGCToClientPlayerStatsResponse::has_triple_kills() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_triple_kills() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_triple_kills() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_triple_kills() {
  triple_kills_ = 0u;
  clear_has_triple_kills();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::triple_kills() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.triple_kills)
  return triple_kills_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_triple_kills(::google::protobuf::uint32 value) {
  set_has_triple_kills();
  triple_kills_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.triple_kills)
}

// optional uint32 first_blood_claimed = 9;
inline bool CMsgGCToClientPlayerStatsResponse::has_first_blood_claimed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_first_blood_claimed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_first_blood_claimed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_first_blood_claimed() {
  first_blood_claimed_ = 0u;
  clear_has_first_blood_claimed();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::first_blood_claimed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.first_blood_claimed)
  return first_blood_claimed_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_first_blood_claimed(::google::protobuf::uint32 value) {
  set_has_first_blood_claimed();
  first_blood_claimed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.first_blood_claimed)
}

// optional uint32 first_blood_given = 10;
inline bool CMsgGCToClientPlayerStatsResponse::has_first_blood_given() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_first_blood_given() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_first_blood_given() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_first_blood_given() {
  first_blood_given_ = 0u;
  clear_has_first_blood_given();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::first_blood_given() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.first_blood_given)
  return first_blood_given_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_first_blood_given(::google::protobuf::uint32 value) {
  set_has_first_blood_given();
  first_blood_given_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.first_blood_given)
}

// optional uint32 couriers_killed = 11;
inline bool CMsgGCToClientPlayerStatsResponse::has_couriers_killed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_couriers_killed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_couriers_killed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_couriers_killed() {
  couriers_killed_ = 0u;
  clear_has_couriers_killed();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::couriers_killed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.couriers_killed)
  return couriers_killed_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_couriers_killed(::google::protobuf::uint32 value) {
  set_has_couriers_killed();
  couriers_killed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.couriers_killed)
}

// optional uint32 aegises_snatched = 12;
inline bool CMsgGCToClientPlayerStatsResponse::has_aegises_snatched() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_aegises_snatched() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_aegises_snatched() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_aegises_snatched() {
  aegises_snatched_ = 0u;
  clear_has_aegises_snatched();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::aegises_snatched() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.aegises_snatched)
  return aegises_snatched_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_aegises_snatched(::google::protobuf::uint32 value) {
  set_has_aegises_snatched();
  aegises_snatched_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.aegises_snatched)
}

// optional uint32 cheeses_eaten = 13;
inline bool CMsgGCToClientPlayerStatsResponse::has_cheeses_eaten() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_cheeses_eaten() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_cheeses_eaten() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_cheeses_eaten() {
  cheeses_eaten_ = 0u;
  clear_has_cheeses_eaten();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::cheeses_eaten() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.cheeses_eaten)
  return cheeses_eaten_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_cheeses_eaten(::google::protobuf::uint32 value) {
  set_has_cheeses_eaten();
  cheeses_eaten_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.cheeses_eaten)
}

// optional uint32 creeps_stacked = 14;
inline bool CMsgGCToClientPlayerStatsResponse::has_creeps_stacked() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_creeps_stacked() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_creeps_stacked() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_creeps_stacked() {
  creeps_stacked_ = 0u;
  clear_has_creeps_stacked();
}
inline ::google::protobuf::uint32 CMsgGCToClientPlayerStatsResponse::creeps_stacked() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.creeps_stacked)
  return creeps_stacked_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_creeps_stacked(::google::protobuf::uint32 value) {
  set_has_creeps_stacked();
  creeps_stacked_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.creeps_stacked)
}

// optional float fight_score = 15;
inline bool CMsgGCToClientPlayerStatsResponse::has_fight_score() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_fight_score() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_fight_score() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_fight_score() {
  fight_score_ = 0;
  clear_has_fight_score();
}
inline float CMsgGCToClientPlayerStatsResponse::fight_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.fight_score)
  return fight_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_fight_score(float value) {
  set_has_fight_score();
  fight_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.fight_score)
}

// optional float farm_score = 16;
inline bool CMsgGCToClientPlayerStatsResponse::has_farm_score() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_farm_score() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_farm_score() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_farm_score() {
  farm_score_ = 0;
  clear_has_farm_score();
}
inline float CMsgGCToClientPlayerStatsResponse::farm_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.farm_score)
  return farm_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_farm_score(float value) {
  set_has_farm_score();
  farm_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.farm_score)
}

// optional float support_score = 17;
inline bool CMsgGCToClientPlayerStatsResponse::has_support_score() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_support_score() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_support_score() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_support_score() {
  support_score_ = 0;
  clear_has_support_score();
}
inline float CMsgGCToClientPlayerStatsResponse::support_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.support_score)
  return support_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_support_score(float value) {
  set_has_support_score();
  support_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.support_score)
}

// optional float push_score = 18;
inline bool CMsgGCToClientPlayerStatsResponse::has_push_score() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_push_score() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_push_score() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_push_score() {
  push_score_ = 0;
  clear_has_push_score();
}
inline float CMsgGCToClientPlayerStatsResponse::push_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.push_score)
  return push_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_push_score(float value) {
  set_has_push_score();
  push_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.push_score)
}

// optional float versatility_score = 19;
inline bool CMsgGCToClientPlayerStatsResponse::has_versatility_score() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgGCToClientPlayerStatsResponse::set_has_versatility_score() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_has_versatility_score() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgGCToClientPlayerStatsResponse::clear_versatility_score() {
  versatility_score_ = 0;
  clear_has_versatility_score();
}
inline float CMsgGCToClientPlayerStatsResponse::versatility_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlayerStatsResponse.versatility_score)
  return versatility_score_;
}
inline void CMsgGCToClientPlayerStatsResponse::set_versatility_score(float value) {
  set_has_versatility_score();
  versatility_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlayerStatsResponse.versatility_score)
}

// -------------------------------------------------------------------

// CMsgClientToGCCustomGamePlayerCountRequest

// optional uint64 custom_game_id = 1;
inline bool CMsgClientToGCCustomGamePlayerCountRequest::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCCustomGamePlayerCountRequest::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCustomGamePlayerCountRequest.custom_game_id)
  return custom_game_id_;
}
inline void CMsgClientToGCCustomGamePlayerCountRequest::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCustomGamePlayerCountRequest.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientCustomGamePlayerCountResponse

// optional uint64 custom_game_id = 1;
inline bool CMsgGCToClientCustomGamePlayerCountResponse::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamePlayerCountResponse::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse.custom_game_id)
}

// optional uint64 player_count = 2;
inline bool CMsgGCToClientCustomGamePlayerCountResponse::has_player_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_has_player_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_has_player_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_player_count() {
  player_count_ = GOOGLE_ULONGLONG(0);
  clear_has_player_count();
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamePlayerCountResponse::player_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse.player_count)
  return player_count_;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_player_count(::google::protobuf::uint64 value) {
  set_has_player_count();
  player_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse.player_count)
}

// optional uint64 spectator_count = 3;
inline bool CMsgGCToClientCustomGamePlayerCountResponse::has_spectator_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_has_spectator_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_has_spectator_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::clear_spectator_count() {
  spectator_count_ = GOOGLE_ULONGLONG(0);
  clear_has_spectator_count();
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamePlayerCountResponse::spectator_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse.spectator_count)
  return spectator_count_;
}
inline void CMsgGCToClientCustomGamePlayerCountResponse::set_spectator_count(::google::protobuf::uint64 value) {
  set_has_spectator_count();
  spectator_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCustomGamePlayerCountResponse.spectator_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCCustomGamesFriendsPlayedRequest

// -------------------------------------------------------------------

// CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame

// optional uint64 custom_game_id = 1;
inline bool CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.custom_game_id)
}

// repeated uint32 account_ids = 2;
inline int CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgGCToClientCustomGamesFriendsPlayedResponse

// optional uint32 account_id = 1;
inline bool CMsgGCToClientCustomGamesFriendsPlayedResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientCustomGamesFriendsPlayedResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.account_id)
  return account_id_;
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.account_id)
}

// repeated .proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.CustomGame games = 2;
inline int CMsgGCToClientCustomGamesFriendsPlayedResponse::games_size() const {
  return games_.size();
}
inline void CMsgGCToClientCustomGamesFriendsPlayedResponse::clear_games() {
  games_.Clear();
}
inline const ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame& CMsgGCToClientCustomGamesFriendsPlayedResponse::games(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_.Get(index);
}
inline ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* CMsgGCToClientCustomGamesFriendsPlayedResponse::mutable_games(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_.Mutable(index);
}
inline ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame* CMsgGCToClientCustomGamesFriendsPlayedResponse::add_games() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >*
CMsgGCToClientCustomGamesFriendsPlayedResponse::mutable_games() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return &games_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientCustomGamesFriendsPlayedResponse_CustomGame >&
CMsgGCToClientCustomGamesFriendsPlayedResponse::games() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientCustomGamesFriendsPlayedResponse.games)
  return games_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialFeedPostCommentRequest

// optional uint64 event_id = 1;
inline bool CMsgClientToGCSocialFeedPostCommentRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_event_id() {
  event_id_ = GOOGLE_ULONGLONG(0);
  clear_has_event_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialFeedPostCommentRequest::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.event_id)
  return event_id_;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_event_id(::google::protobuf::uint64 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.event_id)
}

// optional string comment = 2;
inline bool CMsgClientToGCSocialFeedPostCommentRequest::has_comment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_has_comment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_has_comment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
inline const ::std::string& CMsgClientToGCSocialFeedPostCommentRequest::comment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
  return comment_.GetNoArena();
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
#if LANG_CXX11
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
#endif
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
}
inline ::std::string* CMsgClientToGCSocialFeedPostCommentRequest::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCSocialFeedPostCommentRequest::release_comment() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCSocialFeedPostCommentRequest::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCSocialFeedPostCommentRequest.comment)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialFeedPostCommentResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialFeedPostCommentResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCToClientSocialFeedPostCommentResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialFeedPostCommentResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialFeedPostCommentResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialFeedPostCommentResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialFeedPostMessageRequest

// optional string message = 1;
inline bool CMsgClientToGCSocialFeedPostMessageRequest::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CMsgClientToGCSocialFeedPostMessageRequest::message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
  return message_.GetNoArena();
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
}
#if LANG_CXX11
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
}
#endif
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
}
inline ::std::string* CMsgClientToGCSocialFeedPostMessageRequest::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCSocialFeedPostMessageRequest::release_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.message)
}

// optional uint64 match_id = 2;
inline bool CMsgClientToGCSocialFeedPostMessageRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialFeedPostMessageRequest::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.match_id)
  return match_id_;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.match_id)
}

// optional uint32 match_timestamp = 3;
inline bool CMsgClientToGCSocialFeedPostMessageRequest::has_match_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_has_match_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_has_match_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::clear_match_timestamp() {
  match_timestamp_ = 0u;
  clear_has_match_timestamp();
}
inline ::google::protobuf::uint32 CMsgClientToGCSocialFeedPostMessageRequest::match_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.match_timestamp)
  return match_timestamp_;
}
inline void CMsgClientToGCSocialFeedPostMessageRequest::set_match_timestamp(::google::protobuf::uint32 value) {
  set_has_match_timestamp();
  match_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialFeedPostMessageRequest.match_timestamp)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialFeedPostMessageResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialFeedPostMessageResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCToClientSocialFeedPostMessageResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialFeedPostMessageResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialFeedPostMessageResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialFeedPostMessageResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCFriendsPlayedCustomGameRequest

// optional uint64 custom_game_id = 1;
inline bool CMsgClientToGCFriendsPlayedCustomGameRequest::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCFriendsPlayedCustomGameRequest::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCFriendsPlayedCustomGameRequest.custom_game_id)
  return custom_game_id_;
}
inline void CMsgClientToGCFriendsPlayedCustomGameRequest::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCFriendsPlayedCustomGameRequest.custom_game_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientFriendsPlayedCustomGameResponse

// optional uint64 custom_game_id = 1;
inline bool CMsgGCToClientFriendsPlayedCustomGameResponse::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgGCToClientFriendsPlayedCustomGameResponse::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.custom_game_id)
  return custom_game_id_;
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.custom_game_id)
}

// repeated uint32 account_ids = 2;
inline int CMsgGCToClientFriendsPlayedCustomGameResponse::account_ids_size() const {
  return account_ids_.size();
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::clear_account_ids() {
  account_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientFriendsPlayedCustomGameResponse::account_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
  return account_ids_.Get(index);
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::set_account_ids(int index, ::google::protobuf::uint32 value) {
  account_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
}
inline void CMsgGCToClientFriendsPlayedCustomGameResponse::add_account_ids(::google::protobuf::uint32 value) {
  account_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientFriendsPlayedCustomGameResponse::account_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
  return account_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientFriendsPlayedCustomGameResponse::mutable_account_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientFriendsPlayedCustomGameResponse.account_ids)
  return &account_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCFeaturedHeroesRequest

// -------------------------------------------------------------------

// CMsgGCToClientFeaturedHeroesResponse_DataField

// optional .proto.dota.EFeaturedHeroDataType data_type = 1 [default = k_EFeaturedHeroDataType_HeroID];
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_data_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_data_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
inline ::proto::dota::EFeaturedHeroDataType CMsgGCToClientFeaturedHeroesResponse_DataField::data_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.data_type)
  return static_cast< ::proto::dota::EFeaturedHeroDataType >(data_type_);
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_data_type(::proto::dota::EFeaturedHeroDataType value) {
  assert(::proto::dota::EFeaturedHeroDataType_IsValid(value));
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.data_type)
}

// optional uint32 uint32_value = 2;
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_uint32_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_uint32_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_uint32_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_uint32_value() {
  uint32_value_ = 0u;
  clear_has_uint32_value();
}
inline ::google::protobuf::uint32 CMsgGCToClientFeaturedHeroesResponse_DataField::uint32_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.uint32_value)
  return uint32_value_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_uint32_value(::google::protobuf::uint32 value) {
  set_has_uint32_value();
  uint32_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.uint32_value)
}

// optional uint64 uint64_value = 3;
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_uint64_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_uint64_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_uint64_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_uint64_value() {
  uint64_value_ = GOOGLE_ULONGLONG(0);
  clear_has_uint64_value();
}
inline ::google::protobuf::uint64 CMsgGCToClientFeaturedHeroesResponse_DataField::uint64_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.uint64_value)
  return uint64_value_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_uint64_value(::google::protobuf::uint64 value) {
  set_has_uint64_value();
  uint64_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.uint64_value)
}

// optional string string_value = 4;
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_string_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_string_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_string_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_string_value() {
  string_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_value();
}
inline const ::std::string& CMsgGCToClientFeaturedHeroesResponse_DataField::string_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
  return string_value_.GetNoArena();
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_string_value(const ::std::string& value) {
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}
#if LANG_CXX11
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_string_value(::std::string&& value) {
  set_has_string_value();
  string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}
#endif
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_string_value(const char* value, size_t size) {
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}
inline ::std::string* CMsgGCToClientFeaturedHeroesResponse_DataField::mutable_string_value() {
  set_has_string_value();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
  return string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientFeaturedHeroesResponse_DataField::release_string_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
  clear_has_string_value();
  return string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_allocated_string_value(::std::string* string_value) {
  if (string_value != NULL) {
    set_has_string_value();
  } else {
    clear_has_string_value();
  }
  string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.string_value)
}

// optional float float_value = 5;
inline bool CMsgGCToClientFeaturedHeroesResponse_DataField::has_float_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_has_float_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_has_float_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::clear_float_value() {
  float_value_ = 0;
  clear_has_float_value();
}
inline float CMsgGCToClientFeaturedHeroesResponse_DataField::float_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.float_value)
  return float_value_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_DataField::set_float_value(float value) {
  set_has_float_value();
  float_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField.float_value)
}

// -------------------------------------------------------------------

// CMsgGCToClientFeaturedHeroesResponse_FeaturedHero

// repeated .proto.dota.CMsgGCToClientFeaturedHeroesResponse.DataField data_fields = 1;
inline int CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::data_fields_size() const {
  return data_fields_.size();
}
inline void CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::clear_data_fields() {
  data_fields_.Clear();
}
inline const ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_DataField& CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::data_fields(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return data_fields_.Get(index);
}
inline ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_DataField* CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::mutable_data_fields(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return data_fields_.Mutable(index);
}
inline ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_DataField* CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::add_data_fields() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return data_fields_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_DataField >*
CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::mutable_data_fields() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return &data_fields_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_DataField >&
CMsgGCToClientFeaturedHeroesResponse_FeaturedHero::data_fields() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientFeaturedHeroesResponse.FeaturedHero.data_fields)
  return data_fields_;
}

// -------------------------------------------------------------------

// CMsgGCToClientFeaturedHeroesResponse_Category

// optional int32 category_weight = 1;
inline bool CMsgGCToClientFeaturedHeroesResponse_Category::has_category_weight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::set_has_category_weight() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::clear_has_category_weight() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::clear_category_weight() {
  category_weight_ = 0;
  clear_has_category_weight();
}
inline ::google::protobuf::int32 CMsgGCToClientFeaturedHeroesResponse_Category::category_weight() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category.category_weight)
  return category_weight_;
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::set_category_weight(::google::protobuf::int32 value) {
  set_has_category_weight();
  category_weight_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category.category_weight)
}

// repeated .proto.dota.EFeaturedHeroTextField text_fields = 2;
inline int CMsgGCToClientFeaturedHeroesResponse_Category::text_fields_size() const {
  return text_fields_.size();
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::clear_text_fields() {
  text_fields_.Clear();
}
inline ::proto::dota::EFeaturedHeroTextField CMsgGCToClientFeaturedHeroesResponse_Category::text_fields(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
  return static_cast< ::proto::dota::EFeaturedHeroTextField >(text_fields_.Get(index));
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::set_text_fields(int index, ::proto::dota::EFeaturedHeroTextField value) {
  assert(::proto::dota::EFeaturedHeroTextField_IsValid(value));
  text_fields_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::add_text_fields(::proto::dota::EFeaturedHeroTextField value) {
  assert(::proto::dota::EFeaturedHeroTextField_IsValid(value));
  text_fields_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgGCToClientFeaturedHeroesResponse_Category::text_fields() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
  return text_fields_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgGCToClientFeaturedHeroesResponse_Category::mutable_text_fields() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category.text_fields)
  return &text_fields_;
}

// repeated .proto.dota.CMsgGCToClientFeaturedHeroesResponse.FeaturedHero featured_heroes = 3;
inline int CMsgGCToClientFeaturedHeroesResponse_Category::featured_heroes_size() const {
  return featured_heroes_.size();
}
inline void CMsgGCToClientFeaturedHeroesResponse_Category::clear_featured_heroes() {
  featured_heroes_.Clear();
}
inline const ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero& CMsgGCToClientFeaturedHeroesResponse_Category::featured_heroes(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return featured_heroes_.Get(index);
}
inline ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* CMsgGCToClientFeaturedHeroesResponse_Category::mutable_featured_heroes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return featured_heroes_.Mutable(index);
}
inline ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero* CMsgGCToClientFeaturedHeroesResponse_Category::add_featured_heroes() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return featured_heroes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero >*
CMsgGCToClientFeaturedHeroesResponse_Category::mutable_featured_heroes() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return &featured_heroes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_FeaturedHero >&
CMsgGCToClientFeaturedHeroesResponse_Category::featured_heroes() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category.featured_heroes)
  return featured_heroes_;
}

// -------------------------------------------------------------------

// CMsgGCToClientFeaturedHeroesResponse

// repeated .proto.dota.CMsgGCToClientFeaturedHeroesResponse.Category categories = 1;
inline int CMsgGCToClientFeaturedHeroesResponse::categories_size() const {
  return categories_.size();
}
inline void CMsgGCToClientFeaturedHeroesResponse::clear_categories() {
  categories_.Clear();
}
inline const ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_Category& CMsgGCToClientFeaturedHeroesResponse::categories(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientFeaturedHeroesResponse.categories)
  return categories_.Get(index);
}
inline ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_Category* CMsgGCToClientFeaturedHeroesResponse::mutable_categories(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientFeaturedHeroesResponse.categories)
  return categories_.Mutable(index);
}
inline ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_Category* CMsgGCToClientFeaturedHeroesResponse::add_categories() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientFeaturedHeroesResponse.categories)
  return categories_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_Category >*
CMsgGCToClientFeaturedHeroesResponse::mutable_categories() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientFeaturedHeroesResponse.categories)
  return &categories_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientFeaturedHeroesResponse_Category >&
CMsgGCToClientFeaturedHeroesResponse::categories() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientFeaturedHeroesResponse.categories)
  return categories_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialMatchPostCommentRequest

// optional uint64 match_id = 1;
inline bool CMsgClientToGCSocialMatchPostCommentRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialMatchPostCommentRequest::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.match_id)
  return match_id_;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.match_id)
}

// optional string comment = 2;
inline bool CMsgClientToGCSocialMatchPostCommentRequest::has_comment() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_has_comment() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_has_comment() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
inline const ::std::string& CMsgClientToGCSocialMatchPostCommentRequest::comment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
  return comment_.GetNoArena();
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
#if LANG_CXX11
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
#endif
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
}
inline ::std::string* CMsgClientToGCSocialMatchPostCommentRequest::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCSocialMatchPostCommentRequest::release_comment() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCSocialMatchPostCommentRequest::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCSocialMatchPostCommentRequest.comment)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialMatchPostCommentResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialMatchPostCommentResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCToClientSocialMatchPostCommentResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchPostCommentResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialMatchPostCommentResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialMatchPostCommentResponse.success)
}

// -------------------------------------------------------------------

// CMsgClientToGCSocialMatchDetailsRequest

// optional uint64 match_id = 1;
inline bool CMsgClientToGCSocialMatchDetailsRequest::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSocialMatchDetailsRequest::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialMatchDetailsRequest.match_id)
  return match_id_;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialMatchDetailsRequest.match_id)
}

// optional uint32 pagination_timestamp = 2;
inline bool CMsgClientToGCSocialMatchDetailsRequest::has_pagination_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_has_pagination_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_has_pagination_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::clear_pagination_timestamp() {
  pagination_timestamp_ = 0u;
  clear_has_pagination_timestamp();
}
inline ::google::protobuf::uint32 CMsgClientToGCSocialMatchDetailsRequest::pagination_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSocialMatchDetailsRequest.pagination_timestamp)
  return pagination_timestamp_;
}
inline void CMsgClientToGCSocialMatchDetailsRequest::set_pagination_timestamp(::google::protobuf::uint32 value) {
  set_has_pagination_timestamp();
  pagination_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSocialMatchDetailsRequest.pagination_timestamp)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialMatchDetailsResponse_Comment

// optional uint32 account_id = 1;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_has_account_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientSocialMatchDetailsResponse_Comment::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.account_id)
  return account_id_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.account_id)
}

// optional string persona_name = 2;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_persona_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_has_persona_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_has_persona_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_persona_name() {
  persona_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_persona_name();
}
inline const ::std::string& CMsgGCToClientSocialMatchDetailsResponse_Comment::persona_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
  return persona_name_.GetNoArena();
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(const ::std::string& value) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
#if LANG_CXX11
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(::std::string&& value) {
  set_has_persona_name();
  persona_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
#endif
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_persona_name(const char* value, size_t size) {
  set_has_persona_name();
  persona_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::mutable_persona_name() {
  set_has_persona_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
  return persona_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::release_persona_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
  clear_has_persona_name();
  return persona_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_allocated_persona_name(::std::string* persona_name) {
  if (persona_name != NULL) {
    set_has_persona_name();
  } else {
    clear_has_persona_name();
  }
  persona_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.persona_name)
}

// optional uint32 timestamp = 3;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgGCToClientSocialMatchDetailsResponse_Comment::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.timestamp)
  return timestamp_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.timestamp)
}

// optional string comment = 4;
inline bool CMsgGCToClientSocialMatchDetailsResponse_Comment::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_has_comment() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_has_comment() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
inline const ::std::string& CMsgGCToClientSocialMatchDetailsResponse_Comment::comment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
  return comment_.GetNoArena();
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
#if LANG_CXX11
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
#endif
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientSocialMatchDetailsResponse_Comment::release_comment() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientSocialMatchDetailsResponse_Comment::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment.comment)
}

// -------------------------------------------------------------------

// CMsgGCToClientSocialMatchDetailsResponse

// optional bool success = 1;
inline bool CMsgGCToClientSocialMatchDetailsResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgGCToClientSocialMatchDetailsResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.success)
  return success_;
}
inline void CMsgGCToClientSocialMatchDetailsResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.success)
}

// repeated .proto.dota.CMsgGCToClientSocialMatchDetailsResponse.Comment comments = 2;
inline int CMsgGCToClientSocialMatchDetailsResponse::comments_size() const {
  return comments_.size();
}
inline void CMsgGCToClientSocialMatchDetailsResponse::clear_comments() {
  comments_.Clear();
}
inline const ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment& CMsgGCToClientSocialMatchDetailsResponse::comments(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_.Get(index);
}
inline ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment* CMsgGCToClientSocialMatchDetailsResponse::mutable_comments(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_.Mutable(index);
}
inline ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment* CMsgGCToClientSocialMatchDetailsResponse::add_comments() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment >*
CMsgGCToClientSocialMatchDetailsResponse::mutable_comments() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.comments)
  return &comments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientSocialMatchDetailsResponse_Comment >&
CMsgGCToClientSocialMatchDetailsResponse::comments() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientSocialMatchDetailsResponse.comments)
  return comments_;
}

// -------------------------------------------------------------------

// CMsgDOTAPartyRichPresence_Member

// optional fixed64 steam_id = 1;
inline bool CMsgDOTAPartyRichPresence_Member::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartyRichPresence_Member::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
inline ::google::protobuf::uint64 CMsgDOTAPartyRichPresence_Member::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.Member.steam_id)
  return steam_id_;
}
inline void CMsgDOTAPartyRichPresence_Member::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.Member.steam_id)
}

// optional bool coach = 2;
inline bool CMsgDOTAPartyRichPresence_Member::has_coach() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPartyRichPresence_Member::set_has_coach() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_has_coach() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPartyRichPresence_Member::clear_coach() {
  coach_ = false;
  clear_has_coach();
}
inline bool CMsgDOTAPartyRichPresence_Member::coach() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.Member.coach)
  return coach_;
}
inline void CMsgDOTAPartyRichPresence_Member::set_coach(bool value) {
  set_has_coach();
  coach_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.Member.coach)
}

// -------------------------------------------------------------------

// CMsgDOTAPartyRichPresence_WeekendTourney

// optional uint32 division = 1;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_division() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_division() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_division() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_division() {
  division_ = 0u;
  clear_has_division();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::division() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.division)
  return division_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_division(::google::protobuf::uint32 value) {
  set_has_division();
  division_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.division)
}

// optional uint32 skill_level = 2;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_skill_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_skill_level() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_skill_level() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_skill_level() {
  skill_level_ = 0u;
  clear_has_skill_level();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::skill_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.skill_level)
  return skill_level_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_skill_level(::google::protobuf::uint32 value) {
  set_has_skill_level();
  skill_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.skill_level)
}

// optional uint32 round = 3;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_round() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_round() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_round() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_round() {
  round_ = 0u;
  clear_has_round();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::round() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.round)
  return round_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_round(::google::protobuf::uint32 value) {
  set_has_round();
  round_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.round)
}

// optional uint32 tournament_id = 4;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_tournament_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_tournament_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_tournament_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_tournament_id() {
  tournament_id_ = 0u;
  clear_has_tournament_id();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::tournament_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.tournament_id)
  return tournament_id_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_tournament_id(::google::protobuf::uint32 value) {
  set_has_tournament_id();
  tournament_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.tournament_id)
}

// optional uint32 state_seq_num = 5;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_state_seq_num() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_state_seq_num() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_state_seq_num() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_state_seq_num() {
  state_seq_num_ = 0u;
  clear_has_state_seq_num();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::state_seq_num() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.state_seq_num)
  return state_seq_num_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_state_seq_num(::google::protobuf::uint32 value) {
  set_has_state_seq_num();
  state_seq_num_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.state_seq_num)
}

// optional .proto.dota.EWeekendTourneyRichPresenceEvent event = 6 [default = k_EWeekendTourneyRichPresenceEvent_None];
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_event() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_event() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_event() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_event() {
  event_ = 0;
  clear_has_event();
}
inline ::proto::dota::EWeekendTourneyRichPresenceEvent CMsgDOTAPartyRichPresence_WeekendTourney::event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.event)
  return static_cast< ::proto::dota::EWeekendTourneyRichPresenceEvent >(event_);
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_event(::proto::dota::EWeekendTourneyRichPresenceEvent value) {
  assert(::proto::dota::EWeekendTourneyRichPresenceEvent_IsValid(value));
  set_has_event();
  event_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.event)
}

// optional uint32 event_round = 7;
inline bool CMsgDOTAPartyRichPresence_WeekendTourney::has_event_round() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_has_event_round() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_has_event_round() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::clear_event_round() {
  event_round_ = 0u;
  clear_has_event_round();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence_WeekendTourney::event_round() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.event_round)
  return event_round_;
}
inline void CMsgDOTAPartyRichPresence_WeekendTourney::set_event_round(::google::protobuf::uint32 value) {
  set_has_event_round();
  event_round_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney.event_round)
}

// -------------------------------------------------------------------

// CMsgDOTAPartyRichPresence

// optional fixed64 party_id = 1;
inline bool CMsgDOTAPartyRichPresence::has_party_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_party_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_party_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAPartyRichPresence::clear_party_id() {
  party_id_ = GOOGLE_ULONGLONG(0);
  clear_has_party_id();
}
inline ::google::protobuf::uint64 CMsgDOTAPartyRichPresence::party_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.party_id)
  return party_id_;
}
inline void CMsgDOTAPartyRichPresence::set_party_id(::google::protobuf::uint64 value) {
  set_has_party_id();
  party_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.party_id)
}

// optional .proto.dota.CSODOTAParty.State party_state = 2 [default = UI];
inline bool CMsgDOTAPartyRichPresence::has_party_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_party_state() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_party_state() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAPartyRichPresence::clear_party_state() {
  party_state_ = 0;
  clear_has_party_state();
}
inline ::proto::dota::CSODOTAParty_State CMsgDOTAPartyRichPresence::party_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.party_state)
  return static_cast< ::proto::dota::CSODOTAParty_State >(party_state_);
}
inline void CMsgDOTAPartyRichPresence::set_party_state(::proto::dota::CSODOTAParty_State value) {
  assert(::proto::dota::CSODOTAParty_State_IsValid(value));
  set_has_party_state();
  party_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.party_state)
}

// optional bool open = 3;
inline bool CMsgDOTAPartyRichPresence::has_open() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_open() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_open() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAPartyRichPresence::clear_open() {
  open_ = false;
  clear_has_open();
}
inline bool CMsgDOTAPartyRichPresence::open() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.open)
  return open_;
}
inline void CMsgDOTAPartyRichPresence::set_open(bool value) {
  set_has_open();
  open_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.open)
}

// optional bool low_priority = 5;
inline bool CMsgDOTAPartyRichPresence::has_low_priority() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_low_priority() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_low_priority() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAPartyRichPresence::clear_low_priority() {
  low_priority_ = false;
  clear_has_low_priority();
}
inline bool CMsgDOTAPartyRichPresence::low_priority() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.low_priority)
  return low_priority_;
}
inline void CMsgDOTAPartyRichPresence::set_low_priority(bool value) {
  set_has_low_priority();
  low_priority_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.low_priority)
}

// optional uint32 team_id = 7;
inline bool CMsgDOTAPartyRichPresence::has_team_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_team_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTAPartyRichPresence::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAPartyRichPresence::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.team_id)
  return team_id_;
}
inline void CMsgDOTAPartyRichPresence::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.team_id)
}

// optional string team_name = 8;
inline bool CMsgDOTAPartyRichPresence::has_team_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_team_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPartyRichPresence::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTAPartyRichPresence::team_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.team_name)
  return team_name_.GetNoArena();
}
inline void CMsgDOTAPartyRichPresence::set_team_name(const ::std::string& value) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.team_name)
}
#if LANG_CXX11
inline void CMsgDOTAPartyRichPresence::set_team_name(::std::string&& value) {
  set_has_team_name();
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPartyRichPresence.team_name)
}
#endif
inline void CMsgDOTAPartyRichPresence::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPartyRichPresence.team_name)
}
inline void CMsgDOTAPartyRichPresence::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPartyRichPresence.team_name)
}
inline ::std::string* CMsgDOTAPartyRichPresence::mutable_team_name() {
  set_has_team_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPartyRichPresence.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPartyRichPresence::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPartyRichPresence.team_name)
  clear_has_team_name();
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPartyRichPresence::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    set_has_team_name();
  } else {
    clear_has_team_name();
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPartyRichPresence.team_name)
}

// optional uint64 ugc_team_ui_logo = 9;
inline bool CMsgDOTAPartyRichPresence::has_ugc_team_ui_logo() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_ugc_team_ui_logo() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_ugc_team_ui_logo() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTAPartyRichPresence::clear_ugc_team_ui_logo() {
  ugc_team_ui_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_ugc_team_ui_logo();
}
inline ::google::protobuf::uint64 CMsgDOTAPartyRichPresence::ugc_team_ui_logo() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.ugc_team_ui_logo)
  return ugc_team_ui_logo_;
}
inline void CMsgDOTAPartyRichPresence::set_ugc_team_ui_logo(::google::protobuf::uint64 value) {
  set_has_ugc_team_ui_logo();
  ugc_team_ui_logo_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPartyRichPresence.ugc_team_ui_logo)
}

// repeated .proto.dota.CMsgDOTAPartyRichPresence.Member members = 4;
inline int CMsgDOTAPartyRichPresence::members_size() const {
  return members_.size();
}
inline void CMsgDOTAPartyRichPresence::clear_members() {
  members_.Clear();
}
inline const ::proto::dota::CMsgDOTAPartyRichPresence_Member& CMsgDOTAPartyRichPresence::members(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.members)
  return members_.Get(index);
}
inline ::proto::dota::CMsgDOTAPartyRichPresence_Member* CMsgDOTAPartyRichPresence::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPartyRichPresence.members)
  return members_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAPartyRichPresence_Member* CMsgDOTAPartyRichPresence::add_members() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAPartyRichPresence.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAPartyRichPresence_Member >*
CMsgDOTAPartyRichPresence::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAPartyRichPresence.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAPartyRichPresence_Member >&
CMsgDOTAPartyRichPresence::members() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAPartyRichPresence.members)
  return members_;
}

// optional .proto.dota.CMsgDOTAPartyRichPresence.WeekendTourney weekend_tourney = 6;
inline bool CMsgDOTAPartyRichPresence::has_weekend_tourney() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPartyRichPresence::set_has_weekend_tourney() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPartyRichPresence::clear_has_weekend_tourney() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPartyRichPresence::clear_weekend_tourney() {
  if (weekend_tourney_ != NULL) weekend_tourney_->::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney::Clear();
  clear_has_weekend_tourney();
}
inline const ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney& CMsgDOTAPartyRichPresence::weekend_tourney() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPartyRichPresence.weekend_tourney)
  return weekend_tourney_ != NULL ? *weekend_tourney_
                         : *::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney::internal_default_instance();
}
inline ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* CMsgDOTAPartyRichPresence::mutable_weekend_tourney() {
  set_has_weekend_tourney();
  if (weekend_tourney_ == NULL) {
    weekend_tourney_ = new ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPartyRichPresence.weekend_tourney)
  return weekend_tourney_;
}
inline ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* CMsgDOTAPartyRichPresence::release_weekend_tourney() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPartyRichPresence.weekend_tourney)
  clear_has_weekend_tourney();
  ::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* temp = weekend_tourney_;
  weekend_tourney_ = NULL;
  return temp;
}
inline void CMsgDOTAPartyRichPresence::set_allocated_weekend_tourney(::proto::dota::CMsgDOTAPartyRichPresence_WeekendTourney* weekend_tourney) {
  delete weekend_tourney_;
  weekend_tourney_ = weekend_tourney;
  if (weekend_tourney) {
    set_has_weekend_tourney();
  } else {
    clear_has_weekend_tourney();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPartyRichPresence.weekend_tourney)
}

// -------------------------------------------------------------------

// CMsgDOTALobbyRichPresence

// optional fixed64 lobby_id = 1;
inline bool CMsgDOTALobbyRichPresence::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTALobbyRichPresence::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgDOTALobbyRichPresence::lobby_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTALobbyRichPresence::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.lobby_id)
}

// optional .proto.dota.CSODOTALobby.State lobby_state = 2 [default = UI];
inline bool CMsgDOTALobbyRichPresence::has_lobby_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_lobby_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_lobby_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTALobbyRichPresence::clear_lobby_state() {
  lobby_state_ = 0;
  clear_has_lobby_state();
}
inline ::proto::dota::CSODOTALobby_State CMsgDOTALobbyRichPresence::lobby_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.lobby_state)
  return static_cast< ::proto::dota::CSODOTALobby_State >(lobby_state_);
}
inline void CMsgDOTALobbyRichPresence::set_lobby_state(::proto::dota::CSODOTALobby_State value) {
  assert(::proto::dota::CSODOTALobby_State_IsValid(value));
  set_has_lobby_state();
  lobby_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.lobby_state)
}

// optional bool password = 3;
inline bool CMsgDOTALobbyRichPresence::has_password() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_password() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_password() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTALobbyRichPresence::clear_password() {
  password_ = false;
  clear_has_password();
}
inline bool CMsgDOTALobbyRichPresence::password() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.password)
  return password_;
}
inline void CMsgDOTALobbyRichPresence::set_password(bool value) {
  set_has_password();
  password_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.password)
}

// optional .proto.dota.DOTA_GameMode game_mode = 4 [default = DOTA_GAMEMODE_NONE];
inline bool CMsgDOTALobbyRichPresence::has_game_mode() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_game_mode() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_game_mode() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTALobbyRichPresence::clear_game_mode() {
  game_mode_ = 0;
  clear_has_game_mode();
}
inline ::proto::dota::DOTA_GameMode CMsgDOTALobbyRichPresence::game_mode() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.game_mode)
  return static_cast< ::proto::dota::DOTA_GameMode >(game_mode_);
}
inline void CMsgDOTALobbyRichPresence::set_game_mode(::proto::dota::DOTA_GameMode value) {
  assert(::proto::dota::DOTA_GameMode_IsValid(value));
  set_has_game_mode();
  game_mode_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.game_mode)
}

// optional uint32 member_count = 5;
inline bool CMsgDOTALobbyRichPresence::has_member_count() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_member_count() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_member_count() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTALobbyRichPresence::clear_member_count() {
  member_count_ = 0u;
  clear_has_member_count();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyRichPresence::member_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.member_count)
  return member_count_;
}
inline void CMsgDOTALobbyRichPresence::set_member_count(::google::protobuf::uint32 value) {
  set_has_member_count();
  member_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.member_count)
}

// optional uint32 max_member_count = 6;
inline bool CMsgDOTALobbyRichPresence::has_max_member_count() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_max_member_count() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_max_member_count() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgDOTALobbyRichPresence::clear_max_member_count() {
  max_member_count_ = 0u;
  clear_has_max_member_count();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyRichPresence::max_member_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.max_member_count)
  return max_member_count_;
}
inline void CMsgDOTALobbyRichPresence::set_max_member_count(::google::protobuf::uint32 value) {
  set_has_max_member_count();
  max_member_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.max_member_count)
}

// optional fixed64 custom_game_id = 7;
inline bool CMsgDOTALobbyRichPresence::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgDOTALobbyRichPresence::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgDOTALobbyRichPresence::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTALobbyRichPresence::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.custom_game_id)
}

// optional string name = 8;
inline bool CMsgDOTALobbyRichPresence::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTALobbyRichPresence::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgDOTALobbyRichPresence::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.name)
  return name_.GetNoArena();
}
inline void CMsgDOTALobbyRichPresence::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.name)
}
#if LANG_CXX11
inline void CMsgDOTALobbyRichPresence::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTALobbyRichPresence.name)
}
#endif
inline void CMsgDOTALobbyRichPresence::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTALobbyRichPresence.name)
}
inline void CMsgDOTALobbyRichPresence::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTALobbyRichPresence.name)
}
inline ::std::string* CMsgDOTALobbyRichPresence::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTALobbyRichPresence.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTALobbyRichPresence::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTALobbyRichPresence.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTALobbyRichPresence::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTALobbyRichPresence.name)
}

// optional uint32 lobby_type = 9;
inline bool CMsgDOTALobbyRichPresence::has_lobby_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgDOTALobbyRichPresence::set_has_lobby_type() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgDOTALobbyRichPresence::clear_has_lobby_type() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgDOTALobbyRichPresence::clear_lobby_type() {
  lobby_type_ = 0u;
  clear_has_lobby_type();
}
inline ::google::protobuf::uint32 CMsgDOTALobbyRichPresence::lobby_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTALobbyRichPresence.lobby_type)
  return lobby_type_;
}
inline void CMsgDOTALobbyRichPresence::set_lobby_type(::google::protobuf::uint32 value) {
  set_has_lobby_type();
  lobby_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTALobbyRichPresence.lobby_type)
}

// -------------------------------------------------------------------

// CMsgDOTACustomGameListenServerStartedLoading

// optional fixed64 lobby_id = 1;
inline bool CMsgDOTACustomGameListenServerStartedLoading::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgDOTACustomGameListenServerStartedLoading::lobby_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_id)
}

// optional uint64 custom_game_id = 2;
inline bool CMsgDOTACustomGameListenServerStartedLoading::has_custom_game_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_has_custom_game_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_has_custom_game_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_custom_game_id() {
  custom_game_id_ = GOOGLE_ULONGLONG(0);
  clear_has_custom_game_id();
}
inline ::google::protobuf::uint64 CMsgDOTACustomGameListenServerStartedLoading::custom_game_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.custom_game_id)
  return custom_game_id_;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_custom_game_id(::google::protobuf::uint64 value) {
  set_has_custom_game_id();
  custom_game_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.custom_game_id)
}

// repeated uint32 lobby_members = 3;
inline int CMsgDOTACustomGameListenServerStartedLoading::lobby_members_size() const {
  return lobby_members_.size();
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_lobby_members() {
  lobby_members_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameListenServerStartedLoading::lobby_members(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
  return lobby_members_.Get(index);
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_lobby_members(int index, ::google::protobuf::uint32 value) {
  lobby_members_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
}
inline void CMsgDOTACustomGameListenServerStartedLoading::add_lobby_members(::google::protobuf::uint32 value) {
  lobby_members_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTACustomGameListenServerStartedLoading::lobby_members() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
  return lobby_members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTACustomGameListenServerStartedLoading::mutable_lobby_members() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.lobby_members)
  return &lobby_members_;
}

// optional uint32 start_time = 4;
inline bool CMsgDOTACustomGameListenServerStartedLoading::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameListenServerStartedLoading::start_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.start_time)
  return start_time_;
}
inline void CMsgDOTACustomGameListenServerStartedLoading::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameListenServerStartedLoading.start_time)
}

// -------------------------------------------------------------------

// CMsgDOTACustomGameClientFinishedLoading

// optional fixed64 lobby_id = 1;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_lobby_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_lobby_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_lobby_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_lobby_id() {
  lobby_id_ = GOOGLE_ULONGLONG(0);
  clear_has_lobby_id();
}
inline ::google::protobuf::uint64 CMsgDOTACustomGameClientFinishedLoading::lobby_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameClientFinishedLoading.lobby_id)
  return lobby_id_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_lobby_id(::google::protobuf::uint64 value) {
  set_has_lobby_id();
  lobby_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameClientFinishedLoading.lobby_id)
}

// optional uint32 loading_duration = 2;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_loading_duration() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_loading_duration() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_loading_duration() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_loading_duration() {
  loading_duration_ = 0u;
  clear_has_loading_duration();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameClientFinishedLoading::loading_duration() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameClientFinishedLoading.loading_duration)
  return loading_duration_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_loading_duration(::google::protobuf::uint32 value) {
  set_has_loading_duration();
  loading_duration_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameClientFinishedLoading.loading_duration)
}

// optional sint32 result_code = 3;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_result_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_result_code() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_result_code() {
  result_code_ = 0;
  clear_has_result_code();
}
inline ::google::protobuf::int32 CMsgDOTACustomGameClientFinishedLoading::result_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_code)
  return result_code_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_code(::google::protobuf::int32 value) {
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_code)
}

// optional string result_string = 4;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_result_string() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_result_string() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_result_string() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_result_string() {
  result_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result_string();
}
inline const ::std::string& CMsgDOTACustomGameClientFinishedLoading::result_string() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
  return result_string_.GetNoArena();
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(const ::std::string& value) {
  set_has_result_string();
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
}
#if LANG_CXX11
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(::std::string&& value) {
  set_has_result_string();
  result_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
}
#endif
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_result_string();
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_result_string(const char* value, size_t size) {
  set_has_result_string();
  result_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::mutable_result_string() {
  set_has_result_string();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
  return result_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::release_result_string() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
  clear_has_result_string();
  return result_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_allocated_result_string(::std::string* result_string) {
  if (result_string != NULL) {
    set_has_result_string();
  } else {
    clear_has_result_string();
  }
  result_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_string);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTACustomGameClientFinishedLoading.result_string)
}

// optional uint32 signon_states = 5;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_signon_states() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_signon_states() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_signon_states() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_signon_states() {
  signon_states_ = 0u;
  clear_has_signon_states();
}
inline ::google::protobuf::uint32 CMsgDOTACustomGameClientFinishedLoading::signon_states() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameClientFinishedLoading.signon_states)
  return signon_states_;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_signon_states(::google::protobuf::uint32 value) {
  set_has_signon_states();
  signon_states_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameClientFinishedLoading.signon_states)
}

// optional string comment = 6;
inline bool CMsgDOTACustomGameClientFinishedLoading::has_comment() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_has_comment() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_has_comment() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACustomGameClientFinishedLoading::clear_comment() {
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_comment();
}
inline const ::std::string& CMsgDOTACustomGameClientFinishedLoading::comment() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
  return comment_.GetNoArena();
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(const ::std::string& value) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
}
#if LANG_CXX11
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(::std::string&& value) {
  set_has_comment();
  comment_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
}
#endif
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_comment(const char* value, size_t size) {
  set_has_comment();
  comment_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::mutable_comment() {
  set_has_comment();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
  return comment_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTACustomGameClientFinishedLoading::release_comment() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
  clear_has_comment();
  return comment_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTACustomGameClientFinishedLoading::set_allocated_comment(::std::string* comment) {
  if (comment != NULL) {
    set_has_comment();
  } else {
    clear_has_comment();
  }
  comment_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), comment);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTACustomGameClientFinishedLoading.comment)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeagueSeries

// optional uint32 league_id = 1;
inline bool CMsgClientToGCGetLeagueSeries::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetLeagueSeries::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeries::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeries::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeries::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeries.league_id)
  return league_id_;
}
inline void CMsgClientToGCGetLeagueSeries::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeries.league_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeagueSeriesResponse_Series_Team

// optional uint32 team_id = 1;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_id)
  return team_id_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_id)
}

// optional string team_name = 2;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_team_name();
}
inline const ::std::string& CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
  return team_name_.GetNoArena();
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_name(const ::std::string& value) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}
#if LANG_CXX11
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_name(::std::string&& value) {
  set_has_team_name();
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}
#endif
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series_Team::mutable_team_name() {
  set_has_team_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series_Team::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
  clear_has_team_name();
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    set_has_team_name();
  } else {
    clear_has_team_name();
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_name)
}

// optional string team_tag = 3;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_tag() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_tag() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_tag() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_tag() {
  team_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_team_tag();
}
inline const ::std::string& CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_tag() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
  return team_tag_.GetNoArena();
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_tag(const ::std::string& value) {
  set_has_team_tag();
  team_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}
#if LANG_CXX11
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_tag(::std::string&& value) {
  set_has_team_tag();
  team_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}
#endif
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_team_tag();
  team_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_tag(const char* value, size_t size) {
  set_has_team_tag();
  team_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series_Team::mutable_team_tag() {
  set_has_team_tag();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
  return team_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series_Team::release_team_tag() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
  clear_has_team_tag();
  return team_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_allocated_team_tag(::std::string* team_tag) {
  if (team_tag != NULL) {
    set_has_team_tag();
  } else {
    clear_has_team_tag();
  }
  team_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_tag);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_tag)
}

// optional uint32 team_score = 4;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_score() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_score() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_score() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_score() {
  team_score_ = 0u;
  clear_has_team_score();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_score)
  return team_score_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_score(::google::protobuf::uint32 value) {
  set_has_team_score();
  team_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_score)
}

// optional uint32 team_wins = 5;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series_Team::has_team_wins() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_has_team_wins() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_has_team_wins() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::clear_team_wins() {
  team_wins_ = 0u;
  clear_has_team_wins();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series_Team::team_wins() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_wins)
  return team_wins_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series_Team::set_team_wins(::google::protobuf::uint32 value) {
  set_has_team_wins();
  team_wins_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team.team_wins)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeagueSeriesResponse_Series

// optional uint32 series_id = 1;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_series_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_series_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_series_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_series_id() {
  series_id_ = 0u;
  clear_has_series_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::series_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.series_id)
  return series_id_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_id(::google::protobuf::uint32 value) {
  set_has_series_id();
  series_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.series_id)
}

// optional uint32 num_games = 2;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_num_games() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_num_games() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_num_games() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_num_games() {
  num_games_ = 0u;
  clear_has_num_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::num_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.num_games)
  return num_games_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_num_games(::google::protobuf::uint32 value) {
  set_has_num_games();
  num_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.num_games)
}

// repeated .proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.Team teams = 3;
inline int CMsgClientToGCGetLeagueSeriesResponse_Series::teams_size() const {
  return teams_.size();
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_teams() {
  teams_.Clear();
}
inline const ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series_Team& CMsgClientToGCGetLeagueSeriesResponse_Series::teams(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return teams_.Get(index);
}
inline ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series_Team* CMsgClientToGCGetLeagueSeriesResponse_Series::mutable_teams(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return teams_.Mutable(index);
}
inline ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series_Team* CMsgClientToGCGetLeagueSeriesResponse_Series::add_teams() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return teams_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series_Team >*
CMsgClientToGCGetLeagueSeriesResponse_Series::mutable_teams() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return &teams_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series_Team >&
CMsgClientToGCGetLeagueSeriesResponse_Series::teams() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.teams)
  return teams_;
}

// optional string series_name = 4;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_series_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_series_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_series_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_series_name() {
  series_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_series_name();
}
inline const ::std::string& CMsgClientToGCGetLeagueSeriesResponse_Series::series_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
  return series_name_.GetNoArena();
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_name(const ::std::string& value) {
  set_has_series_name();
  series_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}
#if LANG_CXX11
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_name(::std::string&& value) {
  set_has_series_name();
  series_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}
#endif
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_series_name();
  series_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_series_name(const char* value, size_t size) {
  set_has_series_name();
  series_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series::mutable_series_name() {
  set_has_series_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
  return series_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series::release_series_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
  clear_has_series_name();
  return series_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_allocated_series_name(::std::string* series_name) {
  if (series_name != NULL) {
    set_has_series_name();
  } else {
    clear_has_series_name();
  }
  series_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), series_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.series_name)
}

// optional string phase_name = 5;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_phase_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_phase_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_phase_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_phase_name() {
  phase_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phase_name();
}
inline const ::std::string& CMsgClientToGCGetLeagueSeriesResponse_Series::phase_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
  return phase_name_.GetNoArena();
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_phase_name(const ::std::string& value) {
  set_has_phase_name();
  phase_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}
#if LANG_CXX11
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_phase_name(::std::string&& value) {
  set_has_phase_name();
  phase_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}
#endif
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_phase_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phase_name();
  phase_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_phase_name(const char* value, size_t size) {
  set_has_phase_name();
  phase_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series::mutable_phase_name() {
  set_has_phase_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
  return phase_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCGetLeagueSeriesResponse_Series::release_phase_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
  clear_has_phase_name();
  return phase_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_allocated_phase_name(::std::string* phase_name) {
  if (phase_name != NULL) {
    set_has_phase_name();
  } else {
    clear_has_phase_name();
  }
  phase_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phase_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.phase_name)
}

// optional uint32 start_time = 6;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_start_time() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_start_time() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::start_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.start_time)
  return start_time_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.start_time)
}

// optional uint32 after_series_id = 7;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_after_series_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_after_series_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_after_series_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_after_series_id() {
  after_series_id_ = 0u;
  clear_has_after_series_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::after_series_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.after_series_id)
  return after_series_id_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_after_series_id(::google::protobuf::uint32 value) {
  set_has_after_series_id();
  after_series_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.after_series_id)
}

// optional uint32 num_completed_games = 8;
inline bool CMsgClientToGCGetLeagueSeriesResponse_Series::has_num_completed_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_has_num_completed_games() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_has_num_completed_games() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::clear_num_completed_games() {
  num_completed_games_ = 0u;
  clear_has_num_completed_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetLeagueSeriesResponse_Series::num_completed_games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.num_completed_games)
  return num_completed_games_;
}
inline void CMsgClientToGCGetLeagueSeriesResponse_Series::set_num_completed_games(::google::protobuf::uint32 value) {
  set_has_num_completed_games();
  num_completed_games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series.num_completed_games)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetLeagueSeriesResponse

// repeated .proto.dota.CMsgClientToGCGetLeagueSeriesResponse.Series series = 1;
inline int CMsgClientToGCGetLeagueSeriesResponse::series_size() const {
  return series_.size();
}
inline void CMsgClientToGCGetLeagueSeriesResponse::clear_series() {
  series_.Clear();
}
inline const ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series& CMsgClientToGCGetLeagueSeriesResponse::series(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.series)
  return series_.Get(index);
}
inline ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series* CMsgClientToGCGetLeagueSeriesResponse::mutable_series(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.series)
  return series_.Mutable(index);
}
inline ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series* CMsgClientToGCGetLeagueSeriesResponse::add_series() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.series)
  return series_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series >*
CMsgClientToGCGetLeagueSeriesResponse::mutable_series() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.series)
  return &series_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetLeagueSeriesResponse_Series >&
CMsgClientToGCGetLeagueSeriesResponse::series() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetLeagueSeriesResponse.series)
  return series_;
}

// -------------------------------------------------------------------

// CMsgClientToGCApplyGemCombiner

// optional uint64 item_id_1 = 1;
inline bool CMsgClientToGCApplyGemCombiner::has_item_id_1() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCApplyGemCombiner::set_has_item_id_1() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCApplyGemCombiner::clear_has_item_id_1() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCApplyGemCombiner::clear_item_id_1() {
  item_id_1_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id_1();
}
inline ::google::protobuf::uint64 CMsgClientToGCApplyGemCombiner::item_id_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCApplyGemCombiner.item_id_1)
  return item_id_1_;
}
inline void CMsgClientToGCApplyGemCombiner::set_item_id_1(::google::protobuf::uint64 value) {
  set_has_item_id_1();
  item_id_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCApplyGemCombiner.item_id_1)
}

// optional uint64 item_id_2 = 2;
inline bool CMsgClientToGCApplyGemCombiner::has_item_id_2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCApplyGemCombiner::set_has_item_id_2() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCApplyGemCombiner::clear_has_item_id_2() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCApplyGemCombiner::clear_item_id_2() {
  item_id_2_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id_2();
}
inline ::google::protobuf::uint64 CMsgClientToGCApplyGemCombiner::item_id_2() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCApplyGemCombiner.item_id_2)
  return item_id_2_;
}
inline void CMsgClientToGCApplyGemCombiner::set_item_id_2(::google::protobuf::uint64 value) {
  set_has_item_id_2();
  item_id_2_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCApplyGemCombiner.item_id_2)
}

// -------------------------------------------------------------------

// CMsgClientToGCH264Unsupported

// -------------------------------------------------------------------

// CMsgClientToGCRequestH264Support

// -------------------------------------------------------------------

// CMsgClientToGCGetQuestProgress

// repeated uint32 quest_ids = 1;
inline int CMsgClientToGCGetQuestProgress::quest_ids_size() const {
  return quest_ids_.size();
}
inline void CMsgClientToGCGetQuestProgress::clear_quest_ids() {
  quest_ids_.Clear();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgress::quest_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgress.quest_ids)
  return quest_ids_.Get(index);
}
inline void CMsgClientToGCGetQuestProgress::set_quest_ids(int index, ::google::protobuf::uint32 value) {
  quest_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgress.quest_ids)
}
inline void CMsgClientToGCGetQuestProgress::add_quest_ids(::google::protobuf::uint32 value) {
  quest_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetQuestProgress.quest_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientToGCGetQuestProgress::quest_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetQuestProgress.quest_ids)
  return quest_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientToGCGetQuestProgress::mutable_quest_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetQuestProgress.quest_ids)
  return &quest_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetQuestProgressResponse_Challenge

// optional uint32 challenge_id = 1;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_challenge_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_has_challenge_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_has_challenge_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_challenge_id() {
  challenge_id_ = 0u;
  clear_has_challenge_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::challenge_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.challenge_id)
  return challenge_id_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_challenge_id(::google::protobuf::uint32 value) {
  set_has_challenge_id();
  challenge_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.challenge_id)
}

// optional uint32 time_completed = 2;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_time_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_has_time_completed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_has_time_completed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_time_completed() {
  time_completed_ = 0u;
  clear_has_time_completed();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::time_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.time_completed)
  return time_completed_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_time_completed(::google::protobuf::uint32 value) {
  set_has_time_completed();
  time_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.time_completed)
}

// optional uint32 attempts = 3;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_attempts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_has_attempts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_has_attempts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_attempts() {
  attempts_ = 0u;
  clear_has_attempts();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::attempts() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.attempts)
  return attempts_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_attempts(::google::protobuf::uint32 value) {
  set_has_attempts();
  attempts_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.attempts)
}

// optional uint32 hero_id = 4;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_has_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.hero_id)
}

// optional uint32 challenge_type = 5;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_challenge_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_has_challenge_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_has_challenge_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_challenge_type() {
  challenge_type_ = 0u;
  clear_has_challenge_type();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::challenge_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.challenge_type)
  return challenge_type_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_challenge_type(::google::protobuf::uint32 value) {
  set_has_challenge_type();
  challenge_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.challenge_type)
}

// optional uint32 quest_rank = 6;
inline bool CMsgClientToGCGetQuestProgressResponse_Challenge::has_quest_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_has_quest_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_has_quest_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::clear_quest_rank() {
  quest_rank_ = 0u;
  clear_has_quest_rank();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Challenge::quest_rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.quest_rank)
  return quest_rank_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Challenge::set_quest_rank(::google::protobuf::uint32 value) {
  set_has_quest_rank();
  quest_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge.quest_rank)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetQuestProgressResponse_Quest

// optional uint32 quest_id = 1;
inline bool CMsgClientToGCGetQuestProgressResponse_Quest::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGetQuestProgressResponse_Quest::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.quest_id)
  return quest_id_;
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.quest_id)
}

// repeated .proto.dota.CMsgClientToGCGetQuestProgressResponse.Challenge completed_challenges = 2;
inline int CMsgClientToGCGetQuestProgressResponse_Quest::completed_challenges_size() const {
  return completed_challenges_.size();
}
inline void CMsgClientToGCGetQuestProgressResponse_Quest::clear_completed_challenges() {
  completed_challenges_.Clear();
}
inline const ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge& CMsgClientToGCGetQuestProgressResponse_Quest::completed_challenges(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return completed_challenges_.Get(index);
}
inline ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge* CMsgClientToGCGetQuestProgressResponse_Quest::mutable_completed_challenges(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return completed_challenges_.Mutable(index);
}
inline ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge* CMsgClientToGCGetQuestProgressResponse_Quest::add_completed_challenges() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return completed_challenges_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge >*
CMsgClientToGCGetQuestProgressResponse_Quest::mutable_completed_challenges() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return &completed_challenges_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Challenge >&
CMsgClientToGCGetQuestProgressResponse_Quest::completed_challenges() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest.completed_challenges)
  return completed_challenges_;
}

// -------------------------------------------------------------------

// CMsgClientToGCGetQuestProgressResponse

// optional bool success = 1;
inline bool CMsgClientToGCGetQuestProgressResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGetQuestProgressResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGetQuestProgressResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGetQuestProgressResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgClientToGCGetQuestProgressResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.success)
  return success_;
}
inline void CMsgClientToGCGetQuestProgressResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetQuestProgressResponse.success)
}

// repeated .proto.dota.CMsgClientToGCGetQuestProgressResponse.Quest quests = 2;
inline int CMsgClientToGCGetQuestProgressResponse::quests_size() const {
  return quests_.size();
}
inline void CMsgClientToGCGetQuestProgressResponse::clear_quests() {
  quests_.Clear();
}
inline const ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest& CMsgClientToGCGetQuestProgressResponse::quests(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetQuestProgressResponse.quests)
  return quests_.Get(index);
}
inline ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest* CMsgClientToGCGetQuestProgressResponse::mutable_quests(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCGetQuestProgressResponse.quests)
  return quests_.Mutable(index);
}
inline ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest* CMsgClientToGCGetQuestProgressResponse::add_quests() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetQuestProgressResponse.quests)
  return quests_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest >*
CMsgClientToGCGetQuestProgressResponse::mutable_quests() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetQuestProgressResponse.quests)
  return &quests_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCGetQuestProgressResponse_Quest >&
CMsgClientToGCGetQuestProgressResponse::quests() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetQuestProgressResponse.quests)
  return quests_;
}

// -------------------------------------------------------------------

// CMsgGCToClientMatchSignedOut

// optional uint64 match_id = 1;
inline bool CMsgGCToClientMatchSignedOut::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientMatchSignedOut::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientMatchSignedOut::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientMatchSignedOut::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgGCToClientMatchSignedOut::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientMatchSignedOut.match_id)
  return match_id_;
}
inline void CMsgGCToClientMatchSignedOut::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientMatchSignedOut.match_id)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStatsHistory

// optional uint32 hero_id = 1;
inline bool CMsgGCGetHeroStatsHistory::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroStatsHistory::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetHeroStatsHistory::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetHeroStatsHistory::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStatsHistory::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStatsHistory.hero_id)
  return hero_id_;
}
inline void CMsgGCGetHeroStatsHistory::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStatsHistory.hero_id)
}

// -------------------------------------------------------------------

// CMsgGCGetHeroStatsHistoryResponse

// optional uint32 hero_id = 1;
inline bool CMsgGCGetHeroStatsHistoryResponse::has_hero_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCGetHeroStatsHistoryResponse::set_has_hero_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCGetHeroStatsHistoryResponse::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCGetHeroStatsHistoryResponse::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgGCGetHeroStatsHistoryResponse::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStatsHistoryResponse.hero_id)
  return hero_id_;
}
inline void CMsgGCGetHeroStatsHistoryResponse::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCGetHeroStatsHistoryResponse.hero_id)
}

// repeated .proto.dota.CMsgDOTASDOHeroStatsHistory records = 2;
inline int CMsgGCGetHeroStatsHistoryResponse::records_size() const {
  return records_.size();
}
inline void CMsgGCGetHeroStatsHistoryResponse::clear_records() {
  records_.Clear();
}
inline const ::proto::dota::CMsgDOTASDOHeroStatsHistory& CMsgGCGetHeroStatsHistoryResponse::records(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCGetHeroStatsHistoryResponse.records)
  return records_.Get(index);
}
inline ::proto::dota::CMsgDOTASDOHeroStatsHistory* CMsgGCGetHeroStatsHistoryResponse::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCGetHeroStatsHistoryResponse.records)
  return records_.Mutable(index);
}
inline ::proto::dota::CMsgDOTASDOHeroStatsHistory* CMsgGCGetHeroStatsHistoryResponse::add_records() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCGetHeroStatsHistoryResponse.records)
  return records_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTASDOHeroStatsHistory >*
CMsgGCGetHeroStatsHistoryResponse::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCGetHeroStatsHistoryResponse.records)
  return &records_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTASDOHeroStatsHistory >&
CMsgGCGetHeroStatsHistoryResponse::records() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCGetHeroStatsHistoryResponse.records)
  return records_;
}

// -------------------------------------------------------------------

// CMsgPlayerConductScorecardRequest

// -------------------------------------------------------------------

// CMsgPlayerConductScorecard

// optional uint32 account_id = 1;
inline bool CMsgPlayerConductScorecard::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPlayerConductScorecard::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPlayerConductScorecard::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.account_id)
  return account_id_;
}
inline void CMsgPlayerConductScorecard::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.account_id)
}

// optional uint64 match_id = 2;
inline bool CMsgPlayerConductScorecard::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPlayerConductScorecard::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPlayerConductScorecard::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgPlayerConductScorecard::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.match_id)
  return match_id_;
}
inline void CMsgPlayerConductScorecard::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.match_id)
}

// optional uint32 seq_num = 3;
inline bool CMsgPlayerConductScorecard::has_seq_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_seq_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPlayerConductScorecard::clear_has_seq_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPlayerConductScorecard::clear_seq_num() {
  seq_num_ = 0u;
  clear_has_seq_num();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::seq_num() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.seq_num)
  return seq_num_;
}
inline void CMsgPlayerConductScorecard::set_seq_num(::google::protobuf::uint32 value) {
  set_has_seq_num();
  seq_num_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.seq_num)
}

// optional uint32 reasons = 4;
inline bool CMsgPlayerConductScorecard::has_reasons() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_reasons() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPlayerConductScorecard::clear_has_reasons() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPlayerConductScorecard::clear_reasons() {
  reasons_ = 0u;
  clear_has_reasons();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::reasons() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.reasons)
  return reasons_;
}
inline void CMsgPlayerConductScorecard::set_reasons(::google::protobuf::uint32 value) {
  set_has_reasons();
  reasons_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.reasons)
}

// optional uint32 matches_in_report = 5;
inline bool CMsgPlayerConductScorecard::has_matches_in_report() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_matches_in_report() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPlayerConductScorecard::clear_has_matches_in_report() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPlayerConductScorecard::clear_matches_in_report() {
  matches_in_report_ = 0u;
  clear_has_matches_in_report();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::matches_in_report() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.matches_in_report)
  return matches_in_report_;
}
inline void CMsgPlayerConductScorecard::set_matches_in_report(::google::protobuf::uint32 value) {
  set_has_matches_in_report();
  matches_in_report_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.matches_in_report)
}

// optional uint32 matches_clean = 6;
inline bool CMsgPlayerConductScorecard::has_matches_clean() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_matches_clean() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgPlayerConductScorecard::clear_has_matches_clean() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgPlayerConductScorecard::clear_matches_clean() {
  matches_clean_ = 0u;
  clear_has_matches_clean();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::matches_clean() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.matches_clean)
  return matches_clean_;
}
inline void CMsgPlayerConductScorecard::set_matches_clean(::google::protobuf::uint32 value) {
  set_has_matches_clean();
  matches_clean_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.matches_clean)
}

// optional uint32 matches_reported = 7;
inline bool CMsgPlayerConductScorecard::has_matches_reported() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_matches_reported() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgPlayerConductScorecard::clear_has_matches_reported() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgPlayerConductScorecard::clear_matches_reported() {
  matches_reported_ = 0u;
  clear_has_matches_reported();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::matches_reported() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.matches_reported)
  return matches_reported_;
}
inline void CMsgPlayerConductScorecard::set_matches_reported(::google::protobuf::uint32 value) {
  set_has_matches_reported();
  matches_reported_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.matches_reported)
}

// optional uint32 matches_abandoned = 8;
inline bool CMsgPlayerConductScorecard::has_matches_abandoned() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_matches_abandoned() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgPlayerConductScorecard::clear_has_matches_abandoned() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgPlayerConductScorecard::clear_matches_abandoned() {
  matches_abandoned_ = 0u;
  clear_has_matches_abandoned();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::matches_abandoned() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.matches_abandoned)
  return matches_abandoned_;
}
inline void CMsgPlayerConductScorecard::set_matches_abandoned(::google::protobuf::uint32 value) {
  set_has_matches_abandoned();
  matches_abandoned_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.matches_abandoned)
}

// optional uint32 reports_count = 9;
inline bool CMsgPlayerConductScorecard::has_reports_count() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_reports_count() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgPlayerConductScorecard::clear_has_reports_count() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgPlayerConductScorecard::clear_reports_count() {
  reports_count_ = 0u;
  clear_has_reports_count();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::reports_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.reports_count)
  return reports_count_;
}
inline void CMsgPlayerConductScorecard::set_reports_count(::google::protobuf::uint32 value) {
  set_has_reports_count();
  reports_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.reports_count)
}

// optional uint32 reports_parties = 10;
inline bool CMsgPlayerConductScorecard::has_reports_parties() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_reports_parties() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgPlayerConductScorecard::clear_has_reports_parties() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgPlayerConductScorecard::clear_reports_parties() {
  reports_parties_ = 0u;
  clear_has_reports_parties();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::reports_parties() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.reports_parties)
  return reports_parties_;
}
inline void CMsgPlayerConductScorecard::set_reports_parties(::google::protobuf::uint32 value) {
  set_has_reports_parties();
  reports_parties_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.reports_parties)
}

// optional uint32 commend_count = 11;
inline bool CMsgPlayerConductScorecard::has_commend_count() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_commend_count() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgPlayerConductScorecard::clear_has_commend_count() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgPlayerConductScorecard::clear_commend_count() {
  commend_count_ = 0u;
  clear_has_commend_count();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::commend_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.commend_count)
  return commend_count_;
}
inline void CMsgPlayerConductScorecard::set_commend_count(::google::protobuf::uint32 value) {
  set_has_commend_count();
  commend_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.commend_count)
}

// optional uint32 end_score = 13;
inline bool CMsgPlayerConductScorecard::has_end_score() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_end_score() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgPlayerConductScorecard::clear_has_end_score() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgPlayerConductScorecard::clear_end_score() {
  end_score_ = 0u;
  clear_has_end_score();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::end_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.end_score)
  return end_score_;
}
inline void CMsgPlayerConductScorecard::set_end_score(::google::protobuf::uint32 value) {
  set_has_end_score();
  end_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.end_score)
}

// optional uint32 date = 14;
inline bool CMsgPlayerConductScorecard::has_date() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgPlayerConductScorecard::set_has_date() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgPlayerConductScorecard::clear_has_date() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgPlayerConductScorecard::clear_date() {
  date_ = 0u;
  clear_has_date();
}
inline ::google::protobuf::uint32 CMsgPlayerConductScorecard::date() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPlayerConductScorecard.date)
  return date_;
}
inline void CMsgPlayerConductScorecard::set_date(::google::protobuf::uint32 value) {
  set_has_date();
  date_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPlayerConductScorecard.date)
}

// -------------------------------------------------------------------

// CMsgClientToGCWageringRequest

// optional uint32 event_id = 1;
inline bool CMsgClientToGCWageringRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCWageringRequest::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCWageringRequest::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCWageringRequest::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCWageringRequest::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCWageringRequest.event_id)
  return event_id_;
}
inline void CMsgClientToGCWageringRequest::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCWageringRequest.event_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientWageringResponse

// optional uint32 coins_remaining = 1;
inline bool CMsgGCToClientWageringResponse::has_coins_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_coins_remaining() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientWageringResponse::clear_has_coins_remaining() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientWageringResponse::clear_coins_remaining() {
  coins_remaining_ = 0u;
  clear_has_coins_remaining();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::coins_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.coins_remaining)
  return coins_remaining_;
}
inline void CMsgGCToClientWageringResponse::set_coins_remaining(::google::protobuf::uint32 value) {
  set_has_coins_remaining();
  coins_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.coins_remaining)
}

// optional uint32 total_points_won = 2;
inline bool CMsgGCToClientWageringResponse::has_total_points_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_total_points_won() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientWageringResponse::clear_has_total_points_won() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientWageringResponse::clear_total_points_won() {
  total_points_won_ = 0u;
  clear_has_total_points_won();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::total_points_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.total_points_won)
  return total_points_won_;
}
inline void CMsgGCToClientWageringResponse::set_total_points_won(::google::protobuf::uint32 value) {
  set_has_total_points_won();
  total_points_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.total_points_won)
}

// optional uint32 total_points_wagered = 3;
inline bool CMsgGCToClientWageringResponse::has_total_points_wagered() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_total_points_wagered() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientWageringResponse::clear_has_total_points_wagered() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientWageringResponse::clear_total_points_wagered() {
  total_points_wagered_ = 0u;
  clear_has_total_points_wagered();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::total_points_wagered() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.total_points_wagered)
  return total_points_wagered_;
}
inline void CMsgGCToClientWageringResponse::set_total_points_wagered(::google::protobuf::uint32 value) {
  set_has_total_points_wagered();
  total_points_wagered_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.total_points_wagered)
}

// optional uint32 total_points_tipped = 4;
inline bool CMsgGCToClientWageringResponse::has_total_points_tipped() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_total_points_tipped() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientWageringResponse::clear_has_total_points_tipped() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientWageringResponse::clear_total_points_tipped() {
  total_points_tipped_ = 0u;
  clear_has_total_points_tipped();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::total_points_tipped() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.total_points_tipped)
  return total_points_tipped_;
}
inline void CMsgGCToClientWageringResponse::set_total_points_tipped(::google::protobuf::uint32 value) {
  set_has_total_points_tipped();
  total_points_tipped_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.total_points_tipped)
}

// optional uint32 success_rate = 5;
inline bool CMsgGCToClientWageringResponse::has_success_rate() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_success_rate() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientWageringResponse::clear_has_success_rate() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientWageringResponse::clear_success_rate() {
  success_rate_ = 0u;
  clear_has_success_rate();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::success_rate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.success_rate)
  return success_rate_;
}
inline void CMsgGCToClientWageringResponse::set_success_rate(::google::protobuf::uint32 value) {
  set_has_success_rate();
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.success_rate)
}

// optional uint32 total_games_wagered = 6;
inline bool CMsgGCToClientWageringResponse::has_total_games_wagered() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_total_games_wagered() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCToClientWageringResponse::clear_has_total_games_wagered() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCToClientWageringResponse::clear_total_games_wagered() {
  total_games_wagered_ = 0u;
  clear_has_total_games_wagered();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::total_games_wagered() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.total_games_wagered)
  return total_games_wagered_;
}
inline void CMsgGCToClientWageringResponse::set_total_games_wagered(::google::protobuf::uint32 value) {
  set_has_total_games_wagered();
  total_games_wagered_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.total_games_wagered)
}

// optional uint32 coins_max = 7;
inline bool CMsgGCToClientWageringResponse::has_coins_max() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_coins_max() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCToClientWageringResponse::clear_has_coins_max() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCToClientWageringResponse::clear_coins_max() {
  coins_max_ = 0u;
  clear_has_coins_max();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::coins_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.coins_max)
  return coins_max_;
}
inline void CMsgGCToClientWageringResponse::set_coins_max(::google::protobuf::uint32 value) {
  set_has_coins_max();
  coins_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.coins_max)
}

// optional uint32 rank_wagers_remaining = 8;
inline bool CMsgGCToClientWageringResponse::has_rank_wagers_remaining() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_rank_wagers_remaining() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgGCToClientWageringResponse::clear_has_rank_wagers_remaining() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgGCToClientWageringResponse::clear_rank_wagers_remaining() {
  rank_wagers_remaining_ = 0u;
  clear_has_rank_wagers_remaining();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::rank_wagers_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.rank_wagers_remaining)
  return rank_wagers_remaining_;
}
inline void CMsgGCToClientWageringResponse::set_rank_wagers_remaining(::google::protobuf::uint32 value) {
  set_has_rank_wagers_remaining();
  rank_wagers_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.rank_wagers_remaining)
}

// optional uint32 rank_wagers_max = 9;
inline bool CMsgGCToClientWageringResponse::has_rank_wagers_max() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgGCToClientWageringResponse::set_has_rank_wagers_max() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgGCToClientWageringResponse::clear_has_rank_wagers_max() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgGCToClientWageringResponse::clear_rank_wagers_max() {
  rank_wagers_max_ = 0u;
  clear_has_rank_wagers_max();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringResponse::rank_wagers_max() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringResponse.rank_wagers_max)
  return rank_wagers_max_;
}
inline void CMsgGCToClientWageringResponse::set_rank_wagers_max(::google::protobuf::uint32 value) {
  set_has_rank_wagers_max();
  rank_wagers_max_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringResponse.rank_wagers_max)
}

// -------------------------------------------------------------------

// CMsgGCToClientWageringUpdate

// optional uint32 event_id = 1;
inline bool CMsgGCToClientWageringUpdate::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientWageringUpdate::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientWageringUpdate::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientWageringUpdate::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientWageringUpdate::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringUpdate.event_id)
  return event_id_;
}
inline void CMsgGCToClientWageringUpdate::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientWageringUpdate.event_id)
}

// optional .proto.dota.CMsgGCToClientWageringResponse wagering_info = 2;
inline bool CMsgGCToClientWageringUpdate::has_wagering_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientWageringUpdate::set_has_wagering_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientWageringUpdate::clear_has_wagering_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientWageringUpdate::clear_wagering_info() {
  if (wagering_info_ != NULL) wagering_info_->::proto::dota::CMsgGCToClientWageringResponse::Clear();
  clear_has_wagering_info();
}
inline const ::proto::dota::CMsgGCToClientWageringResponse& CMsgGCToClientWageringUpdate::wagering_info() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientWageringUpdate.wagering_info)
  return wagering_info_ != NULL ? *wagering_info_
                         : *::proto::dota::CMsgGCToClientWageringResponse::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientWageringResponse* CMsgGCToClientWageringUpdate::mutable_wagering_info() {
  set_has_wagering_info();
  if (wagering_info_ == NULL) {
    wagering_info_ = new ::proto::dota::CMsgGCToClientWageringResponse;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientWageringUpdate.wagering_info)
  return wagering_info_;
}
inline ::proto::dota::CMsgGCToClientWageringResponse* CMsgGCToClientWageringUpdate::release_wagering_info() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientWageringUpdate.wagering_info)
  clear_has_wagering_info();
  ::proto::dota::CMsgGCToClientWageringResponse* temp = wagering_info_;
  wagering_info_ = NULL;
  return temp;
}
inline void CMsgGCToClientWageringUpdate::set_allocated_wagering_info(::proto::dota::CMsgGCToClientWageringResponse* wagering_info) {
  delete wagering_info_;
  wagering_info_ = wagering_info;
  if (wagering_info) {
    set_has_wagering_info();
  } else {
    clear_has_wagering_info();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientWageringUpdate.wagering_info)
}

// -------------------------------------------------------------------

// CMsgGCToClientArcanaVotesUpdate

// optional uint32 event_id = 1;
inline bool CMsgGCToClientArcanaVotesUpdate::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientArcanaVotesUpdate::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientArcanaVotesUpdate::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientArcanaVotesUpdate::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientArcanaVotesUpdate::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientArcanaVotesUpdate.event_id)
  return event_id_;
}
inline void CMsgGCToClientArcanaVotesUpdate::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientArcanaVotesUpdate.event_id)
}

// optional .proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse arcana_votes = 2;
inline bool CMsgGCToClientArcanaVotesUpdate::has_arcana_votes() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientArcanaVotesUpdate::set_has_arcana_votes() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientArcanaVotesUpdate::clear_has_arcana_votes() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientArcanaVotesUpdate::clear_arcana_votes() {
  if (arcana_votes_ != NULL) arcana_votes_->::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse::Clear();
  clear_has_arcana_votes();
}
inline const ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse& CMsgGCToClientArcanaVotesUpdate::arcana_votes() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientArcanaVotesUpdate.arcana_votes)
  return arcana_votes_ != NULL ? *arcana_votes_
                         : *::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* CMsgGCToClientArcanaVotesUpdate::mutable_arcana_votes() {
  set_has_arcana_votes();
  if (arcana_votes_ == NULL) {
    arcana_votes_ = new ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientArcanaVotesUpdate.arcana_votes)
  return arcana_votes_;
}
inline ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* CMsgGCToClientArcanaVotesUpdate::release_arcana_votes() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientArcanaVotesUpdate.arcana_votes)
  clear_has_arcana_votes();
  ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* temp = arcana_votes_;
  arcana_votes_ = NULL;
  return temp;
}
inline void CMsgGCToClientArcanaVotesUpdate::set_allocated_arcana_votes(::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse* arcana_votes) {
  delete arcana_votes_;
  arcana_votes_ = arcana_votes;
  if (arcana_votes) {
    set_has_arcana_votes();
  } else {
    clear_has_arcana_votes();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientArcanaVotesUpdate.arcana_votes)
}

// -------------------------------------------------------------------

// CMsgClientToGCGetEventGoals

// repeated .proto.dota.EEvent event_ids = 1;
inline int CMsgClientToGCGetEventGoals::event_ids_size() const {
  return event_ids_.size();
}
inline void CMsgClientToGCGetEventGoals::clear_event_ids() {
  event_ids_.Clear();
}
inline ::proto::dota::EEvent CMsgClientToGCGetEventGoals::event_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGetEventGoals.event_ids)
  return static_cast< ::proto::dota::EEvent >(event_ids_.Get(index));
}
inline void CMsgClientToGCGetEventGoals::set_event_ids(int index, ::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  event_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGetEventGoals.event_ids)
}
inline void CMsgClientToGCGetEventGoals::add_event_ids(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  event_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCGetEventGoals.event_ids)
}
inline const ::google::protobuf::RepeatedField<int>&
CMsgClientToGCGetEventGoals::event_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCGetEventGoals.event_ids)
  return event_ids_;
}
inline ::google::protobuf::RepeatedField<int>*
CMsgClientToGCGetEventGoals::mutable_event_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCGetEventGoals.event_ids)
  return &event_ids_;
}

// -------------------------------------------------------------------

// CMsgEventGoals_EventGoal

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgEventGoals_EventGoal::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgEventGoals_EventGoal::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgEventGoals_EventGoal::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgEventGoals_EventGoal::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::proto::dota::EEvent CMsgEventGoals_EventGoal::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventGoals.EventGoal.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgEventGoals_EventGoal::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEventGoals.EventGoal.event_id)
}

// optional uint32 goal_id = 2;
inline bool CMsgEventGoals_EventGoal::has_goal_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgEventGoals_EventGoal::set_has_goal_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgEventGoals_EventGoal::clear_has_goal_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgEventGoals_EventGoal::clear_goal_id() {
  goal_id_ = 0u;
  clear_has_goal_id();
}
inline ::google::protobuf::uint32 CMsgEventGoals_EventGoal::goal_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventGoals.EventGoal.goal_id)
  return goal_id_;
}
inline void CMsgEventGoals_EventGoal::set_goal_id(::google::protobuf::uint32 value) {
  set_has_goal_id();
  goal_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEventGoals.EventGoal.goal_id)
}

// optional uint64 value = 3;
inline bool CMsgEventGoals_EventGoal::has_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgEventGoals_EventGoal::set_has_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgEventGoals_EventGoal::clear_has_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgEventGoals_EventGoal::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
  clear_has_value();
}
inline ::google::protobuf::uint64 CMsgEventGoals_EventGoal::value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventGoals.EventGoal.value)
  return value_;
}
inline void CMsgEventGoals_EventGoal::set_value(::google::protobuf::uint64 value) {
  set_has_value();
  value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgEventGoals.EventGoal.value)
}

// -------------------------------------------------------------------

// CMsgEventGoals

// repeated .proto.dota.CMsgEventGoals.EventGoal event_goals = 1;
inline int CMsgEventGoals::event_goals_size() const {
  return event_goals_.size();
}
inline void CMsgEventGoals::clear_event_goals() {
  event_goals_.Clear();
}
inline const ::proto::dota::CMsgEventGoals_EventGoal& CMsgEventGoals::event_goals(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgEventGoals.event_goals)
  return event_goals_.Get(index);
}
inline ::proto::dota::CMsgEventGoals_EventGoal* CMsgEventGoals::mutable_event_goals(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgEventGoals.event_goals)
  return event_goals_.Mutable(index);
}
inline ::proto::dota::CMsgEventGoals_EventGoal* CMsgEventGoals::add_event_goals() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgEventGoals.event_goals)
  return event_goals_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventGoals_EventGoal >*
CMsgEventGoals::mutable_event_goals() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgEventGoals.event_goals)
  return &event_goals_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgEventGoals_EventGoal >&
CMsgEventGoals::event_goals() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgEventGoals.event_goals)
  return event_goals_;
}

// -------------------------------------------------------------------

// CMsgGCToGCLeaguePredictions

// optional uint32 league_id = 1;
inline bool CMsgGCToGCLeaguePredictions::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToGCLeaguePredictions::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToGCLeaguePredictions::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToGCLeaguePredictions::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgGCToGCLeaguePredictions::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToGCLeaguePredictions.league_id)
  return league_id_;
}
inline void CMsgGCToGCLeaguePredictions::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToGCLeaguePredictions.league_id)
}

// -------------------------------------------------------------------

// CMsgPredictionRankings_PredictionLine

// optional uint32 answer_id = 1;
inline bool CMsgPredictionRankings_PredictionLine::has_answer_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPredictionRankings_PredictionLine::set_has_answer_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_has_answer_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_answer_id() {
  answer_id_ = 0u;
  clear_has_answer_id();
}
inline ::google::protobuf::uint32 CMsgPredictionRankings_PredictionLine::answer_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.PredictionLine.answer_id)
  return answer_id_;
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_id(::google::protobuf::uint32 value) {
  set_has_answer_id();
  answer_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionRankings.PredictionLine.answer_id)
}

// optional string answer_name = 2;
inline bool CMsgPredictionRankings_PredictionLine::has_answer_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPredictionRankings_PredictionLine::set_has_answer_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_has_answer_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_answer_name() {
  answer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_answer_name();
}
inline const ::std::string& CMsgPredictionRankings_PredictionLine::answer_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
  return answer_name_.GetNoArena();
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_name(const ::std::string& value) {
  set_has_answer_name();
  answer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
}
#if LANG_CXX11
inline void CMsgPredictionRankings_PredictionLine::set_answer_name(::std::string&& value) {
  set_has_answer_name();
  answer_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
}
#endif
inline void CMsgPredictionRankings_PredictionLine::set_answer_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_answer_name();
  answer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_name(const char* value, size_t size) {
  set_has_answer_name();
  answer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
}
inline ::std::string* CMsgPredictionRankings_PredictionLine::mutable_answer_name() {
  set_has_answer_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
  return answer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgPredictionRankings_PredictionLine::release_answer_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
  clear_has_answer_name();
  return answer_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgPredictionRankings_PredictionLine::set_allocated_answer_name(::std::string* answer_name) {
  if (answer_name != NULL) {
    set_has_answer_name();
  } else {
    clear_has_answer_name();
  }
  answer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), answer_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgPredictionRankings.PredictionLine.answer_name)
}

// optional uint64 answer_logo = 3;
inline bool CMsgPredictionRankings_PredictionLine::has_answer_logo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPredictionRankings_PredictionLine::set_has_answer_logo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_has_answer_logo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_answer_logo() {
  answer_logo_ = GOOGLE_ULONGLONG(0);
  clear_has_answer_logo();
}
inline ::google::protobuf::uint64 CMsgPredictionRankings_PredictionLine::answer_logo() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.PredictionLine.answer_logo)
  return answer_logo_;
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_logo(::google::protobuf::uint64 value) {
  set_has_answer_logo();
  answer_logo_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionRankings.PredictionLine.answer_logo)
}

// optional float answer_value = 4;
inline bool CMsgPredictionRankings_PredictionLine::has_answer_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPredictionRankings_PredictionLine::set_has_answer_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_has_answer_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPredictionRankings_PredictionLine::clear_answer_value() {
  answer_value_ = 0;
  clear_has_answer_value();
}
inline float CMsgPredictionRankings_PredictionLine::answer_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.PredictionLine.answer_value)
  return answer_value_;
}
inline void CMsgPredictionRankings_PredictionLine::set_answer_value(float value) {
  set_has_answer_value();
  answer_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionRankings.PredictionLine.answer_value)
}

// -------------------------------------------------------------------

// CMsgPredictionRankings_Prediction

// optional uint32 selection_id = 1;
inline bool CMsgPredictionRankings_Prediction::has_selection_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPredictionRankings_Prediction::set_has_selection_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPredictionRankings_Prediction::clear_has_selection_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPredictionRankings_Prediction::clear_selection_id() {
  selection_id_ = 0u;
  clear_has_selection_id();
}
inline ::google::protobuf::uint32 CMsgPredictionRankings_Prediction::selection_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.Prediction.selection_id)
  return selection_id_;
}
inline void CMsgPredictionRankings_Prediction::set_selection_id(::google::protobuf::uint32 value) {
  set_has_selection_id();
  selection_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionRankings.Prediction.selection_id)
}

// repeated .proto.dota.CMsgPredictionRankings.PredictionLine prediction_lines = 2;
inline int CMsgPredictionRankings_Prediction::prediction_lines_size() const {
  return prediction_lines_.size();
}
inline void CMsgPredictionRankings_Prediction::clear_prediction_lines() {
  prediction_lines_.Clear();
}
inline const ::proto::dota::CMsgPredictionRankings_PredictionLine& CMsgPredictionRankings_Prediction::prediction_lines(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.Prediction.prediction_lines)
  return prediction_lines_.Get(index);
}
inline ::proto::dota::CMsgPredictionRankings_PredictionLine* CMsgPredictionRankings_Prediction::mutable_prediction_lines(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPredictionRankings.Prediction.prediction_lines)
  return prediction_lines_.Mutable(index);
}
inline ::proto::dota::CMsgPredictionRankings_PredictionLine* CMsgPredictionRankings_Prediction::add_prediction_lines() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgPredictionRankings.Prediction.prediction_lines)
  return prediction_lines_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_PredictionLine >*
CMsgPredictionRankings_Prediction::mutable_prediction_lines() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgPredictionRankings.Prediction.prediction_lines)
  return &prediction_lines_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_PredictionLine >&
CMsgPredictionRankings_Prediction::prediction_lines() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgPredictionRankings.Prediction.prediction_lines)
  return prediction_lines_;
}

// -------------------------------------------------------------------

// CMsgPredictionRankings

// repeated .proto.dota.CMsgPredictionRankings.Prediction predictions = 1;
inline int CMsgPredictionRankings::predictions_size() const {
  return predictions_.size();
}
inline void CMsgPredictionRankings::clear_predictions() {
  predictions_.Clear();
}
inline const ::proto::dota::CMsgPredictionRankings_Prediction& CMsgPredictionRankings::predictions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionRankings.predictions)
  return predictions_.Get(index);
}
inline ::proto::dota::CMsgPredictionRankings_Prediction* CMsgPredictionRankings::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPredictionRankings.predictions)
  return predictions_.Mutable(index);
}
inline ::proto::dota::CMsgPredictionRankings_Prediction* CMsgPredictionRankings::add_predictions() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgPredictionRankings.predictions)
  return predictions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_Prediction >*
CMsgPredictionRankings::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgPredictionRankings.predictions)
  return &predictions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionRankings_Prediction >&
CMsgPredictionRankings::predictions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgPredictionRankings.predictions)
  return predictions_;
}

// -------------------------------------------------------------------

// CMsgPredictionResults_ResultBreakdown

// optional uint32 answer_selection = 2;
inline bool CMsgPredictionResults_ResultBreakdown::has_answer_selection() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPredictionResults_ResultBreakdown::set_has_answer_selection() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPredictionResults_ResultBreakdown::clear_has_answer_selection() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPredictionResults_ResultBreakdown::clear_answer_selection() {
  answer_selection_ = 0u;
  clear_has_answer_selection();
}
inline ::google::protobuf::uint32 CMsgPredictionResults_ResultBreakdown::answer_selection() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionResults.ResultBreakdown.answer_selection)
  return answer_selection_;
}
inline void CMsgPredictionResults_ResultBreakdown::set_answer_selection(::google::protobuf::uint32 value) {
  set_has_answer_selection();
  answer_selection_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionResults.ResultBreakdown.answer_selection)
}

// optional float answer_value = 3;
inline bool CMsgPredictionResults_ResultBreakdown::has_answer_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPredictionResults_ResultBreakdown::set_has_answer_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPredictionResults_ResultBreakdown::clear_has_answer_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPredictionResults_ResultBreakdown::clear_answer_value() {
  answer_value_ = 0;
  clear_has_answer_value();
}
inline float CMsgPredictionResults_ResultBreakdown::answer_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionResults.ResultBreakdown.answer_value)
  return answer_value_;
}
inline void CMsgPredictionResults_ResultBreakdown::set_answer_value(float value) {
  set_has_answer_value();
  answer_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionResults.ResultBreakdown.answer_value)
}

// -------------------------------------------------------------------

// CMsgPredictionResults_Result

// optional uint32 selection_id = 1;
inline bool CMsgPredictionResults_Result::has_selection_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPredictionResults_Result::set_has_selection_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPredictionResults_Result::clear_has_selection_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPredictionResults_Result::clear_selection_id() {
  selection_id_ = 0u;
  clear_has_selection_id();
}
inline ::google::protobuf::uint32 CMsgPredictionResults_Result::selection_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionResults.Result.selection_id)
  return selection_id_;
}
inline void CMsgPredictionResults_Result::set_selection_id(::google::protobuf::uint32 value) {
  set_has_selection_id();
  selection_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPredictionResults.Result.selection_id)
}

// repeated .proto.dota.CMsgPredictionResults.ResultBreakdown result_breakdown = 2;
inline int CMsgPredictionResults_Result::result_breakdown_size() const {
  return result_breakdown_.size();
}
inline void CMsgPredictionResults_Result::clear_result_breakdown() {
  result_breakdown_.Clear();
}
inline const ::proto::dota::CMsgPredictionResults_ResultBreakdown& CMsgPredictionResults_Result::result_breakdown(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionResults.Result.result_breakdown)
  return result_breakdown_.Get(index);
}
inline ::proto::dota::CMsgPredictionResults_ResultBreakdown* CMsgPredictionResults_Result::mutable_result_breakdown(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPredictionResults.Result.result_breakdown)
  return result_breakdown_.Mutable(index);
}
inline ::proto::dota::CMsgPredictionResults_ResultBreakdown* CMsgPredictionResults_Result::add_result_breakdown() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgPredictionResults.Result.result_breakdown)
  return result_breakdown_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_ResultBreakdown >*
CMsgPredictionResults_Result::mutable_result_breakdown() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgPredictionResults.Result.result_breakdown)
  return &result_breakdown_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_ResultBreakdown >&
CMsgPredictionResults_Result::result_breakdown() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgPredictionResults.Result.result_breakdown)
  return result_breakdown_;
}

// -------------------------------------------------------------------

// CMsgPredictionResults

// repeated .proto.dota.CMsgPredictionResults.Result results = 1;
inline int CMsgPredictionResults::results_size() const {
  return results_.size();
}
inline void CMsgPredictionResults::clear_results() {
  results_.Clear();
}
inline const ::proto::dota::CMsgPredictionResults_Result& CMsgPredictionResults::results(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPredictionResults.results)
  return results_.Get(index);
}
inline ::proto::dota::CMsgPredictionResults_Result* CMsgPredictionResults::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPredictionResults.results)
  return results_.Mutable(index);
}
inline ::proto::dota::CMsgPredictionResults_Result* CMsgPredictionResults::add_results() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgPredictionResults.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_Result >*
CMsgPredictionResults::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgPredictionResults.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgPredictionResults_Result >&
CMsgPredictionResults::results() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgPredictionResults.results)
  return results_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSuspiciousActivity

// optional uint64 app_data = 1;
inline bool CMsgClientToGCSuspiciousActivity::has_app_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSuspiciousActivity::set_has_app_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSuspiciousActivity::clear_has_app_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSuspiciousActivity::clear_app_data() {
  app_data_ = GOOGLE_ULONGLONG(0);
  clear_has_app_data();
}
inline ::google::protobuf::uint64 CMsgClientToGCSuspiciousActivity::app_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSuspiciousActivity.app_data)
  return app_data_;
}
inline void CMsgClientToGCSuspiciousActivity::set_app_data(::google::protobuf::uint64 value) {
  set_has_app_data();
  app_data_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSuspiciousActivity.app_data)
}

// -------------------------------------------------------------------

// CMsgClientToGCHasPlayerVotedForMVP

// optional uint64 match_id = 1;
inline bool CMsgClientToGCHasPlayerVotedForMVP::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCHasPlayerVotedForMVP::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCHasPlayerVotedForMVP::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCHasPlayerVotedForMVP::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCHasPlayerVotedForMVP::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCHasPlayerVotedForMVP.match_id)
  return match_id_;
}
inline void CMsgClientToGCHasPlayerVotedForMVP::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCHasPlayerVotedForMVP.match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCHasPlayerVotedForMVPResponse

// optional bool result = 1;
inline bool CMsgClientToGCHasPlayerVotedForMVPResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCHasPlayerVotedForMVPResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCHasPlayerVotedForMVPResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCHasPlayerVotedForMVPResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CMsgClientToGCHasPlayerVotedForMVPResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCHasPlayerVotedForMVPResponse.result)
  return result_;
}
inline void CMsgClientToGCHasPlayerVotedForMVPResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCHasPlayerVotedForMVPResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForMVP

// optional uint64 match_id = 1;
inline bool CMsgClientToGCVoteForMVP::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCVoteForMVP::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCVoteForMVP::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCVoteForMVP::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCVoteForMVP::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForMVP.match_id)
  return match_id_;
}
inline void CMsgClientToGCVoteForMVP::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForMVP.match_id)
}

// optional uint32 account_id = 3;
inline bool CMsgClientToGCVoteForMVP::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCVoteForMVP::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCVoteForMVP::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCVoteForMVP::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCVoteForMVP::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForMVP.account_id)
  return account_id_;
}
inline void CMsgClientToGCVoteForMVP::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForMVP.account_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForMVPResponse

// optional bool result = 1;
inline bool CMsgClientToGCVoteForMVPResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCVoteForMVPResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCVoteForMVPResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCVoteForMVPResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CMsgClientToGCVoteForMVPResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForMVPResponse.result)
  return result_;
}
inline void CMsgClientToGCVoteForMVPResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForMVPResponse.result)
}

// -------------------------------------------------------------------

// CMsgMVPVotesForMatch_Player

// optional uint32 account_id = 1;
inline bool CMsgMVPVotesForMatch_Player::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMVPVotesForMatch_Player::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMVPVotesForMatch_Player::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMVPVotesForMatch_Player::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgMVPVotesForMatch_Player::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMVPVotesForMatch.Player.account_id)
  return account_id_;
}
inline void CMsgMVPVotesForMatch_Player::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMVPVotesForMatch.Player.account_id)
}

// optional uint32 vote_count = 2;
inline bool CMsgMVPVotesForMatch_Player::has_vote_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMVPVotesForMatch_Player::set_has_vote_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMVPVotesForMatch_Player::clear_has_vote_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMVPVotesForMatch_Player::clear_vote_count() {
  vote_count_ = 0u;
  clear_has_vote_count();
}
inline ::google::protobuf::uint32 CMsgMVPVotesForMatch_Player::vote_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMVPVotesForMatch.Player.vote_count)
  return vote_count_;
}
inline void CMsgMVPVotesForMatch_Player::set_vote_count(::google::protobuf::uint32 value) {
  set_has_vote_count();
  vote_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMVPVotesForMatch.Player.vote_count)
}

// -------------------------------------------------------------------

// CMsgMVPVotesForMatch

// repeated .proto.dota.CMsgMVPVotesForMatch.Player players = 1;
inline int CMsgMVPVotesForMatch::players_size() const {
  return players_.size();
}
inline void CMsgMVPVotesForMatch::clear_players() {
  players_.Clear();
}
inline const ::proto::dota::CMsgMVPVotesForMatch_Player& CMsgMVPVotesForMatch::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMVPVotesForMatch.players)
  return players_.Get(index);
}
inline ::proto::dota::CMsgMVPVotesForMatch_Player* CMsgMVPVotesForMatch::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgMVPVotesForMatch.players)
  return players_.Mutable(index);
}
inline ::proto::dota::CMsgMVPVotesForMatch_Player* CMsgMVPVotesForMatch::add_players() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgMVPVotesForMatch.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMVPVotesForMatch_Player >*
CMsgMVPVotesForMatch::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgMVPVotesForMatch.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgMVPVotesForMatch_Player >&
CMsgMVPVotesForMatch::players() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgMVPVotesForMatch.players)
  return players_;
}

// -------------------------------------------------------------------

// CMsgLeaguePrizePool

// optional uint32 prize_pool = 1;
inline bool CMsgLeaguePrizePool::has_prize_pool() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLeaguePrizePool::set_has_prize_pool() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLeaguePrizePool::clear_has_prize_pool() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLeaguePrizePool::clear_prize_pool() {
  prize_pool_ = 0u;
  clear_has_prize_pool();
}
inline ::google::protobuf::uint32 CMsgLeaguePrizePool::prize_pool() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeaguePrizePool.prize_pool)
  return prize_pool_;
}
inline void CMsgLeaguePrizePool::set_prize_pool(::google::protobuf::uint32 value) {
  set_has_prize_pool();
  prize_pool_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeaguePrizePool.prize_pool)
}

// optional float increment_per_second = 2;
inline bool CMsgLeaguePrizePool::has_increment_per_second() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLeaguePrizePool::set_has_increment_per_second() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLeaguePrizePool::clear_has_increment_per_second() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLeaguePrizePool::clear_increment_per_second() {
  increment_per_second_ = 0;
  clear_has_increment_per_second();
}
inline float CMsgLeaguePrizePool::increment_per_second() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgLeaguePrizePool.increment_per_second)
  return increment_per_second_;
}
inline void CMsgLeaguePrizePool::set_increment_per_second(float value) {
  set_has_increment_per_second();
  increment_per_second_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgLeaguePrizePool.increment_per_second)
}

// -------------------------------------------------------------------

// CMsgClientToGCTeammateStatsRequest

// -------------------------------------------------------------------

// CMsgClientToGCTeammateStatsResponse_TeammateStat

// optional uint32 account_id = 1;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCTeammateStatsResponse_TeammateStat::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.account_id)
  return account_id_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.account_id)
}

// optional uint32 games = 2;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_games() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_has_games() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_has_games() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_games() {
  games_ = 0u;
  clear_has_games();
}
inline ::google::protobuf::uint32 CMsgClientToGCTeammateStatsResponse_TeammateStat::games() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.games)
  return games_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_games(::google::protobuf::uint32 value) {
  set_has_games();
  games_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.games)
}

// optional uint32 wins = 3;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_wins() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_has_wins() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_has_wins() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_wins() {
  wins_ = 0u;
  clear_has_wins();
}
inline ::google::protobuf::uint32 CMsgClientToGCTeammateStatsResponse_TeammateStat::wins() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.wins)
  return wins_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_wins(::google::protobuf::uint32 value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.wins)
}

// optional uint32 most_recent_game_timestamp = 4;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_most_recent_game_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_has_most_recent_game_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_has_most_recent_game_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_most_recent_game_timestamp() {
  most_recent_game_timestamp_ = 0u;
  clear_has_most_recent_game_timestamp();
}
inline ::google::protobuf::uint32 CMsgClientToGCTeammateStatsResponse_TeammateStat::most_recent_game_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.most_recent_game_timestamp)
  return most_recent_game_timestamp_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_most_recent_game_timestamp(::google::protobuf::uint32 value) {
  set_has_most_recent_game_timestamp();
  most_recent_game_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.most_recent_game_timestamp)
}

// optional uint64 most_recent_game_match_id = 5;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_most_recent_game_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_has_most_recent_game_match_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_has_most_recent_game_match_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_most_recent_game_match_id() {
  most_recent_game_match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_most_recent_game_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCTeammateStatsResponse_TeammateStat::most_recent_game_match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.most_recent_game_match_id)
  return most_recent_game_match_id_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_most_recent_game_match_id(::google::protobuf::uint64 value) {
  set_has_most_recent_game_match_id();
  most_recent_game_match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.most_recent_game_match_id)
}

// optional float performance = 100;
inline bool CMsgClientToGCTeammateStatsResponse_TeammateStat::has_performance() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_has_performance() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_has_performance() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::clear_performance() {
  performance_ = 0;
  clear_has_performance();
}
inline float CMsgClientToGCTeammateStatsResponse_TeammateStat::performance() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.performance)
  return performance_;
}
inline void CMsgClientToGCTeammateStatsResponse_TeammateStat::set_performance(float value) {
  set_has_performance();
  performance_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat.performance)
}

// -------------------------------------------------------------------

// CMsgClientToGCTeammateStatsResponse

// optional bool success = 1;
inline bool CMsgClientToGCTeammateStatsResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTeammateStatsResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCTeammateStatsResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCTeammateStatsResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgClientToGCTeammateStatsResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.success)
  return success_;
}
inline void CMsgClientToGCTeammateStatsResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTeammateStatsResponse.success)
}

// repeated .proto.dota.CMsgClientToGCTeammateStatsResponse.TeammateStat teammate_stats = 2;
inline int CMsgClientToGCTeammateStatsResponse::teammate_stats_size() const {
  return teammate_stats_.size();
}
inline void CMsgClientToGCTeammateStatsResponse::clear_teammate_stats() {
  teammate_stats_.Clear();
}
inline const ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat& CMsgClientToGCTeammateStatsResponse::teammate_stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return teammate_stats_.Get(index);
}
inline ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat* CMsgClientToGCTeammateStatsResponse::mutable_teammate_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return teammate_stats_.Mutable(index);
}
inline ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat* CMsgClientToGCTeammateStatsResponse::add_teammate_stats() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return teammate_stats_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat >*
CMsgClientToGCTeammateStatsResponse::mutable_teammate_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return &teammate_stats_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCTeammateStatsResponse_TeammateStat >&
CMsgClientToGCTeammateStatsResponse::teammate_stats() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCTeammateStatsResponse.teammate_stats)
  return teammate_stats_;
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForArcana_MatchVote

// optional uint64 match_id = 1;
inline bool CMsgClientToGCVoteForArcana_MatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCVoteForArcana_MatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForArcana.MatchVote.match_id)
  return match_id_;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForArcana.MatchVote.match_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgClientToGCVoteForArcana_MatchVote::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCVoteForArcana_MatchVote::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForArcana.MatchVote.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForArcana.MatchVote.hero_id)
}

// optional uint32 vote_count = 3;
inline bool CMsgClientToGCVoteForArcana_MatchVote::has_vote_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_has_vote_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_has_vote_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::clear_vote_count() {
  vote_count_ = 0u;
  clear_has_vote_count();
}
inline ::google::protobuf::uint32 CMsgClientToGCVoteForArcana_MatchVote::vote_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForArcana.MatchVote.vote_count)
  return vote_count_;
}
inline void CMsgClientToGCVoteForArcana_MatchVote::set_vote_count(::google::protobuf::uint32 value) {
  set_has_vote_count();
  vote_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForArcana.MatchVote.vote_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForArcana

// repeated .proto.dota.CMsgClientToGCVoteForArcana.MatchVote matches = 1;
inline int CMsgClientToGCVoteForArcana::matches_size() const {
  return matches_.size();
}
inline void CMsgClientToGCVoteForArcana::clear_matches() {
  matches_.Clear();
}
inline const ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote& CMsgClientToGCVoteForArcana::matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForArcana.matches)
  return matches_.Get(index);
}
inline ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote* CMsgClientToGCVoteForArcana::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCVoteForArcana.matches)
  return matches_.Mutable(index);
}
inline ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote* CMsgClientToGCVoteForArcana::add_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCVoteForArcana.matches)
  return matches_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote >*
CMsgClientToGCVoteForArcana::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCVoteForArcana.matches)
  return &matches_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCVoteForArcana_MatchVote >&
CMsgClientToGCVoteForArcana::matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCVoteForArcana.matches)
  return matches_;
}

// -------------------------------------------------------------------

// CMsgClientToGCVoteForArcanaResponse

// optional .proto.dota.CMsgClientToGCVoteForArcanaResponse.Result result = 1 [default = SUCCEEDED];
inline bool CMsgClientToGCVoteForArcanaResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCVoteForArcanaResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCVoteForArcanaResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCVoteForArcanaResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result CMsgClientToGCVoteForArcanaResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCVoteForArcanaResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result >(result_);
}
inline void CMsgClientToGCVoteForArcanaResponse::set_result(::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCVoteForArcanaResponse.result)
}

// -------------------------------------------------------------------

// CMsgArcanaVotes_Match

// optional uint32 match_id = 1;
inline bool CMsgArcanaVotes_Match::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgArcanaVotes_Match::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgArcanaVotes_Match::clear_match_id() {
  match_id_ = 0u;
  clear_has_match_id();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.match_id)
  return match_id_;
}
inline void CMsgArcanaVotes_Match::set_match_id(::google::protobuf::uint32 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.match_id)
}

// optional uint32 hero_id_0 = 2;
inline bool CMsgArcanaVotes_Match::has_hero_id_0() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_hero_id_0() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgArcanaVotes_Match::clear_has_hero_id_0() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgArcanaVotes_Match::clear_hero_id_0() {
  hero_id_0_ = 0u;
  clear_has_hero_id_0();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::hero_id_0() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.hero_id_0)
  return hero_id_0_;
}
inline void CMsgArcanaVotes_Match::set_hero_id_0(::google::protobuf::uint32 value) {
  set_has_hero_id_0();
  hero_id_0_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.hero_id_0)
}

// optional uint32 hero_id_1 = 3;
inline bool CMsgArcanaVotes_Match::has_hero_id_1() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_hero_id_1() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgArcanaVotes_Match::clear_has_hero_id_1() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgArcanaVotes_Match::clear_hero_id_1() {
  hero_id_1_ = 0u;
  clear_has_hero_id_1();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::hero_id_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.hero_id_1)
  return hero_id_1_;
}
inline void CMsgArcanaVotes_Match::set_hero_id_1(::google::protobuf::uint32 value) {
  set_has_hero_id_1();
  hero_id_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.hero_id_1)
}

// optional uint32 hero_seeding_0 = 4;
inline bool CMsgArcanaVotes_Match::has_hero_seeding_0() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_hero_seeding_0() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgArcanaVotes_Match::clear_has_hero_seeding_0() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgArcanaVotes_Match::clear_hero_seeding_0() {
  hero_seeding_0_ = 0u;
  clear_has_hero_seeding_0();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::hero_seeding_0() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.hero_seeding_0)
  return hero_seeding_0_;
}
inline void CMsgArcanaVotes_Match::set_hero_seeding_0(::google::protobuf::uint32 value) {
  set_has_hero_seeding_0();
  hero_seeding_0_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.hero_seeding_0)
}

// optional uint32 hero_seeding_1 = 5;
inline bool CMsgArcanaVotes_Match::has_hero_seeding_1() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_hero_seeding_1() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgArcanaVotes_Match::clear_has_hero_seeding_1() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgArcanaVotes_Match::clear_hero_seeding_1() {
  hero_seeding_1_ = 0u;
  clear_has_hero_seeding_1();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::hero_seeding_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.hero_seeding_1)
  return hero_seeding_1_;
}
inline void CMsgArcanaVotes_Match::set_hero_seeding_1(::google::protobuf::uint32 value) {
  set_has_hero_seeding_1();
  hero_seeding_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.hero_seeding_1)
}

// optional uint32 vote_count_0 = 6;
inline bool CMsgArcanaVotes_Match::has_vote_count_0() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_vote_count_0() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgArcanaVotes_Match::clear_has_vote_count_0() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgArcanaVotes_Match::clear_vote_count_0() {
  vote_count_0_ = 0u;
  clear_has_vote_count_0();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::vote_count_0() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.vote_count_0)
  return vote_count_0_;
}
inline void CMsgArcanaVotes_Match::set_vote_count_0(::google::protobuf::uint32 value) {
  set_has_vote_count_0();
  vote_count_0_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.vote_count_0)
}

// optional uint32 vote_count_1 = 7;
inline bool CMsgArcanaVotes_Match::has_vote_count_1() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_vote_count_1() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgArcanaVotes_Match::clear_has_vote_count_1() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgArcanaVotes_Match::clear_vote_count_1() {
  vote_count_1_ = 0u;
  clear_has_vote_count_1();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::vote_count_1() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.vote_count_1)
  return vote_count_1_;
}
inline void CMsgArcanaVotes_Match::set_vote_count_1(::google::protobuf::uint32 value) {
  set_has_vote_count_1();
  vote_count_1_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.vote_count_1)
}

// optional uint32 voting_state = 8;
inline bool CMsgArcanaVotes_Match::has_voting_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_voting_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgArcanaVotes_Match::clear_has_voting_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgArcanaVotes_Match::clear_voting_state() {
  voting_state_ = 0u;
  clear_has_voting_state();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::voting_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.voting_state)
  return voting_state_;
}
inline void CMsgArcanaVotes_Match::set_voting_state(::google::protobuf::uint32 value) {
  set_has_voting_state();
  voting_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.voting_state)
}

// optional uint32 round_number = 9;
inline bool CMsgArcanaVotes_Match::has_round_number() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_round_number() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgArcanaVotes_Match::clear_has_round_number() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgArcanaVotes_Match::clear_round_number() {
  round_number_ = 0u;
  clear_has_round_number();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::round_number() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.round_number)
  return round_number_;
}
inline void CMsgArcanaVotes_Match::set_round_number(::google::protobuf::uint32 value) {
  set_has_round_number();
  round_number_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.round_number)
}

// optional bool is_votes_hidden = 10;
inline bool CMsgArcanaVotes_Match::has_is_votes_hidden() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_is_votes_hidden() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgArcanaVotes_Match::clear_has_is_votes_hidden() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgArcanaVotes_Match::clear_is_votes_hidden() {
  is_votes_hidden_ = false;
  clear_has_is_votes_hidden();
}
inline bool CMsgArcanaVotes_Match::is_votes_hidden() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.is_votes_hidden)
  return is_votes_hidden_;
}
inline void CMsgArcanaVotes_Match::set_is_votes_hidden(bool value) {
  set_has_is_votes_hidden();
  is_votes_hidden_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.is_votes_hidden)
}

// optional uint32 calibration_time_remaining = 11;
inline bool CMsgArcanaVotes_Match::has_calibration_time_remaining() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgArcanaVotes_Match::set_has_calibration_time_remaining() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgArcanaVotes_Match::clear_has_calibration_time_remaining() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgArcanaVotes_Match::clear_calibration_time_remaining() {
  calibration_time_remaining_ = 0u;
  clear_has_calibration_time_remaining();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes_Match::calibration_time_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.Match.calibration_time_remaining)
  return calibration_time_remaining_;
}
inline void CMsgArcanaVotes_Match::set_calibration_time_remaining(::google::protobuf::uint32 value) {
  set_has_calibration_time_remaining();
  calibration_time_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.Match.calibration_time_remaining)
}

// -------------------------------------------------------------------

// CMsgArcanaVotes

// repeated .proto.dota.CMsgArcanaVotes.Match matches = 1;
inline int CMsgArcanaVotes::matches_size() const {
  return matches_.size();
}
inline void CMsgArcanaVotes::clear_matches() {
  matches_.Clear();
}
inline const ::proto::dota::CMsgArcanaVotes_Match& CMsgArcanaVotes::matches(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.matches)
  return matches_.Get(index);
}
inline ::proto::dota::CMsgArcanaVotes_Match* CMsgArcanaVotes::mutable_matches(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgArcanaVotes.matches)
  return matches_.Mutable(index);
}
inline ::proto::dota::CMsgArcanaVotes_Match* CMsgArcanaVotes::add_matches() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgArcanaVotes.matches)
  return matches_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgArcanaVotes_Match >*
CMsgArcanaVotes::mutable_matches() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgArcanaVotes.matches)
  return &matches_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgArcanaVotes_Match >&
CMsgArcanaVotes::matches() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgArcanaVotes.matches)
  return matches_;
}

// optional uint32 round_time_remaining = 2;
inline bool CMsgArcanaVotes::has_round_time_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgArcanaVotes::set_has_round_time_remaining() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgArcanaVotes::clear_has_round_time_remaining() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgArcanaVotes::clear_round_time_remaining() {
  round_time_remaining_ = 0u;
  clear_has_round_time_remaining();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::round_time_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.round_time_remaining)
  return round_time_remaining_;
}
inline void CMsgArcanaVotes::set_round_time_remaining(::google::protobuf::uint32 value) {
  set_has_round_time_remaining();
  round_time_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.round_time_remaining)
}

// optional uint32 round_number = 3;
inline bool CMsgArcanaVotes::has_round_number() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgArcanaVotes::set_has_round_number() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgArcanaVotes::clear_has_round_number() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgArcanaVotes::clear_round_number() {
  round_number_ = 0u;
  clear_has_round_number();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::round_number() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.round_number)
  return round_number_;
}
inline void CMsgArcanaVotes::set_round_number(::google::protobuf::uint32 value) {
  set_has_round_number();
  round_number_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.round_number)
}

// optional uint32 voting_state = 4;
inline bool CMsgArcanaVotes::has_voting_state() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgArcanaVotes::set_has_voting_state() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgArcanaVotes::clear_has_voting_state() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgArcanaVotes::clear_voting_state() {
  voting_state_ = 0u;
  clear_has_voting_state();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::voting_state() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.voting_state)
  return voting_state_;
}
inline void CMsgArcanaVotes::set_voting_state(::google::protobuf::uint32 value) {
  set_has_voting_state();
  voting_state_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.voting_state)
}

// optional bool is_current_round_calibrating = 5;
inline bool CMsgArcanaVotes::has_is_current_round_calibrating() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgArcanaVotes::set_has_is_current_round_calibrating() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgArcanaVotes::clear_has_is_current_round_calibrating() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgArcanaVotes::clear_is_current_round_calibrating() {
  is_current_round_calibrating_ = false;
  clear_has_is_current_round_calibrating();
}
inline bool CMsgArcanaVotes::is_current_round_calibrating() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.is_current_round_calibrating)
  return is_current_round_calibrating_;
}
inline void CMsgArcanaVotes::set_is_current_round_calibrating(bool value) {
  set_has_is_current_round_calibrating();
  is_current_round_calibrating_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.is_current_round_calibrating)
}

// optional uint32 closest_active_match_id = 6;
inline bool CMsgArcanaVotes::has_closest_active_match_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgArcanaVotes::set_has_closest_active_match_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgArcanaVotes::clear_has_closest_active_match_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgArcanaVotes::clear_closest_active_match_id() {
  closest_active_match_id_ = 0u;
  clear_has_closest_active_match_id();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::closest_active_match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.closest_active_match_id)
  return closest_active_match_id_;
}
inline void CMsgArcanaVotes::set_closest_active_match_id(::google::protobuf::uint32 value) {
  set_has_closest_active_match_id();
  closest_active_match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.closest_active_match_id)
}

// optional uint32 event_id = 7;
inline bool CMsgArcanaVotes::has_event_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgArcanaVotes::set_has_event_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgArcanaVotes::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgArcanaVotes::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgArcanaVotes::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgArcanaVotes.event_id)
  return event_id_;
}
inline void CMsgArcanaVotes::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgArcanaVotes.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestArcanaVotesRemaining

// -------------------------------------------------------------------

// CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote

// optional uint64 match_id = 1;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.match_id)
  return match_id_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.match_id)
}

// optional uint32 hero_id = 2;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::has_hero_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_has_hero_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.hero_id)
  return hero_id_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.hero_id)
}

// optional uint32 vote_count = 3;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::has_vote_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_has_vote_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_has_vote_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::clear_vote_count() {
  vote_count_ = 0u;
  clear_has_vote_count();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::vote_count() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.vote_count)
  return vote_count_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote::set_vote_count(::google::protobuf::uint32 value) {
  set_has_vote_count();
  vote_count_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote.vote_count)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestArcanaVotesRemainingResponse

// optional bool result = 1;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.result)
  return result_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.result)
}

// optional uint32 votes_remaining = 2;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse::has_votes_remaining() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_has_votes_remaining() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_has_votes_remaining() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_votes_remaining() {
  votes_remaining_ = 0u;
  clear_has_votes_remaining();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestArcanaVotesRemainingResponse::votes_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.votes_remaining)
  return votes_remaining_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_votes_remaining(::google::protobuf::uint32 value) {
  set_has_votes_remaining();
  votes_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.votes_remaining)
}

// optional uint32 votes_total = 3;
inline bool CMsgClientToGCRequestArcanaVotesRemainingResponse::has_votes_total() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_has_votes_total() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_has_votes_total() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_votes_total() {
  votes_total_ = 0u;
  clear_has_votes_total();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestArcanaVotesRemainingResponse::votes_total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.votes_total)
  return votes_total_;
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::set_votes_total(::google::protobuf::uint32 value) {
  set_has_votes_total();
  votes_total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.votes_total)
}

// repeated .proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.MatchVote matches_previously_voted_for = 4;
inline int CMsgClientToGCRequestArcanaVotesRemainingResponse::matches_previously_voted_for_size() const {
  return matches_previously_voted_for_.size();
}
inline void CMsgClientToGCRequestArcanaVotesRemainingResponse::clear_matches_previously_voted_for() {
  matches_previously_voted_for_.Clear();
}
inline const ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote& CMsgClientToGCRequestArcanaVotesRemainingResponse::matches_previously_voted_for(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return matches_previously_voted_for_.Get(index);
}
inline ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* CMsgClientToGCRequestArcanaVotesRemainingResponse::mutable_matches_previously_voted_for(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return matches_previously_voted_for_.Mutable(index);
}
inline ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote* CMsgClientToGCRequestArcanaVotesRemainingResponse::add_matches_previously_voted_for() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return matches_previously_voted_for_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote >*
CMsgClientToGCRequestArcanaVotesRemainingResponse::mutable_matches_previously_voted_for() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return &matches_previously_voted_for_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestArcanaVotesRemainingResponse_MatchVote >&
CMsgClientToGCRequestArcanaVotesRemainingResponse::matches_previously_voted_for() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCRequestArcanaVotesRemainingResponse.matches_previously_voted_for)
  return matches_previously_voted_for_;
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLog

// optional uint32 event_id = 1;
inline bool CMsgClientToGCRequestEventPointLog::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLog::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLog::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLog::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLog::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLog.event_id)
  return event_id_;
}
inline void CMsgClientToGCRequestEventPointLog::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLog.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent

// optional uint32 quest_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent.quest_id)
  return quest_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent.quest_id)
}

// optional uint32 challenge_id = 2;
inline bool CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::has_challenge_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::set_has_challenge_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::clear_has_challenge_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::clear_challenge_id() {
  challenge_id_ = 0u;
  clear_has_challenge_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::challenge_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent.challenge_id)
  return challenge_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::set_challenge_id(::google::protobuf::uint32 value) {
  set_has_challenge_id();
  challenge_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent.challenge_id)
}

// optional uint32 rank = 3;
inline bool CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::has_rank() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::set_has_rank() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::clear_has_rank() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent.rank)
  return rank_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent.rank)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent

// optional uint64 match_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.WagerWonEvent.match_id)
  return match_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.WagerWonEvent.match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent

// optional uint32 recipient_account_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_has_recipient_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::clear_has_recipient_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  clear_has_recipient_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_recipient_account_id(::google::protobuf::uint32 value) {
  set_has_recipient_account_id();
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_account_id)
}

// optional string recipient_name = 2;
inline bool CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::has_recipient_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_has_recipient_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::clear_has_recipient_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::clear_recipient_name() {
  recipient_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recipient_name();
}
inline const ::std::string& CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::recipient_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
  return recipient_name_.GetNoArena();
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_recipient_name(const ::std::string& value) {
  set_has_recipient_name();
  recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
}
#if LANG_CXX11
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_recipient_name(::std::string&& value) {
  set_has_recipient_name();
  recipient_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
}
#endif
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_recipient_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recipient_name();
  recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_recipient_name(const char* value, size_t size) {
  set_has_recipient_name();
  recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
}
inline ::std::string* CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::mutable_recipient_name() {
  set_has_recipient_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
  return recipient_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::release_recipient_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
  clear_has_recipient_name();
  return recipient_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::set_allocated_recipient_name(::std::string* recipient_name) {
  if (recipient_name != NULL) {
    set_has_recipient_name();
  } else {
    clear_has_recipient_name();
  }
  recipient_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recipient_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent.recipient_name)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent

// optional uint32 giver_account_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::has_giver_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_has_giver_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::clear_has_giver_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::clear_giver_account_id() {
  giver_account_id_ = 0u;
  clear_has_giver_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::giver_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_account_id)
  return giver_account_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_giver_account_id(::google::protobuf::uint32 value) {
  set_has_giver_account_id();
  giver_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_account_id)
}

// optional string giver_name = 2;
inline bool CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::has_giver_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_has_giver_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::clear_has_giver_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::clear_giver_name() {
  giver_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_giver_name();
}
inline const ::std::string& CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::giver_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
  return giver_name_.GetNoArena();
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_giver_name(const ::std::string& value) {
  set_has_giver_name();
  giver_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
}
#if LANG_CXX11
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_giver_name(::std::string&& value) {
  set_has_giver_name();
  giver_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
}
#endif
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_giver_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_giver_name();
  giver_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_giver_name(const char* value, size_t size) {
  set_has_giver_name();
  giver_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
}
inline ::std::string* CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::mutable_giver_name() {
  set_has_giver_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
  return giver_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::release_giver_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
  clear_has_giver_name();
  return giver_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::set_allocated_giver_name(::std::string* giver_name) {
  if (giver_name != NULL) {
    set_has_giver_name();
  } else {
    clear_has_giver_name();
  }
  giver_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), giver_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent.giver_name)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent

// optional uint32 recipe_item_def_index = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::has_recipe_item_def_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::set_has_recipe_item_def_index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::clear_has_recipe_item_def_index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::clear_recipe_item_def_index() {
  recipe_item_def_index_ = 0u;
  clear_has_recipe_item_def_index();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::recipe_item_def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.RecycledItemEvent.recipe_item_def_index)
  return recipe_item_def_index_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::set_recipe_item_def_index(::google::protobuf::uint32 value) {
  set_has_recipe_item_def_index();
  recipe_item_def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.RecycledItemEvent.recipe_item_def_index)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent

// optional uint32 action_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::has_action_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::set_has_action_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::clear_has_action_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::clear_action_id() {
  action_id_ = 0u;
  clear_has_action_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::action_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.ActionRewardEvent.action_id)
  return action_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::set_action_id(::google::protobuf::uint32 value) {
  set_has_action_id();
  action_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.ActionRewardEvent.action_id)
}

// optional uint32 action_score = 2;
inline bool CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::has_action_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::set_has_action_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::clear_has_action_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::clear_action_score() {
  action_score_ = 0u;
  clear_has_action_score();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::action_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.ActionRewardEvent.action_score)
  return action_score_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::set_action_score(::google::protobuf::uint32 value) {
  set_has_action_score();
  action_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.ActionRewardEvent.action_score)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent

// optional bool community_goal_item = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::has_community_goal_item() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::set_has_community_goal_item() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::clear_has_community_goal_item() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::clear_community_goal_item() {
  community_goal_item_ = false;
  clear_has_community_goal_item();
}
inline bool CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::community_goal_item() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.MysteryItemReceivedEvent.community_goal_item)
  return community_goal_item_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::set_community_goal_item(bool value) {
  set_has_community_goal_item();
  community_goal_item_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.MysteryItemReceivedEvent.community_goal_item)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent

// optional uint32 prediction_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::has_prediction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::set_has_prediction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::clear_has_prediction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::clear_prediction_id() {
  prediction_id_ = 0u;
  clear_has_prediction_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::prediction_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.CorrectPredictionEvent.prediction_id)
  return prediction_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::set_prediction_id(::google::protobuf::uint32 value) {
  set_has_prediction_id();
  prediction_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.CorrectPredictionEvent.prediction_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent

// optional uint64 match_id = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.InGamePredictionCorrectEvent.match_id)
  return match_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.InGamePredictionCorrectEvent.match_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent

// optional uint64 team_gid = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::has_team_gid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::set_has_team_gid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::clear_has_team_gid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::clear_team_gid() {
  team_gid_ = GOOGLE_ULONGLONG(0);
  clear_has_team_gid();
}
inline ::google::protobuf::uint64 CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::team_gid() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.WeekendTourneyPayoutEvent.team_gid)
  return team_gid_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WeekendTourneyPayoutEvent::set_team_gid(::google::protobuf::uint64 value) {
  set_has_team_gid();
  team_gid_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.WeekendTourneyPayoutEvent.team_gid)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent

// optional uint32 percentile = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::has_percentile() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::set_has_percentile() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::clear_has_percentile() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::clear_percentile() {
  percentile_ = 0u;
  clear_has_percentile();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::percentile() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.FantasyRewardEvent.percentile)
  return percentile_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::set_percentile(::google::protobuf::uint32 value) {
  set_has_percentile();
  percentile_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.FantasyRewardEvent.percentile)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent

// optional uint32 correct_answers = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::has_correct_answers() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::set_has_correct_answers() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::clear_has_correct_answers() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::clear_correct_answers() {
  correct_answers_ = 0u;
  clear_has_correct_answers();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::correct_answers() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.BracketRewardEvent.correct_answers)
  return correct_answers_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::set_correct_answers(::google::protobuf::uint32 value) {
  set_has_correct_answers();
  correct_answers_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.BracketRewardEvent.correct_answers)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent

// optional uint32 points_won = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent::has_points_won() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent::set_has_points_won() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent::clear_has_points_won() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent::clear_points_won() {
  points_won_ = 0u;
  clear_has_points_won();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent::points_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.WeeklyGameEvent.points_won)
  return points_won_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent::set_points_won(::google::protobuf::uint32 value) {
  set_has_points_won();
  points_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.WeeklyGameEvent.points_won)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent

// optional uint32 points_corrected = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent::has_points_corrected() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent::set_has_points_corrected() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent::clear_has_points_corrected() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent::clear_points_corrected() {
  points_corrected_ = 0u;
  clear_has_points_corrected();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent::points_corrected() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.ExploitCorrectionEvent.points_corrected)
  return points_corrected_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent::set_points_corrected(::google::protobuf::uint32 value) {
  set_has_points_corrected();
  points_corrected_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.ExploitCorrectionEvent.points_corrected)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction

// optional uint32 time = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_time() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_time() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_time() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_time() {
  time_ = 0u;
  clear_has_time();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.time)
  return time_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_time(::google::protobuf::uint32 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.time)
}

// optional int32 event_points = 2;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_event_points() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_event_points() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_event_points() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_event_points() {
  event_points_ = 0;
  clear_has_event_points();
}
inline ::google::protobuf::int32 CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::event_points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.event_points)
  return event_points_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_event_points(::google::protobuf::int32 value) {
  set_has_event_points();
  event_points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.event_points)
}

// optional bool compendium_activated_event = 3;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_compendium_activated_event() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_compendium_activated_event() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_compendium_activated_event() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_compendium_activated_event() {
  compendium_activated_event_ = false;
  clear_has_compendium_activated_event();
}
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::compendium_activated_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.compendium_activated_event)
  return compendium_activated_event_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_compendium_activated_event(bool value) {
  set_has_compendium_activated_event();
  compendium_activated_event_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.compendium_activated_event)
}

// optional bool point_item_used_event = 4;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_point_item_used_event() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_point_item_used_event() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_point_item_used_event() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_point_item_used_event() {
  point_item_used_event_ = false;
  clear_has_point_item_used_event();
}
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::point_item_used_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.point_item_used_event)
  return point_item_used_event_;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_point_item_used_event(bool value) {
  set_has_point_item_used_event();
  point_item_used_event_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.point_item_used_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.WagerWonEvent wager_won_event = 5;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_wager_won_event() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_wager_won_event() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_wager_won_event() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_wager_won_event() {
  if (wager_won_event_ != NULL) wager_won_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::Clear();
  clear_has_wager_won_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::wager_won_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.wager_won_event)
  return wager_won_event_ != NULL ? *wager_won_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_wager_won_event() {
  set_has_wager_won_event();
  if (wager_won_event_ == NULL) {
    wager_won_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.wager_won_event)
  return wager_won_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_wager_won_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.wager_won_event)
  clear_has_wager_won_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* temp = wager_won_event_;
  wager_won_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_wager_won_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WagerWonEvent* wager_won_event) {
  delete wager_won_event_;
  wager_won_event_ = wager_won_event;
  if (wager_won_event) {
    set_has_wager_won_event();
  } else {
    clear_has_wager_won_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.wager_won_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.MysteryItemReceivedEvent mystery_item_received_event = 6;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_mystery_item_received_event() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_mystery_item_received_event() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_mystery_item_received_event() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_mystery_item_received_event() {
  if (mystery_item_received_event_ != NULL) mystery_item_received_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::Clear();
  clear_has_mystery_item_received_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mystery_item_received_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.mystery_item_received_event)
  return mystery_item_received_event_ != NULL ? *mystery_item_received_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_mystery_item_received_event() {
  set_has_mystery_item_received_event();
  if (mystery_item_received_event_ == NULL) {
    mystery_item_received_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.mystery_item_received_event)
  return mystery_item_received_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_mystery_item_received_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.mystery_item_received_event)
  clear_has_mystery_item_received_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* temp = mystery_item_received_event_;
  mystery_item_received_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_mystery_item_received_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_MysteryItemReceivedEvent* mystery_item_received_event) {
  delete mystery_item_received_event_;
  mystery_item_received_event_ = mystery_item_received_event;
  if (mystery_item_received_event) {
    set_has_mystery_item_received_event();
  } else {
    clear_has_mystery_item_received_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.mystery_item_received_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.QuestChallengeEvent quest_challenge_event = 7;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_quest_challenge_event() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_quest_challenge_event() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_quest_challenge_event() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_quest_challenge_event() {
  if (quest_challenge_event_ != NULL) quest_challenge_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::Clear();
  clear_has_quest_challenge_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::quest_challenge_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.quest_challenge_event)
  return quest_challenge_event_ != NULL ? *quest_challenge_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_quest_challenge_event() {
  set_has_quest_challenge_event();
  if (quest_challenge_event_ == NULL) {
    quest_challenge_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.quest_challenge_event)
  return quest_challenge_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_quest_challenge_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.quest_challenge_event)
  clear_has_quest_challenge_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* temp = quest_challenge_event_;
  quest_challenge_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_quest_challenge_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_QuestChallengeEvent* quest_challenge_event) {
  delete quest_challenge_event_;
  quest_challenge_event_ = quest_challenge_event;
  if (quest_challenge_event) {
    set_has_quest_challenge_event();
  } else {
    clear_has_quest_challenge_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.quest_challenge_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipGivenEvent tip_given_event = 8;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_tip_given_event() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_tip_given_event() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_tip_given_event() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_tip_given_event() {
  if (tip_given_event_ != NULL) tip_given_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::Clear();
  clear_has_tip_given_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::tip_given_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_given_event)
  return tip_given_event_ != NULL ? *tip_given_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_tip_given_event() {
  set_has_tip_given_event();
  if (tip_given_event_ == NULL) {
    tip_given_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_given_event)
  return tip_given_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_tip_given_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_given_event)
  clear_has_tip_given_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* temp = tip_given_event_;
  tip_given_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_tip_given_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipGivenEvent* tip_given_event) {
  delete tip_given_event_;
  tip_given_event_ = tip_given_event;
  if (tip_given_event) {
    set_has_tip_given_event();
  } else {
    clear_has_tip_given_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_given_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.TipReceivedEvent tip_received_event = 9;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_tip_received_event() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_tip_received_event() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_tip_received_event() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_tip_received_event() {
  if (tip_received_event_ != NULL) tip_received_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::Clear();
  clear_has_tip_received_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::tip_received_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_received_event)
  return tip_received_event_ != NULL ? *tip_received_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_tip_received_event() {
  set_has_tip_received_event();
  if (tip_received_event_ == NULL) {
    tip_received_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_received_event)
  return tip_received_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_tip_received_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_received_event)
  clear_has_tip_received_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* temp = tip_received_event_;
  tip_received_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_tip_received_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_TipReceivedEvent* tip_received_event) {
  delete tip_received_event_;
  tip_received_event_ = tip_received_event;
  if (tip_received_event) {
    set_has_tip_received_event();
  } else {
    clear_has_tip_received_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.tip_received_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.RecycledItemEvent recycled_item_event = 10;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_recycled_item_event() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_recycled_item_event() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_recycled_item_event() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_recycled_item_event() {
  if (recycled_item_event_ != NULL) recycled_item_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::Clear();
  clear_has_recycled_item_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::recycled_item_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.recycled_item_event)
  return recycled_item_event_ != NULL ? *recycled_item_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_recycled_item_event() {
  set_has_recycled_item_event();
  if (recycled_item_event_ == NULL) {
    recycled_item_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.recycled_item_event)
  return recycled_item_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_recycled_item_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.recycled_item_event)
  clear_has_recycled_item_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* temp = recycled_item_event_;
  recycled_item_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_recycled_item_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_RecycledItemEvent* recycled_item_event) {
  delete recycled_item_event_;
  recycled_item_event_ = recycled_item_event;
  if (recycled_item_event) {
    set_has_recycled_item_event();
  } else {
    clear_has_recycled_item_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.recycled_item_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.ActionRewardEvent action_reward_event = 11;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_action_reward_event() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_action_reward_event() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_action_reward_event() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_action_reward_event() {
  if (action_reward_event_ != NULL) action_reward_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::Clear();
  clear_has_action_reward_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::action_reward_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.action_reward_event)
  return action_reward_event_ != NULL ? *action_reward_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_action_reward_event() {
  set_has_action_reward_event();
  if (action_reward_event_ == NULL) {
    action_reward_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.action_reward_event)
  return action_reward_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_action_reward_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.action_reward_event)
  clear_has_action_reward_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* temp = action_reward_event_;
  action_reward_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_action_reward_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ActionRewardEvent* action_reward_event) {
  delete action_reward_event_;
  action_reward_event_ = action_reward_event;
  if (action_reward_event) {
    set_has_action_reward_event();
  } else {
    clear_has_action_reward_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.action_reward_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.InGamePredictionCorrectEvent in_game_prediction_event = 12;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_in_game_prediction_event() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_in_game_prediction_event() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_in_game_prediction_event() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_in_game_prediction_event() {
  if (in_game_prediction_event_ != NULL) in_game_prediction_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::Clear();
  clear_has_in_game_prediction_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::in_game_prediction_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.in_game_prediction_event)
  return in_game_prediction_event_ != NULL ? *in_game_prediction_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_in_game_prediction_event() {
  set_has_in_game_prediction_event();
  if (in_game_prediction_event_ == NULL) {
    in_game_prediction_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.in_game_prediction_event)
  return in_game_prediction_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_in_game_prediction_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.in_game_prediction_event)
  clear_has_in_game_prediction_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* temp = in_game_prediction_event_;
  in_game_prediction_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_in_game_prediction_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_InGamePredictionCorrectEvent* in_game_prediction_event) {
  delete in_game_prediction_event_;
  in_game_prediction_event_ = in_game_prediction_event;
  if (in_game_prediction_event) {
    set_has_in_game_prediction_event();
  } else {
    clear_has_in_game_prediction_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.in_game_prediction_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.CorrectPredictionEvent prediction_event = 13;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_prediction_event() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_prediction_event() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_prediction_event() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_prediction_event() {
  if (prediction_event_ != NULL) prediction_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::Clear();
  clear_has_prediction_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::prediction_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.prediction_event)
  return prediction_event_ != NULL ? *prediction_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_prediction_event() {
  set_has_prediction_event();
  if (prediction_event_ == NULL) {
    prediction_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.prediction_event)
  return prediction_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_prediction_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.prediction_event)
  clear_has_prediction_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* temp = prediction_event_;
  prediction_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_prediction_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_CorrectPredictionEvent* prediction_event) {
  delete prediction_event_;
  prediction_event_ = prediction_event;
  if (prediction_event) {
    set_has_prediction_event();
  } else {
    clear_has_prediction_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.prediction_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.FantasyRewardEvent fantasy_reward_event = 15;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_fantasy_reward_event() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_fantasy_reward_event() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_fantasy_reward_event() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_fantasy_reward_event() {
  if (fantasy_reward_event_ != NULL) fantasy_reward_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::Clear();
  clear_has_fantasy_reward_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::fantasy_reward_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.fantasy_reward_event)
  return fantasy_reward_event_ != NULL ? *fantasy_reward_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_fantasy_reward_event() {
  set_has_fantasy_reward_event();
  if (fantasy_reward_event_ == NULL) {
    fantasy_reward_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.fantasy_reward_event)
  return fantasy_reward_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_fantasy_reward_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.fantasy_reward_event)
  clear_has_fantasy_reward_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* temp = fantasy_reward_event_;
  fantasy_reward_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_fantasy_reward_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_FantasyRewardEvent* fantasy_reward_event) {
  delete fantasy_reward_event_;
  fantasy_reward_event_ = fantasy_reward_event;
  if (fantasy_reward_event) {
    set_has_fantasy_reward_event();
  } else {
    clear_has_fantasy_reward_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.fantasy_reward_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.BracketRewardEvent bracket_reward_event = 16;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_bracket_reward_event() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_bracket_reward_event() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_bracket_reward_event() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_bracket_reward_event() {
  if (bracket_reward_event_ != NULL) bracket_reward_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::Clear();
  clear_has_bracket_reward_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::bracket_reward_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.bracket_reward_event)
  return bracket_reward_event_ != NULL ? *bracket_reward_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_bracket_reward_event() {
  set_has_bracket_reward_event();
  if (bracket_reward_event_ == NULL) {
    bracket_reward_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.bracket_reward_event)
  return bracket_reward_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_bracket_reward_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.bracket_reward_event)
  clear_has_bracket_reward_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* temp = bracket_reward_event_;
  bracket_reward_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_bracket_reward_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_BracketRewardEvent* bracket_reward_event) {
  delete bracket_reward_event_;
  bracket_reward_event_ = bracket_reward_event;
  if (bracket_reward_event) {
    set_has_bracket_reward_event();
  } else {
    clear_has_bracket_reward_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.bracket_reward_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.WeeklyGameEvent weekly_game_event = 19;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_weekly_game_event() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_weekly_game_event() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_weekly_game_event() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_weekly_game_event() {
  if (weekly_game_event_ != NULL) weekly_game_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent::Clear();
  clear_has_weekly_game_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::weekly_game_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.weekly_game_event)
  return weekly_game_event_ != NULL ? *weekly_game_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_weekly_game_event() {
  set_has_weekly_game_event();
  if (weekly_game_event_ == NULL) {
    weekly_game_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.weekly_game_event)
  return weekly_game_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_weekly_game_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.weekly_game_event)
  clear_has_weekly_game_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* temp = weekly_game_event_;
  weekly_game_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_weekly_game_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_WeeklyGameEvent* weekly_game_event) {
  delete weekly_game_event_;
  weekly_game_event_ = weekly_game_event;
  if (weekly_game_event) {
    set_has_weekly_game_event();
  } else {
    clear_has_weekly_game_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.weekly_game_event)
}

// optional .proto.dota.CMsgClientToGCRequestEventPointLogResponse.ExploitCorrectionEvent exploit_correction_event = 20;
inline bool CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::has_exploit_correction_event() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_has_exploit_correction_event() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_has_exploit_correction_event() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::clear_exploit_correction_event() {
  if (exploit_correction_event_ != NULL) exploit_correction_event_->::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent::Clear();
  clear_has_exploit_correction_event();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent& CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::exploit_correction_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.exploit_correction_event)
  return exploit_correction_event_ != NULL ? *exploit_correction_event_
                         : *::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent::internal_default_instance();
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::mutable_exploit_correction_event() {
  set_has_exploit_correction_event();
  if (exploit_correction_event_ == NULL) {
    exploit_correction_event_ = new ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.exploit_correction_event)
  return exploit_correction_event_;
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::release_exploit_correction_event() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.exploit_correction_event)
  clear_has_exploit_correction_event();
  ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* temp = exploit_correction_event_;
  exploit_correction_event_ = NULL;
  return temp;
}
inline void CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction::set_allocated_exploit_correction_event(::proto::dota::CMsgClientToGCRequestEventPointLogResponse_ExploitCorrectionEvent* exploit_correction_event) {
  delete exploit_correction_event_;
  exploit_correction_event_ = exploit_correction_event;
  if (exploit_correction_event) {
    set_has_exploit_correction_event();
  } else {
    clear_has_exploit_correction_event();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction.exploit_correction_event)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestEventPointLogResponse

// optional bool result = 1;
inline bool CMsgClientToGCRequestEventPointLogResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestEventPointLogResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CMsgClientToGCRequestEventPointLogResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.result)
  return result_;
}
inline void CMsgClientToGCRequestEventPointLogResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.result)
}

// repeated .proto.dota.CMsgClientToGCRequestEventPointLogResponse.EventPointTransaction transactions = 2;
inline int CMsgClientToGCRequestEventPointLogResponse::transactions_size() const {
  return transactions_.size();
}
inline void CMsgClientToGCRequestEventPointLogResponse::clear_transactions() {
  transactions_.Clear();
}
inline const ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction& CMsgClientToGCRequestEventPointLogResponse::transactions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.transactions)
  return transactions_.Get(index);
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* CMsgClientToGCRequestEventPointLogResponse::mutable_transactions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCRequestEventPointLogResponse.transactions)
  return transactions_.Mutable(index);
}
inline ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction* CMsgClientToGCRequestEventPointLogResponse::add_transactions() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCRequestEventPointLogResponse.transactions)
  return transactions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction >*
CMsgClientToGCRequestEventPointLogResponse::mutable_transactions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCRequestEventPointLogResponse.transactions)
  return &transactions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCRequestEventPointLogResponse_EventPointTransaction >&
CMsgClientToGCRequestEventPointLogResponse::transactions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCRequestEventPointLogResponse.transactions)
  return transactions_;
}

// optional uint32 event_id = 3;
inline bool CMsgClientToGCRequestEventPointLogResponse::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestEventPointLogResponse::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestEventPointLogResponse::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestEventPointLogResponse::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestEventPointLogResponse.event_id)
  return event_id_;
}
inline void CMsgClientToGCRequestEventPointLogResponse::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestEventPointLogResponse.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCPublishUserStat

// optional uint32 user_stats_event = 1;
inline bool CMsgClientToGCPublishUserStat::has_user_stats_event() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCPublishUserStat::set_has_user_stats_event() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCPublishUserStat::clear_has_user_stats_event() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCPublishUserStat::clear_user_stats_event() {
  user_stats_event_ = 0u;
  clear_has_user_stats_event();
}
inline ::google::protobuf::uint32 CMsgClientToGCPublishUserStat::user_stats_event() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCPublishUserStat.user_stats_event)
  return user_stats_event_;
}
inline void CMsgClientToGCPublishUserStat::set_user_stats_event(::google::protobuf::uint32 value) {
  set_has_user_stats_event();
  user_stats_event_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCPublishUserStat.user_stats_event)
}

// optional uint64 reference_data = 2;
inline bool CMsgClientToGCPublishUserStat::has_reference_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCPublishUserStat::set_has_reference_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCPublishUserStat::clear_has_reference_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCPublishUserStat::clear_reference_data() {
  reference_data_ = GOOGLE_ULONGLONG(0);
  clear_has_reference_data();
}
inline ::google::protobuf::uint64 CMsgClientToGCPublishUserStat::reference_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCPublishUserStat.reference_data)
  return reference_data_;
}
inline void CMsgClientToGCPublishUserStat::set_reference_data(::google::protobuf::uint64 value) {
  set_has_reference_data();
  reference_data_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCPublishUserStat.reference_data)
}

// -------------------------------------------------------------------

// CMsgClientToGCAddTI6TreeProgress

// optional uint32 trees = 1;
inline bool CMsgClientToGCAddTI6TreeProgress::has_trees() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCAddTI6TreeProgress::set_has_trees() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCAddTI6TreeProgress::clear_has_trees() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCAddTI6TreeProgress::clear_trees() {
  trees_ = 0u;
  clear_has_trees();
}
inline ::google::protobuf::uint32 CMsgClientToGCAddTI6TreeProgress::trees() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCAddTI6TreeProgress.trees)
  return trees_;
}
inline void CMsgClientToGCAddTI6TreeProgress::set_trees(::google::protobuf::uint32 value) {
  set_has_trees();
  trees_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCAddTI6TreeProgress.trees)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestLinaPlaysRemaining

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestLinaPlaysRemaining::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestLinaPlaysRemaining::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestLinaPlaysRemaining::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestLinaPlaysRemaining::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::proto::dota::EEvent CMsgClientToGCRequestLinaPlaysRemaining::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestLinaPlaysRemaining.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgClientToGCRequestLinaPlaysRemaining::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestLinaPlaysRemaining.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestLinaPlaysRemainingResponse

// optional uint32 plays_remaining = 1;
inline bool CMsgClientToGCRequestLinaPlaysRemainingResponse::has_plays_remaining() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::set_has_plays_remaining() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::clear_has_plays_remaining() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::clear_plays_remaining() {
  plays_remaining_ = 0u;
  clear_has_plays_remaining();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestLinaPlaysRemainingResponse::plays_remaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestLinaPlaysRemainingResponse.plays_remaining)
  return plays_remaining_;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::set_plays_remaining(::google::protobuf::uint32 value) {
  set_has_plays_remaining();
  plays_remaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestLinaPlaysRemainingResponse.plays_remaining)
}

// optional uint32 plays_total = 2;
inline bool CMsgClientToGCRequestLinaPlaysRemainingResponse::has_plays_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::set_has_plays_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::clear_has_plays_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::clear_plays_total() {
  plays_total_ = 0u;
  clear_has_plays_total();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestLinaPlaysRemainingResponse::plays_total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestLinaPlaysRemainingResponse.plays_total)
  return plays_total_;
}
inline void CMsgClientToGCRequestLinaPlaysRemainingResponse::set_plays_total(::google::protobuf::uint32 value) {
  set_has_plays_total();
  plays_total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestLinaPlaysRemainingResponse.plays_total)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestLinaGameResult

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestLinaGameResult::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestLinaGameResult::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestLinaGameResult::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestLinaGameResult::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::proto::dota::EEvent CMsgClientToGCRequestLinaGameResult::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestLinaGameResult.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgClientToGCRequestLinaGameResult::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestLinaGameResult.event_id)
}

// optional uint32 slot_chosen = 2;
inline bool CMsgClientToGCRequestLinaGameResult::has_slot_chosen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestLinaGameResult::set_has_slot_chosen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestLinaGameResult::clear_has_slot_chosen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestLinaGameResult::clear_slot_chosen() {
  slot_chosen_ = 0u;
  clear_has_slot_chosen();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestLinaGameResult::slot_chosen() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestLinaGameResult.slot_chosen)
  return slot_chosen_;
}
inline void CMsgClientToGCRequestLinaGameResult::set_slot_chosen(::google::protobuf::uint32 value) {
  set_has_slot_chosen();
  slot_chosen_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestLinaGameResult.slot_chosen)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestLinaGameResultResponse

// optional uint32 result = 1;
inline bool CMsgClientToGCRequestLinaGameResultResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestLinaGameResultResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestLinaGameResultResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestLinaGameResultResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestLinaGameResultResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestLinaGameResultResponse.result)
  return result_;
}
inline void CMsgClientToGCRequestLinaGameResultResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestLinaGameResultResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestSlarkGameResult

// optional .proto.dota.EEvent event_id = 1 [default = EVENT_ID_NONE];
inline bool CMsgClientToGCRequestSlarkGameResult::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestSlarkGameResult::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestSlarkGameResult::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestSlarkGameResult::clear_event_id() {
  event_id_ = 0;
  clear_has_event_id();
}
inline ::proto::dota::EEvent CMsgClientToGCRequestSlarkGameResult::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestSlarkGameResult.event_id)
  return static_cast< ::proto::dota::EEvent >(event_id_);
}
inline void CMsgClientToGCRequestSlarkGameResult::set_event_id(::proto::dota::EEvent value) {
  assert(::proto::dota::EEvent_IsValid(value));
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestSlarkGameResult.event_id)
}

// optional uint32 slot_chosen = 2;
inline bool CMsgClientToGCRequestSlarkGameResult::has_slot_chosen() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestSlarkGameResult::set_has_slot_chosen() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestSlarkGameResult::clear_has_slot_chosen() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestSlarkGameResult::clear_slot_chosen() {
  slot_chosen_ = 0u;
  clear_has_slot_chosen();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestSlarkGameResult::slot_chosen() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestSlarkGameResult.slot_chosen)
  return slot_chosen_;
}
inline void CMsgClientToGCRequestSlarkGameResult::set_slot_chosen(::google::protobuf::uint32 value) {
  set_has_slot_chosen();
  slot_chosen_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestSlarkGameResult.slot_chosen)
}

// optional uint32 week = 3;
inline bool CMsgClientToGCRequestSlarkGameResult::has_week() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCRequestSlarkGameResult::set_has_week() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCRequestSlarkGameResult::clear_has_week() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCRequestSlarkGameResult::clear_week() {
  week_ = 0u;
  clear_has_week();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestSlarkGameResult::week() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestSlarkGameResult.week)
  return week_;
}
inline void CMsgClientToGCRequestSlarkGameResult::set_week(::google::protobuf::uint32 value) {
  set_has_week();
  week_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestSlarkGameResult.week)
}

// -------------------------------------------------------------------

// CMsgClientToGCRequestSlarkGameResultResponse

// optional uint32 points_won = 1;
inline bool CMsgClientToGCRequestSlarkGameResultResponse::has_points_won() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRequestSlarkGameResultResponse::set_has_points_won() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRequestSlarkGameResultResponse::clear_has_points_won() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRequestSlarkGameResultResponse::clear_points_won() {
  points_won_ = 0u;
  clear_has_points_won();
}
inline ::google::protobuf::uint32 CMsgClientToGCRequestSlarkGameResultResponse::points_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestSlarkGameResultResponse.points_won)
  return points_won_;
}
inline void CMsgClientToGCRequestSlarkGameResultResponse::set_points_won(::google::protobuf::uint32 value) {
  set_has_points_won();
  points_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestSlarkGameResultResponse.points_won)
}

// optional bool aura_won = 2;
inline bool CMsgClientToGCRequestSlarkGameResultResponse::has_aura_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRequestSlarkGameResultResponse::set_has_aura_won() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRequestSlarkGameResultResponse::clear_has_aura_won() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRequestSlarkGameResultResponse::clear_aura_won() {
  aura_won_ = false;
  clear_has_aura_won();
}
inline bool CMsgClientToGCRequestSlarkGameResultResponse::aura_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRequestSlarkGameResultResponse.aura_won)
  return aura_won_;
}
inline void CMsgClientToGCRequestSlarkGameResultResponse::set_aura_won(bool value) {
  set_has_aura_won();
  aura_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRequestSlarkGameResultResponse.aura_won)
}

// -------------------------------------------------------------------

// CMsgGCToClientQuestProgressUpdated_Challenge

// optional uint32 challenge_id = 1;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_challenge_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_has_challenge_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_has_challenge_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_challenge_id() {
  challenge_id_ = 0u;
  clear_has_challenge_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::challenge_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.challenge_id)
  return challenge_id_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_challenge_id(::google::protobuf::uint32 value) {
  set_has_challenge_id();
  challenge_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.challenge_id)
}

// optional uint32 time_completed = 2;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_time_completed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_has_time_completed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_has_time_completed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_time_completed() {
  time_completed_ = 0u;
  clear_has_time_completed();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::time_completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.time_completed)
  return time_completed_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_time_completed(::google::protobuf::uint32 value) {
  set_has_time_completed();
  time_completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.time_completed)
}

// optional uint32 attempts = 3;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_attempts() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_has_attempts() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_has_attempts() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_attempts() {
  attempts_ = 0u;
  clear_has_attempts();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::attempts() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.attempts)
  return attempts_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_attempts(::google::protobuf::uint32 value) {
  set_has_attempts();
  attempts_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.attempts)
}

// optional uint32 hero_id = 4;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_hero_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_has_hero_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_has_hero_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_hero_id() {
  hero_id_ = 0u;
  clear_has_hero_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::hero_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.hero_id)
  return hero_id_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_hero_id(::google::protobuf::uint32 value) {
  set_has_hero_id();
  hero_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.hero_id)
}

// optional uint32 challenge_type = 5;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_challenge_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_has_challenge_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_has_challenge_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_challenge_type() {
  challenge_type_ = 0u;
  clear_has_challenge_type();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::challenge_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.challenge_type)
  return challenge_type_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_challenge_type(::google::protobuf::uint32 value) {
  set_has_challenge_type();
  challenge_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.challenge_type)
}

// optional uint32 quest_rank = 6;
inline bool CMsgGCToClientQuestProgressUpdated_Challenge::has_quest_rank() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_has_quest_rank() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_has_quest_rank() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::clear_quest_rank() {
  quest_rank_ = 0u;
  clear_has_quest_rank();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated_Challenge::quest_rank() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.quest_rank)
  return quest_rank_;
}
inline void CMsgGCToClientQuestProgressUpdated_Challenge::set_quest_rank(::google::protobuf::uint32 value) {
  set_has_quest_rank();
  quest_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge.quest_rank)
}

// -------------------------------------------------------------------

// CMsgGCToClientQuestProgressUpdated

// optional uint32 quest_id = 1;
inline bool CMsgGCToClientQuestProgressUpdated::has_quest_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientQuestProgressUpdated::set_has_quest_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientQuestProgressUpdated::clear_has_quest_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientQuestProgressUpdated::clear_quest_id() {
  quest_id_ = 0u;
  clear_has_quest_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientQuestProgressUpdated::quest_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.quest_id)
  return quest_id_;
}
inline void CMsgGCToClientQuestProgressUpdated::set_quest_id(::google::protobuf::uint32 value) {
  set_has_quest_id();
  quest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientQuestProgressUpdated.quest_id)
}

// repeated .proto.dota.CMsgGCToClientQuestProgressUpdated.Challenge completed_challenges = 2;
inline int CMsgGCToClientQuestProgressUpdated::completed_challenges_size() const {
  return completed_challenges_.size();
}
inline void CMsgGCToClientQuestProgressUpdated::clear_completed_challenges() {
  completed_challenges_.Clear();
}
inline const ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge& CMsgGCToClientQuestProgressUpdated::completed_challenges(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return completed_challenges_.Get(index);
}
inline ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge* CMsgGCToClientQuestProgressUpdated::mutable_completed_challenges(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return completed_challenges_.Mutable(index);
}
inline ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge* CMsgGCToClientQuestProgressUpdated::add_completed_challenges() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return completed_challenges_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge >*
CMsgGCToClientQuestProgressUpdated::mutable_completed_challenges() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return &completed_challenges_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientQuestProgressUpdated_Challenge >&
CMsgGCToClientQuestProgressUpdated::completed_challenges() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientQuestProgressUpdated.completed_challenges)
  return completed_challenges_;
}

// -------------------------------------------------------------------

// CMsgDOTARedeemItem

// optional uint64 currency_id = 1;
inline bool CMsgDOTARedeemItem::has_currency_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARedeemItem::set_has_currency_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARedeemItem::clear_has_currency_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARedeemItem::clear_currency_id() {
  currency_id_ = GOOGLE_ULONGLONG(0);
  clear_has_currency_id();
}
inline ::google::protobuf::uint64 CMsgDOTARedeemItem::currency_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARedeemItem.currency_id)
  return currency_id_;
}
inline void CMsgDOTARedeemItem::set_currency_id(::google::protobuf::uint64 value) {
  set_has_currency_id();
  currency_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARedeemItem.currency_id)
}

// optional uint32 purchase_def = 2;
inline bool CMsgDOTARedeemItem::has_purchase_def() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTARedeemItem::set_has_purchase_def() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTARedeemItem::clear_has_purchase_def() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTARedeemItem::clear_purchase_def() {
  purchase_def_ = 0u;
  clear_has_purchase_def();
}
inline ::google::protobuf::uint32 CMsgDOTARedeemItem::purchase_def() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARedeemItem.purchase_def)
  return purchase_def_;
}
inline void CMsgDOTARedeemItem::set_purchase_def(::google::protobuf::uint32 value) {
  set_has_purchase_def();
  purchase_def_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARedeemItem.purchase_def)
}

// -------------------------------------------------------------------

// CMsgDOTARedeemItemResponse

// optional .proto.dota.CMsgDOTARedeemItemResponse.EResultCode response = 1 [default = k_Succeeded];
inline bool CMsgDOTARedeemItemResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTARedeemItemResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTARedeemItemResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTARedeemItemResponse::clear_response() {
  response_ = 0;
  clear_has_response();
}
inline ::proto::dota::CMsgDOTARedeemItemResponse_EResultCode CMsgDOTARedeemItemResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTARedeemItemResponse.response)
  return static_cast< ::proto::dota::CMsgDOTARedeemItemResponse_EResultCode >(response_);
}
inline void CMsgDOTARedeemItemResponse::set_response(::proto::dota::CMsgDOTARedeemItemResponse_EResultCode value) {
  assert(::proto::dota::CMsgDOTARedeemItemResponse_EResultCode_IsValid(value));
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTARedeemItemResponse.response)
}

// -------------------------------------------------------------------

// CMsgPerfectWorldUserLookupRequest

// optional string user_name = 1;
inline bool CMsgPerfectWorldUserLookupRequest::has_user_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPerfectWorldUserLookupRequest::set_has_user_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPerfectWorldUserLookupRequest::clear_has_user_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPerfectWorldUserLookupRequest::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_name();
}
inline const ::std::string& CMsgPerfectWorldUserLookupRequest::user_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
  return user_name_.GetNoArena();
}
inline void CMsgPerfectWorldUserLookupRequest::set_user_name(const ::std::string& value) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
}
#if LANG_CXX11
inline void CMsgPerfectWorldUserLookupRequest::set_user_name(::std::string&& value) {
  set_has_user_name();
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
}
#endif
inline void CMsgPerfectWorldUserLookupRequest::set_user_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
}
inline void CMsgPerfectWorldUserLookupRequest::set_user_name(const char* value, size_t size) {
  set_has_user_name();
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
}
inline ::std::string* CMsgPerfectWorldUserLookupRequest::mutable_user_name() {
  set_has_user_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgPerfectWorldUserLookupRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
  clear_has_user_name();
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgPerfectWorldUserLookupRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    set_has_user_name();
  } else {
    clear_has_user_name();
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgPerfectWorldUserLookupRequest.user_name)
}

// -------------------------------------------------------------------

// CMsgPerfectWorldUserLookupResponse

// optional .proto.dota.CMsgPerfectWorldUserLookupResponse.EResultCode result_code = 1 [default = SUCCESS_ACCOUNT_FOUND];
inline bool CMsgPerfectWorldUserLookupResponse::has_result_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPerfectWorldUserLookupResponse::set_has_result_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPerfectWorldUserLookupResponse::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPerfectWorldUserLookupResponse::clear_result_code() {
  result_code_ = 0;
  clear_has_result_code();
}
inline ::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode CMsgPerfectWorldUserLookupResponse::result_code() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPerfectWorldUserLookupResponse.result_code)
  return static_cast< ::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode >(result_code_);
}
inline void CMsgPerfectWorldUserLookupResponse::set_result_code(::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode value) {
  assert(::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode_IsValid(value));
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPerfectWorldUserLookupResponse.result_code)
}

// optional uint32 account_id = 2;
inline bool CMsgPerfectWorldUserLookupResponse::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPerfectWorldUserLookupResponse::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPerfectWorldUserLookupResponse::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPerfectWorldUserLookupResponse::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgPerfectWorldUserLookupResponse::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgPerfectWorldUserLookupResponse.account_id)
  return account_id_;
}
inline void CMsgPerfectWorldUserLookupResponse::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgPerfectWorldUserLookupResponse.account_id)
}

// -------------------------------------------------------------------

// CMsgNexonPartnerUpdate

// optional uint32 messagetype = 1;
inline bool CMsgNexonPartnerUpdate::has_messagetype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgNexonPartnerUpdate::set_has_messagetype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgNexonPartnerUpdate::clear_has_messagetype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgNexonPartnerUpdate::clear_messagetype() {
  messagetype_ = 0u;
  clear_has_messagetype();
}
inline ::google::protobuf::uint32 CMsgNexonPartnerUpdate::messagetype() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNexonPartnerUpdate.messagetype)
  return messagetype_;
}
inline void CMsgNexonPartnerUpdate::set_messagetype(::google::protobuf::uint32 value) {
  set_has_messagetype();
  messagetype_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNexonPartnerUpdate.messagetype)
}

// optional uint32 timeremaining = 2;
inline bool CMsgNexonPartnerUpdate::has_timeremaining() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgNexonPartnerUpdate::set_has_timeremaining() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgNexonPartnerUpdate::clear_has_timeremaining() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgNexonPartnerUpdate::clear_timeremaining() {
  timeremaining_ = 0u;
  clear_has_timeremaining();
}
inline ::google::protobuf::uint32 CMsgNexonPartnerUpdate::timeremaining() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNexonPartnerUpdate.timeremaining)
  return timeremaining_;
}
inline void CMsgNexonPartnerUpdate::set_timeremaining(::google::protobuf::uint32 value) {
  set_has_timeremaining();
  timeremaining_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNexonPartnerUpdate.timeremaining)
}

// optional bool terminate = 3;
inline bool CMsgNexonPartnerUpdate::has_terminate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgNexonPartnerUpdate::set_has_terminate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgNexonPartnerUpdate::clear_has_terminate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgNexonPartnerUpdate::clear_terminate() {
  terminate_ = false;
  clear_has_terminate();
}
inline bool CMsgNexonPartnerUpdate::terminate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgNexonPartnerUpdate.terminate)
  return terminate_;
}
inline void CMsgNexonPartnerUpdate::set_terminate(bool value) {
  set_has_terminate();
  terminate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgNexonPartnerUpdate.terminate)
}

// -------------------------------------------------------------------

// CMsgMakeOffering

// optional uint64 item_id = 1;
inline bool CMsgMakeOffering::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMakeOffering::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMakeOffering::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMakeOffering::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgMakeOffering::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgMakeOffering.item_id)
  return item_id_;
}
inline void CMsgMakeOffering::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgMakeOffering.item_id)
}

// -------------------------------------------------------------------

// CMsgRequestOfferings

// -------------------------------------------------------------------

// CMsgRequestOfferingsResponse_NewYearsOffering

// optional uint32 def_index = 1;
inline bool CMsgRequestOfferingsResponse_NewYearsOffering::has_def_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::set_has_def_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::clear_has_def_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::clear_def_index() {
  def_index_ = 0u;
  clear_has_def_index();
}
inline ::google::protobuf::uint32 CMsgRequestOfferingsResponse_NewYearsOffering::def_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering.def_index)
  return def_index_;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::set_def_index(::google::protobuf::uint32 value) {
  set_has_def_index();
  def_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering.def_index)
}

// optional uint64 item_id = 2;
inline bool CMsgRequestOfferingsResponse_NewYearsOffering::has_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::set_has_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::clear_has_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::clear_item_id() {
  item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_item_id();
}
inline ::google::protobuf::uint64 CMsgRequestOfferingsResponse_NewYearsOffering::item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering.item_id)
  return item_id_;
}
inline void CMsgRequestOfferingsResponse_NewYearsOffering::set_item_id(::google::protobuf::uint64 value) {
  set_has_item_id();
  item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering.item_id)
}

// -------------------------------------------------------------------

// CMsgRequestOfferingsResponse

// repeated .proto.dota.CMsgRequestOfferingsResponse.NewYearsOffering offerings = 1;
inline int CMsgRequestOfferingsResponse::offerings_size() const {
  return offerings_.size();
}
inline void CMsgRequestOfferingsResponse::clear_offerings() {
  offerings_.Clear();
}
inline const ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering& CMsgRequestOfferingsResponse::offerings(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestOfferingsResponse.offerings)
  return offerings_.Get(index);
}
inline ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering* CMsgRequestOfferingsResponse::mutable_offerings(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgRequestOfferingsResponse.offerings)
  return offerings_.Mutable(index);
}
inline ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering* CMsgRequestOfferingsResponse::add_offerings() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgRequestOfferingsResponse.offerings)
  return offerings_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering >*
CMsgRequestOfferingsResponse::mutable_offerings() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgRequestOfferingsResponse.offerings)
  return &offerings_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgRequestOfferingsResponse_NewYearsOffering >&
CMsgRequestOfferingsResponse::offerings() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgRequestOfferingsResponse.offerings)
  return offerings_;
}

// optional bool completed = 2;
inline bool CMsgRequestOfferingsResponse::has_completed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestOfferingsResponse::set_has_completed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRequestOfferingsResponse::clear_has_completed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRequestOfferingsResponse::clear_completed() {
  completed_ = false;
  clear_has_completed();
}
inline bool CMsgRequestOfferingsResponse::completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgRequestOfferingsResponse.completed)
  return completed_;
}
inline void CMsgRequestOfferingsResponse::set_completed(bool value) {
  set_has_completed();
  completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgRequestOfferingsResponse.completed)
}

// -------------------------------------------------------------------

// CMsgDOTAPCBangTimedReward

// optional string persona = 1;
inline bool CMsgDOTAPCBangTimedReward::has_persona() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAPCBangTimedReward::set_has_persona() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAPCBangTimedReward::clear_has_persona() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAPCBangTimedReward::clear_persona() {
  persona_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_persona();
}
inline const ::std::string& CMsgDOTAPCBangTimedReward::persona() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPCBangTimedReward.persona)
  return persona_.GetNoArena();
}
inline void CMsgDOTAPCBangTimedReward::set_persona(const ::std::string& value) {
  set_has_persona();
  persona_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPCBangTimedReward.persona)
}
#if LANG_CXX11
inline void CMsgDOTAPCBangTimedReward::set_persona(::std::string&& value) {
  set_has_persona();
  persona_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPCBangTimedReward.persona)
}
#endif
inline void CMsgDOTAPCBangTimedReward::set_persona(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_persona();
  persona_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPCBangTimedReward.persona)
}
inline void CMsgDOTAPCBangTimedReward::set_persona(const char* value, size_t size) {
  set_has_persona();
  persona_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPCBangTimedReward.persona)
}
inline ::std::string* CMsgDOTAPCBangTimedReward::mutable_persona() {
  set_has_persona();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPCBangTimedReward.persona)
  return persona_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPCBangTimedReward::release_persona() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPCBangTimedReward.persona)
  clear_has_persona();
  return persona_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPCBangTimedReward::set_allocated_persona(::std::string* persona) {
  if (persona != NULL) {
    set_has_persona();
  } else {
    clear_has_persona();
  }
  persona_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPCBangTimedReward.persona)
}

// optional uint32 itemdef = 2;
inline bool CMsgDOTAPCBangTimedReward::has_itemdef() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAPCBangTimedReward::set_has_itemdef() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAPCBangTimedReward::clear_has_itemdef() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAPCBangTimedReward::clear_itemdef() {
  itemdef_ = 0u;
  clear_has_itemdef();
}
inline ::google::protobuf::uint32 CMsgDOTAPCBangTimedReward::itemdef() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPCBangTimedReward.itemdef)
  return itemdef_;
}
inline void CMsgDOTAPCBangTimedReward::set_itemdef(::google::protobuf::uint32 value) {
  set_has_itemdef();
  itemdef_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPCBangTimedReward.itemdef)
}

// optional string pcbangname = 3;
inline bool CMsgDOTAPCBangTimedReward::has_pcbangname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAPCBangTimedReward::set_has_pcbangname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAPCBangTimedReward::clear_has_pcbangname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAPCBangTimedReward::clear_pcbangname() {
  pcbangname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pcbangname();
}
inline const ::std::string& CMsgDOTAPCBangTimedReward::pcbangname() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
  return pcbangname_.GetNoArena();
}
inline void CMsgDOTAPCBangTimedReward::set_pcbangname(const ::std::string& value) {
  set_has_pcbangname();
  pcbangname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
}
#if LANG_CXX11
inline void CMsgDOTAPCBangTimedReward::set_pcbangname(::std::string&& value) {
  set_has_pcbangname();
  pcbangname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
}
#endif
inline void CMsgDOTAPCBangTimedReward::set_pcbangname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pcbangname();
  pcbangname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
}
inline void CMsgDOTAPCBangTimedReward::set_pcbangname(const char* value, size_t size) {
  set_has_pcbangname();
  pcbangname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
}
inline ::std::string* CMsgDOTAPCBangTimedReward::mutable_pcbangname() {
  set_has_pcbangname();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
  return pcbangname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAPCBangTimedReward::release_pcbangname() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
  clear_has_pcbangname();
  return pcbangname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAPCBangTimedReward::set_allocated_pcbangname(::std::string* pcbangname) {
  if (pcbangname != NULL) {
    set_has_pcbangname();
  } else {
    clear_has_pcbangname();
  }
  pcbangname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pcbangname);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAPCBangTimedReward.pcbangname)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumInGamePredictionResults_PredictionResult

// optional uint32 prediction_id = 1;
inline bool CMsgDOTACompendiumInGamePredictionResults_PredictionResult::has_prediction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::set_has_prediction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::clear_has_prediction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::clear_prediction_id() {
  prediction_id_ = 0u;
  clear_has_prediction_id();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumInGamePredictionResults_PredictionResult::prediction_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult.prediction_id)
  return prediction_id_;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::set_prediction_id(::google::protobuf::uint32 value) {
  set_has_prediction_id();
  prediction_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult.prediction_id)
}

// optional uint32 prediction_value = 2;
inline bool CMsgDOTACompendiumInGamePredictionResults_PredictionResult::has_prediction_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::set_has_prediction_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::clear_has_prediction_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::clear_prediction_value() {
  prediction_value_ = 0u;
  clear_has_prediction_value();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumInGamePredictionResults_PredictionResult::prediction_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult.prediction_value)
  return prediction_value_;
}
inline void CMsgDOTACompendiumInGamePredictionResults_PredictionResult::set_prediction_value(::google::protobuf::uint32 value) {
  set_has_prediction_value();
  prediction_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult.prediction_value)
}

// -------------------------------------------------------------------

// CMsgDOTACompendiumInGamePredictionResults

// repeated .proto.dota.CMsgDOTACompendiumInGamePredictionResults.PredictionResult results = 1;
inline int CMsgDOTACompendiumInGamePredictionResults::results_size() const {
  return results_.size();
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_results() {
  results_.Clear();
}
inline const ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult& CMsgDOTACompendiumInGamePredictionResults::results(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumInGamePredictionResults.results)
  return results_.Get(index);
}
inline ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* CMsgDOTACompendiumInGamePredictionResults::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTACompendiumInGamePredictionResults.results)
  return results_.Mutable(index);
}
inline ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult* CMsgDOTACompendiumInGamePredictionResults::add_results() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTACompendiumInGamePredictionResults.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult >*
CMsgDOTACompendiumInGamePredictionResults::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTACompendiumInGamePredictionResults.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTACompendiumInGamePredictionResults_PredictionResult >&
CMsgDOTACompendiumInGamePredictionResults::results() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTACompendiumInGamePredictionResults.results)
  return results_;
}

// optional uint32 league_id = 2;
inline bool CMsgDOTACompendiumInGamePredictionResults::has_league_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTACompendiumInGamePredictionResults::set_has_league_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_has_league_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_league_id() {
  league_id_ = 0u;
  clear_has_league_id();
}
inline ::google::protobuf::uint32 CMsgDOTACompendiumInGamePredictionResults::league_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumInGamePredictionResults.league_id)
  return league_id_;
}
inline void CMsgDOTACompendiumInGamePredictionResults::set_league_id(::google::protobuf::uint32 value) {
  set_has_league_id();
  league_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumInGamePredictionResults.league_id)
}

// optional bool predictions_closed = 3;
inline bool CMsgDOTACompendiumInGamePredictionResults::has_predictions_closed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTACompendiumInGamePredictionResults::set_has_predictions_closed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_has_predictions_closed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTACompendiumInGamePredictionResults::clear_predictions_closed() {
  predictions_closed_ = false;
  clear_has_predictions_closed();
}
inline bool CMsgDOTACompendiumInGamePredictionResults::predictions_closed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTACompendiumInGamePredictionResults.predictions_closed)
  return predictions_closed_;
}
inline void CMsgDOTACompendiumInGamePredictionResults::set_predictions_closed(bool value) {
  set_has_predictions_closed();
  predictions_closed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTACompendiumInGamePredictionResults.predictions_closed)
}

// -------------------------------------------------------------------

// CMsgClientToGCSelectCompendiumInGamePrediction_Prediction

// optional uint32 prediction_id = 1;
inline bool CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::has_prediction_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::set_has_prediction_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::clear_has_prediction_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::clear_prediction_id() {
  prediction_id_ = 0u;
  clear_has_prediction_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::prediction_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction.prediction_id)
  return prediction_id_;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::set_prediction_id(::google::protobuf::uint32 value) {
  set_has_prediction_id();
  prediction_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction.prediction_id)
}

// optional uint32 prediction_value = 2;
inline bool CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::has_prediction_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::set_has_prediction_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::clear_has_prediction_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::clear_prediction_value() {
  prediction_value_ = 0u;
  clear_has_prediction_value();
}
inline ::google::protobuf::uint32 CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::prediction_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction.prediction_value)
  return prediction_value_;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction_Prediction::set_prediction_value(::google::protobuf::uint32 value) {
  set_has_prediction_value();
  prediction_value_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction.prediction_value)
}

// -------------------------------------------------------------------

// CMsgClientToGCSelectCompendiumInGamePrediction

// optional uint64 match_id = 1;
inline bool CMsgClientToGCSelectCompendiumInGamePrediction::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCSelectCompendiumInGamePrediction::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.match_id)
  return match_id_;
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.match_id)
}

// repeated .proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.Prediction predictions = 2;
inline int CMsgClientToGCSelectCompendiumInGamePrediction::predictions_size() const {
  return predictions_.size();
}
inline void CMsgClientToGCSelectCompendiumInGamePrediction::clear_predictions() {
  predictions_.Clear();
}
inline const ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction& CMsgClientToGCSelectCompendiumInGamePrediction::predictions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return predictions_.Get(index);
}
inline ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* CMsgClientToGCSelectCompendiumInGamePrediction::mutable_predictions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return predictions_.Mutable(index);
}
inline ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction* CMsgClientToGCSelectCompendiumInGamePrediction::add_predictions() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return predictions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction >*
CMsgClientToGCSelectCompendiumInGamePrediction::mutable_predictions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return &predictions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePrediction_Prediction >&
CMsgClientToGCSelectCompendiumInGamePrediction::predictions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCSelectCompendiumInGamePrediction.predictions)
  return predictions_;
}

// -------------------------------------------------------------------

// CMsgClientToGCSelectCompendiumInGamePredictionResponse

// optional .proto.dota.CMsgClientToGCSelectCompendiumInGamePredictionResponse.EResult result = 1 [default = SUCCESS];
inline bool CMsgClientToGCSelectCompendiumInGamePredictionResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCSelectCompendiumInGamePredictionResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCSelectCompendiumInGamePredictionResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCSelectCompendiumInGamePredictionResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult CMsgClientToGCSelectCompendiumInGamePredictionResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCSelectCompendiumInGamePredictionResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult >(result_);
}
inline void CMsgClientToGCSelectCompendiumInGamePredictionResponse::set_result(::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult value) {
  assert(::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCSelectCompendiumInGamePredictionResponse.result)
}

// -------------------------------------------------------------------

// CMsgClientToGCOpenPlayerCardPack

// optional uint64 player_card_pack_item_id = 1;
inline bool CMsgClientToGCOpenPlayerCardPack::has_player_card_pack_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCOpenPlayerCardPack::set_has_player_card_pack_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCOpenPlayerCardPack::clear_has_player_card_pack_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCOpenPlayerCardPack::clear_player_card_pack_item_id() {
  player_card_pack_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_card_pack_item_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCOpenPlayerCardPack::player_card_pack_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCOpenPlayerCardPack.player_card_pack_item_id)
  return player_card_pack_item_id_;
}
inline void CMsgClientToGCOpenPlayerCardPack::set_player_card_pack_item_id(::google::protobuf::uint64 value) {
  set_has_player_card_pack_item_id();
  player_card_pack_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCOpenPlayerCardPack.player_card_pack_item_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCOpenPlayerCardPackResponse

// optional .proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCOpenPlayerCardPackResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result CMsgClientToGCOpenPlayerCardPackResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result >(result_);
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::set_result(::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.result)
}

// repeated uint64 player_card_item_ids = 2;
inline int CMsgClientToGCOpenPlayerCardPackResponse::player_card_item_ids_size() const {
  return player_card_item_ids_.size();
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::clear_player_card_item_ids() {
  player_card_item_ids_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientToGCOpenPlayerCardPackResponse::player_card_item_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
  return player_card_item_ids_.Get(index);
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::set_player_card_item_ids(int index, ::google::protobuf::uint64 value) {
  player_card_item_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
}
inline void CMsgClientToGCOpenPlayerCardPackResponse::add_player_card_item_ids(::google::protobuf::uint64 value) {
  player_card_item_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientToGCOpenPlayerCardPackResponse::player_card_item_ids() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
  return player_card_item_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientToGCOpenPlayerCardPackResponse::mutable_player_card_item_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgClientToGCOpenPlayerCardPackResponse.player_card_item_ids)
  return &player_card_item_ids_;
}

// -------------------------------------------------------------------

// CMsgClientToGCRecyclePlayerCard

// optional uint64 player_card_item_id = 1;
inline bool CMsgClientToGCRecyclePlayerCard::has_player_card_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRecyclePlayerCard::set_has_player_card_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRecyclePlayerCard::clear_has_player_card_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRecyclePlayerCard::clear_player_card_item_id() {
  player_card_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_player_card_item_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCRecyclePlayerCard::player_card_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecyclePlayerCard.player_card_item_id)
  return player_card_item_id_;
}
inline void CMsgClientToGCRecyclePlayerCard::set_player_card_item_id(::google::protobuf::uint64 value) {
  set_has_player_card_item_id();
  player_card_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecyclePlayerCard.player_card_item_id)
}

// optional uint32 event_id = 2;
inline bool CMsgClientToGCRecyclePlayerCard::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRecyclePlayerCard::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRecyclePlayerCard::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRecyclePlayerCard::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecyclePlayerCard::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecyclePlayerCard.event_id)
  return event_id_;
}
inline void CMsgClientToGCRecyclePlayerCard::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecyclePlayerCard.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCRecyclePlayerCardResponse

// optional .proto.dota.CMsgClientToGCRecyclePlayerCardResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCRecyclePlayerCardResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result CMsgClientToGCRecyclePlayerCardResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecyclePlayerCardResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result >(result_);
}
inline void CMsgClientToGCRecyclePlayerCardResponse::set_result(::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecyclePlayerCardResponse.result)
}

// optional uint32 dust_amount = 2;
inline bool CMsgClientToGCRecyclePlayerCardResponse::has_dust_amount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::set_has_dust_amount() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::clear_has_dust_amount() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::clear_dust_amount() {
  dust_amount_ = 0u;
  clear_has_dust_amount();
}
inline ::google::protobuf::uint32 CMsgClientToGCRecyclePlayerCardResponse::dust_amount() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCRecyclePlayerCardResponse.dust_amount)
  return dust_amount_;
}
inline void CMsgClientToGCRecyclePlayerCardResponse::set_dust_amount(::google::protobuf::uint32 value) {
  set_has_dust_amount();
  dust_amount_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCRecyclePlayerCardResponse.dust_amount)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreatePlayerCardPack

// optional uint64 card_dust_item_id = 1;
inline bool CMsgClientToGCCreatePlayerCardPack::has_card_dust_item_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreatePlayerCardPack::set_has_card_dust_item_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCreatePlayerCardPack::clear_has_card_dust_item_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCreatePlayerCardPack::clear_card_dust_item_id() {
  card_dust_item_id_ = GOOGLE_ULONGLONG(0);
  clear_has_card_dust_item_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCCreatePlayerCardPack::card_dust_item_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreatePlayerCardPack.card_dust_item_id)
  return card_dust_item_id_;
}
inline void CMsgClientToGCCreatePlayerCardPack::set_card_dust_item_id(::google::protobuf::uint64 value) {
  set_has_card_dust_item_id();
  card_dust_item_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreatePlayerCardPack.card_dust_item_id)
}

// optional uint32 event_id = 2;
inline bool CMsgClientToGCCreatePlayerCardPack::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCCreatePlayerCardPack::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCCreatePlayerCardPack::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCCreatePlayerCardPack::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCCreatePlayerCardPack::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreatePlayerCardPack.event_id)
  return event_id_;
}
inline void CMsgClientToGCCreatePlayerCardPack::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreatePlayerCardPack.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCCreatePlayerCardPackResponse

// optional .proto.dota.CMsgClientToGCCreatePlayerCardPackResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCCreatePlayerCardPackResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCCreatePlayerCardPackResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCCreatePlayerCardPackResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCCreatePlayerCardPackResponse::clear_result() {
  result_ = 1;
  clear_has_result();
}
inline ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result CMsgClientToGCCreatePlayerCardPackResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCCreatePlayerCardPackResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result >(result_);
}
inline void CMsgClientToGCCreatePlayerCardPackResponse::set_result(::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCCreatePlayerCardPackResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Questlines

// optional string name = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgGCToClientBattlePassRollup_International2016_Questlines::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
  return name_.GetNoArena();
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}
#if LANG_CXX11
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}
#endif
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}
inline ::std::string* CMsgGCToClientBattlePassRollup_International2016_Questlines::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientBattlePassRollup_International2016_Questlines::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.name)
}

// optional uint32 onestar = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_onestar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_has_onestar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_has_onestar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_onestar() {
  onestar_ = 0u;
  clear_has_onestar();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Questlines::onestar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.onestar)
  return onestar_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_onestar(::google::protobuf::uint32 value) {
  set_has_onestar();
  onestar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.onestar)
}

// optional uint32 twostar = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_twostar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_has_twostar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_has_twostar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_twostar() {
  twostar_ = 0u;
  clear_has_twostar();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Questlines::twostar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.twostar)
  return twostar_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_twostar(::google::protobuf::uint32 value) {
  set_has_twostar();
  twostar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.twostar)
}

// optional uint32 threestar = 4;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_threestar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_has_threestar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_has_threestar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_threestar() {
  threestar_ = 0u;
  clear_has_threestar();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Questlines::threestar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.threestar)
  return threestar_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_threestar(::google::protobuf::uint32 value) {
  set_has_threestar();
  threestar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.threestar)
}

// optional uint32 total = 5;
inline bool CMsgGCToClientBattlePassRollup_International2016_Questlines::has_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_has_total() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_has_total() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Questlines::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Questlines::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines.total)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Wagering

// optional uint32 total_wagered = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_total_wagered() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_has_total_wagered() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_has_total_wagered() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_total_wagered() {
  total_wagered_ = 0u;
  clear_has_total_wagered();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::total_wagered() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.total_wagered)
  return total_wagered_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_total_wagered(::google::protobuf::uint32 value) {
  set_has_total_wagered();
  total_wagered_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.total_wagered)
}

// optional uint32 total_won = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_total_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_has_total_won() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_has_total_won() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_total_won() {
  total_won_ = 0u;
  clear_has_total_won();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::total_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.total_won)
  return total_won_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_total_won(::google::protobuf::uint32 value) {
  set_has_total_won();
  total_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.total_won)
}

// optional uint32 average_won = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_average_won() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_has_average_won() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_has_average_won() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_average_won() {
  average_won_ = 0u;
  clear_has_average_won();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::average_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.average_won)
  return average_won_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_average_won(::google::protobuf::uint32 value) {
  set_has_average_won();
  average_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.average_won)
}

// optional uint32 success_rate = 4;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_success_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_has_success_rate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_has_success_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_success_rate() {
  success_rate_ = 0u;
  clear_has_success_rate();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::success_rate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.success_rate)
  return success_rate_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_success_rate(::google::protobuf::uint32 value) {
  set_has_success_rate();
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.success_rate)
}

// optional uint32 total_tips = 5;
inline bool CMsgGCToClientBattlePassRollup_International2016_Wagering::has_total_tips() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_has_total_tips() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_has_total_tips() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::clear_total_tips() {
  total_tips_ = 0u;
  clear_has_total_tips();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Wagering::total_tips() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.total_tips)
  return total_tips_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Wagering::set_total_tips(::google::protobuf::uint32 value) {
  set_has_total_tips();
  total_tips_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering.total_tips)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Achievements

// optional uint32 completed = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Achievements::has_completed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_has_completed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_has_completed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_completed() {
  completed_ = 0u;
  clear_has_completed();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Achievements::completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements.completed)
  return completed_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_completed(::google::protobuf::uint32 value) {
  set_has_completed();
  completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements.completed)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Achievements::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_has_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_has_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Achievements::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016_Achievements::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_has_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_has_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Achievements::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Achievements::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_BattleCup

// optional uint32 wins = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_BattleCup::has_wins() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::set_has_wins() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::clear_has_wins() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::clear_wins() {
  wins_ = 0u;
  clear_has_wins();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_BattleCup::wins() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup.wins)
  return wins_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::set_wins(::google::protobuf::uint32 value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup.wins)
}

// optional uint32 score = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_BattleCup::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_BattleCup::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup.score)
  return score_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_BattleCup::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup.score)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Predictions

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Predictions::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_has_correct() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_has_correct() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_correct() {
  correct_ = 0u;
  clear_has_correct();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Predictions::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_correct(::google::protobuf::uint32 value) {
  set_has_correct();
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions.correct)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Predictions::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_has_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_has_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Predictions::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016_Predictions::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_has_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_has_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Predictions::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Predictions::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_Bracket

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_Bracket::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::set_has_correct() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::clear_has_correct() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::clear_correct() {
  correct_ = 0u;
  clear_has_correct();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Bracket::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::set_correct(::google::protobuf::uint32 value) {
  set_has_correct();
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket.correct)
}

// optional uint32 points = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_Bracket::has_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::set_has_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::clear_has_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_Bracket::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_Bracket::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_PlayerCard

// optional uint32 account_id = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_PlayerCard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_PlayerCard::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard.account_id)
}

// optional uint32 quality = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_PlayerCard::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016_PlayerCard::quality() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard.quality)
  return quality_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_PlayerCard::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard.quality)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge

// optional float total_score = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::has_total_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::set_has_total_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::clear_total_score() {
  total_score_ = 0;
  clear_has_total_score();
}
inline float CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::total_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge.total_score)
  return total_score_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::set_total_score(float value) {
  set_has_total_score();
  total_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge.total_score)
}

// optional float percentile = 2;
inline bool CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::has_percentile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::set_has_percentile() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::clear_has_percentile() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::clear_percentile() {
  percentile_ = 0;
  clear_has_percentile();
}
inline float CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::percentile() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge.percentile)
  return percentile_;
}
inline void CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::set_percentile(float value) {
  set_has_percentile();
  percentile_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge.percentile)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_International2016

// optional uint32 battle_pass_level = 1;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_battle_pass_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_battle_pass_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_battle_pass_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_battle_pass_level() {
  battle_pass_level_ = 0u;
  clear_has_battle_pass_level();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_International2016::battle_pass_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.battle_pass_level)
  return battle_pass_level_;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_battle_pass_level(::google::protobuf::uint32 value) {
  set_has_battle_pass_level();
  battle_pass_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_International2016.battle_pass_level)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Questlines questlines = 2;
inline int CMsgGCToClientBattlePassRollup_International2016::questlines_size() const {
  return questlines_.size();
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_questlines() {
  questlines_.Clear();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines& CMsgGCToClientBattlePassRollup_International2016::questlines(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.questlines)
  return questlines_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines* CMsgGCToClientBattlePassRollup_International2016::mutable_questlines(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.questlines)
  return questlines_.Mutable(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines* CMsgGCToClientBattlePassRollup_International2016::add_questlines() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_International2016.questlines)
  return questlines_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines >*
CMsgGCToClientBattlePassRollup_International2016::mutable_questlines() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_International2016.questlines)
  return &questlines_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Questlines >&
CMsgGCToClientBattlePassRollup_International2016::questlines() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_International2016.questlines)
  return questlines_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Wagering wagering = 3;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_wagering() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_wagering() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_wagering() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_wagering() {
  if (wagering_ != NULL) wagering_->::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering::Clear();
  clear_has_wagering();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering& CMsgGCToClientBattlePassRollup_International2016::wagering() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.wagering)
  return wagering_ != NULL ? *wagering_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* CMsgGCToClientBattlePassRollup_International2016::mutable_wagering() {
  set_has_wagering();
  if (wagering_ == NULL) {
    wagering_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.wagering)
  return wagering_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* CMsgGCToClientBattlePassRollup_International2016::release_wagering() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.wagering)
  clear_has_wagering();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* temp = wagering_;
  wagering_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Wagering* wagering) {
  delete wagering_;
  wagering_ = wagering;
  if (wagering) {
    set_has_wagering();
  } else {
    clear_has_wagering();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.wagering)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Achievements achievements = 4;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_achievements() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_achievements() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_achievements() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_achievements() {
  if (achievements_ != NULL) achievements_->::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements::Clear();
  clear_has_achievements();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements& CMsgGCToClientBattlePassRollup_International2016::achievements() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.achievements)
  return achievements_ != NULL ? *achievements_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* CMsgGCToClientBattlePassRollup_International2016::mutable_achievements() {
  set_has_achievements();
  if (achievements_ == NULL) {
    achievements_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.achievements)
  return achievements_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* CMsgGCToClientBattlePassRollup_International2016::release_achievements() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.achievements)
  clear_has_achievements();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* temp = achievements_;
  achievements_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Achievements* achievements) {
  delete achievements_;
  achievements_ = achievements;
  if (achievements) {
    set_has_achievements();
  } else {
    clear_has_achievements();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.achievements)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.BattleCup battle_cup = 5;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_battle_cup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_battle_cup() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_battle_cup() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_battle_cup() {
  if (battle_cup_ != NULL) battle_cup_->::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup::Clear();
  clear_has_battle_cup();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup& CMsgGCToClientBattlePassRollup_International2016::battle_cup() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.battle_cup)
  return battle_cup_ != NULL ? *battle_cup_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* CMsgGCToClientBattlePassRollup_International2016::mutable_battle_cup() {
  set_has_battle_cup();
  if (battle_cup_ == NULL) {
    battle_cup_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.battle_cup)
  return battle_cup_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* CMsgGCToClientBattlePassRollup_International2016::release_battle_cup() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.battle_cup)
  clear_has_battle_cup();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* temp = battle_cup_;
  battle_cup_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_battle_cup(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_BattleCup* battle_cup) {
  delete battle_cup_;
  battle_cup_ = battle_cup;
  if (battle_cup) {
    set_has_battle_cup();
  } else {
    clear_has_battle_cup();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.battle_cup)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Predictions predictions = 6;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_predictions() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_predictions() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_predictions() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_predictions() {
  if (predictions_ != NULL) predictions_->::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions::Clear();
  clear_has_predictions();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions& CMsgGCToClientBattlePassRollup_International2016::predictions() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.predictions)
  return predictions_ != NULL ? *predictions_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* CMsgGCToClientBattlePassRollup_International2016::mutable_predictions() {
  set_has_predictions();
  if (predictions_ == NULL) {
    predictions_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.predictions)
  return predictions_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* CMsgGCToClientBattlePassRollup_International2016::release_predictions() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.predictions)
  clear_has_predictions();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* temp = predictions_;
  predictions_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Predictions* predictions) {
  delete predictions_;
  predictions_ = predictions;
  if (predictions) {
    set_has_predictions();
  } else {
    clear_has_predictions();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.predictions)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.Bracket bracket = 7;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_bracket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_bracket() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_bracket() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_bracket() {
  if (bracket_ != NULL) bracket_->::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket::Clear();
  clear_has_bracket();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket& CMsgGCToClientBattlePassRollup_International2016::bracket() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.bracket)
  return bracket_ != NULL ? *bracket_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* CMsgGCToClientBattlePassRollup_International2016::mutable_bracket() {
  set_has_bracket();
  if (bracket_ == NULL) {
    bracket_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.bracket)
  return bracket_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* CMsgGCToClientBattlePassRollup_International2016::release_bracket() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.bracket)
  clear_has_bracket();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* temp = bracket_;
  bracket_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_Bracket* bracket) {
  delete bracket_;
  bracket_ = bracket;
  if (bracket) {
    set_has_bracket();
  } else {
    clear_has_bracket();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.bracket)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_International2016.PlayerCard player_cards = 8;
inline int CMsgGCToClientBattlePassRollup_International2016::player_cards_size() const {
  return player_cards_.size();
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_player_cards() {
  player_cards_.Clear();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard& CMsgGCToClientBattlePassRollup_International2016::player_cards(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return player_cards_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* CMsgGCToClientBattlePassRollup_International2016::mutable_player_cards(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return player_cards_.Mutable(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard* CMsgGCToClientBattlePassRollup_International2016::add_player_cards() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return player_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard >*
CMsgGCToClientBattlePassRollup_International2016::mutable_player_cards() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return &player_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_PlayerCard >&
CMsgGCToClientBattlePassRollup_International2016::player_cards() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_International2016.player_cards)
  return player_cards_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016.FantasyChallenge fantasy_challenge = 9;
inline bool CMsgGCToClientBattlePassRollup_International2016::has_fantasy_challenge() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_has_fantasy_challenge() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_has_fantasy_challenge() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCToClientBattlePassRollup_International2016::clear_fantasy_challenge() {
  if (fantasy_challenge_ != NULL) fantasy_challenge_->::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::Clear();
  clear_has_fantasy_challenge();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge& CMsgGCToClientBattlePassRollup_International2016::fantasy_challenge() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_International2016.fantasy_challenge)
  return fantasy_challenge_ != NULL ? *fantasy_challenge_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* CMsgGCToClientBattlePassRollup_International2016::mutable_fantasy_challenge() {
  set_has_fantasy_challenge();
  if (fantasy_challenge_ == NULL) {
    fantasy_challenge_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_International2016.fantasy_challenge)
  return fantasy_challenge_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* CMsgGCToClientBattlePassRollup_International2016::release_fantasy_challenge() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_International2016.fantasy_challenge)
  clear_has_fantasy_challenge();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* temp = fantasy_challenge_;
  fantasy_challenge_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_International2016::set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_International2016_FantasyChallenge* fantasy_challenge) {
  delete fantasy_challenge_;
  fantasy_challenge_ = fantasy_challenge;
  if (fantasy_challenge) {
    set_has_fantasy_challenge();
  } else {
    clear_has_fantasy_challenge();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_International2016.fantasy_challenge)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_Questlines

// optional string name = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Questlines::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgGCToClientBattlePassRollup_Fall2016_Questlines::name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
  return name_.GetNoArena();
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
}
#if LANG_CXX11
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
}
#endif
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
}
inline ::std::string* CMsgGCToClientBattlePassRollup_Fall2016_Questlines::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientBattlePassRollup_Fall2016_Questlines::release_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.name)
}

// optional uint32 onestar = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Questlines::has_onestar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_has_onestar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_has_onestar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_onestar() {
  onestar_ = 0u;
  clear_has_onestar();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Questlines::onestar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.onestar)
  return onestar_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_onestar(::google::protobuf::uint32 value) {
  set_has_onestar();
  onestar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.onestar)
}

// optional uint32 twostar = 3;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Questlines::has_twostar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_has_twostar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_has_twostar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_twostar() {
  twostar_ = 0u;
  clear_has_twostar();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Questlines::twostar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.twostar)
  return twostar_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_twostar(::google::protobuf::uint32 value) {
  set_has_twostar();
  twostar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.twostar)
}

// optional uint32 threestar = 4;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Questlines::has_threestar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_has_threestar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_has_threestar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_threestar() {
  threestar_ = 0u;
  clear_has_threestar();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Questlines::threestar() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.threestar)
  return threestar_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_threestar(::google::protobuf::uint32 value) {
  set_has_threestar();
  threestar_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.threestar)
}

// optional uint32 total = 5;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Questlines::has_total() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_has_total() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_has_total() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Questlines::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Questlines::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines.total)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_Wagering

// optional uint32 total_wagered = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Wagering::has_total_wagered() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_has_total_wagered() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_has_total_wagered() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_total_wagered() {
  total_wagered_ = 0u;
  clear_has_total_wagered();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Wagering::total_wagered() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.total_wagered)
  return total_wagered_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_total_wagered(::google::protobuf::uint32 value) {
  set_has_total_wagered();
  total_wagered_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.total_wagered)
}

// optional uint32 total_won = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Wagering::has_total_won() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_has_total_won() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_has_total_won() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_total_won() {
  total_won_ = 0u;
  clear_has_total_won();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Wagering::total_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.total_won)
  return total_won_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_total_won(::google::protobuf::uint32 value) {
  set_has_total_won();
  total_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.total_won)
}

// optional uint32 average_won = 3;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Wagering::has_average_won() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_has_average_won() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_has_average_won() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_average_won() {
  average_won_ = 0u;
  clear_has_average_won();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Wagering::average_won() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.average_won)
  return average_won_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_average_won(::google::protobuf::uint32 value) {
  set_has_average_won();
  average_won_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.average_won)
}

// optional uint32 success_rate = 4;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Wagering::has_success_rate() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_has_success_rate() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_has_success_rate() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_success_rate() {
  success_rate_ = 0u;
  clear_has_success_rate();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Wagering::success_rate() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.success_rate)
  return success_rate_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_success_rate(::google::protobuf::uint32 value) {
  set_has_success_rate();
  success_rate_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.success_rate)
}

// optional uint32 total_tips = 5;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Wagering::has_total_tips() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_has_total_tips() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_has_total_tips() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::clear_total_tips() {
  total_tips_ = 0u;
  clear_has_total_tips();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Wagering::total_tips() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.total_tips)
  return total_tips_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Wagering::set_total_tips(::google::protobuf::uint32 value) {
  set_has_total_tips();
  total_tips_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering.total_tips)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_Achievements

// optional uint32 completed = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Achievements::has_completed() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::set_has_completed() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::clear_has_completed() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::clear_completed() {
  completed_ = 0u;
  clear_has_completed();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Achievements::completed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements.completed)
  return completed_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::set_completed(::google::protobuf::uint32 value) {
  set_has_completed();
  completed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements.completed)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Achievements::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::set_has_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::clear_has_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Achievements::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Achievements::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::set_has_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::clear_has_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Achievements::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Achievements::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_BattleCup

// optional uint32 wins = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::has_wins() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::set_has_wins() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::clear_has_wins() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::clear_wins() {
  wins_ = 0u;
  clear_has_wins();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::wins() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup.wins)
  return wins_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::set_wins(::google::protobuf::uint32 value) {
  set_has_wins();
  wins_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup.wins)
}

// optional uint32 score = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup.score)
  return score_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup.score)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_Predictions

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Predictions::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::set_has_correct() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::clear_has_correct() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::clear_correct() {
  correct_ = 0u;
  clear_has_correct();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Predictions::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::set_correct(::google::protobuf::uint32 value) {
  set_has_correct();
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions.correct)
}

// optional uint32 total = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Predictions::has_total() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::set_has_total() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::clear_has_total() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::clear_total() {
  total_ = 0u;
  clear_has_total();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Predictions::total() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions.total)
  return total_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::set_total(::google::protobuf::uint32 value) {
  set_has_total();
  total_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions.total)
}

// optional uint32 points = 3;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Predictions::has_points() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::set_has_points() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::clear_has_points() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Predictions::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Predictions::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_Bracket

// optional uint32 correct = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Bracket::has_correct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Bracket::set_has_correct() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Bracket::clear_has_correct() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Bracket::clear_correct() {
  correct_ = 0u;
  clear_has_correct();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Bracket::correct() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket.correct)
  return correct_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Bracket::set_correct(::google::protobuf::uint32 value) {
  set_has_correct();
  correct_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket.correct)
}

// optional uint32 points = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_Bracket::has_points() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Bracket::set_has_points() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Bracket::clear_has_points() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Bracket::clear_points() {
  points_ = 0u;
  clear_has_points();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_Bracket::points() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket.points)
  return points_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_Bracket::set_points(::google::protobuf::uint32 value) {
  set_has_points();
  points_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket.points)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard

// optional uint32 account_id = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard.account_id)
}

// optional uint32 quality = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::has_quality() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::set_has_quality() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::clear_has_quality() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::quality() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard.quality)
  return quality_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard.quality)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge

// optional float total_score = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::has_total_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::set_has_total_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::clear_has_total_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::clear_total_score() {
  total_score_ = 0;
  clear_has_total_score();
}
inline float CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::total_score() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge.total_score)
  return total_score_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::set_total_score(float value) {
  set_has_total_score();
  total_score_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge.total_score)
}

// optional float percentile = 2;
inline bool CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::has_percentile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::set_has_percentile() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::clear_has_percentile() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::clear_percentile() {
  percentile_ = 0;
  clear_has_percentile();
}
inline float CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::percentile() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge.percentile)
  return percentile_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::set_percentile(float value) {
  set_has_percentile();
  percentile_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge.percentile)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollup_Fall2016

// optional uint32 battle_pass_level = 1;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_battle_pass_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_has_battle_pass_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_has_battle_pass_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_battle_pass_level() {
  battle_pass_level_ = 0u;
  clear_has_battle_pass_level();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollup_Fall2016::battle_pass_level() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.battle_pass_level)
  return battle_pass_level_;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_battle_pass_level(::google::protobuf::uint32 value) {
  set_has_battle_pass_level();
  battle_pass_level_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.battle_pass_level)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Questlines questlines = 2;
inline int CMsgGCToClientBattlePassRollup_Fall2016::questlines_size() const {
  return questlines_.size();
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_questlines() {
  questlines_.Clear();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines& CMsgGCToClientBattlePassRollup_Fall2016::questlines(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.questlines)
  return questlines_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines* CMsgGCToClientBattlePassRollup_Fall2016::mutable_questlines(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.questlines)
  return questlines_.Mutable(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines* CMsgGCToClientBattlePassRollup_Fall2016::add_questlines() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.questlines)
  return questlines_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines >*
CMsgGCToClientBattlePassRollup_Fall2016::mutable_questlines() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.questlines)
  return &questlines_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Questlines >&
CMsgGCToClientBattlePassRollup_Fall2016::questlines() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.questlines)
  return questlines_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Wagering wagering = 3;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_wagering() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_has_wagering() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_has_wagering() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_wagering() {
  if (wagering_ != NULL) wagering_->::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering::Clear();
  clear_has_wagering();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering& CMsgGCToClientBattlePassRollup_Fall2016::wagering() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.wagering)
  return wagering_ != NULL ? *wagering_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* CMsgGCToClientBattlePassRollup_Fall2016::mutable_wagering() {
  set_has_wagering();
  if (wagering_ == NULL) {
    wagering_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.wagering)
  return wagering_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* CMsgGCToClientBattlePassRollup_Fall2016::release_wagering() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.wagering)
  clear_has_wagering();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* temp = wagering_;
  wagering_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_allocated_wagering(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Wagering* wagering) {
  delete wagering_;
  wagering_ = wagering;
  if (wagering) {
    set_has_wagering();
  } else {
    clear_has_wagering();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.wagering)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Achievements achievements = 4;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_achievements() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_has_achievements() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_has_achievements() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_achievements() {
  if (achievements_ != NULL) achievements_->::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements::Clear();
  clear_has_achievements();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements& CMsgGCToClientBattlePassRollup_Fall2016::achievements() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.achievements)
  return achievements_ != NULL ? *achievements_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* CMsgGCToClientBattlePassRollup_Fall2016::mutable_achievements() {
  set_has_achievements();
  if (achievements_ == NULL) {
    achievements_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.achievements)
  return achievements_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* CMsgGCToClientBattlePassRollup_Fall2016::release_achievements() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.achievements)
  clear_has_achievements();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* temp = achievements_;
  achievements_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_allocated_achievements(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Achievements* achievements) {
  delete achievements_;
  achievements_ = achievements;
  if (achievements) {
    set_has_achievements();
  } else {
    clear_has_achievements();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.achievements)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.BattleCup battle_cup = 5;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_battle_cup() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_has_battle_cup() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_has_battle_cup() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_battle_cup() {
  if (battle_cup_ != NULL) battle_cup_->::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::Clear();
  clear_has_battle_cup();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup& CMsgGCToClientBattlePassRollup_Fall2016::battle_cup() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.battle_cup)
  return battle_cup_ != NULL ? *battle_cup_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* CMsgGCToClientBattlePassRollup_Fall2016::mutable_battle_cup() {
  set_has_battle_cup();
  if (battle_cup_ == NULL) {
    battle_cup_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.battle_cup)
  return battle_cup_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* CMsgGCToClientBattlePassRollup_Fall2016::release_battle_cup() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.battle_cup)
  clear_has_battle_cup();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* temp = battle_cup_;
  battle_cup_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_allocated_battle_cup(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_BattleCup* battle_cup) {
  delete battle_cup_;
  battle_cup_ = battle_cup;
  if (battle_cup) {
    set_has_battle_cup();
  } else {
    clear_has_battle_cup();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.battle_cup)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Predictions predictions = 6;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_predictions() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_has_predictions() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_has_predictions() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_predictions() {
  if (predictions_ != NULL) predictions_->::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions::Clear();
  clear_has_predictions();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions& CMsgGCToClientBattlePassRollup_Fall2016::predictions() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.predictions)
  return predictions_ != NULL ? *predictions_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* CMsgGCToClientBattlePassRollup_Fall2016::mutable_predictions() {
  set_has_predictions();
  if (predictions_ == NULL) {
    predictions_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.predictions)
  return predictions_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* CMsgGCToClientBattlePassRollup_Fall2016::release_predictions() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.predictions)
  clear_has_predictions();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* temp = predictions_;
  predictions_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_allocated_predictions(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Predictions* predictions) {
  delete predictions_;
  predictions_ = predictions;
  if (predictions) {
    set_has_predictions();
  } else {
    clear_has_predictions();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.predictions)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.Bracket bracket = 7;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_bracket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_has_bracket() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_has_bracket() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_bracket() {
  if (bracket_ != NULL) bracket_->::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket::Clear();
  clear_has_bracket();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket& CMsgGCToClientBattlePassRollup_Fall2016::bracket() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.bracket)
  return bracket_ != NULL ? *bracket_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* CMsgGCToClientBattlePassRollup_Fall2016::mutable_bracket() {
  set_has_bracket();
  if (bracket_ == NULL) {
    bracket_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.bracket)
  return bracket_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* CMsgGCToClientBattlePassRollup_Fall2016::release_bracket() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.bracket)
  clear_has_bracket();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* temp = bracket_;
  bracket_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_allocated_bracket(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_Bracket* bracket) {
  delete bracket_;
  bracket_ = bracket;
  if (bracket) {
    set_has_bracket();
  } else {
    clear_has_bracket();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.bracket)
}

// repeated .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.PlayerCard player_cards = 8;
inline int CMsgGCToClientBattlePassRollup_Fall2016::player_cards_size() const {
  return player_cards_.size();
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_player_cards() {
  player_cards_.Clear();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard& CMsgGCToClientBattlePassRollup_Fall2016::player_cards(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.player_cards)
  return player_cards_.Get(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* CMsgGCToClientBattlePassRollup_Fall2016::mutable_player_cards(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.player_cards)
  return player_cards_.Mutable(index);
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard* CMsgGCToClientBattlePassRollup_Fall2016::add_player_cards() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.player_cards)
  return player_cards_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard >*
CMsgGCToClientBattlePassRollup_Fall2016::mutable_player_cards() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.player_cards)
  return &player_cards_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_PlayerCard >&
CMsgGCToClientBattlePassRollup_Fall2016::player_cards() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.player_cards)
  return player_cards_;
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.FantasyChallenge fantasy_challenge = 9;
inline bool CMsgGCToClientBattlePassRollup_Fall2016::has_fantasy_challenge() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_has_fantasy_challenge() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_has_fantasy_challenge() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::clear_fantasy_challenge() {
  if (fantasy_challenge_ != NULL) fantasy_challenge_->::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::Clear();
  clear_has_fantasy_challenge();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge& CMsgGCToClientBattlePassRollup_Fall2016::fantasy_challenge() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.fantasy_challenge)
  return fantasy_challenge_ != NULL ? *fantasy_challenge_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* CMsgGCToClientBattlePassRollup_Fall2016::mutable_fantasy_challenge() {
  set_has_fantasy_challenge();
  if (fantasy_challenge_ == NULL) {
    fantasy_challenge_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.fantasy_challenge)
  return fantasy_challenge_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* CMsgGCToClientBattlePassRollup_Fall2016::release_fantasy_challenge() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.fantasy_challenge)
  clear_has_fantasy_challenge();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* temp = fantasy_challenge_;
  fantasy_challenge_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollup_Fall2016::set_allocated_fantasy_challenge(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016_FantasyChallenge* fantasy_challenge) {
  delete fantasy_challenge_;
  fantasy_challenge_ = fantasy_challenge;
  if (fantasy_challenge) {
    set_has_fantasy_challenge();
  } else {
    clear_has_fantasy_challenge();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollup_Fall2016.fantasy_challenge)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupRequest

// optional uint32 event_id = 1;
inline bool CMsgGCToClientBattlePassRollupRequest::has_event_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollupRequest::set_has_event_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollupRequest::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollupRequest::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupRequest::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupRequest.event_id)
  return event_id_;
}
inline void CMsgGCToClientBattlePassRollupRequest::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollupRequest.event_id)
}

// optional uint32 account_id = 2;
inline bool CMsgGCToClientBattlePassRollupRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollupRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollupRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollupRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupRequest.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollupRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollupRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupResponse

// optional .proto.dota.CMsgGCToClientBattlePassRollup_International2016 event_ti6 = 1;
inline bool CMsgGCToClientBattlePassRollupResponse::has_event_ti6() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollupResponse::set_has_event_ti6() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollupResponse::clear_has_event_ti6() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollupResponse::clear_event_ti6() {
  if (event_ti6_ != NULL) event_ti6_->::proto::dota::CMsgGCToClientBattlePassRollup_International2016::Clear();
  clear_has_event_ti6();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_International2016& CMsgGCToClientBattlePassRollupResponse::event_ti6() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti6)
  return event_ti6_ != NULL ? *event_ti6_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_International2016::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* CMsgGCToClientBattlePassRollupResponse::mutable_event_ti6() {
  set_has_event_ti6();
  if (event_ti6_ == NULL) {
    event_ti6_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_International2016;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti6)
  return event_ti6_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* CMsgGCToClientBattlePassRollupResponse::release_event_ti6() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti6)
  clear_has_event_ti6();
  ::proto::dota::CMsgGCToClientBattlePassRollup_International2016* temp = event_ti6_;
  event_ti6_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollupResponse::set_allocated_event_ti6(::proto::dota::CMsgGCToClientBattlePassRollup_International2016* event_ti6) {
  delete event_ti6_;
  event_ti6_ = event_ti6;
  if (event_ti6) {
    set_has_event_ti6();
  } else {
    clear_has_event_ti6();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_ti6)
}

// optional .proto.dota.CMsgGCToClientBattlePassRollup_Fall2016 event_fall2016 = 2;
inline bool CMsgGCToClientBattlePassRollupResponse::has_event_fall2016() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientBattlePassRollupResponse::set_has_event_fall2016() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientBattlePassRollupResponse::clear_has_event_fall2016() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientBattlePassRollupResponse::clear_event_fall2016() {
  if (event_fall2016_ != NULL) event_fall2016_->::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016::Clear();
  clear_has_event_fall2016();
}
inline const ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016& CMsgGCToClientBattlePassRollupResponse::event_fall2016() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_fall2016)
  return event_fall2016_ != NULL ? *event_fall2016_
                         : *::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016::internal_default_instance();
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* CMsgGCToClientBattlePassRollupResponse::mutable_event_fall2016() {
  set_has_event_fall2016();
  if (event_fall2016_ == NULL) {
    event_fall2016_ = new ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_fall2016)
  return event_fall2016_;
}
inline ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* CMsgGCToClientBattlePassRollupResponse::release_event_fall2016() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_fall2016)
  clear_has_event_fall2016();
  ::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* temp = event_fall2016_;
  event_fall2016_ = NULL;
  return temp;
}
inline void CMsgGCToClientBattlePassRollupResponse::set_allocated_event_fall2016(::proto::dota::CMsgGCToClientBattlePassRollup_Fall2016* event_fall2016) {
  delete event_fall2016_;
  event_fall2016_ = event_fall2016;
  if (event_fall2016) {
    set_has_event_fall2016();
  } else {
    clear_has_event_fall2016();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientBattlePassRollupResponse.event_fall2016)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupListRequest

// optional uint32 account_id = 1;
inline bool CMsgGCToClientBattlePassRollupListRequest::has_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientBattlePassRollupListRequest::set_has_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientBattlePassRollupListRequest::clear_has_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientBattlePassRollupListRequest::clear_account_id() {
  account_id_ = 0u;
  clear_has_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupListRequest::account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupListRequest.account_id)
  return account_id_;
}
inline void CMsgGCToClientBattlePassRollupListRequest::set_account_id(::google::protobuf::uint32 value) {
  set_has_account_id();
  account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollupListRequest.account_id)
}

// -------------------------------------------------------------------

// CMsgGCToClientBattlePassRollupListResponse

// repeated uint32 event_id = 1;
inline int CMsgGCToClientBattlePassRollupListResponse::event_id_size() const {
  return event_id_.size();
}
inline void CMsgGCToClientBattlePassRollupListResponse::clear_event_id() {
  event_id_.Clear();
}
inline ::google::protobuf::uint32 CMsgGCToClientBattlePassRollupListResponse::event_id(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientBattlePassRollupListResponse.event_id)
  return event_id_.Get(index);
}
inline void CMsgGCToClientBattlePassRollupListResponse::set_event_id(int index, ::google::protobuf::uint32 value) {
  event_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientBattlePassRollupListResponse.event_id)
}
inline void CMsgGCToClientBattlePassRollupListResponse::add_event_id(::google::protobuf::uint32 value) {
  event_id_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgGCToClientBattlePassRollupListResponse.event_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgGCToClientBattlePassRollupListResponse::event_id() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgGCToClientBattlePassRollupListResponse.event_id)
  return event_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgGCToClientBattlePassRollupListResponse::mutable_event_id() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgGCToClientBattlePassRollupListResponse.event_id)
  return &event_id_;
}

// -------------------------------------------------------------------

// CMsgClientToGCTransferSeasonalMMRRequest

// optional bool is_party = 1;
inline bool CMsgClientToGCTransferSeasonalMMRRequest::has_is_party() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTransferSeasonalMMRRequest::set_has_is_party() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCTransferSeasonalMMRRequest::clear_has_is_party() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCTransferSeasonalMMRRequest::clear_is_party() {
  is_party_ = false;
  clear_has_is_party();
}
inline bool CMsgClientToGCTransferSeasonalMMRRequest::is_party() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTransferSeasonalMMRRequest.is_party)
  return is_party_;
}
inline void CMsgClientToGCTransferSeasonalMMRRequest::set_is_party(bool value) {
  set_has_is_party();
  is_party_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTransferSeasonalMMRRequest.is_party)
}

// -------------------------------------------------------------------

// CMsgClientToGCTransferSeasonalMMRResponse

// optional bool success = 1;
inline bool CMsgClientToGCTransferSeasonalMMRResponse::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCTransferSeasonalMMRResponse::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCTransferSeasonalMMRResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCTransferSeasonalMMRResponse::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgClientToGCTransferSeasonalMMRResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCTransferSeasonalMMRResponse.success)
  return success_;
}
inline void CMsgClientToGCTransferSeasonalMMRResponse::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCTransferSeasonalMMRResponse.success)
}

// -------------------------------------------------------------------

// CMsgGCToClientPlaytestStatus

// optional bool active = 1;
inline bool CMsgGCToClientPlaytestStatus::has_active() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientPlaytestStatus::set_has_active() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientPlaytestStatus::clear_has_active() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientPlaytestStatus::clear_active() {
  active_ = false;
  clear_has_active();
}
inline bool CMsgGCToClientPlaytestStatus::active() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientPlaytestStatus.active)
  return active_;
}
inline void CMsgGCToClientPlaytestStatus::set_active(bool value) {
  set_has_active();
  active_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientPlaytestStatus.active)
}

// -------------------------------------------------------------------

// CMsgClientToGCJoinPlaytest

// optional uint32 client_version = 1;
inline bool CMsgClientToGCJoinPlaytest::has_client_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCJoinPlaytest::set_has_client_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCJoinPlaytest::clear_has_client_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCJoinPlaytest::clear_client_version() {
  client_version_ = 0u;
  clear_has_client_version();
}
inline ::google::protobuf::uint32 CMsgClientToGCJoinPlaytest::client_version() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCJoinPlaytest.client_version)
  return client_version_;
}
inline void CMsgClientToGCJoinPlaytest::set_client_version(::google::protobuf::uint32 value) {
  set_has_client_version();
  client_version_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCJoinPlaytest.client_version)
}

// -------------------------------------------------------------------

// CMsgClientToGCJoinPlaytestResponse

// optional string error = 1;
inline bool CMsgClientToGCJoinPlaytestResponse::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCJoinPlaytestResponse::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCJoinPlaytestResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCJoinPlaytestResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
inline const ::std::string& CMsgClientToGCJoinPlaytestResponse::error() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
  return error_.GetNoArena();
}
inline void CMsgClientToGCJoinPlaytestResponse::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
}
#if LANG_CXX11
inline void CMsgClientToGCJoinPlaytestResponse::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
}
#endif
inline void CMsgClientToGCJoinPlaytestResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
}
inline void CMsgClientToGCJoinPlaytestResponse::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
}
inline ::std::string* CMsgClientToGCJoinPlaytestResponse::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientToGCJoinPlaytestResponse::release_error() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
  clear_has_error();
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientToGCJoinPlaytestResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgClientToGCJoinPlaytestResponse.error)
}

// -------------------------------------------------------------------

// CMsgDOTAEventInvite_Team

// optional uint32 team_id = 1;
inline bool CMsgDOTAEventInvite_Team::has_team_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAEventInvite_Team::set_has_team_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAEventInvite_Team::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAEventInvite_Team::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTAEventInvite_Team::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAEventInvite.Team.team_id)
  return team_id_;
}
inline void CMsgDOTAEventInvite_Team::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAEventInvite.Team.team_id)
}

// optional uint32 announcement_date = 2;
inline bool CMsgDOTAEventInvite_Team::has_announcement_date() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTAEventInvite_Team::set_has_announcement_date() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTAEventInvite_Team::clear_has_announcement_date() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTAEventInvite_Team::clear_announcement_date() {
  announcement_date_ = 0u;
  clear_has_announcement_date();
}
inline ::google::protobuf::uint32 CMsgDOTAEventInvite_Team::announcement_date() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAEventInvite.Team.announcement_date)
  return announcement_date_;
}
inline void CMsgDOTAEventInvite_Team::set_announcement_date(::google::protobuf::uint32 value) {
  set_has_announcement_date();
  announcement_date_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAEventInvite.Team.announcement_date)
}

// optional string team_name = 3;
inline bool CMsgDOTAEventInvite_Team::has_team_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAEventInvite_Team::set_has_team_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAEventInvite_Team::clear_has_team_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAEventInvite_Team::clear_team_name() {
  team_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_team_name();
}
inline const ::std::string& CMsgDOTAEventInvite_Team::team_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAEventInvite.Team.team_name)
  return team_name_.GetNoArena();
}
inline void CMsgDOTAEventInvite_Team::set_team_name(const ::std::string& value) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAEventInvite.Team.team_name)
}
#if LANG_CXX11
inline void CMsgDOTAEventInvite_Team::set_team_name(::std::string&& value) {
  set_has_team_name();
  team_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTAEventInvite.Team.team_name)
}
#endif
inline void CMsgDOTAEventInvite_Team::set_team_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTAEventInvite.Team.team_name)
}
inline void CMsgDOTAEventInvite_Team::set_team_name(const char* value, size_t size) {
  set_has_team_name();
  team_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTAEventInvite.Team.team_name)
}
inline ::std::string* CMsgDOTAEventInvite_Team::mutable_team_name() {
  set_has_team_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAEventInvite.Team.team_name)
  return team_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTAEventInvite_Team::release_team_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTAEventInvite.Team.team_name)
  clear_has_team_name();
  return team_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTAEventInvite_Team::set_allocated_team_name(::std::string* team_name) {
  if (team_name != NULL) {
    set_has_team_name();
  } else {
    clear_has_team_name();
  }
  team_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), team_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTAEventInvite.Team.team_name)
}

// optional .proto.dota.EDOTAEventInviteType invite_type = 4 [default = k_EDOTAEventInviteType_Direct];
inline bool CMsgDOTAEventInvite_Team::has_invite_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTAEventInvite_Team::set_has_invite_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTAEventInvite_Team::clear_has_invite_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTAEventInvite_Team::clear_invite_type() {
  invite_type_ = 0;
  clear_has_invite_type();
}
inline ::proto::dota::EDOTAEventInviteType CMsgDOTAEventInvite_Team::invite_type() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAEventInvite.Team.invite_type)
  return static_cast< ::proto::dota::EDOTAEventInviteType >(invite_type_);
}
inline void CMsgDOTAEventInvite_Team::set_invite_type(::proto::dota::EDOTAEventInviteType value) {
  assert(::proto::dota::EDOTAEventInviteType_IsValid(value));
  set_has_invite_type();
  invite_type_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAEventInvite.Team.invite_type)
}

// optional uint32 region = 5;
inline bool CMsgDOTAEventInvite_Team::has_region() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTAEventInvite_Team::set_has_region() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTAEventInvite_Team::clear_has_region() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTAEventInvite_Team::clear_region() {
  region_ = 0u;
  clear_has_region();
}
inline ::google::protobuf::uint32 CMsgDOTAEventInvite_Team::region() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAEventInvite.Team.region)
  return region_;
}
inline void CMsgDOTAEventInvite_Team::set_region(::google::protobuf::uint32 value) {
  set_has_region();
  region_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAEventInvite.Team.region)
}

// optional bool qualifier_winner = 6;
inline bool CMsgDOTAEventInvite_Team::has_qualifier_winner() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgDOTAEventInvite_Team::set_has_qualifier_winner() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgDOTAEventInvite_Team::clear_has_qualifier_winner() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgDOTAEventInvite_Team::clear_qualifier_winner() {
  qualifier_winner_ = false;
  clear_has_qualifier_winner();
}
inline bool CMsgDOTAEventInvite_Team::qualifier_winner() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAEventInvite.Team.qualifier_winner)
  return qualifier_winner_;
}
inline void CMsgDOTAEventInvite_Team::set_qualifier_winner(bool value) {
  set_has_qualifier_winner();
  qualifier_winner_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAEventInvite.Team.qualifier_winner)
}

// -------------------------------------------------------------------

// CMsgDOTAEventInvite

// repeated .proto.dota.CMsgDOTAEventInvite.Team teams = 1;
inline int CMsgDOTAEventInvite::teams_size() const {
  return teams_.size();
}
inline void CMsgDOTAEventInvite::clear_teams() {
  teams_.Clear();
}
inline const ::proto::dota::CMsgDOTAEventInvite_Team& CMsgDOTAEventInvite::teams(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAEventInvite.teams)
  return teams_.Get(index);
}
inline ::proto::dota::CMsgDOTAEventInvite_Team* CMsgDOTAEventInvite::mutable_teams(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTAEventInvite.teams)
  return teams_.Mutable(index);
}
inline ::proto::dota::CMsgDOTAEventInvite_Team* CMsgDOTAEventInvite::add_teams() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTAEventInvite.teams)
  return teams_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAEventInvite_Team >*
CMsgDOTAEventInvite::mutable_teams() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTAEventInvite.teams)
  return &teams_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTAEventInvite_Team >&
CMsgDOTAEventInvite::teams() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTAEventInvite.teams)
  return teams_;
}

// -------------------------------------------------------------------

// CMsgDOTASetFavoriteTeam

// optional uint32 team_id = 1;
inline bool CMsgDOTASetFavoriteTeam::has_team_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASetFavoriteTeam::set_has_team_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASetFavoriteTeam::clear_has_team_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASetFavoriteTeam::clear_team_id() {
  team_id_ = 0u;
  clear_has_team_id();
}
inline ::google::protobuf::uint32 CMsgDOTASetFavoriteTeam::team_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASetFavoriteTeam.team_id)
  return team_id_;
}
inline void CMsgDOTASetFavoriteTeam::set_team_id(::google::protobuf::uint32 value) {
  set_has_team_id();
  team_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASetFavoriteTeam.team_id)
}

// optional uint32 event_id = 2;
inline bool CMsgDOTASetFavoriteTeam::has_event_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASetFavoriteTeam::set_has_event_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTASetFavoriteTeam::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTASetFavoriteTeam::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgDOTASetFavoriteTeam::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASetFavoriteTeam.event_id)
  return event_id_;
}
inline void CMsgDOTASetFavoriteTeam::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASetFavoriteTeam.event_id)
}

// -------------------------------------------------------------------

// CMsgDOTATriviaQuestion

// optional uint32 question_id = 1;
inline bool CMsgDOTATriviaQuestion::has_question_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTATriviaQuestion::set_has_question_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTATriviaQuestion::clear_has_question_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTATriviaQuestion::clear_question_id() {
  question_id_ = 0u;
  clear_has_question_id();
}
inline ::google::protobuf::uint32 CMsgDOTATriviaQuestion::question_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestion.question_id)
  return question_id_;
}
inline void CMsgDOTATriviaQuestion::set_question_id(::google::protobuf::uint32 value) {
  set_has_question_id();
  question_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.question_id)
}

// optional .proto.dota.EDOTATriviaQuestionCategory category = 2 [default = k_EDOTATriviaQuestionCategory_AbilityIcon];
inline bool CMsgDOTATriviaQuestion::has_category() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgDOTATriviaQuestion::set_has_category() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgDOTATriviaQuestion::clear_has_category() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgDOTATriviaQuestion::clear_category() {
  category_ = 0;
  clear_has_category();
}
inline ::proto::dota::EDOTATriviaQuestionCategory CMsgDOTATriviaQuestion::category() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestion.category)
  return static_cast< ::proto::dota::EDOTATriviaQuestionCategory >(category_);
}
inline void CMsgDOTATriviaQuestion::set_category(::proto::dota::EDOTATriviaQuestionCategory value) {
  assert(::proto::dota::EDOTATriviaQuestionCategory_IsValid(value));
  set_has_category();
  category_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.category)
}

// optional uint32 timestamp = 3;
inline bool CMsgDOTATriviaQuestion::has_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgDOTATriviaQuestion::set_has_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgDOTATriviaQuestion::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgDOTATriviaQuestion::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 CMsgDOTATriviaQuestion::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestion.timestamp)
  return timestamp_;
}
inline void CMsgDOTATriviaQuestion::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.timestamp)
}

// optional string question_value = 4;
inline bool CMsgDOTATriviaQuestion::has_question_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATriviaQuestion::set_has_question_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATriviaQuestion::clear_has_question_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATriviaQuestion::clear_question_value() {
  question_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_question_value();
}
inline const ::std::string& CMsgDOTATriviaQuestion::question_value() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestion.question_value)
  return question_value_.GetNoArena();
}
inline void CMsgDOTATriviaQuestion::set_question_value(const ::std::string& value) {
  set_has_question_value();
  question_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.question_value)
}
#if LANG_CXX11
inline void CMsgDOTATriviaQuestion::set_question_value(::std::string&& value) {
  set_has_question_value();
  question_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgDOTATriviaQuestion.question_value)
}
#endif
inline void CMsgDOTATriviaQuestion::set_question_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_question_value();
  question_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTATriviaQuestion.question_value)
}
inline void CMsgDOTATriviaQuestion::set_question_value(const char* value, size_t size) {
  set_has_question_value();
  question_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTATriviaQuestion.question_value)
}
inline ::std::string* CMsgDOTATriviaQuestion::mutable_question_value() {
  set_has_question_value();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTATriviaQuestion.question_value)
  return question_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgDOTATriviaQuestion::release_question_value() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgDOTATriviaQuestion.question_value)
  clear_has_question_value();
  return question_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgDOTATriviaQuestion::set_allocated_question_value(::std::string* question_value) {
  if (question_value != NULL) {
    set_has_question_value();
  } else {
    clear_has_question_value();
  }
  question_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), question_value);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgDOTATriviaQuestion.question_value)
}

// repeated string answer_values = 5;
inline int CMsgDOTATriviaQuestion::answer_values_size() const {
  return answer_values_.size();
}
inline void CMsgDOTATriviaQuestion::clear_answer_values() {
  answer_values_.Clear();
}
inline const ::std::string& CMsgDOTATriviaQuestion::answer_values(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  return answer_values_.Get(index);
}
inline ::std::string* CMsgDOTATriviaQuestion::mutable_answer_values(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  return answer_values_.Mutable(index);
}
inline void CMsgDOTATriviaQuestion::set_answer_values(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  answer_values_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgDOTATriviaQuestion::set_answer_values(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  answer_values_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgDOTATriviaQuestion::set_answer_values(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  answer_values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgDOTATriviaQuestion.answer_values)
}
inline void CMsgDOTATriviaQuestion::set_answer_values(int index, const char* value, size_t size) {
  answer_values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgDOTATriviaQuestion.answer_values)
}
inline ::std::string* CMsgDOTATriviaQuestion::add_answer_values() {
  // @@protoc_insertion_point(field_add_mutable:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  return answer_values_.Add();
}
inline void CMsgDOTATriviaQuestion::add_answer_values(const ::std::string& value) {
  answer_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTATriviaQuestion.answer_values)
}
#if LANG_CXX11
inline void CMsgDOTATriviaQuestion::add_answer_values(::std::string&& value) {
  answer_values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTATriviaQuestion.answer_values)
}
#endif
inline void CMsgDOTATriviaQuestion::add_answer_values(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  answer_values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.dota.CMsgDOTATriviaQuestion.answer_values)
}
inline void CMsgDOTATriviaQuestion::add_answer_values(const char* value, size_t size) {
  answer_values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.dota.CMsgDOTATriviaQuestion.answer_values)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgDOTATriviaQuestion::answer_values() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  return answer_values_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgDOTATriviaQuestion::mutable_answer_values() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTATriviaQuestion.answer_values)
  return &answer_values_;
}

// optional uint32 correct_answer_index = 6;
inline bool CMsgDOTATriviaQuestion::has_correct_answer_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgDOTATriviaQuestion::set_has_correct_answer_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgDOTATriviaQuestion::clear_has_correct_answer_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgDOTATriviaQuestion::clear_correct_answer_index() {
  correct_answer_index_ = 0u;
  clear_has_correct_answer_index();
}
inline ::google::protobuf::uint32 CMsgDOTATriviaQuestion::correct_answer_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestion.correct_answer_index)
  return correct_answer_index_;
}
inline void CMsgDOTATriviaQuestion::set_correct_answer_index(::google::protobuf::uint32 value) {
  set_has_correct_answer_index();
  correct_answer_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestion.correct_answer_index)
}

// -------------------------------------------------------------------

// CMsgDOTATriviaCurrentQuestions

// repeated .proto.dota.CMsgDOTATriviaQuestion questions = 1;
inline int CMsgDOTATriviaCurrentQuestions::questions_size() const {
  return questions_.size();
}
inline void CMsgDOTATriviaCurrentQuestions::clear_questions() {
  questions_.Clear();
}
inline const ::proto::dota::CMsgDOTATriviaQuestion& CMsgDOTATriviaCurrentQuestions::questions(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaCurrentQuestions.questions)
  return questions_.Get(index);
}
inline ::proto::dota::CMsgDOTATriviaQuestion* CMsgDOTATriviaCurrentQuestions::mutable_questions(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgDOTATriviaCurrentQuestions.questions)
  return questions_.Mutable(index);
}
inline ::proto::dota::CMsgDOTATriviaQuestion* CMsgDOTATriviaCurrentQuestions::add_questions() {
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTATriviaCurrentQuestions.questions)
  return questions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTATriviaQuestion >*
CMsgDOTATriviaCurrentQuestions::mutable_questions() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTATriviaCurrentQuestions.questions)
  return &questions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CMsgDOTATriviaQuestion >&
CMsgDOTATriviaCurrentQuestions::questions() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTATriviaCurrentQuestions.questions)
  return questions_;
}

// optional bool trivia_enabled = 2;
inline bool CMsgDOTATriviaCurrentQuestions::has_trivia_enabled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATriviaCurrentQuestions::set_has_trivia_enabled() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATriviaCurrentQuestions::clear_has_trivia_enabled() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATriviaCurrentQuestions::clear_trivia_enabled() {
  trivia_enabled_ = false;
  clear_has_trivia_enabled();
}
inline bool CMsgDOTATriviaCurrentQuestions::trivia_enabled() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaCurrentQuestions.trivia_enabled)
  return trivia_enabled_;
}
inline void CMsgDOTATriviaCurrentQuestions::set_trivia_enabled(bool value) {
  set_has_trivia_enabled();
  trivia_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaCurrentQuestions.trivia_enabled)
}

// -------------------------------------------------------------------

// CMsgDOTATriviaQuestionAnswersSummary

// optional bool summary_available = 1;
inline bool CMsgDOTATriviaQuestionAnswersSummary::has_summary_available() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTATriviaQuestionAnswersSummary::set_has_summary_available() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTATriviaQuestionAnswersSummary::clear_has_summary_available() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTATriviaQuestionAnswersSummary::clear_summary_available() {
  summary_available_ = false;
  clear_has_summary_available();
}
inline bool CMsgDOTATriviaQuestionAnswersSummary::summary_available() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.summary_available)
  return summary_available_;
}
inline void CMsgDOTATriviaQuestionAnswersSummary::set_summary_available(bool value) {
  set_has_summary_available();
  summary_available_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.summary_available)
}

// repeated uint32 picked_count = 2;
inline int CMsgDOTATriviaQuestionAnswersSummary::picked_count_size() const {
  return picked_count_.size();
}
inline void CMsgDOTATriviaQuestionAnswersSummary::clear_picked_count() {
  picked_count_.Clear();
}
inline ::google::protobuf::uint32 CMsgDOTATriviaQuestionAnswersSummary::picked_count(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.picked_count)
  return picked_count_.Get(index);
}
inline void CMsgDOTATriviaQuestionAnswersSummary::set_picked_count(int index, ::google::protobuf::uint32 value) {
  picked_count_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.picked_count)
}
inline void CMsgDOTATriviaQuestionAnswersSummary::add_picked_count(::google::protobuf::uint32 value) {
  picked_count_.Add(value);
  // @@protoc_insertion_point(field_add:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.picked_count)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgDOTATriviaQuestionAnswersSummary::picked_count() const {
  // @@protoc_insertion_point(field_list:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.picked_count)
  return picked_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgDOTATriviaQuestionAnswersSummary::mutable_picked_count() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CMsgDOTATriviaQuestionAnswersSummary.picked_count)
  return &picked_count_;
}

// -------------------------------------------------------------------

// CMsgDOTASubmitTriviaQuestionAnswer

// optional uint32 question_id = 1;
inline bool CMsgDOTASubmitTriviaQuestionAnswer::has_question_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitTriviaQuestionAnswer::set_has_question_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASubmitTriviaQuestionAnswer::clear_has_question_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASubmitTriviaQuestionAnswer::clear_question_id() {
  question_id_ = 0u;
  clear_has_question_id();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitTriviaQuestionAnswer::question_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitTriviaQuestionAnswer.question_id)
  return question_id_;
}
inline void CMsgDOTASubmitTriviaQuestionAnswer::set_question_id(::google::protobuf::uint32 value) {
  set_has_question_id();
  question_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitTriviaQuestionAnswer.question_id)
}

// optional uint32 answer_index = 2;
inline bool CMsgDOTASubmitTriviaQuestionAnswer::has_answer_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTASubmitTriviaQuestionAnswer::set_has_answer_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTASubmitTriviaQuestionAnswer::clear_has_answer_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTASubmitTriviaQuestionAnswer::clear_answer_index() {
  answer_index_ = 0u;
  clear_has_answer_index();
}
inline ::google::protobuf::uint32 CMsgDOTASubmitTriviaQuestionAnswer::answer_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitTriviaQuestionAnswer.answer_index)
  return answer_index_;
}
inline void CMsgDOTASubmitTriviaQuestionAnswer::set_answer_index(::google::protobuf::uint32 value) {
  set_has_answer_index();
  answer_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitTriviaQuestionAnswer.answer_index)
}

// -------------------------------------------------------------------

// CMsgDOTASubmitTriviaQuestionAnswerResponse

// optional .proto.dota.EDOTATriviaAnswerResult result = 1 [default = k_EDOTATriviaAnswerResult_Success];
inline bool CMsgDOTASubmitTriviaQuestionAnswerResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTASubmitTriviaQuestionAnswerResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTASubmitTriviaQuestionAnswerResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTASubmitTriviaQuestionAnswerResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::proto::dota::EDOTATriviaAnswerResult CMsgDOTASubmitTriviaQuestionAnswerResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTASubmitTriviaQuestionAnswerResponse.result)
  return static_cast< ::proto::dota::EDOTATriviaAnswerResult >(result_);
}
inline void CMsgDOTASubmitTriviaQuestionAnswerResponse::set_result(::proto::dota::EDOTATriviaAnswerResult value) {
  assert(::proto::dota::EDOTATriviaAnswerResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTASubmitTriviaQuestionAnswerResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAStartTriviaSession

// -------------------------------------------------------------------

// CMsgDOTAStartTriviaSessionResponse

// optional bool trivia_enabled = 1;
inline bool CMsgDOTAStartTriviaSessionResponse::has_trivia_enabled() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAStartTriviaSessionResponse::set_has_trivia_enabled() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAStartTriviaSessionResponse::clear_has_trivia_enabled() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAStartTriviaSessionResponse::clear_trivia_enabled() {
  trivia_enabled_ = false;
  clear_has_trivia_enabled();
}
inline bool CMsgDOTAStartTriviaSessionResponse::trivia_enabled() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStartTriviaSessionResponse.trivia_enabled)
  return trivia_enabled_;
}
inline void CMsgDOTAStartTriviaSessionResponse::set_trivia_enabled(bool value) {
  set_has_trivia_enabled();
  trivia_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAStartTriviaSessionResponse.trivia_enabled)
}

// optional uint32 current_timestamp = 2;
inline bool CMsgDOTAStartTriviaSessionResponse::has_current_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgDOTAStartTriviaSessionResponse::set_has_current_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgDOTAStartTriviaSessionResponse::clear_has_current_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgDOTAStartTriviaSessionResponse::clear_current_timestamp() {
  current_timestamp_ = 0u;
  clear_has_current_timestamp();
}
inline ::google::protobuf::uint32 CMsgDOTAStartTriviaSessionResponse::current_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAStartTriviaSessionResponse.current_timestamp)
  return current_timestamp_;
}
inline void CMsgDOTAStartTriviaSessionResponse::set_current_timestamp(::google::protobuf::uint32 value) {
  set_has_current_timestamp();
  current_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAStartTriviaSessionResponse.current_timestamp)
}

// -------------------------------------------------------------------

// CMsgClientToGCGiveTip

// optional uint32 recipient_account_id = 1;
inline bool CMsgClientToGCGiveTip::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientToGCGiveTip::set_has_recipient_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientToGCGiveTip::clear_has_recipient_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientToGCGiveTip::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  clear_has_recipient_account_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGiveTip::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGiveTip.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgClientToGCGiveTip::set_recipient_account_id(::google::protobuf::uint32 value) {
  set_has_recipient_account_id();
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGiveTip.recipient_account_id)
}

// optional uint64 match_id = 2;
inline bool CMsgClientToGCGiveTip::has_match_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGiveTip::set_has_match_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGiveTip::clear_has_match_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGiveTip::clear_match_id() {
  match_id_ = GOOGLE_ULONGLONG(0);
  clear_has_match_id();
}
inline ::google::protobuf::uint64 CMsgClientToGCGiveTip::match_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGiveTip.match_id)
  return match_id_;
}
inline void CMsgClientToGCGiveTip::set_match_id(::google::protobuf::uint64 value) {
  set_has_match_id();
  match_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGiveTip.match_id)
}

// optional uint32 event_id = 3;
inline bool CMsgClientToGCGiveTip::has_event_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientToGCGiveTip::set_has_event_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientToGCGiveTip::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientToGCGiveTip::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgClientToGCGiveTip::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGiveTip.event_id)
  return event_id_;
}
inline void CMsgClientToGCGiveTip::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGiveTip.event_id)
}

// -------------------------------------------------------------------

// CMsgClientToGCGiveTipResponse

// optional .proto.dota.CMsgClientToGCGiveTipResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgClientToGCGiveTipResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientToGCGiveTipResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientToGCGiveTipResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientToGCGiveTipResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::proto::dota::CMsgClientToGCGiveTipResponse_Result CMsgClientToGCGiveTipResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgClientToGCGiveTipResponse.result)
  return static_cast< ::proto::dota::CMsgClientToGCGiveTipResponse_Result >(result_);
}
inline void CMsgClientToGCGiveTipResponse::set_result(::proto::dota::CMsgClientToGCGiveTipResponse_Result value) {
  assert(::proto::dota::CMsgClientToGCGiveTipResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgClientToGCGiveTipResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAAnchorPhoneNumberRequest

// -------------------------------------------------------------------

// CMsgDOTAAnchorPhoneNumberResponse

// optional .proto.dota.CMsgDOTAAnchorPhoneNumberResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTAAnchorPhoneNumberResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAAnchorPhoneNumberResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAAnchorPhoneNumberResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAAnchorPhoneNumberResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result CMsgDOTAAnchorPhoneNumberResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAAnchorPhoneNumberResponse.result)
  return static_cast< ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result >(result_);
}
inline void CMsgDOTAAnchorPhoneNumberResponse::set_result(::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result value) {
  assert(::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAAnchorPhoneNumberResponse.result)
}

// -------------------------------------------------------------------

// CMsgDOTAUnanchorPhoneNumberRequest

// -------------------------------------------------------------------

// CMsgDOTAUnanchorPhoneNumberResponse

// optional .proto.dota.CMsgDOTAUnanchorPhoneNumberResponse.Result result = 1 [default = SUCCESS];
inline bool CMsgDOTAUnanchorPhoneNumberResponse::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgDOTAUnanchorPhoneNumberResponse::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgDOTAUnanchorPhoneNumberResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgDOTAUnanchorPhoneNumberResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result CMsgDOTAUnanchorPhoneNumberResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgDOTAUnanchorPhoneNumberResponse.result)
  return static_cast< ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result >(result_);
}
inline void CMsgDOTAUnanchorPhoneNumberResponse::set_result(::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result value) {
  assert(::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgDOTAUnanchorPhoneNumberResponse.result)
}

// -------------------------------------------------------------------

// CMsgGCToClientTipNotification

// optional uint32 tipper_account_id = 1;
inline bool CMsgGCToClientTipNotification::has_tipper_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgGCToClientTipNotification::set_has_tipper_account_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgGCToClientTipNotification::clear_has_tipper_account_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgGCToClientTipNotification::clear_tipper_account_id() {
  tipper_account_id_ = 0u;
  clear_has_tipper_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientTipNotification::tipper_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTipNotification.tipper_account_id)
  return tipper_account_id_;
}
inline void CMsgGCToClientTipNotification::set_tipper_account_id(::google::protobuf::uint32 value) {
  set_has_tipper_account_id();
  tipper_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTipNotification.tipper_account_id)
}

// optional string tipper_name = 2;
inline bool CMsgGCToClientTipNotification::has_tipper_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGCToClientTipNotification::set_has_tipper_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGCToClientTipNotification::clear_has_tipper_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGCToClientTipNotification::clear_tipper_name() {
  tipper_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tipper_name();
}
inline const ::std::string& CMsgGCToClientTipNotification::tipper_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTipNotification.tipper_name)
  return tipper_name_.GetNoArena();
}
inline void CMsgGCToClientTipNotification::set_tipper_name(const ::std::string& value) {
  set_has_tipper_name();
  tipper_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTipNotification.tipper_name)
}
#if LANG_CXX11
inline void CMsgGCToClientTipNotification::set_tipper_name(::std::string&& value) {
  set_has_tipper_name();
  tipper_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientTipNotification.tipper_name)
}
#endif
inline void CMsgGCToClientTipNotification::set_tipper_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tipper_name();
  tipper_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientTipNotification.tipper_name)
}
inline void CMsgGCToClientTipNotification::set_tipper_name(const char* value, size_t size) {
  set_has_tipper_name();
  tipper_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientTipNotification.tipper_name)
}
inline ::std::string* CMsgGCToClientTipNotification::mutable_tipper_name() {
  set_has_tipper_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientTipNotification.tipper_name)
  return tipper_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientTipNotification::release_tipper_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientTipNotification.tipper_name)
  clear_has_tipper_name();
  return tipper_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientTipNotification::set_allocated_tipper_name(::std::string* tipper_name) {
  if (tipper_name != NULL) {
    set_has_tipper_name();
  } else {
    clear_has_tipper_name();
  }
  tipper_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tipper_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientTipNotification.tipper_name)
}

// optional uint32 recipient_account_id = 3;
inline bool CMsgGCToClientTipNotification::has_recipient_account_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgGCToClientTipNotification::set_has_recipient_account_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgGCToClientTipNotification::clear_has_recipient_account_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgGCToClientTipNotification::clear_recipient_account_id() {
  recipient_account_id_ = 0u;
  clear_has_recipient_account_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientTipNotification::recipient_account_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTipNotification.recipient_account_id)
  return recipient_account_id_;
}
inline void CMsgGCToClientTipNotification::set_recipient_account_id(::google::protobuf::uint32 value) {
  set_has_recipient_account_id();
  recipient_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTipNotification.recipient_account_id)
}

// optional string recipient_name = 4;
inline bool CMsgGCToClientTipNotification::has_recipient_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGCToClientTipNotification::set_has_recipient_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGCToClientTipNotification::clear_has_recipient_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGCToClientTipNotification::clear_recipient_name() {
  recipient_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recipient_name();
}
inline const ::std::string& CMsgGCToClientTipNotification::recipient_name() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTipNotification.recipient_name)
  return recipient_name_.GetNoArena();
}
inline void CMsgGCToClientTipNotification::set_recipient_name(const ::std::string& value) {
  set_has_recipient_name();
  recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTipNotification.recipient_name)
}
#if LANG_CXX11
inline void CMsgGCToClientTipNotification::set_recipient_name(::std::string&& value) {
  set_has_recipient_name();
  recipient_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGCToClientTipNotification.recipient_name)
}
#endif
inline void CMsgGCToClientTipNotification::set_recipient_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recipient_name();
  recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGCToClientTipNotification.recipient_name)
}
inline void CMsgGCToClientTipNotification::set_recipient_name(const char* value, size_t size) {
  set_has_recipient_name();
  recipient_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGCToClientTipNotification.recipient_name)
}
inline ::std::string* CMsgGCToClientTipNotification::mutable_recipient_name() {
  set_has_recipient_name();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGCToClientTipNotification.recipient_name)
  return recipient_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGCToClientTipNotification::release_recipient_name() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGCToClientTipNotification.recipient_name)
  clear_has_recipient_name();
  return recipient_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGCToClientTipNotification::set_allocated_recipient_name(::std::string* recipient_name) {
  if (recipient_name != NULL) {
    set_has_recipient_name();
  } else {
    clear_has_recipient_name();
  }
  recipient_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recipient_name);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGCToClientTipNotification.recipient_name)
}

// optional uint32 event_id = 5;
inline bool CMsgGCToClientTipNotification::has_event_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgGCToClientTipNotification::set_has_event_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgGCToClientTipNotification::clear_has_event_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgGCToClientTipNotification::clear_event_id() {
  event_id_ = 0u;
  clear_has_event_id();
}
inline ::google::protobuf::uint32 CMsgGCToClientTipNotification::event_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGCToClientTipNotification.event_id)
  return event_id_;
}
inline void CMsgGCToClientTipNotification::set_event_id(::google::protobuf::uint32 value) {
  set_has_event_id();
  event_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGCToClientTipNotification.event_id)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace dota
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::dota::CMsgDOTARequestMatches_SkillLevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTARequestMatches_SkillLevel>() {
  return ::proto::dota::CMsgDOTARequestMatches_SkillLevel_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTAPopup_PopupID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTAPopup_PopupID>() {
  return ::proto::dota::CMsgDOTAPopup_PopupID_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult>() {
  return ::proto::dota::CMsgDOTAFriendRecruitsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode>() {
  return ::proto::dota::CMsgDOTAClaimEventActionResponse_ResultCode_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgGCNotificationsResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGCNotificationsResponse_EResult>() {
  return ::proto::dota::CMsgGCNotificationsResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult>() {
  return ::proto::dota::CMsgGCPlayerInfoSubmitResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result>() {
  return ::proto::dota::CMsgClientToGCVoteForArcanaResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgArcanaVotes_VotingState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgArcanaVotes_VotingState>() {
  return ::proto::dota::CMsgArcanaVotes_VotingState_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTARedeemItemResponse_EResultCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTARedeemItemResponse_EResultCode>() {
  return ::proto::dota::CMsgDOTARedeemItemResponse_EResultCode_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode>() {
  return ::proto::dota::CMsgPerfectWorldUserLookupResponse_EResultCode_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult>() {
  return ::proto::dota::CMsgClientToGCSelectCompendiumInGamePredictionResponse_EResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result>() {
  return ::proto::dota::CMsgClientToGCOpenPlayerCardPackResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result>() {
  return ::proto::dota::CMsgClientToGCRecyclePlayerCardResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result>() {
  return ::proto::dota::CMsgClientToGCCreatePlayerCardPackResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgClientToGCGiveTipResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgClientToGCGiveTipResponse_Result>() {
  return ::proto::dota::CMsgClientToGCGiveTipResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result>() {
  return ::proto::dota::CMsgDOTAAnchorPhoneNumberResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result>() {
  return ::proto::dota::CMsgDOTAUnanchorPhoneNumberResponse_Result_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::DOTA_WatchReplayType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::DOTA_WatchReplayType>() {
  return ::proto::dota::DOTA_WatchReplayType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EItemEditorReservationResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EItemEditorReservationResult>() {
  return ::proto::dota::EItemEditorReservationResult_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EFeaturedHeroTextField> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EFeaturedHeroTextField>() {
  return ::proto::dota::EFeaturedHeroTextField_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EFeaturedHeroDataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EFeaturedHeroDataType>() {
  return ::proto::dota::EFeaturedHeroDataType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EWeekendTourneyRichPresenceEvent> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EWeekendTourneyRichPresenceEvent>() {
  return ::proto::dota::EWeekendTourneyRichPresenceEvent_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EDOTAEventInviteType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EDOTAEventInviteType>() {
  return ::proto::dota::EDOTAEventInviteType_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EDOTATriviaQuestionCategory> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EDOTATriviaQuestionCategory>() {
  return ::proto::dota::EDOTATriviaQuestionCategory_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EDOTATriviaAnswerResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EDOTATriviaAnswerResult>() {
  return ::proto::dota::EDOTATriviaAnswerResult_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dota_5fgcmessages_5fclient_2eproto__INCLUDED
