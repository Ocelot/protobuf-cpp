// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: c_peer2peer_netmessages.proto

#ifndef PROTOBUF_c_5fpeer2peer_5fnetmessages_2eproto__INCLUDED
#define PROTOBUF_c_5fpeer2peer_5fnetmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "netmessages.pb.h"
#include "networkbasetypes.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
namespace dota {
class CBidirMsg_RebroadcastGameEvent;
class CBidirMsg_RebroadcastGameEventDefaultTypeInternal;
extern CBidirMsg_RebroadcastGameEventDefaultTypeInternal _CBidirMsg_RebroadcastGameEvent_default_instance_;
class CBidirMsg_RebroadcastSource;
class CBidirMsg_RebroadcastSourceDefaultTypeInternal;
extern CBidirMsg_RebroadcastSourceDefaultTypeInternal _CBidirMsg_RebroadcastSource_default_instance_;
class CBidirMsg_RelayInfo;
class CBidirMsg_RelayInfoDefaultTypeInternal;
extern CBidirMsg_RelayInfoDefaultTypeInternal _CBidirMsg_RelayInfo_default_instance_;
class CBidirMsg_RelayPacket;
class CBidirMsg_RelayPacketDefaultTypeInternal;
extern CBidirMsg_RelayPacketDefaultTypeInternal _CBidirMsg_RelayPacket_default_instance_;
class CBidirMsg_RelayPacket_SignedDestinationAddress_t;
class CBidirMsg_RelayPacket_SignedDestinationAddress_tDefaultTypeInternal;
extern CBidirMsg_RelayPacket_SignedDestinationAddress_tDefaultTypeInternal _CBidirMsg_RelayPacket_SignedDestinationAddress_t_default_instance_;
class CCLCMsg_BaselineAck;
class CCLCMsg_BaselineAckDefaultTypeInternal;
extern CCLCMsg_BaselineAckDefaultTypeInternal _CCLCMsg_BaselineAck_default_instance_;
class CCLCMsg_ClientInfo;
class CCLCMsg_ClientInfoDefaultTypeInternal;
extern CCLCMsg_ClientInfoDefaultTypeInternal _CCLCMsg_ClientInfo_default_instance_;
class CCLCMsg_ClientMessage;
class CCLCMsg_ClientMessageDefaultTypeInternal;
extern CCLCMsg_ClientMessageDefaultTypeInternal _CCLCMsg_ClientMessage_default_instance_;
class CCLCMsg_CmdKeyValues;
class CCLCMsg_CmdKeyValuesDefaultTypeInternal;
extern CCLCMsg_CmdKeyValuesDefaultTypeInternal _CCLCMsg_CmdKeyValues_default_instance_;
class CCLCMsg_FileCRCCheck;
class CCLCMsg_FileCRCCheckDefaultTypeInternal;
extern CCLCMsg_FileCRCCheckDefaultTypeInternal _CCLCMsg_FileCRCCheck_default_instance_;
class CCLCMsg_ListenEvents;
class CCLCMsg_ListenEventsDefaultTypeInternal;
extern CCLCMsg_ListenEventsDefaultTypeInternal _CCLCMsg_ListenEvents_default_instance_;
class CCLCMsg_LoadingProgress;
class CCLCMsg_LoadingProgressDefaultTypeInternal;
extern CCLCMsg_LoadingProgressDefaultTypeInternal _CCLCMsg_LoadingProgress_default_instance_;
class CCLCMsg_Move;
class CCLCMsg_MoveDefaultTypeInternal;
extern CCLCMsg_MoveDefaultTypeInternal _CCLCMsg_Move_default_instance_;
class CCLCMsg_RequestPause;
class CCLCMsg_RequestPauseDefaultTypeInternal;
extern CCLCMsg_RequestPauseDefaultTypeInternal _CCLCMsg_RequestPause_default_instance_;
class CCLCMsg_RespondCvarValue;
class CCLCMsg_RespondCvarValueDefaultTypeInternal;
extern CCLCMsg_RespondCvarValueDefaultTypeInternal _CCLCMsg_RespondCvarValue_default_instance_;
class CCLCMsg_ServerPing;
class CCLCMsg_ServerPingDefaultTypeInternal;
extern CCLCMsg_ServerPingDefaultTypeInternal _CCLCMsg_ServerPing_default_instance_;
class CCLCMsg_ServerStatus;
class CCLCMsg_ServerStatusDefaultTypeInternal;
extern CCLCMsg_ServerStatusDefaultTypeInternal _CCLCMsg_ServerStatus_default_instance_;
class CCLCMsg_SplitPlayerConnect;
class CCLCMsg_SplitPlayerConnectDefaultTypeInternal;
extern CCLCMsg_SplitPlayerConnectDefaultTypeInternal _CCLCMsg_SplitPlayerConnect_default_instance_;
class CCLCMsg_SplitPlayerDisconnect;
class CCLCMsg_SplitPlayerDisconnectDefaultTypeInternal;
extern CCLCMsg_SplitPlayerDisconnectDefaultTypeInternal _CCLCMsg_SplitPlayerDisconnect_default_instance_;
class CCLCMsg_VoiceData;
class CCLCMsg_VoiceDataDefaultTypeInternal;
extern CCLCMsg_VoiceDataDefaultTypeInternal _CCLCMsg_VoiceData_default_instance_;
class CMsgIPCAddress;
class CMsgIPCAddressDefaultTypeInternal;
extern CMsgIPCAddressDefaultTypeInternal _CMsgIPCAddress_default_instance_;
class CMsgPlayerInfo;
class CMsgPlayerInfoDefaultTypeInternal;
extern CMsgPlayerInfoDefaultTypeInternal _CMsgPlayerInfo_default_instance_;
class CMsgQAngle;
class CMsgQAngleDefaultTypeInternal;
extern CMsgQAngleDefaultTypeInternal _CMsgQAngle_default_instance_;
class CMsgServerNetworkStats;
class CMsgServerNetworkStatsDefaultTypeInternal;
extern CMsgServerNetworkStatsDefaultTypeInternal _CMsgServerNetworkStats_default_instance_;
class CMsgServerNetworkStats_Player;
class CMsgServerNetworkStats_PlayerDefaultTypeInternal;
extern CMsgServerNetworkStats_PlayerDefaultTypeInternal _CMsgServerNetworkStats_Player_default_instance_;
class CMsgServerNetworkStats_Port;
class CMsgServerNetworkStats_PortDefaultTypeInternal;
extern CMsgServerNetworkStats_PortDefaultTypeInternal _CMsgServerNetworkStats_Port_default_instance_;
class CMsgServerPeer;
class CMsgServerPeerDefaultTypeInternal;
extern CMsgServerPeerDefaultTypeInternal _CMsgServerPeer_default_instance_;
class CMsgVector;
class CMsgVectorDefaultTypeInternal;
extern CMsgVectorDefaultTypeInternal _CMsgVector_default_instance_;
class CMsgVector2D;
class CMsgVector2DDefaultTypeInternal;
extern CMsgVector2DDefaultTypeInternal _CMsgVector2D_default_instance_;
class CMsgVoiceAudio;
class CMsgVoiceAudioDefaultTypeInternal;
extern CMsgVoiceAudioDefaultTypeInternal _CMsgVoiceAudio_default_instance_;
class CMsg_CVars;
class CMsg_CVarsDefaultTypeInternal;
extern CMsg_CVarsDefaultTypeInternal _CMsg_CVars_default_instance_;
class CMsg_CVars_CVar;
class CMsg_CVars_CVarDefaultTypeInternal;
extern CMsg_CVars_CVarDefaultTypeInternal _CMsg_CVars_CVar_default_instance_;
class CNETMsg_Disconnect;
class CNETMsg_DisconnectDefaultTypeInternal;
extern CNETMsg_DisconnectDefaultTypeInternal _CNETMsg_Disconnect_default_instance_;
class CNETMsg_NOP;
class CNETMsg_NOPDefaultTypeInternal;
extern CNETMsg_NOPDefaultTypeInternal _CNETMsg_NOP_default_instance_;
class CNETMsg_SetConVar;
class CNETMsg_SetConVarDefaultTypeInternal;
extern CNETMsg_SetConVarDefaultTypeInternal _CNETMsg_SetConVar_default_instance_;
class CNETMsg_SignonState;
class CNETMsg_SignonStateDefaultTypeInternal;
extern CNETMsg_SignonStateDefaultTypeInternal _CNETMsg_SignonState_default_instance_;
class CNETMsg_SpawnGroup_Load;
class CNETMsg_SpawnGroup_LoadDefaultTypeInternal;
extern CNETMsg_SpawnGroup_LoadDefaultTypeInternal _CNETMsg_SpawnGroup_Load_default_instance_;
class CNETMsg_SpawnGroup_LoadCompleted;
class CNETMsg_SpawnGroup_LoadCompletedDefaultTypeInternal;
extern CNETMsg_SpawnGroup_LoadCompletedDefaultTypeInternal _CNETMsg_SpawnGroup_LoadCompleted_default_instance_;
class CNETMsg_SpawnGroup_ManifestUpdate;
class CNETMsg_SpawnGroup_ManifestUpdateDefaultTypeInternal;
extern CNETMsg_SpawnGroup_ManifestUpdateDefaultTypeInternal _CNETMsg_SpawnGroup_ManifestUpdate_default_instance_;
class CNETMsg_SpawnGroup_SetCreationTick;
class CNETMsg_SpawnGroup_SetCreationTickDefaultTypeInternal;
extern CNETMsg_SpawnGroup_SetCreationTickDefaultTypeInternal _CNETMsg_SpawnGroup_SetCreationTick_default_instance_;
class CNETMsg_SpawnGroup_Unload;
class CNETMsg_SpawnGroup_UnloadDefaultTypeInternal;
extern CNETMsg_SpawnGroup_UnloadDefaultTypeInternal _CNETMsg_SpawnGroup_Unload_default_instance_;
class CNETMsg_SplitScreenUser;
class CNETMsg_SplitScreenUserDefaultTypeInternal;
extern CNETMsg_SplitScreenUserDefaultTypeInternal _CNETMsg_SplitScreenUser_default_instance_;
class CNETMsg_StringCmd;
class CNETMsg_StringCmdDefaultTypeInternal;
extern CNETMsg_StringCmdDefaultTypeInternal _CNETMsg_StringCmd_default_instance_;
class CNETMsg_Tick;
class CNETMsg_TickDefaultTypeInternal;
extern CNETMsg_TickDefaultTypeInternal _CNETMsg_Tick_default_instance_;
class CP2P_Ping;
class CP2P_PingDefaultTypeInternal;
extern CP2P_PingDefaultTypeInternal _CP2P_Ping_default_instance_;
class CP2P_TextMessage;
class CP2P_TextMessageDefaultTypeInternal;
extern CP2P_TextMessageDefaultTypeInternal _CP2P_TextMessage_default_instance_;
class CP2P_VRAvatarPosition;
class CP2P_VRAvatarPositionDefaultTypeInternal;
extern CP2P_VRAvatarPositionDefaultTypeInternal _CP2P_VRAvatarPosition_default_instance_;
class CP2P_VRAvatarPosition_COrientation;
class CP2P_VRAvatarPosition_COrientationDefaultTypeInternal;
extern CP2P_VRAvatarPosition_COrientationDefaultTypeInternal _CP2P_VRAvatarPosition_COrientation_default_instance_;
class CP2P_Voice;
class CP2P_VoiceDefaultTypeInternal;
extern CP2P_VoiceDefaultTypeInternal _CP2P_Voice_default_instance_;
class CP2P_WatchSynchronization;
class CP2P_WatchSynchronizationDefaultTypeInternal;
extern CP2P_WatchSynchronizationDefaultTypeInternal _CP2P_WatchSynchronization_default_instance_;
class CSVCMsgList_GameEvents;
class CSVCMsgList_GameEventsDefaultTypeInternal;
extern CSVCMsgList_GameEventsDefaultTypeInternal _CSVCMsgList_GameEvents_default_instance_;
class CSVCMsgList_GameEvents_event_t;
class CSVCMsgList_GameEvents_event_tDefaultTypeInternal;
extern CSVCMsgList_GameEvents_event_tDefaultTypeInternal _CSVCMsgList_GameEvents_event_t_default_instance_;
class CSVCMsgList_UserMessages;
class CSVCMsgList_UserMessagesDefaultTypeInternal;
extern CSVCMsgList_UserMessagesDefaultTypeInternal _CSVCMsgList_UserMessages_default_instance_;
class CSVCMsgList_UserMessages_usermsg_t;
class CSVCMsgList_UserMessages_usermsg_tDefaultTypeInternal;
extern CSVCMsgList_UserMessages_usermsg_tDefaultTypeInternal _CSVCMsgList_UserMessages_usermsg_t_default_instance_;
class CSVCMsg_BSPDecal;
class CSVCMsg_BSPDecalDefaultTypeInternal;
extern CSVCMsg_BSPDecalDefaultTypeInternal _CSVCMsg_BSPDecal_default_instance_;
class CSVCMsg_ClassInfo;
class CSVCMsg_ClassInfoDefaultTypeInternal;
extern CSVCMsg_ClassInfoDefaultTypeInternal _CSVCMsg_ClassInfo_default_instance_;
class CSVCMsg_ClassInfo_class_t;
class CSVCMsg_ClassInfo_class_tDefaultTypeInternal;
extern CSVCMsg_ClassInfo_class_tDefaultTypeInternal _CSVCMsg_ClassInfo_class_t_default_instance_;
class CSVCMsg_ClearAllStringTables;
class CSVCMsg_ClearAllStringTablesDefaultTypeInternal;
extern CSVCMsg_ClearAllStringTablesDefaultTypeInternal _CSVCMsg_ClearAllStringTables_default_instance_;
class CSVCMsg_CmdKeyValues;
class CSVCMsg_CmdKeyValuesDefaultTypeInternal;
extern CSVCMsg_CmdKeyValuesDefaultTypeInternal _CSVCMsg_CmdKeyValues_default_instance_;
class CSVCMsg_CreateStringTable;
class CSVCMsg_CreateStringTableDefaultTypeInternal;
extern CSVCMsg_CreateStringTableDefaultTypeInternal _CSVCMsg_CreateStringTable_default_instance_;
class CSVCMsg_CrosshairAngle;
class CSVCMsg_CrosshairAngleDefaultTypeInternal;
extern CSVCMsg_CrosshairAngleDefaultTypeInternal _CSVCMsg_CrosshairAngle_default_instance_;
class CSVCMsg_FixAngle;
class CSVCMsg_FixAngleDefaultTypeInternal;
extern CSVCMsg_FixAngleDefaultTypeInternal _CSVCMsg_FixAngle_default_instance_;
class CSVCMsg_FlattenedSerializer;
class CSVCMsg_FlattenedSerializerDefaultTypeInternal;
extern CSVCMsg_FlattenedSerializerDefaultTypeInternal _CSVCMsg_FlattenedSerializer_default_instance_;
class CSVCMsg_FullFrameSplit;
class CSVCMsg_FullFrameSplitDefaultTypeInternal;
extern CSVCMsg_FullFrameSplitDefaultTypeInternal _CSVCMsg_FullFrameSplit_default_instance_;
class CSVCMsg_GameEvent;
class CSVCMsg_GameEventDefaultTypeInternal;
extern CSVCMsg_GameEventDefaultTypeInternal _CSVCMsg_GameEvent_default_instance_;
class CSVCMsg_GameEventList;
class CSVCMsg_GameEventListDefaultTypeInternal;
extern CSVCMsg_GameEventListDefaultTypeInternal _CSVCMsg_GameEventList_default_instance_;
class CSVCMsg_GameEventList_descriptor_t;
class CSVCMsg_GameEventList_descriptor_tDefaultTypeInternal;
extern CSVCMsg_GameEventList_descriptor_tDefaultTypeInternal _CSVCMsg_GameEventList_descriptor_t_default_instance_;
class CSVCMsg_GameEventList_key_t;
class CSVCMsg_GameEventList_key_tDefaultTypeInternal;
extern CSVCMsg_GameEventList_key_tDefaultTypeInternal _CSVCMsg_GameEventList_key_t_default_instance_;
class CSVCMsg_GameEvent_key_t;
class CSVCMsg_GameEvent_key_tDefaultTypeInternal;
extern CSVCMsg_GameEvent_key_tDefaultTypeInternal _CSVCMsg_GameEvent_key_t_default_instance_;
class CSVCMsg_GameSessionConfiguration;
class CSVCMsg_GameSessionConfigurationDefaultTypeInternal;
extern CSVCMsg_GameSessionConfigurationDefaultTypeInternal _CSVCMsg_GameSessionConfiguration_default_instance_;
class CSVCMsg_GetCvarValue;
class CSVCMsg_GetCvarValueDefaultTypeInternal;
extern CSVCMsg_GetCvarValueDefaultTypeInternal _CSVCMsg_GetCvarValue_default_instance_;
class CSVCMsg_HLTVStatus;
class CSVCMsg_HLTVStatusDefaultTypeInternal;
extern CSVCMsg_HLTVStatusDefaultTypeInternal _CSVCMsg_HLTVStatus_default_instance_;
class CSVCMsg_Menu;
class CSVCMsg_MenuDefaultTypeInternal;
extern CSVCMsg_MenuDefaultTypeInternal _CSVCMsg_Menu_default_instance_;
class CSVCMsg_PacketEntities;
class CSVCMsg_PacketEntitiesDefaultTypeInternal;
extern CSVCMsg_PacketEntitiesDefaultTypeInternal _CSVCMsg_PacketEntities_default_instance_;
class CSVCMsg_PacketReliable;
class CSVCMsg_PacketReliableDefaultTypeInternal;
extern CSVCMsg_PacketReliableDefaultTypeInternal _CSVCMsg_PacketReliable_default_instance_;
class CSVCMsg_PeerList;
class CSVCMsg_PeerListDefaultTypeInternal;
extern CSVCMsg_PeerListDefaultTypeInternal _CSVCMsg_PeerList_default_instance_;
class CSVCMsg_Prefetch;
class CSVCMsg_PrefetchDefaultTypeInternal;
extern CSVCMsg_PrefetchDefaultTypeInternal _CSVCMsg_Prefetch_default_instance_;
class CSVCMsg_Print;
class CSVCMsg_PrintDefaultTypeInternal;
extern CSVCMsg_PrintDefaultTypeInternal _CSVCMsg_Print_default_instance_;
class CSVCMsg_SendTable;
class CSVCMsg_SendTableDefaultTypeInternal;
extern CSVCMsg_SendTableDefaultTypeInternal _CSVCMsg_SendTable_default_instance_;
class CSVCMsg_SendTable_sendprop_t;
class CSVCMsg_SendTable_sendprop_tDefaultTypeInternal;
extern CSVCMsg_SendTable_sendprop_tDefaultTypeInternal _CSVCMsg_SendTable_sendprop_t_default_instance_;
class CSVCMsg_ServerInfo;
class CSVCMsg_ServerInfoDefaultTypeInternal;
extern CSVCMsg_ServerInfoDefaultTypeInternal _CSVCMsg_ServerInfo_default_instance_;
class CSVCMsg_ServerSteamID;
class CSVCMsg_ServerSteamIDDefaultTypeInternal;
extern CSVCMsg_ServerSteamIDDefaultTypeInternal _CSVCMsg_ServerSteamID_default_instance_;
class CSVCMsg_SetPause;
class CSVCMsg_SetPauseDefaultTypeInternal;
extern CSVCMsg_SetPauseDefaultTypeInternal _CSVCMsg_SetPause_default_instance_;
class CSVCMsg_SetView;
class CSVCMsg_SetViewDefaultTypeInternal;
extern CSVCMsg_SetViewDefaultTypeInternal _CSVCMsg_SetView_default_instance_;
class CSVCMsg_Sounds;
class CSVCMsg_SoundsDefaultTypeInternal;
extern CSVCMsg_SoundsDefaultTypeInternal _CSVCMsg_Sounds_default_instance_;
class CSVCMsg_Sounds_sounddata_t;
class CSVCMsg_Sounds_sounddata_tDefaultTypeInternal;
extern CSVCMsg_Sounds_sounddata_tDefaultTypeInternal _CSVCMsg_Sounds_sounddata_t_default_instance_;
class CSVCMsg_SplitScreen;
class CSVCMsg_SplitScreenDefaultTypeInternal;
extern CSVCMsg_SplitScreenDefaultTypeInternal _CSVCMsg_SplitScreen_default_instance_;
class CSVCMsg_StopSound;
class CSVCMsg_StopSoundDefaultTypeInternal;
extern CSVCMsg_StopSoundDefaultTypeInternal _CSVCMsg_StopSound_default_instance_;
class CSVCMsg_TempEntities;
class CSVCMsg_TempEntitiesDefaultTypeInternal;
extern CSVCMsg_TempEntitiesDefaultTypeInternal _CSVCMsg_TempEntities_default_instance_;
class CSVCMsg_UpdateStringTable;
class CSVCMsg_UpdateStringTableDefaultTypeInternal;
extern CSVCMsg_UpdateStringTableDefaultTypeInternal _CSVCMsg_UpdateStringTable_default_instance_;
class CSVCMsg_UserMessage;
class CSVCMsg_UserMessageDefaultTypeInternal;
extern CSVCMsg_UserMessageDefaultTypeInternal _CSVCMsg_UserMessage_default_instance_;
class CSVCMsg_VoiceData;
class CSVCMsg_VoiceDataDefaultTypeInternal;
extern CSVCMsg_VoiceDataDefaultTypeInternal _CSVCMsg_VoiceData_default_instance_;
class CSVCMsg_VoiceInit;
class CSVCMsg_VoiceInitDefaultTypeInternal;
extern CSVCMsg_VoiceInitDefaultTypeInternal _CSVCMsg_VoiceInit_default_instance_;
class CSteam_Voice_Encoding;
class CSteam_Voice_EncodingDefaultTypeInternal;
extern CSteam_Voice_EncodingDefaultTypeInternal _CSteam_Voice_Encoding_default_instance_;
class ProtoFlattenedSerializerField_t;
class ProtoFlattenedSerializerField_tDefaultTypeInternal;
extern ProtoFlattenedSerializerField_tDefaultTypeInternal _ProtoFlattenedSerializerField_t_default_instance_;
class ProtoFlattenedSerializer_t;
class ProtoFlattenedSerializer_tDefaultTypeInternal;
extern ProtoFlattenedSerializer_tDefaultTypeInternal _ProtoFlattenedSerializer_t_default_instance_;
class SerializedNetAddress_t;
class SerializedNetAddress_tDefaultTypeInternal;
extern SerializedNetAddress_tDefaultTypeInternal _SerializedNetAddress_t_default_instance_;
class SignedPayload_t;
class SignedPayload_tDefaultTypeInternal;
extern SignedPayload_tDefaultTypeInternal _SignedPayload_t_default_instance_;
}  // namespace dota
}  // namespace proto

namespace proto {
namespace dota {

namespace protobuf_c_5fpeer2peer_5fnetmessages_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_c_5fpeer2peer_5fnetmessages_2eproto

enum CP2P_Voice_Handler_Flags {
  CP2P_Voice_Handler_Flags_Played_Audio = 1
};
bool CP2P_Voice_Handler_Flags_IsValid(int value);
const CP2P_Voice_Handler_Flags CP2P_Voice_Handler_Flags_Handler_Flags_MIN = CP2P_Voice_Handler_Flags_Played_Audio;
const CP2P_Voice_Handler_Flags CP2P_Voice_Handler_Flags_Handler_Flags_MAX = CP2P_Voice_Handler_Flags_Played_Audio;
const int CP2P_Voice_Handler_Flags_Handler_Flags_ARRAYSIZE = CP2P_Voice_Handler_Flags_Handler_Flags_MAX + 1;

const ::google::protobuf::EnumDescriptor* CP2P_Voice_Handler_Flags_descriptor();
inline const ::std::string& CP2P_Voice_Handler_Flags_Name(CP2P_Voice_Handler_Flags value) {
  return ::google::protobuf::internal::NameOfEnum(
    CP2P_Voice_Handler_Flags_descriptor(), value);
}
inline bool CP2P_Voice_Handler_Flags_Parse(
    const ::std::string& name, CP2P_Voice_Handler_Flags* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CP2P_Voice_Handler_Flags>(
    CP2P_Voice_Handler_Flags_descriptor(), name, value);
}
enum P2P_Messages {
  p2p_TextMessage = 256,
  p2p_Voice = 257,
  p2p_Ping = 258,
  p2p_VRAvatarPosition = 259,
  p2p_WatchSynchronization = 260
};
bool P2P_Messages_IsValid(int value);
const P2P_Messages P2P_Messages_MIN = p2p_TextMessage;
const P2P_Messages P2P_Messages_MAX = p2p_WatchSynchronization;
const int P2P_Messages_ARRAYSIZE = P2P_Messages_MAX + 1;

const ::google::protobuf::EnumDescriptor* P2P_Messages_descriptor();
inline const ::std::string& P2P_Messages_Name(P2P_Messages value) {
  return ::google::protobuf::internal::NameOfEnum(
    P2P_Messages_descriptor(), value);
}
inline bool P2P_Messages_Parse(
    const ::std::string& name, P2P_Messages* value) {
  return ::google::protobuf::internal::ParseNamedEnum<P2P_Messages>(
    P2P_Messages_descriptor(), name, value);
}
// ===================================================================

class CP2P_TextMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CP2P_TextMessage) */ {
 public:
  CP2P_TextMessage();
  virtual ~CP2P_TextMessage();

  CP2P_TextMessage(const CP2P_TextMessage& from);

  inline CP2P_TextMessage& operator=(const CP2P_TextMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CP2P_TextMessage& default_instance();

  static inline const CP2P_TextMessage* internal_default_instance() {
    return reinterpret_cast<const CP2P_TextMessage*>(
               &_CP2P_TextMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CP2P_TextMessage* other);

  // implements Message ----------------------------------------------

  inline CP2P_TextMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  CP2P_TextMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CP2P_TextMessage& from);
  void MergeFrom(const CP2P_TextMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CP2P_TextMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes text = 1;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 1;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const void* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // @@protoc_insertion_point(class_scope:proto.dota.CP2P_TextMessage)
 private:
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  friend struct protobuf_c_5fpeer2peer_5fnetmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CSteam_Voice_Encoding : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CSteam_Voice_Encoding) */ {
 public:
  CSteam_Voice_Encoding();
  virtual ~CSteam_Voice_Encoding();

  CSteam_Voice_Encoding(const CSteam_Voice_Encoding& from);

  inline CSteam_Voice_Encoding& operator=(const CSteam_Voice_Encoding& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CSteam_Voice_Encoding& default_instance();

  static inline const CSteam_Voice_Encoding* internal_default_instance() {
    return reinterpret_cast<const CSteam_Voice_Encoding*>(
               &_CSteam_Voice_Encoding_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CSteam_Voice_Encoding* other);

  // implements Message ----------------------------------------------

  inline CSteam_Voice_Encoding* New() const PROTOBUF_FINAL { return New(NULL); }

  CSteam_Voice_Encoding* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CSteam_Voice_Encoding& from);
  void MergeFrom(const CSteam_Voice_Encoding& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CSteam_Voice_Encoding* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes voice_data = 1;
  bool has_voice_data() const;
  void clear_voice_data();
  static const int kVoiceDataFieldNumber = 1;
  const ::std::string& voice_data() const;
  void set_voice_data(const ::std::string& value);
  #if LANG_CXX11
  void set_voice_data(::std::string&& value);
  #endif
  void set_voice_data(const char* value);
  void set_voice_data(const void* value, size_t size);
  ::std::string* mutable_voice_data();
  ::std::string* release_voice_data();
  void set_allocated_voice_data(::std::string* voice_data);

  // @@protoc_insertion_point(class_scope:proto.dota.CSteam_Voice_Encoding)
 private:
  void set_has_voice_data();
  void clear_has_voice_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr voice_data_;
  friend struct protobuf_c_5fpeer2peer_5fnetmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CP2P_Voice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CP2P_Voice) */ {
 public:
  CP2P_Voice();
  virtual ~CP2P_Voice();

  CP2P_Voice(const CP2P_Voice& from);

  inline CP2P_Voice& operator=(const CP2P_Voice& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CP2P_Voice& default_instance();

  static inline const CP2P_Voice* internal_default_instance() {
    return reinterpret_cast<const CP2P_Voice*>(
               &_CP2P_Voice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CP2P_Voice* other);

  // implements Message ----------------------------------------------

  inline CP2P_Voice* New() const PROTOBUF_FINAL { return New(NULL); }

  CP2P_Voice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CP2P_Voice& from);
  void MergeFrom(const CP2P_Voice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CP2P_Voice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CP2P_Voice_Handler_Flags Handler_Flags;
  static const Handler_Flags Played_Audio =
    CP2P_Voice_Handler_Flags_Played_Audio;
  static inline bool Handler_Flags_IsValid(int value) {
    return CP2P_Voice_Handler_Flags_IsValid(value);
  }
  static const Handler_Flags Handler_Flags_MIN =
    CP2P_Voice_Handler_Flags_Handler_Flags_MIN;
  static const Handler_Flags Handler_Flags_MAX =
    CP2P_Voice_Handler_Flags_Handler_Flags_MAX;
  static const int Handler_Flags_ARRAYSIZE =
    CP2P_Voice_Handler_Flags_Handler_Flags_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Handler_Flags_descriptor() {
    return CP2P_Voice_Handler_Flags_descriptor();
  }
  static inline const ::std::string& Handler_Flags_Name(Handler_Flags value) {
    return CP2P_Voice_Handler_Flags_Name(value);
  }
  static inline bool Handler_Flags_Parse(const ::std::string& name,
      Handler_Flags* value) {
    return CP2P_Voice_Handler_Flags_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVoiceAudio audio = 1;
  bool has_audio() const;
  void clear_audio();
  static const int kAudioFieldNumber = 1;
  const ::proto::dota::CMsgVoiceAudio& audio() const;
  ::proto::dota::CMsgVoiceAudio* mutable_audio();
  ::proto::dota::CMsgVoiceAudio* release_audio();
  void set_allocated_audio(::proto::dota::CMsgVoiceAudio* audio);

  // optional uint32 broadcast_group = 2;
  bool has_broadcast_group() const;
  void clear_broadcast_group();
  static const int kBroadcastGroupFieldNumber = 2;
  ::google::protobuf::uint32 broadcast_group() const;
  void set_broadcast_group(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CP2P_Voice)
 private:
  void set_has_audio();
  void clear_has_audio();
  void set_has_broadcast_group();
  void clear_has_broadcast_group();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVoiceAudio* audio_;
  ::google::protobuf::uint32 broadcast_group_;
  friend struct protobuf_c_5fpeer2peer_5fnetmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CP2P_Ping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CP2P_Ping) */ {
 public:
  CP2P_Ping();
  virtual ~CP2P_Ping();

  CP2P_Ping(const CP2P_Ping& from);

  inline CP2P_Ping& operator=(const CP2P_Ping& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CP2P_Ping& default_instance();

  static inline const CP2P_Ping* internal_default_instance() {
    return reinterpret_cast<const CP2P_Ping*>(
               &_CP2P_Ping_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CP2P_Ping* other);

  // implements Message ----------------------------------------------

  inline CP2P_Ping* New() const PROTOBUF_FINAL { return New(NULL); }

  CP2P_Ping* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CP2P_Ping& from);
  void MergeFrom(const CP2P_Ping& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CP2P_Ping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 send_time = 1;
  bool has_send_time() const;
  void clear_send_time();
  static const int kSendTimeFieldNumber = 1;
  ::google::protobuf::uint64 send_time() const;
  void set_send_time(::google::protobuf::uint64 value);

  // required bool is_reply = 2;
  bool has_is_reply() const;
  void clear_is_reply();
  static const int kIsReplyFieldNumber = 2;
  bool is_reply() const;
  void set_is_reply(bool value);

  // @@protoc_insertion_point(class_scope:proto.dota.CP2P_Ping)
 private:
  void set_has_send_time();
  void clear_has_send_time();
  void set_has_is_reply();
  void clear_has_is_reply();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 send_time_;
  bool is_reply_;
  friend struct protobuf_c_5fpeer2peer_5fnetmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CP2P_VRAvatarPosition_COrientation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CP2P_VRAvatarPosition.COrientation) */ {
 public:
  CP2P_VRAvatarPosition_COrientation();
  virtual ~CP2P_VRAvatarPosition_COrientation();

  CP2P_VRAvatarPosition_COrientation(const CP2P_VRAvatarPosition_COrientation& from);

  inline CP2P_VRAvatarPosition_COrientation& operator=(const CP2P_VRAvatarPosition_COrientation& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CP2P_VRAvatarPosition_COrientation& default_instance();

  static inline const CP2P_VRAvatarPosition_COrientation* internal_default_instance() {
    return reinterpret_cast<const CP2P_VRAvatarPosition_COrientation*>(
               &_CP2P_VRAvatarPosition_COrientation_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CP2P_VRAvatarPosition_COrientation* other);

  // implements Message ----------------------------------------------

  inline CP2P_VRAvatarPosition_COrientation* New() const PROTOBUF_FINAL { return New(NULL); }

  CP2P_VRAvatarPosition_COrientation* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CP2P_VRAvatarPosition_COrientation& from);
  void MergeFrom(const CP2P_VRAvatarPosition_COrientation& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CP2P_VRAvatarPosition_COrientation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.dota.CMsgVector pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  const ::proto::dota::CMsgVector& pos() const;
  ::proto::dota::CMsgVector* mutable_pos();
  ::proto::dota::CMsgVector* release_pos();
  void set_allocated_pos(::proto::dota::CMsgVector* pos);

  // optional .proto.dota.CMsgQAngle ang = 2;
  bool has_ang() const;
  void clear_ang();
  static const int kAngFieldNumber = 2;
  const ::proto::dota::CMsgQAngle& ang() const;
  ::proto::dota::CMsgQAngle* mutable_ang();
  ::proto::dota::CMsgQAngle* release_ang();
  void set_allocated_ang(::proto::dota::CMsgQAngle* ang);

  // @@protoc_insertion_point(class_scope:proto.dota.CP2P_VRAvatarPosition.COrientation)
 private:
  void set_has_pos();
  void clear_has_pos();
  void set_has_ang();
  void clear_has_ang();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::dota::CMsgVector* pos_;
  ::proto::dota::CMsgQAngle* ang_;
  friend struct protobuf_c_5fpeer2peer_5fnetmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CP2P_VRAvatarPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CP2P_VRAvatarPosition) */ {
 public:
  CP2P_VRAvatarPosition();
  virtual ~CP2P_VRAvatarPosition();

  CP2P_VRAvatarPosition(const CP2P_VRAvatarPosition& from);

  inline CP2P_VRAvatarPosition& operator=(const CP2P_VRAvatarPosition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CP2P_VRAvatarPosition& default_instance();

  static inline const CP2P_VRAvatarPosition* internal_default_instance() {
    return reinterpret_cast<const CP2P_VRAvatarPosition*>(
               &_CP2P_VRAvatarPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CP2P_VRAvatarPosition* other);

  // implements Message ----------------------------------------------

  inline CP2P_VRAvatarPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  CP2P_VRAvatarPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CP2P_VRAvatarPosition& from);
  void MergeFrom(const CP2P_VRAvatarPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CP2P_VRAvatarPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CP2P_VRAvatarPosition_COrientation COrientation;

  // accessors -------------------------------------------------------

  // repeated .proto.dota.CP2P_VRAvatarPosition.COrientation body_parts = 1;
  int body_parts_size() const;
  void clear_body_parts();
  static const int kBodyPartsFieldNumber = 1;
  const ::proto::dota::CP2P_VRAvatarPosition_COrientation& body_parts(int index) const;
  ::proto::dota::CP2P_VRAvatarPosition_COrientation* mutable_body_parts(int index);
  ::proto::dota::CP2P_VRAvatarPosition_COrientation* add_body_parts();
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CP2P_VRAvatarPosition_COrientation >*
      mutable_body_parts();
  const ::google::protobuf::RepeatedPtrField< ::proto::dota::CP2P_VRAvatarPosition_COrientation >&
      body_parts() const;

  // optional int32 hat_id = 2;
  bool has_hat_id() const;
  void clear_hat_id();
  static const int kHatIdFieldNumber = 2;
  ::google::protobuf::int32 hat_id() const;
  void set_hat_id(::google::protobuf::int32 value);

  // optional int32 scene_id = 3;
  bool has_scene_id() const;
  void clear_scene_id();
  static const int kSceneIdFieldNumber = 3;
  ::google::protobuf::int32 scene_id() const;
  void set_scene_id(::google::protobuf::int32 value);

  // optional int32 world_scale = 4;
  bool has_world_scale() const;
  void clear_world_scale();
  static const int kWorldScaleFieldNumber = 4;
  ::google::protobuf::int32 world_scale() const;
  void set_world_scale(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CP2P_VRAvatarPosition)
 private:
  void set_has_hat_id();
  void clear_has_hat_id();
  void set_has_scene_id();
  void clear_has_scene_id();
  void set_has_world_scale();
  void clear_has_world_scale();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::dota::CP2P_VRAvatarPosition_COrientation > body_parts_;
  ::google::protobuf::int32 hat_id_;
  ::google::protobuf::int32 scene_id_;
  ::google::protobuf::int32 world_scale_;
  friend struct protobuf_c_5fpeer2peer_5fnetmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CP2P_WatchSynchronization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CP2P_WatchSynchronization) */ {
 public:
  CP2P_WatchSynchronization();
  virtual ~CP2P_WatchSynchronization();

  CP2P_WatchSynchronization(const CP2P_WatchSynchronization& from);

  inline CP2P_WatchSynchronization& operator=(const CP2P_WatchSynchronization& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CP2P_WatchSynchronization& default_instance();

  static inline const CP2P_WatchSynchronization* internal_default_instance() {
    return reinterpret_cast<const CP2P_WatchSynchronization*>(
               &_CP2P_WatchSynchronization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CP2P_WatchSynchronization* other);

  // implements Message ----------------------------------------------

  inline CP2P_WatchSynchronization* New() const PROTOBUF_FINAL { return New(NULL); }

  CP2P_WatchSynchronization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CP2P_WatchSynchronization& from);
  void MergeFrom(const CP2P_WatchSynchronization& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CP2P_WatchSynchronization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 demo_tick = 1;
  bool has_demo_tick() const;
  void clear_demo_tick();
  static const int kDemoTickFieldNumber = 1;
  ::google::protobuf::int32 demo_tick() const;
  void set_demo_tick(::google::protobuf::int32 value);

  // optional bool paused = 2;
  bool has_paused() const;
  void clear_paused();
  static const int kPausedFieldNumber = 2;
  bool paused() const;
  void set_paused(bool value);

  // optional int32 tv_listen_voice_indices = 3;
  bool has_tv_listen_voice_indices() const;
  void clear_tv_listen_voice_indices();
  static const int kTvListenVoiceIndicesFieldNumber = 3;
  ::google::protobuf::int32 tv_listen_voice_indices() const;
  void set_tv_listen_voice_indices(::google::protobuf::int32 value);

  // optional int32 dota_spectator_mode = 4;
  bool has_dota_spectator_mode() const;
  void clear_dota_spectator_mode();
  static const int kDotaSpectatorModeFieldNumber = 4;
  ::google::protobuf::int32 dota_spectator_mode() const;
  void set_dota_spectator_mode(::google::protobuf::int32 value);

  // optional int32 dota_spectator_watching_broadcaster = 5;
  bool has_dota_spectator_watching_broadcaster() const;
  void clear_dota_spectator_watching_broadcaster();
  static const int kDotaSpectatorWatchingBroadcasterFieldNumber = 5;
  ::google::protobuf::int32 dota_spectator_watching_broadcaster() const;
  void set_dota_spectator_watching_broadcaster(::google::protobuf::int32 value);

  // optional int32 dota_spectator_hero_index = 6;
  bool has_dota_spectator_hero_index() const;
  void clear_dota_spectator_hero_index();
  static const int kDotaSpectatorHeroIndexFieldNumber = 6;
  ::google::protobuf::int32 dota_spectator_hero_index() const;
  void set_dota_spectator_hero_index(::google::protobuf::int32 value);

  // optional int32 dota_spectator_autospeed = 7;
  bool has_dota_spectator_autospeed() const;
  void clear_dota_spectator_autospeed();
  static const int kDotaSpectatorAutospeedFieldNumber = 7;
  ::google::protobuf::int32 dota_spectator_autospeed() const;
  void set_dota_spectator_autospeed(::google::protobuf::int32 value);

  // optional int32 dota_replay_speed = 8;
  bool has_dota_replay_speed() const;
  void clear_dota_replay_speed();
  static const int kDotaReplaySpeedFieldNumber = 8;
  ::google::protobuf::int32 dota_replay_speed() const;
  void set_dota_replay_speed(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CP2P_WatchSynchronization)
 private:
  void set_has_demo_tick();
  void clear_has_demo_tick();
  void set_has_paused();
  void clear_has_paused();
  void set_has_tv_listen_voice_indices();
  void clear_has_tv_listen_voice_indices();
  void set_has_dota_spectator_mode();
  void clear_has_dota_spectator_mode();
  void set_has_dota_spectator_watching_broadcaster();
  void clear_has_dota_spectator_watching_broadcaster();
  void set_has_dota_spectator_hero_index();
  void clear_has_dota_spectator_hero_index();
  void set_has_dota_spectator_autospeed();
  void clear_has_dota_spectator_autospeed();
  void set_has_dota_replay_speed();
  void clear_has_dota_replay_speed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 demo_tick_;
  bool paused_;
  ::google::protobuf::int32 tv_listen_voice_indices_;
  ::google::protobuf::int32 dota_spectator_mode_;
  ::google::protobuf::int32 dota_spectator_watching_broadcaster_;
  ::google::protobuf::int32 dota_spectator_hero_index_;
  ::google::protobuf::int32 dota_spectator_autospeed_;
  ::google::protobuf::int32 dota_replay_speed_;
  friend struct protobuf_c_5fpeer2peer_5fnetmessages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CP2P_TextMessage

// optional bytes text = 1;
inline bool CP2P_TextMessage::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CP2P_TextMessage::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CP2P_TextMessage::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CP2P_TextMessage::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CP2P_TextMessage::text() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_TextMessage.text)
  return text_.GetNoArena();
}
inline void CP2P_TextMessage::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_TextMessage.text)
}
#if LANG_CXX11
inline void CP2P_TextMessage::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CP2P_TextMessage.text)
}
#endif
inline void CP2P_TextMessage::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CP2P_TextMessage.text)
}
inline void CP2P_TextMessage::set_text(const void* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CP2P_TextMessage.text)
}
inline ::std::string* CP2P_TextMessage::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:proto.dota.CP2P_TextMessage.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CP2P_TextMessage::release_text() {
  // @@protoc_insertion_point(field_release:proto.dota.CP2P_TextMessage.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CP2P_TextMessage::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CP2P_TextMessage.text)
}

// -------------------------------------------------------------------

// CSteam_Voice_Encoding

// optional bytes voice_data = 1;
inline bool CSteam_Voice_Encoding::has_voice_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CSteam_Voice_Encoding::set_has_voice_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CSteam_Voice_Encoding::clear_has_voice_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CSteam_Voice_Encoding::clear_voice_data() {
  voice_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voice_data();
}
inline const ::std::string& CSteam_Voice_Encoding::voice_data() const {
  // @@protoc_insertion_point(field_get:proto.dota.CSteam_Voice_Encoding.voice_data)
  return voice_data_.GetNoArena();
}
inline void CSteam_Voice_Encoding::set_voice_data(const ::std::string& value) {
  set_has_voice_data();
  voice_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CSteam_Voice_Encoding.voice_data)
}
#if LANG_CXX11
inline void CSteam_Voice_Encoding::set_voice_data(::std::string&& value) {
  set_has_voice_data();
  voice_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CSteam_Voice_Encoding.voice_data)
}
#endif
inline void CSteam_Voice_Encoding::set_voice_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_voice_data();
  voice_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CSteam_Voice_Encoding.voice_data)
}
inline void CSteam_Voice_Encoding::set_voice_data(const void* value, size_t size) {
  set_has_voice_data();
  voice_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CSteam_Voice_Encoding.voice_data)
}
inline ::std::string* CSteam_Voice_Encoding::mutable_voice_data() {
  set_has_voice_data();
  // @@protoc_insertion_point(field_mutable:proto.dota.CSteam_Voice_Encoding.voice_data)
  return voice_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CSteam_Voice_Encoding::release_voice_data() {
  // @@protoc_insertion_point(field_release:proto.dota.CSteam_Voice_Encoding.voice_data)
  clear_has_voice_data();
  return voice_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CSteam_Voice_Encoding::set_allocated_voice_data(::std::string* voice_data) {
  if (voice_data != NULL) {
    set_has_voice_data();
  } else {
    clear_has_voice_data();
  }
  voice_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice_data);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CSteam_Voice_Encoding.voice_data)
}

// -------------------------------------------------------------------

// CP2P_Voice

// optional .proto.dota.CMsgVoiceAudio audio = 1;
inline bool CP2P_Voice::has_audio() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CP2P_Voice::set_has_audio() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CP2P_Voice::clear_has_audio() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CP2P_Voice::clear_audio() {
  if (audio_ != NULL) audio_->::proto::dota::CMsgVoiceAudio::Clear();
  clear_has_audio();
}
inline const ::proto::dota::CMsgVoiceAudio& CP2P_Voice::audio() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_Voice.audio)
  return audio_ != NULL ? *audio_
                         : *::proto::dota::CMsgVoiceAudio::internal_default_instance();
}
inline ::proto::dota::CMsgVoiceAudio* CP2P_Voice::mutable_audio() {
  set_has_audio();
  if (audio_ == NULL) {
    audio_ = new ::proto::dota::CMsgVoiceAudio;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CP2P_Voice.audio)
  return audio_;
}
inline ::proto::dota::CMsgVoiceAudio* CP2P_Voice::release_audio() {
  // @@protoc_insertion_point(field_release:proto.dota.CP2P_Voice.audio)
  clear_has_audio();
  ::proto::dota::CMsgVoiceAudio* temp = audio_;
  audio_ = NULL;
  return temp;
}
inline void CP2P_Voice::set_allocated_audio(::proto::dota::CMsgVoiceAudio* audio) {
  delete audio_;
  audio_ = audio;
  if (audio) {
    set_has_audio();
  } else {
    clear_has_audio();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CP2P_Voice.audio)
}

// optional uint32 broadcast_group = 2;
inline bool CP2P_Voice::has_broadcast_group() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CP2P_Voice::set_has_broadcast_group() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CP2P_Voice::clear_has_broadcast_group() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CP2P_Voice::clear_broadcast_group() {
  broadcast_group_ = 0u;
  clear_has_broadcast_group();
}
inline ::google::protobuf::uint32 CP2P_Voice::broadcast_group() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_Voice.broadcast_group)
  return broadcast_group_;
}
inline void CP2P_Voice::set_broadcast_group(::google::protobuf::uint32 value) {
  set_has_broadcast_group();
  broadcast_group_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_Voice.broadcast_group)
}

// -------------------------------------------------------------------

// CP2P_Ping

// required uint64 send_time = 1;
inline bool CP2P_Ping::has_send_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CP2P_Ping::set_has_send_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CP2P_Ping::clear_has_send_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CP2P_Ping::clear_send_time() {
  send_time_ = GOOGLE_ULONGLONG(0);
  clear_has_send_time();
}
inline ::google::protobuf::uint64 CP2P_Ping::send_time() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_Ping.send_time)
  return send_time_;
}
inline void CP2P_Ping::set_send_time(::google::protobuf::uint64 value) {
  set_has_send_time();
  send_time_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_Ping.send_time)
}

// required bool is_reply = 2;
inline bool CP2P_Ping::has_is_reply() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CP2P_Ping::set_has_is_reply() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CP2P_Ping::clear_has_is_reply() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CP2P_Ping::clear_is_reply() {
  is_reply_ = false;
  clear_has_is_reply();
}
inline bool CP2P_Ping::is_reply() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_Ping.is_reply)
  return is_reply_;
}
inline void CP2P_Ping::set_is_reply(bool value) {
  set_has_is_reply();
  is_reply_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_Ping.is_reply)
}

// -------------------------------------------------------------------

// CP2P_VRAvatarPosition_COrientation

// optional .proto.dota.CMsgVector pos = 1;
inline bool CP2P_VRAvatarPosition_COrientation::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CP2P_VRAvatarPosition_COrientation::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CP2P_VRAvatarPosition_COrientation::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CP2P_VRAvatarPosition_COrientation::clear_pos() {
  if (pos_ != NULL) pos_->::proto::dota::CMsgVector::Clear();
  clear_has_pos();
}
inline const ::proto::dota::CMsgVector& CP2P_VRAvatarPosition_COrientation::pos() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_VRAvatarPosition.COrientation.pos)
  return pos_ != NULL ? *pos_
                         : *::proto::dota::CMsgVector::internal_default_instance();
}
inline ::proto::dota::CMsgVector* CP2P_VRAvatarPosition_COrientation::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::proto::dota::CMsgVector;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CP2P_VRAvatarPosition.COrientation.pos)
  return pos_;
}
inline ::proto::dota::CMsgVector* CP2P_VRAvatarPosition_COrientation::release_pos() {
  // @@protoc_insertion_point(field_release:proto.dota.CP2P_VRAvatarPosition.COrientation.pos)
  clear_has_pos();
  ::proto::dota::CMsgVector* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void CP2P_VRAvatarPosition_COrientation::set_allocated_pos(::proto::dota::CMsgVector* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CP2P_VRAvatarPosition.COrientation.pos)
}

// optional .proto.dota.CMsgQAngle ang = 2;
inline bool CP2P_VRAvatarPosition_COrientation::has_ang() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CP2P_VRAvatarPosition_COrientation::set_has_ang() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CP2P_VRAvatarPosition_COrientation::clear_has_ang() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CP2P_VRAvatarPosition_COrientation::clear_ang() {
  if (ang_ != NULL) ang_->::proto::dota::CMsgQAngle::Clear();
  clear_has_ang();
}
inline const ::proto::dota::CMsgQAngle& CP2P_VRAvatarPosition_COrientation::ang() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_VRAvatarPosition.COrientation.ang)
  return ang_ != NULL ? *ang_
                         : *::proto::dota::CMsgQAngle::internal_default_instance();
}
inline ::proto::dota::CMsgQAngle* CP2P_VRAvatarPosition_COrientation::mutable_ang() {
  set_has_ang();
  if (ang_ == NULL) {
    ang_ = new ::proto::dota::CMsgQAngle;
  }
  // @@protoc_insertion_point(field_mutable:proto.dota.CP2P_VRAvatarPosition.COrientation.ang)
  return ang_;
}
inline ::proto::dota::CMsgQAngle* CP2P_VRAvatarPosition_COrientation::release_ang() {
  // @@protoc_insertion_point(field_release:proto.dota.CP2P_VRAvatarPosition.COrientation.ang)
  clear_has_ang();
  ::proto::dota::CMsgQAngle* temp = ang_;
  ang_ = NULL;
  return temp;
}
inline void CP2P_VRAvatarPosition_COrientation::set_allocated_ang(::proto::dota::CMsgQAngle* ang) {
  delete ang_;
  ang_ = ang;
  if (ang) {
    set_has_ang();
  } else {
    clear_has_ang();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CP2P_VRAvatarPosition.COrientation.ang)
}

// -------------------------------------------------------------------

// CP2P_VRAvatarPosition

// repeated .proto.dota.CP2P_VRAvatarPosition.COrientation body_parts = 1;
inline int CP2P_VRAvatarPosition::body_parts_size() const {
  return body_parts_.size();
}
inline void CP2P_VRAvatarPosition::clear_body_parts() {
  body_parts_.Clear();
}
inline const ::proto::dota::CP2P_VRAvatarPosition_COrientation& CP2P_VRAvatarPosition::body_parts(int index) const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_VRAvatarPosition.body_parts)
  return body_parts_.Get(index);
}
inline ::proto::dota::CP2P_VRAvatarPosition_COrientation* CP2P_VRAvatarPosition::mutable_body_parts(int index) {
  // @@protoc_insertion_point(field_mutable:proto.dota.CP2P_VRAvatarPosition.body_parts)
  return body_parts_.Mutable(index);
}
inline ::proto::dota::CP2P_VRAvatarPosition_COrientation* CP2P_VRAvatarPosition::add_body_parts() {
  // @@protoc_insertion_point(field_add:proto.dota.CP2P_VRAvatarPosition.body_parts)
  return body_parts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::dota::CP2P_VRAvatarPosition_COrientation >*
CP2P_VRAvatarPosition::mutable_body_parts() {
  // @@protoc_insertion_point(field_mutable_list:proto.dota.CP2P_VRAvatarPosition.body_parts)
  return &body_parts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::dota::CP2P_VRAvatarPosition_COrientation >&
CP2P_VRAvatarPosition::body_parts() const {
  // @@protoc_insertion_point(field_list:proto.dota.CP2P_VRAvatarPosition.body_parts)
  return body_parts_;
}

// optional int32 hat_id = 2;
inline bool CP2P_VRAvatarPosition::has_hat_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CP2P_VRAvatarPosition::set_has_hat_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CP2P_VRAvatarPosition::clear_has_hat_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CP2P_VRAvatarPosition::clear_hat_id() {
  hat_id_ = 0;
  clear_has_hat_id();
}
inline ::google::protobuf::int32 CP2P_VRAvatarPosition::hat_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_VRAvatarPosition.hat_id)
  return hat_id_;
}
inline void CP2P_VRAvatarPosition::set_hat_id(::google::protobuf::int32 value) {
  set_has_hat_id();
  hat_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_VRAvatarPosition.hat_id)
}

// optional int32 scene_id = 3;
inline bool CP2P_VRAvatarPosition::has_scene_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CP2P_VRAvatarPosition::set_has_scene_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CP2P_VRAvatarPosition::clear_has_scene_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CP2P_VRAvatarPosition::clear_scene_id() {
  scene_id_ = 0;
  clear_has_scene_id();
}
inline ::google::protobuf::int32 CP2P_VRAvatarPosition::scene_id() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_VRAvatarPosition.scene_id)
  return scene_id_;
}
inline void CP2P_VRAvatarPosition::set_scene_id(::google::protobuf::int32 value) {
  set_has_scene_id();
  scene_id_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_VRAvatarPosition.scene_id)
}

// optional int32 world_scale = 4;
inline bool CP2P_VRAvatarPosition::has_world_scale() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CP2P_VRAvatarPosition::set_has_world_scale() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CP2P_VRAvatarPosition::clear_has_world_scale() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CP2P_VRAvatarPosition::clear_world_scale() {
  world_scale_ = 0;
  clear_has_world_scale();
}
inline ::google::protobuf::int32 CP2P_VRAvatarPosition::world_scale() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_VRAvatarPosition.world_scale)
  return world_scale_;
}
inline void CP2P_VRAvatarPosition::set_world_scale(::google::protobuf::int32 value) {
  set_has_world_scale();
  world_scale_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_VRAvatarPosition.world_scale)
}

// -------------------------------------------------------------------

// CP2P_WatchSynchronization

// optional int32 demo_tick = 1;
inline bool CP2P_WatchSynchronization::has_demo_tick() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CP2P_WatchSynchronization::set_has_demo_tick() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CP2P_WatchSynchronization::clear_has_demo_tick() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CP2P_WatchSynchronization::clear_demo_tick() {
  demo_tick_ = 0;
  clear_has_demo_tick();
}
inline ::google::protobuf::int32 CP2P_WatchSynchronization::demo_tick() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_WatchSynchronization.demo_tick)
  return demo_tick_;
}
inline void CP2P_WatchSynchronization::set_demo_tick(::google::protobuf::int32 value) {
  set_has_demo_tick();
  demo_tick_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_WatchSynchronization.demo_tick)
}

// optional bool paused = 2;
inline bool CP2P_WatchSynchronization::has_paused() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CP2P_WatchSynchronization::set_has_paused() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CP2P_WatchSynchronization::clear_has_paused() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CP2P_WatchSynchronization::clear_paused() {
  paused_ = false;
  clear_has_paused();
}
inline bool CP2P_WatchSynchronization::paused() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_WatchSynchronization.paused)
  return paused_;
}
inline void CP2P_WatchSynchronization::set_paused(bool value) {
  set_has_paused();
  paused_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_WatchSynchronization.paused)
}

// optional int32 tv_listen_voice_indices = 3;
inline bool CP2P_WatchSynchronization::has_tv_listen_voice_indices() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CP2P_WatchSynchronization::set_has_tv_listen_voice_indices() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CP2P_WatchSynchronization::clear_has_tv_listen_voice_indices() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CP2P_WatchSynchronization::clear_tv_listen_voice_indices() {
  tv_listen_voice_indices_ = 0;
  clear_has_tv_listen_voice_indices();
}
inline ::google::protobuf::int32 CP2P_WatchSynchronization::tv_listen_voice_indices() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_WatchSynchronization.tv_listen_voice_indices)
  return tv_listen_voice_indices_;
}
inline void CP2P_WatchSynchronization::set_tv_listen_voice_indices(::google::protobuf::int32 value) {
  set_has_tv_listen_voice_indices();
  tv_listen_voice_indices_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_WatchSynchronization.tv_listen_voice_indices)
}

// optional int32 dota_spectator_mode = 4;
inline bool CP2P_WatchSynchronization::has_dota_spectator_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CP2P_WatchSynchronization::set_has_dota_spectator_mode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CP2P_WatchSynchronization::clear_has_dota_spectator_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CP2P_WatchSynchronization::clear_dota_spectator_mode() {
  dota_spectator_mode_ = 0;
  clear_has_dota_spectator_mode();
}
inline ::google::protobuf::int32 CP2P_WatchSynchronization::dota_spectator_mode() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_WatchSynchronization.dota_spectator_mode)
  return dota_spectator_mode_;
}
inline void CP2P_WatchSynchronization::set_dota_spectator_mode(::google::protobuf::int32 value) {
  set_has_dota_spectator_mode();
  dota_spectator_mode_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_WatchSynchronization.dota_spectator_mode)
}

// optional int32 dota_spectator_watching_broadcaster = 5;
inline bool CP2P_WatchSynchronization::has_dota_spectator_watching_broadcaster() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CP2P_WatchSynchronization::set_has_dota_spectator_watching_broadcaster() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CP2P_WatchSynchronization::clear_has_dota_spectator_watching_broadcaster() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CP2P_WatchSynchronization::clear_dota_spectator_watching_broadcaster() {
  dota_spectator_watching_broadcaster_ = 0;
  clear_has_dota_spectator_watching_broadcaster();
}
inline ::google::protobuf::int32 CP2P_WatchSynchronization::dota_spectator_watching_broadcaster() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_WatchSynchronization.dota_spectator_watching_broadcaster)
  return dota_spectator_watching_broadcaster_;
}
inline void CP2P_WatchSynchronization::set_dota_spectator_watching_broadcaster(::google::protobuf::int32 value) {
  set_has_dota_spectator_watching_broadcaster();
  dota_spectator_watching_broadcaster_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_WatchSynchronization.dota_spectator_watching_broadcaster)
}

// optional int32 dota_spectator_hero_index = 6;
inline bool CP2P_WatchSynchronization::has_dota_spectator_hero_index() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CP2P_WatchSynchronization::set_has_dota_spectator_hero_index() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CP2P_WatchSynchronization::clear_has_dota_spectator_hero_index() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CP2P_WatchSynchronization::clear_dota_spectator_hero_index() {
  dota_spectator_hero_index_ = 0;
  clear_has_dota_spectator_hero_index();
}
inline ::google::protobuf::int32 CP2P_WatchSynchronization::dota_spectator_hero_index() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_WatchSynchronization.dota_spectator_hero_index)
  return dota_spectator_hero_index_;
}
inline void CP2P_WatchSynchronization::set_dota_spectator_hero_index(::google::protobuf::int32 value) {
  set_has_dota_spectator_hero_index();
  dota_spectator_hero_index_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_WatchSynchronization.dota_spectator_hero_index)
}

// optional int32 dota_spectator_autospeed = 7;
inline bool CP2P_WatchSynchronization::has_dota_spectator_autospeed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CP2P_WatchSynchronization::set_has_dota_spectator_autospeed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CP2P_WatchSynchronization::clear_has_dota_spectator_autospeed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CP2P_WatchSynchronization::clear_dota_spectator_autospeed() {
  dota_spectator_autospeed_ = 0;
  clear_has_dota_spectator_autospeed();
}
inline ::google::protobuf::int32 CP2P_WatchSynchronization::dota_spectator_autospeed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_WatchSynchronization.dota_spectator_autospeed)
  return dota_spectator_autospeed_;
}
inline void CP2P_WatchSynchronization::set_dota_spectator_autospeed(::google::protobuf::int32 value) {
  set_has_dota_spectator_autospeed();
  dota_spectator_autospeed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_WatchSynchronization.dota_spectator_autospeed)
}

// optional int32 dota_replay_speed = 8;
inline bool CP2P_WatchSynchronization::has_dota_replay_speed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CP2P_WatchSynchronization::set_has_dota_replay_speed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CP2P_WatchSynchronization::clear_has_dota_replay_speed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CP2P_WatchSynchronization::clear_dota_replay_speed() {
  dota_replay_speed_ = 0;
  clear_has_dota_replay_speed();
}
inline ::google::protobuf::int32 CP2P_WatchSynchronization::dota_replay_speed() const {
  // @@protoc_insertion_point(field_get:proto.dota.CP2P_WatchSynchronization.dota_replay_speed)
  return dota_replay_speed_;
}
inline void CP2P_WatchSynchronization::set_dota_replay_speed(::google::protobuf::int32 value) {
  set_has_dota_replay_speed();
  dota_replay_speed_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CP2P_WatchSynchronization.dota_replay_speed)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace dota
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::dota::CP2P_Voice_Handler_Flags> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::CP2P_Voice_Handler_Flags>() {
  return ::proto::dota::CP2P_Voice_Handler_Flags_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::P2P_Messages> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::P2P_Messages>() {
  return ::proto::dota::P2P_Messages_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_c_5fpeer2peer_5fnetmessages_2eproto__INCLUDED
