// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: econ_shared_enums.proto

#ifndef PROTOBUF_econ_5fshared_5fenums_2eproto__INCLUDED
#define PROTOBUF_econ_5fshared_5fenums_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto {
namespace dota {
class CMsgGenericResult;
class CMsgGenericResultDefaultTypeInternal;
extern CMsgGenericResultDefaultTypeInternal _CMsgGenericResult_default_instance_;
}  // namespace dota
}  // namespace proto

namespace proto {
namespace dota {

namespace protobuf_econ_5fshared_5fenums_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_econ_5fshared_5fenums_2eproto

enum EGCEconBaseMsg {
  k_EMsgGCGenericResult = 2579
};
bool EGCEconBaseMsg_IsValid(int value);
const EGCEconBaseMsg EGCEconBaseMsg_MIN = k_EMsgGCGenericResult;
const EGCEconBaseMsg EGCEconBaseMsg_MAX = k_EMsgGCGenericResult;
const int EGCEconBaseMsg_ARRAYSIZE = EGCEconBaseMsg_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCEconBaseMsg_descriptor();
inline const ::std::string& EGCEconBaseMsg_Name(EGCEconBaseMsg value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCEconBaseMsg_descriptor(), value);
}
inline bool EGCEconBaseMsg_Parse(
    const ::std::string& name, EGCEconBaseMsg* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCEconBaseMsg>(
    EGCEconBaseMsg_descriptor(), name, value);
}
enum EGCMsgResponse {
  k_EGCMsgResponseOK = 0,
  k_EGCMsgResponseDenied = 1,
  k_EGCMsgResponseServerError = 2,
  k_EGCMsgResponseTimeout = 3,
  k_EGCMsgResponseInvalid = 4,
  k_EGCMsgResponseNoMatch = 5,
  k_EGCMsgResponseUnknownError = 6,
  k_EGCMsgResponseNotLoggedOn = 7,
  k_EGCMsgFailedToCreate = 8
};
bool EGCMsgResponse_IsValid(int value);
const EGCMsgResponse EGCMsgResponse_MIN = k_EGCMsgResponseOK;
const EGCMsgResponse EGCMsgResponse_MAX = k_EGCMsgFailedToCreate;
const int EGCMsgResponse_ARRAYSIZE = EGCMsgResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCMsgResponse_descriptor();
inline const ::std::string& EGCMsgResponse_Name(EGCMsgResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCMsgResponse_descriptor(), value);
}
inline bool EGCMsgResponse_Parse(
    const ::std::string& name, EGCMsgResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCMsgResponse>(
    EGCMsgResponse_descriptor(), name, value);
}
enum EGCPartnerRequestResponse {
  k_EPartnerRequestOK = 1,
  k_EPartnerRequestBadAccount = 2,
  k_EPartnerRequestNotLinked = 3,
  k_EPartnerRequestUnsupportedPartnerType = 4
};
bool EGCPartnerRequestResponse_IsValid(int value);
const EGCPartnerRequestResponse EGCPartnerRequestResponse_MIN = k_EPartnerRequestOK;
const EGCPartnerRequestResponse EGCPartnerRequestResponse_MAX = k_EPartnerRequestUnsupportedPartnerType;
const int EGCPartnerRequestResponse_ARRAYSIZE = EGCPartnerRequestResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCPartnerRequestResponse_descriptor();
inline const ::std::string& EGCPartnerRequestResponse_Name(EGCPartnerRequestResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCPartnerRequestResponse_descriptor(), value);
}
inline bool EGCPartnerRequestResponse_Parse(
    const ::std::string& name, EGCPartnerRequestResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCPartnerRequestResponse>(
    EGCPartnerRequestResponse_descriptor(), name, value);
}
enum EGCMsgUseItemResponse {
  k_EGCMsgUseItemResponse_ItemUsed = 0,
  k_EGCMsgUseItemResponse_GiftNoOtherPlayers = 1,
  k_EGCMsgUseItemResponse_ServerError = 2,
  k_EGCMsgUseItemResponse_MiniGameAlreadyStarted = 3,
  k_EGCMsgUseItemResponse_ItemUsed_ItemsGranted = 4,
  k_EGCMsgUseItemResponse_DropRateBonusAlreadyGranted = 5,
  k_EGCMsgUseItemResponse_NotInLowPriorityPool = 6,
  k_EGCMsgUseItemResponse_NotHighEnoughLevel = 7,
  k_EGCMsgUseItemResponse_EventNotActive = 8,
  k_EGCMsgUseItemResponse_ItemUsed_EventPointsGranted = 9,
  k_EGCMsgUseItemResponse_MissingRequirement = 10,
  k_EGCMsgUseItemResponse_EmoticonUnlock_NoNew = 11,
  k_EGCMsgUseItemResponse_EmoticonUnlock_Complete = 12,
  k_EGCMsgUseItemResponse_ItemUsed_Compendium = 13
};
bool EGCMsgUseItemResponse_IsValid(int value);
const EGCMsgUseItemResponse EGCMsgUseItemResponse_MIN = k_EGCMsgUseItemResponse_ItemUsed;
const EGCMsgUseItemResponse EGCMsgUseItemResponse_MAX = k_EGCMsgUseItemResponse_ItemUsed_Compendium;
const int EGCMsgUseItemResponse_ARRAYSIZE = EGCMsgUseItemResponse_MAX + 1;

const ::google::protobuf::EnumDescriptor* EGCMsgUseItemResponse_descriptor();
inline const ::std::string& EGCMsgUseItemResponse_Name(EGCMsgUseItemResponse value) {
  return ::google::protobuf::internal::NameOfEnum(
    EGCMsgUseItemResponse_descriptor(), value);
}
inline bool EGCMsgUseItemResponse_Parse(
    const ::std::string& name, EGCMsgUseItemResponse* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EGCMsgUseItemResponse>(
    EGCMsgUseItemResponse_descriptor(), name, value);
}
// ===================================================================

class CMsgGenericResult : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.dota.CMsgGenericResult) */ {
 public:
  CMsgGenericResult();
  virtual ~CMsgGenericResult();

  CMsgGenericResult(const CMsgGenericResult& from);

  inline CMsgGenericResult& operator=(const CMsgGenericResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGenericResult& default_instance();

  static inline const CMsgGenericResult* internal_default_instance() {
    return reinterpret_cast<const CMsgGenericResult*>(
               &_CMsgGenericResult_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMsgGenericResult* other);

  // implements Message ----------------------------------------------

  inline CMsgGenericResult* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGenericResult* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGenericResult& from);
  void MergeFrom(const CMsgGenericResult& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGenericResult* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string debug_message = 2;
  bool has_debug_message() const;
  void clear_debug_message();
  static const int kDebugMessageFieldNumber = 2;
  const ::std::string& debug_message() const;
  void set_debug_message(const ::std::string& value);
  #if LANG_CXX11
  void set_debug_message(::std::string&& value);
  #endif
  void set_debug_message(const char* value);
  void set_debug_message(const char* value, size_t size);
  ::std::string* mutable_debug_message();
  ::std::string* release_debug_message();
  void set_allocated_debug_message(::std::string* debug_message);

  // optional uint32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.dota.CMsgGenericResult)
 private:
  void set_has_eresult();
  void clear_has_eresult();
  void set_has_debug_message();
  void clear_has_debug_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr debug_message_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_econ_5fshared_5fenums_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGenericResult

// optional uint32 eresult = 1 [default = 2];
inline bool CMsgGenericResult::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGenericResult::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGenericResult::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGenericResult::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgGenericResult::eresult() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGenericResult.eresult)
  return eresult_;
}
inline void CMsgGenericResult::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGenericResult.eresult)
}

// optional string debug_message = 2;
inline bool CMsgGenericResult::has_debug_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGenericResult::set_has_debug_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGenericResult::clear_has_debug_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGenericResult::clear_debug_message() {
  debug_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_debug_message();
}
inline const ::std::string& CMsgGenericResult::debug_message() const {
  // @@protoc_insertion_point(field_get:proto.dota.CMsgGenericResult.debug_message)
  return debug_message_.GetNoArena();
}
inline void CMsgGenericResult::set_debug_message(const ::std::string& value) {
  set_has_debug_message();
  debug_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.dota.CMsgGenericResult.debug_message)
}
#if LANG_CXX11
inline void CMsgGenericResult::set_debug_message(::std::string&& value) {
  set_has_debug_message();
  debug_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.dota.CMsgGenericResult.debug_message)
}
#endif
inline void CMsgGenericResult::set_debug_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_debug_message();
  debug_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.dota.CMsgGenericResult.debug_message)
}
inline void CMsgGenericResult::set_debug_message(const char* value, size_t size) {
  set_has_debug_message();
  debug_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.dota.CMsgGenericResult.debug_message)
}
inline ::std::string* CMsgGenericResult::mutable_debug_message() {
  set_has_debug_message();
  // @@protoc_insertion_point(field_mutable:proto.dota.CMsgGenericResult.debug_message)
  return debug_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGenericResult::release_debug_message() {
  // @@protoc_insertion_point(field_release:proto.dota.CMsgGenericResult.debug_message)
  clear_has_debug_message();
  return debug_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGenericResult::set_allocated_debug_message(::std::string* debug_message) {
  if (debug_message != NULL) {
    set_has_debug_message();
  } else {
    clear_has_debug_message();
  }
  debug_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), debug_message);
  // @@protoc_insertion_point(field_set_allocated:proto.dota.CMsgGenericResult.debug_message)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


}  // namespace dota
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::dota::EGCEconBaseMsg> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EGCEconBaseMsg>() {
  return ::proto::dota::EGCEconBaseMsg_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EGCMsgResponse> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EGCMsgResponse>() {
  return ::proto::dota::EGCMsgResponse_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EGCPartnerRequestResponse> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EGCPartnerRequestResponse>() {
  return ::proto::dota::EGCPartnerRequestResponse_descriptor();
}
template <> struct is_proto_enum< ::proto::dota::EGCMsgUseItemResponse> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::dota::EGCMsgUseItemResponse>() {
  return ::proto::dota::EGCMsgUseItemResponse_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_econ_5fshared_5fenums_2eproto__INCLUDED
